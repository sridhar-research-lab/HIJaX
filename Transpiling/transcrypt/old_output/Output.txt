sorted(l,__kwargtrans__({key:function __lambda__(x){return tuple([-int(x[1]),x[0]])}}));
(function(){var __accu0__=[];for(var x of str(num))__accu0__.append(int(x));return __accu0__})();
np.array(x._data).reshape(x.size.__getslice__(0,null,-1)).T;
itertools.combinations;
pygame.display.flip();
print(function(){var __accu0__=[];for(var i=0;i<len(l);i++)for(var n=1;n<len(l)-i+1;n++)__accu0__.append(l.__getslice__(i,i+n,1));return __accu0__}());
max(min(my_value,max_value),min_value);
pd.get_dummies(df);
(function(){var __accu0__=[];for(var x of elements)__accu0__.append(x[1]);return __accu0__})();
root.mainloop();
(function(){var __accu0__=[];for(var [i,e]of enumerate(a))if(e!=0)__accu0__.append(i);return __accu0__})();
max(a_list,__kwargtrans__({key:operator.itemgetter(1)}));
(function(){var __accu0__=[];for(var item of a)if(item[0]==1)__accu0__.append(item);return __accu0__})();
(function(){var __accu0__=[];for(var i of tuple([1,2,5]))__accu0__.append(a[i]);return __accu0__})();
sum(function(){var __accu0__=[];for(var v of food_colors.py_values())__accu0__.append(len(v));return py_iter(__accu0__)}());
plt.show();
plt.show();
plt.show();
[[[4,4,4],[4,4,4],[4,4,4]],[[4],[4],[4]]];
sorted(list(myDict.py_items()),__kwargtrans__({key:function __lambda__(e){return e[1][2]}}));
sorted(list(tag_weight.py_items()),__kwargtrans__({key:function __lambda__(x){return int(x[1])},reverse:true}));
max(flatlist,__kwargtrans__({key:function __lambda__(x){return x[1]}}));
df.py_sort(__kwargtrans__({axis:1,ascending:false}));
(function(){var __accu0__=[];for(var [i,j]of zip(a,b))if(i==j)__accu0__.append(i);return __accu0__})();
conn.commit();
sorted(list_of_tuples,__kwargtrans__({key:function __lambda__(tup){return tup[1]}}));
datetime.datetime.now()-datetime.timedelta(__kwargtrans__({days:1}));
(function(){var __accu0__=[];for(var d of L)for(var [k,v]of list(d.py_items()))__accu0__.append([k,v]);return dict(__accu0__)})();
a.py_sort(__kwargtrans__({key:function __lambda__(x){return b.index(x[0])}}));
instance.__class__.__name__;
sorted(list(data.py_items()),__kwargtrans__({key:function __lambda__(x){return x[1]}}));
f.close();
datetime.datetime.now().date();
numpy.array([[0,1,0],[0,0,0],[0,0,0]]);
(function(){var __accu0__=[];for(var i of a)__accu0__.append(i[0]);return __accu0__})();
sorted(list(data.py_items()),__kwargtrans__({key:function __lambda__(x){return x[1][0]}}));
sorted(a,__kwargtrans__({key:foo}));
ax.plot_trisurf(XS,YS,ZS);
map(dict,zip(...function(){var __accu0__=[];for(var [k,value]of list(d.py_items()))__accu0__.append(function(){var __accu1__=[];for(var v of value)__accu1__.append(tuple([k,v]));return __accu1__}());return __accu0__}()));
datetime.datetime.fromtimestamp(ms/1E3);
SomeModel.objects.filter(__kwargtrans__({id:id})).delete();
print(random.choice(words));
a.py_sort(__kwargtrans__({key:function __lambda__(x_y){return b.index(x_y[0])}}));
zipped.py_sort(__kwargtrans__({key:function __lambda__(t){return t[1]}}));
np.where(a==1);
f.close();
list(itertools.product(...a));
(function(){var __accu0__=[];for(var i of range(0,len(input),n))__accu0__.append(input.__getslice__(i,i+n,1));return __accu0__})();
logging.getLogger().setLevel(logging.DEBUG);
sorted(enumerate(a),__kwargtrans__({key:function __lambda__(x){return x[1]}}));
array([[true,true],[false,false],[false,false],[true,true]],__kwargtrans__({dtype:bool}));
random.sample(list(range(100)),10);
max(function(){var __accu0__=[];for(var [x,y]of zip(py_values.__getslice__(1,null,1),py_values.__getslice__(0,-1,1)))__accu0__.append(abs(x-y));return py_iter(__accu0__)}());
export var A=[[[0,0,0],[0,0,0],[0,0,0]],[[0],[0],[0]]];
df.unstack();
(function(){var __accu0__=[];for(var y of set(function(){var __accu1__=[];for(var x of d)__accu1__.append(tuple(x.py_items()));return py_iter(__accu1__)}()))__accu0__.append(dict(y));return __accu0__})();
sum(d.py_values());
decimal.Decimal(random.randrange(1E4))/100;
root.destroy();
pandas.concat([df1,df2],__kwargtrans__({axis:1}));
(function(){var __accu0__=[];for(var [x,y]of a)if(x==1)__accu0__.append(tuple([x,y]));return __accu0__})();
sorted(py_iter(dict_.py_items()),__kwargtrans__({key:function __lambda__(x){return x[1]}}));
xs.py_sort(__kwargtrans__({key:function __lambda__(s){return len(s)}}));
len(set(mylist))==1;
plt.show();
plt.show();
__init__.py;
(function(){var __accu0__=[];for(var x of s.py_split())__accu0__.append(len(x));return __accu0__})();
(function(){var __accu0__=[];for(var i=0;i<10;i++)__accu0__.append(Math.floor(i/2));return __accu0__})();
sorted(py_iter(result.py_items()),__kwargtrans__({key:function __lambda__(key_value){return key_value[0]}}));
ax.scartter(XS,YS,ZS);
df.py_sort(df.columns,__kwargtrans__({axis:1,ascending:false}));
(function(){var __accu0__=[];for(var [k,v]of a.py_items())__accu0__.append(tuple([k,v]));return __accu0__})();
list(range(9));
L.py_sort(__kwargtrans__({key:operator.itemgetter(1)}));
plt.show();
dict(function(){var __accu0__=[];for(var [k,v]of parent_dict.py_items())if(2<k&&k<4)__accu0__.append(tuple([k,v]));return py_iter(__accu0__)}());
os.path.dirname(os.path.abspath(existGDBPath));
dict(function(){var __accu0__=[];for(var e of lst)__accu0__.append(tuple([e[0],int(e[1])]));return __accu0__}());
df.groupby(__kwargtrans__({level:[0,1]})).median();
plt.show();
my_list.__getslice__(-10,null,1);
all(function(){var __accu0__=[];for(var x of lst)__accu0__.append(isinstance(x,int));return py_iter(__accu0__)}());
(function(){var __accu0__=[];for(var j=0;j<x.shape[1];j++)__accu0__.append(function(){var __accu1__=[];for(var i=0;i<X.shape[0];i++)__accu1__.append(X.__getitem__([i,j]));return __accu1__}());return __accu0__})();
fh1.seek(2);
tuple([tuple([i+1,j]),tuple([i-1,j]),tuple([i,j-1]),tuple([i,j+1]),tuple([i+1,j-1]),tuple([i+1,j+1])]);
(function(){var __accu0__=[];for(var i=0;i<x.shape[0];i++)__accu0__.append(function(){var __accu1__=[];for(var j=0;j<X.shape[1];j++)__accu1__.append(X.__getitem__([i,j]));return __accu1__}());return __accu0__})();
[tuple([0,4]),tuple([7,9]),tuple([11,11])];
(function(){var __accu0__=[];for(var [y,x]of sorted(zip(Y,X)))__accu0__.append(x);return __accu0__})();
myFunc(function __lambda__(a,b){return iadd(a,b)});
plt.gca().invert_yaxis();
numpy.where(mask);
sorted(list(dictionary.py_items()),__kwargtrans__({key:function __lambda__(x){return x[1]}}));
numpy.array(function(){var __accu0__=[];for(var x of b)__accu0__.append(__in__(x,a));return __accu0__}());
p.stdin.flush();
dict(function(){var __accu0__=[];for(var [k,v]of zip(py_keys,py_values))__accu0__.append(tuple([k,v]));return __accu0__}());
plt.show();
np.outer(a,b);
(function(){var __accu0__=[];for(var x of G)__accu0__.append(x[0]);return __accu0__})();
export var X_train=scaler.fit(X_train).transform(X_train);
os.kill(process.pid,signal.SIGKILL);
dict(function(){var __accu0__=[];for(var [k,v]of zip(py_keys,py_values))__accu0__.append(tuple([k,v]));return py_iter(__accu0__)}());
(function(){var __accu0__=[];for(var item of set(function(){var __accu1__=[];for(var item of L)__accu1__.append(frozenset(item));return py_iter(__accu1__)}()))__accu0__.append(set(item));return __accu0__})();
x.__getitem__([np.arange(x.shape[0])!=1,tuple([0,null,1]),tuple([0,null,1])]);
plt.show();
tuple([tuple([i+1,j]),tuple([i-1,j]),tuple([i,j-1]),tuple([i,j+1]),tuple([i-1,j-1]),tuple([i+1,j-1])]);
(function(){var __accu0__=[];for(var [i,j]of list(d.py_items()))__accu0__.append(tuple([i,sum(j)/len(j)]));return __accu0__})();
dogtail.rawinput.click(100,100);
sorted(d,__kwargtrans__({key:function __lambda__(k){return d[k][1]}}));
(function(){var __accu0__=[];for(var item of a)if(__in__(1,item))__accu0__.append(item);return __accu0__})();
session.query(Entry).join(Entry.tags).filter(Tag.id==1).count();
list(d.py_values());
(function(){var __accu0__=[];for(var x of L)__accu0__.append(x[1]);return __accu0__})();
df.div(df.sum(__kwargtrans__({axis:1})),__kwargtrans__({axis:0}));
sum(your_list);
var __left0__=np.random.randint(20,__kwargtrans__({size:tuple([2,100])}))+np.random.rand(2,100);export var x=__left0__[0];export var y=__left0__[1];
(function(){var __accu0__=[];for(var i of data)__accu0__.append(sum(function(){var __accu1__=[];for(var x of i)__accu1__.append(x[1]);return __accu1__}()));return __accu0__})();
(function(){var __accu0__=[];for(var [k,v]of i.py_items())if(v==0)__accu0__.append(k);return __accu0__})();
dataList.py_sort(__kwargtrans__({key:function __lambda__(x){return x[1]}}));
plt.show();
sum(function(){var __accu0__=[];for(var [x,y]of list(zip(a,b)))__accu0__.append(x*y);return py_iter(__accu0__)}());
export var p=subprocess.Popen(cmd,__kwargtrans__({stdout:sys.stdout,stderr:sys.stderr}));
HttpResponse(__kwargtrans__({status:204}));
df.apply(function __lambda__(x){return x.tolist()},__kwargtrans__({axis:1}));
list.py_sort();
(function(){var __accu0__=[];for(var x of bin(8).__getslice__(2,null,1))__accu0__.append(int(x));return __accu0__})();
df.apply(function __lambda__(row){return label_race(row)},__kwargtrans__({axis:1}));
sorted(list_of_tuples,__kwargtrans__({key:function __lambda__(tup){return tup.__getslice__(0,null,-1)}}));
plt.show();
(function(){var __accu0__=[];for(var x of py_items)if(x[2]==0)__accu0__.append(x);return __accu0__})();
os.path.py_split(os.path.abspath(existGDBPath));
l.py_sort(__kwargtrans__({key:alphanum_key}));
export var C=function(){var __accu0__=[];for(var [a,b]of zip(A,B))__accu0__.append(a-b);return __accu0__}();
(function(){var __accu0__=[];for(var x of l)if(x[1]==1)__accu0__.append(x);return __accu0__})();
df[~df.index.duplicated()];
export var b=function(){var __accu0__=[];for(var i of range(0,len(a),2))__accu0__.append([a[i],a[i+1]]);return dict(__accu0__)}();
print(function(){var __accu0__=[];for(var [key,value]of list(d.py_items()))if(value==1)__accu0__.append(key);return __accu0__}());
(function(){var __accu0__=[];for(var i of y)if(y[i]==1)__accu0__.append(i);return __accu0__})();
bar.py_sort(__kwargtrans__({key:function __lambda__(x){return tuple([x.attrb1,x.attrb2])},reverse:true}));
print(soup.get_text());
sock.setsockopt(socket.SOL_SOCKET,socket.SO_REUSEADDR,1);
(function(){var __accu0__=[];for(var i of zip(a,b))for(var j of i)__accu0__.append(j);return __accu0__})();
df.groupby(df.index).sum();
plt.gca().invert_xaxis();
s.groupby(grouper).sum();
[4,5,5,6,6,6];
self.request.url;
logging.basicConfig();
(function(){var __accu0__=[];for(var x of list(dict.py_items()))for(var y of x)__accu0__.append(y);return __accu0__})();
sorted(lst,__kwargtrans__({reverse:true}));
(function(){var __accu0__=[];for(var x of a)if(x!=[1,1])__accu0__.append(x);return __accu0__})();
print(bool(a));
os.path.dirname(os.path.abspath("./P2JSnippets.py"));
sorted(a,__kwargtrans__({key:function __lambda__(x){return tuple([len(x),function(){var __accu0__=[];for(var card of x)__accu0__.append(confrom[card[0]]);return __accu0__}()])}}));
df.sort_values(__kwargtrans__({by:1,ascending:false,axis:1}));
list(itertools.islice(it,0,n,1));
sys.stdout.flush();
plt.show();
array([[1,2],[2,0]]);
py_next(py_iter(list(dict.py_values())));
(function(){var __accu0__=[];for(var x of lol)__accu0__.append([x[1],x]);return dict(__accu0__)})();
plt.show();
a.__setslice__(0,null,null,function(){var __accu0__=[];for(var x of a)if(x!=[1,1])__accu0__.append(x);return __accu0__}());
sorted(mylist,__kwargtrans__({key:function __lambda__(x){return order.index(x[1])}}));
cv2.destroyAllWindows();
matplotlib.pyplot.show();
sum(map(function __lambda__(x){return x*x},l));
sorted(lst,__kwargtrans__({key:function __lambda__(x){return tuple([sum(x.__getslice__(1,null,1)),x[0]])},reverse:true}));
unittest.main();
sorted(item,__kwargtrans__({key:function __lambda__(x){return x.id}}));
np.cumsum(x.__getslice__(0,null,-1)).__getslice__(0,null,-1);
pd.concat([df1,df2],__kwargtrans__({axis:1}));
plot([0,.5],[.5,.5],[.5,.5],[.5,1],[.5,1],[1,1]);
py_keys.py_sort(__kwargtrans__({key:function __lambda__(k){return tuple([k[0],int(k.__getslice__(1,null,1))])}}));
sorted(lst,__kwargtrans__({key:function __lambda__(x){return tuple([x<0,x])}}));
(function(){var __accu0__=[];for(var [k,v]of a.py_items())__accu0__.append(tuple([v,k]));return __accu0__})();
map(sum,zip(...l));
df[(df.iloc.__getitem__([tuple([0,null,1]),tuple([-12,null,1])])==-1).any(__kwargtrans__({axis:1}))];
fig.add_subplot(1,1,1);
print(any(function(){var __accu0__=[];for(var x of b)__accu0__.append(__in__(x,a));return py_iter(__accu0__)}()));
print(function(){var __accu0__=[];for(var [key,value]of d.py_items())if(value==1)__accu0__.append(key);return __accu0__}());
(function(){var __accu0__=[];for(var i of y)if(y[i]>1)__accu0__.append(i);return __accu0__})();
getattr(your_obj,x);
export var new_list=function(){var __accu0__=[];for(var x of my_list)__accu0__.append(x+1);return __accu0__}();
np.sum(a);
sorted(unsorted,__kwargtrans__({key:function __lambda__(element){return tuple([element[1],element[2]])}}));
f.close();
vectorizer.get_feature_names();
pygame.display.py_update();
your_list.py_sort(__kwargtrans__({key:function __lambda__(x){return x.anniversary_score}}));
time.sleep(1);
(function(){var __accu0__=[];for(var i=0;i<len(lst);i++)__accu0__.append(tuple([lst[i],lst2[i]]));return __accu0__})();
(function(){var __accu0__=[];for(var x of os.walk(directory))__accu0__.append(x[0]);return __accu0__})();
all(function(){var __accu0__=[];for(var [i,j]of zip(a,b))__accu0__.append(i<j);return py_iter(__accu0__)}());
export var df=df.reset_index();
sorted(lst,__kwargtrans__({key:function __lambda__(x){return tuple([sum(x.__getslice__(1,null,1)),x[0]])}}));
(function(){var __accu0__=[];for(var item of data)__accu0__.append(sorted(item));return __accu0__})();
print(browser.current_url);
db.session.commit();
sum(function(){var __accu0__=[];for(var [i,j]of enumerate(l,1))__accu0__.append(Math.pow(j,i));return py_iter(__accu0__)}());
pygame.display.py_update();
var b=dict(zip(a.__getslice__(0,null,2),a.__getslice__(1,null,2)));
pd.concat([df,res],__kwargtrans__({axis:1}));
any(np.equal(a,[1,2]).all(1));
datetime.datetime.now().date();
dict(function(){var __accu0__=[];for(var x of py_reversed(myListOfTuples))__accu0__.append(x.__getslice__(1,null,1));return py_iter(__accu0__)}());
(function(){var __accu0__=[];for(var [key,val]of list(myDict.py_items()))if(val!=42)__accu0__.append([key,val]);return dict(__accu0__)})();
(function(){var __accu0__=[];for(var [k,v]of d.py_items())if(v==desired_value)__accu0__.append(k);return __accu0__})();
(function(){var __accu0__=[];for(var i of data)__accu0__.append([sum(function(){var __accu1__=[];for(var x of i)__accu1__.append(x[1]);return __accu1__}())]);return __accu0__})();
np.mean(np.array([old_set,new_set]),__kwargtrans__({axis:0}));
plt.subplots_adjust(__kwargtrans__({top:.5}));
sorted(list_of_medals,__kwargtrans__({key:function __lambda__(x){return tuple([-x[1],x[0]])}}));
plt.show();
self.pushButton.clicked.connect(self.showDial);
dict(function(){var __accu0__=[];for(var i of range(0,len(x),2))__accu0__.append(x.__getslice__(i,i+2,1));return py_iter(__accu0__)}());
df.index.py_values.tolist();
(function(){var __accu0__=[];for(var sublist of lst)__accu0__.append(function(){var __accu1__=[];for(var x of sublist)__accu1__.append(int(x));return __accu1__}());return __accu0__})();
np.diff(arr.__getitem__([tuple([0,null,1]),1]));
func(...args);
data.__getitem__([tuple([0,null,1]),[1,9]]);
(function __lambda__(a,b){return a+b});
df.index.get_level_values(0).unique();
plt.show();
map(int,str(num));
(function(){var __accu0__=[];for(var y of listD)__accu0__.append(function(){var __accu1__=[];for(var x of y)__accu1__.append([x[0]]);return __accu1__}());return __accu0__})();
all(function(){var __accu0__=[];for(var x of lst)__accu0__.append(isinstance(x,int));return py_iter(__accu0__)}());
pd.DataFrame(df.columns[np.argsort(df.py_values)],df.index,np.unique(df.py_values));
df.groupby(df.columns,__kwargtrans__({axis:1})).sum();
ax.set_xticks([]);
arr.__getitem__([tuple([0,null,1]),1]);
array([true,false,false,true],__kwargtrans__({dtype:bool}));
sorted(list(a_dict.py_items()),__kwargtrans__({key:function __lambda__(item){return item[1][1]}}));
dict(function(){var __accu0__=[];for(var d of dicts)for(var [k,v]of list(d.py_items()))__accu0__.append(tuple([k,v]));return py_iter(__accu0__)}());
db.commit();
(function(){var __accu0__=[];for(var x of my_list)if(!any(function(){var __accu1__=[];for(var c of x)__accu1__.append(c.isdigit());return py_iter(__accu1__)}()))__accu0__.append(x);return __accu0__})();
arr[arr!=0].min();
os.chdir(os.path.dirname("./P2JSnippets.py"));
df.head();
pd.concat([students,pd.DataFrame(marks)],__kwargtrans__({axis:1}));
dict(zip(list(range(1,5)),list(range(7,11))));
threading.Thread(__kwargtrans__({target:SudsMove})).start();
zip(...list_of_tuples);
sum(d.py_values());
root.mainloop();
plt.show();
export var myList=function(){var __accu0__=[];for(var i=0;i<10;i++)__accu0__.append(i);return __accu0__}();
plt.show();
deletemy_list.__getslice__(2,6,1);
sys.stdout.flush();
urlfetch.fetch(url,__kwargtrans__({deadline:10*60}));
plt.show();
sys.exit(app.exec_());
export var PROJECT_ROOT=os.path.abspath(os.path.dirname("./P2JSnippets.py"));
plt.show();
root.destroy();
plt.show();
l1.py_sort(__kwargtrans__({key:function __lambda__(x){return int(x[0])}}));
my_list.py_sort(__kwargtrans__({key:function __lambda__(x){return x[1]}}));
br.select_form(__kwargtrans__({nr:0}));
plt.show();
export var thisRDD=sc.parallelize(range(10),2).cache();
time.sleep(5);
plt.show();
pygame.display.set_mode(tuple([0,0]),pygame.FULLSCREEN);
(function(){var __accu0__=[];for(var d of LoD)__accu0__.append(list(d.py_keys()));return __accu0__})();
df.value.astype(str).apply(list).apply(pd.Series).astype(int);
isinstance(s,str);
a[tuple(b)];
plt.show();
(function(){var __accu0__=[];for(var i=0;i<len(listD);i++)__accu0__.append(function(){var __accu1__=[];for(var x of listD[i])__accu1__.append([x[0]]);return __accu1__}());return __accu0__})();
(function(){var __accu0__=[];for(var row of a)__accu0__.append(row[0]);return __accu0__})();
var __left0__=np.random.rand(2,100)*20;var x=__left0__[0];var y=__left0__[1];
var y=str(int(x,16));
s.py_sort(__kwargtrans__({key:operator.itemgetter(1,2)}));
export var driver=webdriver.Firefox();
root.mainloop();
export var instancelist=function(){var __accu0__=[];for(var i=0;i<29;i++)__accu0__.append(MyClass());return __accu0__}();
df.head();
any([true,false,false]);
np.delete(1,1);
ax.xaxis.set_major_locator(MaxNLocator(__kwargtrans__({integer:true})));
(function(){var __accu0__=[];for(var i of lst)__accu0__.append(float(i));return __accu0__})();
(function(){var __accu0__=[];for(var x=0;x<10;x++)__accu0__.append(x*x);return __accu0__})();
var x=numpy.delete(x,0,__kwargtrans__({axis:0}));
(function(){var __accu0__=[];for(var x of a)__accu0__.append(x[0]);return __accu0__})();
plt.show();
max(enumerate(a),__kwargtrans__({key:function __lambda__(x){return x[1]}}))[0];
export var a=function(){var __accu0__=[];for(var x of zip(...a))__accu0__.append(sum(x)/len(x));return __accu0__}();
export var msglist=function(){var __accu0__=[];for(var i of range(0,len(hextotal),4096))__accu0__.append(hextotal.__getslice__(i,i+4096,1));return __accu0__}();
driver.set_window_size(1400,1E3);
os.path.realpath(os.path.join(root,py_name));
list(set(function(){var __accu0__=[];for(var item of L)__accu0__.append(frozenset(item));return py_iter(__accu0__)}()));
var myList=function(){var __accu0__=[];for(var i=0;i<10;i++)if(__mod__(i,2)==0)__accu0__.append(i);return __accu0__}();
vol.extend(tuple([volumeA,volumeB,volumeC]));
export var response=requests.put(url,__kwargtrans__({data:json.dumps(data),headers:headers}));
export var df2=df.reset_index();
pylab.ylim([0,1E3]);
d.stack().groupby(__kwargtrans__({level:0})).apply(pd.Series.value_counts).unstack().fillna(0);
plt.show();
any(function(){var __accu0__=[];for(var item of py_items)__accu0__.append(item[2]==0);return py_iter(__accu0__)}());
dict(function(){var __accu0__=[];for(var [k,v]of map.py_items())__accu0__.append(tuple([v,k]));return py_iter(__accu0__)}());
plt.show();
(function(){var __accu0__=[];for(var i of range(0,len(l),n))__accu0__.append(l.__getslice__(i,i+n,1));return __accu0__})();
Book.objects.filter(__kwargtrans__({author__id:1})).filter(__kwargtrans__({author__id:2}));
(function(){var __accu0__=[];for(var d of dicts)for(var [k,v]of list(d.py_items()))__accu0__.append([k,v]);return dict(__accu0__)})();
(function(){var __accu0__=[];for(var item of my_list)if(1<=item&&item<=5)__accu0__.append(item);return __accu0__})();
pd.DataFrame(d);
sum(my_counter.py_values());
sorted(list(data.py_items()),__kwargtrans__({key:function __lambda__(x){return x[1]}}));
(function(){var __accu0__=[];for(var i=0;i<len(X);i++)__accu0__.append(function(){var __accu1__=[];for(var j=0;j<len(X[i]);j++)__accu1__.append(X[i][j]);return __accu1__}());return __accu0__})();
dict(function(){var __accu0__=[];for(var [k,v]of hand.py_items())if(v)__accu0__.append(tuple([k,v]));return py_iter(__accu0__)}());
sorted(data.py_values());
__init__.py;
getattr(test,a_string);
len(dict_test)+sum(function(){var __accu0__=[];for(var v of dict_test.py_values())__accu0__.append(len(v));return py_iter(__accu0__)}());
(function(){var __accu0__=[];for(var o of my_list)__accu0__.append(o.my_attr);return __accu0__})();
plt.show();
f.close();
(function(){var __accu0__=[];for(var i of x)if(__in__(i,y))__accu0__.append(i);return __accu0__})();
plt.show();
gca().get_lines()[n].get_xydata();
df.loc[(df.loc.__getitem__([tuple([0,null,1]),df.dtypes!=object])!=0).any(1)];
dict(function(){var __accu0__=[];for(var i=0;i<10;i++)__accu0__.append(tuple([i,i*2]));return py_iter(__accu0__)}());
(function(){var __accu0__=[];for(var [x,y]of zip(zip(a,b),c))__accu0__.append(x+tuple(y));return __accu0__})();
(function(){var __accu0__=[];for(var i=0;i<10;i++)__accu0__.append([i,i*2]);return dict(__accu0__)})();
time.mktime(dt.timetuple())+dt.microsecond/1E6;
binascii.a2b_hex(s);
tuple([s.__getslice__(0,null,2),s.__getslice__(1,null,2)]);
plt.show();
(function(){var __accu0__=[];for(var [x1,x2]of zip(List1,List2))__accu0__.append(x1-x2);return __accu0__})();
sorted(unsorted_list,__kwargtrans__({key:function __lambda__(x){return order.py_get(x,-1)}}));
export var myDict=function(){var __accu0__=[];for(var [key,val]of list(myDict.py_items()))if(val!=42)__accu0__.append([key,val]);return dict(__accu0__)}();
(function(){var __accu0__=[];for(var i of range(0,len(l),n))__accu0__.append(l.__getslice__(i,i+n,1));return __accu0__})();
plt.show();
complex(0,1)*np.arange(5);
plt.show();
sorted(trial_list,__kwargtrans__({key:function __lambda__(x){return trial_dict[x]}}));
pd.concat(d,__kwargtrans__({ignore_index:true}));
export var d=function(){var __accu0__=[];for(var [k,v]of list(d.py_items()))if(v>0)__accu0__.append([k,v]);return dict(__accu0__)}();
sys.stdout.flush();
plt.show();
file.close();
self.process.terminate();
plt.show();
np.all(np.all(test,__kwargtrans__({axis:2})),__kwargtrans__({axis:1}));
numpy.ma.array(strided,__kwargtrans__({mask:mask}));
plt.show();
df.mean(__kwargtrans__({axis:1}));
zip(...np.where(a==1));
random.sample(range(1,50),6);
os.path.abspath("./P2JSnippets.py");
plt.show();
var __left0__=map(int,input().py_split());var a=__left0__[0];var b=__left0__[1];
dbb.commit();
sys.exit();
fig.subplots_adjust(__kwargtrans__({wspace:0,hspace:0}));
setattr(self,attr,group);
np.array([complex(0,1)]);
df.index;
session.query(Shots).filter_by(__kwargtrans__({event_id:event_id})).count();
requests.post(url,__kwargtrans__({headers:headers,files:files,data:data}));
requests.py_get(url,__kwargtrans__({verify:true}));
sum(list_of_nums);
export var split_list=function(){var __accu0__=[];for(var i of range(0,len(the_list),n))__accu0__.append(the_list.__getslice__(i,i+n,1));return __accu0__}();
plt.plot(np.unique(x),np.poly1d(np.polyfit(x,y,1))(np.unique(x)));
(function(){var __accu0__=[];for(var i=0;i<len(a);i++)if(a[i]>2)__accu0__.append(i);return __accu0__})();
sum(function(){var __accu0__=[];for(var x of list(food_colors.py_values()))__accu0__.append(len(x));return py_iter(__accu0__)}());
session.query(Shots).filter_by(__kwargtrans__({event_id:event_id}));
numpy.delete(a,index);
plt.show();
plt.show();
var x=numpy.delete(x,2,__kwargtrans__({axis:1}));
(function(){var __accu0__=[];for(var row of A)__accu0__.append(row[1]);return __accu0__})();
sorted(lst,__kwargtrans__({key:function __lambda__(x){return tuple([-sum(x.__getslice__(1,null,1)),x[0]])}}));
np.where(np.diff(arr.__getitem__([tuple([0,null,1]),1])))[0]+1;
win.show();
(function(){var __accu0__=[];for(var [x,y]of zip(myList,myList.__getslice__(1,null,1)))if(y==9)__accu0__.append(tuple([x,y]));return __accu0__})();
sum(function(){var __accu0__=[];for(var x of lists)__accu0__.append(sum(x));return py_iter(__accu0__)}());
sorted(a,__kwargtrans__({key:dict.py_values,reverse:true}));
plt.show();
list(range(10,0,-1));
np.any(np.in1d(a1,a2));
groupby(tags,__kwargtrans__({key:operator.itemgetter(0)}));
var a=sorted(a,__kwargtrans__({key:function __lambda__(x){return x.modified},reverse:true}));
plt.show();
self.axes=self.figure.add_axes([0,0,1,1]);
subprocess.Popen(cmd,__kwargtrans__({stdout:subprocess.PIPE,stderr:subprocess.STDOUT}));
sum(function(){var __accu0__=[];for(var [i,d]of enumerate(x.__getslice__(0,null,-1)))__accu0__.append(d*Math.pow(10,i));return py_iter(__accu0__)}());
export var data=function(){var __accu0__=[];for(var i of range(0,len(line),12))__accu0__.append(line.__getslice__(i,i+12,1));return __accu0__}();
conn.commit();
quadmesh.set_clim(__kwargtrans__({vmin:0,vmax:15}));
A(1)+A(2);
somelist.py_sort(__kwargtrans__({key:function __lambda__(x){return x.resultType}}));
mylist.py_sort();
numpy.concatenate([a,b]);
datetime.datetime.now()+datetime.timedelta(__kwargtrans__({seconds:10}));
dict(function(){var __accu0__=[];for(var [k,v]of parent_dict.py_items())if(k>2&&k<4)__accu0__.append(tuple([k,v]));return py_iter(__accu0__)}());
requests.post(url,__kwargtrans__({headers:headers,data:data,files:files}));
a.__getitem__([[[0,0],[0,0]],[[0,0],[0,0]],[[0,0],[0,0]]]);
cv2.destroyAllWindows();
export var unique_data=function(){var __accu0__=[];for(var x of set(function(){var __accu1__=[];for(var x of testdata)__accu1__.append(tuple(x));return py_iter(__accu1__)}()))__accu0__.append(list(x));return __accu0__}();
unittest.main();
os.walk(directory);
pd.DataFrame(df.py_values-df2.py_values,__kwargtrans__({columns:df.columns}));
var d=dict(function(){var __accu0__=[];for(var [k,v]of d.py_items())if(v>0)__accu0__.append(tuple([k,v]));return py_iter(__accu0__)}());
writer.writerows(A);
pd.concat([df_slcd,signs],__kwargtrans__({axis:1}));
df.apply(function __lambda__(x){return x.fillna(x.mean())},__kwargtrans__({axis:0}));
root.destroy();
time.sleep(1);
np.nonzero(np.any(a,__kwargtrans__({axis:0})))[0];
(function(){var __accu0__=[];for(var x of l1)if(any(function(){var __accu1__=[];for(var y of l2)__accu1__.append(x[0]==y[0]);return py_iter(__accu1__)}()))__accu0__.append(x[0]);return __accu0__})();
sum(d.py_values());
var a=[0]*1E4;
admin.site.register(Blog,BlogAdmin);
plt.show();
sorted(s,__kwargtrans__({key:float}));
gtk.main();
ax.set_ylim(tuple([-10,80]));
np.delete(a,list(range(0,a.shape[1],8)),__kwargtrans__({axis:1}));
plt.show();
plt.show();
df.groupby(df.index.year).sum().head();
a[np.argsort(a.__getitem__([tuple([0,null,1]),1]))];
itertools.permutations([0,0,0,0,1,1,1,1]);
plt.show();
export var l=function(){var __accu0__=[];for(var x of s.py_split())__accu0__.append(int(x));return __accu0__}();
plt.show();
plt.show();
export var desired_array=function(){var __accu0__=[];for(var numeric_string of current_array)__accu0__.append(int(numeric_string));return __accu0__}();
plt.show();
print(x[0],x[1]);
lst.append(map(int,z));
app.run();
jsonify(my_list_of_eqtls);
(function(){var __accu0__=[];for(var [y,x]of sorted(zip(Y,X)))__accu0__.append(x);return __accu0__})();
f.write(g.read());
zip(...sorted(enumerate(a),__kwargtrans__({key:operator.itemgetter(1)})))[0].__getslice__(-2,null,1);
np.array([fnan,pinf,ninf])<0;
print(arr.__getitem__([1,1]));
export var sorted_dict=collections.OrderedDict(sorted(d.py_items()));
sorted(zipped,__kwargtrans__({key:function __lambda__(x){return x[1]}}));
ax2.legend(__kwargtrans__({loc:0}));
(function(){var __accu0__=[];for(var elem of a.py_iter())if(elem!==a)__accu0__.append(elem.tag);return __accu0__})();
plt.show();
plt.show();
dict(function(){var __accu0__=[];for(var [k,v]of my_dict.py_items())__accu0__.append(tuple([v,k]));return py_iter(__accu0__)}());
dict(zip(py_keys,zip(...data)));
deletemylist.__getslice__(0,null,1);
list(df.index);
db.close();
root.mainloop();
plt.show();
root.mainloop();
export var root=tk.Tk();
export var f=function __lambda__(x,y){return x+y};
(function(){var __accu0__=[];for(var x of zip(...l))__accu0__.append(sum(x));return __accu0__})();
print(function(){var __accu0__=[];for(var key of d)if(d[key]==1)__accu0__.append(key);return __accu0__}());
app.run();
photo.put();
plt.show();
var x=x[~numpy.isnan(x)];
np.sqrt(Math.pow(A-B,2).sum(-1));
app.run();
plt.show();
platform.system();
(function(){var __accu0__=[];for(var [a,[b,c]]of l)__accu0__.append(tuple([a,b,c]));return __accu0__})();
a.index(max(a));
plt.show();
list(set(listA)&set(listB));
(function(){var __accu0__=[];for(var i of a)if(i.isdigit())__accu0__.append(i);return __accu0__})();
os.system(command);
plt.show();
(function(){var __accu0__=[];for(var tup of A)__accu0__.append(tup[0]);return __accu0__})();
plt.show();
plt.show();
list(itertools.combinations(a,2));
ax.xaxis.tick_top();
json.dumps(your_data,__kwargtrans__({ensure_ascii:false}));
export var bigram_measures=nltk.collocations.BigramAssocMeasures();
plt.show();
writer.writerow(A);
d.apply(pd.Series.value_counts,__kwargtrans__({axis:1})).fillna(0);
sparse.coo_matrix(tuple([[6],tuple([[5],[7]])]),__kwargtrans__({shape:tuple([10,10])}));
export var B=np.reshape(A,tuple([-1,2]));
writer.writerow([item[0],item[1],item[2]]);
root.lift();
numpy.where(x==x.min());
plt.show();
export var py_values=np.array(function(){var __accu0__=[];for(var i=0;i<100;i++)__accu0__.append(i);return __accu0__}(),__kwargtrans__({dtype:np.float64}));
plt.show();
list(zip(a,b));
mercury(1,1,2);
export var cleaned_list=function(){var __accu0__=[];for(var x of some_list)if(x!==thing)__accu0__.append(x);return __accu0__}();
list(itertools.product(...arrays));
np.dot(np.atleast_2d(a).T,np.atleast_2d(b));
(function(){var __accu0__=[];for(var t of set(function(){var __accu1__=[];for(var d of l)__accu1__.append(tuple(d.py_items()));return __accu1__}()))__accu0__.append(dict(t));return __accu0__})();
df.py_values.tolist();
cur.execute(sql,list(d.py_values()));
sum([true,true,false,false,false,true]);
plt.show();
plt.show();
plt.show();
[[0,-1,-2],[1,0,-1],[2,1,0]];
np.sqrt(tangent.__getitem__([tuple([0,null,1]),0])*tangent.__getitem__([tuple([0,null,1]),0])+tangent.__getitem__([tuple([0,null,1]),1])*tangent.__getitem__([tuple([0,null,1]),1]));
pd.to_datetime(pd.Series(date_stngs));
sorted(list(y.py_items()),__kwargtrans__({key:function __lambda__(x){return tuple([x[1],x[0]])},reverse:true}));
(function(){var __accu0__=[];for(var i of set(function(){var __accu1__=[];for(var i of testdata)__accu1__.append(tuple(i));return py_iter(__accu1__)}()))__accu0__.append(list(i));return __accu0__})();
plt.show();
numpy.array(function(){var __accu0__=[];for(var [key,val]of result.py_items())__accu0__.append([key,val]);return __accu0__}(),dtype);
window.destroy();
matplotlib.pyplot.show();
var driver=webdriver.PhantomJS();
df.py_values.flatten();
multiprocessing.Process(__kwargtrans__({target:foo,args:tuple([x])})).start();
dict(function(){var __accu0__=[];for(var [k,v]of parent_dict.py_items())if(2<k&&k<4)__accu0__.append(tuple([k,v]));return py_iter(__accu0__)}());
sum(df.apply(function __lambda__(x){return sum(x.isnull().py_values)},__kwargtrans__({axis:1}))>0);
numpy.array(function(){var __accu0__=[];for(var [key,val]of result.py_items())__accu0__.append(tuple([key,val]));return __accu0__}(),dtype);
plt.show();
datetime.date(2010,6,16).isocalendar()[1];
df.isnull().py_values.any();
pd.concat([x]*5);
sorted(a,__kwargtrans__({key:function __lambda__(i){return list(i.py_values())[0]},reverse:true}));
print(func.__name__);
(function(){var __accu0__=[];for(var x of lst)if(fn(x)!=0)__accu0__.append(x);return __accu0__})();
list(itertools.chain(...a));
Book.objects.create(__kwargtrans__(d));
var x=function(){var __accu0__=[];for(var i of x.py_split())__accu0__.append(int(i));return __accu0__}();
pd.concat([distancesDF,datesDF.dates],__kwargtrans__({axis:1}));
img.show();
ax.set_ylim(0,5);
export var mypred=myplsda.predict(Xdata);
plt.show();
pd.concat(function(){var __accu0__=[];for(var l of my_list)__accu0__.append(pd.DataFrame(l));return __accu0__}(),__kwargtrans__({axis:1})).T;
(function(){var __accu0__=[];for(var sublist of lst)__accu0__.append(map(int,sublist));return __accu0__})();
plt.show();
print(list(itertools.chain.from_iterable(a)));
(function(){var __accu0__=[];for(var x of zip(...sorted(zip(list1,list2),__kwargtrans__({key:function __lambda__(pair){return pair[0]}}))))__accu0__.append(list(x));return __accu0__})();
sorted(unsorted_list,__kwargtrans__({key:presorted_list.index}));
M.sum(__kwargtrans__({axis:0})).sum(__kwargtrans__({axis:0}));
sorted(list(range(len(a))),__kwargtrans__({key:function __lambda__(i){return a[i]},reverse:true})).__getslice__(0,2,1);
(function(){var __accu0__=[];for(var pair of zip(a,b.__getslice__(0,null,-1)))for(var value of pair)__accu0__.append(value);return __accu0__})();
app.run();
grouped.filter(function __lambda__(x){return len(x)>1});
(function(){var __accu0__=[];for(var x=0;x<10;x++)__accu0__.append(function __lambda__(x){return x*x}(x));return __accu0__})();
app.run();
sorted(list(d.py_items()),__kwargtrans__({key:function __lambda__(k_v){return k_v[1]}}));
yourdatetime.date()==datetime.today().date();
df.groupby(df.index.map(function __lambda__(t){return t.minute}));
plt.show();
self.showMaximized();
(function(){var __accu0__=[];for(var [i,j]of zip(lst,lst2))__accu0__.append(tuple([i,j]));return __accu0__})();
export var result=function(){var __accu0__=[];for(var x of list_a)if(__in__(x[0],list_b))__accu0__.append(x);return __accu0__}();
conn.commit();
np.where(out.ravel())[0];
df.round();
a[np.all(a!=0,__kwargtrans__({axis:1}))];
(function(){var __accu0__=[];for(var x of l2)for(var y of l1)__accu0__.append(x+y);return __accu0__})();
A.__getitem__([np.random.randint(A.shape[0],__kwargtrans__({size:2})),tuple([0,null,1])]);
plt.show();
pd.concat([a,b],__kwargtrans__({ignore_index:true}));
table.py_sort(__kwargtrans__({key:function __lambda__(t){return t.points}}));
df.iloc.__getitem__([tuple([0,null,1]),np.r_.__getitem__([tuple([1,10,1]),15,17,tuple([50,100,1])])]);
foo();
(function(){var __accu0__=[];for(var item of queryresult)__accu0__.append(item[0]);return __accu0__})();
plt.show();
(function(){var __accu0__=[];for(var [a,b]of zip(lista,listb))__accu0__.append(a*b);return __accu0__})();
array([[0,0],[1,1],[2,2]]);
server.serve_forever();
numpy.nonzero(m.mask);
export var n=int(input());
Motifs.append(Motif);
range(10,0,-1);
export var res_list=function(){var __accu0__=[];for(var x of rows)__accu0__.append(x[0]);return __accu0__}();
plt.show();
plt.show();
(function(){var __accu0__=[];for(var [a,b]of zip(...x))__accu0__.append(max(len(a),len(b)));return __accu0__})();
zip(list(range(10)),list(range(10,0,-1)));
df.groupby(__kwargtrans__({level:0,axis:1})).mean();
time.sleep(5);
(function(){var __accu0__=[];for(var [k,v]of list(hand.py_items()))if(v)__accu0__.append([k,v]);return dict(__accu0__)})();
duck.quack();
py_next(function(){var __accu0__=[];for(var [idx,[x,y]]of enumerate(zip(list1,list2)))if(x!=y)__accu0__.append(tuple([idx,x,y]));return py_iter(__accu0__)}());
pd.concat([x]*5,__kwargtrans__({ignore_index:true}));
my_string.splitlines()[0];
dfts.groupby(function __lambda__(x){return x.month}).mean();
(a.T*b).T;
(function(){var __accu0__=[];for(var item of lst)for(var [key,value]of list(my_dict.py_items()))if(__in__(item,value))__accu0__.append(key);return __accu0__})();
pd.read_json(elevations);
plt.show();
hash(pformat(a))==hash(pformat(b));
np.all(a==a.__getitem__([0,tuple([0,null,1])]),__kwargtrans__({axis:0}));
plt.show();
plt.show();
var df2=pd.DataFrame(__kwargtrans__({index:df1.index}));
export var listofzeros=[0]*n;
(function(){var __accu0__=[];for(var s of function(){var __accu1__=[];for(var x=0;x<12;x++)__accu1__.append(square(x));return py_iter(__accu1__)}())if(s>50)__accu0__.append(s);return __accu0__})();
sys.exit(0);
plt.show();
(function(){var __accu0__=[];for(var i of range(0,len(arr),4))__accu0__.append(max(function(){var __accu1__=[];for(var x of arr.__getslice__(i,i+4,1))__accu1__.append(abs(x));return py_iter(__accu1__)}()));return __accu0__})();
sys.exit();
plt.show();
plt.show();
export var s=sorted(s,__kwargtrans__({key:function __lambda__(x){return tuple([x[1],x[2]])}}));
var df=df.reset_index();
plt.show();
(function(){var __accu0__=[];for(var s of example.py_split())__accu0__.append(sum(map(int,s)));return __accu0__})();
plt.show();
var response=requests.py_get(url,__kwargtrans__({headers:HEADERS}));
any(function(){var __accu0__=[];for(var e of lelist)__accu0__.append(__in__(e,lestring));return py_iter(__accu0__)}());
plt.show();
Blog.objects.filter(__kwargtrans__({pk__in:[1,4,7]}));
self.canvas.create_image(0,0,__kwargtrans__({image:image1,anchor:NW}));
plt.show();
root.mainloop();
export var last=len(s)-s.__getslice__(0,null,-1).index(x)-1;
export var py_items=function(){var __accu0__=[];for(var item of container)if(item.attribute==value)__accu0__.append(item);return __accu0__}();
pd.concat(map(pd.DataFrame,py_iter(d.py_values())),__kwargtrans__({py_keys:list(d.py_keys())})).stack().unstack(0);
df.sort_index(__kwargtrans__({ascending:false}));
datetime.timedelta(-1,86100).total_seconds();
sorted(list(d.py_items()),__kwargtrans__({key:function __lambda__(k_v){return k_v[1]},reverse:true}));
fig.add_subplot(111);
plt.show();
(function(){var __accu0__=[];for(var [x,y]of zip(L,L.__getslice__(1,null,1)))__accu0__.append(y-x);return __accu0__})();
(function(){var __accu0__=[];for(var c of Cards)for(var b of c)for(var a of b)__accu0__.append(a);return __accu0__})();
plt.show();
export var rows=session.query(Congress).count();
(function(){var __accu0__=[];for(var i of zip(a,b))for(var j of i)__accu0__.append(j);return __accu0__})();
pd.concat(tuple([df1,df2]),__kwargtrans__({axis:1})).mean(__kwargtrans__({axis:1}));
export var new_dict=function(){var __accu0__=[];for(var [k,v]of zip(py_keys,py_values))__accu0__.append([k,v]);return dict(__accu0__)}();
map(function __lambda__(x){return max(x,__kwargtrans__({key:function __lambda__(y){return y[1]}}))},lists);
list_.py_sort(__kwargtrans__({key:function __lambda__(x){return[x[0],len(x[1]),x[1]]}}));
py_next(function(){var __accu0__=[];for(var [key,value]of list(c.py_items()))if(value>1)__accu0__.append(tuple([key,value]));return py_iter(__accu0__)}());
df.loc[df.index<start_remove|df.index>end_remove];
sorted(s,__kwargtrans__({key:str.lower}));
np.linalg.solve(np.dot(a.T,a),np.dot(a.T,b));
os.chdir(path);
(function(){var __accu0__=[];for(var x of regex.findall(filename))__accu0__.append(int(x));return __accu0__})();
zip(...l);
A.__getitem__([tuple([0,null,1]),tuple([-2,null,1])]);
plt.show();
dict(function(){var __accu0__=[];for(var k of d2)__accu0__.append(tuple([k,float(d2[k])/d1[k]]));return py_iter(__accu0__)}());
a.append(b).reset_index(__kwargtrans__({drop:true}));
print(np.array(list(mystr),__kwargtrans__({dtype:int})));
ax.get_yaxis().set_ticklabels([]);
plt.show();
dict(zip(l.__getslice__(0,null,2),l.__getslice__(1,null,2)));
dfts.groupby(function __lambda__(x){return x.year}).std();
root.destroy();
(function(){var __accu0__=[];for(var [k,v]of d.py_items())__accu0__.append(tuple([v,k]));return __accu0__})();
(function(){var __accu0__=[];for(var x of list)__accu0__.append(f(x));return __accu0__})();
plt.show();
plt.show();
dict(function(){var __accu0__=[];for(var key of dictList[0])__accu0__.append(tuple([key,sum(function(){var __accu1__=[];for(var d of dictList)__accu1__.append(d[key]);return py_iter(__accu1__)}())]));return py_iter(__accu0__)}());
plt.show();
plt.show();
plt.show();
var x=x[numpy.logical_not(numpy.isnan(x))];
plt.show();
cv2.destroyAllWindows();
any(function(){var __accu0__=[];for(var el of input_list)__accu0__.append(isinstance(el,list));return py_iter(__accu0__)}());
export var json_data=json.loads(json_string);
export var t=sorted(list(a.py_items()),__kwargtrans__({key:function __lambda__(x){return x[1]}}));
func(...args,__kwargtrans__(kwargs));
csvwriter.writerow(row);
var l=function(){var __accu0__=[];for(var y=0;y<4;y++)__accu0__.append(function(){var __accu1__=[];for(var x=0;x<5;x++)__accu1__.append(x);return __accu1__}());return __accu0__}();
(function(){var __accu0__=[];for(var sublist of l)__accu0__.append(function(){var __accu1__=[];for(var [x,y]of sublist)__accu1__.append(y);return __accu1__}());return __accu0__})();
cb.ax.xaxis.set_major_formatter(plt.FuncFormatter(myfmt));
list(range(11,17));
numpy.in1d(b,a);
list(range(1,11));
plt.show();
plt.show();
plt.show();
export var my_dict=function(){var __accu0__=[];for(var x of my_list)__accu0__.append([x[0],x.__getslice__(1,null,1)]);return dict(__accu0__)}();
plt.show();
db.commit();
sum(function(){var __accu0__=[];for(var x of structure)__accu0__.append(x[1]);return py_iter(__accu0__)}());
var result=min(max_value,max(min_value,result));
func(...args);
os.kill(pid,signal.SIGUSR1);
export var parser=argparse.ArgumentParser(__kwargtrans__({allow_abbrev:false}));
(function(){var __accu0__=[];for(var [key,group]of itertools.groupby(data,operator.itemgetter(1)))__accu0__.append(list(group));return __accu0__})();
all(function(){var __accu0__=[];for(var value of list(your_dict.py_values()))__accu0__.append(value==0);return py_iter(__accu0__)}());
plt.show();
sorted(map(list,list(totals.py_items())));
pylab.setp(_self.ax.get_yticklabels(),__kwargtrans__({fontsize:8}));
numpy.dstack(tuple([your_input_array,numpy.zeros(tuple([25,54]))]));
plt.show();
__init__.py;
var new_list=function(){var __accu0__=[];for(var x of Original_List)__accu0__.append(x.py_split()[-1]);return __accu0__}();
min(function(){var __accu0__=[];for(var x of num_list)if(x>2)__accu0__.append(x);return __accu0__}());
pd.concat([good,py_new],__kwargtrans__({axis:0,ignore_index:true}));
plt.show();
print(hex(new_int).__getslice__(2,null,1));
export var max_item=max(a_list,__kwargtrans__({key:operator.itemgetter(1)}));
print(proc.communicate()[0]);
a[a!=0];
dict(my_object);
plt.show();
export var theset=set(function(){var __accu0__=[];for(var k of thedict)__accu0__.append(k.lower());return py_iter(__accu0__)}());
hex(sum(function(){var __accu0__=[];for(var [i,b]of enumerate(py_reversed(walls)))__accu0__.append(b<<i);return py_iter(__accu0__)}()));
my_list==list(range(my_list[0],my_list[-1]+1));
Book.objects.filter(__kwargtrans__({pk:pk})).py_update(__kwargtrans__(d));
print(urllib.request.urlopen(request).read());
(function(){var __accu0__=[];for(var y=0;y<10;y++)__accu0__.append(function(){var __accu1__=[];for(var x=0;x<10;x++)__accu1__.append(Foo());return __accu1__}());return __accu0__})();
yourdatetime.date()<datetime.today().date();
np.concatenate(input_list).ravel().tolist();
km.fit(x.reshape(-1,1));
plt.show();
max(alkaline_earth_values,__kwargtrans__({key:function __lambda__(x){return x[1]}}));
sorted(subjects,operator.itemgetter(0),__kwargtrans__({reverse:true}));
plt.figure(__kwargtrans__({figsize:tuple([1,1])}));
(function(){var __accu0__=[];for(var [x,y]of zip(first,second))__accu0__.append(x+y);return __accu0__})();
Gtk.main();
numpy.array(b).reshape(5,5);
plt.show();
dic.py_setdefault(key,[]).append(value);
var df=pd.DataFrame(np.random.random(tuple([1E3,100])));
plt.show();
var result=function(){var __accu0__=[];for(var b of a)__accu0__.append(sum(b));return __accu0__}();
print(function(){var __accu0__=[];for(var word of words)if(word[0].isupper())__accu0__.append(word);return __accu0__}());
df.loc.__getitem__([tuple([0,null,1]),(df!=0).any(__kwargtrans__({axis:0}))]);
plt.show();
export var today=datetime.datetime.utcnow().date();
s[0].upper()+s.__getslice__(1,null,1);
(function(){var __accu0__=[];for(var y of sorted(function(){var __accu1__=[];for(var x of list(myDict.py_keys()))__accu1__.append(tuple([myDict[x][2],x]));return __accu1__}()))__accu0__.append(y[1]);return __accu0__})();
p1.communicate()[0];
cherrypy.quickstart();
People.objects.all().order_by();
export var list_of_lists=function(){var __accu0__=[];for(var k of list_of_tuples)__accu0__.append(list(k));return __accu0__}();
dict(function(){var __accu0__=[];for(var d of L)for(var pair of list(d.py_items()))__accu0__.append(pair);return py_iter(__accu0__)}());
json.dumps(function(){var __accu0__=[];for(var [k,v]of data.py_items())__accu0__.append([str(k),v]);return dict(__accu0__)}());
sheet.write(1,1,2);
alist.py_sort(__kwargtrans__({key:function __lambda__(x){return x.foo}}));
all(a_list);
plt.show();
plt.show();
plt.show();
unittest.main();
map(list,zip(...main_list));
plt.show();
plt.show();
plt.show();
B[np.argsort(A)]=np.py_sort(B);
np.random.uniform(0,cutoffs[-1]);
(function(){var __accu0__=[];for(var f of br.forms())__accu0__.append(f.py_name);return __accu0__})();
conn.commit();
export var sorted_by_length=sorted(list_,__kwargtrans__({key:function __lambda__(x){return tuple([x[0],len(x[1]),float(x[1])])}}));
self.request.get_all();
np.savez(tmp,...[getarray[0],getarray[1],getarray[8]]);
(function(){var __accu0__=[];for(var [k,v]of sorted(list(mydict.py_items()),__kwargtrans__({key:function __lambda__(k_v){return k_v[1][1]}})))__accu0__.append(k);return __accu0__})();
list(function(){var __accu0__=[];for(var i of zip(list1,list2))__accu0__.append(i[0]==i[1]);return py_iter(__accu0__)}());
plt.show();
(function __lambda__(x,y){return x+y});
print(all(function(){var __accu0__=[];for(var word of words)__accu0__.append(word[0].isupper());return py_iter(__accu0__)}()));
sorted(li,__kwargtrans__({key:operator.itemgetter(1),reverse:true}));
sys.exit(main());
plt.show();
time.sleep(.1);
plt.show();
print(function(){var __accu0__=[];for(var x of list(dict.py_items()))for(var y of x)__accu0__.append(y);return __accu0__}());
(function(){var __accu0__=[];for(var x of list_of_nums)if(x!=2)__accu0__.append(x);return __accu0__})();
pygame.display.flip();
var new_list=function(){var __accu0__=[];for(var x of old_list)__accu0__.append(x.__getslice__(0,null,1));return __accu0__}();
plt.scatter(...zip(...li));
ax.scatter(XS,YS,ZS);
numpy.dot(numpy.dot(a,m),a);
export var randomList=function(){var __accu0__=[];for(var _=0;_<10;_++)__accu0__.append(random.random());return __accu0__}();
(function(){var __accu0__=[];for(var i of np.identity(4))__accu0__.append(a+i.reshape(2,2));return __accu0__})();
plt.show();
plt.show();
plt.show();
self.sock.connect(self.url,__kwargtrans__({header:self.header}));
urllib.request.urlopen(url).read();
Activity.objects.filter(__kwargtrans__({list__topic__user:my_user}));
mylist.py_sort(__kwargtrans__({key:str.lower}));
plt.show();
(function(){var __accu0__=[];for(var [i,j]of list(d.py_items()))__accu0__.append(tuple([i,max(j)]));return __accu0__})();
sum(function(){var __accu0__=[];for(var [i,j]of zip(a,b))__accu0__.append(i*j);return py_iter(__accu0__)}());
ax.contour(x,y,z,levels,__kwargtrans__({cmap:cmap,norm:norm,antialiased:true}));
os.path.join(...x.py_split(os.path.sep).__getslice__(2,null,1));
time.sleep(1);
(function(){var __accu0__=[];for(var [x,y]of zip(a,b))__accu0__.append(x/y);return __accu0__})();
plt.show();
get_client_ip(request);
sorted(list(d.py_items()),__kwargtrans__({key:function __lambda__(x){return tuple([x[1],x[0]])}}));
sum(function(){var __accu0__=[];for(var x of a)__accu0__.append(isinstance(x,int));return py_iter(__accu0__)}());
list(zip(a,b,zip(c.__getslice__(0,null,2),c.__getslice__(1,null,2)),d));
var df=df.reset_index(__kwargtrans__({drop:true}));
plt.show();
var result=function(){var __accu0__=[];for(var [k,v]of list(d1.py_items()))__accu0__.append([k,d2.py_get(v)]);return dict(__accu0__)}();
ssh_client.set_missing_host_key_policy(paramiko.AutoAddPolicy());
plt.cla();
set(d.py_keys());
args[-1]+mySum(args.__getslice__(0,-1,1));
[false,false,true];
plt.show();
threading.Timer(delay,self.py_update).start();
df.columns=df.columns.get_level_values(0);
archive.write(pdffile,os.path.basename(pdffile));
plt.show();
var t=tuple(function(){var __accu0__=[];for(var x of s)__accu0__.append(x[0]);return py_iter(__accu0__)}());
root.mainloop();
plt.show();
new set([new set([car.date_of_manufacture|datetime])]);
export var list_of_tuples=function(){var __accu0__=[];for(var k of list_of_lists)__accu0__.append(tuple(k));return __accu0__}();
x.__getslice__(0,null,-1);
sorted(list(u.py_items()),__kwargtrans__({key:function __lambda__(v){return v[1]}}));
len(set(a))==len(a);
np.dot([1,0,0,1,0,0],[[0,1],[1,1],[1,0],[1,0],[1,1],[0,1]]);
sys.exit();
var a=np.array(a);
print(re.findall(pattern,x));
df.sub(df.mean(__kwargtrans__({axis:1})),__kwargtrans__({axis:0}));
(function(){var __accu0__=[];for(var i of x)for(var j of i)__accu0__.append(j);return __accu0__})();
plt.show();
self.assertEqual(response.status_code,200);
py_next(py_iter(dictionary.py_values()));
os.read(f.fileno(),50);
np.py_split(a,[-1]);
plt.subplots_adjust(__kwargtrans__({wspace:0,hspace:0}));
(function(){var __accu0__=[];for(var s of function(){var __accu1__=[];for(var d of LoD)__accu1__.append(list(d.py_keys()));return __accu1__}())for(var i of s)__accu0__.append(i);return __accu0__})();
self.myList.extend([0]*(4-len(self.myList)));
(function(){var __accu0__=[];for(var i=0;i<5;i++)__accu0__.append([i,i*10]);return __accu0__})();
sorted(list(range(len(a))),__kwargtrans__({key:function __lambda__(i){return a[i]}})).__getslice__(-2,null,1);
random.randint(1E11,999999999999);
(function(){var __accu0__=[];for(var [c,t]of zip(conversions,trials))__accu0__.append(c/t);return __accu0__})();
np.sqrt(np.square(df).sum(__kwargtrans__({axis:1})));
link.click();
(function(){var __accu0__=[];for(var i=0;i<len(x);i++)__accu0__.append(x[i]==y[i]);return __accu0__})();
(function(){var __accu0__=[];for(var t of zip(...list_of_tuples))__accu0__.append(list(t));return __accu0__})();
string[0].isdigit();
[[0,0,0],[1,1,1],[0,0,0]];
np.array([0,pinf,ninf])<0;
(function(){var __accu0__=[];for(var x=0;x<100;x++)__accu0__.append(Math.pow(x,2));return set(__accu0__)})();
connection.commit();
numpy.dstack(numpy.meshgrid(x,y)).reshape(-1,2);
numpy.array(your_list);
(function(){var __accu0__=[];for(var x of rows)__accu0__.append(x[0]);return __accu0__})();
plt.figure(__kwargtrans__({figsize:tuple([8,8])}));
array([true,true,true,true,true,true,true,true,true,true],__kwargtrans__({dtype:bool}));
file.close();
np.apply_along_axis(mahalanobis_sqdist,1,d1,mean1,Sig1);
export var my_array=numpy.array(list(gimme()));
sum(function(){var __accu0__=[];for(var c of string)__accu0__.append(ord(c));return py_iter(__accu0__)}());
sorted(a,__kwargtrans__({key:function __lambda__(x){return x[1]}}));
logging.disable(logging.CRITICAL);
np.cumsum(a.__getslice__(0,null,-1)).__getslice__(0,null,-1)-np.cumsum(a);
sum(function(){var __accu0__=[];for(var i of l)__accu0__.append(i*i);return py_iter(__accu0__)}());
(function(){var __accu0__=[];for(var x of v)__accu0__.append(dict(zip(k,x)));return __accu0__})();
df.drop_duplicates();
urllib.parse.unquote(string);
lista_elegir[np.random.choice(len(lista_elegir),1,__kwargtrans__({p:probabilit}))];
x[[0,1,-2,-1]];
screen.blit(img,tuple([0,0]));
export var random_choice=random.choice(choices);
(now-datetime.datetime(1970,1,1)).total_seconds();
plt.show();
plt.show();
c[np.logical_or(a,b)];
export var my_new_list=zip(my_list.__getslice__(0,null,2),my_list.__getslice__(1,null,2));
(function(){var __accu0__=[];for(var [i,x]of enumerate(lst))__accu0__.append(tuple([x,lst2[i]]));return __accu0__})();
plt.show();
plt.show();
ax.yaxis.set_visible(false);
data[i][j][k];
reverse(str1.__getslice__(1,null,1)+str1[0]);
export var z=function(){var __accu0__=[];for(var [i,j]of zip(x,y))__accu0__.append(i==j);return __accu0__}();
a.__getslice__(-1,null,1)+a.__getslice__(0,-1,1);
plt.show();
self.show();
np.where(np.in1d(A,B))[0];
map(function __lambda__(x){return heapq.nsmallest(x,2)[1]},list_of_lists);
Group.objects.py_get(__kwargtrans__({id:1})).members.all()[0];
plt.show();
driver.current_url;
AtB.loc.__getitem__([tuple([0,2,1]),tuple([0,2,1])]);
plt.show();
pd.get_dummies(s.apply(pd.Series).stack()).sum(__kwargtrans__({level:0}));
itertools.product([false,true],__kwargtrans__({repeat:5}));
(function(){var __accu0__=[];for(var x of a)if(!__in__(x,b))__accu0__.append(x);return __accu0__})();
gtk.main();
np.count_nonzero(~np.isnan(data));
export var length=sum(function(){var __accu0__=[];for(var s of strings)__accu0__.append(len(s));return py_iter(__accu0__)}());
df.iloc.__getitem__([tuple([0,null,1]),[2,5,6,7,8]]);
merged.reset_index();
f.write(makeGrayPNG([[0,255,0],[255,255,255],[0,255,0]]));
var A=np.array(sorted(A,__kwargtrans__({key:tuple})));
os.stat(filename).st_mtime;
plt.show();
(function(){var __accu0__=[];for(var [a,b]of zip(arrA,arrB))__accu0__.append(func(a,b));return __accu0__})();
np.diag(np.rot90(array));
(function __lambda__(a,b){return tuple([a,b])});
set(a).intersection(b);
datetime.datetime.combine(my_date,datetime.time.min);
plt.show();
(function(){var __accu0__=[];for(var [k,v]of list(d.py_items()))__accu0__.append(tuple([v,k]));return __accu0__})();
(function(){var __accu0__=[];for(var i of str_list)__accu0__.append(int(i));return __accu0__})();
sorted(l,__kwargtrans__({key:asum}));
np.array(x).reshape(2,2,4).__getitem__([tuple([0,null,1]),tuple([0,null,1]),0]);
df[df.columns[df.max()>0]];
(function(){var __accu0__=[];for(var y=0;y<height;y++)__accu0__.append([0]*width);return __accu0__})();
ax.legend();
root.mainloop();
fig.canvas.draw();
the_list.py_sort(__kwargtrans__({key:function __lambda__(item){return tuple([-len(item),item])}}));
time.sleep(.5);
export var T=function(){var __accu0__=[];for(var i of Idx)__accu0__.append(L[i]);return __accu0__}();
float(math.factorial(171));
len(set(list1).intersection(list2))>0;
df.index.to_series().diff();
sorted(matrix,__kwargtrans__({key:itemgetter(1)}));
threading.Thread(__kwargtrans__({target:play2})).start();
birthdays.py_sort(__kwargtrans__({key:function __lambda__(d){return tuple([d.month,d.day])}}));
len(set(lst))==len(lst);
len(list(dictionary.py_values()))==len(set(dictionary.py_values()));
plt.show();
(function(){var __accu0__=[];for(var x of words)__accu0__.append(x.lower());return __accu0__})();
df.groupby(key_columns).size();
dict(zip(x,y));
export var str=etree.tostring(root,__kwargtrans__({pretty_print:true}));
print(sum(map(int,x.__getslice__(num-n,num,1))));
f.close();
plt.show();
A[np.ix_([0,2],[0,1],[1,2])];
np.column_stack(np.where(b));
list(accumulate(list(range(10))));
plt.show();
Group.objects.filter(__kwargtrans__({member__in:[1,2]}));
entity.key.id();
plt.show();
sorted(list_of_dct,__kwargtrans__({key:function __lambda__(x){return order.index(list(x.py_values())[0])}}));
var df=df.ix.__getitem__([tuple([0,null,1]),tuple([0,2,1])]);
regex.findall(string);
(function(){var __accu0__=[];for(var y of a)if(!__in__(y,b))__accu0__.append(y);return __accu0__})();
var a=a.__getslice__(0,n,1)+k+a.__getslice__(n,null,1);
var y=function(){var __accu0__=[];for(var i of x)__accu0__.append(i[0]);return __accu0__}();
int(Decimal(s));
plt.scatter(x,y,__kwargtrans__({color:color}));
plt.show();
df.isnull().sum();
py_name[0].firstChild.nodeValue;
list(permutations(list(range(9)),2));
list(range(10));
export var slice=function(){var __accu0__=[];for(var i=0;i<2;i++)__accu0__.append(arr[i].__getslice__(0,2,1));return __accu0__}();
print(repr(data));
(function(){var __accu0__=[];for(var k of list(d1.py_keys())&d2)__accu0__.append([k,d2[k]/d1[k]]);return dict(__accu0__)})();
numpy.py_sort(arr,__kwargtrans__({axis:0}));
cb.ax.yaxis.set_major_formatter(plt.FuncFormatter(myfmt));
plt.show();
print(response.read());
plt.show();
var a=function(){var __accu0__=[];for(var el of a)__accu0__.append(mynamedtuple(...el));return __accu0__}();
element.click();
new set([new set([json.key1])]);
list(itertools.product(list(range(-x,y)),__kwargtrans__({repeat:dim})));
export var redis_conn=redis.Redis(__kwargtrans__({connection_pool:redis_pool}));
do_something();
var a=sorted(a,__kwargtrans__({key:function __lambda__(x){return float(x)}}));
numpy.concatenate(LIST,__kwargtrans__({axis:0}));
any(function(){var __accu0__=[];for(var substring of substring_list)__accu0__.append(__in__(substring,string));return py_iter(__accu0__)}());
np.in1d(b,a).nonzero()[0];
len(myArray);
data.__getitem__([tuple([0,null,1]),[1,2,4,5,7,8]]);
sorted(py_iter(cityPopulation.py_items()),__kwargtrans__({key:function __lambda__(k_v){return k_v[1][2]},reverse:true}));
(function(){var __accu0__=[];for(var innerlist of outerlist)for(var item of innerlist)__accu0__.append(item);return __accu0__})();
plt.show();
a[i]+=1;
pygame.display.set_mode(size,FULLSCREEN);
export var cleaned=function(){var __accu0__=[];for(var x of your_list)if(x)__accu0__.append(x);return __accu0__}();
User.objects.filter(__kwargtrans__({userprofile__level__gte:0}));
var list_of_lists=function(){var __accu0__=[];for(var lst of list_of_lists)__accu0__.append(function(){var __accu1__=[];for(var x of lst)__accu1__.append(try_int(x));return __accu1__}());return __accu0__}();
export var app=Flask(__name__);
ax.set_xticklabels(ax.xaxis.get_majorticklabels(),__kwargtrans__({rotation:45}));
sorted(t,__kwargtrans__({key:function __lambda__(i){return tuple([i[1],-i[2]])}}));
app.run(__kwargtrans__({debug:true}));
export var logger=logging.getLogger(__name__);
pyplot.show();
export var nodes=function(){var __accu0__=[];for(var i=0;i<rows;i++)__accu0__.append(function(){var __accu1__=[];for(var j=0;j<cols;j++)__accu1__.append(Node());return __accu1__}());return __accu0__}();
sys.stdout.flush();
plt.show();
plt.show();
plt.show();
print(function(){var __accu0__=[];for(var v of function(){var __accu1__=[];for(var i=0;i<5;i++)__accu1__.append([i,i]);return __accu1__}())for(var u of v)__accu0__.append(u);return __accu0__}());
sys.stdout.flush();
sorted(itertools.chain(args),cmp);
plt.legend(__kwargtrans__({frameon:false}));
cv2.waitKey(0);
min(myList,__kwargtrans__({key:function __lambda__(x){return abs(x-myNumber)}}));
var __left0__=np.where(a==value);export var i=__left0__[0];export var j=__left0__[1];
export var cookies=driver.get_cookies();
pd.DataFrame(d);
A.__getitem__([[0,1],[0,1]]);
sorted(yourdata,__kwargtrans__({reverse:true}));
pd.DataFrame(df.py_values*df2.py_values,__kwargtrans__({columns:df.columns,index:df.index}));
list(itertools.combinations(L,2));
(function(){var __accu0__=[];for(var item of my_list)if(any(function(){var __accu1__=[];for(var x of bad)__accu1__.append(__in__(x,item));return py_iter(__accu1__)}()))__accu0__.append(item);return __accu0__})();
list(function(){var __accu0__=[];for(var [x,y]of list(zip(a,b)))__accu0__.append(x*y);return py_iter(__accu0__)}());
var b=np.concatenate(tuple([a,a]),__kwargtrans__({axis:0}));
(function(){var __accu0__=[];for(var y of list_of_lists)for(var x of y)__accu0__.append([int(x)]);return __accu0__})();
gtk.main();
var result=sys.stdin.read();
export var res=list(sorted(theDict,__kwargtrans__({key:theDict.__getitem__,reverse:true})));
export var c=function(){var __accu0__=[];for(var i of index)__accu0__.append(b[i]);return __accu0__}();
pickle.loads(s);
figure(__kwargtrans__({figsize:tuple([11.69,8.27])}));
(function(){var __accu0__=[];for(var [k,v]of itertools.groupby(mylist,__kwargtrans__({key:function __lambda__(x){return x.__getslice__(0,5,1)}})))__accu0__.append(list(v));return __accu0__})();
str1.py_split();
legend(__kwargtrans__({numpoints:1}));
root.mainloop();
any(function(){var __accu0__=[];for(var x of search)__accu0__.append(__in__(x,string));return py_iter(__accu0__)}());
df1.groupby([df1.index.year,df1.index.hour]).mean();
len(max(i,__kwargtrans__({key:len})));
sorted(py_iter(d.py_items()),__kwargtrans__({key:function __lambda__(x){return x[1]}}));
plt.show();
var y=map(operator.itemgetter(0),x);
dict(function(){var __accu0__=[];for(var [x,y]of d2.py_items())__accu0__.append(tuple([x,set(y)&set(d1.py_get(x,tuple([])))]));return py_iter(__accu0__)}());
vobj.adr;
np.equal.reduce([1,0,0,1]);
var i=np.array([[0],[1]]);
plt.show();
xs.py_sort(function __lambda__(x,y){return cmp(len(x),len(y))});
df_result.apply(get_col_name,__kwargtrans__({axis:1}));
uinfo.save();
arr.__getitem__([[0,1,1],[1,0,2]]);
set(function(){var __accu0__=[];for(var s of function(){var __accu1__=[];for(var d of LoD)__accu1__.append(list(d.py_keys()));return __accu1__}())for(var i of s)__accu0__.append(i);return __accu0__}());
(function(){var __accu0__=[];for(var b of a)for(var x of b)__accu0__.append(x);return __accu0__})();
sorted(a.py_items())==sorted(b.py_items());
plt.grid(true);
(function(){var __accu0__=[];for(var d of str(bin(x)).__getslice__(2,null,1))__accu0__.append(int(d));return __accu0__})();
Reporter.objects.all().delete();
df.groupby(__kwargtrans__({level:[0,1]})).quantile();
new set([new set([value|safe])]);
(function(){var __accu0__=[];for(var [k,v]of d.py_items())__accu0__.append([k,int(v)]);return dict(__accu0__)})();
df[[1]];
(function(){var __accu0__=[];for(var line of zip(...foo))__accu0__.append(max(function(){var __accu1__=[];for(var x of line)__accu1__.append(len(str(x)));return py_iter(__accu1__)}()));return __accu0__})();
a.fromlist(function(){var __accu0__=[];for(var val of stdin.read().py_split())__accu0__.append(int(val));return __accu0__}());
session.query(Tag).distinct(Tag.py_name).group_by(Tag.py_name).count();
var c=function(){var __accu0__=[];for(var e of a)__accu0__.append(function(){var __accu1__=[];for(var [i,j]of zip(e,b))__accu1__.append(i+j);return __accu1__}());return __accu0__}();
plt.show();
np.corrcoef(x);
(function(){var __accu0__=[];for(var sublist of to_reverse.__getslice__(0,null,-1))__accu0__.append(sublist.__getslice__(0,null,-1));return __accu0__})();
(function(){var __accu0__=[];for(var wi of wordids)__accu0__.append(str(wi));return __accu0__})();
var __left0__=zip(...list(d.py_items()));export var py_keys=__left0__[0];var py_values=__left0__[1];
os.chmod(path,stat.S_IRUSR|stat.S_IRGRP|stat.S_IROTH);
(function(){var __accu0__=[];for(var _=0;_<n;_++)__accu0__.append([]);return __accu0__})();
win.show_all();
cursor.execute(sql,list(myDict.py_values()));
len(s.py_split());
pd.concat([df,df.dictionary.apply(str2dict).apply(pd.Series)],__kwargtrans__({axis:1}));
plt.colorbar(im,__kwargtrans__({ax:ax}));
df.reset_index(__kwargtrans__({inplace:true}));
print(function(){var __accu0__=[];for(var obj of my_list_of_objs)__accu0__.append(obj.attr);return __accu0__}());
dates_dict.py_setdefault(key,[]).append(date);
[[-1,2,0],[0,0,0],[0,2,-1],[-1,-2,0],[0,-2,2],[0,1,0]];
py_next(py_iter(dict.py_values()));
sorted(zip(a,b));
max(function(){var __accu0__=[];for(var word of i)__accu0__.append(len(word));return py_iter(__accu0__)}());
df.to_pickle(file_name);
sock.setsockopt(socket.IPPROTO_TCP,socket.TCP_NODELAY,1);
isinstance(a,dict);
aapl.groupby((aapl.sign.diff()!=0).cumsum()).size();
self.view.header().setModel(model);
np.where((vals==tuple([0,1])).all(__kwargtrans__({axis:1})));
pd.concat([A,B],__kwargtrans__({axis:1}));
root.quit();
sum(map(ord,string));
var l=function(){var __accu0__=[];for(var x of s.py_split())__accu0__.append(int(x));return py_iter(__accu0__)}();
time.sleep(1);
root.mainloop();
datetime.now()-datetime.now();
connection.close();
var msglist=function(){var __accu0__=[];for(var i of range(0,len(hextotal),4096))__accu0__.append(hextotal.__getslice__(i,i+4096,1));return __accu0__}();
text.config(__kwargtrans__({state:DISABLED}));
var new_list=my_list.__getslice__(-10,null,1);
array([[-1,-1],[0,0],[1,1]]);
var y=function(){var __accu0__=[];for(var row of x)__accu0__.append(row.__getslice__(0,null,1));return __accu0__}();
datetime.datetime.combine(dateobject,datetime.time());
mylist.py_sort(__kwargtrans__({key:function __lambda__(x){return x.lower()}}));
plt.show();
sum(function(){var __accu0__=[];for(var [i,j]of zip(a,b))if(i!=j)__accu0__.append(1);return py_iter(__accu0__)}());
sorted(set(my_list));
p.properties()[s].get_value_for_datastore(p);
np.random.randn(5)*10;
db.session.commit();
df.ix.__getslice__(0,-1,1);
Toy.objects.filter(__kwargtrans__({toy_owners__parents:parent}));
export var curry=function __lambda__(f,a){return function __lambda__(x){return f(a,x)}};
A.ravel().__getslice__(A.shape[1]*i,A.shape[1]*(i+A.shape[1]),A.shape[1]+1);
plt.show();
plt.show();
ax.axes.get_yaxis().set_visible(false);
df.stack().groupby(__kwargtrans__({level:0})).first();
sck.setsockopt(socket.SOL_SOCKET,socket.SO_REUSEADDR,1);
sorted(sorted(s),__kwargtrans__({key:str.upper}));
(function(){var __accu0__=[];for(var line of f)__accu0__.append(line.py_split());return __accu0__})();
export var weekly=function(){var __accu0__=[];for(var x of range(0,len(daily),7))__accu0__.append(sum(visitors.__getslice__(x,x+7,1)));return __accu0__}();
plt.show();
plt.show();
print(zip(my_list.__getslice__(0,null,2),my_list.__getslice__(1,null,2)));
file.close();
json.dumps(function(){var __accu0__=[];for(var row of rs)__accu0__.append(dict(list(row.py_items())));return __accu0__}());
(function(){var __accu0__=[];for(var [k,v]of User._fields.py_items())if(v.required)__accu0__.append(k);return __accu0__})();
var d=function(){var __accu0__=[];for(var t of l)__accu0__.append([t[0],t.__getslice__(1,null,1)]);return dict(__accu0__)}();
ax2.set_ylim([0,5]);
sys.exit(0);
browser.submit();
sorted(Profile.objects.all(),__kwargtrans__({key:function __lambda__(p){return p.reputation}}));
writer.writerows(zip(...function(){var __accu0__=[];for(var key of py_keys)__accu0__.append(d[key]);return __accu0__}()));
sum(function(){var __accu0__=[];for(var y of x)if(len(y)>1)__accu0__.append(len(y));return py_iter(__accu0__)}());
var b=np.delete(a,-1,1);
some_func(...params);
app.run();
(25<a&a<100).sum();
sum(function(){var __accu0__=[];for(var [x,y]of zip(a,b))__accu0__.append(x*y);return py_iter(__accu0__)}());
(function(){var __accu0__=[];for(var d of list(foo.py_values()))for(var k of d)__accu0__.append(k);return __accu0__})();
self.assertEqual(response.status_code,200);
float(a)/float(b);
itertools.product(list(range(2)),__kwargtrans__({repeat:4}));
time.sleep(1);
(function(){var __accu0__=[];for(var [k,v]of enumerate(range(10)))if(__mod__(v,2)==0)__accu0__.append([k,v]);return dict(__accu0__)})();
b.py_update(d);
(function(){var __accu0__=[];for(var s of buckets)__accu0__.append(s.__getslice__(0,5,1));return __accu0__})();
a[np.in1d(a,b)];
(function(){var __accu0__=[];for(var x of j)if(x>=5)__accu0__.append(x);return __accu0__})();
var d=pd.DataFrame(0,__kwargtrans__({index:np.arange(len(data)),columns:feature_list}));
sorted(d,__kwargtrans__({key:d.py_get}));
(function(){var __accu0__=[];for(var l of lines)for(var m of[regex.search(l)])if(m)__accu0__.append(m.group(1));return __accu0__})();
sorted(py_iter(mydict.py_items()),__kwargtrans__({key:itemgetter(1),reverse:true}));
export var no_integers=function(){var __accu0__=[];for(var x of mylist)if(!isinstance(x,int))__accu0__.append(x);return __accu0__}();
plt.plot(x,y);
plt.show();
df.iloc.__getitem__([tuple([0,null,1]),[2,5,6,7,8]]).mean(__kwargtrans__({axis:1}));
plt.show();
plt.draw();
tuple(sorted(a.py_items()));
plt.show();
time.sleep(5);
A.__getitem__([np.random.choice(A.shape[0],2,__kwargtrans__({py_replace:false})),tuple([0,null,1])]);
lst.py_sort(__kwargtrans__({key:function __lambda__(x){return x[2]},reverse:true}));
output.append(max(flatlist,__kwargtrans__({key:function __lambda__(x){return x[1]}})));
var y=sorted(set(x),__kwargtrans__({key:function __lambda__(s){return s.lower()}}));
list(itertools.product(...a));
str(n)==str(n).__getslice__(0,null,-1);
export var changed_list=function(){var __accu0__=[];for(var f of original_list)__accu0__.append(f.isdigit()?int(f):f);return __accu0__}();
db.session.commit();
Math.floor(np.arange(len(df.columns))/2);
root.mainloop();
(function(){var __accu0__=[];for(var x=0;x<10;x++)__accu0__.append(function __lambda__(x){return x*x});return __accu0__})();
[1,1,1,10,10,5,5,5,5,5,5];
window.set_position(Gtk.WindowPosition.CENTER);
df.iloc.__getitem__([tuple([0,null,1]),[2,5,6,7,8]]).mean(__kwargtrans__({axis:0}));
np.array(arr.__getitem__([tuple([0,null,1]),1]),__kwargtrans__({dtype:np.float}));
export var mynewlist=list(myset);
time.sleep(10);
reactor.run();
np.array(arr.__getitem__([tuple([0,null,1]),1]));
plt.show();
plt.show();
random.choice(function(){var __accu0__=[];for(var k of d)for(var x of d[k])__accu0__.append(k);return __accu0__}());
session.commit();
zip(...main_list);
(e==np.array([1,2])).all(-1);
plt.show();
logger.setLevel(logging.DEBUG);
random.sample(range(1,50),6);
ssh.close();
var a=a.__getslice__(-1,null,1)+a.__getslice__(0,-1,1);
df.columns[df.max()>0];
df.info();
list_of_tuples[0][0]=7;
export var done=function(){var __accu0__=[];for(var el of[a,b,c,d])__accu0__.append(tuple([el,x]));return __accu0__}();
plt.show();
print(function(){var __accu0__=[];for(var i=1;i<len(l);i++)__accu0__.append([l.__getslice__(0,i,1),l.__getslice__(i,null,1)]);return __accu0__}());
(function(){var __accu0__=[];for(var d of LoD)for(var k of list(d.py_keys()))__accu0__.append(k);return set(__accu0__)})();
sorted(lst,__kwargtrans__({key:function __lambda__(x){return tuple([-1*c[x],lst.index(x)])}}));
networkx.draw_networkx_labels(G,pos,labels);
var x=function(){var __accu0__=[];for(var i of x)__accu0__.append(i[0]);return __accu0__}();
p.terminate();
var b=np.where(np.isnan(a),0,a);
plt.show();
cv2.destroyAllWindows();
webbrowser.open_new(url);
db.session.delete(page);
export var pixmap=QtGui.QPixmap(path);
df[df.applymap(isnumber)];
sum(function(){var __accu0__=[];for(var x of list(d.py_values()))if(some_condition(x))__accu0__.append(1);return py_iter(__accu0__)}());
root.mainloop();
app.exec_();
plt.show();
Group.objects.py_get(__kwargtrans__({id:1})).members.all()[0];
m[~m.mask];
export var matrix=function(){var __accu0__=[];for(var i=0;i<5;i++)__accu0__.append([0]*5);return __accu0__}();
(function(){var __accu0__=[];for(var item of a)if(sum(item)>10)__accu0__.append(item);return __accu0__})();
sorted(list(dictionary.py_items()),__kwargtrans__({key:operator.itemgetter(1)}));
(function(){var __accu0__=[];for(var x of iterable)if(f(x))__accu0__.append(tuple([x,f(x)]));return __accu0__})();
app.run(__kwargtrans__({debug:true}));
glfw.Terminate();
print(select([my_table,func.current_date()]).execute());
element.click();
plt.show();
export var names=list(map(function __lambda__(x){return x[0]},cursor.description));
process.stdin.close();
session.commit();
var a=np.concatenate(tuple([a,[0]]));
app.run(__kwargtrans__({threaded:true}));
pd.concat([df.head(1),df.tail(1)]);
app.debug=true;
model.predict(X_test);
time.sleep(1);
np.flatnonzero(x).mean();
print(template.render());
np.array(list(arr.__getitem__([tuple([0,null,1]),1])),__kwargtrans__({dtype:np.float}));
map(sum,zip(...lists));
CustomPK._meta.pk.py_name;
(function(){var __accu0__=[];for(var _=0;_<n;_++)__accu0__.append(py_next(it));return __accu0__})();
cursor.close();
driver.implicitly_wait(60);
[1,1,0,0,1,0];
df.T.apply(tuple).apply(list);
root.mainloop();
sys.path.insert(0,os.path.dirname(os.path.dirname(os.path.abspath("./P2JSnippets.py"))));
export var reverse_d=function(){var __accu0__=[];for(var [key,py_values]of list(d.py_items()))for(var value of py_values)__accu0__.append([value,key]);return dict(__accu0__)}();
plt.show();
os.remove(filename);
plt.show();
df.reindex_axis(df.mean().sort_values().index,__kwargtrans__({axis:1}));
print(sorted(xs,__kwargtrans__({key:len})));
pdb.set_trace();
df.groupby(__kwargtrans__({by:df.columns,axis:1})).mean();
plt.show();
numpy.apply_along_axis(numpy.linalg.norm,1,a);
myList.__setslice__(0,null,null,function(){var __accu0__=[];for(var x of myList)__accu0__.append(x/myInt);return __accu0__}());
plt.show();
export var str_list=list(function(){var __accu0__=[];for(var _f of str_list)if(_f)__accu0__.append(_f);return __accu0__}());
var df=df.reset_index();
my_list.__getslice__(0,null,1);
export var my_list=function(){var __accu0__=[];for(var sublist of my_list)__accu0__.append(function(){var __accu1__=[];for(var x of sublist)if(!__in__(x,to_del))__accu1__.append(x);return __accu1__}());return __accu0__}();
d.py_setdefault(x,[]).append(foo);
obj.save();
driver.page_source;
list(chain.from_iterable(a));
ForkedPdb().set_trace();
sum(function(){var __accu0__=[];for(var v of list(d.py_values()))if(v>0)__accu0__.append(v);return py_iter(__accu0__)}());
writer.writeheader();
print(max(x,__kwargtrans__({key:sum})));
export var levels=[dict({}),dict({}),dict({})];
plt.show();
plt.show();
export var list_dict=function(){var __accu0__=[];for(var t of tuple_list)__accu0__.append([t[0],t]);return dict(__accu0__)}();
dict(function(){var __accu0__=[];for(var [k,v]of list(dict1.py_items()))if(__in__(k,dict2))__accu0__.append(tuple([k,v*dict2[k]]));return py_iter(__accu0__)}());
math.cos(math.radians(1));
export var sentence=function(){var __accu0__=[];for(var word of sentence)__accu0__.append(word.lower());return __accu0__}();
logger.setLevel(logging.DEBUG);
zip(it,it,it);
(function(){var __accu0__=[];for(var _key of _container)__accu0__.append([_key,_value(_key)]);return dict(__accu0__)})();
(function(){var __accu0__=[];for(var x of list(results.py_values()))__accu0__.append(list(x));return __accu0__})();
cv2.waitKey();
np.where(a[0]==2&a[1]==5);
var data=[[0,0],[0,0],[0,0]];
fig.set_size_inches(w,h,__kwargtrans__({forward:true}));
df.groupby(__kwargtrans__({level:0,as_index:false})).nth(0);
df.iloc.__getitem__([2,0]);
self.buttonBox.button(QtGui.QDialogButtonBox.Reset).clicked.connect(foo);
s.reset_index(0).reset_index(__kwargtrans__({drop:true}));
export var user2=forms.ModelChoiceField(__kwargtrans__({queryset:User.objects.all()}));
con.commit();
plt.show();
export var GRAVITY=9.8;
plt.show();
app.run(__kwargtrans__({debug:true}));
export var args=parser.parse_args();
sock.setsockopt(socket.SOL_SOCKET,socket.SO_REUSEADDR,1);
db.close();
pygame.display.flip();
(function(){var __accu0__=[];for(var [i,v]of enumerate(a))if(v>4)__accu0__.append(i);return __accu0__})();
cv2.waitKey();
(function(){var __accu0__=[];for(var [i,j]of zip(a,x))__accu0__.append(tuple([i,j]));return __accu0__})();
plt.show();
files.py_sort(__kwargtrans__({key:file_number}));
export var sortedlist=function(){var __accu0__=[];for(var k of sorted(a))__accu0__.append(tuple([k,a[k]]));return __accu0__}();
df[pd.isnull(df).any(__kwargtrans__({axis:1}))];
conn.commit();
plt.show();
a.__setslice__(1,null,2,-1);
print(pattern.search(url).group(1));
self.SetSizerAndFit(bsizer);
print(sorted(student_tuples,__kwargtrans__({key:function __lambda__(t){return tuple([-t[2],t[0]])}})));
sum(function(){var __accu0__=[];for(var x of list(d.py_values()))__accu0__.append(x==chosen_value);return py_iter(__accu0__)}());
plt.show();
sum(l)/float(len(l));
process.start();
plt.show();
arr[arr.__getitem__([tuple([0,null,1]),2]).argsort()];
grouped.reset_index(__kwargtrans__({level:0})).reset_index(__kwargtrans__({level:0}));
isinstance(s,str);
plt.show();
arr.__getslice__(-2,2,1);
signal.signal(signal.SIGCHLD,signal.SIG_IGN);
datetime.utcnow()+timedelta(__kwargtrans__({minutes:5}));
(function(){var __accu0__=[];for(var elem of a.py_iter())__accu0__.append(elem.tag);return __accu0__})();
(function(){var __accu0__=[];for(var [x,y]of zip(myList,myList.__getslice__(1,null,1)))if(y==9)__accu0__.append(tuple([x,y]));return __accu0__})();
app.mainloop();
export var tst2=str(tst);
self.root.destroy();
[0,2,4,5];
c[np.logical_and(a,b)];
export var json_string=json.dumps(function(){var __accu0__=[];for(var ob of list_name)__accu0__.append(ob.__dict__);return __accu0__}());
numpy.append(a,a[0]);
win.setWindowFlags(QtCore.Qt.WindowMinimizeButtonHint);
(function(){var __accu0__=[];for(var [i,element]of enumerate(centroids))if(!__in__(i,index))__accu0__.append(element);return __accu0__})();
np.isnan(np.array([np.nan,0],__kwargtrans__({dtype:np.float64})));
os.system(my_cmd);
app.run();
var new_list=function(){var __accu0__=[];for(var key of string_list)__accu0__.append(d[key]);return __accu0__}();
root.mainloop();
os.path.join(root,py_name);
plt.show();
(function(){var __accu0__=[];for(var [key,value]of B.py_items())__accu0__.append(dict([[key,dict(value)]]));return __accu0__})();
plt.show();
pprint(dict(list(o.py_items())));
print(tuple([a,b,c,d]));
plt.show();
pd.concat([d1,df1],__kwargtrans__({axis:1}));
(function(){var __accu0__=[];for(var x of d.py_values())__accu0__.append(set(x));return py_iter(__accu0__)})();
unittest.main();
datetime.datetime(2010,7,26,0,0);
plt.show();
pygame.display.flip();
pd.concat([df2,df1],__kwargtrans__({axis:1}));
sorted(s,__kwargtrans__({key:str.upper}));
(function(){var __accu0__=[];for(var item of my_list)if(some_condition())__accu0__.append(item);return __accu0__})();
my_list.py_pop(2);
export var ordered=OrderedDict(sorted(list(mydict.py_items()),__kwargtrans__({key:function __lambda__(t){return t[0]}})));
datetime.utcnow();
pd.concat([df.__getslice__(0,start_remove,1),df.__getslice__(end_remove,null,1)]);
lines.py_sort();
df.applymap(function __lambda__(x){return isinstance(x,tuple([int,float]))});
server.serve_forever();
ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy());
export var e=py_next(py_iter(s));
py_sort();
(e==np.array([1,2])).all(-1).shape;
app.run(__kwargtrans__({debug:true}));
plt.show();
plt.clf();
deletemy_list[index];
(function(){var __accu0__=[];for(var i=0;i<len(myList);i++)if(myList[i]==9)__accu0__.append(tuple([myList[i-1],myList[i]]));return __accu0__})();
sum(function(){var __accu0__=[];for(var [i,j]of list(itertools.combinations(l,2)))__accu0__.append(i*j);return __accu0__}());
plt.figure();
logging.getLogger().setLevel(logging.DEBUG);
export var new_index=max(0,min(new_index,len(mylist)-1));
sys.hash_info;
text_file.close();
plt.show();
numpy.in1d(b,a).all();
array([true,false,false,true,true,false],__kwargtrans__({dtype:bool}));
(function(){var __accu0__=[];for(var [key,value]of list(my_dict.py_items()))if(set(value).intersection(lst))__accu0__.append(key);return __accu0__})();
sys.stdout.flush();
plt.show();
Book.objects.filter(__kwargtrans__({id:id})).py_update();
zip(...a);
ax.yaxis.set_label_coords(.5,.5);
var __left0__=random.choice(list(d.py_items()));export var country=__left0__[0];export var capital=__left0__[1];
unittest.main();
int(math.ceil(x))-1;
(function(){var __accu0__=[];for(var [d,n]of zip(l1,l2))__accu0__.append(dict(d,__kwargtrans__({count:n})));return __accu0__})();
export var uniques=collections.defaultdict(set);
C/C.astype(np.float).sum(__kwargtrans__({axis:1}));
cv2.waitKey();
export var r=function(){var __accu0__=[];for(var i=0;i<n;i++)__accu0__.append(1);return __accu0__}();
sys.exit(0);
new set([new set([grains.fqdn_ip])]);
sorted(data,__kwargtrans__({key:data.py_get}));
var __left0__=plt.subplots(10,10);export var fig=__left0__[0];export var ax=__left0__[1];
scipy.spatial.distance.euclidean(A,B);
export var subseqs=function(){var __accu0__=[];for(var i=1;i<len(seq)+1;i++)__accu0__.append(seq.__getslice__(0,i,1));return py_iter(__accu0__)}();
proc.terminate();
plt.show();
plt.show();
var d=function(){var __accu0__=[];for(var [[a,b],v]of list(d.py_items()))__accu0__.append([tuple([a.lower(),b]),v]);return dict(__accu0__)}();
s.py_split();
(function(){var __accu0__=[];for(var a of A2)__accu0__.append(np.unravel_index(np.argmin(a),tuple([2,2])));return __accu0__})();
a.insert(0,k);
list(map(list,set(map(function __lambda__(i){return tuple(i)},testdata))));
plt.show();
plt.show();
plt.show();
max(list(MyCount.py_keys()),__kwargtrans__({key:int}));
numpy.fft.fft([1,2,1,0,1,2,1,0]);
var x=map(int,x.py_split());
plt.show();
(function(){var __accu0__=[];for(var k of d2)__accu0__.append([k,float(d2[k])/d1[k]]);return dict(__accu0__)})();
export var woduplicates=list(set(lseperatedOrblist));
a.contains(b);
export var results=Model.objects.filter(__kwargtrans__({x:5})).exclude(__kwargtrans__({a:py_true}));
export var dt=pytz.utc.localize(dt);
print(my_string.__getslice__(0,100,1));
[function __lambda__(x){return function(){var __accu0__=[];for(var x=0;x<10;x++)__accu0__.append(x*x);return py_iter(__accu0__)}()}];
array([0,1,4,5,6,1,7,8,8,1]);
a[np.in1d(a.__getitem__([tuple([0,null,1]),1]),b)];
arr[mask]=arr.__getitem__([np.nonzero(mask)[0],idx[mask]]);
root.mainloop();
export var alpha=img.py_split()[-1];
df.py_sort(__kwargtrans__({inplace:true}));
export var timestamp=(dt-datetime(1970,1,1)).total_seconds();
plt.show();
df.stack();
print_tree(shame);
tuple(zip(...t));
datetime.datetime.fromtimestamp(calendar.timegm(d.timetuple()));
print(response.geturl());
plt.show();
locals()[x];
f.read();
py_next(function(){var __accu0__=[];for(var [i,j]of enumerate(lst))if(j==2)__accu0__.append(i);return py_iter(__accu0__)}(),42);
dict(d);
driver.current_window_handle;
f.close();
df.unstack(__kwargtrans__({level:1}));
np.concatenate(tuple([np.py_sort(a[~np.isnan(a)]).__getslice__(0,null,-1),[np.nan]*np.isnan(a).sum()]));
a.where(~np.isnan(a),__kwargtrans__({other:b,inplace:true}));
f.write(chr(i));
50-list1[0][0]+list1[0][1]-list1[0][2];
(function(){var __accu0__=[];for(var t of zip(list_a,list_b))for(var x of t)__accu0__.append(x);return __accu0__})();
sorted(list(d.py_items()),__kwargtrans__({key:function __lambda__(x){return x.__getslice__(0,null,-1)}}));
plt.show();
plt.show();
plt.show();
df.iloc.__getitem__([tuple([0,null,1]),0]);
random.choice(list(d.py_keys()));
list(set(a).union(b));
export var last_index=len(list1)-1;
var z=zip(x,y);
locals()[x];
var a=list(a);
var A=function(){var __accu0__=[];for(var i of A)if(!__in__(i,B))__accu0__.append(i);return __accu0__}();
unittest.main();
plt.show();
var my_list=function(){var __accu0__=[];for(var item of my_list)if(item.isalpha())__accu0__.append(item);return __accu0__}();
plt.show();
len(re.findall(pattern,string_to_search));
driver.close();
a.__setslice__(0,0,null,k);
(function(){var __accu0__=[];for(var [k,v]of list(my_dict.py_items()))__accu0__.append([k,function(){var __accu1__=[];for(var n of v)__accu1__.append(lookup[n]);return __accu1__}()]);return dict(__accu0__)})();
df.loc.__getitem__([tuple([0,null,1]),cols])/df.loc.__getitem__([ii,cols]).py_values;
np.amin(V,__kwargtrans__({axis:0}));
b.append(c);
setattr(test,attr_name,10);
pg.mixer.init();
zip(...a);
f(...tuple([tuple([1,4]),tuple([2,5])]));
np.array(list(itertools.product([0,1],__kwargtrans__({repeat:Math.pow(n,2)})))).reshape(-1,n,n);
plt.show();
print(etree.tostring(root,__kwargtrans__({pretty_print:true})));
l.py_sort(__kwargtrans__({key:alphanum_key}));
plt.show();
export var tuple_of_tuples=tuple(function(){var __accu0__=[];for(var x of list_of_lists)__accu0__.append(tuple(x));return py_iter(__accu0__)}());
sorted(timestamp,__kwargtrans__({reverse:true}));
export var lst=function(){var __accu0__=[];for(var _=0;_<a;_++)__accu0__.append([]);return __accu0__}();
l.__getslice__(-1,null,1)+l.__getslice__(0,-1,1);
str.isdigit();
unittest.main();
df.apply(pd.Series.nunique,__kwargtrans__({axis:1}));
MyClass().mymethod();
list(joined_dataset.py_values());
plt.show();
MyModel.objects.py_get(__kwargtrans__({id:1})).my_field;
model.fit(X_train,y_train);
df.to_pickle(file_name);
ax1.xaxis.get_major_formatter().set_powerlimits(tuple([0,1]));
sum(function(){var __accu0__=[];for(var i=1;i<len(a);i++)if(a[i-1]*a[i]<0)__accu0__.append(1);return py_iter(__accu0__)}());
plt.show();
plt.show();
plt.show();
getattr(foo,bar)(...params);
(function(){var __accu0__=[];for(var [k,v]of groupby(sorted(d.py_items()),__kwargtrans__({key:itemgetter(0)})))__accu0__.append([k,list(v)]);return dict(__accu0__)})();
a[np.in1d(a.__getitem__([tuple([0,null,1]),2]),list(b))];
export var settime=time.mktime(ftime.timetuple());
print(max(list(d.py_keys()),__kwargtrans__({key:function __lambda__(x){return d[x]}})));
export var deriv_poly=function(){var __accu0__=[];for(var i=1;i<len(poly);i++)__accu0__.append(poly[i]*i);return __accu0__}();
export var ab=function(){var __accu0__=[];for(var i=0;i<len(a);i++)__accu0__.append(a[i]*b[i]);return __accu0__}();
var y=str(int(x,16));
(function(){var __accu0__=[];for(var [i,j]of zip(x.__getslice__(0,null,2),x.__getslice__(1,null,2)))__accu0__.append(i+j);return __accu0__})();
var y=np.cumsum(x);
print(max(d,__kwargtrans__({key:d.py_get})));
multiprocessing.Process.__init__(self);
root.mainloop();
self.submenu2.menuAction().setVisible(false);
y.__getitem__([tuple([0,null,1]),cols]).sum();
(function(){var __accu0__=[];for(var item of sublist)__accu0__.append(function(){var __accu1__=[];for(var sublist of list_of_lists)__accu1__.append(item);return py_iter(__accu1__)}());return __accu0__})();
(function(){var __accu0__=[];for(var i of d)for(var j=0;j<d[i];j++)__accu0__.append(i);return __accu0__})();
writer.writerows(zip(...list(d.py_values())));
sorted(L,__kwargtrans__({key:itemgetter(1),reverse:true}));
var b=a.__getitem__([tuple([0,null,1]),tuple([0,-1,1]),tuple([0,null,1])]);
sum(function(){var __accu0__=[];for(var d of myList)for(var v of d.py_values())__accu0__.append(v[1]);return py_iter(__accu0__)}());
var __left0__=plt.subplots(2,2,__kwargtrans__({figsize:tuple([15,15])}));var f=__left0__[0];export var axs=__left0__[1];
len(s);
print(df.to_string(__kwargtrans__({index:false})));
plt.draw();
ax.scatter(xs,ys,zs,__kwargtrans__({c:cs,marker:m}));
sorted(a,__kwargtrans__({key:function __lambda__(x){return x[1]},reverse:true}));
(function(){var __accu0__=[];for(var sublist of l)for(var [x,y]of sublist)__accu0__.append(y);return __accu0__})();
plt.show();
res.drop_duplicates();
numpy.prod(a);
urlfetch.set_default_fetch_deadline(60);
session.commit();
db.commit();
export var output=function(){var __accu0__=[];for(var word of sent)__accu0__.append([word,len(word),word.upper()]);return __accu0__}();
export var dist=sqrt(Math.pow(x2-x1,2)+Math.pow(y2-y1,2));
np.dot(x,y);
(function(){var __accu0__=[];for(var i=0;i<len(families);i++)__accu0__.append(function(){var __accu1__=[];for(var j of families[i])if(i!=j)__accu1__.append(j);return __accu1__}());return __accu0__})();
export var row=function(){var __accu0__=[];for(var x of row)__accu0__.append(x.strip());return __accu0__}();
(function(){var __accu0__=[];for(var i of e)__accu0__.append(i[0]);return __accu0__})();
array([[1,0,1,1],[0,0,0,0],[1,1,1,0]]);
file.close();
print(soup.prettify());
self.est.fit(X,y);
var a=function(){var __accu0__=[];for(var x=0;x<8;x++)__accu0__.append(function(){var __accu1__=[];for(var y=0;y<8;y++)__accu1__.append(0);return __accu1__}());return __accu0__}();
numpy.apply_along_axis(numpy.linalg.norm,1,dist);
getpass.getuser();
d.py_update(function(){var __accu0__=[];for(var [k,v]of d.py_items())__accu0__.append(tuple([k,frozenset(v)]));return py_iter(__accu0__)}());
plt.show();
export var q=B.select().join(A).group_by(A).having(fn.Max(B.date)==B.date);
plt.show();
np.vstack(a);
dict(map(function __lambda__(a){return[a[1],a[0]]},py_iter(d.py_items())));
plt.show();
export var cleanlist=function(){var __accu0__=[];for(var x of oldlist)__accu0__.append(math.isnan(x)?0:x);return __accu0__}();
deletedct[key];
ctypes.addressof(bufstr);
app.run();
export var a_send=dict(function(){var __accu0__=[];for(var [k,v]of list(a.py_items()))__accu0__.append(tuple([k[0],v]));return py_iter(__accu0__)}());
plt.show();
(df.notnull().cumsum(__kwargtrans__({axis:1}))==4).idxmax(__kwargtrans__({axis:1}));
entry_list.extend(function(){var __accu0__=[];for(var entry of feed.entry)__accu0__.append(entry.title.text);return __accu0__}());
plt.show();
plt.legend();
var app=Flask(__name__);
var df=df.loc.__getitem__([tuple([0,null,1]),(df!=0).any(__kwargtrans__({axis:0}))]);
export var x_image=tf.reshape(tf_in,[-1,2,4,1]);
(function(){var __accu0__=[];for(var line of lines)__accu0__.append(line.__getslice__(2,null,1));return __accu0__})();
list(function(){var __accu0__=[];for(var a of A)if(!__in__(a,B))__accu0__.append(a);return __accu0__}());
(function(){var __accu0__=[];for(var a of zip(...x))__accu0__.append(max(function(){var __accu1__=[];for(var b of a)__accu1__.append(len(b));return py_iter(__accu1__)}()));return __accu0__})();
app.exec_();
py_next(function(){var __accu0__=[];for(var [i,v]of enumerate(L))if(v!=x)__accu0__.append(i);return py_iter(__accu0__)}(),-1);
zip(...l);
df.stack().groupby(__kwargtrans__({level:0})).first().reindex(df.index);
pd.concat([s1,s2],__kwargtrans__({axis:1})).reset_index();
app.MainLoop();
app.run(__kwargtrans__({debug:true}));
map(float,i.py_split().__getslice__(0,2,1));
plt.figure().canvas.draw();
(function(){var __accu0__=[];for(var pair of zip(a,b))for(var item of pair)__accu0__.append(item);return __accu0__})();
logging.getLogger().setLevel(logging.DEBUG);
p.start();
var y=function(){var __accu0__=[];for(var s of x)if(len(s)==2)__accu0__.append(s);return __accu0__}();
top_n.py_sort(__kwargtrans__({key:function __lambda__(t){return tuple([-t[1],t[0]])}}));
deletemylist.__getslice__(0,n,1);
int(str1.py_split()[0]);
Employee.objects.select_related();
b[a].shape;
print(json.dumps(data));
test_rec[test_rec.age==1&test_rec.sex==1];
match.group(1);
list(function(){var __accu0__=[];for(var x of L)__accu0__.append([tuple([x[0],x[1]]),x]);return dict(__accu0__)}().py_values());
sys.stdout.isatty();
btn.grid(__kwargtrans__({column:x,row:y,sticky:N+S+E+W}));
plt.show();
export var my_dict2=dict(function(){var __accu0__=[];for(var [x,y]of my_dict.py_items())__accu0__.append(tuple([y,x]));return py_iter(__accu0__)}());
root.mainloop();
f.read();
pd.concat([df,df.sum(__kwargtrans__({axis:1}))],__kwargtrans__({axis:1}));
np.searchsorted(A,np.intersect1d(A,B));
session.commit();
np.resize([1,-1],10);
plt.show();
plt.show();
equal([1,2],a).all(__kwargtrans__({axis:1}));
fig.subplots_adjust(__kwargtrans__({wspace:0,hspace:0}));
print(sorted(d.py_keys()));
plt.show();
var new_list=copy.deepcopy(old_list);
np.linspace(0,5,10,__kwargtrans__({endpoint:false}));
somelist.py_sort(__kwargtrans__({key:function __lambda__(x){return x.resultType}}));
f.close();
array[itemindex[0][0]][itemindex[1][0]];
py_typeof(ham).__name__;
tuple(function(){var __accu0__=[];for(var x of img.size)__accu0__.append(10*x);return __accu0__}());
plt.show();
root.mainloop();
root.mainloop();
plt.show();
(function(){var __accu0__=[];for(var [x,y]of zip(myList,myList.__getslice__(1,null,1)))if(y==9)__accu0__.append(tuple([x,y]));return __accu0__})();
print(os.path.abspath("./P2JSnippets.py"));
urllib.request.install_opener(opener);
scipy.stats.hypergeom.pmf(k,M,n,N);
btn.clicked.connect(self.close);
plt.show();
cv2.destroyAllWindows();
np.array([a,a,a]);
a.__getitem__([tuple([0,null,1]),tuple([0,2,1])]);
(function(){var __accu0__=[];for(var sublist of list_of_lists)for(var item of sublist)__accu0__.append(item);return __accu0__})();
main.mainloop();
plt.show();
pd.value_counts(d.py_values.ravel());
np.tensordot(ind,dist,__kwargtrans__({axes:[1,1]}))[0].T;
plt.show();
export var my_tuple=tuple([my_string]+my_list);
[4957,4957,1945];
plt.show();
[2,4,6,8];
plt.show();
var n=int(input());
export var good_data=np.array(function(){var __accu0__=[];for(var x of data.__getitem__([0,tuple([0,null,1])]))if(x==1)__accu0__.append(x);return __accu0__}());
sorted(my_tuple,__kwargtrans__({key:function __lambda__(tup){return tup[1]}}));
ftp.quit();
plt.show();
xs.py_sort(__kwargtrans__({key:len}));
mylist.py_sort();
(function(){var __accu0__=[];for(var x of zip(L1,L2))__accu0__.append(sum(x,[]));return __accu0__})();
export var all_keys=set().union(...function(){var __accu0__=[];for(var d of mylist)__accu0__.append(list(d.py_keys()));return py_iter(__accu0__)}());
lst.py_sort(__kwargtrans__({reverse:true}));
workbook.close();
list(sorted(py_iter))[-10];
var i=5+Tup()[0];
numpy.concatenate(tuple([a,b]));
driver.quit();
list(dict.py_items());
var lst=function(){var __accu0__=[];for(var _=0;_<a;_++)__accu0__.append([]);return __accu0__}();
[tuple([1,4]),tuple([4,8]),tuple([8,10])];
export var li=function(){var __accu0__=[];for(var x of li)if(condition(x))__accu0__.append(x);return __accu0__}();
zip(...heapq.nlargest(2,enumerate(a),__kwargtrans__({key:operator.itemgetter(1)})))[0];
(function(){var __accu0__=[];for(var i of range(0,len(mystr),8))__accu0__.append(mystr.__getslice__(i,i+8,1));return __accu0__})();
export var sorted_list_of_values=function(){var __accu0__=[];for(var item of sorted_list_of_keyvalues)__accu0__.append(item[1]);return __accu0__}();
logging.Logger.__init__(self,py_name,logging.DEBUG);
StreetCat._meta.get_parent_list();
plt.show();
var B=np.py_split(A,np.where(A.__getitem__([tuple([0,null,1]),0])==0)[0].__getslice__(1,null,1));
plt.show();
list(dict(function(){var __accu0__=[];for(var x of L)__accu0__.append(tuple([tuple([x[0],x[1]]),x]));return py_iter(__accu0__)}()).py_values());
numpy.nonzero(numpy.in1d(a2,a1))[0];
list(zip(s.__getslice__(0,null,2),s.__getslice__(1,null,2)));
export var contour=cv2.convexHull(contour);
sys.stdout.flush();
var l=function(){var __accu0__=[];for(var x of l)__accu0__.append(x*2);return __accu0__}();
list(your_iterator);
var new_dict=dict(zip(py_keys,py_values));
export var d2=dict(function(){var __accu0__=[];for(var [k,v]of list(d1.py_items()))__accu0__.append(tuple([k,f(v)]));return py_iter(__accu0__)}());
(function(){var __accu0__=[];for(var x of r)__accu0__.append(dict(zip(r.dtype.names,x)));return __accu0__})();
(function(){var __accu0__=[];for(var x of L)if(x>=0)__accu0__.append(x);return __accu0__})();
plt.show();
[0,1,0,1,0,0,1,0];
time.sleep(2);
app.mainloop();
random.shuffle(a);
isinstance(s,str);
plt.show();
data.__getitem__([np.where(masks)[1],tuple([0,null,1])]);
py_next(function(){var __accu0__=[];for(var x=0;x<10;x++)if(x>5)__accu0__.append(x);return py_iter(__accu0__)}());
YourApp().run();
var a=datetime.datetime.now().year;
(function(){var __accu0__=[];for(var row of LoL.__getslice__(1,4,1))__accu0__.append(row.__getslice__(2,5,1));return __accu0__})();
cursor.close();
rates.sub(treas.iloc.__getitem__([tuple([0,null,1]),0]),__kwargtrans__({axis:0})).dropna();
var py_values=function(){var __accu0__=[];for(var k of a)__accu0__.append(d[k]);return __accu0__}();
csv_file.close();
var d2=function(){var __accu0__=[];for(var [k,v]of list(d1.py_items()))__accu0__.append([k,f(v)]);return dict(__accu0__)}();
sorted(list(mydict.py_values()),__kwargtrans__({reverse:true}));
plt.show();
mylist[0][0];
export var multi_db=true;
lst.py_sort(__kwargtrans__({key:function __lambda__(x){return tuple([-x[2],x[0]])}}));
Gtk.main();
f.close();
logging.disable(logging.NOTSET);
plt.show();
(function(){var __accu0__=[];for(var x of a[0])__accu0__.append(len(x));return __accu0__})();
ax.auto_scale_xyz([0,500],[0,500],[0,.15]);
plt.show();
print(etree.tostring(f,__kwargtrans__({pretty_print:true})));
(function(){var __accu0__=[];for(var sublist of function(){var __accu1__=[];for(var i of l)__accu1__.append([i.__getslice__(1,null,1),[i[0]]]);return __accu1__}())for(var item of sublist)__accu0__.append(item);return __accu0__})();
var l=function(){var __accu0__=[];for(var [a,b]of zip(s1,s2))__accu0__.append(ord(a)^ord(b));return __accu0__}();
client.set_missing_host_key_policy(paramiko.AutoAddPolicy());
df.set_index(s.index).py_sort();
plt.show();
export var circles=cv2.HoughCircles(gray,cv.CV_HOUGH_GRADIENT);
pd.Series(np.concatenate([a,b]));
df.to_csv();
var C=function(){var __accu0__=[];for(var i of A)if(!__in__(i,B))__accu0__.append(i);return __accu0__}();
sum(map(sum,a));
list(range(max(x[0],y[0]),min(x[-1],y[-1])+1));
sorted(function(){var __accu0__=[];for(var [k,v]of d.py_items())__accu0__.append(tuple([v,k]));return py_iter(__accu0__)}(),__kwargtrans__({reverse:true}));
transaction.commit();
export var proc=subprocess.Popen(cmd,__kwargtrans__({stdout:subprocess.PIPE,stderr:subprocess.STDOUT}));
np.resize([1,-1],11);
plt.show();
df.plot(__kwargtrans__({x:df.index.astype(str)}));
(function(){var __accu0__=[];for(var [x,y]of zip(a.__getslice__(1,null,1),a))__accu0__.append(x-y);return __accu0__})();
export var mylist=list(range(10));
plt.show();
list(zip(py_keys,py_values));
plt.colorbar();
set([1,2,2]).issubset([1,2]);
plt.show();
list(itertools.chain(...function(){var __accu0__=[];for(var item of lst)__accu0__.append(item.py_split());return __accu0__}()));
pygame.display.flip();
np.isnan(a).any(1);
models.PositiveSmallIntegerField(__kwargtrans__({py_default:0}));
set(a).intersection(b,c);
plt.show();
export var al_arrays=function(){var __accu0__=[];for(var l of In_f)__accu0__.append(function(){var __accu1__=[];for(var i of range(0,len(l.strip()),2))__accu1__.append(l.__getslice__(i,i+2,1));return __accu1__}());return __accu0__}();
sorted(dct,__kwargtrans__({key:dct.py_get}));
var __left0__=zip(...function(){var __accu0__=[];for(var [i,j]of enumerate(range(10)))__accu0__.append(tuple([i,-1*j]));return __accu0__}());var x=__left0__[0];var y=__left0__[1];
np.where(np.any(a==2,__kwargtrans__({axis:0}))&np.any(a==5,__kwargtrans__({axis:0})));
ax.set_ylim([0,5]);
export var gpb=float(eval(input()));
splitlists[-1].append(splitlists[0][0]);
plt.show();
var a=function(){var __accu0__=[];for(var i=1;i<len(a);i++)if(a[i][1]>a[i-1][1])__accu0__.append(a[i]);return __accu0__}();
wb.save(file);
(function(){var __accu0__=[];for(var [i,[a,b]]of enumerate(zip(vec1,vec2)))if(a==b)__accu0__.append(i);return __accu0__})();
var driver=webdriver.Firefox();
list(SomeModel.objects.filter(__kwargtrans__({id:instance.id})).py_values())[0];
var y=list(x);
np.where(np.triu(np.ones(A.shape[0],__kwargtrans__({dtype:bool})),1),A.T,A);
f.close();
list(dict.py_keys())[0];
random.choice(string.ascii_letters.__getslice__(0,4,1));
df.groupby(df.columns,__kwargtrans__({axis:1})).agg(numpy.max);
numpy.array(function(){var __accu0__=[];for(var v of vals)if(len(set(v))==len(v))__accu0__.append(v);return __accu0__}());
np.where(~a.any(__kwargtrans__({axis:1})));
export var listOfLists=function(){var __accu0__=[];for(var i=0;i<N;i++)__accu0__.append([]);return __accu0__}();
plt.show();
var df=pd.read_pickle(file_name);
workbook.close();
plt.show();
[1,1,2,2];
sorted(trial_list,__kwargtrans__({key:function __lambda__(x){return trial_dict[x]}}));
app.run();
plt.hist(x,__kwargtrans__({bins:list(range(-4,5))}));
np.array(function(){var __accu0__=[];for(var i of arr)for(var j of np.arange(i-.2,i+.25,.1))__accu0__.append(j);return __accu0__}());
CB.lines[0].set_linewidth(10);
sum(map(sum,my_list));
handler.setLevel(logging.DEBUG);
print(np.py_split(a,b,__kwargtrans__({axis:0})));
app.run(__kwargtrans__({debug:true}));
np.diag(np.fliplr(array));
(function(){var __accu0__=[];for(var [x,y]of zip(l1,l2))if(x[0]==y[0])__accu0__.append(x[0]);return __accu0__})();
ax.yaxis.set_major_formatter(formatter);
var logger=logging.getLogger(__name__);
plt.show();
tuple(l);
writer.writerows([val]);
json.dump(data,f);
a.__setslice__(i,j,null,sorted(a.__getslice__(i,j,1)));
len(set(new_words));
var df=pd.concat([df1,df2],__kwargtrans__({ignore_index:true}));
fig.legend(lines,labels,__kwargtrans__({loc:tuple([.5,0]),ncol:5}));
(function(){var __accu0__=[];for(var i of a)if(!__in__(i,b))__accu0__.append(i);return __accu0__})();
f.close();
(function(){var __accu0__=[];for(var row of listOfLists)if(row[x].isdigit())__accu0__.append(row);return __accu0__})();
plt.show();
set(data1).intersection(data2);
time.sleep(1);
__init__.py;
df.py_values.max();
(function(){var __accu0__=[];for(var x of list)__accu0__.append(f(x));return py_iter(__accu0__)})();
df.drop(grouped.get_group(group_name).index);
ax.xaxis.set_major_formatter(plt.NullFormatter());
sys.stdout.write(msg);
workbook.close();
np.kron(np.eye(n),a);
df[0].py_values.tolist();
plt.show();
(function(){var __accu0__=[];for(var [index,row]of enumerate(mymatrix))if(__in__(val,row))__accu0__.append(tuple([index,row.index(val)]));return __accu0__})();
plt.show();
np.take(a,idx,__kwargtrans__({axis:1}));
foo(n-1)+[1];
zip(...data);
ssh.close();
df1.apply(function __lambda__(x){return x.asof(df2.index)});
var c=dict(list(a.py_items())+list(b.py_items()));
export var gray_image=cv2.cvtColor(image,cv2.COLOR_BGR2GRAY);
numpy.array(function(){var __accu0__=[];for(var v of vals)if(len(numpy.unique(v))==len(v))__accu0__.append(v);return __accu0__}());
[tuple([0,0]),tuple([0,1]),tuple([1,0]),tuple([1,1])];
(function(){var __accu0__=[];for(var [key,py_values]of list(rev_multidict.py_items()))if(len(py_values)>1)__accu0__.append(key);return __accu0__})();
cv2.waitKey();
plt.show();
py_reversed(x);
export var count=sum(function(){var __accu0__=[];for(var v of d.py_values())__accu0__.append(len(v));return py_iter(__accu0__)}());
print(list(set(chain(...array))));
plt.show();
s1.dropna(__kwargtrans__({inplace:true}));
plt.show();
var __left0__=function(){var __accu0__=[];for(var x of s.py_split())__accu0__.append(int(x));return py_iter(__accu0__)}();var a=__left0__[0];var b=__left0__[1];
listener.close();
plt.show();
sys.exit();
matplotlib.pyplot.scatter(x,y);
rows_list.py_sort(__kwargtrans__({key:operator.itemgetter(0,1,2)}));
round(1.679,2);
var ax=plt.gca();
my_logger.setLevel(logging.DEBUG);
(function(){var __accu0__=[];for(var py_name of starring)if(py_name.strip())__accu0__.append(py_name);return __accu0__})();
export var now=datetime.datetime.now();
(function(){var __accu0__=[];for(var i of np.unique(arr))__accu0__.append([i,np.where(arr==i)[0]]);return dict(__accu0__)})();
func(...r);
plt.show();
plt.show();
plt.show();
df.head(10);
len(my_list);
isinstance();
root.mainloop();
S2.__getslice__(0,len(S1),1)==S1;
Counter(function(){var __accu0__=[];for(var sublist of list(d.py_values()))for(var v of sublist)__accu0__.append(v);return py_iter(__accu0__)}());
export var Hsub=H.__getitem__([tuple([1,-1,1]),tuple([1,-1,1])]);
server.serve_forever();
set([a,b,c,a]);
np.where(x==5);
map(ord,hex_data);
time.sleep(1);
(function(){var __accu0__=[];for(var y of x)for(var x of data)__accu0__.append(y);return __accu0__})();
tornado.ioloop.IOLoop.instance().start();
plt.show();
(function(){var __accu0__=[];for(var p of permutations(b))__accu0__.append(list(zip(a,p)));return __accu0__})();
print(function(){var __accu0__=[];for(var x of l)for(var y of tuple([x,x+1]))__accu0__.append(y);return __accu0__}());
print(dict(zip(py_keys,function(){var __accu0__=[];for(var i of zip(...data))__accu0__.append(list(i));return __accu0__}())));
any(function(){var __accu0__=[];for(var i of s)__accu0__.append(i.isdigit());return py_iter(__accu0__)}());
list(range(1,6))+list(range(15,20));
var a=[0]*10;
bucket.copy_key(new_key,source_bucket,source_key);
window.destroy();
root.mainloop();
print(function(){var __accu0__=[];for(var x of data)__accu0__.append(x[0]);return __accu0__}());
clf.fit(X,y);
c.__setslice__(0,null,null,b);
pdb.set_trace();
a.argmax(__kwargtrans__({axis:0}));
export var list=[[6,5,4],[4,5,6]];
plt.show();
df[self.target].str.contains(t).any();
User.objects.filter(__kwargtrans__({userprofile__level__lte:0}));
ma.array(np.resize(b,a.shape[0]),__kwargtrans__({mask:[false,false,true]}));
len(set(a));
var a=list(set(a));
list(itertools.product(...s));
set(d1.py_items()).issubset(set(d2.py_items()));
db.session.query(Printer).all();
plt.draw();
plt.show();
p.wait();
export var cols=list(df.columns.py_values);
plt.show();
var __left0__=tuple([string.__getslice__(0,len(string)/2,1),string.__getslice__(len(string)/2,null,1)]);export var firstpart=__left0__[0];export var secondpart=__left0__[1];
os.rename(file,new_name);
my_model.save();
match.group(1);
img.save();
plt.show();
dict(function(){var __accu0__=[];for(var [k,v]of list(d.py_items()))__accu0__.append(tuple([m.py_get(k,k),v]));return py_iter(__accu0__)}());
lst.py_sort();
(function(){var __accu0__=[];for(var x of listD[2])__accu0__.append(x[0]);return __accu0__})();
value.isdigit();
(function(){var __accu0__=[];for(var l of nested_lst)__accu0__.append(tuple(l));return __accu0__})();
my_array.__setitem__([tuple([0,null,1]),[0,1]],my_array.__getitem__([tuple([0,null,1]),[1,0]]));
s.reset_index().drop(1,__kwargtrans__({axis:1}));
export var new_array=function(){var __accu0__=[];for(var x of main_array)if(!__in__(x,second_array))__accu0__.append(x);return __accu0__}();
var x=all(tuple([a,b,c,d,e,f]));
python- -version;
cursor.commit();
random.seed();
(function(){var __accu0__=[];for(var [a,b]of zip(s.__getslice__(0,null,2),s.__getslice__(1,null,2)))__accu0__.append(a+b);return __accu0__})();
test[numpy.apply_along_axis(function __lambda__(x){return __in__(x[1],wanted)},1,test)];
numpy.apply_along_axis(sum,1,X);
export var max_index=my_list.index(max_value);
v.dot(np.rollaxis(a,2,1));
print(sys.path);
pygame.display.flip();
var x=function(){var __accu0__=[];for(var i of x)if(len(i)==2)__accu0__.append(i);return __accu0__}();
(function(){var __accu0__=[];for(var word of words)if(any(function(){var __accu1__=[];for(var char of word)__accu1__.append(!char.isdigit());return py_iter(__accu1__)}()))__accu0__.append(word);return __accu0__})();
plt.show();
(function(){var __accu0__=[];for(var [x,y]of zip(L1,L2))__accu0__.append(x+y);return __accu0__})();
export var out=p.communicate();
(function(){var __accu0__=[];for(var e of lelist)if(__in__(e,lestring))__accu0__.append(__in__(e,lestring));return __accu0__})();
plt.figure(__kwargtrans__({figsize:tuple([6,6])}));
plt.draw();
datetime.datetime.fromtimestamp(1284286794);
var __left0__=py_next(py_iter(list(d.py_items())));export var k=__left0__[0];export var v=__left0__[1];
plt.legend(__kwargtrans__({numpoints:1}));
export var nested_list=function(){var __accu0__=[];for(var xs of nested_list)__accu0__.append(function(){var __accu1__=[];for(var s of xs)__accu1__.append(s.upper());return __accu1__}());return __accu0__}();
o.save();
print(function(){var __accu0__=[];for(var word of word_list)__accu0__.append([word,word_list.count(word)]);return dict(__accu0__)}());
pdf.close();
print(Event.objects.filter(__kwargtrans__({date__lt:datetime.datetime.now()})).delete());
(function(){var __accu0__=[];for(var x of list)for(var elem of tuple([x,0]))__accu0__.append(elem);return __accu0__})().__getslice__(0,-1,1);
list(itertools.product(...list(mydict.py_values())));
(function(){var __accu0__=[];for(var n of bin(21).__getslice__(2,null,1).zfill(8))__accu0__.append(int(n));return __accu0__})();
(function(){var __accu0__=[];for(var key of a)__accu0__.append([key,list(set(a[key]).difference(b.py_get(key,[])))]);return dict(__accu0__)})();
sys.exit(1);
pd.to_datetime(pd.Series(date_stngs));
list(function(){var __accu0__=[];for(var _=0;_<n;_++)__accu0__.append(py_next(it));return py_iter(__accu0__)}());
plt.show();
plt.show();
result.extend(item);
export var ii=np.where(a==4);
var timestamp=(dt-datetime(1970,1,1))/timedelta(__kwargtrans__({seconds:1}));
plt.show();
array[itemindex[0][1]][itemindex[1][1]];
plt.show();
Person.objects.filter(__kwargtrans__(kwargs));
export var line=f.readline();
myfile.write(c_uncompData_p.__getslice__(0,c_uncompSize,1));
df[df.index.map(function __lambda__(x){return __in__(x[0],stk_list)})];
plt.show();
[tuple([2,1,1]),tuple([1,2,1]),tuple([1,1,2])];
isinstance(s,str);
set(L.__getslice__(0,4,1));
plt.show();
f.close();
ind[np.argsort(a[ind])];
df1.reset_index();
os.path.dirname(sys.executable);
plt.draw();
transmission_array.extend(zero_array);
all(function(){var __accu0__=[];for(var x of mylist)__accu0__.append(x==mylist[0]);return py_iter(__accu0__)}());
plt.show();
a.__setslice__(0,null,null,function(){var __accu0__=[];for(var x of a)if(x<=2)__accu0__.append(x);return __accu0__}());
json.dumps(list);
plt.show();
var myList=sorted(set(myList));
a.__getslice__(0,1,1)[0][0]=5;
df.A.apply(function __lambda__(x){return pd.Series(1,x)}).fillna(0).astype(int);
zip(a,b,c);
plt.scatter(list(range(len(y))),y,__kwargtrans__({c:z,cmap:cm.hot}));
app.run(__kwargtrans__({debug:true}));
df.loc.__getitem__([ii,cols]);
plt.show();
np.exp(-x);
print(json.dumps(foo));
(function(){var __accu0__=[];for(var [k,v]of a.py_items())__accu0__.append([k,callable(v)?v():v]);return dict(__accu0__)})();
df.drop(x[x].index);
hehe();
Book.objects.create(__kwargtrans__(d));
plt.show();
var dist=math.hypot(x2-x1,y2-y1);
tuple([1,0,0,1,0,0,0,1,1,0,0,0,0,0,0,1,1,0,1,1,1,0,0]);
sorted([-5,2,1,-8],__kwargtrans__({key:abs}));
var out=np.concatenate(input_list).ravel().tolist();
(function(){var __accu0__=[];for(var [i,j]of zip(a,x))if(i>=4)__accu0__.append(tuple([i,j]));return __accu0__})();
ax1.set_xticks(function(){var __accu0__=[];for(var j=-4;j<5;j++)__accu0__.append(int(j));return __accu0__}());
datetime.datetime(d.year,d.month,d.day);
var s=s.__getslice__(0,pos,1)+s.__getslice__(pos+1,null,1);
sorted(d,__kwargtrans__({key:d.py_get}));
np.cumsum(a,__kwargtrans__({axis:1,out:a}));
sorted(a,__kwargtrans__({key:len}));
pd.concat(tuple([df1,df2]),__kwargtrans__({axis:1}));
len(d[obj])==2&&isinstance(d[obj][0],int)&&isinstance(d[obj][1],int);
inspect.getfile(C.__class__);
sorted(x)==sorted(y);
export var from_date=from_date.py_replace(__kwargtrans__({hour:0,minute:0,second:0,microsecond:0}));
export var perm=sorted(range(len(foo)),__kwargtrans__({key:function __lambda__(x){return foo[x]}}));
print(os.path.dirname(os.path.abspath(sys.argv[0])));
pd.concat(series_list,__kwargtrans__({axis:1}));
sum(function(){var __accu0__=[];for(var x of list)if(isinstance(x,tuple([int,float])))__accu0__.append(x);return __accu0__}());
numpy.where(a<=2,a,2);
pd.DataFrame(s).T;
[[4],[5,5],[6,6,6]];
var i=np.indices(B.shape)[0];
a.__getslice__(-2,null,1)+a.__getslice__(0,-2,1);
re.findall(pat,s);
var d=dict(function(){var __accu0__=[];for(var [x,y]of enumerate(t))__accu0__.append(tuple([y,x]));return __accu0__}());
var x=Dish.query.filter(Dish.restaurants.any(__kwargtrans__({py_name:py_name}))).all();
driver.implicitly_wait(10);
dict(function(){var __accu0__=[];for(var [key,value]of list(d.py_items()))__accu0__.append(tuple([d1[key],value]));return py_iter(__accu0__)}());
np.tile(b,tuple([2,2,2]));
var result=function(){var __accu0__=[];for(var key of d)if(key.startswith(query))__accu0__.append(d[key]);return __accu0__}();
zip(...it);
var y=numpy.unique(x);
set(function(){var __accu0__=[];for(var x of zip(a,a.__getslice__(1,null,1)))if(x[0]==x[1])__accu0__.append(x[0]);return py_iter(__accu0__)}());
sys.exit(0);
root.mainloop();
export var bigdata=pd.concat([data1,data2],__kwargtrans__({ignore_index:true}));
export var posting_date=models.DateTimeField(__kwargtrans__({auto_now_add:true}));
var d=dict(function(){var __accu0__=[];for(var [k,v]of list(d.py_items()))__accu0__.append(tuple([m.py_get(k,k),v]));return py_iter(__accu0__)}());
app.run();
np.kron(a,np.ones(tuple([B,B]),a.dtype));
var a=zip(list(range(10)),list(range(10)));
plt.show();
f.write(bytes(tuple([i])));
server.serve_forever();
plt.show();
random.choice(mylist);
a.__getslice__(i,j,1).py_sort();
some_action.triggered.connect(functools.partial(some_callback,param1,param2));
json.dump([],f);
self.assertTrue(issubclass(QuizForm,forms.Form));
session.query(Shots).filter_by(__kwargtrans__({event_id:event_id})).order_by(asc(Shots.user_id));
f.write(hex(i));
decimal.Decimal(str(random.random()));
py_next(g);
OrderedDict(sorted(list(d.py_items()),__kwargtrans__({key:d.py_get})));
plt.show();
sorted(a,__kwargtrans__({key:function __lambda__(x){return b.index(x[0])}}));
plt.show();
plt.show();
db.commit();
plt.xlim([0,bins.size]);
A.sum(__kwargtrans__({axis:0,skipna:true}));
df.groupby(df.index).mean();
numpy.argwhere(numpy.in1d(a,b));
plt.show();
datetime.datetime.utcfromtimestamp(1284286794);
a.nonzero();
bool(value);
plt.show();
time.sleep(1);
set(a).intersection(b);
urllib.request.install_opener(opener);
plt.show();
(function(){var __accu0__=[];for(var word of sent)__accu0__.append([word,len(word),word.upper()]);return __accu0__})();
logger.setLevel(logging.DEBUG);
pdb.set_trace();
np.array(function(){var __accu0__=[];for(var i of a)__accu0__.append([int(i[0],2)]);return __accu0__}());
plt.show();
(function(){var __accu0__=[];for(var item of x)if(item&&item[0])__accu0__.append(str(item[0]));return __accu0__})();
var df=df.reset_index();
export var products=Product.objects.filter(__kwargtrans__({categories__pk:1})).select_related();
(function(){var __accu0__=[];for(var [k,v]of list(points.py_items()))if(v[0]<5&&v[1]<5)__accu0__.append([k,v]);return dict(__accu0__)})();
f.close();
json.dumps(c,__kwargtrans__({py_default:function __lambda__(o){return o.__dict__}}));
sck.setproxy();
list(range(N,-1,-1))===better;
print(tuple(my_list));
set(aa.py_items()).intersection(set(bb.py_items()));
var rows=function(){var __accu0__=[];for(var i=0;i<len(a);i++)if(a[i][0]==value)__accu0__.append(i);return __accu0__}();
HttpResponse(__kwargtrans__({status:500}));
plt.show();
plt.show();
(function(){var __accu0__=[];for(var i=1;i<10;i++)__accu0__.append(x+i*y);return __accu0__})();
len(df.columns);
np.savez(tmp,...getarray.__getslice__(0,10,1));
sys.stdin.read(1);
np.hstack(function(){var __accu0__=[];for(var [i,j]of zip(start,stop))__accu0__.append(np.arange(i,j));return __accu0__}());
app.run(__kwargtrans__({threaded:true}));
var n=int(input());
A.ravel().__getslice__(0,Math.pow(A.shape[1],2),A.shape[1]+1);
(function(){var __accu0__=[];for(var x of l2)for(var y of l1)__accu0__.append(x+y);return __accu0__})();
plt.show();
time.sleep(spacing);
plt.show();
np.fromiter(a,__kwargtrans__({dtype:np.float}));
~np.isnan(a).any(1);
matplotlib.pyplot.show();
dict(set.intersection(...function(){var __accu0__=[];for(var d of dicts)__accu0__.append(set(d.py_items()));return py_iter(__accu0__)}()));
s*(a+b)==s*a+s*b;
some_func(__kwargtrans__(mydict));
var my_list=sorted(list(dict.py_items()),__kwargtrans__({key:function __lambda__(x){return x[1]}}));
var c=a.flatten();
any(function(){var __accu0__=[];for(var i of b)__accu0__.append(__in__(i,a));return py_iter(__accu0__)}());
log.start();
sum(function(){var __accu0__=[];for(var [x,y]of zip(a,b))__accu0__.append(x*y);return py_iter(__accu0__)}());
[0,1,0,1,2,5,6,7,8,9];
round(random.uniform(min_time,max_time),1);
A.ravel().__getslice__(i,max(0,A.shape[1]-i)*A.shape[1],A.shape[1]+1);
app.run();
print(function(){var __accu0__=[];for(var i=0;i<5;i++)__accu0__.append(i);return __accu0__}());
df;
plt.show();
logging.basicConfig(__kwargtrans__({level:logging.WARNING}));
plt.show();
plt.show();
itertools.repeat(0,10);
ax.set_xlim([0,100]);
(function(){var __accu0__=[];for(var k of d1.py_keys()&d2)__accu0__.append([k,float(d2[k])/d1[k]]);return dict(__accu0__)})();
dct[key].append(some_value);
(function(){var __accu0__=[];for(var [k,v]of list(d.py_items()))__accu0__.append([k]+function(){var __accu1__=[];for(var x of zip(...v))__accu1__.append(sum(x)/float(len(x)));return __accu1__}());return __accu0__})();
(function(){var __accu0__=[];for(var c of s)__accu0__.append(ord(c));return __accu0__})();
os.makedirs(newpath);
results.py_sort(__kwargtrans__({key:function __lambda__(r){return r.person.birthdate}}));
var response=urllib.request.urlopen(req,json.dumps(data));
export var screen_height=root.winfo_screenheight();
var __left0__=tuple([np.sin(x),np.cos(x)]);var a=__left0__[0];var b=__left0__[1];
form.save();
var b=a.__getslice__(0,-1,1)+tuple([a[-1]*2]);
plt.show();
var a=function(){var __accu0__=[];for(var wi of wordids)__accu0__.append(str(wi));return __accu0__}();
print(np.unravel_index(result.argmax(),result.shape));
fcntl.ioctl(s.fileno(),SIOCSIFFLAGS,ifr);
dir();
auth.set_access_token(access_token,access_token_secret);
zip(...[[5,7],[6,9],[7,4]]);
var df2=df.astype(float);
img.save();
root.mainloop();
d[i[0]]=int(i[1]);
foo.__getitem__([tuple([0,null,1]),1]);
datetime.combine(date.today(),time())+timedelta(__kwargtrans__({hours:2}));
root.mainloop();
var a=np.array(a,__kwargtrans__({dtype:np.float128}));
(function(){var __accu0__=[];for(var j=0;j<N;j++)__accu0__.append(function(){var __accu1__=[];for(var i=0;i<N;i++)__accu1__.append(random.random());return __accu1__}());return __accu0__})();
var c=function(){var __accu0__=[];for(var [x,y]of zip(a,b))__accu0__.append(x|y);return __accu0__}();
input();
print(list(enumerate(words)));
pdb.set_trace();
cnxn.commit();
print(os.path.join(dirpath,filename));
cursor.execute(query,data);
root.quit();
export var encoded_string=base64.b64encode(image_file.read());
(function(){var __accu0__=[];for(var i=0;i<10;i++)for(var j=0;j<i;j++)__accu0__.append(tuple([i,j]));return __accu0__})();
export var browser=webdriver.Safari(__kwargtrans__({quiet:true}));
var results=function(){var __accu0__=[];for(var t of mylist)if(t[0]==10)__accu0__.append(t[1]);return __accu0__}();
driver.quit();
zip(py_iter(x.py_items()),py_iter(y.py_items()));
heapq.nlargest(6,your_list,__kwargtrans__({key:itemgetter(1)}));
plt.show();
os.path.relpath(subdir2,subdir1);
[[],[],[],[],[],[],[],[],[],[]];
sys.stdout.flush();
df.ix[idx];
setattr(self,key,value);
(function(){var __accu0__=[];for(var i=0;i<5;i++)__accu0__.append(l.__getslice__(i,null,5));return __accu0__})();
operator.itemgetter(...b)(a);
(function(){var __accu0__=[];for(var m of re.finditer(pattern,string))__accu0__.append(tuple([m.start(0),m.end(0)]));return __accu0__})();
any(map(eval,my_list));
df.py_values.T.tolist();
(function(){var __accu0__=[];for(var i=0;i<len(s1);i++)if(s1[i]!=s2[i])__accu0__.append(i);return __accu0__})();
(function(){var __accu0__=[];for(var e of zip(...function(){var __accu1__=[];for(var i=0;i<2;i++)__accu1__.append(fl.__getslice__(i,null,2));return __accu1__}()))__accu0__.append(list(e));return __accu0__})();
plt.show();
l.__getslice__(1,null,1);
y[argrelmax(y)[0]];
root.mainloop();
cv2.waitKey();
plt.show();
my_list.py_sort();
a[~(a==5).any(1)];
dict(function(){var __accu0__=[];for(var [k,v]of list(d.py_items()))__accu0__.append(tuple([m.py_get(k,k),v]));return __accu0__}());
forminstance.is_valid();
plt.show();
socket.gethostname();
np.repeat(a,[2,2,1],__kwargtrans__({axis:0}));
var done=function(){var __accu0__=[];for(var i of[a,b,c,d])__accu0__.append(tuple([i,x]));return __accu0__}();
plt.setp(axs[1].xaxis.get_majorticklabels(),__kwargtrans__({rotation:70}));
array([0,100,100,100,4,5,100,100,100,9]);
plt.show();
export var unique_a=np.unique(b).view(a.dtype).reshape(-1,a.shape[1]);
(function(){var __accu0__=[];for(var [i,x]of enumerate(testlist))if(x==1)__accu0__.append(i);return __accu0__})();
dict(function(){var __accu0__=[];for(var value of py_values)__accu0__.append(tuple([key_from_value(value),value]));return py_iter(__accu0__)}());
p.start();
self.submenu2.setVisible(false);
array([0,0,2,1,0,1]);
np.vstack(tuple([np.cos(theta),np.sin(theta)])).T;
pdb.set_trace();
equal([1,2],a).all(__kwargtrans__({axis:1})).any();
(function(){var __accu0__=[];for(var [k,v]of self.py_items())if(v==value)__accu0__.append(v);return __accu0__})();
export var g=df.groupby(Math.floor(df.index/2));
len(set(d.py_values()))==1;
min(L,__kwargtrans__({key:function __lambda__(theta){return angular_distance(theta,1)}}));
img.seek(1);
var l=function(){var __accu0__=[];for(var x=0;x<10;x++)__accu0__.append(x*x);return __accu0__}();
plt.show();
plt.show();
export var dictionary=dict(function(){var __accu0__=[];for(var i of range(0,len(List),2))__accu0__.append(tuple([List[i],List[i+1]]));return __accu0__}());
plt.show();
df.applymap(time.isoformat).apply(pd.to_timedelta);
df.groupby(__kwargtrans__({by:df.columns,axis:1})).apply(gf);
var l=map(function __lambda__(x){return x*2},l);
var new_list=function(){var __accu0__=[];for(var seq of yourlist)__accu0__.append(seq[0]);return __accu0__}();
export var my_dictionary=function(){var __accu0__=[];for(var [k,v]of list(my_dictionary.py_items()))__accu0__.append([k,f(v)]);return dict(__accu0__)}();
app.run(__kwargtrans__({port:port}));
map(function __lambda__(x){return x+1},L);
sys.stdout.flush();
export var df_col_merged=pd.concat([df_a,df_b],__kwargtrans__({axis:1}));
s.__getslice__(0,null,-1);
ip.iptype();
a[list(np.ogrid[function(){var __accu0__=[];for(var x of a.shape)__accu0__.append(slice(x));return __accu0__}()].__getslice__(0,-1,1))+[i]];
plt.show();
self.layout.addWidget(self.button);
img.save(sys.argv[2]);
db.session.commit();
list(chain.from_iterable(zip(list_a,list_b)));
(function(){var __accu0__=[];for(var [i,j]of zip(list(range(1,5)),list(range(7,11))))__accu0__.append([i,j]);return dict(__accu0__)})();
export var series=pd.Series(list(range(20)),__kwargtrans__({dtype:float}));
plt.show();
var results=cursor.fetchall();
m[m.mask];
x[np.where(x==5)];
int(time.mktime(dt.timetuple()));
plt.show();
export var weekdays=models.PositiveIntegerField(__kwargtrans__({choices:WEEKDAYS}));
export var clsmembers=inspect.getmembers(sys.modules[__name__],inspect.isclass);
(function(){var __accu0__=[];for(var [k,v]of list(mydict.py_items()))if(k>=6)__accu0__.append([k,v]);return dict(__accu0__)})();
plt.show();
plt.show();
app.run();
(function(){var __accu0__=[];for(var x of a_list)__accu0__.append(__mod__(x,2)==0?x*2:x);return __accu0__})();
browser.close();
(function(){var __accu0__=[];for(var [x,y]of zip(a,b))__accu0__.append(x*1/y);return __accu0__})();
pygame.display.py_update();
root.mainloop();
root.mainloop();
var x=function(){var __accu0__=[];for(var x of b.py_split())if(__in__(x,a.py_split()))__accu0__.append(x);return __accu0__}();
wx.Frame.__init__(self,parent);
multiprocessing.cpu_count();
plt.show();
map(self.queryQ.put,self.getQueries());
sorted(s,__kwargtrans__({key:function __lambda__(x){return int(x[-1])}}));
func(1,...args,__kwargtrans__(kwargs));
float(a);
list(__all__.py_keys())[2];
var d=dict.fromkeys(string.ascii_lowercase,0);
root.mainloop();
plt.show();
cv2.cvtColor(img,cv2.COLOR_BGR2RGB);
plt.show();
var result=function(){var __accu0__=[];for(var [x,y]of points)for(var [dx,dy]of offsets)__accu0__.append(tuple([x+dx,y+dy]));return __accu0__}();
array([[true,true],[true,true]],__kwargtrans__({dtype:bool}));
gca().xaxis.set_major_formatter(FuncFormatter(formatter));
list(d.py_keys());
min(function(){var __accu0__=[];for(var x of a)__accu0__.append(x.__getslice__(0,null,-1));return __accu0__}()).__getslice__(0,null,-1);
plt.show();
var x=__mod__(x+y,48);
(function(){var __accu0__=[];for(var x of letters)__accu0__.append(ord(x));return __accu0__})();
plt.show();
zip(tuple([1,2]),tuple([40,2]),tuple([9,80]));
var r=dict(function(){var __accu0__=[];for(var [k,v]of d.py_items())__accu0__.append(tuple([v,k]));return py_iter(__accu0__)}());
self._bar();
plt.show();
plt.show();
export var longest_strings=function(){var __accu0__=[];for(var s of stringlist)if(len(s)==maxlength)__accu0__.append(s);return __accu0__}();
print(function(){var __accu0__=[];for(var x of l)__accu0__.append(tuple([x[0],x[-1]]));return __accu0__}());
time.sleep(1);
export var tables=cursor.fetchall();
df.loc[(df==1).any(__kwargtrans__({axis:1}))];
newsampledata.reindex(newsampledata.index.repeat(n)).reset_index(__kwargtrans__({drop:true}));
plt.show();
time.sleep(1);
a.py_sort(__kwargtrans__({key:Counter(a).py_get,reverse:true}));
len(os.walk(path).py_next()[2]);
df.dtypes;
var results=sorted(list(results.py_items()),__kwargtrans__({key:function __lambda__(x){return x[1]},reverse:true}));
var __left0__=tuple([l[0],l.__getslice__(1,null,1)]);export var first=__left0__[0];export var rest=__left0__[1];
sorted(function(){var __accu0__=[];for(var item of data)__accu0__.append(sorted(item));return py_iter(__accu0__)}(),__kwargtrans__({key:function __lambda__(x){return tuple([len(x),x])}}));
sorted(os.listdir(whatever_directory));
(function(){var __accu0__=[];for(var i of x)if(60<i&&i<70)__accu0__.append(i);return __accu0__})();
lst.py_sort();
(function(){var __accu0__=[];for(var i of range(0,len(x),2))__accu0__.append(x[i]+x[i+1]);return __accu0__})();
plt.show();
self.grid_rowconfigure(1,__kwargtrans__({weight:1}));
plt.show();
sys.exit(app.exec_());
json.loads(s);
driver.quit();
plt.show();
(function(){var __accu0__=[];for(var v of sorted(py_iter(d.py_items()),__kwargtrans__({key:function __lambda__(k_v){return tuple([-k_v[1],k_v[0]])}})))__accu0__.append(v[0]);return __accu0__})();
export var fu_list=function(){var __accu0__=[];for(var k of fus_d.py_keys()|fus_s)__accu0__.append(tuple([k,fus_d.py_get(k),fus_s.py_get(k)]));return __accu0__}();
functools.reduce(np.logical_or,tuple([x,y,z]));
var d=function(){var __accu0__=[];for(var [k,v]of list(d.py_items()))__accu0__.append([int(k),function(){var __accu1__=[];for(var i of v)__accu1__.append(int(i));return __accu1__}()]);return dict(__accu0__)}();
cursor.execute(sql);
export var singleitem=py_next(py_iter(mylist));
sys.exit();
(function(){var __accu0__=[];for(var [x,y]of pairs)if(x!=y)__accu0__.append(function(){var __accu1__=[];for(var k of x)if(x[k]!=y[k])__accu1__.append(tuple([k,x[k],y[k]]));return __accu1__}());return __accu0__})();
linalg.svd(a.__getitem__([tuple([0,null,1]),tuple([0,null,1]),1]));
print(dict(new_dict));
(function(){var __accu0__=[];for(var s of str.py_split())if(s.isdigit())__accu0__.append(int(s));return __accu0__})();
np.moveaxis(np.indices(tuple([4,5])),0,-1);
list(function(){var __accu0__=[];for(var e of somelist)__accu0__.append([e.id,e]);return dict(__accu0__)}().py_values());
plt.show();
time.sleep(.1);
max(A,__kwargtrans__({key:A.py_get}));
a.__setitem__([i,j],x);
app.run();
model.fit([X]);
plt.show();
(function(){var __accu0__=[];for(var a of zip(py_values.__getslice__(0,null,2),py_values.__getslice__(1,null,2)))__accu0__.append(dict(zip(py_keys,a)));return __accu0__})();
(function(){var __accu0__=[];for(var sublist of l)for(var item of sublist)__accu0__.append(item);return __accu0__})();
(function(){var __accu0__=[];for(var sublist of list_of_lists)for(var item of sublist)if(valid(item))__accu0__.append(item);return __accu0__})();
plt.show();
df.index;
plt.show();
f.write(doc.render());
plt.show();
shutil.copyfileobj(from_file,to_file);
main();
df.apply(function __lambda__(x){return sum(x.isnull().py_values)},__kwargtrans__({axis:1}));
(function(){var __accu0__=[];for(var [k,v]of points.py_items())if(v[0]<5&&v[1]<5)__accu0__.append([k,v]);return dict(__accu0__)})();
myFunc(function __lambda__(a,b){return iadd(a,b)});
pl.show();
main();
s.getsockname()[0];
array([4,5,5,6,6,6]);
os.killpg(self.process.pid,signal.SIGTERM);
fh.close();
list(range(0,100,5));
(function(){var __accu0__=[];for(var x of foo)__accu0__.append(x);return __accu0__})();
plt.show();
(function(){var __accu0__=[];for(var [x,y,z]of G)__accu0__.append(x);return __accu0__})();
var b=np.delete(a,i,__kwargtrans__({axis:0}));
root.mainloop();
var my_list=function(){var __accu0__=[];for(var row of matrix)for(var col of row)__accu0__.append(col);return __accu0__}();
list(set(dict_a.py_values())&set(dict_b.py_values()));
var a=datetime.date.today().year;
map(list,list(totals.py_items()));
np.argmax(np.max(x,__kwargtrans__({axis:1})));
cursor.close();
var my_list=list(set(my_list));
plt.show();
f.close();
Student.objects.filter(__kwargtrans__({studentgroup__level__pk:1}));
self.window.keypad(1);
a.flatten();
files.py_sort(__kwargtrans__({key:function __lambda__(x){return os.path.getmtime(x)}}));
df[df.columns.__getslice__(2,5,1)];
Farm.objects.filter(__kwargtrans__({tree__in:TreeQuerySet}));
t.start();
plt.show();
df.py_replace(0,np.nan).bfill(1).iloc.__getitem__([tuple([0,null,1]),0]);
root.mainloop();
cherrypy.quickstart(Root());
p.terminate();
set([1]);
plt.draw();
sys.stdout.flush();
print(calendar.monthrange(now.year,now.month)[1]);
client.transport.write(message);
cell.value=statN;
(function(){var __accu0__=[];for(var row of matrix)__accu0__.append(row[i]);return __accu0__})();
(function(){var __accu0__=[];for(var a of l)__accu0__.append(a-int(a));return __accu0__})();
cbar.ax.tick_params(__kwargtrans__({labelsize:10}));
export var vulnerability=models.ForeignKey(Vuln);
(function(){var __accu0__=[];for(var _=0;_<n;_++)__accu0__.append(function(){var __accu1__=[];for(var _=0;_<n;_++)__accu1__.append(function(){var __accu2__=[];for(var _=0;_<n;_++)__accu2__.append(0);return __accu2__}());return __accu1__}());return __accu0__})();
plt.show();
var A=np.squeeze(np.asarray(M));
root.mainloop();
pd.Series(function(){var __accu0__=[];for(var e of x.py_values)__accu0__.append(np.array(e)[~np.isnan(e)]);return __accu0__}());
curses.endwin();
User.objects.filter(Q(__kwargtrans__({income__gte:5E3}))|Q(__kwargtrans__({income__isnull:true})));
random.choice(string.letters);
(function(){var __accu0__=[];for(var i of range(0,len(py_values),n))__accu0__.append(dict(zip(py_keys,py_values.__getslice__(i,i+n,1))));return __accu0__})();
(local_dt-datetime.datetime.utcfromtimestamp(timestamp)).seconds;
var res=np.zeros(tuple([arr.shape[0],m]),arr.dtype);
np.where(np.in1d(py_values,searchvals));
logger.setLevel(logging.DEBUG);
var dictionary=dict(zip(List.__getslice__(0,null,2),List.__getslice__(1,null,2)));
var data=function(){var __accu0__=[];for(var item of lst)__accu0__.append(tuple(sorted(item)));return set(__accu0__)}();
export var list1=function(){var __accu0__=[];for(var i=0;i<n;i++)__accu0__.append(i);return __accu0__}();
df.apply(function __lambda__(x){return np.all(x==0)});
(function(){var __accu0__=[];for(var v of list(by_ip.py_values()))__accu0__.append([v[0],data[v[0]]]);return dict(__accu0__)})();
sys.stdout.flush();
Kid.objects.filter(__kwargtrans__({id__in:toy_owners}));
os.stat(path).st_birthtime;
var data=function(){var __accu0__=[];for(var line of lines)__accu0__.append(function(){var __accu1__=[];for(var v of line.py_split())__accu1__.append(int(v));return __accu1__}());return __accu0__}();
(function(){var __accu0__=[];for(var l of mylist)__accu0__.append(list(l[0]));return __accu0__})();
export var mySet=set(itertools.product(list(range(1,51)),__kwargtrans__({repeat:2})));
json.dumps(s);
sum(function(){var __accu0__=[];for(var v of list(d.py_values()))__accu0__.append(v[0]);return py_iter(__accu0__)}())/float(len(d));
datetime.datetime.combine(dateobject,datetime.time.min);
numpy.array(list(c));
hash(frozenset(list(my_dict.py_items())));
export var gems=pygame.sprite.Group();
original.__getslice__(0,null,-1);
root.mainloop();
sum(function(){var __accu0__=[];for(var [x,y]of zip(...lists))__accu0__.append(x*y);return __accu0__}());
var result=np.zeros(b.shape);
var c=function(){var __accu0__=[];for(var y of a)__accu0__.append(tuple(function(){var __accu1__=[];for(var [i,x]of enumerate(y))__accu1__.append(x+b[i]);return py_iter(__accu1__)}()));return __accu0__}();
var __left0__=zip(...list(dictionary.py_items()));var py_keys=__left0__[0];var py_values=__left0__[1];
db.commit();
dict(function(){var __accu0__=[];for(var i of py_iter(d.py_items()))if(__in__(i[0],validkeys))__accu0__.append(i);return __accu0__}());
plt.colorbar();
bin(10);
s.py_split();
var z=dict(list(x.py_items())+list(y.py_items()));
plt.show();
plt.show();
print(sys.path);
sys.stdout.flush();
export var somelist=function(){var __accu0__=[];for(var x of somelist)if(!determine(x))__accu0__.append(x);return __accu0__}();
plt.show();
df2.reset_index();
len(df.index);
plt.show();
export var cursor=cnx.cursor(__kwargtrans__({buffered:true}));
export var obj=json.loads(string);
np.corrcoef(x.__getslice__(0,len(x)-1,1),x.__getslice__(1,null,1))[0][1];
rows.py_sort(__kwargtrans__({key:itemgetter(1),reverse:true}));
sorted(lst,__kwargtrans__({key:function __lambda__(x){return tuple([c[x],x])},reverse:true}));
pd.DataFrame(s).T;
(function(){var __accu0__=[];for(var i=0;i<10;i++)if(__mod__(i,2)==0)__accu0__.append(i);return __accu0__})();
__init__.py;
t.start();
plt.gca().xaxis.set_major_formatter(FixedFormatter(ll));
thread.exit();
var d=function(){var __accu0__=[];for(var [k,v]of list(d.py_items()))__accu0__.append([k,frozenset(v)]);return dict(__accu0__)}();
root.mainloop();
sorted(data,__kwargtrans__({key:itemgetter(1)}));
print(json.dumps(data,__kwargtrans__({indent:2,sort_keys:true})));
reactor.run();
export var L=function(){var __accu0__=[];for(var i of ndx)__accu0__.append(L[i]);return __accu0__}();
export var yourdate=dateutil.parser.parse(datestring);
[1,2];
cv2.waitKey(0);
var x=np.maximum(x,y);
list(flatten(elements));
time.sleep(1);
f.close();
self._socket.setsockopt(socket.SOL_SOCKET,socket.SO_REUSEADDR,1);
word.__getslice__(1,null,1);
export var my_handler=logging.StreamHandler(sys.stdout);
print(date.today().year+1);
df.apply(function __lambda__(x){return np.sqrt(x.dot(x))},__kwargtrans__({axis:1}));
print(str(2)+str(1));
export var designs=Design.objects.filter(__kwargtrans__({author__user__profile__screenname__icontains:w}));
var d=dict(function(){var __accu0__=[];for(var [x,y]of enumerate(t))__accu0__.append(tuple([y,x]));return py_iter(__accu0__)}());
zip(...s)[0];
list(chain.from_iterable(list_of_lists));
MyApp().run();
server.serve_forever();
np.concatenate(tuple([a,val]));
map(partial(f,x),y)==map(f,[x]*len(y),y);
var __left0__=ax.get_legend_handles_labels();export var handles=__left0__[0];export var labels=__left0__[1];
var __left0__=function(){var __accu0__=[];for(var i of line.py_split())__accu0__.append(int(i));return py_iter(__accu0__)}();var a=__left0__[0];var b=__left0__[1];var c=__left0__[2];
export var Y=X-X.mean(__kwargtrans__({axis:1})).reshape(-1,1);
f.close();
sys.path.insert(1,os.path.dirname(os.path.realpath("./P2JSnippets.py")));
map(list,zip(charlist,numlist));
time.sleep(5);
np.hstack(b);
test[numpy.logical_or.reduce(function(){var __accu0__=[];for(var x of wanted)__accu0__.append(test.__getitem__([tuple([0,null,1]),1])==x);return __accu0__}())];
var results=function(){var __accu0__=[];for(var s of strings)if(any(function(){var __accu1__=[];for(var m of matchers)__accu1__.append(__in__(m,s));return py_iter(__accu1__)}()))__accu0__.append(s);return __accu0__}();
s.sendmail(FROMADDR,TOADDR+CCADDR,msg.as_string());
ndb.StringProperty(__kwargtrans__({repeated:true}));
export var reverse_lst=lst.__getslice__(0,null,-1);
ax1.set_xticklabels([]);
deletelist.__getslice__(-n,null,1);
export var arr=[[],[]];
np.where(np.in1d(a,b));
dict(zip(...[py_iter(l)]*2));
L.__setslice__(0,null,null,new_list);
strg.__getslice__(n,null,1)+strg.__getslice__(0,n,1);
df[~df.applymap(np.isreal).all(1)];
var b=function(){var __accu0__=[];for(var i of a)__accu0__.append(int(i!=0));return __accu0__}();
var driver=webdriver.Firefox();
print(proc.communicate()[0]);
var names=function(){var __accu0__=[];for(var description of cursor.description)__accu0__.append(description[0]);return __accu0__}();
plt.show();
plt.show();
plt.show();
dict(function(){var __accu0__=[];for(var [k,v]of list(points.py_items()))if(all(function(){var __accu1__=[];for(var x of v)__accu1__.append(x<5);return py_iter(__accu1__)}()))__accu0__.append(tuple([k,v]));return py_iter(__accu0__)}());
inlinkDict[docid]=adoc.__getslice__(1,null,1);
(function(){var __accu0__=[];for(var x=0;x<10;x++)__accu0__.append(x*x);return py_iter(__accu0__)})();
main();
var singleitem=mylist[-1];
len(dict[key]);
array.append(function(){var __accu0__=[];for(var x of line.py_split())__accu0__.append(int(x));return __accu0__}());
[[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0]];
pd.DataFrame(df.to_records());
export var verts=function(){var __accu0__=[];for(var y=0;y<10;y++)__accu0__.append(function(){var __accu1__=[];for(var x=0;x<100;x++)__accu1__.append(0);return __accu1__}());return __accu0__}();
(function(){var __accu0__=[];for(var [k,v]of zip(range(1,5),count(7)))__accu0__.append([k,v]);return dict(__accu0__)})();
cursor.execute(sql);
main(sys.argv.__getslice__(1,null,1));
export var date=models.DateTimeField(__kwargtrans__({py_default:datetime.now,blank:true}));
sys.exit(app.exec_());
var A=function(){var __accu0__=[];for(var j=0;j<Math.pow(2,n);j++)__accu0__.append(function(){var __accu1__=[];for(var i=0;i<n;i++)__accu1__.append(0);return __accu1__}());return __accu0__}();
var x=float(x);
sorted(test,__kwargtrans__({key:function __lambda__(x){return isinstance(x,list)&&len(x)||1}}));
root.mainloop();
fig.show();
Math.pow(a.__getitem__([tuple([0,null,1]),np.newaxis,tuple([0,null,1])])-v,2).sum(__kwargtrans__({axis:-1})).shape;
plt.show();
print(datetime.datetime.now(EST()));
(array_2d==row).all(-1).sum();
sorted([true,false,false]);
random.sample(range(len(mylist)),sample_size);
array([[0,1,0],[1,1,1],[0,1,0]]);
np.argmax(np.max(x,__kwargtrans__({axis:0})));
plt.show();
df[df.index.levels[0].isin(function(){var __accu0__=[];for(var i of stk_list)__accu0__.append(int(i));return __accu0__}())];
df.show();
process.stdin.flush();
np.vstack(counts_array);
ax.xaxis.set_major_locator(ticker.LogLocator(__kwargtrans__({numticks:6})));
datetime.datetime(2012,4,1,0,0).timestamp();
(function(){var __accu0__=[];for(var x of zip(...sorted(zip(list1,list2),__kwargtrans__({key:itemgetter(0)}))))__accu0__.append(list(x));return __accu0__})();
export var date_time_secs=time.mktime(datetimeobj.timetuple());
os.makedirs(path_directory);
m.__getitem__([tuple([0,null,1]),0]).reshape(5,1).shape;
ax.set_axis_off();
export var words=line.py_split();
queryset.filter(__kwargtrans__({created_at__gte:datetime.date.today()}));
os.getpid();
py_next(function(){var __accu0__=[];for(var [i,v]of enumerate(l))if(is_odd(v))__accu0__.append(i);return py_iter(__accu0__)}());
smtp.sendmail(send_from,send_to,msg.as_string());
print(list(sk.d.py_items()));
plt.scatter(x,y,__kwargtrans__({color:c}));
settings.py;
print(pd.Series(df.py_values.tolist(),__kwargtrans__({index:df.index})));
(function(){var __accu0__=[];for(var y=0;y<N;y++)__accu0__.append(function(){var __accu1__=[];for(var x=0;x<N;x++)__accu1__.append(random.random());return __accu1__}());return __accu0__})();
set(alllists).difference(set(subscriptionlists));
plt.show();
(function(){var __accu0__=[];for(var [key,py_values]of list(rev_multidict.py_items()))if(len(py_values)>1)__accu0__.append(py_values);return __accu0__})();
export var start_delta=datetime.timedelta(__kwargtrans__({days:weekday,weeks:1}));
plt.tight_layout();
pd.concat([df_current,df_future]).sort_index();
bin(_);
var a=a.reshape(tuple([m,n])).T;
var result=function(){var __accu0__=[];for(var _=0;_<x;_++)__accu0__.append(list(someListOfElements));return __accu0__}();
var x=list(set(x));
plt.show();
print(all(function(){var __accu0__=[];for(var i=0;i<len(lst)-1;i++)__accu0__.append(lst[i].lower()<lst[i+1].lower());return py_iter(__accu0__)}()));
max(l,__kwargtrans__({key:function __lambda__(x){return tuple([x[1],random.random()])}}));
bin(6).__getslice__(2,null,1).zfill(8);
dict(zip(it,it));
data.apply(function __lambda__(r){return sorted(r)},__kwargtrans__({axis:1})).drop_duplicates();
sum(function(){var __accu0__=[];for(var c of strs)if(c.isdigit())__accu0__.append(int(c));return py_iter(__accu0__)}());
arr[np.maximum.accumulate(np.isnan(arr),__kwargtrans__({axis:1}))]=np.nan;
writer.writerow([val]);
cursor.execute(sql_and_params[0],sql_and_params.__getslice__(1,null,1));
df.sort_index(__kwargtrans__({inplace:true}));
print(df.head());
print(os.path.basename(sys.argv[0]));
plt.show();
self.somevalue=somevalue;
plt.show();
(function(){var __accu0__=[];for(var i=0;i<len(l);i++)for(var x of l[i])__accu0__.append(x);return __accu0__})();
np.vstack(dat_list);
max(l,__kwargtrans__({key:function __lambda__(x){return x[1]+random.random()}}));
self.date=d.py_replace(__kwargtrans__({tzinfo:pytz.utc}));
a.insert(0,a.py_pop());
export var py_new=np.reshape(a,tuple([-1,ncols]));
min(list(range(len(py_values))),__kwargtrans__({key:function __lambda__(i){return tuple([py_values[i],-i])}}));
var timestamp=dt.py_replace(__kwargtrans__({tzinfo:timezone.utc})).timestamp();
print(function(){var __accu0__=[];for(var x of A)if(all(function(){var __accu1__=[];for(var y of B)__accu1__.append(__in__(y,x));return py_iter(__accu1__)}()))__accu0__.append(x);return __accu0__}());
plt.show();
ax.set_xticklabels(xlbls);
py_typeof(py_iter(d.py_values()));
var df=df/df.max().astype(np.float64);
conn.commit();
plt.show();
(function(){var __accu0__=[];for(var i=0;i<4;i++)__accu0__.append(function __lambda__(x){return x*i});return __accu0__})();
var df=pd.read_sql(sql,cnxn);
test.__name__;
plt.show();
os.isatty(sys.stdin.fileno());
export var wordcount=len(s.py_split());
scipy.optimize.leastsq(residuals,p_guess,__kwargtrans__({args:tuple([x,y])}));
print(decrement());
df.corr().mask(np.equal.outer(df.index.py_values,df.columns.py_values));
random.choice(mylist);
export var tuple_list=function(){var __accu0__=[];for(var [a,b]of tuple_list)__accu0__.append(tuple([a,some_process(b)]));return __accu0__}();
export var zeros=np.where(a==0)[0];
new set([new set([OBJNAME.get_FIELDNAME_display])]);
p.stdin.close();
f.write(s);
export var test=sorted(test,__kwargtrans__({key:function __lambda__(x){return py_typeof(x)==list?len(x):1}}));
text_file.close();
sys.setrecursionlimit();
root.mainloop();
export var holes=function(){var __accu0__=[];for(var i=0;i<len(table)-1;i++)__accu0__.append(tuple([table[i][1]+1,table[i+1][0]-1]));return __accu0__}();
export var opener=urllib.request.build_opener(urllib.request.HTTPCookieProcessor(cj));
export var time=timeit.timeit(function __lambda__(){return module.expensive_func(data)});
(function(){var __accu0__=[];for(var [k,v]of list(dict1.py_items()))if(__in__(k,dict2))__accu0__.append([k,v*dict2[k]]);return dict(__accu0__)})();
json.dumps(fu);
map.put(key,new_value);
root.mainloop();
export var dic=dict(function(){var __accu0__=[];for(var [x,y]of enumerate(al,1))__accu0__.append(tuple([y,x]));return py_iter(__accu0__)}());
plt.show();
arr[[1,4,5]];
var logger=logging.getLogger(__name__);
fig.tight_layout();
cherrypy.engine.start();
root.mainloop();
df.columns=pd.MultiIndex.from_tuples(df.columns.to_series());
somelist.__setslice__(0,null,null,function(){var __accu0__=[];for(var x of somelist)if(!determine(x))__accu0__.append(x);return __accu0__}());
(function(){var __accu0__=[];for(var x of itertools.groupby(sorted(mylist)))__accu0__.append([x[0],len(list(x[1]))]);return dict(__accu0__)})();
(function __lambda__(x,f){return list(function(){var __accu0__=[];for(var y of f(x))__accu0__.append(y[1]);return py_iter(__accu0__)}())})(lst,function __lambda__(x){return function(){var __accu0__=[];for(var y of x)__accu0__.append(sorted(y));return py_iter(__accu0__)}()});
connection.commit();
sum(a);
pdb.set_trace();
np.py_split(a,np.nonzero(np.diff(a))[0]+1);
self.button.clicked.connect(self.calluser);
blog.comment_set.all();
export var cap=cv2.VideoCapture(0);
[array([0]),array([47,48,49,50]),array([97,98,99])];
ax.set_xticklabels(x);
ma.array(a,__kwargtrans__({mask:np.isnan(a)})).mean(__kwargtrans__({axis:0}));
pd.crosstab(df.A,df.B).apply(function __lambda__(r){return r/len(df)},__kwargtrans__({axis:1}));
pd.DataFrame([record_1]);
app.run(__kwargtrans__({debug:true}));
scipy.stats.hypergeom.cdf(k,M,n,N);
(function(){var __accu0__=[];for(var x of[a,b,d,c])__accu0__.append(np.nonzero(np.in1d(x,c))[0]);return __accu0__})();
pd.DataFrame(np.where(df,1,0),df.index,df.columns);
var f=function __lambda__(x,y){return x+y};
var data=json.load(f);
tuple(function(){var __accu0__=[];for(var tup of A)__accu0__.append(tup[0]);return py_iter(__accu0__)}());
datetime.fromtimestamp(1268816500);
plt.show();
len(set(a))==len(a);
np.isnan(a);
np.cov(x);
np.linalg.norm(x,__kwargtrans__({ord:1}));
[1,4,5,6,7];
inspect.getmembers(my_module,inspect.isclass);
s.map(function __lambda__(x){return x.__getslice__(0,2,1)});
ioloop.IOLoop.instance().start();
(function(){var __accu0__=[];for(var [k,g]of itertools.groupby(iterable))__accu0__.append(list(g));return __accu0__})();
np.equal.reduce([false,0,1]);
f.write(json.dumps(data,__kwargtrans__({ensure_ascii:false})));
Counter(map(tuple,list1));
os.path.dirname(fullpath);
list(range(len(strs)-1,-1,-1));
csv_file.writerows(the_list);
python- -version;
np.cumsum(np.concatenate(tuple([[0],np.bincount(v)])))[v];
(function(){var __accu0__=[];for(var [k,g]of groupby(sorted(chain.from_iterable(py_iter(content.py_values())))))__accu0__.append(k);return __accu0__})();
np.asarray(function(){var __accu0__=[];for(var i of arr)__accu0__.append(func(i));return __accu0__}());
numpy.in1d(a,b).nonzero();
df.fillna(0);
ax.set_yticks([]);
export var current_module=sys.modules[__name__];
server.starttls();
np.hstack([X,Y]);
plt.figure();
sys.exit(1);
env.skip_bad_hosts=true;
!any(my_list);
map(max,zip(...alist));
Book.objects.filter(Q(__kwargtrans__({author__id:1}))&Q(__kwargtrans__({author__id:2})));
Thread(__kwargtrans__({target:cherrypy.quickstart,args:[Root()]})).start();
app.mainloop();
var f=os.path.join(path,f);
df[last_row.argsort()];
dict(zip(l.__getslice__(0,null,2),l.__getslice__(1,null,2)));
(function(){var __accu0__=[];for(var i of list)__accu0__.append(Math.pow(i,2));return __accu0__})();
numpy.where(mask,1,numpy.where(numpy_array==0,0,2));
QApplication.desktop();
plt.show();
sys.exit();
server.serve_forever();
export var mydict=dict(function(){var __accu0__=[];for(var rows of reader)__accu0__.append(tuple([rows[0],rows[1]]));return py_iter(__accu0__)}());
numpy.empty(tuple([10,4,100]));
(function(){var __accu0__=[];for(var [k,v]of list(dict.py_items()))if(v>something)__accu0__.append([k,v]);return dict(__accu0__)})();
admin.site.register(User,UserAdmin);
fig.autofmt_xdate();
plt.show();
(function(){var __accu0__=[];for(var [k,count]of list(Counter(L).py_items()))if(count>1)__accu0__.append(k);return __accu0__})();
export var entry=function(){var __accu0__=[];for(var x of cols.findAll(__kwargtrans__({text:true})))__accu0__.append(str(x));return __accu0__}();
plt.show();
etree.tostring(e,__kwargtrans__({pretty_print:true}));
admin.site.register(Person,PersonAdmin);
pygame.display.set_mode(tuple([1,1]));
sorted(py_iter(cityPopulation.py_items()),__kwargtrans__({key:function __lambda__(k_v){return k_v[1][2]},reverse:true}));
y.astype(int);
print(m.group(1));
var data=numpy.genfromtxt(yourFileName,__kwargtrans__({skiprows:n}));
localtime(now()).py_replace(__kwargtrans__({hour:0,minute:0,second:0,microsecond:0}));
df2.reindex(df.index);
plt.show();
plt.show();
np.random.random(tuple([N,N]));
var app=Flask(__name__);
setattr(i,x,f(getattr(i,x)));
max(x,__kwargtrans__({key:x.py_get}));
plt.show();
zip(...sorted(zip(x,y),__kwargtrans__({key:ig0})));
export var all_challenges=session.query(Challenge).join(Challenge.attempts).all();
(function(){var __accu0__=[];for(var dictio of dictlist)if(__in__(dictio[key],valuelist))__accu0__.append(dictio);return __accu0__})();
sum(function(){var __accu0__=[];for(var [x,y]of zip(sorted(xs),sorted(ys)))__accu0__.append(abs(x-y));return py_iter(__accu0__)}());
(function(){var __accu0__=[];for(var x of py_values)__accu0__.append(function(){var __accu1__=[];for(var y of x)__accu1__.append(int(y));return __accu1__}());return __accu0__})();
(function(){var __accu0__=[];for(var l of L)__accu0__.append(OrderedDict(function(){var __accu1__=[];for(var [k,v]of l.py_items())__accu1__.append(tuple([k,d[k](v)]));return py_iter(__accu1__)}()));return __accu0__})();
var l=np.array(function(){var __accu0__=[];for(var _=1;_<11;_++)__accu0__.append(list(method().py_values()));return __accu0__}());
ax.xaxis.set_major_locator(locator);
sys.stdout.flush();
outfile.write(infile.read());
os.path.dirname(sys.argv[0]);
button.clicked.connect(self.commander(command));
__init__.py;
export var input_str=sys.stdin.read();
print(re.findall(pattern,x));
(function(){var __accu0__=[];for(var [i,item]of enumerate(a))if(__in__(item,b))__accu0__.append(i);return __accu0__})();
(function(){var __accu0__=[];for(var l of nested_lst)__accu0__.append(tuple(l));return __accu0__})();
(function(){var __accu0__=[];for(var x of results)if(condition(x))__accu0__.append(transform(x));return __accu0__})();
min(function(){var __accu0__=[];for(var x of lst)if(isinstance(x,str))__accu0__.append(x);return py_iter(__accu0__)}());
server.serve_forever();
os.path.abspath(math.__file__);
sum(map(int,l));
export var im=Image.fromarray(my_array);
list_.py_sort(__kwargtrans__({key:function __lambda__(x){return x[0]}}));
do_something();
(function(){var __accu0__=[];for(var row of zip(matrix1,matrix2))__accu0__.append(function(){var __accu1__=[];for(var [i,j]of zip(...row))__accu1__.append(i*j);return __accu1__}());return __accu0__})();
var result=sorted(py_iter(promotion_items.py_items()),__kwargtrans__({key:function __lambda__(pair){return list(pair[1].py_items())}}));
sys.exit(app.exec_());
print(getpass.getuser());
getattr(model,fieldtoget);
output.close();
sorted(list(d.py_items()),__kwargtrans__({key:operator.itemgetter(1,0)}));
foo();
(function(){var __accu0__=[];for(var i of str(number))__accu0__.append(int(i));return __accu0__})();
plt.show();
os.system(cmd);
pd.DataFrame(a,df.index,df.columns);
(a1.__getitem__([tuple([0,null,1]),numpy.newaxis])==a2).all(__kwargtrans__({axis:2})).astype(int);
gtk.main();
s1.reset_index(__kwargtrans__({drop:true}))*s2.reset_index(__kwargtrans__({drop:true}));
df.applymap(np.isreal);
(function(){var __accu0__=[];for(var i=0;i<10;i++)__accu0__.append(i*y+x);return __accu0__})();
df.reindex_axis(sorted(df.columns),__kwargtrans__({axis:1}));
var l=list(set(l));
var p=subprocess.Popen(cmd,__kwargtrans__({stdin:subprocess.PIPE,stdout:subprocess.PIPE}));
logging.basicConfig(__kwargtrans__({level:logging.WARN}));
logging.Formatter.__init__(self,msg);
plt.show();
datetime.utcfromtimestamp(float(self.timestamp));
curses.doupdate();
export var pixmap4=pixmap.scaled(64,64,QtCore.Qt.KeepAspectRatio);
var A=A-A.multiply(B);
plt.show();
sys.exit(0);
export var revdict=dict(function(){var __accu0__=[];for(var [k,v]of list(ref.py_items()))__accu0__.append(tuple([v,k]));return py_iter(__accu0__)}());
zip(...lists);
plt.show();
plt.show();
dict(function(){var __accu0__=[];for(var k of a)__accu0__.append(tuple([k,2]));return py_iter(__accu0__)}());
a.__getitem__([tuple([0,null,1]),tuple([0,null,2])])+a.__getitem__([tuple([0,null,1]),tuple([1,null,2])]);
np.array(list(g));
win.show_all();
plt.show();
list1.py_sort(__kwargtrans__({key:convert}));
(function(){var __accu0__=[];for(var a of s)if(s.count(a)==1)__accu0__.append(a);return __accu0__})()[0];
numpy.nonzero(numpy.in1d(a,b));
browser.quit();
plt.subplots_adjust(__kwargtrans__({top:.75}));
session.commit();
dict(function(){var __accu0__=[];for(var t of fun_list)__accu0__.append(tuple([t.__name__,t]));return __accu0__}());
sorted(temp,__kwargtrans__({key:itemgetter(1),reverse:true}));
var l=function(){var __accu0__=[];for(var x of l)if(x.strip())__accu0__.append(x);return __accu0__}();
a.__getitem__([np.arange(np.shape(a)[0]).__getitem__([tuple([0,null,1]),np.newaxis]),np.argsort(a)]);
root.mainloop();
b.py_sort(__kwargtrans__({key:function __lambda__(x){return a.index(x)}}));
np.put(arr,np.where(~np.in1d(arr,valid))[0],0);
b[a.__getitem__([1,1])];
var z=arr.__getitem__([tuple([0,null,1]),5]).sum();
ftp.quit();
ast.literal_eval(reclist);
sorted(d,__kwargtrans__({key:function __lambda__(x){return tuple([-x[1],x[0]])}}));
df.append(new_df,__kwargtrans__({ignore_index:true}));
df.sort_index(__kwargtrans__({inplace:true}));
set(function(){var __accu0__=[];for(var x of list1)__accu0__.append(x[0]);return py_iter(__accu0__)}()).intersection(function(){var __accu0__=[];for(var y of list2)__accu0__.append(y[0]);return py_iter(__accu0__)}());
print(etree.tostring(root,__kwargtrans__({pretty_print:true})));
string.py_split(pattern,1)[0];
root.mainloop();
sys.stdin.isatty();
os.kill(pid,signal.SIGTERM);
os.path.join(directory,filename);
RotatingFileHandler(filename,__kwargtrans__({maxBytes:10*1024*1024,backupCount:5}));
plt.legend();
a[-1]*(a[-1]+a[0])/2-sum(a);
export var your_list=function(){var __accu0__=[];for(var i of f.read().py_split())__accu0__.append(int(i));return __accu0__}();
sympy.sstr(_);
plt.show();
(function(){var __accu0__=[];for(var d of thedict.py_values())for(var alist of d.py_values())for(var x of alist)__accu0__.append(x);return __accu0__})();
pd.concat([data,ts]).sort_index().interpolate().reindex(ts.index);
print(repr(the_string));
list(function(){var __accu0__=[];for(var s of jones)__accu0__.append([len(s),s]);return dict(__accu0__)}().py_values());
np.tile(np.arange(y),x);
print(list(itertools.combinations(a,i)));
export var newprefix=list(prefix);
ax.set_ylim(0,1);
python-mserver;
sum(jdcal.gcal2jd(dt.year,dt.month,dt.day));
User.query.join(User.person).filter(Person.id.in_(function(){var __accu0__=[];for(var p of people)__accu0__.append(p.id);return py_iter(__accu0__)}())).all();
Project.objects.filter(__kwargtrans__({action__person:person}));
export var menu=gtk.Menu();
var x=min(function(){var __accu0__=[];for(var s of l)__accu0__.append(float(s));return py_iter(__accu0__)}());
threading.Thread.__init__(self);
sorted(list(c.py_items()),__kwargtrans__({key:itemgetter(0)}));
np.polyfit(x,y,4);
sorted(a,__kwargtrans__({key:function __lambda__(v){return tuple([v,random.random()])}}));
(function(){var __accu0__=[];for(var [i,x]of enumerate(lst))if(x<a||x>b)__accu0__.append(i);return __accu0__})();
plt.show();
np.count_nonzero(boolarr);
var y=function(){var __accu0__=[];for(var i of x)__accu0__.append(i[0]);return py_iter(__accu0__)}();
plt.show();
queryset.filter(__kwargtrans__({created_at__range:tuple([start_date,end_date])}));
QtCore.Qt.ItemIsEnabled;
time.sleep(10);
datetime.datetime(1970,1,1)+datetime.timedelta(__kwargtrans__({seconds:-2082816E3}));
var data=numpy.loadtxt(yourFileName,__kwargtrans__({skiprows:n}));
a.transpose(2,0,1);
df.to_dict();
var b=np.fill_diagonal(np.zeros_like(a),value);
python-pip;
f(tup1[0],tup1[1],tup2[0],tup2[1]);
print(bytes.decode(encoding));
sys.stdout.flush();
plt.show();
plt.show();
plt.setp([ax.get_xticklines(),ax.get_yticklines()],__kwargtrans__({color:color}));
var z=merge_two_dicts(x,y);
f(...args);
cursor.close();
a.index(max(a));
p.wait();
ma.vstack([a,ma.array(np.resize(b,a.shape[0]),__kwargtrans__({mask:[false,false,true]}))]);
__init__.py;
G.__setitem__([i,j],C_abs.__getitem__([i,j])+C_abs.__getitem__([j,i]));
(function(){var __accu0__=[];for(var x of string.printable)__accu0__.append([x,0]);return dict(__accu0__)})();
tuple(function(){var __accu0__=[];for(var i of range(0,len(s),2))__accu0__.append(s.__getslice__(i,i+2,1));return py_iter(__accu0__)}());
(function(){var __accu0__=[];for(var x of py_values)__accu0__.append(map(int,x));return __accu0__})();
var __left0__=function(){var __accu0__=[];for(var i of tuple([0,1]))__accu0__.append(function(){var __accu1__=[];for(var x of a)if(x[0]==i)__accu1__.append(x);return __accu1__}());return __accu0__}();export var aList=__left0__[0];export var bList=__left0__[1];
export var pool=Pool(4,initializer,tuple([]));
app.mainloop();
var browser=webdriver.Safari();
print(math.ceil(4.2));
tf.sqrt(tf.reduce_mean(tf.square(tf.sub(targets,outputs))));
export var ones=function(){var __accu0__=[];for(var [x,y]of l)if(y==1)__accu0__.append(tuple([x,y]));return __accu0__}();
gtk.main();
(function(){var __accu0__=[];for(var s of mylist)__accu0__.append(s+mystring);return __accu0__})();
ser.readline();
var result=sum(function(){var __accu0__=[];for(var x of range(1,401,4))__accu0__.append(x);return py_iter(__accu0__)}());
doctest.testmod();
os.chmod(path,mode);
[[.4,.6,0,0],[.2,.4,.4,0],[0,0,.4,.6]];
df.corr().iloc.__getitem__([tuple([0,-1,1]),-1]);
[0]*4;
sorted(l,__kwargtrans__({key:function __lambda__(i){return hypot(i[0]-pt[0],i[1]-pt[1])}}));
export var session=Session.get_by_id(sid);
export var ar=function(){var __accu0__=[];for(var r of cur.fetchall())__accu0__.append(r[0]);return __accu0__}();
frozenset(list(a.py_items()));
norm.ppf(norm.cdf(1.96));
plt.show();
var root=tree.getroot();
sorted(set().union(...input_list));
plt.gca().set_position([0,0,1,1]);
var d=function(){var __accu0__=[];for(var k of py_keys)__accu0__.append([k,[]]);return dict(__accu0__)}();
f.close();
forms.ModelForm.__init__(self,...args,__kwargtrans__(kwargs));
socket.socket(socket.AF_INET,socket.SOCK_DGRAM);
file.read(1);
f.seek(0);
print(nat.index(nat.Germany));
plt.show();
plt.subplots_adjust(__kwargtrans__({bottom:.2}));
random.choice(string.ascii_letters+string.digits);
export var form=MyModelForm(request.POST,__kwargtrans__({instance:my_record}));
var a=function(){var __accu0__=[];for(var row of stdin)__accu0__.append(map(int,row.py_split()));return __accu0__}();
list(itertools.accumulate(lst,function __lambda__(a,b){return tuple(map(sum,zip(a,b)))}));
plt.show();
main();
simplelist.append(x);
(function(){var __accu0__=[];for(var line of f)for(var word of line.py_split())__accu0__.append(word);return __accu0__})();
print(arr[[1,4,5]]);
export var integers=function(){var __accu0__=[];for(var i of line.py_split())__accu0__.append(int(i)-1);return __accu0__}();
plt.show();
var p=ax.scatter(xs,ys,zs,__kwargtrans__({c:cs,marker:m}));
list(itertools.chain.from_iterable(list(d.py_values())));
collections.Counter(a);
self.show();
(function(){var __accu0__=[];for(var i=start;i<start+len(numbers);i++)__accu0__.append(numbers[__mod__(i,len(numbers))]);return __accu0__})();
plt.show();
json.dumps(function(){var __accu0__=[];for(var pn of lst)__accu0__.append(dict(__kwargtrans__({mpn:pn})));return __accu0__}());
plt.imshow(cv2.cvtColor(cube,cv2.COLOR_BGR2RGB));
print(list_end_counter([1,2,1,1,1,1,1,1]));
map(itemgetter(1),elements);
root.deiconify();
test.reshape(tuple([4,4])).__getitem__([tuple([0,null,1]),tuple([0,2,1])]).reshape(tuple([2,4]));
var dt=tz.localize(naive,__kwargtrans__({is_dst:true}));
print(json.dumps(result));
print(applejuice.__name__);
sys.path.append(module_path);
d+=datetime.timedelta(1);
subprocess.call(cmd,__kwargtrans__({stdin:f}));
map(function __lambda__(y){return function(){var __accu0__=[];for(var i of range(0,len(y),length))__accu0__.append(np.mean(y.__getslice__(i,i+length,1)));return __accu0__}()},a);
export var testarray=ast.literal_eval(teststr);
bool(random.getrandbits(1));
(arr==arr[0]).all();
[tuple([0,0,1,1]),tuple([0,1,0,1])];
test.__defaults__;
sys.exit(main(sys.argv[1],sys.argv[2]));
var A=np.delete(A,50,1);
print(json.dumps(result));
var my_dictionary=dict(map(function __lambda__(k_v){return tuple([k_v[0],f(k_v[1])])},py_iter(my_dictionary.py_items())));
zipfile.ZipFile(path);
(function(){var __accu0__=[];for(var x of data)__accu0__.append(sum(zip(...x)[1]));return __accu0__})();
data.groupby(__kwargtrans__({level:[0,1]})).sum();
plt.show();
sys.exit(1);
export var img=Image.open(file);
var res_list=function(){var __accu0__=[];for(var i of rows)__accu0__.append(i[0]);return __accu0__}();
sys.exit(1);
plt.show();
plt.show();
np.polyfit(X,Y,1);
export var score=sum(function(){var __accu0__=[];for(var [x,y]of zip(a,b))__accu0__.append(x*y);return __accu0__}());
export var frame=pd.read_csv(path,__kwargtrans__({names:columns}));
var b=function(){var __accu0__=[];for(var sub of a)for(var i of sub)__accu0__.append(i);return __accu0__}();
os.close(fh2);
plt.show();
cursor.commit();
(function(){var __accu0__=[];for(var x of my_list)__accu0__.append(function(){var __accu1__=[];for(var y of x)if(!__in__(y,to_del))__accu1__.append(y);return __accu1__}());return __accu0__})();
print(sum(map(ord,my_string)));
a[key].append(1);
c.most_common(1);
sum(d.py_values());
(function(){var __accu0__=[];for(var i of s)__accu0__.append(i.isdigit()?int(i):float(i));return __accu0__})();
plt.show();
plt.minorticks_off();
output.close();
ax.get_xaxis().get_major_formatter().set_scientific(false);
var app=Flask(__name__);
tree.delete(...tree.get_children());
(function(){var __accu0__=[];for(var [i,n]of enumerate(xs))if(i==0||n!=xs[i-1])__accu0__.append(n);return __accu0__})();
plt.show();
var r=np.ptp(a,__kwargtrans__({axis:1}));
d.py_update(function(){var __accu0__=[];for(var [i,b]of enumerate(a))__accu0__.append(tuple([b,a.__getitem__([tuple([0,null,1]),i])]));return py_iter(__accu0__)}());
cbar.set_ticklabels([mn,md,mx]);
py_next(function(){var __accu0__=[];for(var [i,val]of enumerate(lst))if(np.all(val==array))__accu0__.append(i);return py_iter(__accu0__)}(),-1);
reactor.run();
root.mainloop();
df.groupby(Math.floor(df.index.year/10)*10).sum();
var x=function(){var __accu0__=[];for(var j=0;j<10;j++)__accu0__.append(function(){var __accu1__=[];for(var i=0;i<10;i++)__accu1__.append(foo);return __accu1__}());return __accu0__}();
self.response.out.write(self.request.body);
plt.show();
Category.objects.filter(__kwargtrans__({category__isnull:true}));
ax.w_yaxis.set_ticklabels([]);
(function(){var __accu0__=[];for(var x of a[0])__accu0__.append(len(x));return __accu0__})();
plt.show();
os.path.join(mydir,myfile);
plt.show();
plt.show();
driver.quit();
list1[0][2];
export var dummy=np.array([[1,1,0,0],[0,0,1,1]]).T;
(function(){var __accu0__=[];for(var [i,v]of enumerate(myList))if(!__in__(i,toRemove))__accu0__.append(v);return __accu0__})();
(df==1).sum();
asyncio.get_event_loop().run_forever();
np.flatnonzero(x.__getslice__(0,-1,1)!=x.__getslice__(1,null,1)).mean()+.5;
datetime(date.year,date.month,date.day);
plt.show();
map(function __lambda__(f){return f(...args)},funcs);
numpy.zeros(tuple([i,j,k]));
var y=function(){var __accu0__=[];for(var i of x)__accu0__.append(i[0]);return __accu0__}();
plt.show();
df.ix.__getitem__([tuple([0,5,1]),tuple([0,10,1])]);
(function(){var __accu0__=[];for(var x of a)if(x<=1||x>=4)__accu0__.append(x);return __accu0__})();
proc.communicate();
f(...args,__kwargtrans__(kwargs));
var c=function(){var __accu0__=[];for(var pair of zip(a,b))for(var item of pair)__accu0__.append(item);return __accu0__}();
ax.lines.py_pop(0);
sorted(Thing.objects.all(),__kwargtrans__({key:function __lambda__(t){return t.py_name}}));
ssh.close();
sock.setsockopt(socket.SOL_SOCKET,socket.SO_REUSEADDR,1);
root.mainloop();
a.__getitem__([tuple([0,null,1]),0])[mask];
plt.plot(x.__getslice__(i,i+2,1),y.__getslice__(i,i+2,1));
var l=function(){var __accu0__=[];for(var i of l)__accu0__.append(i.py_split());return __accu0__}();
reactor.run();
ax.set_yticklabels([]);
self.searchqueryset.filter(__kwargtrans__({group__isnull:true}));
some_list.remove(thing);
datetime.datetime(1,1,1)+datetime.timedelta(__kwargtrans__({microseconds:ticks/10}));
(function(){var __accu0__=[];for(var x of l)if(__mod__(x,2)==0)__accu0__.append(x);return __accu0__})();
logger.setLevel(logging.DEBUG);
np.cross(a,b,__kwargtrans__({axis:0}));
var c=dict(list(a.py_items())|list(b.py_items()));
self.canvas.pack();
root.mainloop();
plt.show();
[1,1,1]<[1,1,2];
df.iloc[i];
export var M=list(set(L));
df[df.apply(function __lambda__(x){return min(x)==max(x)},1)];
app.run(__kwargtrans__({debug:true}));
var logger=logging.getLogger(__name__);
my_list.py_sort(__kwargtrans__({key:nonesorter}));
export var FieldSet=dict(function(){var __accu0__=[];for(var [k,v]of FieldSet.py_items())if(len(v)!=1)__accu0__.append(tuple([k,v]));return py_iter(__accu0__)}());
__init__.py;
assertTrue(math.isnan(nan_value));
sum(function(){var __accu0__=[];for(var [k,v]of c.py_items())if(v>1)__accu0__.append(v);return py_iter(__accu0__)}());
s.send(my_bytes);
pylab.show();
np.place(a,np.isnan(a),0);
writer.writerows(cursor.fetchall());
array([[0,1,2],[0,2,0],[0,1,2],[1,2,0],[2,1,2]]);
y.mean(__kwargtrans__({axis:1})).mean(__kwargtrans__({axis:-1}));
ZipFile.write(a,__kwargtrans__({compress_type:zipfile.ZIP_DEFLATED}));
sys.stdout.flush();
pylab.show();
setattr(self,k,v);
x.reshape(2,2,5).transpose(1,0,2).reshape(4,5);
var l=function(){var __accu0__=[];for(var item of l)__accu0__.append(item.lower());return __accu0__}();
(function(){var __accu0__=[];for(var item of my_list)if(some_condition())__accu0__.append(item);return __accu0__})();
session.query(q).limit(10);
tuple(function(){var __accu0__=[];for(var row of myarray)__accu0__.append(tuple(row));return __accu0__}());
help(my_func);
p1.start();
Post.objects.filter(__kwargtrans__({createdAt__lte:datetime.now()-timedelta(__kwargtrans__({days:plan.days}))}));
export var coord=tuple(function(){var __accu0__=[];for(var x of zip(coord,change))__accu0__.append(sum(x));return py_iter(__accu0__)}());
sorted(lst,__kwargtrans__({key:function __lambda__(L){return tuple([L.lower(),L])}}));
plt.show();
time.mktime(time.gmtime(0));
plt.show();
getattr(foo_obj,command)();
var df=pd.DataFrame.from_dict(data);
print(result.group(0));
time.sleep(1);
var form=MyModelForm(__kwargtrans__({instance:someinst}));
self.Bind(wx.EVT_PAINT,self.OnPaint);
(function(){var __accu0__=[];for(var l of lol)__accu0__.append([l[1],l]);return dict(__accu0__)})();
any(function(){var __accu0__=[];for(var k of keywords)__accu0__.append(__in__(k,s));return py_iter(__accu0__)}());
len(a)==len(b)&&all(function(){var __accu0__=[];for(var i of a)__accu0__.append(a.count(i)==b.count(i));return py_iter(__accu0__)}());
a[a==2]=10;
sorted(lst,__kwargtrans__({key:operator.itemgetter(1),reverse:true}));
var cols=list(df.columns.py_values);
ax.legend();
Gtk.main();
myscript.py;
nx.draw(G);
signal.signal(signal.SIGINT,signal_handler);
root.mainloop();
var df=df.append(pd.read_sql(querystring,cnxn,__kwargtrans__({params:[i]})));
var n=sum(function(){var __accu0__=[];for(var [k,v]of list(dict_test.py_items()))__accu0__.append(len(v)+1);return __accu0__}());
(function(){var __accu0__=[];for(var _=0;_<sample_size;_++)__accu0__.append(random.choice(list_of_lists));return __accu0__})();
var mySet=set(function(){var __accu0__=[];for(var x=1;x<51;x++)for(var y=1;y<51;y++)__accu0__.append(tuple([x,y]));return py_iter(__accu0__)}());
export var bool_list=[false]*len(bool_list);
numpy.intersect1d(a,b);
A[np.ix_([0,2],[0,1],[1,2])];
spDF.rdd.first();
(function(){var __accu0__=[];for(var [i,[a,b]]of enumerate(zip(vec1,vec2)))if(a==b)__accu0__.append(i);return __accu0__})();
var root=Tk();
json.loads(s);
dict(function(){var __accu0__=[];for(var i of L)for(var j of list(i.py_items()))__accu0__.append(j);return py_iter(__accu0__)}());
ax.set_xticks([]);
outfile.write(line);
var df=pd.DataFrame(__kwargtrans__({data:matrix.toarray(),columns:names,index:raw}));
plt.show();
print(function(){var __accu0__=[];for(var i of index)__accu0__.append(s[i]);return __accu0__}());
print(tuple([i,function(){var __accu0__=[];for(var x of rgb)__accu0__.append(round(255*x));return __accu0__}()]));
[-2,-2,-2,-2,-8,-8,-8,-8,-8,-8];
ssh_client.set_missing_host_key_policy(paramiko.AutoAddPolicy());
plt.show();
cv2.waitKey(0);
list(range(11,17));
Thread(__kwargtrans__({target:fct})).start();
(function(){var __accu0__=[];for(var x of s.py_split())__accu0__.append(len(x));return __accu0__})();
(function(){var __accu0__=[];for(var y of a)if(!__in__(y,b))__accu0__.append(y);return __accu0__})();
df.insert(idx,col_name,value);
(function(){var __accu0__=[];for(var x of y)__accu0__.append(x+1);return __accu0__})();
defaultdict(function __lambda__(){return defaultdict(dict)});
db.session.add(query);
Group.objects.py_get(__kwargtrans__({id:1})).members.filter(__kwargtrans__({is_main_user:true}))[0];
sqs.filter(__kwargtrans__({has_been_sent:true}));
plt.show();
plt.show();
df.sort_index();
np.linspace(0,5,10);
numpy.transpose([numpy.tile(x,len(y)),numpy.repeat(y,len(x))]);
np.array(x).reshape(2,2,4);
admin.site.unregister(Site);
plt.figure(__kwargtrans__({figsize:tuple([5,6])}));
(function(){var __accu0__=[];for(var i=0;i<10;i++)__accu0__.append([i,0]);return dict(__accu0__)})();
os.setsid();
drawPropagation(1,1,numpy.linspace(-2,2,10));
(function(){var __accu0__=[];for(var sublist of function(){var __accu1__=[];for(var item of sublist)__accu1__.append(list_of_lists);return py_iter(__accu1__)}())__accu0__.append(item);return __accu0__})();
(function(){var __accu0__=[];for(var a of A.objects.all())if(a.b_set.count()<2)__accu0__.append(a);return __accu0__})();
var z=merge_dicts(a,b,c,d,e,f,g);
logging.basicConfig(__kwargtrans__({level:logging.DEBUG}));
int(s.__getslice__(1,null,1),2)/Math.pow(2,len(s)-1);
os.path.splitext(os.path.basename(f));
(function(){var __accu0__=[];for(var x of a)__accu0__.append(x[0]);return __accu0__})();
plt.show();
list(my_dict.py_items());
plt.show();
array([0,1,0,0,0,0,0,0,0,0]);
plt.show();
numpy.argwhere(a.max()==a);
lines.py_sort();
np.random.seed(1);
plt.show();
export var filtered_dict=function(){var __accu0__=[];for(var [k,v]of my_dict.py_items())if(!st.isdisjoint(v))__accu0__.append([k,v]);return dict(__accu0__)}();
export var simplelist=function(){var __accu0__=[];for(var count=0;count<4;count++)__accu0__.append(SimpleClass(count));return __accu0__}();
(function __lambda__(x,y){return x+y})(1,2);
plt.show();
array([0,0,1,0,0,1,0]);
ax.set_xticks([]);
doctest.testmod();
max(enumerate(props),__kwargtrans__({key:function __lambda__(tup){return len(tup[1])}}));
(M==0).T.nonzero();
a[np.lexsort(a.__getitem__([tuple([0,null,1]),tuple([0,null,-1])]).T)];
plt.plot(x,y);
numpy.mean(gp2);
a[key].append(2);
var my_dict2=function(){var __accu0__=[];for(var [x,y]of my_dict.py_items())__accu0__.append([y,x]);return dict(__accu0__)}();
func(...args,__kwargtrans__(kwargs));
df.iloc.__getitem__([tuple([0,null,1]),[0]]);
sum([true,true,true,false,false]);
(function(){var __accu0__=[];for(var [key,val]of list(dct.py_items()))if(val)__accu0__.append(key);return __accu0__})();
root.mainloop();
(function(){var __accu0__=[];for(var x of list_of_lists)__accu0__.append(heapq.nsmallest(x,2)[1]);return __accu0__})();
var a=function(){var __accu0__=[];for(var b of a)__accu0__.append(b<0?b+4:b);return __accu0__}();
var b=a.__getslice__(0,null,1);

L.append([7,8,9]);
zipfile.ZipFile(zipbytes);
export var random_key=os.urandom(16);
np.allclose(a,b);
var fig=plt.figure();
any(function(){var __accu0__=[];for(var x of my_list)__accu0__.append(np.array_equal(np.array([[0,0],[0,0]]),x));return py_iter(__accu0__)}());
(function(){var __accu0__=[];for(var [x,y]of numpy.ndindex(a.shape))__accu0__.append(tuple([x,y]));return __accu0__})();
admin.site.register(User,UserAdmin);
var l=ast.literal_eval(s);
plt.draw();
self.process.terminate();
export var soup=BeautifulSoup(html);
sorted(chain(a,b),__kwargtrans__({key:function __lambda__(x){return x.py_name}}));
pd.DataFrame(s.groupby(__kwargtrans__({level:0})).apply(list).to_dict());
export var py_name=sys.argv[1];
Gtk.main();
admin.site.register(YourModel,YourModelAdmin);
a.__setitem__([i,j],5);
sum(function(){var __accu0__=[];for(var row of rows)for(var i of row)if(i)__accu0__.append(1);return py_iter(__accu0__)}());
c.bin.__getslice__(2,null,1);
gtk.main();
[0]*1E4;
locals().py_update(my_dict);
plt.show();
(function(){var __accu0__=[];for(var [k,v]of list(trimmed.py_items()))__accu0__.append([k,sum(v)]);return dict(__accu0__)})();
time.sleep(1);
print(getattr(somemodule,class_name));
plt.show();
time.sleep(1500);
print(pdf_file.read());
Math.pow(Math.pow(dist,2).sum(__kwargtrans__({axis:1})),.5);
export var df_row_merged=pd.concat([df_a,df_b],__kwargtrans__({ignore_index:true}));
print(sys.stdin.read());
p.wait();
sheet.write(1,0,1);
var lst=function(){var __accu0__=[];for(var x of accounts)__accu0__.append(os.path.splitext(x)[0]);return __accu0__}();
odeint(func,y0,t,a,b,c);
np.dot(I,np.ones(tuple([7]),int));
fig.colorbar(p);
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath("./P2JSnippets.py"))));
df.to_csv(f,__kwargtrans__({index:false,header:false}));
bids.append(int(bid));
connection.close();
Some_Model.objects.filter(__kwargtrans__({id__in:ids_list})).delete();
platform.architecture();
plt.show();
var __left0__=map(list,zip(...my_list));export var my_list2=__left0__[0];export var my_list1=__left0__[1];
sum(function(){var __accu0__=[];for(var c of string)if(c.islower())__accu0__.append(1);return py_iter(__accu0__)}());
(function(){var __accu0__=[];for(var i=0;i<len(a)*2;i++)__accu0__.append(a[Math.floor(i/2)]);return __accu0__})();
[1505];
pickle.dumps(threading.Lock());
open(f.py_name).read();
ax.plot_surface(X,Y,Z,__kwargtrans__({rstride:1,cstride:1,cmap:cm.jet}));
df.loc.__setitem__([df.isnull().any(__kwargtrans__({axis:1})),tuple([0,null,1])],np.nan);
df.toPandas();
int(sum(jdcal.gcal2jd(dt.year,dt.month,dt.day)));
export var a_lower=dict(function(){var __accu0__=[];for(var [k,v]of list(a.py_items()))__accu0__.append(tuple([k.lower(),v]));return py_iter(__accu0__)}());
(function(){var __accu0__=[];for(var x of l1)__accu0__.append(tuple(x));return set(__accu0__)})().intersection(map(tuple,l2));
print(celery.current_task.task_id);
export var starf=function(){var __accu0__=[];for(var i of starf)__accu0__.append(int(i));return __accu0__}();
sum(zip(...structure)[1]);
x.reshape(2,2,5).transpose(1,0,2);
locals()[4];
S1.intersection(S2);
plt.gca().invert_yaxis();
(function(){var __accu0__=[];for(var x of zip(L1,L2))__accu0__.append(list(itertools.chain(...x)));return __accu0__})();
var s=socket.socket(socket.AF_INET,socket.SOCK_DGRAM);
plt.show();
(function(){var __accu0__=[];for(var [k,v]of list(d.py_items()))__accu0__.append([k,function(){var __accu1__=[];for(var [a,b]of zip(...v))__accu1__.append(a+b);return __accu1__}()]);return dict(__accu0__)})();
export var text=str(combobox1.currentText());
datetime.datetime.combine(birthdate,datetime.time());
A*B.__getitem__([tuple([0,null,1]),np.newaxis]);
np.dot(np.dot(I,np.ones(tuple([7]),int)),mat);
var z=int(str(x)+str(y));
np.mgrid.__getitem__([tuple([0,5,1]),tuple([0,5,1])]).transpose(1,2,0).reshape(-1,2);
list(dict.py_keys());
plt.show();
cv2.rectangle(img,tuple([x,y]),tuple([x+w,y+h]),tuple([255,0,0]),2);
(function(){var __accu0__=[];for(var x of some_list)if(x>2)__accu0__.append(2*x);return __accu0__})();
Toy.objects.filter(__kwargtrans__({owner__parent__id:1}));
random.uniform(-1,1);
plt.show();
var B=numpy.array([A.__getitem__([0,0,1]),A.__getitem__([2,1,2])]);
json.dump(data,outfile,__kwargtrans__({ensure_ascii:false}));
var data=function(){var __accu0__=[];for(var line of original)__accu0__.append(function(){var __accu1__=[];for(var i of line.py_split())__accu1__.append(int(i));return __accu1__}());return __accu0__}();
export var subsampled=df.ix[function(){var __accu0__=[];for(var x of list(grouped.groups.py_values()))__accu0__.append(choice(x));return py_iter(__accu0__)}()];
plt.show();
self.response.out.write(key);
plt.show();
print(os.path.join(subdir,file));
greet_selves();
plt.show();
(function(){var __accu0__=[];for(var _=0;_<10;_++)__accu0__.append(py_next(py_iter(s)));return __accu0__})();
export var cidrs=netaddr.ip_range_to_cidrs(ip_start,ip_end);
var response=requests.post(url,__kwargtrans__({data:data}));
ssh_client.set_missing_host_key_policy(paramiko.AutoAddPolicy());
(function(){var __accu0__=[];for(var [r,d,f]of os.walk(tree))if(!d)__accu0__.append(os.path.py_split(r)[-1]);return __accu0__})();
pprint(function(){var __accu0__=[];for(var subl of list_of_lists)__accu0__.append(OrderedDict(zip(names,subl)));return __accu0__}());
(df!=0).any(__kwargtrans__({axis:0}));
plt.show();
tornado.ioloop.IOLoop.instance().start();
plt.show();
re.findall(rx,st,re.VERBOSE);
max(a,__kwargtrans__({key:sum}));
plt.show();
root.mainloop();
plt.show();
a.__getitem__([function(){var __accu0__=[];for(var i=0;i<a.shape[0];i++)if(i!=1)__accu0__.append(i);return __accu0__}(),tuple([0,null,1]),tuple([0,null,1])]);
myfile.close();
f.subs(x,1);
(function(){var __accu0__=[];for(var x of a)for(var y of b)__accu0__.append(tuple([x,y]));return __accu0__})();
sys.stdout.buffer.write(pdf_file.read());
webbrowser.open(filename);
print(requests.py_get(url,__kwargtrans__({data:data,cookies:cookies})).text);
datetime.datetime(ddd.year,ddd.month,ddd.day);
sorted(list(range(len(s))),__kwargtrans__({key:function __lambda__(k){return s[k]}}));
plt.show();
reactor.run();
foo();
sys.stdout=sys.__stdout__;
(function(){var __accu0__=[];for(var n=0;n<10;n++)__accu0__.append(str(n));return __accu0__})();
print(os.path.join(directory,file));
plt.show();
var filtered_dict=function(){var __accu0__=[];for(var [k,v]of list(d.py_items()))if(__in__(filter_string,k))__accu0__.append([k,v]);return dict(__accu0__)}();
set(dic1.py_keys())==set(dic2.py_keys());
MyMIDI.addNote(track,channel,pitch,time,duration,volume);
root.mainloop();
int(float(s));
msg.attach(MIMEText(text));
reactor.run();
print(doctree.toprettyxml());
export var combined=list(itertools.chain.from_iterable(lists));
export var file_contents=f.read();
print(line.rstrip());
list(l)==[0]*len(l);
dict(mylist);
np.concatenate(tuple([A.__getitem__([tuple([0,null,-1]),tuple([0,null,1])]),A]),__kwargtrans__({axis:0}));
mylist[0].__getslice__(0,1,1);
fig.autofmt_xdate();
(function(){var __accu0__=[];for(var _=0;_<10;_++)__accu0__.append(random.random());return __accu0__})();
print(numpy.array([X()],__kwargtrans__({dtype:object})));
plt.show();
plt.show();
plt.show();
map(truediv,a,b);
var a=np.frombuffer(Data);
df[(df<=2).all(__kwargtrans__({axis:1}))];
np.allclose(ans1,ans2);
f.write(e8);
(function(){var __accu0__=[];for(var i=0;i<len(word);i++)if(word[i]==letter)__accu0__.append(i);return __accu0__})();
print(soup.prettify());
var d=collections.defaultdict(function __lambda__(){return[0,[]]});
thing.save();
plt.show();
(function(){var __accu0__=[];for(var _=0;_<10;_++)__accu0__.append(random.sample(s,1)[0]);return __accu0__})();
app.run();
max(PlayerList,__kwargtrans__({key:function __lambda__(p){return max(p.__getslice__(1,null,1))}}))[0];
set(a)&set(b);
sys.exit(0);
plt.show();
db.session.commit();
np.linalg.norm(A-B,__kwargtrans__({axis:-1}));
[0,16,17,18];
random.shuffle(array);
json.dumps(function(){var __accu0__=[];for(var [k,v]of list(data.py_items()))__accu0__.append([str(k),v]);return dict(__accu0__)}());
sorted(d,__kwargtrans__({key:d.py_get,reverse:true}));
var c=function(){var __accu0__=[];for(var i of a)__accu0__.append(tuple([i,0]));return __accu0__}();
Response(serializer.errors,__kwargtrans__({status:status.HTTP_400_BAD_REQUEST}));
np.isnan(np.array([np.nan,0],__kwargtrans__({dtype:object})));
export var MyList=[inst1,inst2];
var result=(list_[0][0]+list_[1][0])*(list_[0][1]+list_[1][1]);
zip(...elements)[1];
print(df.applymap(function __lambda__(x){return str(x).isdigit()}));
var q=Model.objects.filter(Q(__kwargtrans__({field1:f1}))|Q(__kwargtrans__({field2:f2}))).distinct();
sum(function(){var __accu0__=[];for(var row of rows)__accu0__.append(sum(function(){var __accu1__=[];for(var i of row)if(i)__accu1__.append(1);return py_iter(__accu1__)}()));return py_iter(__accu0__)}());
zip(py_keys,py_values);
repr(s);
plt.show();
export var json1_data=json.loads(json1_str)[0];
export var rdd=sc.parallelize([tuple([1,2])]);
ax.legend();
sum(function(){var __accu0__=[];for(var v of list(d.py_values()))__accu0__.append(v[0]);return __accu0__}())/float(len(d));
time.sleep(1);
time.sleep(.1);
export var smaller_array=np.delete(array,index);
sys.stdout.flush();
export var total=sum(function(){var __accu0__=[];for(var r of csv.reader(fin))__accu0__.append(int(r[1]));return py_iter(__accu0__)}());
ax.set_xlim(0,7);
plt.hist(b,bins);
(function(){var __accu0__=[];for(var [k,v]of list(d.py_items()))__accu0__.append(tuple([m.py_get(k,k),v]));return __accu0__})();
(function(){var __accu0__=[];for(var i of range(len(mylist),-1,-1))__accu0__.append(mylist.__getslice__(i,null,1)+[newelement]+mylist.__getslice__(0,i,1));return __accu0__})();
x.py_pop(random.randrange(len(x)));
var df=df/df.loc[df.abs().idxmax()].astype(np.float64);
plt.show();
df.reset_index(__kwargtrans__({level:0,inplace:true}));
plt.show();
sorted(lst,__kwargtrans__({reverse:true,key:operator.itemgetter(0)}));
np.argwhere(a.__getitem__([tuple([0,null,1]),1])==-1)[np.argmin(a.__getitem__([a.__getitem__([tuple([0,null,1]),1])==-1,0]))];
print(function(){var __accu0__=[];for(var x of L)__accu0__.append(tryeval(x));return __accu0__}());
python-mplatform;
(function(){var __accu0__=[];for(var [m,n]of zip(b,a))__accu0__.append(m+str(n));return __accu0__})();
sum(function(){var __accu0__=[];for(var n of str(Math.pow(2,1E3)))__accu0__.append(int(n));return py_iter(__accu0__)}());
new_list.append(fruit);
random.choice(words);
time.sleep(1);
myfunc(...args);
time.sleep(1);
foo();
s.dropna();
br.set_handle_robots(false);
plt.show();
(function(){var __accu0__=[];for(var s of I.py_split())if(s.isdigit())__accu0__.append(int(s));return __accu0__})();
random.shuffle(l);
df_example.iloc.__getitem__([[1,4],tuple([0,-1,1])]).T.corr();
max(d,__kwargtrans__({key:d.py_get}));
print(first_list+list(set(second_list)-set(first_list)));
ax.legend();
(function __lambda__(i){return i[0]});
np.array(m2).__getitem__([tuple([0,null,1]),1])>10;
np.concatenate(tuple([A.__getitem__([tuple([0,null,-1]),tuple([0,null,1])]),A.__getitem__([tuple([1,null,1]),tuple([0,null,1])])]),__kwargtrans__({axis:0}));
np.mean(a,__kwargtrans__({axis:1}));
array([true,true,true,false,false,false,false],__kwargtrans__({dtype:bool}));
app.run();
do_something_with(line);
var r=requests.post(url,__kwargtrans__({data:json.dumps(data),headers:headers}));
export var existing=db.session.query(Task).filter_by(__kwargtrans__({challenge_slug:slug}));
(function(){var __accu0__=[];for(var x of tuple_list)__accu0__.append(x[0]);return __accu0__})();
var new_list=function(){var __accu0__=[];for(var [a,b]of tuple_list)__accu0__.append(tuple([a,new_b]));return __accu0__}();
var A=np.random.randn(1E3,1E3);
ax.set_xlim([0,1]);
sorted(list(a.py_items()),__kwargtrans__({key:itemgetter(1),reverse:true}));
time.sleep(1);
fig.show();
plt.show();
sorted(l,__kwargtrans__({key:function __lambda__(s){return tuple([s.isdigit(),s])}}));
ax.plot_wireframe(T,z,abs(U),__kwargtrans__({cstride:1E3}));
root.mainloop();
max(x,__kwargtrans__({key:function __lambda__(i){return x[i]}}));
var arr=np.append(arr,np.array([[4,5,6]]),__kwargtrans__({axis:0}));
(function(){var __accu0__=[];for(var x of py_values)__accu0__.append(list(map(int,x)));return __accu0__})();
var r=requests.post(url,__kwargtrans__({files:files}));
code.interact(__kwargtrans__({local:locals()}));
_w();
pdb.set_trace();
matplotlib.pyplot.show();
export var schema=models.TextField(__kwargtrans__({py_default:get_default_json}));
np.isclose([1E10,1E-7],[100001E5,1E-8]);
int(x)/int(y)==math.floor(float(x)/float(y));
_cxn.commit();
gtk.main();
set.intersection(...function(){var __accu0__=[];for(var x of d.py_values())__accu0__.append(set(x));return py_iter(__accu0__)}());
sum(function(){var __accu0__=[];for(var i of a)__accu0__.append(i);return py_iter(__accu0__)}());
pygame.display.set_mode(size);
df.sub(df.a,__kwargtrans__({axis:0}));
dict(function(){var __accu0__=[];for(var k of keys_to_select)if(__in__(k,mydict))__accu0__.append(tuple([k,mydict[k]]));return py_iter(__accu0__)}());
str(1).zfill(2);
print(line.rstrip());
var out=[a,b,c,d,e,f];
reactor.run();
list1.py_sort(__kwargtrans__({key:int}));
plt.show();
ax.plot(x,y);
sorted(lst,__kwargtrans__({key:function __lambda__(x){return tuple([-counts[x],firstidx[x]])}}));
sys.stdout.write(chr(x));
sorted(lst,__kwargtrans__({key:str.lower}));
set(zip(...function(){var __accu0__=[];for(var i=0;i<n;i++)__accu0__.append(lst.__getslice__(i,null,1));return __accu0__}()));
var A=function(){var __accu0__=[];for(var i=0;i<len(A)-1;i++)__accu0__.append(A[i+1]+A[i]);return __accu0__}();
(function(){var __accu0__=[];for(var i=0;i<len(numbers);i++)if(!__in__(i,indices))__accu0__.append(numbers[i]);return __accu0__})();
print(os.path.join(path,filename));
(function(){var __accu0__=[];for(var e of bad)for(var i of my_list)if(__in__(e,i))__accu0__.append(i);return __accu0__})();
(s*5).tolist();
myDict[item[1]]+=item[2];
scipy.sparse.csr_matrix(df.py_values);
bin(0);
export var new_data=np.vectorize(boolstr_to_floatstr)(data).astype(float);
time.sleep(1);
plt.show();
db.rollback();
np.any(my_array.__getitem__([tuple([0,null,1]),0])==value);
os.getpid();
export var rand_smpl=function(){var __accu0__=[];for(var i of sorted(random.sample(range(len(mylist)),4)))__accu0__.append(mylist[i]);return __accu0__}();
list(function(){var __accu0__=[];for(var x of l)if(!__in__(x,f))__accu0__.append(x);return __accu0__}());
var lst=function(){var __accu0__=[];for(var i of str(num))__accu0__.append(int(i));return __accu0__}();
obj.save();
var res=list(set(a)^set(b));
sys.stdout.write(str(x));
l.py_sort(__kwargtrans__({key:sum_nested}));
np.fill_diagonal(df.py_values,0);
__init__.py;
cherrypy.quickstart(HelloWorld());
(function(){var __accu0__=[];for(var [i,j]of enumerate(a))if(j==m)__accu0__.append(i);return __accu0__})();
var mySet=set([myString]);
self.matches=function(){var __accu0__=[];for(var s of self.options)if(s&&s.startswith(text))__accu0__.append(s);return __accu0__}();
MyModel.objects.all();
plt.show();
var length=len(list(clusterList));
export var norm=function(){var __accu0__=[];for(var i of raw)__accu0__.append(float(i)/sum(raw));return __accu0__}();
data.append(json.loads(line));
sorted(zipped,__kwargtrans__({key:operator.itemgetter(1)}));
var c=sum(function(){var __accu0__=[];for(var word of words)if(word[0]==word[-1])__accu0__.append(1);return py_iter(__accu0__)}());
cnx.commit();
np.eye(foo.shape[1])*foo.__getitem__([tuple([0,null,1]),np.newaxis]);
app.run();
plt.show();
(function(){var __accu0__=[];for(var _=0;_<10;_++)__accu0__.append(map(dict.py_get,list(range(1,6))));return __accu0__})();
export var author=models.ForeignKey(User,__kwargtrans__({null:true,blank:true}));
export var corrs=df.corr();
re.sub(reg,rep,text);
Py_Finalize();
conn.commit();
self.cdr=cdr;
var x=np.array([tuple([1,0]),tuple([0,1])]);
plt.show();
gtk.main_iteration();
var py_new=function(){var __accu0__=[];for(var i of old)__accu0__.append(int(i));return __accu0__}();
export var hismgr=get_ipython().history_manager;
any(function(){var __accu0__=[];for(var x of a)__accu0__.append(__in__(x,set(b)));return py_iter(__accu0__)}());
print(settings.BASE_DIR);
requests.py_get(url,__kwargtrans__({params:query}));
A[B==x].sum();
ax.set_xticklabels([]);
sys.stdin.isatty();
ax.xaxis.set_major_formatter(xfmt);
sys.stdout.flush();
np.where(np.eye(A.shape[0],__kwargtrans__({dtype:bool})),A,A.T+A);
self.Bind(wx.EVT_LEFT_DCLICK,self.OnDoubleClick);
datetime.datetime.now()-datetime.timedelta(__kwargtrans__({minutes:15}));
sys.stdout.flush();
app.exec_();
ma.array(a,__kwargtrans__({mask:np.isnan(a)}));
(function(){var __accu0__=[];for(var [i,j]of zip(t.__getslice__(0,-1,1),t.__getslice__(1,null,1)))__accu0__.append(j-i);return __accu0__})();
writer.writerow(row);
all(function(){var __accu0__=[];for(var [a,b]of zip(the_list,it))__accu0__.append(b>=a);return py_iter(__accu0__)}());
zip(...A);
plt.show();
plt.show();
(function(){var __accu0__=[];for(var word of l)if(word.isalnum())__accu0__.append(word);return __accu0__})();
var c=function(){var __accu0__=[];for(var x of b)if(__in__(x,_auxset))__accu0__.append(x);return __accu0__}();
(function(){var __accu0__=[];for(var x of itertools.groupby(data,function __lambda__(x){return x==0}))if(!x[0])__accu0__.append(list(x[1]));return __accu0__})();
list(itertools.chain(...function(){var __accu0__=[];for(var [k,v]of list(d.py_items()))__accu0__.append([k]*v);return __accu0__}()));
self.save();
print(time.mktime(d.timetuple()));
np.roll(a,1);
round(number*2)/2;
pprint(sys.path);
A.__getitem__([i,j]);
print(doc.toprettyxml());
export var parts=function(){var __accu0__=[];for(var i of range(0,len(your_string),n))__accu0__.append(your_string.__getslice__(i,i+n,1));return __accu0__}();
app.logger.setLevel(logging.DEBUG);
random.shuffle(lst);
data_slices.py_sort(__kwargtrans__({key:function __lambda__(s){return s[-1].start}}));
reactor.run();
sorted(mydict,__kwargtrans__({key:function __lambda__(key){return mydict[key]}}));
plt.show();
var results=list(map(int,results));
df.where((df>df.shift(1)).py_values&DataFrame(df.D==1).py_values);
user.put();
cv.WaitKey(0);
dfrm.drop(dfrm.index[len(dfrm)-1]);
df.stack().reset_index(__kwargtrans__({level:[0,1],drop:true}));
img.show();
t1start<=t2start&&t2start<=t1end||t2start<=t1start&&t1start<=t2end;
df.iloc[indexers];
plt.legend(__kwargtrans__({loc:4}));
export var Cordi1=function(){var __accu0__=[];for(var line of data)__accu0__.append(function(){var __accu1__=[];for(var i of line.py_split())__accu1__.append(int(i));return __accu1__}());return __accu0__}();
Foo.foo();
var json_string=json.dumps(list_name,__kwargtrans__({py_default:obj_dict}));
(function(){var __accu0__=[];for(var b of a)for(var x of b)__accu0__.append(x);return __accu0__})();
unittest.main();
plt.show();
br.select_form(__kwargtrans__({nr:1}));
ax.xaxis.set_visible(false);
export var image=gtk.image_new_from_pixbuf(pixbuf);
plt.show();
(function(){var __accu0__=[];for(var [key,val]of parent_dict.py_items())if(2<key&&key<4)__accu0__.append([key,val]);return dict(__accu0__)})();
var cursor=db.cursor(__kwargtrans__({dictionary:true}));
numpy.in1d(a,b);
plt.show();
sorted(mylist,__kwargtrans__({key:cmp_to_key(locale.strcoll)}));
np.array(function(){var __accu0__=[];for(var i of np.arange(-.2,.25,.1))__accu0__.append(arr+i);return __accu0__}()).T.ravel();
tf.constant(1)+tf.constant(2);
min(function(){var __accu0__=[];for(var t of l)if(!math.isnan(t[1]))__accu0__.append(t);return __accu0__}(),__kwargtrans__({key:itemgetter(1)}));
sorted(l1+l2);
var zeros=function(){var __accu0__=[];for(var _=0;_<N;_++)__accu0__.append([0]*M);return __accu0__}();
driver.switch_to_alert().accept();
sys.exit();
dict(function(){var __accu0__=[];for(var k_v of list(d1.py_items()))if(__in__(k_v[0],d2)&&d2[k_v[0]]==k_v[1])__accu0__.append(k_v);return __accu0__}());
random.sample(list(range(1,10)),5);
Series(function(){var __accu0__=[];for(var x of htmldata)__accu0__.append(str(x));return __accu0__}());
print(function(){var __accu0__=[];for(var i of range(0,len(lst),2))__accu0__.append(tuple([lst[i],lst[i+1]]));return __accu0__}());
session.commit();
ftp.quit();
a.transpose(2,1,0);
lst.append(os.path.splitext(x)[0]);
re.py_split(seperator,f.read());
myTextCtrl.SetFont(font1);
a==a.__getitem__([0,tuple([0,null,1])]);
plt.show();
zip(l,l.__getslice__(1,null,1));
print(function(){var __accu0__=[];for(var s of re.findall(pat,st2))__accu0__.append(tuple([s,__in__(s,st1)]));return __accu0__}());
df.idxmax(__kwargtrans__({axis:1}));
plt.show();
(function(){var __accu0__=[];for(var y of l)for(var x of y)__accu0__.append(x);return __accu0__})();
list(range(x1,x2+1));
root.mainloop();
method();
writer.writerow([]);
pd.concat([df_a,df_b],__kwargtrans__({axis:1}));
time.sleep(.1);
(function(){var __accu0__=[];for(var [key,value]of zip(bins,count))__accu0__.append([tuple(key),value]);return dict(__accu0__)})();
p.start();
map(int,bin(6).__getslice__(2,null,1));
[10,9,8,4,7];
calendar.timegm(time.gmtime());
conn.commit();
(function(){var __accu0__=[];for(var key of a)__accu0__.append([key,list(set.difference(set(a[key]),b.py_get(key,[])))]);return dict(__accu0__)})();
print(file_contents);
print(list(chain.from_iterable(function(){var __accu0__=[];for(var x of l)__accu0__.append(tuple([x,x+1]));return py_iter(__accu0__)}())));
nx.draw_spring(G);
df.index;
(function(){var __accu0__=[];for(var y of list2)__accu0__.append(function(){var __accu1__=[];for(var x of list1)__accu1__.append([x,y]);return __accu1__}());return __accu0__})();
ssh.connect(IP[0],__kwargtrans__({username:user[0],pkey:mykey}));
df[(df.iloc.__getitem__([tuple([0,null,1]),tuple([-12,null,1])])==-1).all(__kwargtrans__({axis:1}))];
a.__init__(...args,__kwargtrans__(kwargs));
a[~np.isnan(a).any(1)];
plt.show();
list(StreetCat._meta.parents.py_keys())[-1];
print(f.read());
sorted(a)==sorted(b);
set(data1)&set(data2);
pl.show();
ax.get_xticklines()[i].set_visible(false);
time.sleep(.5);
df.dot(weight);
chr(128512);
array.__getitem__([i[0],i[1],i[2],,i[n-1]]);
plt.show();
[6,7,8,9];
var __left0__=zip(...sorted(zip(A,B),__kwargtrans__({key:function __lambda__(x){return x[1]}})));export var A2=__left0__[0];export var B2=__left0__[1];
len(function(){var __accu0__=[];for(var x of frequencies)if(x>0)__accu0__.append(x);return __accu0__}());
x.__getitem__([tuple([0,null,1]),tuple([1,null,2])]);
df[0].apply(function __lambda__(x){return x===np.nan?tuple([0,0]):x});
plt.show();
app.run();
inlinkDict[docid]=adoc.__getslice__(1,null,1)?adoc.__getslice__(1,null,1):0;
export var the_regex=re.compile(re.escape(the_value));
export var myArray=np.zeros(tuple([6,6]));
var C=np.hstack(tuple([A,B.__getitem__([tuple([0,null,1]),tuple([1,null,1])])]));
sys.exit(1);
print(date(today.year+1,today.month,today.day));
sum(function(){var __accu0__=[];for(var [i,n]of zip(count(0,-1),a))__accu0__.append(Decimal(n)*Math.pow(Decimal(10),Decimal(i)));return py_iter(__accu0__)}());
plt.show();
MyClass.__dict__;
export var x1=sorted(x,__kwargtrans__({key:function __lambda__(t){return t[2]},reverse:true}));
var df=pd.DataFrame([df.sum()]*len(df));
pd.crosstab(df.saleid,df.upc);
plt.show();
print(data.reshape(-1,2).mean(__kwargtrans__({axis:1})));
export var screen=pygame.display.set_mode(tuple([1600,900]));
max(function(){var __accu0__=[];for(var n=0;n<1E3;n++)if(str(n)==str(n).__getslice__(0,null,-1)&&is_prime(n))__accu0__.append(n);return py_iter(__accu0__)}());
np.maximum.accumulate(Q.__getitem__([tuple([0,null,1]),tuple([0,null,-1])]),__kwargtrans__({axis:1})).__getitem__([tuple([0,null,1]),tuple([0,null,-1])]);
clf.fit(X_train,y_train);
np.random.seed(1);
export var rect=picture.get_rect();
main();
datetime.time();
test.f(0);
df.stack().between(2,10,__kwargtrans__({inclusive:false})).unstack();
var y=function(){var __accu0__=[];for(var i of x)for(var j of i)__accu0__.append(j);return __accu0__}();
hex(x).__getslice__(2,null,1);
var im=Image.open(image_file);
session.delete(instance);
result.append(b[index]);
server.starttls();
np.concatenate(counts_array).reshape(len(counts_array),-1);
plt.show();
var py_name=sys.argv.__getslice__(1,null,1);
plt.show();
export var itemindex=numpy.where(array==item);
s.groupby(__kwargtrans__({level:0})).apply(list);
df.convert_objects(__kwargtrans__({convert_numeric:true}));
pobj.stdin.flush();
plt.show();
plt.show();
foo();
multiprocessing.Process.__init__(self);
(function(){var __accu0__=[];for(var x of zip(...lists_of_lists))__accu0__.append(sum(x));return __accu0__})();
export var u=User.objects.filter(__kwargtrans__({userjob__job:a})).filter(__kwargtrans__({userjob__job:c}));
pd.concat([pd.Series(initial_value),cum_growth]).reset_index(__kwargtrans__({drop:true}));
np.concatenate(input_list).ravel();
a[0];
app.run();
mp.Process(__kwargtrans__({target:foo,args:tuple([x])})).start();
sys.stdout.write(line);
df.drop(df.columns[i],__kwargtrans__({axis:1}));
plt.show();
ax.xaxis.set_major_locator(locator);
A.ravel()[np.in1d(A,B)]=0;
my_list.py_sort(__kwargtrans__({key:my_key}));
cv2.waitKey(0);
os.path.expanduser(path);
time.sleep(1);
plt.show();
df.ix.__getitem__([tuple([0,5,1]),tuple([0,10,1])]);
a.ravel();
ax.set_xticklabels(nonRepetitive_x);
deletepkt[TCP].chksum;
(function(){var __accu0__=[];for(var [i,x]of enumerate(numbers))if(!__in__(i,indices))__accu0__.append(x);return __accu0__})();
A[0].__getslice__(0,4,1);
conn.rollback();
a.__getitem__([[0,1],[1,2],[2,2]]);
set.intersection(...map(set,d));
df.columns.droplevel(1);
[2,6,8,7,9,6,5,4,2];
[[]]*10;
time.sleep(.1);
print(r.dtype);
ax.axes.get_xaxis().set_visible(false);
str.isalpha();
sys.exit(app.exec_());
(function(){var __accu0__=[];for(var i of d)__accu0__.append([i,functools.reduce(dict.__getitem__,py_keys,d[i])]);return dict(__accu0__)})();
os.chown(path,uid,gid);
set(map(tuple,listB))<=set(map(tuple,listA));
(function(){var __accu0__=[];for(var x of List)__accu0__.append(x);return py_iter(__accu0__)})();
print(sum(function(){var __accu0__=[];for(var num of numbers)if(__mod__(num,2)==1)__accu0__.append(num);return py_iter(__accu0__)}()));
dict(zip(i,i));
np.array([a,a]).shape;
[[],[],[]];
export var myplsda=PLSRegression().fit(__kwargtrans__({X:Xdata,Y:dummy}));
instance.__class__.__name__;
json.dump(data,outfile);
time.sleep(60);
print(max(group,__kwargtrans__({key:function __lambda__(k){return len(list(k[1]))}})));
f.close();
some_func(...params);
export var column_names=function(){var __accu0__=[];for(var item of cursor.description)__accu0__.append(item[0]);return __accu0__}();
numpy.clip(x,0,255);
x.reshape(2,2,5);
lines.py_sort(__kwargtrans__({key:itemgetter(2),reverse:true}));
sorted(function(){var __accu0__=[];for(var v of content.py_values())for(var x of v)__accu0__.append(x);return set(__accu0__)}());
set(function(){var __accu0__=[];for(var i of l)__accu0__.append(tuple(i));return py_iter(__accu0__)}());
export var console=logging.StreamHandler();
set([1,2]);
self.ham=dict();
export var certificat=signers[0];
unravel_index(a.argmax(),a.shape);
(function(){var __accu0__=[];for(var [i,e]of enumerate(main_list))if(__in__(i,indexes))__accu0__.append(e);return __accu0__})();
cv2.rectangle(image,tuple([x,y]),tuple([x+w,y+h]),tuple([255,255,0]),5);
self.ui.closeButton.clicked.connect(self.closeIt);
sum(function(){var __accu0__=[];for(var x of digit)if(x.isdigit())__accu0__.append(int(x));return py_iter(__accu0__)}());
app.run();
export var AtB=A.stack(0).dot(twos).unstack();
var r=requests.post(url,__kwargtrans__({files:files,data:data,headers:headers}));
plt.plot(x,y);
root.mainloop();
(function(){var __accu0__=[];for(var [k,v]of colour.py_items())if(v==min_val)__accu0__.append(k);return __accu0__})();
plt.show();
(function(){var __accu0__=[];for(var y of a)if(!__in__(y,b))__accu0__.append(y);return __accu0__})();
np.fft.fft(xfiltered);
root.mainloop();
matplotlib.pyplot.plot(raw_audio_data);
root.grid_rowconfigure(1,__kwargtrans__({weight:1}));
palette.append(tuple([0,0,0]));
today+datetime.timedelta(__kwargtrans__({days:1}));
export var newNums=function(){var __accu0__=[];for(var [i,x]of enumerate(nums))if(x==12)__accu0__.append(i);return __accu0__}();
(function(){var __accu0__=[];for(var [x,y]of zip(xscat,yscat))__accu0__.append(peaks([x,y]));return __accu0__})();
print(json.dumps(dict(table_data)));
sorted(li1,__kwargtrans__({key:k}));
list(range(0,6,2));
admin.site.register(Foo,FooAdmin);
plt.axvline(__kwargtrans__({x:2.20589566}));
df.column_A.apply(to_binary);
df.max();
plt.show();
yacc.yacc(__kwargtrans__({debug:0,write_tables:0}));
nx.draw_networkx_edges(G,pos,__kwargtrans__({edgelist:black_edges,arrows:false}));
sys.exit();
var good_data=function(){var __accu0__=[];for(var n=0;n<data.shape[0];n++)__accu0__.append(data.__getitem__([n,tuple([0,null,1])])[flag==1].tolist());return __accu0__}();
img.__setitem__([tuple([0,null,1]),tuple([0,null,1]),0],0);
self.SetSizer(sizer);
sum(function(){var __accu0__=[];for(var x of frequencies)__accu0__.append(x>0);return py_iter(__accu0__)}());
json.dumps(geodata);
print(A.reshape(-1,k).__getitem__([np.arange(n*m),B.ravel()]));
np.in1d(A,B).any();
plt.show();
var y=set(x.flatten());
date.today()>self.date;
pygame.init();
plt.show();
canvas.create_image(0,0,__kwargtrans__({anchor:NW,image:displayPlantImage}));
export var age=models.IntegerField(__kwargtrans__({blank:true,null:true}));
root.mainloop();
(function(){var __accu0__=[];for(var [key,it]of itertools.groupby(list_one))__accu0__.append(tuple([key,len(list(it))]));return __accu0__})();
df.isnull();
df1.apply(function __lambda__(s){return df2.corrwith(s)});
self.response.out.write(html);
plt.plot(list(range(10)));
(function(){var __accu0__=[];for(var line of data)for(var x of line.py_split())__accu0__.append(int(x));return __accu0__})();
ax.plot(x,y,__kwargtrans__({color:uniqueish_color()}));
QtGui.QMainWindow.__init__(self,parent);
print(etree.tostring(root,__kwargtrans__({pretty_print:true})));
sdb.close();
np.mgrid[function(){var __accu0__=[];for(var [row,n]of zip(bounds,n_bins))__accu0__.append(slice(row[0],row[1],n*complex(0,1)));return __accu0__}()];
var results=function(){var __accu0__=[];for(var k of keywords)for(var r of re.findall(k,message.lower()))__accu0__.append(r);return __accu0__}();
getattr(this_prize,choice);
root.mainloop();
time.sleep(.2);
int(bin(n).__getslice__(0,1,-1),2);
plt.show();
requests.post(url,__kwargtrans__({data:body,headers:headers}));
print(function(){var __accu0__=[];for(var x of numbers)__accu0__.append(hex(x));return __accu0__}());
zip(string,string.__getslice__(1,null,1),string.__getslice__(2,null,1));
win.show_all();
sum(function(){var __accu0__=[];for(var i of a)__accu0__.append(Decimal(i));return py_iter(__accu0__)}());
np.py_split(x.reshape(x.shape[0],-1),9,__kwargtrans__({axis:1}));
conn.close();
export var G=nx.balanced_tree(10,10);
process.terminate();
f.close();
xxxxx.yyyyy.zzzzz;
var d=os.path.dirname(os.getcwd());
list2==sorted(list2,__kwargtrans__({key:function __lambda__(c){return list1.index(c)}}));
dict(function(){var __accu0__=[];for(var [x,y]of t)__accu0__.append(tuple([y,x]));return py_iter(__accu0__)}());
myothermodule.py;
print(repr(s));
plt.show();
print(list(range(n,(m+1)*n,n)));
__in__(py_typeof(theobject).__name__,dir(__builtins__));
root.mainloop();
func();
(function(){var __accu0__=[];for(var row of X)__accu0__.append(function(){var __accu1__=[];for(var cell of row)__accu1__.append(cell);return __accu1__}());return __accu0__})();
s.__getslice__(0,null,-1);
text_file.close();
print(function(){var __accu0__=[];for(var i of set(function(){var __accu1__=[];for(var k of a)__accu1__.append(len(k));return py_iter(__accu1__)}()))__accu0__.append(function(){var __accu1__=[];for(var x of a)if(len(x)==i)__accu1__.append(x);return __accu1__}());return __accu0__}());
var y=x.astype(int);
plt.show();
root.mainloop();
signal.signal(signal.SIGINT,quit_gracefully);
self.request.user;
Mainscreen();
ax.xaxis.set_major_formatter(myFmt);
ax.set_yticklabels([]);
sys.stdout.flush();
self.assertEqual(my_patch_method,patch_my_lib().target_method.__func__);
logging.getLogger().setLevel(logging.INFO);
export var current_time=(datetime.now()-timedelta(__kwargtrans__({seconds:10}))).time();
pgdb.paramstyle;
time.sleep(5);
(function(){var __accu0__=[];for(var i of[2,1,0])__accu0__.append(L[i]);return __accu0__})();
fig.tight_layout();
plt.show();
plt.show();
self.f.close();
x.__getitem__([tuple([1,null,2]),tuple([1,null,2])]);
arr[arr>0].min();
etree.tostring(div);
painter.restore();
zlib.decompress(data);
plt.show();
array([[0],[7],[1],[0],[4],[0],[0],[0],[0],[1],[0],[0],[0]]);
var out=mat[0]*(len(ixs)-len(nzidx))+mat[ixs[nzidx]].sum(__kwargtrans__({axis:0}));
(function(){var __accu0__=[];for(var start of range(0,len(str),num))__accu0__.append(str.__getslice__(start,start+num,1));return __accu0__})();
np.asarray(V).min(0);
export var base=df.index.get_loc(18);
[[0,0],[1,1]];
ax2.set_xlim([0,5]);
plt.show();
export var MY_SORTED_TUPLE=tuple(sorted(MY_TUPLE,__kwargtrans__({key:function __lambda__(item){return item[1]}})));
var x=dict(zip(list(range(0,10)),itertools.repeat(0)));
list(function(){var __accu0__=[];for(var item of pkgutil.iter_modules())__accu0__.append(item[1]);return py_iter(__accu0__)}());
datetime.datetime.date(2011,1,1);
var __left0__=np.where(a==value);var i=__left0__[0];
cv2.destroyAllWindows();
var b=numpy.append(a,numpy.zeros([len(a),1]),1);
A[np.random.choice(A.shape[0],num_rows_2_sample)];
var __left0__=plt.subplots(__kwargtrans__({figsize:tuple([6,1])}));var fig=__left0__[0];var ax=__left0__[1];
pil_im.show();
mlab.show();
ax.set_yticks([]);
pd.concat([s1,s2],__kwargtrans__({axis:1}));
file.write(str(m));
sys.stdout.flush();
Activity.objects.filter(__kwargtrans__({list__topic:my_topic}));
app.exec_();
np.logical_or.reduce(tuple([x,y,z]));
writer.writerow([item]);
print(rawstr(test7));
new set([new set([settings.MY_SETTING_NAME])]);
(function(){var __accu0__=[];for(var s of data_string.splitlines())__accu0__.append(s.strip());return __accu0__})();
fo.write(fp.read());
sess.run(assign_op);
ts.reindex(pd.date_range(min(date_index),max(date_index)));
export var bbox_data=ax.transData.inverted().transform(bbox);
print(alphs.__getslice__(0,i,1)+alphs.__getslice__(i,null,-1));
plt.show();
(function(){var __accu0__=[];for(var v of product(...list(d.py_values())))__accu0__.append(dict(zip(d,v)));return __accu0__})();
self.text.pack();
var a=numpy.frombuffer(buffer,float);
var mylist=list(set(mylist));
print(sorted(list(a.py_items()),__kwargtrans__({key:function __lambda__(t){return get_key(t[0])}})));
np.in1d(a,b).reshape(a.shape).any(__kwargtrans__({axis:1}));
self.assertEqual(my_patch_method,patch_my_lib().target_method.__func__);
deletemy_dict[k];
plt.show();
export var squared=function(){var __accu0__=[];for(var x of lst)__accu0__.append(Math.pow(x,2));return __accu0__}();
threading.Thread(__kwargtrans__({target:play1})).start();
var x=np.random.rand(5,1);
plt.show();
os.path.sep;
csv_writer.writerows(cursor);
app.run();
df2.reset_index(__kwargtrans__({drop:true}));
print(lxml.etree.tostring(order,__kwargtrans__({pretty_print:true})));
__all__;
print(max(result,__kwargtrans__({key:function __lambda__(a){return a[1]}})));
all_data.append(data);
matplotlib.pylab.show();
input_file.close();
self.setWindowFlags(PyQt4.QtCore.Qt.WindowStaysOnTopHint);
deleteL[index];
print(f.read());
var d=dict(function(){var __accu0__=[];for(var v of arr)__accu0__.append(tuple([v[0],v.__getslice__(1,null,1)]));return py_iter(__accu0__)}());
print(lxml.etree.tostring(tree));
pygame.init();
list(d.py_values());
(function(){var __accu0__=[];for(var item of lis)if(!__in__(item[1],seen)&&!seen.add(item[1]))__accu0__.append(item);return __accu0__})();
any(function(){var __accu0__=[];for(var x of a)__accu0__.append(([1,2]==x).all());return py_iter(__accu0__)}());
(function(){var __accu0__=[];for(var [i,x]of enumerate(a))__accu0__.append(x+b[i]);return __accu0__})();
(function(){var __accu0__=[];for(var a of range(0,len(tuple),2))__accu0__.append(tuple([tuple[a],tuple[a+1]]));return __accu0__})();
np.array(a).reshape(-1,100).__getslice__(0,null,2).ravel();
df.index.py_values;
(function(){var __accu0__=[];for(var i=2;i<20;i++)__accu0__.append(__mod__(i,2)?Math.pow(Math.floor(i/2),2):Math.floor(i/2));return __accu0__})();
zip(...[py_iter(l)]*2);
os.kill(os.getppid(),signal.SIGHUP);
len(sum4)-np.count_nonzero(sum4);
gtk.gdk.pixbuf_new_from_array(arr,gtk.gdk.COLORSPACE_RGB,8);
print(etree.tostring(e,__kwargtrans__({pretty_print:true})));
print(equations(tuple([x,y])));
ham.__class__.__name__;
os.kill(12765,0);
calendar.timegm(dt.utctimetuple());
sum(function(){var __accu0__=[];for(var i of data)__accu0__.append(int(i));return py_iter(__accu0__)}());
pdb.set_trace();
(function(){var __accu0__=[];for(var i=0;i<int(len(flatten)/2);i++)__accu0__.append([[flatten[int(i*2)]]]);return __accu0__})();
plt.show();
var results=function(){var __accu0__=[];for(var i of results)__accu0__.append(int(i));return __accu0__}();
func(...args,__kwargtrans__(kwargs));
(function(){var __accu0__=[];for(var m of function(){var __accu1__=[];for(var l of lines)__accu1__.append(re.search(regex,l));return py_iter(__accu1__)}())if(m)__accu0__.append(m.group(1));return __accu0__})();
print(sum(function(){var __accu0__=[];for(var line of data)__accu0__.append(sum(map(int,r.findall(line))));return py_iter(__accu0__)}()));
(function(){var __accu0__=[];for(var x of L)__accu0__.append(x[1]);return __accu0__})();
plt.tight_layout();
df.genres.apply(pd.Series).stack().drop_duplicates().tolist();
nms.dropna(__kwargtrans__({thresh:2}));
admin.site.register(Person,PersonAdmin);
ax1.set_xticklabels([]);
var result=copy.deepcopy(source_dict);
var soup=BeautifulSoup.BeautifulSoup(urllib.request.urlopen(url).read());
(function(){var __accu0__=[];for(var _=0;_<10;_++)__accu0__.append([0]*10);return __accu0__})();
a.__getitem__([1,1]);
eliminated.append(x);
print(etree.tostring(x,__kwargtrans__({pretty_print:true})));
emp.delete();
(function(){var __accu0__=[];for(var key of py_keys)__accu0__.append(myDictionary.py_get(key));return __accu0__})();
urllib.parse.unquote(url);
max(function(){var __accu0__=[];for(var t of yourlist)if(t[2]>=100)__accu0__.append(t);return py_iter(__accu0__)}(),__kwargtrans__({key:itemgetter(1)}));
urllib.parse.unquote(urllib.parse.unquote(s));
app.exec_();
list(sys.modules.py_keys());
code.interact();
range(N,-1,-1);
ws.cell(__kwargtrans__({row:i+2,column:1})).value=statN;
plt.show();
var a=a.reshape(tuple([a.shape[0],-1,n]));
procs.append(multiprocessing.Process(__kwargtrans__({target:worker})));
setattr(current_module,new_name,func);
print(f.read());
groupby(a,[0,1]);
list(metadata.tables.py_keys());
webbrowser.open_new_tab(url);
plt.show();
s.reset_index(__kwargtrans__({drop:true,inplace:true}));
reactor.run();
dict(function(){var __accu0__=[];for(var item of l)__accu0__.append(tuple([item[0],tuple([item[1],z[item[0]]])]));return py_iter(__accu0__)}());
pd.crosstab(df.A,df.B).apply(function __lambda__(r){return r/r.sum()},__kwargtrans__({axis:1}));
process.terminate();
soup.body.insert(len(soup.body.contents),yourelement);
json.loads(_);
x.do_something();
var total=sum(function(){var __accu0__=[];for(var i of cost)__accu0__.append(int(i));return __accu0__}());
writer.writerows(all);
random.shuffle(lst);
n^=(1<<upper)-1&~((1<<lower)-1);
my_series.py_sort();
time.sleep(1);
deletemyList[i];
session.commit();
max(x,__kwargtrans__({key:sum}));
(function(){var __accu0__=[];for(var x=0;x<10;x++)__accu0__.append(Math.pow(x,2));return __accu0__})();
sum(function(){var __accu0__=[];for(var [a,b]of zip(it,it))__accu0__.append(a*b);return py_iter(__accu0__)}());
df.a=df.a/2;
example2();
time.sleep(1);
(function(){var __accu0__=[];for(var [c,t]of zip(conversions,trials))__accu0__.append(float(c)/t);return __accu0__})();
self.assertEqual(4,2+2);
user.save();
window.after(1,function __lambda__(){return window.focus_force()});
time.sleep(1);
(function(){var __accu0__=[];for(var t of set(function(){var __accu1__=[];for(var element of xx)__accu1__.append(tuple(element));return py_iter(__accu1__)}()))__accu0__.append(list(t));return __accu0__})();
print(et.tostring(tree,__kwargtrans__({pretty_print:true,xml_declaration:true})));
root.mainloop();
export var log=logging.getLogger(__name__);
sys.stdout.flush();
np.cos(-1.5);
time.time()*1E3;
ctypes.cast(s,ctypes.c_void_p).value;
df.ix[pd.to_datetime(df.Date).order().index];
sorted(l,__kwargtrans__({key:function __lambda__(x){return tuple([x.__getslice__(0,-1,1),x[-1].isdigit()])}}));
var result=array.__getitem__([tuple([0,null,1]),idx]);
print(os.path.join(root,py_name));
sys.exit(0);
sum(map(int,str(n)));
q.T.reshape(-1,k,n).swapaxes(1,2).reshape(-1,k);
sys.exit(0);
export var cols_to_use=df2.columns.difference(df.columns);
round(math.degrees(math.asin(.5)),2);
min(enumerate(a),__kwargtrans__({key:itemgetter(1)}))[0];
print(list(sampleDict.py_values())[0].py_keys()[0]);
initgstreamer();
time.sleep(4);
test_df.where(~(test_df<4));
var l=list(map(function __lambda__(x){return 2*x},l));
plt.show();
im.show();
app.run();
myShelvedDict.py_update(myDict);
(function(){var __accu0__=[];for(var v of l)__accu0__.append([v,Math.pow(v,2)]);return dict(__accu0__)})();
var im=Image.open(tempimg);
plt.show();
app.run();
export var Lmerge=function(){var __accu0__=[];for(var [i1,i2]of zip(L1,L2))__accu0__.append(i1+i2);return __accu0__}();
(function(){var __accu0__=[];for(var lst of list_of_lists)__accu0__.append(function(){var __accu1__=[];for(var x of lst)__accu1__.append(try_int(x));return __accu1__}());return __accu0__})();
subprocess.Popen(executable,__kwargtrans__({creationflags:DETACHED_PROCESS,close_fds:true}));
app.run();
np.array(my_list,__kwargtrans__({dtype:np.float}));
new set([new set([request.session.foo])]);
driver.quit();
plt.show();
n.index(min(n));
t.start();
var x=function(){var __accu0__=[];for(var i=0;i<10;i++)__accu0__.append(0);return __accu0__}();
file_handle.close();
a.__setitem__(slice(0,1),[1]);
(function(){var __accu0__=[];for(var i of range(0,len(data),n))__accu0__.append(data.__getslice__(i,i+n,1));return __accu0__})();
server.serve_forever();
a.take(np.arange(start,end),__kwargtrans__({axis:axis}));
export var vet=function(){var __accu0__=[];for(var _=0;_<1E5;_++)__accu0__.append(random.randint(1,10));return __accu0__}();
plt.xticks(ticks,labels);
sum(map(float,s.py_split()));
print(ET.tostring(newdom,__kwargtrans__({pretty_print:true})));
array([0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,0,0]);
f.set_size_inches(11.69,8.27);
var __left0__=function(){var __accu0__=[];for(var _=0;_<6;_++)__accu0__.append(int(eval(input())));return py_iter(__accu0__)}();var x1=__left0__[0];export var y1=__left0__[1];export var a1=__left0__[2];export var b1=__left0__[3];export var x2=__left0__[4];export var y2=__left0__[5];
df._get_numeric_data();
circle1.set_visible(false);
ast.literal_eval(a);
logging.getLogger().handlers[0].setLevel(logging.DEBUG);
pyplot.draw();
df.iloc.__getitem__([tuple([0,null,1]),your_col_index]);
export var coautorshipDictionary=function(){var __accu0__=[];for(var [k,v]of json.load(json_data))__accu0__.append([int(k),int(v)]);return dict(__accu0__)}();
plt.show();
var py_items=function(){var __accu0__=[];for(var [a,d,n]of function(){var __accu1__=[];for(var m of dl)__accu1__.append(list(m.py_values()));return py_iter(__accu1__)}())__accu0__.append(some(a.py_split(),d,n));return __accu0__}();
isinstance(now,datetime.datetime);
ax.set_xticklabels([]);
server.serve_forever();
np.repeat(np.arange(x),y);
df1.ix.__getitem__([0,1]);
plt.show();
var a_lower=function(){var __accu0__=[];for(var [k,v]of list(a.py_items()))__accu0__.append([k.lower(),v]);return dict(__accu0__)}();
var your_list=map(int,your_string);
plt.show();
(function(){var __accu0__=[];for(var [k,g]of itertools.groupby(sorted(iterable)))__accu0__.append(list(g));return __accu0__})();
sys.stdout.flush();
cv2.findContours(img,cv2.RETR_EXTERNAL,cv2.CHAIN_APPROX_SIMPLE);
User.objects.filter(__kwargtrans__({active:true}));
(function(){var __accu0__=[];for(var [key,val]of list(dct.py_items()))if(val==true)__accu0__.append(key);return __accu0__})();
var data=np.concatenate(tuple([im,indices]),__kwargtrans__({axis:-1}));
mimetypes.init();
cv2.destroyAllWindows();
random.randrange(1,10);
numpy.histogram(a,__kwargtrans__({bins:tuple([25,100])}));
var my_list=my_list.__getslice__(0,8,1)+new_array;
dictionary[key]=value;
app.run();
print(list(range(0,(m+1)*n,n)).__getslice__(1,null,1));
df.columns=function(){var __accu0__=[];for(var x of df.columns)__accu0__.append(strip_non_ascii(x));return __accu0__}();
var __left0__=zip(...sorted(enumerate(a),__kwargtrans__({key:function __lambda__(item){return item[1]}})));export var a_order=__left0__[0];export var a_sorted=__left0__[1];
L.grid(__kwargtrans__({row:6,column:0}));
export var all_descendants=list(elem.py_iter());
cv2.waitKey(0);
export var mc=MyClass();
sorted(A,__kwargtrans__({key:operator.itemgetter(2,0,1)}));
var df=pd.concat([df,s1,s2],__kwargtrans__({axis:1})).reset_index(__kwargtrans__({drop:true}));
(function(){var __accu0__=[];for(var i of a)__accu0__.append(function(){var __accu1__=[];for(var j of i)__accu1__.append(int(j));return __accu1__}());return __accu0__})();
tuple([[0,0,0,0,0,0,0,0,0]]);
export var myRoundedList=function(){var __accu0__=[];for(var elem of myList)__accu0__.append(round(elem,2));return __accu0__}();
db.commit();
madata.mean(__kwargtrans__({axis:1}));
var a=np.array([[1,2],[10,20],[100,200]]);
set(list1).intersection(list2);
np.bincount(accmap,__kwargtrans__({weights:a}));
isinstance(d[obj],list);
time.sleep(1);
self.canvas.pack(__kwargtrans__({fill:BOTH,expand:YES}));
plt.show();
plt.scatter(x,y);
var verts=function(){var __accu0__=[];for(var x=0;x<1E3;x++)__accu0__.append(0);return __accu0__}();
(function(){var __accu0__=[];for(var _=0;_<6;_++)__accu0__.append(1);return __accu0__})();
np.linalg.norm(x);
connection.connect();
time.sleep(100);
[tuple([1,2,2]),tuple([5]),tuple([1,1,1,1,1]),tuple([1,1,1,2])];
sorted(Author.objects.all(),__kwargtrans__({key:function __lambda__(a){return a.full_name}}));
jsonify(__kwargtrans__({eqtls:function(){var __accu0__=[];for(var e of my_list_of_eqtls)__accu0__.append(e.serialize());return __accu0__}()}));
sum(function(){var __accu0__=[];for(var i of x)if(len(i)>1)__accu0__.append(len(i));return py_iter(__accu0__)}());
(function(){var __accu0__=[];for(var [x,y]of pairs)if(x!=y)__accu0__.append(function(){var __accu1__=[];for(var k of x)if(x[k]!=y[k])__accu1__.append(k);return __accu1__}());return __accu0__})();
admin.site.register(Product,ProductAdmin);
var norm=function(){var __accu0__=[];for(var i of raw)__accu0__.append(float(i)/max(raw));return __accu0__}();
df.iloc[[2,4]];
py_next(function(){var __accu0__=[];for(var s of list_of_string)if(s)__accu0__.append(s);return py_iter(__accu0__)}());
Gtk.main();
(function(){var __accu0__=[];for(var x of mylist)if(__in__(x,pattern))__accu0__.append(x);return __accu0__})();
fcntl.flock(fd,fcntl.LOCK_EX);
plt.show();
(function(){var __accu0__=[];for(var x of[[foo]*10]*10)__accu0__.append(x.__getslice__(0,null,1));return __accu0__})();
var root=tk.Tk();
var arr=arr.__getitem__([tuple([0,null,1]),tuple([0,null,1]),tuple([0,null,2])]);
df[df.A==0&df.B==2&df.C==6&df.D==0];
(function(){var __accu0__=[];for(var i of OrderedDict.fromkeys(function(){var __accu1__=[];for(var item of L)__accu1__.append(frozenset(item));return py_iter(__accu1__)}()))__accu0__.append(set(i));return __accu0__})();
MyModel2.mymodel1.through.objects.all();
_.sum();
df.groupby(df.index.year);
(function(){var __accu0__=[];for(var i=0;i<4;i++)if(i<=1||i>=4)__accu0__.append(i);return __accu0__})();
plt.show();
time.sleep(10);
df.mean(__kwargtrans__({axis:1}));
sorted(a,__kwargtrans__({key:function __lambda__(x){return aux.index(x[0])}}));
np.where(a==a.max());
hasattr(Dynamo,key)&&callable(getattr(Dynamo,key));
(function(){var __accu0__=[];for(var i of x)__accu0__.append(math.log10(i));return __accu0__})();
do_something();
np.where(condition(zeta),func1(zeta),func2(zeta));
numpy.array(list(result.py_items()),dtype);
a.mean(__kwargtrans__({axis:-1})).mean(__kwargtrans__({axis:-1}));
pdb.set_trace();
sys.modules;
plt.show();
np.argwhere(arr);
var im=Image.open(BytesIO(base64.b64decode(data)));
print(json.dumps(json_output,__kwargtrans__({indent:4})));
print(a.py_pop(0));
var data=np.atleast_2d(np.loadtxt(filename));
Employee.objects.active();
(function(){var __accu0__=[];for(var x of some_list)__accu0__.append(!x);return __accu0__})();
print(hex(int(string,__kwargtrans__({base:16}))));
df.dropna(__kwargtrans__({thresh:len(df)-7}));
session.query(Location,func.count(Work.id)).outerjoin(Work).group_by(Location);
export var indices=function(){var __accu0__=[];for(var [i,x]of enumerate(myList))if(re.search(pattern,x))__accu0__.append(i);return __accu0__}();
cursor.execute(sql,args);
plt.show();
plt.hist(x,__kwargtrans__({bins:n,range:tuple([a,b])}));
plt.show();
plt.show();
(function(){var __accu0__=[];for(var x of l)__accu0__.append(x>=45?x+1:x+5);return __accu0__})();
reactor.run();
export var ret=pycb();
list(chain(...function(){var __accu0__=[];for(var i of l)__accu0__.append(isinstance(i,tuple)?i:tuple([i]));return py_iter(__accu0__)}()));
print(chr(1081));
print(cursor.fetchall());
crypthash.hexdigest();
(function(){var __accu0__=[];for(var [x,y]of zip(xs,ys))__accu0__.append(func(x,y));return __accu0__})();
pygame.mixer.music.play();
(function(){var __accu0__=[];for(var i=0;i<len(ranges)-1;i++)__accu0__.append(filterList(numbers,ranges[i],ranges[i+1]));return __accu0__})();
var __left0__=max(enumerate(my_list),__kwargtrans__({key:operator.itemgetter(1)}));export var index=__left0__[0];export var value=__left0__[1];
f.close();
int(value||0);
MyModel.objects.filter(__kwargtrans__({py_nameexact:models.F(title)})).exists();
new set([new set([my_num|intcomma])]);
map(set,list(d.py_values()));
list(df.index.py_values);
plt.show();
plt.draw();
(function(){var __accu0__=[];for(var [k,v]of numbers.py_items())if(v==max(numbers.py_values()))__accu0__.append(k);return __accu0__})();
f.write(os.linesep.join(data));
dictionary[new_key]=dictionary.py_pop(old_key);
root.mainloop();
(function(){var __accu0__=[];for(var [i,[m,n]]of enumerate(zip(bool_array.__getslice__(0,-1,1),bool_array.__getslice__(1,null,1))))if(m!=n)__accu0__.append(i);return __accu0__})();
fh.close();
sys.stdout.flush();
plt.figure();
print(tuple([key,value]));
sys.modules;
__in__(lst[0],lst.__getslice__(1,null,1));
the_list.py_sort(__kwargtrans__({key:len,reverse:true}));
var filtered_dict=function(){var __accu0__=[];for(var [k,v]of d.py_items())if(__in__(filter_string,k))__accu0__.append([k,v]);return dict(__accu0__)}();
plt.show();
str(chr(97));
myList.append(i);
__all__[py_name]=10;
Model.__table__.create(session.bind);
time.sleep(1);
df.index=list(range(len(df)));
export var giant=max(nx.connected_component_subgraphs(G),__kwargtrans__({key:len}));
conn.commit();
print(np.py_sort(np.partition(x,-10).__getslice__(-10,null,1)));
(function(){var __accu0__=[];for(var [k,group]of groupby(l,bool))if(k)__accu0__.append(list(group));return __accu0__})();
var good_data=function(){var __accu0__=[];for(var n=0;n<data.shape[0];n++)__accu0__.append(data.__getitem__([n,tuple([0,null,1])])[flag==1]);return __accu0__}();
input();
np.cumsum(a);
datetime.datetime.now()+datetime.timedelta(__kwargtrans__({days:1}));
(function(){var __accu0__=[];for(var l of a)if(__in__(l,b))__accu0__.append(l);return __accu0__})();
df1.loc[(df1>s).any(__kwargtrans__({axis:1}))==true].index.tolist();
list(function(){var __accu0__=[];for(var a of x)if(a!=2)__accu0__.append(a);return __accu0__}());
export var instance=ClassObject();
plt.show();
ar.reshape(ar.shape[0],-1);
(function(){var __accu0__=[];for(var i=0;i<n;i++)__accu0__.append(random.uniform(lbound,rbound));return __accu0__})();
sys.path.append(root);
list(double([1,2]));
any(function(){var __accu0__=[];for(var key of mydict)__accu0__.append(key.startswith(mystr));return py_iter(__accu0__)}());
Py_Finalize();
new set([new set([form.as_table])]);
plt.show();
webdriver.Firefox(__kwargtrans__({firefox_profile:fp}));
[1,0,1,1];
server.serve_forever();
(function(){var __accu0__=[];for(var digit of bin(n).__getslice__(2,null,1))__accu0__.append(int(digit));return __accu0__})();
export var D=np.vstack(tuple([np.hstack(tuple([A,B])),np.hstack(tuple([B.T,C]))]));
var a=a+[0]*(maxLen-len(a));
list(d.py_keys());
signal.signal(signal.SIGCHLD,signal.SIG_IGN);
plt.show();
[true]*5E3;
d.py_sort(__kwargtrans__({key:itemgetter(1),reverse:true}));
sorted(py_items,__kwargtrans__({key:cmp_to_key(comparer)}));
self.setupUi(self);
br.select_form(__kwargtrans__({nr:0}));
np.asarray(map(func,arr));
var __left0__=tuple([-y,x]);var x=__left0__[0];var y=__left0__[1];
print(tuple([cities[0][1],cities[1][1]]));
plt.show();
export var conset=set(map(function __lambda__(x){return tuple(sorted(x))},consarray));
export var coords=np.c_.__getitem__([xx.ravel(),yy.ravel()]);
tuple([a,b,c]);
f(...tuple([tuple([1,4])]));
__init__.py;
Achievement.objects.py_get(__kwargtrans__({py_name:str(b)}));
np.ma.array(np.tile(arr,tuple([cond.shape[0],1])),__kwargtrans__({mask:~cond})).argmax(__kwargtrans__({axis:1}));
plt.imshow(lena,__kwargtrans__({cmap:plt.cm.gray}));
server.serve_forever();
export var iqr=q75-q25;
array2.__setitem__([tuple([0,null,1]),tuple([0,null,1]),tuple([0,null,1]),tuple([0,null,1])],array1.copy());
gtk.main();
df.T;
(function(){var __accu0__=[];for(var item of my_list)if(!__in__(item,to_be_removed))__accu0__.append(item);return __accu0__})();
df.loc[(df!=0).any(__kwargtrans__({axis:1}))];
f.close();
requests.py_get(url,__kwargtrans__({auth:auth}));
browser.quit();
cherrypy.request.params.py_get(key_name);
(a==b|numpy.isnan(a)&numpy.isnan(b)).all();
plt.show();
np.random.permutation(arr);
conPG.commit();
(function(){var __accu0__=[];for(var item of my_list)if(1<=item&&item<=5)__accu0__.append(item);return __accu0__})();
print(function(){var __accu0__=[];for(var _=0;_<10;_++)__accu0__.append(py_next(c));return __accu0__}());
ax.set_xlim([0,len(df)]);
export var kOUT=np.zeros(tuple([N+1,N+1]));
app.MainLoop();
plt.show();
ax.yaxis.set_visible(false);
!set(list1).isdisjoint(list2);
time.sleep(60);
shutil.copy(filename,dest_dir);
_(a+b*c);
f.close();
csv_output.writerows(zip(...rows));
my_list.py_sort(__kwargtrans__({key:function __lambda__(x){return order.index(x[0])}}));
np.sin(-1.5);
__init__.py;
list(string.ascii_lowercase);
simulation.someloop();
conn.close();
arr[arr<0]=0;
plt.show();
sys.stderr.write(str(e));
session.query(RssFeed).all();
server.serve_forever();
buffer1.__setslice__(0,null,null,buffer2);
var A=np.array(function(){var __accu0__=[];for(var i=0;i<M;i++)__accu0__.append(C.__getitem__([tuple([0,null,1]),B==i]).sum(__kwargtrans__({axis:1})));return __accu0__}());
plt.show();
math.hypot(p2[0]-p1[0],p2[1]-p1[1]);
plt.show();
var dic=function(){var __accu0__=[];for(var [i,x]of enumerate(al,1))__accu0__.append([x,i]);return dict(__accu0__)}();
export var m=function(){var __accu0__=[];for(var [k,d]of sum(cs).py_items())__accu0__.append([k,float(d)/len(cs)]);return dict(__accu0__)}();
f.close();
np.where(a==a.max(__kwargtrans__({axis:1,keepdims:true})),a,0);
mlab.show();
self.est.fit(X,y);
os.makedirs(dirname);
self.Bind(wx.EVT_LEFT_DOWN,self._onMouseDown);
tar.close();
plt.show();
pygame.display.py_update();
__init__.py;
tuple(l);
ax.scatter(x,y,z,__kwargtrans__({depthshade:0}));
plt.show();
unittest.main();
timediff.total_seconds();
(function(){var __accu0__=[];for(var [a,b]of zip(l,l.__getslice__(1,null,1)+l.__getslice__(0,-1,1)))__accu0__.append(abs(a-b));return __accu0__})();
self.d.py_setdefault(index,[]).append(value);
plt.show();
df.mean().sort_values();
pygame.display.py_update();
[-2,-1,0,1,2];
sorted(li,__kwargtrans__({key:operator.itemgetter(1)}));
random.choice(string.ascii_lowercase);
window.mainloop();
plt.close();
(function(){var __accu0__=[];for(var [k,g]of groups)__accu0__.append(tuple([k,list(g)]));return __accu0__})();
app.exec_();
sum(my_list);
new set([new set([model.datetime|time])]);
tuple(map(tuple,arr));
export var tuples_filtered=function(){var __accu0__=[];for(var tup of tuples)if(__in__(tup[0],filter_set))__accu0__.append(tup);return __accu0__}();
plt.show();
list(itertools.combinations(list(range(6)),2));
plt.show();
s.py_sort(__kwargtrans__({key:operator.itemgetter(1,2)}));
roundrobin(my_list,my_list);
root.mainloop();
sys.exit();
var today=date.today();
json.dumps(result);
pyplot.close();
plt.show();
br.submit();
log.start();
list(map(len,s.py_split()));
print(item.strip());
plt.show();
sys.stdout=sys.stdout.detach();
(function(){var __accu0__=[];for(var i=0;i<len(py_items);i++)__accu0__.append(py_items.__getslice__(0,i,1)+py_items.__getslice__(i+1,null,1));return __accu0__})();
np.arange(a.shape[0])[~np.in1d(a,b)].tolist();
df.apply(function __lambda__(x){return x.value_counts()}).T.stack();
app.run();
np.argwhere(M==0);
out_file.close();
var x=dict(function(){var __accu0__=[];for(var i=0;i<10;i++)__accu0__.append(tuple([i,set()]));return py_iter(__accu0__)}());
reactor.run();
var s=s[0].lower()+s.__getslice__(1,null,1);
picturetags.py;
map(list,df.py_values);
export var jsonData=json.dumps(data);
export var dframe=pd.concat([dframe,to_be_appended],__kwargtrans__({axis:1}));
list(set(list1+list2));
plt.step(x,y);
var C=np.dot(A,B).__getitem__([tuple([0,null,1]),tuple([0,null,1]),0,tuple([0,null,1])]);
sorted(py_iter(adict.py_items()),__kwargtrans__({key:itemgetter(1),reverse:true}));
func(...args,__kwargtrans__(kwargs));
driver.close();
(df==0).sum(__kwargtrans__({axis:1}));
s.isnull().sum();
(function(){var __accu0__=[];for(var item of my_list)if(any(function(){var __accu1__=[];for(var x of bad)__accu1__.append(__in__(x,item));return py_iter(__accu1__)}()))__accu0__.append(item);return __accu0__})();
output.append([py_items[0],int(py_items[1]),int(py_items[2])]);
ax.annotate(str(j),__kwargtrans__({xy:tuple([i,j+.5])}));
__in__(word,wordList.__getslice__(0,4,1));
pprint.pprint(filtered);
ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy());
forms.ModelForm.__init__(self,...args,__kwargtrans__(kwargs));
es.refresh();
conn.rollback();
np.insert(a,1,np.array(tuple([1,1])),1);
df.apply(np.prod,__kwargtrans__({axis:1}));
p.pattern;
df.T.drop_duplicates().T;
self.thread.start();
p.stdout.close();
self.figure.canvas.draw();
(function(){var __accu0__=[];for(var [key,group]of groupby(li))if(all(function(){var __accu1__=[];for(var [i,j]of enumerate(group))__accu1__.append(i==0);return py_iter(__accu1__)}()))__accu0__.append(key);return __accu0__})();
matrix.append([0]*columns);
a.__setslice__(0,null,null,[]);
os.path.dirname(sys.argv[0]);
ax.set_ylim([-.5,.5]);
print(os.getcwd());
transaction.commit();
lst.append(z);
a.__setslice__(0,1,null,[[5]]);
sorted(counter.py_items());
tuple([[0,0,0,0,1,0,0,0,0]]);
df_with_x7.show();
datetime.timestamp();
a.__setslice__(2,10,null,[]);
driver.quit();
map(str.upper,letters);
plt.show();
pkg_resources.get_distribution(py_name).activate();
sum(map(function __lambda__(x,y){return bool(x-y)},[1,2],[1]));
zip(t.__getslice__(0,null,2),t.__getslice__(1,null,2));
time.sleep(1);
var parts=function(){var __accu0__=[];for(var i=0;i<len(indices)-1;i++)__accu0__.append(s.__getslice__(indices[i],indices[i+1],1));return __accu0__}();
[4,5,5,6,6,6];
list(chain.from_iterable(function(){var __accu0__=[];for(var i=1;i<6;i++)__accu0__.append(tuple([i,Math.pow(i,2)]));return py_iter(__accu0__)}()));
export var hash_dict=dict(itertools.groupby(list(dic.py_values()),__kwargtrans__({key:hash})));
new set([new set([add(a,b)])]);
time.sleep(1);
a.py_sort(__kwargtrans__({axis:1}));
plt.show();
export var newD=function(){var __accu0__=[];for(var [k,v]of list(d.py_items()))__accu0__.append([k,round(v)]);return dict(__accu0__)}();
f.close();
export var masked_a=numpy.ma.array(a,__kwargtrans__({mask:numpy.repeat(a.__getitem__([tuple([0,null,1]),0])==1,a.shape[1])}));
f.close();
hash(frozenset(py_iter(self.__dict__.py_items())));
len(a[0]);
export var data2=np.asarray(data2,__kwargtrans__({dtype:np.int16}));
plt.show();
cv2.bitwise_and(gray,gray,__kwargtrans__({mask:mask}));
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
plt.show();
np.hstack(tuple([a,b,c])).ravel();
export var x_=tf.reshape(x,[-1,1,10,1]);
plt.show();
lowest_dirs.append(os.path.py_split(root)[-1]);
print(soup.get_text().strip());
ax.set_xlim(-5,5);
time.sleep(1);
var data=OrderedDict(sorted(list(data.py_items()),__kwargtrans__({key:function __lambda__(x){return x[1][0]}})));
export var foo=foo.upper();
time.sleep(1);
db.close();
min(max_val,max(min_val,val));
export var item=gtk.MenuItem();
(function(){var __accu0__=[];for(var value of py_values)__accu0__.append([key_for_value(value),value]);return dict(__accu0__)})();
tuple(list(x[0])+[x[1]]);
np.take(A,__mod__(np.arange(ncols),A.shape[1]),__kwargtrans__({axis:1}));
var __left0__=zip(...my_list);var my_list2=__left0__[0];var my_list1=__left0__[1];
Gtk.main();
all(function(){var __accu0__=[];for(var key of properties_to_check_for)__accu0__.append(__in__(key,dict_obj));return py_iter(__accu0__)}());
Clock.schedule_once(partial(self.py_update,message),0);
random.uniform(1.5,1.9);
datetime.timedelta(__kwargtrans__({seconds:10}))+datetime.timedelta(__kwargtrans__({hours:5}));
np.equal.reduce([true,1]);
(function(){var __accu0__=[];for(var x of list1)for(var y of list2)__accu0__.append([x,y]);return __accu0__})();
(function(){var __accu0__=[];for(var x of lelist)if(lestring.count(x))__accu0__.append(x);return __accu0__})();
termios.tcsetattr(fd,termios.TCSAFLUSH,old_settings);
var L=function(){var __accu0__=[];for(var i=0;i<len(bytes_obj);i++)__accu0__.append(bytes_obj.__getslice__(i,i+1,1));return __accu0__}();
a.transpose(0,2,1).ravel();
pickle.loads(pickle.dumps(PickalableC()));
random.shuffle(thelist);
print(b?a:0);
self.appExeCB.addItems(list(self.py_items.py_keys()));
plt.xticks(xvalues,xlabels);
(function(){var __accu0__=[];for(var x=0;x<10;x++)__accu0__.append(x*.1);return __accu0__})();
np.argwhere(np.all(e-array([1,2])==0,__kwargtrans__({axis:2})));
help(my_list);
export var strip_list=function(){var __accu0__=[];for(var item of lines)__accu0__.append(item.strip());return __accu0__}();
(function(){var __accu0__=[];for(var el of lst)__accu0__.append(int_or_float(el));return __accu0__})();
shutil.copy2(file,dest_dir);
export var filtered_list=function(){var __accu0__=[];for(var [i,v]of zip(list_a,filter))if(v)__accu0__.append(i);return __accu0__}();
self.Center();
export var moneyx=float(money.read());
print(sys.argv);
plt.show();
cv2.imwrite(py_name,imagem);
toolz.unique(obj_list,__kwargtrans__({key:function __lambda__(x){return x.my_attr}}));
operator.itemgetter(1)(row);
a[np.argsort(ma.__getitem__([tuple([0,null,1]),1]))];
var my_array=numpy.array(my_list,__kwargtrans__({dtype:numpy.float64}));
app.run(__kwargtrans__({port:port,debug:false}));
x.__setslice__(0,null,null,function(){var __accu0__=[];for(var value of x)if(len(value)==2)__accu0__.append(value);return __accu0__}());
os.startfile(filename);
plt.show();
sys.argv[2];
!any(dict.py_values());
(function(){var __accu0__=[];for(var [item,value]of config.py_items(section))__accu0__.append(tuple([item,value]));return __accu0__})();
np.hstack(a.flat);
my_list.py_sort(__kwargtrans__({key:operator.itemgetter(1)}));
export var array=function(){var __accu0__=[];for(var line of f)__accu0__.append(function(){var __accu1__=[];for(var x of line.py_split())__accu1__.append(int(x));return __accu1__}());return __accu0__}();
__all__;
export var sock=socket.socket(socket.AF_INET,socket.SOCK_DGRAM);
self.thread.start();
app.run();
json.load(request.body);
(function(){var __accu0__=[];for(var c of chars)__accu0__.append([c,s.count(c)]);return dict(__accu0__)})();
tk.mainloop();
pdb.set_trace();
B_p.to_csv(sys.stdout,__kwargtrans__({index:false}));
(function(){var __accu0__=[];for(var [k,v]of list(d.py_items()))__accu0__.append([str(k),convert_value(v)]);return dict(__accu0__)})();
QtCore.Qt.ItemIsEnabled;
var data=function(){var __accu0__=[];for(var line of f)__accu0__.append(map(int,line.py_split()));return __accu0__}();
urllib.parse.urlencode(f);
var d=dict(zip(function(){var __accu0__=[];for(var o of object_list)__accu0__.append(o.py_name);return __accu0__}(),object_list));
writer.writerows(lines);
var py_keys=function(){var __accu0__=[];for(var [i,v]of scores.py_items())if(v==max_value)__accu0__.append(i);return __accu0__}();
(function(){var __accu0__=[];for(var i of x)__accu0__.append(i[0]);return __accu0__})();
plt.show();
session.commit();
map(function __lambda__(frame){return frame.query(expr)},[df,df2]);
export var berlin_now=datetime.now(tz);
prod(list(range(1,5)));
py_keys.py_update(list(d.py_keys()));
(df!=0).dot(df.columns);
print(object.__repr__());
thread.start();
self.x+=STEP;
plt.show();
plt.show();
export var all_the_ways=[tuple([2,1,2]),tuple([2,2,1])];
int(b,2);
var f=figure(__kwargtrans__({figsize:tuple([5,1])}));
ssh.close();
fp.close();
list(function(){var __accu0__=[];for(var x of myList)__accu0__.append([x.tag,x]);return dict(__accu0__)}().py_values());
p.delete();
all(function(){var __accu0__=[];for(var i of l)__accu0__.append(i.count(1)==n);return py_iter(__accu0__)}());
df.reset_index();
var result=np.arange(20,__kwargtrans__({dtype:np.float})).reshape(tuple([2,10]));
datetime.datetime.fromtimestamp(0)+datetime.timedelta(__kwargtrans__({seconds:2147570047}));
pd.crosstab(df.A>0,df.B>0);
self.py_get();
plt.show();
app.exec_();
ContactForm.get_reason_display();
len(x)>=4;
var my_list=function(){var __accu0__=[];for(var line of f)__accu0__.append(json.loads(line));return __accu0__}();
session.query(func.count(User.id)).scalar();
l.append(elt2);
all(function(){var __accu0__=[];for(var v of py_values)__accu0__.append(v==0);return py_iter(__accu0__)}());
plt.show();
result.wait();
ssh.close();
zip(...[py_iter(L)]*2);
var img=Image.open(file);
df2.show();
(function(){var __accu0__=[];for(var x of itertools.product(...list(dicts.py_values())))__accu0__.append(dict(zip(dicts,x)));return py_iter(__accu0__)})();
(function(){var __accu0__=[];for(var x of strings)if(x)__accu0__.append(x);return __accu0__})();
sum(v)==sum(v+[n]);
df.eq(df.iloc.__getitem__([tuple([0,null,1]),0]),__kwargtrans__({axis:0})).all(1);
list(d.py_values());
module1.Relay();
print(arg,getattr(args,arg));
(function(){var __accu0__=[];for(var word of words)if(!word.isdigit())__accu0__.append(word);return __accu0__})();
plt.show();
var data2=sorted(data,__kwargtrans__({key:operator.itemgetter(1)}));
plt.show();
plt.show();
ax.set_xticklabels(labels);
print(etree.tostring(root));
var df=pd.DataFrame(data.__getslice__(1,null,1),__kwargtrans__({columns:data[0]}));
export var mod=sys.modules[__module__];
im2.putdata(list_of_pixels);
np.sqrt(s.multiply(s).sum(1));
np.tile(data,5);
tuple([[0,0,1,1,1,1,1,0,0]]);
plt.show();
w.writerow(my_dict);
pdb.set_trace();
QtGui.QMainWindow.__init__(self,parent);
print(output.stdout.read());
show();
print(tuple(itertools.chain.from_iterable(product)));
l.py_sort(__kwargtrans__({key:key}));
df.groupby([df.a.apply(tuple)]);
c.save();
plt.show();
var d=dict(zip(function(){var __accu0__=[];for(var o of object_list)__accu0__.append(o.py_name);return py_iter(__accu0__)}(),object_list));
plt.show();
np.repeat(data,5);
pd.concat(function(){var __accu0__=[];for(var col of cols)__accu0__.append(df[col].apply(pd.Series));return __accu0__}(),__kwargtrans__({axis:1,py_keys:cols}));
pprint.pprint(a,__kwargtrans__({width:1}));
sum(function(){var __accu0__=[];for(var d of list(data.py_values()))__accu0__.append(Counter(d));return py_iter(__accu0__)}(),Counter());
test.__kwdefaults__;
print(sum(function(){var __accu0__=[];for(var x of arr)if(x===false)__accu0__.append(1);return py_iter(__accu0__)}()));
cherrypy.engine.start();
plt.show();
db.session.add(product_obj);
df.iloc.__getitem__([tuple([-6,-1,1]),2]);
extmodule.dontoverride();
sum([[false,false,true],[true,false,true]]);
np.linalg.lstsq(A.T,y);
export var value_at_index=list(dic.py_values())[index];
tuple([[0,0,0,1,1,1,0,0,0]]);
plt.show();
random.shuffle(temp);
export var buckets=[0]*100;
var d2=dict(function(){var __accu0__=[];for(var [k,v]of list(d.py_items()))__accu0__.append(tuple([k,f(v)]));return py_iter(__accu0__)}());
np.putmask(elevation,elevation>0,np.nan);
plt.draw();
sorted(vec,__kwargtrans__({key:itemgetter(1),reverse:true})).__getslice__(0,5,1);
gtk.main();
func(...args,__kwargtrans__(kwargs));
(function(){var __accu0__=[];for(var [py_name,age]of list(mydict.py_items()))if(age==search_age)__accu0__.append(py_name);return __accu0__})();
somelist.py_sort(__kwargtrans__({key:predefined_list.index}));
var df=df.apply(myfillna);
signal.signal(signal.SIGINT,signal.SIG_DFL);
pyplot.show();
func.__code__.co_code;
cursor.execute(sql);
self.canvas.draw();
tuple([deletemyList.__getslice__(-2,null,1),myList.__getslice__(0,2,1)]);
print(np.allclose(sola,solb));
zip(...l);
df.iloc.__getitem__([tuple([0,5,1]),tuple([0,5,1])]);
set(a)&set(b)&set(c);
datetime.datetime(2010,9,29,11,15);
gevent.monkey.patch_all(__kwargtrans__({httplib:true}));
plt.show();
cursor.execute(query,l);
self.actionthread.start();
instance.instance_method();
dict(function(){var __accu0__=[];for(var [i,x]of enumerate(t))__accu0__.append(tuple([x,i]));return py_iter(__accu0__)}());
pygame.init();
export var ranges=function(){var __accu0__=[];for(var n of range(start,stop,step))__accu0__.append(tuple([n,min(n+step,stop)]));return __accu0__}();
app.register_blueprint(someappmod);
sum(function(){var __accu0__=[];for(var x of s)if(x.isdigit())__accu0__.append(int(x));return py_iter(__accu0__)}());
sys.stdout.flush();
(function(){var __accu0__=[];for(var y of collection)for(var x of y)__accu0__.append(x);return __accu0__})();
frame.grid(__kwargtrans__({row:0,column:0}));
os.path.dirname(sys.argv[0]);
outfile.close();
(function(){var __accu0__=[];for(var i of L)__accu0__.append(tuple([i,function(){var __accu1__=[];for(var j of L)if(j!=i)__accu1__.append(j);return __accu1__}()]));return __accu0__})();
remote_file.close();
np.sum(my_list);
(function(){var __accu0__=[];for(var i of str(bin(x)).__getslice__(2,null,1))__accu0__.append(int(i));return __accu0__})();
list(itertools.chain(...list(d.py_values())));
moo.py;
var d=dict(function(){var __accu0__=[];for(var x of object_list)__accu0__.append(tuple([x.key,x]));return py_iter(__accu0__)}());
(function(){var __accu0__=[];for(var x of a)for(var y of b)__accu0__.append(tuple([x,y]));return py_iter(__accu0__)})();
select(L,[2,5]);
transposed_l.py_sort(__kwargtrans__({key:function __lambda__(x){return x[1]},reverse:true}));
nonVarargMethod(args[0],args[1],args[2]);
f(...list(range(5E3)));
print(line);
(function(){var __accu0__=[];for(var x of product(...py_iter(dicts.py_values())))__accu0__.append(dict(zip(dicts,x)));return py_iter(__accu0__)})();
plt.show();
shutil.copy(full_file_name,dest);
random.seed([x]);
tuple([array([1.05206154,1.96929465,.94590444]),1]);
plt.show();
plt.show();
server.stop();
ax.yaxis.set_visible(false);
(function(){var __accu0__=[];for(var [k,v]of d.py_items())__accu0__.append([f(k),v]);return dict(__accu0__)})();
var a=function(){var __accu0__=[];for(var t of enumerate(a.__getslice__(1,null,1)))if(t[1][1]>a[t[0]-1][1])__accu0__.append(t[1]);return __accu0__}();
doctest.testmod();
[[2,4,6],[8,10,12],[6,8,12]];
session.rollback();
(function(){var __accu0__=[];for(var [i,d]of enumerate(lod))if(__in__(2,d))__accu0__.append(i);return __accu0__})();
OrderedDict(sorted(list(d.py_items()),__kwargtrans__({key:function __lambda__(t){return t[0]}})));
file.write(str(formatted));
plt.show();
DataFrame(py_values,__kwargtrans__({columns:columns}));
export var file=service.files().insert(__kwargtrans__({body:body,media_body:media_body})).execute();
os.chdir(path);
ax.plot_surface(X,Y,Z,__kwargtrans__({facecolors:cm.Oranges(V)}));
sorted(qs,__kwargtrans__({key:function __lambda__(x){return x.id==id}}));
self.assertEqual(5,self.testme);
float(math.factorial(170));
export var hand=dict(function(){var __accu0__=[];for(var [k,v]of hand.py_items())if(v!=0)__accu0__.append(tuple([k,v]));return py_iter(__accu0__)}());
pdb.set_trace();
(function(){var __accu0__=[];for(var sub_list of a.__getslice__(1,null,1))for(var item of sub_list)__accu0__.append(item);return __accu0__})().count(1);
kethread.start();
json.loads(s);
df1.reset_index();
var B=A.__getitem__([[0,2],[0,1],[1,2]]);
writer.writerow(row);
edges.append(tuple([m.group(1),m.group(2)]));
set.intersection(...map(set,p));
print(repr(line));
sys.exit();
(function(){var __accu0__=[];for(var x of indexes)__accu0__.append(main_list[x]);return __accu0__})();
df.apply(func,__kwargtrans__({axis:1}));
sys.exit();
f.newmethod();
os.remove(filename);
print(top[0][1]);
(function(){var __accu0__=[];for(var [k,v]of list(d.py_items()))if(k.startswith(s))__accu0__.append([k,v]);return dict(__accu0__)})();
root.mainloop();
conn.commit();
var s=sum(function(){var __accu0__=[];for(var [a,b]of zip(list_1,list_2))__accu0__.append(a*b);return py_iter(__accu0__)}());
list(range(10,0,-1));
l1.py_sort();
plt.show();
var __left0__=tuple([np.isnan(y),function __lambda__(z){return z.nonzero()[0]}]);export var nans=__left0__[0];var x=__left0__[1];
df.drop_duplicates();
db.session.commit();
main();
list(my_dataframe.columns.py_values);
a.__getitem__([tuple([0,null,1]),tuple([0,null,1]),tuple([0,null,-1]),tuple([0,null,-1])]);
var C=np.sum(A.__getitem__([tuple([0,null,1]),tuple([0,null,1]),tuple([0,null,1]),np.newaxis])*B.__getitem__([tuple([0,null,1]),np.newaxis,tuple([0,null,1]),tuple([0,null,1])]),__kwargtrans__({axis:2}));
ax1.set_xticklabels([]);
var b=function(){var __accu0__=[];for(var x of a)__accu0__.append(x.__getslice__(0,null,1));return __accu0__}();
datetime.utcfromtimestamp(timestamp1);
plt.show();
self.button.clicked.connect(self.handleButton);
np.repeat(np.repeat(a,2,__kwargtrans__({axis:0})),2,__kwargtrans__({axis:1}));
export var a_b=list(set(a)-set(b));
new_list.append(f(x));
plt.show();
plt.show();
QtGui.QFrame.__init__(self);
pycurl_connect.perform();
((s.iloc.__getslice__(0,null,2).py_values+s.iloc.__getslice__(1,null,2))/2).reset_index(__kwargtrans__({drop:true}));
list(g);
plt.show();
(vals==tuple([0,1])).all(__kwargtrans__({axis:1}));
np.unravel_index(np.argmax(corr_img),corr_img.shape);
element.click();
plt.show();
writer.writerow(map(quote,row));
time.sleep(.25);
deletemy_dict[x];
Entry.objects.filter(__kwargtrans__({weekdays:HasBit(WEEKDAYS.fri)}));
any(a_list);
ftp.set_pasv(false);
var d=dict(zip(l,t));
__init__.py;
(function(){var __accu0__=[];for(var i of list1)__accu0__.append([i[0],i.__getslice__(1,null,1)]);return dict(__accu0__)})();
foo(...t);
var array=np.fromiter(py_iter(result.py_items()),__kwargtrans__({dtype:dtype,count:len(result)}));
dict(my_list);
ea.Reload();
sorted(py_items,__kwargtrans__({cmp:comparer}));
plt.show();
pd.value_counts(d.py_values.ravel());
int(list(filter(str.isdigit,str1)));
(function(){var __accu0__=[];for(var [x,y]of pairs)if(x!=y)__accu0__.append(tuple([x,y]));return __accu0__})();
var q=Model.objects.filter(Q(__kwargtrans__({field1:f1}))|Q(__kwargtrans__({field2:f2})));
result[k].append(v);
process.terminate();
print(sys.argv[1]);
plt.plot(dat0.__getitem__([tuple([0,null,1]),0]),dat0.__getitem__([tuple([0,null,1]),1]));
aapl.index.to_series().diff().median()/(60*60*Math.pow(10,9));
export var bids=function(){var __accu0__=[];for(var bid of bids)__accu0__.append(int(bid));return __accu0__}();
var output=function(){var __accu0__=[];for(var [value,count]of list(counts.py_items()))if(count>1)__accu0__.append(value);return __accu0__}();
app.exec_();
plt.figure();
time.sleep(1);
A[0]===A[0];
var singleitem=mylist.py_pop();
var data=np.loadtxt(filename,__kwargtrans__({ndmin:2}));
min(timeit.repeat(function __lambda__(){return dict(function(){var __accu0__=[];for(var d of tuple([x,y]))for(var [k,v]of list(d.py_items()))__accu0__.append(tuple([k,v]));return py_iter(__accu0__)}())}));
export var now_aware=unaware.py_replace(__kwargtrans__({tzinfo:pytz.UTC}));
writer.writerows(data);
brr.__setslice__(0,null,null,brr.__getslice__(0,null,-1));
ax.set_xlim(0,10);
list2b==sorted(list2b,__kwargtrans__({key:function __lambda__(c){return list1.index(c)}}));
print(sys.argv[1].lower());
A.__getitem__([tuple([0,null,1]),2]);
plt.show();
ctypes.addressof(bufstr);
sys.stdout.write(RESET);
var q=Queue(__kwargtrans__({maxsize:0}));
np.concatenate(function(){var __accu0__=[];for(var i of np.unique(a))__accu0__.append(a[a==i].__getslice__(0,2,1));return __accu0__}());
root.mainloop();
unittest.TextTestRunner().run(suite);
nodebox.__version__;
(function(){var __accu0__=[];for(var [x,y]of l)__accu0__.append(x+y);return __accu0__})();
urllib.parse.quote(item.url);
var new_dict=dict(function(){var __accu0__=[];for(var [k,v]of list(old_dict.py_items()))if(__in__(v,allowed_values))__accu0__.append(tuple([k,v]));return py_iter(__accu0__)}());
ax.yaxis.tick_left();
func(that,session,...args,__kwargtrans__(kwargs));
reactor.run();
sum(function(){var __accu0__=[];for(var c of yourstring.upper())__accu0__.append(letterGoodness.py_get(c,0));return py_iter(__accu0__)}());
export var all_ingredients=Ingredient.objects.filter(__kwargtrans__({recipe__book:my_book}));
export var lock=threading.Lock();
export var canvas_obj=self.canvas.create_image(250,250,__kwargtrans__({image:tkimage}));
self.button.grid(__kwargtrans__({row:2,column:2,sticky:W}));
cs.collections[0].get_paths();
np.any(a==2,__kwargtrans__({axis:0}))&np.any(a==5,__kwargtrans__({axis:0}));
var __left0__=pd.qcut(a,2,__kwargtrans__({retbins:true}));var q=__left0__[0];export var bins=__left0__[1];
f.pack_propagate(0);
export var Matrix=function(){var __accu0__=[];for(var y=0;y<h;y++)__accu0__.append(function(){var __accu1__=[];for(var x=0;x<w;x++)__accu1__.append(0);return __accu1__}());return __accu0__}();
n*factorial(n-1);
(function(){var __accu0__=[];for(var [k,v]of list(metadata.py_items()))if(v)__accu0__.append([k,v]);return dict(__accu0__)})();
self.axes=self.figure.add_subplot(111);
s.groupby(s.notnull().__getslice__(0,null,-1).cumsum().__getslice__(0,null,-1)).transform(function __lambda__(g){return g[-1]/g.size});
var __left0__=list(d.py_items())[0];var k=__left0__[0];var v=__left0__[1];
session.query(JT.aID).filter(not_(JT.bID.in_(ids))).all();
datetime.datetime.today().py_replace(__kwargtrans__({hour:0,minute:0,second:0,microsecond:0}));
plt.show();
arr.sum(__kwargtrans__({axis:0,keepdims:true}));
print(tuple([date_string,dt.date()]));
(function(){var __accu0__=[];for(var l of l_o_l)__accu0__.append(sum(l));return __accu0__})();
np.average(list(map(float,meanNumbers.py_split())));
fig.canvas.draw();
var result=set(d[0]).intersection(...d);
plt.show();
self.after(100,self.periodiccall);
df.fillna(0,__kwargtrans__({inplace:true}));
(function(){var __accu0__=[];for(var x of zip(...a))__accu0__.append(sum(x)/len(x));return __accu0__})();
instance.__class__.__name__;
plt.show();
threading.Thread.__init__(self);
A.shape;
var d=dict(zip(py_keys,py_values));
client.close();
np.repeat(data,data.__getitem__([tuple([0,null,1]),-1]),__kwargtrans__({axis:0}));
export var comport=sys.argv[2];
print(now.year,now.month,now.day,now.hour,now.minute,now.second);
plt.show();
var l=function(){var __accu0__=[];for(var x of l)__accu0__.append(2*x);return __accu0__}();
export var all_data=np.concatenate(tuple([my_data,new_col]),1);
outfile.write(line);
connection.commit();
var line=ser.readline();
self.setLayout(self.layout);
plt.tight_layout();
ax.set_xlim(0,1);
len(your_list)!=len(set(your_list));
ax2.set_zorder(-1);
var foo=function(){var __accu0__=[];for(var _=0;_<n;_++)__accu0__.append(dict({}));return __accu0__}();
list(s);
dict(function(){var __accu0__=[];for(var [k,itr]of grob)__accu0__.append(tuple([k,function(){var __accu1__=[];for(var v of itr)__accu1__.append(v[1]);return __accu1__}()]));return py_iter(__accu0__)}());
(function __lambda__(x){return np.dot(A,x)-b});
getattr(foo,bar)(...params,__kwargtrans__(keyword_params));
Html_file.close();
a>1&a<5;
f(...args,__kwargtrans__(kwargs));
ax1.set_xlim(-4,4);
list(accumu([4,6,12]));
plt.show();
np.multiply(a,b.__getitem__([tuple([0,null,1]),np.newaxis]));
app.run(__kwargtrans__({debug:true}));
dev.leds();
var df=pd.concat(list_of_dataframes);
var y=function(){var __accu0__=[];for(var val of x)__accu0__.append(int(val));return __accu0__}();
plt.plot(x,y);
np.where(np.any(a==2,__kwargtrans__({axis:0}))&np.any(a==5,__kwargtrans__({axis:0})));
var my_list=list(range(1,1001));
export var new_list_of_lists=map(list,map(intify,list_of_lists));
sorted(L,__kwargtrans__({key:operator.itemgetter(1)}));
threading.Timer(2,interrupt).start();
list(itertools.chain(...lst));
__mod__(np.arange(py_new[0]),old[0]);
app.run();
driver.quit();
print(len(path)-1);
print(b[0]);
[tuple([2,5]),tuple([12,17])];
print(df.loc[i].reset_index());
var B=np.reshape(A,tuple([-1,ncols]));
export var ip=self.request.remote_addr;
writer.writerows(a);
var df=df.drop_duplicates();
mylist.insert(0,mylist.py_pop(5));
var f=function __lambda__(x){return x*2};
f.close();
ax.plot(x,y);
plt.show();
answer.extend(map(str,list(range(int(start),int(end)+1))));
make_adder(5);
pyplot.show();
list(filter(func,data));
plt.show();
var df=pd.DataFrame(data);
(function(){var __accu0__=[];for(var k of set(d1).intersection(l1))__accu0__.append([k,d1[k]]);return dict(__accu0__)})();
nx.topological_sort(G);
var x=x.py_split();
sys.stdout.close();
export var idx=np.where(xvalues==xvalues[-2]);
f.close();
(function(){var __accu0__=[];for(var x of L)for(var y of L)__accu0__.append(tuple([x,y]));return __accu0__})();
export var contents=f.readlines();
var c=random.choice(a);
var d=datetime.today()-timedelta(__kwargtrans__({days:days_to_subtract}));
L.py_sort();
time.sleep(60);
driver.quit();
plt.show();
print(ZipFile(path).namelist());
assertTrue(__in__(text,self.driver.page_source));
np.in1d(a.__getitem__([tuple([0,null,1]),2]),list(b));
df.loc[mask];
(function(){var __accu0__=[];for(var [k,v]of list(d1.py_items()))if(__in__(k,l1))__accu0__.append([k,v]);return dict(__accu0__)})();
help(bar);
setattr(self,key,kwargs[key]);
L.__setslice__(i,i+2,null,py_reversed(L.__getslice__(i,i+2,1)));
user.save();
pylab.text(max_x,max_y,str(tuple([max_x,max_y])));
export var df_with_no_strings=df[~rows_with_strings];
deletefoo.fields[-1];
var df=pd.read_csv(filename,__kwargtrans__({error_bad_lines:false}));
results.py_setdefault(i,[]).append(benchmark(i));
pivoted.cumsum();
plt.show();
list(function(){var __accu0__=[];for(var n=0;n<10;n++)__accu0__.append(str(n));return py_iter(__accu0__)}());
var pool=mp.Pool(__kwargtrans__({processes:1}));
A[B==1].sum();
print(s.__getslice__(1,null,1));
br.set_handle_referer(true);
plt.show();
var l=function(){var __accu0__=[];for(var x=1;x<100;x++)__accu0__.append(dict(zip([1],[x])));return __accu0__}();
cv2.destroyAllWindows();
sys.exit(app.exec_());
pkl_file.close();
list(gen_items());
any(map(function __lambda__(v){return __in__(v,list2)},list1));
print(some_object.__repr__());
np.where(A>2&A<8);
print(et.tostring(tree));
HttpResponse(json.dumps(data));
sys.exit(0);
app.debug=true;
s.getvalue();
ax.set_yticks(ax.get_yticks().__getslice__(0,-1,1));
pool.terminate();
var __left0__=func();var a=__left0__[0];var b=__left0__[1];var c=__left0__[2];
[tuple([1,2])];
numpy.logical_not(array);
json.dumps(dict(__kwargtrans__({foo:42})));
print(sorted(function(){var __accu0__=[];for(var e of a)for(var c of e)__accu0__.append(Card(c[0],c[1]));return __accu0__}()));
print(json.dumps(data,__kwargtrans__({indent:4})));
myf.close();
plt.scatter(x,y,__kwargtrans__({color:py_next(colors)}));
root.mainloop();
len(s)-len(s.lstrip());
map(s.__setitem__,a,m);
plt.show();
f([1,1,2],[1,1]);
cls.dosomethingelse();
ax.set_ylim(ylim);
__mod__(WSGIApplicationGroup,new set([GLOBAL]));
yourmodule.py;
export var info=json.loads(json.loads(get_info()));
plt.show();
unittest.main();
fig.subplots_adjust(__kwargtrans__({hspace:.5}));
output.write(new_line);
var a=numpy.array(b);
painter.restore();
__all__;
driver.switch_to_window(window_after);
f.close();
ax2.set_rlim([0,1]);
ax.xaxis.set_major_formatter(formatter);
export var st=st.__getslice__(0,-1,1);
var total=sum(function(){var __accu0__=[];for(var [py_name,v]of table)__accu0__.append(int(v));return py_iter(__accu0__)}());
plt.show();
sys.exit(0);
np.hstack(np.meshgrid(...L)).swapaxes(0,1).reshape(ndims,-1).T;
(function(){var __accu0__=[];for(var group of zip(...function(){var __accu1__=[];for(var x=0;x<size;x++)__accu1__.append(data.__getslice__(x,null,size));return py_iter(__accu1__)}()))__accu0__.append(sum(group)/size);return __accu0__})();
print(os.lseek(fd,0,os.SEEK_CUR));
plt.show();
list(product([a,b,c,d],[x]));
a.sum(1)/(a!=0).sum(1);
webdriver.Firefox(__kwargtrans__({firefox_profile:fp}));
sum(function(){var __accu0__=[];for(var x of l)if(x)__accu0__.append(1);return py_iter(__accu0__)}());
plt.show();
print(chr(4));
sys.stdout.flush();
pd.concat([data,ts]).sort_index().interpolate()[ts.index];
math.sqrt(x);
(function __lambda__(x,y){return tuple([x+y,x-y])});
json.dump(data,fp,__kwargtrans__({sort_keys:true,indent:4}));
ax.xaxis.set_minor_locator(mdates.MonthLocator());
print(tuple([lbl.winfo_width(),lbl.winfo_height()]));
a[np.mod(np.arange(a.size),4)!=0];

np.where(np.isclose(a,val,tol));
ax.plot(x,y);
do_stuff();
root.mainloop();
print(p.communicate(answer)[0]);
session.commit();
widget.show();
plt.show();
(function(){var __accu0__=[];for(var p of process_list)if(all(function(){var __accu1__=[];for(var e of exclude_list)__accu1__.append(!__in__(e,p));return py_iter(__accu1__)}()))__accu0__.append(p);return __accu0__})();
export var bad=function(){var __accu0__=[];for(var x of mylist)if(!__in__(x,goodvals))__accu0__.append(x);return __accu0__}();
plt.show();
num_list.__getslice__(-9,null,1);
map(f,my_list);
plt.tight_layout();
self.redirect(newurl);
np.vstack(function(){var __accu0__=[];for(var u of set(function(){var __accu1__=[];for(var p of points)__accu1__.append(tuple(p));return __accu1__}()))__accu0__.append(np.array(u));return __accu0__}());
var d=dict(function(){var __accu0__=[];for(var [k,v]of list(d.py_items()))__accu0__.append(tuple([m.py_get(k,k),v]));return py_iter(__accu0__)}());
(function(){var __accu0__=[];for(var i of sequence_list)__accu0__.append(rex.py_split(i));return __accu0__})();
D.__getitem__([idx,tuple([0,null,1])]);
db.session.commit();
hash(repr(d));
unittest.main();
(function(){var __accu0__=[];for(var d of data)__accu0__.append([d[0],d.__getslice__(1,null,1)]);return dict(__accu0__)})();
np.delete(a,list(range(0,a.shape[0],8)),__kwargtrans__({axis:0}));
list(py_reversed(sorted(a.py_keys())));
dict(function(){var __accu0__=[];for(var v of l)__accu0__.append(tuple([v,Math.pow(v,2)]));return py_iter(__accu0__)}());
export var age_list=function(){var __accu0__=[];for(var a of ages_iterator)__accu0__.append(int(a[0]));return __accu0__}();
export var potion_names=function(){var __accu0__=[];for(var p of list_of_potions)__accu0__.append(p.py_name);return __accu0__}();
ax.xaxis.set_minor_locator(minor_locator);
print(today.py_replace(__kwargtrans__({year:today.year+1})));
pd.concat([s,pd.rolling_mean(s,__kwargtrans__({window:4,min_periods:1}))],__kwargtrans__({axis:1}));
self.button[i].grid(__kwargtrans__({sticky:W+E+N+S,row:row,column:col,padx:1,pady:1}));
time.sleep(5);
np.tensordot(a,b,__kwargtrans__({axes:1}));
(df-.2).round();
print(etree.tostring(root));
plt.show();
var im=Image.open(f);
df.mask(np.random.choice([true,false],__kwargtrans__({size:df.shape,p:[.2,.8]})));
(function(){var __accu0__=[];for(var x of l1)if(__in__(tuple(x),intersection))__accu0__.append(x);return __accu0__})();
var __left0__=tuple([5,8]);var a=__left0__[0];var b=__left0__[1];
subprocess.Popen(cmd,__kwargtrans__({shell:true,stdout:f,stderr:f}));
ct.reindex_axis(a_x_b,__kwargtrans__({axis:1})).fillna(0);
print(a[1][1]);
sum(function(){var __accu0__=[];for(var i of l)if(isinstance(i,list))__accu0__.append(1+count(i));return py_iter(__accu0__)}());
print(func(...args));
np.random.shuffle(dataset);
map(dict,list(dict(sorted(map(sorted,map(dict.py_items,s)))).py_items()));
plt.show();
df.fillna(df.mean());
app.run(__kwargtrans__({threaded:true}));
a.py_split();
plt.show();
sys.exit(1);
print(m.group());
max(function(){var __accu0__=[];for(var [index,value]of data)if(value==max_value)__accu0__.append(index);return py_iter(__accu0__)}());
mylist.py_sort(__kwargtrans__({key:function __lambda__(val){return SORT_ORDER[val[1]]}}));
row.append(row[0]);
(function(){var __accu0__=[];for(var py_name of names)if(any(function(){var __accu1__=[];for(var p of pattern)__accu1__.append(__in__(p,py_name));return __accu1__}()))__accu0__.append(py_name);return __accu0__})();
var count=np.all(listScore==np.array([2,0]),__kwargtrans__({axis:1})).sum();
plt.show();
list(filter(func,data));
var arr=np.arange(10).reshape(5,2);
random.shuffle(data);
plt.show();
f.seek(0);
max(s,__kwargtrans__({key:function __lambda__(x){return x.arity()}}));
writer.writerow(row+[row[0]]);
var x=np.fromfile(f,__kwargtrans__({dtype:np.int}));
sys.stdout=old_stdout;
pd.to_timedelta(df);
sys.exit(1);
np.all(a==b);
a.take(np.arange(1,2),__kwargtrans__({axis:1}));
f.close();
dict(function(){var __accu0__=[];for(var x of set(a)|set(b))__accu0__.append(tuple([x,a.py_get(x,0)+b.py_get(x,0)]));return py_iter(__accu0__)}());
base64.urlsafe_b64decode(uenc);
my_func.__doc__;
export var WD=os.path.dirname(os.path.realpath(sys.argv[0]));
export var DELTAFETCH_ENABLED=true;
b.widget().deleteLater();
dis.dis(withlocals);
np.isclose(a,b);
var cleaned_list=function(){var __accu0__=[];for(var _f of some_list)if(_f)__accu0__.append(_f);return __accu0__}();
var __left0__=axes.get_ylim();export var ymin=__left0__[0];export var ymax=__left0__[1];
self.matches=function(){var __accu0__=[];for(var s of self.options)if(__in__(text,s))__accu0__.append(s);return __accu0__}();
pylab.show();
var lst=function(){var __accu0__=[];for(var x of lst)__accu0__.append(float(x));return __accu0__}();
(function(){var __accu0__=[];for(var g of itertools.groupby(enumerate(l),function __lambda__(i_x){return i_x[0]-i_x[1]}))__accu0__.append(tuple(g[1]));return __accu0__})();
wr.writerows(RESULTS);
ax.set_ylim([-10,10]);
np.hstack(tuple([test,test.__getitem__([tuple([0,null,1]),[0]])]));
export var sps_data=sps_data[np.argsort(label_idx)];
cursor.execute(sql,args);
var result=list(function(){var __accu0__=[];for(var _f of orig)if(_f)__accu0__.append(_f);return __accu0__}());
self.root.after(1,self.openfile);
functools.partial(self,obj);
matrix[0].py_pop();
foo();
export var sorted_docs_info=collections.OrderedDict(sorted(docs_info.py_items()));
plt.show();
file.close();
deleteL.__getslice__(0,null,1);
py_next(g);
(function(){var __accu0__=[];for(var [a,b]of zip(A,B))__accu0__.append(a+b);return __accu0__})();
time.sleep(.1);
time.sleep(interval);
time.sleep(1);
var buckets=function(){var __accu0__=[];for(var row=0;row<10;row++)__accu0__.append(function(){var __accu1__=[];for(var col=0;col<5;col++)__accu1__.append(0);return __accu1__}());return __accu0__}();
load_source(module_name,path_to_file);
tuple([1,0,0,1,0,0,1,0,0]);
set(map(frozenset,lst));
print(list(csv.reader(f)));
var __left0__=tuple([-dy,dx]);export var dx=__left0__[0];export var dy=__left0__[1];
bin(8);
plt.show();
g0.plot();
a.__setslice__(0,1E3,null,[0]*1E3);
py_items.py_sort();
s1.combine_first(s2);
var __left0__=tuple([A[tuple(rc2)],A[tuple(rc1)]]);A[tuple(rc1)]=__left0__[0];A[tuple(rc2)]=__left0__[1];
plt.legend();
(function(){var __accu0__=[];for(var [_,g]of groupby(bool_array))__accu0__.append(list(g));return __accu0__})();
var df=df.divide(df.sum(__kwargtrans__({axis:1})),__kwargtrans__({axis:0}));
sys.stdout.flush();
(function(){var __accu0__=[];for(var word of l)if(word.isalpha())__accu0__.append(word);return __accu0__})();
np.array(function(){var __accu0__=[];for(var array of arrays)__accu0__.append(np.where(np.in1d(array,matched))[0]);return __accu0__}());
print(len(set(map(len,my_lists)))<=1);
sys.stdout.flush();
dict(d);
process.close();
var list=function(){var __accu0__=[];for(var i=0;i<len(a);i++)__accu0__.append(str(a[i])+str(b[i]));return __accu0__}();
export var longest=len(s1)>len(s2)?s1:s2;
deleted[max(d,__kwargtrans__({key:d.py_get}))];
ax.margins(.1,.1);
(function(){var __accu0__=[];for(var [i,[l1,l2]]of enumerate(zip(list1,list2)))if(l1>=1&&l2==0)__accu0__.append(i);return __accu0__})();
db.session.commit();
plt.show();
(function(){var __accu0__=[];for(var [k,g]of groupby(sorted(l,__kwargtrans__({key:len})),len))__accu0__.append([k,list(g)]);return dict(__accu0__)})();
x[np.isnan(x)]=0;
fig.subplots_adjust(__kwargtrans__({wspace:0}));
ax2.set_xticklabels([]);
df.drop_duplicates();
a.__getitem__([[[0]*5,[1]*5],index]);
button.click();
export var smile=[[255],[129],[165],[129],[165],[189],[129],[255]];
ax.set_ylim(tuple([valmin,valmax]));
np.delete(a,[2,4,5]);
im.show();
cv.CvtColor(img,gray,cv.CV_BGR2GRAY);
x.__setslice__(2,6,null,[]);
var driver=webdriver.Chrome(__kwargtrans__({chrome_options:chromeOptions}));
sys.exit(main(sys.argv));
self.assertEqual(json.loads(call_args[0]),expected);
plt.show();
a[numpy.nonzero(numpy.in1d(a,b))];
export var int_list=function(){var __accu0__=[];for(var i of line)__accu0__.append(int(i));return __accu0__}();
export var the_sum=sum(function(){var __accu0__=[];for(var k of py_keys)__accu0__.append(a[k]*b[k]);return py_iter(__accu0__)}());
pickle.dumps(data,0);
self.Bind(wx.EVT_LEFT_DOWN,self.OnLeftDown);
exit(0);
any(function(){var __accu0__=[];for(var c of string_2)__accu0__.append(c.isalpha());return py_iter(__accu0__)}());
sum(map(int,zip(...table)[-1]));
self.legend.figure.canvas.draw();
(function(){var __accu0__=[];for(var _=0;_<2;_++)__accu0__.append([]);return __accu0__})();
(function(){var __accu0__=[];for(var k of set(mylist))__accu0__.append([k,mylist.count(k)]);return dict(__accu0__)})();
sum(function(){var __accu0__=[];for(var val of l1)if(isinstance(val,numbers.Number))__accu0__.append(val);return py_iter(__accu0__)}());
sum(counter_list,Counter());
plt.show();
x.astype(int);
sys.executable;
sys.stdout.flush();
con.commit();
logging.Handler.__init__(self);
export var tom=[a,b,c];
pdb.set_trace();
ax.xaxis.set_major_locator(ScaledLocator(__kwargtrans__({dx:6})));
var result=sum(timedeltas,datetime.timedelta());
ts.__getslice__(datetime(2011,1,8),null,1)[0];
(CENTROIDS-x.mean())/x.std();
cv.CvtColor(cv_img,cv_img,cv.CV_RGB2BGR);
sys.stdout.flush();
print(function(){var __accu0__=[];for(var [a,b]of zip(data.__getslice__(0,null,2),data.__getslice__(1,null,2)))__accu0__.append((a+b)/2);return __accu0__}());
session.commit();
cv2.destroyAllWindows();
(function(){var __accu0__=[];for(var [a,b]of zip(nums,nums.__getslice__(1,null,1)+[!nums[-1]]))if(a!=b)__accu0__.append(a);return __accu0__})();
django.setup();
ax.bar(list(range(len(dates))),py_values);
plt.show();
sys.exit(0);
export var ax2=ax.twinx();
bool(list(someDict.py_keys())&set(someSet));
var dist=math.hypot(x2-x1,y2-y1);
rdd1.cartesian(rdd2);
someclassname.ask();
export var rbs=np.array(function(){var __accu0__=[];for(var ish of realbooks)__accu0__.append(ish[4]);return __accu0__}());
plt.show();
a.py_sort(__kwargtrans__({key:function __lambda__(x){return x[0]}}));
(function(){var __accu0__=[];for(var e of lelist)if(__in__(e,lestring))__accu0__.append(e);return __accu0__})();
pygame.draw.circle(screen,tuple([0,0,0]),tuple([100,100]),15,1);
np.where(np.all(np.all(win_img==pattern,__kwargtrans__({axis:-1})),__kwargtrans__({axis:-1})));
MyModel.objects.filter(__kwargtrans__({pk:instance.id})).py_update(__kwargtrans__(data));
log.setLevel(logging.DEBUG);
var d=dict(zip(function(){var __accu0__=[];for(var o of object_list)__accu0__.append(o.py_name);return __accu0__}(),object_list));
f.read();
time.sleep(10);
subprocess.call(args,__kwargtrans__({stdout:FNULL,stderr:FNULL,shell:false}));
(function(){var __accu0__=[];for(var t of enumerate(l))__accu0__.append(t);return __accu0__})();
plt.xlim(-2*np.pi,2*np.pi);
(function(){var __accu0__=[];for(var c of cond)__accu0__.append(np.ma.array(arr,__kwargtrans__({mask:~c})).argmax());return __accu0__})();
var a=[1,2];
print(cls.__name__);
lst.py_sort();
dict(function(){var __accu0__=[];for(var [k,v]of dictionary.py_items())if(begin<=k&&k<=end)__accu0__.append(tuple([k,v]));return py_iter(__accu0__)}());
FO.close();
print(args);
(function(){var __accu0__=[];for(var y of x)for(var x of data)__accu0__.append(y);return __accu0__})();
var y=function(){var __accu0__=[];for(var x of list(dict.py_keys()))if(dict[x]>0)__accu0__.append(x);return __accu0__}();
print(a[key]);
qs.distinct();
var b=function(){var __accu0__=[];for(var i of a.index)if(sorted1[i]>=sorted2[i])__accu0__.append(a.ix[i]);return __accu0__}();
bids.py_sort(__kwargtrans__({key:int,reverse:true}));
(function(){var __accu0__=[];for(var [k,v]of enumerate(mylist))if(__mod__(k,2)==0)__accu0__.append(v);return __accu0__})();
export var unp=msgpack.unpackb(f.read());
mydict[new_key]=mydict.py_pop(old_key);
setattr(self,key,value);
var a=dict.fromkeys(list(range(n)));
plt.show();
np.in1d(data,np.hstack(test)).reshape(data.shape);
(function(){var __accu0__=[];for(var word of wordslist)__accu0__.append(len(word));return py_iter(__accu0__)})();
self.data+=self.ser.read();
main();
ws.add_image(img);
df.reset_index(__kwargtrans__({level:1,drop:true,inplace:true}));
df.stack()[df.stack().py_values==1].reset_index();
urllib.parse.quote_plus(a);
any(function(){var __accu0__=[];for(var char of s)__accu0__.append(char.isdigit());return py_iter(__accu0__)}());
ax.yaxis.set_ticks([0,2,4,8]);
bttn_0.grid(__kwargtrans__({row:5,column:0,pady:5,columnspan:2}));
var driver=webdriver.Firefox(__kwargtrans__({firefox_profile:profile}));
var d=dict(function(){var __accu0__=[];for(var n=0;n<1E6;n++)__accu0__.append(tuple([str(n),list(range(20))]));return py_iter(__accu0__)}());
df.T.drop_duplicates().T;
pylab.show();
lines.py_sort(__kwargtrans__({key:function __lambda__(x){return int(x.py_split()[0])}}));
[0]+function(){var __accu0__=[];for(var i of[4,9,12,14,18])__accu0__.append(i+1);return __accu0__}()+[len(bool_array)];
datetime.datetime.combine(tdate,datetime.time());
subprocess.call(my_cmd,__kwargtrans__({stdout:outfile}));
var x=np.random.randint(0,20,1E6);
pd.isnull(df).any(1).nonzero()[0];
plt.plot(x,y);
print(pix.__getitem__([x,y]));
app.debug=true;
os.path.abspath(checkIP.__file__);
pprint.pprint(obj);
client.set_option(new_url);
A.__getslice__(0,4,1)[1];
re.sub(pattern,replacement,text);
master.grid_columnconfigure(0,__kwargtrans__({weight:1}));
root.mainloop();
plt.show();
ast.literal_eval(some_string);
a.__getitem__(slice(0,1)).__setitem__(0,5);
bids.append(bid);
os.path.dirname(os.path.dirname(file));
Thread(__kwargtrans__({target:p.start})).start();
list(foo);
os.remove(f);
(function(){var __accu0__=[];for(var [k,v]of list(d.py_items()))__accu0__.append(tuple([m.py_get(k,k),v]));return py_iter(__accu0__)})();
ax.xaxis.set_major_formatter(tkr.FuncFormatter(formatter));
var y=x.subs(dict([[a,b],[b,a]]),__kwargtrans__({simultaneous:true}));
writer.writerow(row);
OrderedDict(function(){var __accu0__=[];for(var k of key_order)__accu0__.append(tuple([k,queue[key]]));return py_iter(__accu0__)}());
my_model.save();
(function(){var __accu0__=[];for(var x of messages)for(var y of x)__accu0__.append(dict([[y,x[y].lower()]]));return __accu0__})();
integer.setParseAction(function __lambda__(t){return int(t[0])});
(function(){var __accu0__=[];for(var x of a_strpadded)__accu0__.append(list(x));return __accu0__})();
print(np.where(a==a.min()));
(function(){var __accu0__=[];for(var item of l)for(var repetitions=0;repetitions<2;repetitions++)__accu0__.append(item);return __accu0__})();
(function(){var __accu0__=[];for(var x of matrix)if(x[2]==1)__accu0__.append(x);return __accu0__})();
(function(){var __accu0__=[];for(var [i,j]of itertools.groupby(A,__kwargtrans__({key:function __lambda__(x){return x.__getslice__(0,7,1)}})))__accu0__.append(min(j));return __accu0__})();
export var RGB_img=cv2.cvtColor(img,cv2.COLOR_BGR2RGB);
urllib.request.urlretrieve(stream_url,target_path);
d.py_update(function(){var __accu0__=[];for(var [k,v]of list(d.py_items()))__accu0__.append(tuple([k,v*.5]));return py_iter(__accu0__)}());
plt.show();
var res=os.system(sys.argv[1],sys.argv[2]);
signal.signal(signal.SIGINT,signal_handler);
self.Bind(wx.EVT_PAINT,self._onPaint);
fcntl.flock(g,fcntl.LOCK_UN);
print(json.dumps(json.loads(json_string)));
(function(){var __accu0__=[];for(var i of sortedIndex)__accu0__.append(listofLines[i]);return __accu0__})();
plt.show();
numpy.zeros(tuple([10,4,100]));
br.set_response(resp);
(function(){var __accu0__=[];for(var item of a)if(!__in__(item,b))__accu0__.append(b.append(item));return __accu0__})();
time.mktime(d.timetuple());
Math.pow(n+1,2)==Math.pow(n,2)+(2*n+1);
sys._getframe().__code__.co_argcount;
gems.add(gem);
dict(zip(py_keys,py_values));
session.close();
sys.exit(app.exec_());
split_str.groupby([0,1])[2].apply(fnc);
sys.stdout.flush();
myfile.write(buffer(c_uncompData_p.raw,0,c_uncompSize));
np.asarray(t);
pd.DataFrame(series_data,__kwargtrans__({columns:series_name}));
plt.show();
sys.getsizeof(x);
myl.__setslice__(0,null,null,function(){var __accu0__=[];for(var x of myl)__accu0__.append(x!=4?x:44);return __accu0__}());
df.mycolumn.map(func);
export var nested_lst_of_tuples=function(){var __accu0__=[];for(var l of nested_lst)__accu0__.append(tuple(l));return __accu0__}();
appcfg.py;
app.MainLoop();
cmap(np.linspace(.2,.8,100));
self._driver.quit();
len(a)-len(a.lstrip());
plt.show();
self.append(x);
sorted(l)==list(range(min(l),max(l)+1));
file_obj.seek(0);
print(get_ip());
plt.show();
grouped.apply(wavg);
var results=cursor.fetchone();
s.lower();
map(ord,s);
app.run(__kwargtrans__({port:0,debug:true}));
plt.show();
a.__getitem__([tuple([0,null,1]),b]);
sorted(L,__kwargtrans__({key:operator.itemgetter(1)}));
len(mylist)-mylist.__getslice__(0,null,-1).index(myvalue)-1;
len(s);
plt.show();
self.grid_columnconfigure(0,__kwargtrans__({weight:1}));
var n=str(input());
map(sum,l)==[n]*len(l);
f.write(content);
mratings.mean(__kwargtrans__({axis:1}));
plt.show();
plt.show();
var fu_list=function(){var __accu0__=[];for(var k of s)__accu0__.append(tuple([k,fus_d.py_get(k),fus_s.py_get(k)]));return __accu0__}();
np.sum(c.__getitem__([tuple([0,null,1]),tuple([1,null,1])])==c.__getitem__([tuple([0,null,1]),tuple([0,-1,1])]),__kwargtrans__({axis:1}));
sum(function(){var __accu0__=[];for(var n of list(index2count.py_values()))__accu0__.append(Math.floor(n*(n-1)/2));return py_iter(__accu0__)}());
tuple([p[0],p[1]]);
MyClass.Property1;
var a=function(){var __accu0__=[];for(var x of input().py_split())__accu0__.append(int(x));return __accu0__}();
export var all_strings=function(){var __accu0__=[];for(var string_list of list(my_dict.py_values()))for(var s of string_list)__accu0__.append(s);return __accu0__}();
export var vsampled=numpy.interp(numpy.arange(t[0],t[-1]),t,v);
export var population=list(itertools.chain(fhd,fhet,fhr));
p.getfitness();
export var worst=sorted(function(){var __accu0__=[];for(var [k,v]of list(d.py_items()))__accu0__.append(Player(v,k));return py_iter(__accu0__)}());
[6,5,1];
json.dumps(list);
f(...args,__kwargtrans__(kwargs));
df_test.iloc[0];
pdb.set_trace();
cv2.drawContours(image,[ctr],0,tuple([255,255,255]),1);
np.random.seed(0);
df.head();
sorted(py_iter(d.py_items()),__kwargtrans__({key:operator.itemgetter(1)}));
list(range(0,100+1,5));
sorted(a,__kwargtrans__({key:function __lambda__(x){return order_dict[x[0]]}}));
plt.show();
plt.draw();
plt.show();
p.terminate();
export var iter_length=len(list(iterable));
root.config(__kwargtrans__({menu:menu}));
np.argwhere(np.isnan(x));

(function(){var __accu0__=[];for(var i=0;i<len(ks);i++)if(i==0||ks[i]!=ks[i-1])__accu0__.append(ks[i]);return __accu0__})();
print(df.applymap(function __lambda__(x){return str(x).isdigit()}).T);
re.findall(p,test_str);
sum(Math.pow(x,2))*(x[1]-x[0]);
json.dump(data,jsonFile);
(function(){var __accu0__=[];for(var x of[2,2])__accu0__.append(x*2);return py_iter(__accu0__)})();
var a=function(){var __accu0__=[];for(var i of sorted(zip(a,ind),__kwargtrans__({key:function __lambda__(x){return x[1]}})))__accu0__.append(i[0]);return __accu0__}();
plt.show();
json.dumps(__kwargtrans__({cls:MyEncoder}));
do_stuff();
print(a.__getitem__([tuple([0,null,1]),0]));
template.render(context);
workbook.close();
arr[np.argsort(arr.__getitem__([tuple([0,null,1]),1]))];
var result=datetime.datetime.now()-datetime.timedelta(__kwargtrans__({seconds:X}));
list.__setitem__(index,value);
test_df.where(test_df>=4);
zip([a,b,c,d],repeat(x));
session.query(RssFeed).py_get(1);
new_list;
export var ivd=function(){var __accu0__=[];for(var [k,v]of list(d.py_items()))__accu0__.append([v,k]);return dict(__accu0__)}();
plt.show();
sorted(set(mylist),__kwargtrans__({key:function __lambda__(x){return mylist.index(x)}}));
random.shuffle(x);
os.system(cmd);
lasts.append(bpos);
df.agg(...function(){var __accu0__=[];for(var c of df.columns)__accu0__.append(count(c).alias(c));return __accu0__}()).show();
array([0,2,1],__kwargtrans__({dtype:int64}));
m.group(1);
logging.getLoggerClass().root.handlers[0].baseFilename;
np.digitize([1.5],a,__kwargtrans__({right:true}))[0];
math.sqrt(Math.pow(p1[0]-p2[0],2)+Math.pow(p1[1]-p2[1],2));
var result=max(py_iter(your_dict.py_items()),__kwargtrans__({key:operator.itemgetter(1)}))[0];
var py_items=sorted(list(ipCount.py_items()),__kwargtrans__({key:function __lambda__(item){return socket.inet_aton(item[0])}}));
myA[(myA>val).nonzero()[0].__getslice__(0,2,1)]=0;
export var intbids=function(){var __accu0__=[];for(var bid of bids)__accu0__.append(int(bid));return __accu0__}();
isinstance(a,Test1);
server.quit();
dict(function(){var __accu0__=[];for(var k of keys_to_select)__accu0__.append(tuple([k,mydict[k]]));return py_iter(__accu0__)}());
(function(){var __accu0__=[];for(var [index,item]of enumerate(range(1,21)))__accu0__.append((__mod__(index,8)+2)*item);return __accu0__})();
df.convert_objects(__kwargtrans__({convert_numeric:true}));
(function __lambda__(a,b){return a(a,b)})(function __lambda__(a,b){return b>0?b*a(a,b-1):1},num);
sys.getsizeof(s);
list(itertools.chain.from_iterable(a));
export var df1=df[df.a!=-1&df.b!=-1];
df;
app.mainloop();
writer.writerows(function(){var __accu0__=[];for(var item of new_text_list)__accu0__.append([item]);return __accu0__}());
list(set(dict_a.py_values()).intersection(list(dict_b.py_values())));
(function(){var __accu0__=[];for(var x of a_list)__accu0__.append(my_tuple[isinstance(x,str)].append(x));return __accu0__})();
(function(){var __accu0__=[];for(var [i,family]of enumerate(families))__accu0__.append(function(){var __accu1__=[];for(var f of family)if(f!=i)__accu1__.append(f);return __accu1__}());return __accu0__})();
print(f());
ax.yaxis.set_major_locator(yloc);
os.path.dirname(str("./P2JSnippets.py",encoding));
export var best=sorted(function(){var __accu0__=[];for(var [k,v]of list(d.py_items()))__accu0__.append(Player(v,k));return __accu0__}(),__kwargtrans__({reverse:true}));
plt.show();
print(p.communicate()[0]);
numpy.dstack(tuple([A,B])).transpose(0,2,1).reshape(A.shape[0]*2,A.shape[1]);
new set([new set([request.META.HTTP_NAME])]);
all(function(){var __accu0__=[];for(var x of mylist)__accu0__.append(x==mylist[0]);return py_iter(__accu0__)}());
ax.xaxis.set_major_locator(ticker.LogLocator(__kwargtrans__({base:1E3})));
Counter(function(){var __accu0__=[];for(var elem of list1)__accu0__.append(elem[0]);return py_iter(__accu0__)}());
time.sleep(1);
var s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);
var slice=arr.__getitem__([tuple([0,2,1]),tuple([0,2,1])]);
a.reshape(-1,m/k,k).swapaxes(0,1).reshape(-1,k);
df.append(row,__kwargtrans__({ignore_index:true}));
var result=sum(some_list.__getslice__(1,null,1));
var res=function(){var __accu0__=[];for(var i=1;i<6;i++)__accu0__.append(i<4?i:0);return __accu0__}();
print(ET.tostring(root));
export var averages=function(){var __accu0__=[];for(var [x,y]of zip(my_list.__getslice__(0,-1,1),my_list.__getslice__(1,null,1)))__accu0__.append((x+y)/2);return __accu0__}();
export var json_object=json.load(raw);
plt.show();
var indices=np.where(np.in1d(x,y))[0];
get_keyring();
print(function(){var __accu0__=[];for(var x of a)if(__in__(x,b))__accu0__.append(x);return __accu0__}());
new_dict.py_setdefault(v,[]).append(k);
export var newList=function(){var __accu0__=[];for(var ch of sent)__accu0__.append([ch,len(ch),ch.upper()]);return __accu0__}();
np.sum(boolarr);
var form=UserForm(__kwargtrans__({user:request.user}));
file.close();
export var ROOT_DIR=os.path.dirname(os.path.abspath("./P2JSnippets.py"));
my_dataframe.columns.py_values.tolist();
(function(){var __accu0__=[];for(var k of seq)if(counts[k]==1)__accu0__.append(k);return __accu0__})();
var result=function(){var __accu0__=[];for(var r of x)if(!any(function(){var __accu1__=[];for(var z of y)__accu1__.append(__in__(z,r));return py_iter(__accu1__)}()))__accu0__.append(r);return __accu0__}();
sock.setsockopt(socket.IPPROTO_IP,socket.IP_ADD_MEMBERSHIP,mreq);
df.applymap(np.isreal).all(1);
self.Bind(wx.EVT_SIZE,self.OnSize);
print(f.readlines());
db.CommitTrans();
list(im.getdata());
plt.show();
(function(){var __accu0__=[];for(var [x,y]of zip(string,string.__getslice__(i,null,1)))__accu0__.append(x+y);return __accu0__})();
np.array(a);
cherrypy.session.regenerate();
var list_of_lists=function(){var __accu0__=[];for(var _ of columns)__accu0__.append([]);return __accu0__}();
print(recursive_dict_eval(my_dict));
plt.tight_layout();
list(conn.execute(query).py_keys());
nf.write(str(random.randint(0,1E3)));
plt.show();
set(itertools.permutations(lst));
pipe.close();
datetime.timedelta(0,540);
t.start();
var f=function __lambda__(x,y){return x[0]+x[1]+(y[0]+y[1])};
var __left0__=zip(...function(){var __accu0__=[];for(var [x,y]of zip(list_1,list_2))if(f(x))__accu0__.append(tuple([x,y]));return py_iter(__accu0__)}());export var list_1=__left0__[0];export var list_2=__left0__[1];
os.path.abspath;
var df=pd.concat(dfs);
ax.set_xticks(xticks);
export var path=os.path.dirname(os.path.realpath("./P2JSnippets.py"));
db.session.commit();
numpy.array(function(){var __accu0__=[];for(var sub_array of counts_array)__accu0__.append(sub_array);return __accu0__}());
mysocket.setsockopt(socket.SOL_SOCKET,socket.SO_REUSEADDR,1);
self.Bind(wx.EVT_CHAR_HOOK,self.onKey);
var t=s.reshape(-1,2);
new set([dict([[news.description|truncatewords,50]])]);
sum(map(sum,input));
plt.show();
list(range(2,2));
list1.py_sort(__kwargtrans__({key:int}));
sys.stdout.flush();
cluster.fit(X);
print(et.tostring(tree,__kwargtrans__({pretty_print:true})));
print(function(){var __accu0__=[];for(var [k,v]of mime_types.py_items())__accu0__.append([k,v]);return dict(__accu0__)}());
fig.tight_layout();
QtWidgets.QMainWindow.__init__(self,parent);
list(filter(os.path.isdir,function(){var __accu0__=[];for(var f of os.listdir(d))__accu0__.append(os.path.join(d,f));return __accu0__}()));
export var date_list=function(){var __accu0__=[];for(var x=0;x<numdays;x++)__accu0__.append(base-datetime.timedelta(__kwargtrans__({days:x})));return __accu0__}();
print(np.array(list(mystr)));
conn.close();
print(json.dumps(info));
print(list(range(n,(m+1)*n,n)));
set(mylist);
plt.colorbar();
pyplot.show();
print(is_cardano_triplet(2,1,5));
btn.grid(__kwargtrans__({column:x,row:y,sticky:N+S+E+W}));
export var raw_img_data=img.tostring();
a.__class__.print_x(b);
model.fit(X,y);
keep.py_update(yoursequenceofvalues);
df.groupby(function __lambda__(x){return x},__kwargtrans__({axis:1})).sum();
ax.xaxis.set_major_formatter(mdates.AutoDateFormatter(locator));
image.save(image_out_path);
main();
var res=pd.DataFrame(json.loads(out));
var l=list(gen_items());
mymodel.objects.py_get(__kwargtrans__({pk:a[i]}));
(function(){var __accu0__=[];for(var t of tuple([true,true,false]))__accu0__.append(int(t));return __accu0__})();
config.write(configfile);
frame.pack();
logger.setLevel(logging.DEBUG);
df[df.columns[2]];
export var documents=function(){var __accu0__=[];for(var sub_list of documents)__accu0__.append(sub_list[0]);return __accu0__}();
sorted(x)==sorted(y);
plt.show();
logging.getLogger().addHandler(logging.StreamHandler());
time.sleep(1);
var data=function(){var __accu0__=[];for(var i=0;i<rows;i++)__accu0__.append([0]*cols);return __accu0__}();
s.start();
urllib.request.urlopen(req);
frw.close();
plt.show();
pool.apply_async(test,tuple([t]),dict(__kwargtrans__({arg2:5})));
profile.save();
np.logical_or(np.logical_or(x,y),z);
var df=df.astype(str);
var good_data=data.__getitem__([tuple([0,null,1]),data[0]==1]);
(function(){var __accu0__=[];for(var item of set(x))__accu0__.append(x.count(item));return py_iter(__accu0__)})();
(function(){var __accu0__=[];for(var _f of lis)if(_f)__accu0__.append(_f);return __accu0__})();
var df=pd.read_sql(query.statement,query.session.bind);
w.pack();
con.commit();
export var subList=function(){var __accu0__=[];for(var n of range(0,len(theList),N))__accu0__.append(theList.__getslice__(n,n+N,1));return __accu0__}();
root.mainloop();
export var result_dict=function(){var __accu0__=[];for(var u of my_query.all())__accu0__.append(u.__dict__);return __accu0__}();
list(OrderedDict.fromkeys(my_list));
arr[np.isnan(arr).cumsum(1)>0]=np.nan;
var y=numpy.r_.__getitem__([0,x.__getslice__(0,-1,1)]);
(function(){var __accu0__=[];for(var item of full_list)if(all(function(){var __accu1__=[];for(var x of item)__accu1__.append(!__in__(x,omit));return py_iter(__accu1__)}()))__accu0__.append(item);return __accu0__})();
var df=df[df.line_race.notnull()];
self.thread.start();
time.sleep(1);
isinstance(s,str);
img.__getitem__([,tuple([0,null,-1])]);
app.mainloop();
(x*sin(y)).subs([tuple([x,y]),tuple([y,x])],__kwargtrans__({simultaneous:true}));
df.append(duplicates).sort_index();
set(second_list).difference(map(f,first_list));
df.drop(remove,__kwargtrans__({axis:1,inplace:true}));
f.apply(clean,__kwargtrans__({axis:1}));
max(function(){var __accu0__=[];for(var [i,v]of enumerate(a))__accu0__.append(tuple([v,i]));return py_iter(__accu0__)}())[1];
var __left0__=tuple([a,b]);self.a=__left0__[0];self.b=__left0__[1];
self.grid_columnconfigure(1,__kwargtrans__({weight:1}));
conn.commit();
print(datetime.now());
Math.pow(np.sum(Math.pow(np.abs(x),2),__kwargtrans__({axis:-1})),1/2);
pylab.show();
logging.getLogger().addHandler(handler);
cnxn.commit();
datetime.date(2015,8,9).isocalendar()[1];
br.set_handle_equiv(true);
combs.extend(els);
export var DateR=re.compile(Date);
ax.set_ylim(0,1);
datetime.datetime.now()-datetime.timedelta(__kwargtrans__({minutes:15}));
export var my_randoms=random.sample(range(1,101),10);
np.random.uniform(-10,10,__kwargtrans__({size:tuple([1,5,1])}));
dict(function(){var __accu0__=[];for(var key of py_keys)__accu0__.append(tuple([key,getattr(self,key)]));return py_iter(__accu0__)}());
export var new_list_of_dict=function(){var __accu0__=[];for(var d of list_of_dict)__accu0__.append(new_dict(d));return __accu0__}();
var df=pd.concat(function(){var __accu0__=[];for(var q of queries)__accu0__.append(pd.read_sql_query(q,connection));return __accu0__}());
np.array(function(){var __accu0__=[];for(var x of set(function(){var __accu1__=[];for(var x of A)__accu1__.append(tuple(x));return py_iter(__accu1__)}())&set(function(){var __accu1__=[];for(var x of B)__accu1__.append(tuple(x));return py_iter(__accu1__)}()))__accu0__.append(x);return __accu0__}());
new set([new set([d.content])]);
np.array([[0],[1]]);
bytearray(100);
tuple([[0,1,0,1,0,1,0,1,0,1]]);
conn.commit();
var results=function(){var __accu0__=[];for(var match of matches)__accu0__.append(int(match.group(1)));return __accu0__}();
root.mainloop();
os.uname()[1];
f.write(etree.tostring(root,__kwargtrans__({pretty_print:true})));
(function(){var __accu0__=[];for(var [i,val]of enumerate(py_values))if(!__in__(i,indices))__accu0__.append(val);return __accu0__})();
(function(){var __accu0__=[];for(var i of range(0,len(some_string),2))__accu0__.append(some_string.__getslice__(i,i+2,1));return __accu0__})();
termios.tcsetattr(sys.stdin,termios.TCSADRAIN,old_settings);
ds.to_netcdf(new_file);
cython.uchar;
plt.show();
zf.close();
a.__getitem__([tuple([0,null,1]),tuple([0,null,1]),[5]]).shape;
tuple(function(){var __accu0__=[];for(var sublist of base_lists)for(var x of sublist)__accu0__.append(x);return py_iter(__accu0__)}());
expense.save();
urllib.parse.unquote(url);
pygame.display.flip();
plt.show();
conn.commit();
pd.DataFrame([data]);
admin.site.register(User,UserProfileAdmin);
list(groupings.py_values());
np.argmin(df.applymap(np.isreal).all(1));
list(flatten(a));
df.max()>0;
plt.show();
print(et.tostring(tree,__kwargtrans__({pretty_print:true})));
max(array.flatten());
df.append([df_try]*5,__kwargtrans__({ignore_index:true}));
var result=function(){var __accu0__=[];for(var [k,g]of groupby(lst,bool))for(var i of k?tuple([sum(g)]):g)__accu0__.append(i);return __accu0__}();
plt.show();
my_process.kill();
print(linalg.solve(A,x));
(function(){var __accu0__=[];for(var i of range(0,len(s),2))__accu0__.append(s.__getslice__(i,i+2,1));return __accu0__})();
var data=request.stream.read();
sum(delta_list,timedelta())/len(delta_list);
var data=function(){var __accu0__=[];for(var row of incsv)__accu0__.append(float(row[1]));return py_iter(__accu0__)}();
[1,2,1,1,2,1,2,2,1,2];
time.sleep(.001);
db.session.commit();
var __left0__=min(function(){var __accu0__=[];for(var [idx,val]of enumerate(my_list))__accu0__.append(tuple([val,idx]));return py_iter(__accu0__)}());export var val=__left0__[0];var idx=__left0__[1];
sys.exit(app.exec_());
ax2.yaxis.set_major_locator(matplotlib.ticker.LinearLocator(nticks));
plt.show();
sys.stdout.write(line);
time.sleep(.1);
print(new_func.__name__);
plt.show();
(function __lambda__(x,i){if(typeof i=="undefined"||i!=null&&i.hasOwnProperty("__kwargtrans__"))var i=i;return __mod__(x,i)==0});
var obj=result.json();
root.mainloop();
exit();
self.view.setModel(model);
conn.commit();
np.dot(a,b);
print(json.loads(json_string));
a.__getitem__([np.arange(a.shape[0]).__getitem__([tuple([0,null,1]),np.newaxis]),i]);
pyplot.plot([point[0],point2[0]],[point[1],point2[1]]);
MyApp().run();
var c=b.__getslice__(1,null,1);
var pool=multiprocessing.Pool(2);
ax1.set_yticklabels([]);
subprocess.call(cmd);
set(pd.DataFrame(df.genres.tolist()).stack().tolist());
array([0,7,1,0,4,0,0,0,0,1,0,0,0]);
np.ravel_multi_index(X.T,dims);
(function(){var __accu0__=[];for(var t of zip(...lists))for(var x of t)__accu0__.append(x);return __accu0__})();
print(np.py_sort(np.partition(y,-10,__kwargtrans__({axis:1})).__getitem__([tuple([0,null,1]),tuple([-10,null,1])]),__kwargtrans__({axis:1})));
df.index.get_loc(ds);
(function(){var __accu0__=[];for(var tag of tags)for(var entry of entries)if(__in__(tag,entry))__accu0__.append(entry);return __accu0__})();
outputfile.close();
pd.concat([s1,s2],__kwargtrans__({axis:1}));
cipher.decrypt(base64.b64decode(text));
len(set(map(len,tuple([a,b,c]))))==1;
list(bin(6).__getslice__(2,null,1));
self.Bind(wx.EVT_ENTER_WINDOW,self._onMouseEnter);
sorted(top_n,__kwargtrans__({key:function __lambda__(t){return tuple([-t[1],t[0]])}}));
setattr(self,key,initial_data[key]);
b.__class__.__class__;
var soup=BeautifulSoup.BeautifulSoup(html_string);
(function(){var __accu0__=[];for(var item of l)for(var _=0;_<r;_++)__accu0__.append(item);return __accu0__})();
yaml.dump(dataMap,f,__kwargtrans__({default_flow_style:false}));
var rdd=df.rdd.map(list);
d+=dt.timedelta(__kwargtrans__({days:1}));
root.destroy();
tuple([[1,0,1,0,1,0,1,0,1,0]]);
ax6.set_yticks(np.linspace(0,1,7));
export var request=urllib.request.Request(url);
print(df.to_html());
export var permissions=Permission.objects.filter(__kwargtrans__({user:user}));
(function(){var __accu0__=[];for(var n of list1)__accu0__.append(n-9*int((n-1)/9));return __accu0__})();
requests.post(url,__kwargtrans__({params:params,data:json.dumps(data),headers:headers}));
var c=dict(a,__kwargtrans__(b));
array([[[4,5],[12,14],[24,27]],[[0,0],[6,7],[-8,-9]]]);
plt.show();
df[df.a>0&df.index.isin([0,2,4])];
f.close();
plt.show();
py_sort(data,__kwargtrans__({key:datekey,reverse:true}));
time.sleep(1);
profile.save();
plt.show();
sys.stdout=self._stdout;
session.commit();
var c=function(){var __accu0__=[];for(var x of A)__accu0__.append(x[0]);return __accu0__}();
json.dumps(o);
sorted(unsorted_list,__kwargtrans__({key:order.__getitem__}));
self.lc.Bind(wx.EVT_LIST_BEGIN_DRAG,self.onDrag);
(function(){var __accu0__=[];for(var x=0;x<len(A);x++)__accu0__.append(tuple([A[x],B[__mod__(x,len(B))]]));return __accu0__})();
var value=list(d.py_values())[index];
plt.show();
pattern.match(string);
g.add_nodes_from(l);
np.log(df/df.shift());
br.set_cookiejar(cj);
plt.show();
export var files=sorted(function(){var __accu0__=[];for(var f of files)if(firstFile<=int(f)&&int(f)<lastFile)__accu0__.append(f);return py_iter(__accu0__)}(),__kwargtrans__({key:int}));
time.sleep(2);
l.__getslice__(len(l),-len(l)-1,-1);
sum(function(){var __accu0__=[];for(var _ of iterable)__accu0__.append(1);return py_iter(__accu0__)}());
var df=pd.DataFrame(list_of_series,__kwargtrans__({columns:cols}));
var d=function(){var __accu0__=[];for(var k=0;k<n;k++)__accu0__.append([k,function __lambda__(s,k){if(typeof k=="undefined"||k!=null&&k.hasOwnProperty("__kwargtrans__"))var k=k;return s*A[k]}]);return dict(__accu0__)}();
ax1.set_xlim([0,5]);
signchange[0]=0;
(function(){var __accu0__=[];for(var p of PlayerList)__accu0__.append(tuple([p[0],sum(p.__getslice__(1,null,1))/2]));return __accu0__})();
plt.show();
set(a).intersection(b);
export var summary_dict=function(){var __accu0__=[];for(var c of py_new.columns.__getslice__(1,null,1))__accu0__.append([c,[]]);return dict(__accu0__)}();
df.merge(s.to_frame(),__kwargtrans__({left_index:true,right_index:true}));
(function(){var __accu0__=[];for(var sublist of mylist)__accu0__.append(function(){var __accu1__=[];for(var i of sublist)if(counts[i]==1)__accu1__.append(i);return __accu1__}());return __accu0__})();
np.matmul(a,b);
var buckets=[[0]*100]*100;
ax.set_ylim(-5,5);
py_next(function(){var __accu0__=[];for(var a of s)if(s.count(a)==1)__accu0__.append(a);return py_iter(__accu0__)}());
bigList.py_sort(__kwargtrans__({key:operator.itemgetter(...args)}));
print(sum(function(){var __accu0__=[];for(var elem of list1)if(elem[0]==entry[0])__accu0__.append(1);return py_iter(__accu0__)}()));
map(tuple,map(flatten,zip(a,b,c)));
print(etree.tostring(root,__kwargtrans__({pretty_print:true})));
finder.score_ngrams(bigram_measures.pmi);
print(np.nanmean(arr,__kwargtrans__({axis:0})));
var ivd=dict(function(){var __accu0__=[];for(var [k,v]of list(d.py_items()))__accu0__.append(tuple([v,k]));return py_iter(__accu0__)}());
a.__getitem__([np.arange(np.shape(a)[0]).__getitem__([tuple([0,null,1]),np.newaxis]),np.argsort(a)]);
var py_keys=set(l1).intersection(d1);
var df=pd.concat([df,dummy_df],__kwargtrans__({axis:1}));
doc.toxml();
isinstance(fn,collections.Callable);
df.reindex(prev_dates.union(df.index));
foo.save();
len(words);
MainWindow.show();
map(centroids.__delitem__,sorted(index,__kwargtrans__({reverse:true})));
var a=[0,1];
testDf.iloc.__getitem__([tuple([0,null,1]),tuple([1,null,1])]).stack().groupby(__kwargtrans__({level:0})).nunique();
np.where(np.all(a==b,__kwargtrans__({axis:1})));
var s=set(lst);
plt.show();
print(function(){var __accu0__=[];for(var [item,count]of list(collections.Counter(a).py_items()))if(count>1)__accu0__.append(item);return __accu0__}());
outfile.writelines(lines);
var iqr=np.subtract(...np.percentile(x,[75,25]));
product([[1,2],[4,5]]);
print(function(){var __accu0__=[];for(var [k,v]of x.py_items())__accu0__.append([k,round(v)]);return dict(__accu0__)}());
array([[1,0,1],[2,0,1]]);
Foo.allocate_ids(__kwargtrans__({max:26740080011050}));
sys.exit(test());
export var x_pieces=function(){var __accu0__=[];for(var i of range(0,len(x),step))__accu0__.append(x.__getslice__(i,i+step,1));return __accu0__}();
hex(random.randint(0,16777215)).__getslice__(2,null,1).upper();
numpy.vstack(tuple([a,b,c])).T;
server.serve_forever();
var B=list(A[0]);
var b=function(){var __accu0__=[];for(var x of a)if(!__in__(x,itemsToRemove))__accu0__.append(x);return __accu0__}();
plt.show();
var df=pd.DataFrame(df_dict);
export var intersect=function(){var __accu0__=[];for(var [key,o]of list(spec1.py_items()))if(__in__(key,spec2))__accu0__.append([key,[o,spec2[key]]]);return dict(__accu0__)}();
root.mainloop();
export var fruits=function(){var __accu0__=[];for(var k of names)__accu0__.append([k,[]]);return dict(__accu0__)}();
var args=parser.parse_args();
plt.show();
d.py_setdefault(x,[]).append(y);
json.JSONEncoder.py_default(self,obj);
(function(){var __accu0__=[];for(var [x,y]of it.izip(a.__getslice__(1,null,1),a))__accu0__.append(x-y);return py_iter(__accu0__)})();
var c=a.__getitem__([np.searchsorted(a.__getitem__([tuple([0,null,1]),0]),b),tuple([0,null,1])]);
np.concatenate([[88],a,[77]]);
plt.show();
plt.show();
pylab.show();
time.sleep(.01);
plt.show();
r.py_setdefault(key,[]).append(lst2dct(val));
admin.site.register(Email,EmailAdmin);
len(arr);
export var size=fields.IntegerRangeField(__kwargtrans__({min_value:1,max_value:50}));
print(element.tag,element.text,element.tail);
app.exec_();
reactor.run();
help(assign2);
var d=dict(function(){var __accu0__=[];for(var [k,v]of zip(l.__getslice__(0,null,2),l.__getslice__(1,null,2)))__accu0__.append(tuple([k,v]));return __accu0__}());
np.array(function(){var __accu0__=[];for(var [i,j]of A)__accu0__.append([d[str(i)],d[str(j)]]);return __accu0__}());
self.response.out.write(simplejson.dumps(data));
tst.save();
list(range(0,10,2));
df[(df[[0,1]]>0).all(1)];
cnxn.commit();
df.where(~outliers_low,down_quantiles,__kwargtrans__({axis:1}));
datetime.datetime(...d.timetuple().__getslice__(0,6,1));
GC.remove_edge(clique[0],clique[1]);
ax1.set_ylim(0,1);
gca().xaxis.set_major_formatter(xfmt);
myMethod(myVariable,...myTuple);
print(np.unravel_index(result.argmax(),result.shape));
ipdb.set_trace();
plt.show();
var cursor=conn.cursor(MySQLdb.cursors.DictCursor);
np.fill_diagonal(out,np.diag(A));
export var big=np.random.randint(-10,10,__kwargtrans__({size:1E7}));
var b=function(){var __accu0__=[];for(var x of b_set)__accu0__.append(list(x));return __accu0__}();
ax.plot(x,y);
json.dumps(o);
Math.pow(x,2)+1;
ax.yaxis.set_major_formatter(mpl.ticker.FuncFormatter(mjrFormatter));
msg.send();
print(somefake.readlines());
var C=function(){var __accu0__=[];for(var col=0;col<len(B[0]);col++)__accu0__.append(function(){var __accu1__=[];for(var row=0;row<len(A);row++)__accu1__.append(0);return __accu1__}());return __accu0__}();
db.Close();
ax.get_xaxis().set_minor_locator(mpl.ticker.AutoMinorLocator());
pd.DataFrame(data,tid1,ucat);
var file=forms.FileField(__kwargtrans__({required:false}));
logging.getLogger(__name__).setLevel(logging.WARNING);
var my_dict=function(){var __accu0__=[];for(var k of py_keys)__accu0__.append([k,[]]);return dict(__accu0__)}();
var __left0__=tuple([input_seq[ix2],input_seq[ix1]]);input_seq[ix1]=__left0__[0];input_seq[ix2]=__left0__[1];
math.sqrt(Math.pow(p0[0]-p1[0],2)+Math.pow(p0[1]-p1[1],2));
app.mainloop();
ax.scatter(x,y);
var d=function(){var __accu0__=[];for(var [i,c]of enumerate(ascii_lowercase,1))__accu0__.append([c,i]);return dict(__accu0__)}();
conn.commit();
self.assertTrue(issubclass(QuizForm,forms.Form));
cursor.execute(sql,args);
conn.execute(sql,list);
dict_compare(dict_a,dict_b);
__mod__(np.arange(py_new[1]),old[1]);
root.mainloop();
aapl.index.to_series().diff().mean()/(60*60*Math.pow(10,9));
shapesMatch([tuple([0,0]),tuple([1,0]),tuple([1,1]),tuple([2,1]),tuple([2,2]),tuple([0,2])],l_shape);
(my_array.__getitem__([tuple([0,null,1]),np.newaxis])==my_array).all(__kwargtrans__({axis:2})).sum(__kwargtrans__({axis:1}));
(function(){var __accu0__=[];for(var k of lst)__accu0__.append(d[k]);return __accu0__})();
(function(){var __accu0__=[];for(var [i,x]of enumerate(t))if(x)__accu0__.append(i);return __accu0__})();
traceback.print_stack();
time.sleep(1);
Entry.objects.bulk_create(function(){var __accu0__=[];for(var x of list)__accu0__.append(Entry(__kwargtrans__({id:x})));return __accu0__}());
jsonify(__kwargtrans__({json_list:qryresult.all()}));
dict(a);
print(soup.prettify());
new set([new set([myexample])]);
var b=dict(zip(i,i));
self.transport.write(self.message.encode());
np.py_sort(m).__getitem__([tuple([0,null,1]),tuple([-N,null,1])]);
array([[4,5],[1,4]]);
foo.__class__.__class__;
set(listA)&set(listB);
dict(list(x.py_items())|list(y.py_items()));
(function(){var __accu0__=[];for(var l of lst)for(var e of l)__accu0__.append(e);return __accu0__})();
(function(){var __accu0__=[];for(var y of listOfLists)if(y[x].isdigit())__accu0__.append(y);return __accu0__})();
result.append(os.path.join(root,py_name));
setattr(self,pointer,group);
plt.ylim(-6,6);
a.__getitem__([[0,1],[1,2],2]);
var __except0__=NotImplementedError();__except0__.__cause__=null;throw __except0__;
sum(function(){var __accu0__=[];for(var _ of takewhile(function __lambda__(x){return x==a[0]},a))__accu0__.append(1);return py_iter(__accu0__)}());
var i=int(math.floor(x)-1);
(function(){var __accu0__=[];for(var [x,y,label]of data_one)__accu0__.append(tuple([x,y]));return __accu0__})();
export var jdf=df._jdf;
pprint(dict(grouped_by_soundex));
portalocker.lock(file,flags);
print(m.group(1));
var hand=function(){var __accu0__=[];for(var [k,v]of hand.py_items())if(v!=0)__accu0__.append([k,v]);return dict(__accu0__)}();
ftp.quit();
var __left0__=img.py_split();export var red=__left0__[0];export var green=__left0__[1];export var blue=__left0__[2];var alpha=__left0__[3];
nx.draw_networkx(G);
pl.show();
var f=open(os.path.join(sub_dir,file));
(function(){var __accu0__=[];for(var y=0;y<10;y++)__accu0__.append(function(){var __accu1__=[];for(var x=0;x<10;x++)__accu1__.append(copy.deepcopy(foo));return __accu1__}());return __accu0__})();
dict(function(){var __accu0__=[];for(var [x0,x1,x2]of zip(x.__getslice__(0,-2,1),x.__getslice__(1,-1,1),x.__getslice__(2,null,1)))__accu0__.append(tuple([x1,tuple([x0,x2])]));return py_iter(__accu0__)}());
df.div(df.sum(1),__kwargtrans__({axis:0}));
var image=cv2.cvtColor(image,cv2.cv.CV_BGR2RGB);
dill.pickles(f);
var m=sqrt(Math.pow(a,2)+Math.pow(b,2));
plt.show();
sys.stdout.close();
df.reindex(df.index.drop(1));
len(x)>index?x[index]:py_default;
self.show();
cursor.execute(query_insert,data*2);
canvas.config(__kwargtrans__({scrollregion:canvas.bbox(ALL)}));
list(itertools.chain(...list(foo.py_values())));
plt.show();
logging.handlers.py_pop();
var result=function(){var __accu0__=[];for(var i of indices)__accu0__.append(numbers[i]);return __accu0__}();
var Hsub=H.__getitem__([tuple([1,H.shape[0]-1,1]),tuple([1,H.shape[1]-1,1])]);
logging.config.stopListening();
ax.plot(list(range(10)),list(range(10)));
[0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,1,1,1,1];
app.run(__kwargtrans__({debug:true}));
random.seed(SEED);
plt.show();
print(proc.stdout.readline());
pd.DataFrame(L);
plt.show();
cursor.execute(sql,tuple([val1,val2]));
random.choice(string.ascii_letters);
User.query.filter_by(__kwargtrans__(kwargs));
array([0,1,0,0]);
df.drop(df.columns[[1,69]],__kwargtrans__({axis:1,inplace:true}));
var a=np.delete(a,zero_row,0);
file_writer.writerow(function(){var __accu0__=[];for(var x of lol)__accu0__.append(x[i]);return __accu0__}());
g.filter(function __lambda__(x){return len(x)>1});
df.T.groupby(__kwargtrans__({level:0})).first().T;
export var sorted_df=df.sort_values(df.last_valid_index(),__kwargtrans__({axis:1}));
[[0,1,0],[0,0,1],[0,1,0],[1,0,0],[0,1,0]];
tornado.ioloop.IOLoop.instance().start();
(function(){var __accu0__=[];for(var i of m)__accu0__.append(sympy.diff(sum(m*m.T),i));return __accu0__})();
export var programs=tuple([tapjoy-game1,tapjoy-game2]);
arr[[2,1]];
t.start();
np.in1d(fake,[0,2,6,8]).reshape(fake.shape);
thread.start_new_thread(interrupt_user,tuple([]));
requests.post(url,__kwargtrans__({data:data}));
sys.stdout.flush();
__mod__(5.55,1);
var json_string=json.dumps(row);
s.flush();
sys.stdout.flush();
plt.show();
len(os.listdir(directory));
print(socket.gethostbyname_ex(socket.gethostname())[2]);
cgi.parse_qs(qs);
all(function(){var __accu0__=[];for(var n of thetuple)__accu0__.append(0<n&&n<50);return py_iter(__accu0__)}());
list_of_nums.__setslice__(0,null,null,function(){var __accu0__=[];for(var x of list_of_nums)if(x!=2)__accu0__.append(x);return __accu0__}());
(function __lambda__(m){return replacement_dict.py_get(m.group(),m.group())});
sum(function(){var __accu0__=[];for(var i of l1)if(isinstance(i,int))__accu0__.append(i);return __accu0__}());
(function(){var __accu0__=[];for(var [k,g]of groupby(strs))__accu0__.append([k,len(list(g))]);return __accu0__})();
ax1.set_yticks(function(){var __accu0__=[];for(var j=0;j<4;j++)__accu0__.append(int(j));return __accu0__}());
tuple([plt.subplot(122),plt.imshow(cv2.cvtColor(img,cv2.COLOR_BGR2RGB))]);
var im=cv2.imread(path,-1);
zip(xnew.__getslice__(1,null,1),ynew.__getslice__(1,null,1));
var f=function __lambda__(x,a){if(typeof a=="undefined"||a!=null&&a.hasOwnProperty("__kwargtrans__"))var a=a;return Math.pow(x,a)};
pygame.mixer.music.play();
django.setup();
datetime.date.today();
zip(...filterer(list1,list2));
max(l1,l2,__kwargtrans__({key:len}));
numpy.sqrt(numpy.sum(Math.pow(A-B,2)));
ax.plot(x,y,z);
__init__.py;
np.argsort(K).__getslice__(-5,null,1);
getattr(module_a,mod)();
c[a&b];
export var lol=function __lambda__(lst,sz){return function(){var __accu0__=[];for(var i of range(0,len(lst),sz))__accu0__.append(lst.__getslice__(i,i+sz,1));return __accu0__}()};
output_file.close();
GPIO.output(4,false);
[2,5,7,8,9,12];
tuple([min(alist,__kwargtrans__({key:itemgetter(1)}))[1],max(alist,__kwargtrans__({key:itemgetter(1)}))[1]]);
main();
setattr(self,k,v);
a[~np.isnan(a).any(__kwargtrans__({axis:1}))];
scipy.signal.ltisys.lti;
dfUnstacked2.columns;
meta.Session.commit();
self.layout.addWidget(self.button);
np.tensordot(A,B,__kwargtrans__({axes:[[0,1],[0,2]]}));
root.mainloop();
var result=set(d[0]).intersection(...d.__getslice__(0,1,1));
self.root.mainloop();
gevent.wait();
sess.run(y,__kwargtrans__({feed_dict:function(){var __accu0__=[];for(var [i,d]of zip(inputs,data))__accu0__.append([i,d]);return dict(__accu0__)}()}));
var c=list(chain(...zip(a,b)));
var response=requests.post(url,__kwargtrans__({data:json.dumps(payload),headers:headers}));
math.isnan(x);
logger.setLevel(logging.INFO);
tuple([255,255,255]);
(function(){var __accu0__=[];for(var [k,v]of d.py_items())if(k.startswith(s))__accu0__.append([k,v]);return dict(__accu0__)})();
plt.show();
(function(){var __accu0__=[];for(var ii=0;ii<10;ii++)__accu0__.append(dict(__kwargtrans__({x:x[ii],y:y[ii],z:z[ii]})));return py_iter(__accu0__)})();
time.sleep(1E3);
export var new_module=__import__(modulename);
driver.quit();
print(my_list);
var result=json.dumps(response[1]);
var s=map(sum,zip(...[s]*2));
var max_index=max(max_index,index);
print(repr(input()));
timeit(function __lambda__(){return list(test(12,5))},__kwargtrans__({number:1}));
root.mainloop();
export var striped=function(){var __accu0__=[];for(var l of function(){var __accu1__=[];for(var c of file_desc.readlines())__accu1__.append(c.strip());return __accu1__}())if(l)__accu0__.append(l.py_split());return __accu0__}();
test.dosomethingelse();
time.sleep(1);
plt.show();
np.exp(complex(0,2)*np.pi*np.random.rand(n,1)).view(__kwargtrans__({dtype:np.float64}));
setattr(self,k,kwargs[k]);
d.py_setdefault(k,[]).append(v);
b2[np.in1d(b1,a)];
(function(){var __accu0__=[];for(var t of a)for(var x of t)__accu0__.append(x);return __accu0__})();
root.mainloop();
f.close();
export var temp=function __lambda__(x,i){if(typeof i=="undefined"||i!=null&&i.hasOwnProperty("__kwargtrans__"))var i=i;return x+i};
s*a==s*a+s*0;
plt.plot(...zip(...a));
dict.fromkeys(my_list);
plt.show();
ax.axes.get_yaxis().set_visible(false);
export var object=object.__iadd__(value);
myList.__setslice__(0,null,null,function(){var __accu0__=[];for(var x of myList)if(!__in__(x,totoss))__accu0__.append(x);return __accu0__}());
time.sleep(60);
dict(lst);
var a=a.__getslice__(0,100,1);
parser.parse_args();
workbook.close();
__init__.py;
numpy.random.seed(42);
canvas.pack(__kwargtrans__({side:LEFT,expand:true,fill:BOTH}));
self.write(jsonp);
conn.commit();
self.grid_rowconfigure(0,__kwargtrans__({weight:1}));
Foobar.objects.filter(Q(__kwargtrans__({blah:1}))^Q(__kwargtrans__({bar:2})));
deletemylist.__getslice__(-2,null,1);
plt.show();
time.sleep(5);
var s=[[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0]];
plt.show();
worker.start();
plt.figure();
child.kill();
(function(){var __accu0__=[];for(var item of yourlist)if(__mod__(item,2))__accu0__.append(item);return __accu0__})();
(function(){var __accu0__=[];for(var i=0;i<size;i++)__accu0__.append(int(__in__(i,locs)));return __accu0__})();
time.sleep(2);
s.groupby(s.index.weekday).transform(function __lambda__(x){return pd.rolling_mean(x,__kwargtrans__({window:n}))});
plt.show();
(function(){var __accu0__=[];for(var x of matrix)if(x[2]==0)__accu0__.append(x);return __accu0__})();
ax.xaxis.set_major_formatter(ScaledFormatter(__kwargtrans__({dx:6})));
s.quit();
export var doc=lxml.html.fromstring(res.content);
time.time();
set(function(){var __accu0__=[];for(var i=1;i<len(a);i++)if(a[i]==a[i-1])__accu0__.append(a[i]);return py_iter(__accu0__)}());
A[np.isnan(A)]=0;
var new_list=function(){var __accu0__=[];for(var d of old_list)__accu0__.append(dict(function(){var __accu1__=[];for(var [k,v]of list(d.py_items()))__accu1__.append(tuple([transform[k],v]));return py_iter(__accu1__)}()));return __accu0__}();
sys.path.append(root);
plt.show();
max(t,__kwargtrans__({key:function __lambda__(e){return tuple([-e[1],e[2]])}}));
regex.findall(s);
export var result_list=list(map(list,deduped));
f.seek(0);
display.sendstop();
input.close();
export var counter_list=function(){var __accu0__=[];for(var item of counter_list)if(item)__accu0__.append(item);return __accu0__}();
driver.implicitly_wait(secs);
data.groupby([function __lambda__(x){return x.year},function __lambda__(x){return x.time}]);
plt.show();
plt.xticks(list(range(10)),labels);
var res=service.cse().list(__kwargtrans__({q:search_term,cx:my_cse_id})).execute();
os.rmdir(temp_dir);
plt.show();
subprocess.call(cmd,__kwargtrans__({shell:true}));
cur.execute(query,tuple([sortname,limit1,limit2]));
print(function(){var __accu0__=[];for(var d of get_week(datetime.datetime.now().date()))__accu0__.append(d.isoformat());return __accu0__}());
root.mainloop();
bisect.bisect_left(mylist,compareValue);
export var spam_list=function(){var __accu0__=[];for(var i of spam_order)__accu0__.append(spam_list[i]);return __accu0__}();
ax.set_xlim([0,N]);
fh4.close();
plot(x,y);
np.vstack(function(){var __accu0__=[];for(var row of a)__accu0__.append(tuple(row));return set(__accu0__)}());
ser.read(5);
random.sample(list(range(1,10)),10-1);
var l=L.__getslice__(1,null,2);
plt.show();
var b=a.__getitem__([tuple([0,null,1]),tuple([0,null,1]),tuple([0,null,-1])]);
parser.parse_args();
(function(){var __accu0__=[];for(var a of l)__accu0__.append(__mod__(a,1));return __accu0__})();
se2.commit();
(function(){var __accu0__=[];for(var i of x)for(var j of i)__accu0__.append(j);return __accu0__})();
print(np.allclose(cols,cols2));
data.py_sort(__kwargtrans__({key:function __lambda__(entry){return entry[1]},reverse:true}));
ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy());
db.session.commit();
time.sleep(1);
l.__getslice__(0,null,-1);
rolling_corr.iloc.__getslice__(-200,null,1).mean(__kwargtrans__({axis:0}));
list(itertools.permutations(set([1,1,2,2])));
(function(){var __accu0__=[];for(var t of mylist)if(t[0]==10)__accu0__.append(t);return __accu0__})();
df.isnull().py_values.ravel().sum();
unittest.main();
a[a<0]+=1;
var new_list=function(){var __accu0__=[];for(var foo of foos)if(foo.location==2)__accu0__.append(foo);return __accu0__}();
a.reshape(-1,m/k,k).transpose(1,0,2).reshape(-1,k);
socket.setdefaulttimeout(15);
print(list(chain.from_iterable(A)));
(function(){var __accu0__=[];for(var c of chars)__accu0__.append(hex(ord(c)));return __accu0__})();
HttpResponse(response.content);
os.startfile(file);
Gtk.main_iteration();
var A=function(){var __accu0__=[];for(var i=0;i<len(A)-1;i++)__accu0__.append(operation(A[i],A[i+1]));return __accu0__}();
print(etree.tostring(builder,__kwargtrans__({pretty_print:true})));
root.mainloop();
4*scipy.integrate.nquad(f,[[0,1],[0,1]])[0]/12.565472446489999;
sys.stdout.flush();
array([[1,0,0],[0,1,0],[0,1,0],[0,0,1]]);
plt.show();
var a=set();
print(etree.tostring(new_root,__kwargtrans__({pretty_print:true})));
var a=list(set(a));
A.py_sort(__kwargtrans__({key:function __lambda__(x){return B.count(x)}}));
var my_dict=function(){var __accu0__=[];for(var x of my_list)__accu0__.append([x[0],function(){var __accu1__=[];for(var [k,v]of zip(my_headers,x.__getslice__(1,null,1)))__accu1__.append([k,v]);return dict(__accu1__)}()]);return dict(__accu0__)}();
export var end_date=date_1+datetime.timedelta(__kwargtrans__({days:10}));
random.sample(the_list,50);
var __left0__=function(){var __accu0__=[];for(var i of range(0,len(x),step))__accu0__.append(x.__getslice__(i,i+step,1));return __accu0__}();var a=__left0__[0];var b=__left0__[1];var c=__left0__[2];var d=__left0__[3];
ax.hist(mydata,__kwargtrans__({weights:np.zeros_like(data)+1/data.size}));
var __left0__=tuple([y,x]);var x=__left0__[0];var y=__left0__[1];
wx.Frame.__init__(self,parent,ID,title,pos,size,style);
export var grayimg=cv2.cvtColor(image,cv2.cv.CV_BGR2GRAY);
df_new.head();
min(li,__kwargtrans__({key:function __lambda__(x){return x.number}}));
datetime.fromtimestamp(timestamp2);
df.ix[idx];
var rest=text.py_split(sep,1)[0];
cursor.executemany(sql,rows);
a.append(s);
df.py_replace(d);
unique_a.view(a.dtype).reshape(tuple([unique_a.shape[0],a.shape[1]]));
f.close();
self.Bind(wx.EVT_LEAVE_WINDOW,self._onMouseLeave);
plt.show();
set(range(1,101))-s;
list1.py_sort(__kwargtrans__({key:natural_sort_key}));
sns.kdeplot(x,__kwargtrans__({shade:true}));
set(list2).issubset(list1);
local_file.close();
var json_string=json.dumps(foo.__dict__);
self.queue.py_pop();
var list=map(str.strip,list);
session.flush();
(function(){var __accu0__=[];for(var t of zip(...l))__accu0__.append(list(t));return __accu0__})();
var res_list=function(){var __accu0__=[];for(var [x,_]of rows)__accu0__.append(x);return __accu0__}();
x.__getslice__(5,null,1);
plt.show();
shutil.rmtree(py_name);
np.flipud(your_array);
p.wait();
df.apply(function __lambda__(row){return row[0]>0?row[1]:row[2]},1);
vbar.pack(__kwargtrans__({side:RIGHT,fill:Y}));
set(function(){var __accu0__=[];for(var i=1;i<len(a);i++)if(a[i]==a[i-1])__accu0__.append(a[i]);return py_iter(__accu0__)}());
np.multiply(np.arange(1,5),np.cumprod([1,2,2,2])[np.newaxis].T);
timestamps.py_sort();
QtCore.QObject.__init__(self);
list(function(){var __accu0__=[];for(var [k,g]of itertools.groupby(function(){var __accu1__=[];for(var x of numbers)if(x!=0)__accu1__.append(x);return py_iter(__accu1__)}()))__accu0__.append(k);return py_iter(__accu0__)}());
fvtool(Hd1,Hd2);
(function(){var __accu0__=[];for(var i of x.__getslice__(num-n,num,1))__accu0__.append(int(i));return __accu0__})();
var res=cv2.matchTemplate(img,template,cv2.TM_CCORR_NORMED);
var y=x.reshape(x.shape[0]/2,2,x.shape[1],2);
var a=datetime.datetime.today().year;
export var con=MySQLdb.connect();
var newList=function(){var __accu0__=[];for(var x of myList)__accu0__.append(x/myInt);return __accu0__}();
self.setWindowState(QtCore.Qt.WindowMinimized);
cv2.destroyAllWindows();
datetime.datetime(1890,1,1,0,0);
pd.read_csv(Reader(gen()));
plt.show();
session.query(MyTable.col1).count();
tuple([array([[18,6],[19,5],[17,9],[10,5]])]);
df.iloc.__getitem__([tuple([0,null,1]),[1]]);
export var val0=f(list[0]);
plt.show();
signal.signal(signal.SIGQUIT,handler);
self.top_frame.grid_columnconfigure(1,__kwargtrans__({weight:1}));
sorted(function(){var __accu0__=[];for(var [i,j]of zip(x,y))__accu0__.append(tuple([i,j]));return py_iter(__accu0__)}());
var args=parser.parse_args();
plt.show();
(function __lambda__(x,y){return x+y});
open(location,mode).write(content);
db.commit();
time.mktime(dt.timetuple())+dt.microsecond/1E6;
tuple([tuple([0,1])])*5;
[false]*10;
export var clusters=function(){var __accu0__=[];for(var i=0;i<n_clusters_;i++)__accu0__.append(X[labels==i]);return __accu0__}();
x2.__setitem__([tuple([0,null,1]),0],np.roll(x2.__getitem__([tuple([0,null,1]),0]),-2));
plt.show();
self.root.mainloop();
ax1.plot(x.__getslice__(i,i+2,1),y.__getslice__(i,i+2,1));
f(...args,__kwargtrans__(kw));
datetime.datetime.today().weekday();
os.path.dirname(file);
stream.close();
added.py_sort(__kwargtrans__({key:function __lambda__(x){return os.stat(os.path.join(path_to_watch,x)).st_mtime}}));
f.close();
my_model.save();
c.ravel();
ctx.Process(__kwargtrans__({target:foo,args:tuple([x])})).start();
obj.refresh_from_db();
(function(){var __accu0__=[];for(var i of my_list)if(my_counter[i]>1)__accu0__.append(i);return __accu0__})();
infile.close();
client.images.data(img);
np.random.seed(1977);
df.iloc[df.index.get_indexer([2,7])];
df.stack();
numpy.array(list(c));
self.frame.pack();
G.remove_nodes_from(to_remove);
reactor.run();
print(line);
df.apply(function __lambda__(f){return to_number(f[0])},__kwargtrans__({axis:1})).sum();
plt.xlim(0,1E4);
matplotlib.pyplot.plot_date(dates,py_values);
wx.Frame.__init__(self,...args,__kwargtrans__(kwargs));
var arr=arr.__getitem__([tuple([0,null,1]),tuple([0,null,1]),tuple([0,null,2])]);
var df=pd.DataFrame.from_dict(map(dict,df_list));
func(...args,__kwargtrans__(kwargs));
self.checkqueue();
print(rdd.collect());
np.all(a==0);
process_file(sys.argv[1]);
export var dirname2=os.path.py_split(dir)[1];
ax1.yaxis.set_visible(false);
time.time();
plt.show();
NOT_DONE_YET;
inspect.signature(datetime.datetime.now);
print(np.allclose(rows,rows2));
time.sleep(.5);
f();
(function(){var __accu0__=[];for(var t of s)__accu0__.append([t[0],t.__getslice__(1,null,1)]);return dict(__accu0__)})();
con.commit();
df1.ix.__getitem__([tuple([0,null,1]),1]);
admin.site.register(Session,SessionAdmin);
new_lst.py_sort();
print(function(){var __accu0__=[];for(var v of simplex.vertices)__accu0__.append(v);return __accu0__}());
os.kill(cpid,signal.SIGKILL);
tiffiles.py_sort(__kwargtrans__({key:getint}));
arr.argsort().__getslice__(0,n,1);
random.shuffle(lst);
my_array.py_pop();
fliplr(m.swapaxes(0,1));
dict(map(function __lambda__(l){return l.py_split()},s.splitlines()));
df.index=pd.to_datetime(df.index);
(function(){var __accu0__=[];for(var e of zip(...data))__accu0__.append(sum(e));return __accu0__})();
time.sleep(10);
plt.show();
var doc=lxml.html.parse(url);
pd.DataFrame(list(d.py_items()));
var C=function(){var __accu0__=[];for(var row=0;row<len(A);row++)__accu0__.append(function(){var __accu1__=[];for(var col=0;col<len(B[0]);col++)__accu1__.append(0);return __accu1__}());return __accu0__}();
pd.value_counts(list(concat(df.categories.py_values.tolist())));
fh.close();
random.shuffle(x);
var result=sorted(mylist,__kwargtrans__({key:function __lambda__(x){return d[x[0]]}}));
list_of_hets.append(hets);
np.unravel_index([0,18,26],a.shape);
urllib.request.urlopen(url).geturl();
np.where(a>=6&a<=10);
print(a.dtype);
df[df.isnull().any(__kwargtrans__({axis:1}))];
var index=numpy.clip(index,0,len(my_list)-1);
(function(){var __accu0__=[];for(var i=0;i<10;i++)if(i==9)__accu0__.append(i);return __accu0__})();
input();
plt.subplot(212,__kwargtrans__({sharex:ax1,sharey:ax1}));
list(s)[0];
glOrtho(self.left,self.right,self.bottom,self.top,1,-1);
time+=datetime.timedelta(__kwargtrans__({hours:1}));
main();
(function(){var __accu0__=[];for(var _=0;_<1E5;_++)__accu0__.append(random.random());return __accu0__})();
var driver=webdriver.Chrome(__kwargtrans__({chrome_options:chrome_options}));
getpass.getuser();
f.close();
export var stokes_list=np.vstack(tuple([stokes_list,stokes_line]));
app.mainloop();
ax.plot(x,y);
plt.show();
df.stack().apply(pd.Series).unstack().swaplevel(0,1,1).sort_index(1);
export var offset=dt.astimezone(cet).utcoffset();
plt.show();
out_file.write(replace_all(text,spelling_dict));
ax1.set_ylim([0,5]);
f.close();
export var top5=itertools.islice(my_list,5);
var list_2=function(){var __accu0__=[];for(var i of list_1)if(isinstance(i,tuple([int,float])))__accu0__.append(i);return __accu0__}();
plt.show();
export var reverse_dict=function(){var __accu0__=[];for(var [keypath,value]of keypaths(example_dict))__accu0__.append([value,keypath]);return dict(__accu0__)}();
var G=nx.DiGraph();
var out=np.linalg.norm(row.data);
export var contains_non_string=s[s.apply(py_metatype)!=str].any();
np.array(_);
self.listbox.selection_set(__kwargtrans__({first:0}));
np.fromiter(function(){var __accu0__=[];for(var [row,index]of zip(X,Y))__accu0__.append(row[index]);return py_iter(__accu0__)}(),__kwargtrans__({dtype:int}));
sorted(l,__kwargtrans__({key:function __lambda__(x){return tuple([x.__getslice__(0,-1,1),x[-1].isdigit()])}}));
help(func);
np.subtract.outer(a,b);
min(a,__kwargtrans__({key:function __lambda__(t){return t[1]}}));
self.check_object_permissions(self.request,obj);
plt.show();
list(tuple(mydata.transpose()));
export var tuples=list(genreDictionary.py_items());
a.__getitem__([,numpy.newaxis])*b.__getitem__([numpy.newaxis]);
self.lock.acquire();
self.value=value;
theproc.communicate();
(function(){var __accu0__=[];for(var item of theList)if(__in__(item,theDict))__accu0__.append(item);return __accu0__})();
user.save();
df1.count();
setattr(self,k,v);
print(sorted(set(my_list)));
var s=pd.Series([1,5,20,-1]);
self.Bind(wx.EVT_MOTION,self.OnMouseMove);
user.save();
do_it_lots();
np.where(vals.__getitem__([tuple([0,null,1]),0])==0&vals.__getitem__([tuple([0,null,1]),1])==1)[0];
numpy.array(function(){var __accu0__=[];for(var x_row of X)__accu0__.append(function(){var __accu1__=[];for(var elem of x_row)__accu1__.append(elem);return __accu1__}());return __accu0__}());
lst.extend(data);
request.remote_addr;
round(1.5145,2);
print(function(){var __accu0__=[];for(var m of matches)__accu0__.append(m.start(1));return __accu0__}());
time.sleep(.5);
ax.set_xlim([datetime.date(2014,1,26),datetime.date(2014,2,1)]);
some_class(...os.path.py_split(somefile));
set(word_list).intersection(a_string.py_split());
plt.pause(1);
self.baseDict[key];
cl.getlevel(2);
var ordered=OrderedDict(function(){var __accu0__=[];for(var k of myorder)__accu0__.append(tuple([k,mydict[k]]));return py_iter(__accu0__)}());
np.MAXDIMS;
time.sleep(.2);
zip(s,s.__getslice__(1,null,1),s.__getslice__(2,null,1));
__init__.py;
plt.show();
decimal.Decimal(1.1);
export var uni=function(){var __accu0__=[];for(var [k,v]of a.py_items())if(countMap[v]==1)__accu0__.append(k);return __accu0__}();
export var lowercase=function(){var __accu0__=[];for(var c of s)if(c.islower())__accu0__.append(c);return __accu0__}();
self.__dict__.py_update(...args,__kwargtrans__(kwargs));
var x=x.__getslice__(0,50,1);
var z=dict(list(x.py_items())+list(y.py_items()));
ax.margins(.05);
(function(){var __accu0__=[];for(var i of range(0,len(a),2))__accu0__.append(a.__getslice__(i,i+2,1));return __accu0__})();
sys.exit(0);
logging.basicConfig();
plt.show();
(function(){var __accu0__=[];for(var _f of lst)if(_f)__accu0__.append(_f);return __accu0__})();
sys.exit(1);
(function(){var __accu0__=[];for(var x of list(d.py_values()))for(var y of x)__accu0__.append(y);return __accu0__})();
sorted(function(){var __accu0__=[];for(var x=0;x<10;x++)__accu0__.append(tuple([0,0,0,int(random.getrandbits(4))]));return __accu0__}());
min(a,b)/max(a,b);
self.client.post(url,__kwargtrans__({data:post_data}));
var d=function(){var __accu0__=[];for(var t of arr)__accu0__.append([t[0],t.__getslice__(1,null,1)]);return dict(__accu0__)}();
plt.show();
admin.autodiscover();
var __left0__=function(){var __accu0__=[];for(var v of l)__accu0__.append(v+2);return py_iter(__accu0__)}();var x=__left0__[0];var y=__left0__[1];var z=__left0__[2];
min(list(d.py_items()),__kwargtrans__({key:function __lambda__(x){return x[1]}}));
print(pix.__getitem__([x,y]));
curses.endwin();
words_list.extend(contents[i].py_split());
plt.show();
os.path.normpath(os.path.join(os.getcwd(),os.path.dirname("./P2JSnippets.py")));
f.close();
var d=pd.concat([d,temp]);
export var quantiles=df.quantile([.01,.25,.5,.75,.99]);
var rows=session.query(func.count(Congress.id)).scalar();
self.label.pack();
var file=models.FileField(__kwargtrans__({blank:true,null:true}));
text_area.pack();
plt.plot(list(range(5)));
(function(){var __accu0__=[];for(var x of lst)__accu0__.append(tuple(zip(...x)));return __accu0__})();
root.mainloop();
plt.show();
print(Foo.bar);
(function(){var __accu0__=[];for(var item of b)__accu0__.append(a.index(item));return __accu0__})();
writer.writerow(list(d.py_keys()));
sock.bind(tuple([MCAST_GRP,MCAST_PORT]));
shutil.copy(file,dest_dir);
map(function __lambda__(x){return Math.pow(x,2)},list);
update_fitness();
var new_list=function(){var __accu0__=[];for(var x of it.takewhile(function __lambda__(x){return condition(x)},l))__accu0__.append(f(x));return __accu0__}();
tk.Tk.__init__(self,...args,__kwargtrans__(kwargs));
plt.show();
(function(){var __accu0__=[];for(var i of list(zip(listOfTuples,bools)))if(i[1]==true)__accu0__.append(i[0]);return __accu0__})();
os.path.dirname("./P2JSnippets.py");
ax.plot_surface(X,Y,Z);
cv2.waitKey(0);
arbiter.run();
__init__.py;
screen.fill(tuple([255,255,255]));
data.append(function(){var __accu0__=[];for(var v of line.py_split())__accu0__.append(int(v));return __accu0__}());
pygame.display.flip();
list(map(fs.format,sum(map(str.py_split,l),[])));
plt.xticks([]);
plt.show();
sys.exit(1);
(function(){var __accu0__=[];for(var a of function(){var __accu1__=[];for(var x=1;x<10+1;x++)__accu1__.append(tuple([x,-x]));return py_iter(__accu1__)}())for(var b of a)__accu0__.append(b);return __accu0__})();
print(soup.get_text());
list(r.py_keys());
plt.show();
df.reset_index(__kwargtrans__({inplace:true}));
(function(){var __accu0__=[];for(var item of my_list)if(any(function(){var __accu1__=[];for(var x of bad)__accu1__.append(__in__(x,item));return py_iter(__accu1__)}()))__accu0__.append(item);return __accu0__})();
[[10,6,45,18,49],[5,6,45,6,14]];
time.sleep(1);
export var skipsdist=BOOL;
csv_writer.writerow(function(){var __accu0__=[];for(var x of line)__accu0__.append(x);return __accu0__}());
mars.circle(228,1);
print(function(){var __accu0__=[];for(var x of partition(list(range(105)),10))__accu0__.append(len(x));return __accu0__}());
[4,4,2,1,2];
plt.ylim([-4,2]);
foo.__getitem__(slice(a,b,c));
export var output_list=list(set(itertools.chain(first_list,second_list)));
plt.show();
plt.show();
plt.contour(xi,yi,zi,20,__kwargtrans__({linewidths:1}));
math.modf(x);
pfile.seek(0);
export var USE_TZ=false;
time.sleep(5);
var f=np.vectorize(f,__kwargtrans__({otypes:[np.float]}));
func(...args,__kwargtrans__(kwargs));
var new_list=sorted_set(my_list);
base64.b64decode(coded_string);
a[(a!=5).all(1)];
plt.figure();
(function(){var __accu0__=[];for(var [i,sublist]of enumerate(list))__accu0__.append(tuple([i,sublist.index(item)]));return __accu0__})();
(function(){var __accu0__=[];for(var [k,v]of d.py_items())if(!__in__(k,tuple([2,5])))__accu0__.append(v);return __accu0__})();
var filtered_list=list(function(){var __accu0__=[];for(var x of input_list)if(__mod__(x,2)==0)__accu0__.append(x);return __accu0__}());
server.serve_forever();
var data=np.array(function(){var __accu0__=[];for(var f of file(filename).read().py_split())__accu0__.append(float(f));return __accu0__}());
main();
var result=function(){var __accu0__=[];for(var r of x)if(all(function(){var __accu1__=[];for(var z of y)__accu1__.append(!__in__(z,r));return py_iter(__accu1__)}()))__accu0__.append(r);return __accu0__}();
any(function(){var __accu0__=[];for(var row of csv.reader(file))__accu0__.append(kidname==row[ct]);return py_iter(__accu0__)}());
plt.show();
export var newd=dict.fromkeys(origdict);
- -honour-stdin;
(function(){var __accu0__=[];for(var line of data)__accu0__.append(function(){var __accu1__=[];for(var i of line.py_split())__accu1__.append(int(i));return __accu1__}());return __accu0__})();
var logger=logging.getLogger(__name__);
sum(function(){var __accu0__=[];for(var _ of itertools.takewhile(str.isspace,a))__accu0__.append(1);return py_iter(__accu0__)}());
con.commit();
test.reshape(-1,2).__getslice__(0,null,2).reshape(-1,4);
w.show_all();
JsonResponse(list(data),__kwargtrans__({safe:false}));
var __left0__=list(d.py_items());var k=__left0__[0][0];var v=__left0__[0][1];
driver.refresh();
dict({});
time.sleep(1);
result.stack();
app.run();
plt.show();
py_typeof(d.copy());
grouped.boxplot();
tuple(function(){var __accu0__=[];for(var z of zip(a,b))__accu0__.append(sum(z));return py_iter(__accu0__)}());
ax.add_patch(circ);
[[true,false],[false,true]];
plt.imshow(rotate_lena,__kwargtrans__({cmap:plt.cm.gray}));
export var aa=dict(function(){var __accu0__=[];for(var k of f)__accu0__.append(tuple([k,d[k]]));return __accu0__}());
sum(function(){var __accu0__=[];for(var line of f)__accu0__.append(strat(line));return py_iter(__accu0__)}());
[[10,6,45,18,49],[5,6,45,6,14]];
print(pd.concat([d1,df],__kwargtrans__({axis:1})));
cv2.waitKey(0);
nx.draw(G,pos);
float_to_hex(17.5);
export var number=list(filter(str.isdigit,filename));
(function(){var __accu0__=[];for(var x of listD[1])__accu0__.append(x[0]);return __accu0__})();
print(sorted(list(d.py_items()),__kwargtrans__({key:function __lambda__(x){return x[1]},reverse:true}))[0]);
var result=function(){var __accu0__=[];for(var a of A)if(!__in__(a,subset_of_A))__accu0__.append(a);return __accu0__}();
main();
var __left0__=map(int,sys.stdin.readline().py_split());var a=__left0__[0];var b=__left0__[1];
export var content=text.selection_get();
(function(){var __accu0__=[];for(var [x,y]of zip(lis[0],cyc))__accu0__.append(x*y);return __accu0__})();
app.run();
export var ext_id=db.Column(db.Integer,__kwargtrans__({primary_key:true,autoincrement:false}));
Toy.objects.filter(__kwargtrans__({owner__parent:parent}));
np.in1d(arr1,arr2);
plt.figure();
sock.setsockopt(socket.SOL_SOCKET,socket.SO_KEEPALIVE,1);
json.dump(feeds,feedsjson);
data.__setitem__([tuple([0,null,1]),set_col],val);
time.sleep(1);
Mailbox.quit();
export var background=pygame.transform.scale(background,tuple([1200,800]));
all(function(){var __accu0__=[];for(var i=0;i<len(word)-1;i++)__accu0__.append(word[i+1]>=word[i]);return py_iter(__accu0__)}());
plt.show();
list(sum(list(dict.py_items()),tuple([])));
var parser=argparse.ArgumentParser();
sorted(l,__kwargtrans__({key:alphanum_key}));
list.focus_set();
df.py_values.__setslice__(0,null,null,df.sum());
(function(){var __accu0__=[];for(var m of matches)__accu0__.append(m.group(0));return __accu0__})();
os.makedirs(dir_path);
export var newstr=oldstr.__getslice__(0,4,1)+oldst.__getslice__(5,null,1);
logging.basicConfig(__kwargtrans__({level:your_level}));
locale.setlocale(locale.LC_ALL,saved);
var s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);
export var newData=np.array(function(){var __accu0__=[];for(var d of data)__accu0__.append(d.__getslice__(0,4,1));return __accu0__}());
A.a.__get__(a,A);
vf(numpy.outer(phases,numpy.arange(1,4)));
print(date.isoformat());
plt.show();
df.a.value_counts();
export var fib=function __lambda__(n){return reduce(function __lambda__(x,n){return[x[1],x[0]+x[1]]},list(range(n)),[0,1])[0]};
var mydict=py_default.copy();
Y.__getitem__([tuple([0,null,1]),1]);
var df=df.loc.__getitem__([tuple([0,null,1]),~df.columns.duplicated()]);
np.where(idx);
plt.show();
array([0,0,0,0]);
logger.setLevel(logging.DEBUG);
session.commit();
(function(){var __accu0__=[];for(var num of set(function(){var __accu1__=[];for(var i of L)__accu1__.append(len(i));return py_iter(__accu1__)}()))__accu0__.append(function(){var __accu1__=[];for(var w of L)if(len(w)==num)__accu1__.append(w);return __accu1__}());return __accu0__})();
export var links=function(){var __accu0__=[];for(var rel of a._meta.get_all_related_objects())__accu0__.append(rel.get_accessor_name());return __accu0__}();
hex(291);
setattr(c,key,value);
var result_list=function(){var __accu0__=[];for(var i of indices)__accu0__.append(elements[i]);return __accu0__}();
export var dictget=function __lambda__(d){var k=tuple([].slice.apply(arguments).slice(1));return function(){var __accu0__=[];for(var i of k)__accu0__.append(d[i]);return __accu0__}()};
os.kill(pid,signal.SIGTERM);
plt.show();
A.__setitem__([np.arange(A.shape[0]),(A!=0).cumsum(1).argmax(1)],0);
sys.exit(0);
SomeModel.objects.filter(__kwargtrans__({id__in:ids_list})).delete();
plt.show();
con.commit();
new set([new set([a.py_name])]);
cygstart/cygdrive/c/Python27/python.exe;
var y=[0,0,0,1,1,0,0,1,0,0,0];
unittest.main();
print(response.content);
export var L4=function(){var __accu0__=[];for(var item of L1)if(!__in__(item,unwanted))__accu0__.append(item);return __accu0__}();
export var p1=Process(__kwargtrans__({target:f,args:tuple([d])}));
np.dot(a,b);
gtk.main();
plt.show();
sum(function(){var __accu0__=[];for(var i of x)__accu0__.append(x>i);return py_iter(__accu0__)}());
export var draw=ImageDraw.Draw(im);
map(itemgetter(0),G);
print(getattr(test,a_string));
plt.figure(__kwargtrans__({figsize:tuple([4,4])}));
(function(){var __accu0__=[];for(var i of set(words))__accu0__.append([i,words.count(i)]);return dict(__accu0__)})();
sys.setrecursionlimit(1E4);
var res=df-df.shift();
var df=df.reset_index();
sum(function(){var __accu0__=[];for(var x of originalList)__accu0__.append(doSomething(x));return py_iter(__accu0__)}(),[]);
(function(){var __accu0__=[];for(var x=0;x<rows;x++)__accu0__.append([0]*cols);return __accu0__})();
(function(){var __accu0__=[];for(var pair of itertools.combinations(li,2))if(sum(pair)==10)__accu0__.append(pair);return __accu0__})();
print(max(function(){var __accu0__=[];for(var x of my_list)__accu0__.append(isinstance(x,list)?max(x):x);return py_iter(__accu0__)}()));
root.update_idletasks();
(s.iloc.__getslice__(0,null,2).py_values+s.iloc.__getslice__(1,null,2))/2;
shuffle(x);
plt.show();
plt.show();
Reporter.objects.all().delete();
conn.commit();
var ax=fig.add_subplot(111);
var d=function(){var __accu0__=[];for(var k of py_keys)__accu0__.append([k,[]]);return dict(__accu0__)}();
stack[-1];
some_list.append(dic);
blogpost.tags.__setslice__(0,null,null,[]);
plt.show();
result[np.lexsort(tuple([result.__getitem__([tuple([0,null,1]),0]),result.__getitem__([tuple([0,null,1]),0])]))];
(function(){var __accu0__=[];for(var i=0;i<10;i++)if(!__in__(i,digits))__accu0__.append(i);return __accu0__})();
root.mainloop();
loop.run_forever();
print(json.dumps(data));
dateutil.parser.parse(date_string);
plt.show();
tuple([new_string,np.tensordot(tensor1,tensor2,axes)]);
var last=df.index[-1];
writer.writerow([latlon]);
var parser=parse_args(sys.argv.__getslice__(1,null,1));
var output=proc.communicate()[0];
var args=parser.parse_args();
itertools.chain(...lists);
fout.writelines(data.__getslice__(1,null,1));
export var noise=np.random.normal(0,1,100);
root.mainloop();
ax.xaxis.set_major_locator(mdates.YearLocator());
time.sleep(1);
sys.stdout.flush();
export var contained=function(){var __accu0__=[];for(var x of d)if(__in__(x,paid[j]))__accu0__.append(x);return __accu0__}();
self.send(data);
pygame.display.flip();
export var zeroMatrix=function(){var __accu0__=[];for(var i=0;i<Np;i++)__accu0__.append([0]*Np);return __accu0__}();
plt.show();
(function(){var __accu0__=[];for(var i of zip(narrative,subject,activity,filer))__accu0__.append(i);return __accu0__})();
self.progressbar.pack(__kwargtrans__({padx:10,pady:10}));
chain.from_iterable(function(){var __accu0__=[];for(var r=0;r<len(s)+1;r++)__accu0__.append(combinations(s,r));return py_iter(__accu0__)}());
print(f.read());
OrderedDict(itertools.islice(py_iter(d.py_items()),500));
sheet.merge(top_row,bottom_row,left_column,right_column);
export var seq_iter=isinstance(x,dict)?x:range(len(x));
resultlist.append(M.__getslice__(0,null,1));
outfile.write(line);
df1.date=pd.to_datetime(df1.date);
figure(1,__kwargtrans__({figsize:tuple([6,6])}));
self.timer.cancel();
writer.writerow([val]);
print(matrix.data);
os.remove(filename);
a[np.argpartition(-a,np.arange(~np.isnan(a).sum()))];
ws0.write(row,col,value,style);
print(line.strip());
unittest.main();
var __left0__=map(list,zip(...function(){var __accu0__=[];for(var e=0;e<10;e++)__accu0__.append(tuple([e,-e]));return __accu0__}()));var x=__left0__[0];var y=__left0__[1];
writer.writerow([word]);
ax.legend(handles,labels);
session.query(SomeClass).all();
(function(){var __accu0__=[];for(var p of datapoints.__getslice__(0,5,1))__accu0__.append(p[0]);return __accu0__})();
admin.site.unregister(User);
threading.Thread.__init__(self);
np.sum(M,__kwargtrans__({axis:tuple([0,1])}));
bool(np.where(np.array([0,0])));
print(Temperature.value);
export var ROOT_PATH=os.path.py_split(os.path.abspath("./P2JSnippets.py"))[0];
var result=function(){var __accu0__=[];for(var x of orig)if(x)__accu0__.append(x);return __accu0__}();
istr.close();
scipy.stats.chi2_contingency(data);
[true,true,false].count(true);
df.loc[df.Col4.isin(target_array)].index;
list(chain.from_iterable(zip_longest(d,py_reversed(e))));
deletemydict[key];
print(cls.__base__);
root.mainloop();
sys.stdout.flush();
var __left0__=tuple([list(list_1),list(list_2)]);var list_1=__left0__[0];var list_2=__left0__[1];
var my_dictionary=dict(function(){var __accu0__=[];for(var line of f)__accu0__.append(line.py_split());return py_iter(__accu0__)}());
objs.append(MyClass());
export var ans=function(){var __accu0__=[];for(var i of xy)if(i[1]>0)__accu0__.append(i);return __accu0__}();
(function(){var __accu0__=[];for(var i of tableData)__accu0__.append(len(max(i,__kwargtrans__({key:len}))));return __accu0__})();
msg.attach(html_text);
smtp.sendmail(send_from,send_to,msg.as_string());
(function(){var __accu0__=[];for(var x of parser.parse(s)[1])__accu0__.append(int(s.__getslice__(x[1],x[2],1)));return __accu0__})();
setattr(self,attr,val);
np.arange(1E6).dtype;
f.seek(0);
label.destroy();
var out=function(){var __accu0__=[];for(var n=0;n<8;n++)__accu0__.append(num&1<<7-n?1:0);return __accu0__}();
np.pi;
n.append(float(row[8]));
my_list.remove(item);
file.close();
a.__getitem__([tuple([0,5,1]),tuple([0,5,1])]);
time.sleep(1);
sys.exit(app.exec_());
time.sleep(.1);
df[(df<=2).any(__kwargtrans__({axis:1}))];
Counter(words).most_common(10);
list(wrapper(raisinggenfunc()));
plt.show();
export var nine_hours_from_now=datetime.now()+timedelta(__kwargtrans__({hours:9}));
ax1.set_xlim(0,1);
root.mainloop();
do_something();
root.mainloop();
urllib.request.build_opener(HTTPCookieProcessor).open(url);
df2.reset_index(__kwargtrans__({drop:true,inplace:true}));
plt.show();
sys.exit(app.exec_());
row.save();
list_of_tuples;
logging.basicConfig(__kwargtrans__({level:logging.INFO}));
print(self.request.body);
plt.colorbar(im,__kwargtrans__({cax:cax}));
shutil.copy(str(my_file),str(to_file));
plt.show();
print(d[key]);
var response=urllib.request.urlopen(req);
buffer.append(np.ndarray(tuple([len(my_buf)]),__kwargtrans__({buffer:my_buf,dtype:datatype})));
func1(1,2);
(function(){var __accu0__=[];for(var i of l)__accu0__.append(Math.pow(i,2));return __accu0__})();
myDict[x]+=1;
pylab.show();
s.sendmail(me,to,msg.as_string());
export var users_list=function(){var __accu0__=[];for(var x of users_list)__accu0__.append(int(x));return __accu0__}();
ax.set_yticks([]);
export var base_dir=os.path.dirname(os.path.realpath("./P2JSnippets.py"));
var p=function(){var __accu0__=[];for(var [i,[x,y]]of enumerate(zip(a,a.__getslice__(1,null,1))))if(x>y)__accu0__.append(i+1);return __accu0__}();
plt.show();
var c=a+b.__getslice__(0,len(b),1);
export var mask=numpy.repeat(a.__getitem__([tuple([0,null,1]),0])==1,a.shape[1]);
plt.colorbar();
time.sleep(1);
json.dumps(new_D);
printx2();
sys.exit(0);
export var num=int(your_str,8);
map(list,list_of_tuples);
delta.total_seconds();
list(function(){var __accu0__=[];for(var [k,_]of itertools.groupby(k))__accu0__.append(k);return py_iter(__accu0__)}());
str(dec);
top.mainloop();
MyModel.filter(__kwargtrans__({id__in:ids}));
df.loc[~(df==0).all(__kwargtrans__({axis:1}))];
img.putalpha(alpha);
plt.show();
self.__class__(os.path.expanduser(str(self)));
plt.show();
plt.subplots_adjust(__kwargtrans__({left:.2,top:.8}));
QtCore.Qt.ItemIsEditable|QtCore.Qt.ItemIsEnabled;
pd.DataFrame(df.py_values.reshape(-1,2,df.shape[1]).mean(1));
export var doc_df=pd.DataFrame(list(iter_docs(etree)));
sys.path.append(submod_path);
wM.reset();
A.stack(0).dot(twos).unstack();
print(parser.parse_args());
now.py_replace(__kwargtrans__({hour:0,minute:0,second:0,microsecond:0}));
print(df.sort_index(__kwargtrans__({axis:1})));
file.write(content);
var __left0__=my_string.py_split().__getslice__(0,5,1);var a=__left0__[0];var b=__left0__[1];var c=__left0__[2];var d=__left0__[3];var e=__left0__[4];
dir(__builtins__);
forms.ModelForm.__init__(self,...args,__kwargtrans__(kwargs));
export var unique_filename=uuid.uuid4();
connection.close();
window.show_all();
word.__getslice__(1,null,1);
sys.exit(app.exec_());
root.mainloop();
model.objects.filter(__kwargtrans__({id:i[1]})).py_update(__kwargtrans__({order:i[0]}));
x.ravel().tolist()[0];
export var diff=set(dictb.py_keys())-set(dicta.py_keys());
socket.getfqdn();
var rows=csv.reader(f1,__kwargtrans__({delimiter:dialect.delimiter}));
A.__setitem__([np.arange(A.shape[0]),A.shape[1]-1-(A.__getitem__([tuple([0,null,1]),tuple([0,null,-1])])!=0).argmax(1)],0);
pd.DataFrame(zip(a,b),__kwargtrans__({columns:[a.py_name,b.py_name]}));
db.commit();
var p1=Process(__kwargtrans__({target:func1}));
var content=urlopen(url).read();
main();
imshow(data);
pylab.plot(x,y);
(function(){var __accu0__=[];for(var x of collection)__accu0__.append(x);return __accu0__})();
browser.implicitly_wait(10);
canvas.save();
logging.getLogger().handlers[0].setFormatter(formatter);
root.mainloop();
bit_array.setall(0);
app.run(__kwargtrans__({debug:false}));
Math.pow(2,np.arange(m));
(function(){var __accu0__=[];for(var [i,v]of enumerate(bin(109).__getslice__(0,1,-1)))if(int(v))__accu0__.append(Math.pow(2,i));return __accu0__})().__getslice__(0,null,-1);
export var matched=np.array(list(set(arrays[0]).intersection(...arrays.__getslice__(1,null,1))));
map(sum,data);
cursor.execute(query);
x[0][0].append(value1);
A.__getitem__([tuple([0,null,1]),__mod__(np.arange(ncols),A.shape[1])]);
screen.blit(transsurface,tuple([0,0]));
sum(function(){var __accu0__=[];for(var x of frequencies)if(x>0)__accu0__.append(1);return py_iter(__accu0__)}());
con.close();
plt.figure();
len(function(){var __accu0__=[];for(var _f of a_list)if(_f)__accu0__.append(_f);return __accu0__}())>0;
os.unlink(filename);
transmission_array.append(1);
sorted(lst,__kwargtrans__({key:function __lambda__(L){return tuple([L.lower(),L])}}));
yvalues[idx];
print(tuple([k,v]));
print(os.path.dirname(os.path.realpath(sys.argv[0])));
export var magnitudes=np.sqrt(Math.pow(vectors,2).sum(-1)).__getitem__([,np.newaxis]);
export var sid=session.key().id();
yticks[-1].set_visible(false);
var x=np.delete(a,zero_row,0);
User.objects.create_user(__kwargtrans__(data));
var b=function(){var __accu0__=[];for(var i of range(7,-1,-1))__accu0__.append(n>>i&1);return __accu0__}();
export var element=ET.parse(fp);
logger.setLevel(logging.INFO);
ax.invert_yaxis();
locals();
OrderedDict(sorted(list(d.py_items()),__kwargtrans__({key:function __lambda__(t){return len(t[0])}})));
var B=function(){var __accu0__=[];for(var i of A)__accu0__.append(i);return __accu0__}();
sys.stdout.flush();
logging.basicConfig(__kwargtrans__({stream:sys.stdout,level:logging.INFO}));
dict([[x,1],[y,2]]);
data[i][0]=math.sin(data[i][0]);
signal.pause();
os.path.join(...choices.__getslice__(0,-1,1));
a.__getitem__([tuple([0,null,1]),np.newaxis,tuple([0,null,1])])-v;
(function(){var __accu0__=[];for(var x of a)__accu0__.append(tuple(function(){var __accu1__=[];for(var y of x)if(y)__accu1__.append(y);return py_iter(__accu1__)}()));return __accu0__})();
print(max(flatten(l)));
functools.reduce(operator.add,map(collections.Counter,dict1));
setattr(A,the_name,classmethod(func));
max([l1,l2],__kwargtrans__({key:len}));
f.seek(0);
cv2.destroyAllWindows();
random.shuffle(shufflethis);
ax.xaxis.set_major_formatter(ticks);
export var somedict=function(){var __accu0__=[];for(var x of somelist)__accu0__.append([x,1]);return dict(__accu0__)}();
py_next(function(){var __accu0__=[];for(var [i,j]of enumerate(lst))if(j)__accu0__.append(i);return py_iter(__accu0__)}());
pd.concat([total,xtabs],__kwargtrans__({axis:1}));
list(set(function(){var __accu0__=[];for(var s of all_the_ways)__accu0__.append(tuple(sorted(s)));return py_iter(__accu0__)}()));
np.sum(arr,__kwargtrans__({axis:0}));
ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy());
export var id=models.CharField(__kwargtrans__({max_length:10}));
var __left0__=scipy.sparse.linalg.eigs(P,__kwargtrans__({k:1,sigma:1}));var py_values=__left0__[0];export var vectors=__left0__[1];
(function(){var __accu0__=[];for(var [i,x]of enumerate(myList))if(!__in__(i,toRemove))__accu0__.append(x);return __accu0__})();
solve(eqs,[x,y]);
np.intersect1d(A,B);
sys.path.append(os.path.abspath(path));
admin.site.register(Item,ItemAdmin);
conv.ravel();
ax1.imshow([[0,1],[2,0]]);
e[np.all(e-np.array([1,2])==0,__kwargtrans__({axis:2}))];
sc.parallelize(List(line)).collect();
time.timetuple();
s.multiply(sparse.csr_matrix(1/np.sqrt(s.multiply(s).sum(1))));
A.__setslice__(0,null,null,[1,2]);
print(sum(function(){var __accu0__=[];for(var i of flatten_list(x))__accu0__.append(i==1);return py_iter(__accu0__)}()));
obj.save();
print(str(socket.gethostbyname(socket.getfqdn())));
np.std(sample);
os.path.abspath(os.path.dirname("./P2JSnippets.py"));
plt.show();
tuple([np.isnan(y),function __lambda__(z){return z.nonzero()[0]}]);
var b=np.array(function(){var __accu0__=[];for(var word of a)__accu0__.append(list(word));return __accu0__}());
help(parrot.Norwegian);
(function __lambda__(a,b){return a(a,b)})(X,b);
plt.grid();
A.__getitem__([tuple([0,2,1]),tuple([0,2,1])]);
round(2606.89579999999,2);
model.fit(S);
output.write(bytearray(function(){var __accu0__=[];for(var i of yoursequence)__accu0__.append(int(i,16));return py_iter(__accu0__)}()));
export var thumb=base64.b64encode(im.tostring());
np.take(a,b,__kwargtrans__({axis:1}));
export var matches=function(){var __accu0__=[];for(var m of re.finditer(pattern,text))__accu0__.append(m.span());return __accu0__}();
data.py_sort(__kwargtrans__({key:function __lambda__(x){return sorted(function(){var __accu0__=[];for(var i of x)__accu0__.append(tally[i]);return py_iter(__accu0__)}())}}));
np.cumsum(np.bincount(v,__kwargtrans__({minlength:u.size})))-1[v];
cursor.close();
pipeline.fit_transform(data);
ax.plot_surface(X,Y,Z);
(function __lambda__(i){return isinstance(i,tuple([int,float]))});
(function(){var __accu0__=[];for(var x=1;x<5;x++)__accu0__.append([x,x+6]);return dict(__accu0__)})();
np.concatenate([[.2],linspace(1,60,60),[60.8]]);
print(sys.argv[0]);
var __left0__=a.reshape(tuple([a.shape[0],-1,n]));a.shape=__left0__;var a=__left0__;
all(function(){var __accu0__=[];for(var x of my_list)__accu0__.append(x>limit);return py_iter(__accu0__)}());
a.__setslice__(1,null,null,a.__getslice__(1,null,1)-a.__getslice__(0,-1,1));
ax.plot_trisurf(triang,z_refi,__kwargtrans__({cmap:cm.jet,lw:0}));
export var process=subprocess.Popen(cmd,__kwargtrans__({stdout:subprocess.PIPE,stderr:subprocess.PIPE}));
plt.show();
_cache.py_clear();
plt.show();
all(function(){var __accu0__=[];for(var [key,val]of list(kwargs.py_items()))__accu0__.append(getattr(self,key)==val);return py_iter(__accu0__)}());
a.__getitem__([tuple([0,null,1]),tuple([0,null,2])])+a.__getitem__([tuple([0,null,1]),tuple([1,null,2])]);
dict([[k,v]]);
s.close();
pdb.set_trace();
df.apply(function __lambda__(x){return x.argmax()},__kwargtrans__({axis:1}));
var a=[[],[],[],[]];
export var posts=Post.objects.filter(__kwargtrans__({likes__21__exists:true}));
sys.stdout.flush();
list(starmap(add,zip(lst,lst.__getslice__(1,null,1))));
var b=function(){var __accu0__=[];for(var i=0;i<n.bit_length()-1;i++)__accu0__.append(n>>i&1);return __accu0__}();
plt.show();
export var resp=requests.post(url,__kwargtrans__({data:py_values,allow_redirects:true}));
(function(){var __accu0__=[];for(var x of l1)__accu0__.append(tuple(x));return set(__accu0__)})()&function(){var __accu0__=[];for(var x of l2)__accu0__.append(tuple(x));return set(__accu0__)}();
time.sleep(.5);
plt.pcolormesh(x,y,z,__kwargtrans__({cmap:mpl.cm.Reds}));
label.pack(__kwargtrans__({fill:BOTH,expand:1}));
np.isnan([nan,nan]).any();
list(y);
cb.ax.xaxis.set_ticks(minorticks,__kwargtrans__({minor:true}));
var result=requests.py_get(LOGIN_URL,__kwargtrans__({auth:tuple([USERNAME,PASSWORD])}));
plt.show();
self.canvas.pack();
export var alist=function(){var __accu0__=[];for(var row of alist)if(!__in__(2,row))__accu0__.append(row);return __accu0__}();
var __left0__=list(range(1,4));export var one=__left0__[0];export var two=__left0__[1];export var three=__left0__[2];
root.mainloop();
MPI_Finalize();
var posts=Post.objects.filter(__kwargtrans__({tags__in:tags}));
cursor.execute(sql);
file.close();
form.save();
plt.plot(x_list,y_list);
export var first_element=myList[i][0];
sorted(zip(listofTimes,listofLines));
set(list1+list2);
var A=np.array(A);
session.commit();
df2.T.drop_duplicates().T;
plt.show();
pipe.stdin.close();
a.__getslice__(n,n+1,1)+[py_default][0];
pprint.pprint(obj,__kwargtrans__({compact:true}));
A.sum(__kwargtrans__({axis:0}));
ax.get_yaxis().set_minor_locator(mpl.ticker.AutoMinorLocator());
ts.__getslice__(datetime(2011,1,8),null,1);
var b=numpy.vstack(tuple([numpy.zeros(a.shape,int),a]));
print(list(map(function __lambda__(x,y){return x+[y]},A,list(range(1,len(A)+1)))));
conn.commit();
pylab.show();
sum(function(){var __accu0__=[];for(var data of zip(...lists))__accu0__.append(functools.reduce(operator.mul,data));return py_iter(__accu0__)}());
sys.exit(1);
print(s.seconds/60);
(function(){var __accu0__=[];for(var i of set(lst))__accu0__.append(tuple([i,lst.count(i)]));return __accu0__})();
line.__getslice__(5,null,1);
sorted(a,__kwargtrans__({key:my_key}));
var arr=np.array(list_of_arrays);
print(match.group(2));
session.commit();
sum(function(){var __accu0__=[];for(var i=a;i<b+1;i++)if(__mod__(i,2)==0)__accu0__.append(i);return py_iter(__accu0__)}());
nx.draw_networkx_labels(G,pos_higher,labels);
conn.escape_string();
os.path.dirname(f);
random.shuffle(migrant);
numpy.setxor1d(a,b);
df.cumsum();
plt.show();
arr.sum(__kwargtrans__({axis:tuple([0,1])})).shape;
(function(){var __accu0__=[];for(var x of x)if(x[id]==20)__accu0__.append(x);return __accu0__})();
plt.show();
repr(a);
f.seek(0);
py_sort(arr,arr.size);
export var ordered_dictionary=function(){var __accu0__=[];for(var subl of list_of_lists)__accu0__.append(OrderedDict(zip(names,subl)));return __accu0__}();
plt.show();
var element=ET.parse(fp).getroot();
df.drop(df.columns.__getslice__(11,null,1),__kwargtrans__({axis:1}));
Math.pow(2,Math.pow(2,numpy.arange(5)));
pl.show();
a.insert(0,a.py_pop());
root.mainloop();
r.mainloop();
app.run();
print(MyClass());
self.show();
var data=numpy.array(f.read().py_split(),__kwargtrans__({dtype:float})).reshape(7E3,8);
df.mean(__kwargtrans__({axis:1}));
new_dict[key].extend(value);
print(get_lists_with_sum(11,8));
session.expunge_all();
var __left0__=np.mgrid.__getitem__([tuple([0,5,1]),tuple([0,5,1])]);export var xx=__left0__[0];export var yy=__left0__[1];
A.__getitem__([tuple([0,null,-1]),tuple([0,null,1])]);
var ax=fig.add_subplot(1,1,1);
itertools.chain.from_iterable(lists);
np.mean(t,__kwargtrans__({axis:1}));
root.mainloop();
session.query(WhateverClass).filter(WhateverClass._containerClassId==5).all();
driver.quit();
h.setLevel(logging.DEBUG);
np.cos(np.pi*x)*np.sin(np.pi*y);
self.clickcursor.execute(query);
pd.value_counts(list(chain(...df.categories.py_values.tolist())));
plt.show();
A[A==NDV]=numpy.nan;
print(any(function(){var __accu0__=[];for(var i=0;i<len(l)-len(pat)+1;i++)__accu0__.append(l.__getslice__(i,i+len(pat),1)==pat);return py_iter(__accu0__)}()));
pygame.init();
x[np.r_.__getitem__([tuple([0,2,1]),tuple([-2,0,1])])];
print(s.tell());
time.sleep(5);
export var dest=dict(list(orig.py_items())+list(extra.py_items()));
print(my_new_list);
df.loc.__setitem__([row,key],data[key]);
pipeline.steps[1][1];
dir(request.body);
df[df>16&mask];
xvfb.wait();
print(new_string);
var files=function(){var __accu0__=[];for(var f of os.listdir(dirToScreens))if(path.isfile(f))__accu0__.append(f);return __accu0__}();
(function(){var __accu0__=[];for(var _=0;_<4;_++)__accu0__.append(random.randrange(1,10));return __accu0__})();
root.mainloop();
sys.stdout.flush();
plt.show();
sum(function(){var __accu0__=[];for(var i of x)if(i)__accu0__.append(1);return py_iter(__accu0__)}());
var x=__mod__(x+y,48);
export var isascii=function __lambda__(s){return len(s)==len(s.encode())};
export var users=models.ManyToManyField(Users);
(function(){var __accu0__=[];for(var i of range(0,len(l),n))__accu0__.append(l.__getslice__(i,i+n,1));return __accu0__})();
pprint.pprint(obj,__kwargtrans__({depth:1}));
req.close();
hash(self.__key__());
a.__getitem__(slice(0,1)).__getitem__(0).__setitem__(0,5);
var app=create_app();
len(set(a))==len(a)&&len(a)==max(a)&&min(a)==1;
time.sleep(1);
print(etree.tostring(page,__kwargtrans__({pretty_print:true})));
sess.run(train_op);
label.pack();
site.delete(os.path.join(path,ftpfile.py_name));
(dt-datetime(1970,1,1)).total_seconds();
ax1.set_zorder(1);
np.any(0<x&x<1);
gtk.main();
(function(){var __accu0__=[];for(var [a,b]of zip(aa,bb))if(a==b)__accu0__.append(a);return __accu0__})();
issubclass(C,A);
fig.tight_layout();
var df=pd.concat([df,pd.DataFrame(new_data)]);
matplotlib.get_backend();
conn.commit();
(function(){var __accu0__=[];for(var i of range(0,len(s),2))__accu0__.append(s.__getslice__(i,i+2,1));return __accu0__})();
os.path.basename(f.py_name);
p.start();
any(function(){var __accu0__=[];for(var x of zip(...arr))__accu0__.append(x.__getslice__(1,null,1)==x.__getslice__(0,-1,1));return py_iter(__accu0__)}());
df.stack().reset_index(1);
self.assertEqual(0,os.getpid());
var __left0__=tuple([my_array.__getitem__([tuple([0,null,1]),1]),my_array.__getitem__([tuple([0,null,1]),0]).copy()]);my_array.__setitem__([tuple([0,null,1]),0],__left0__);my_array.__setitem__([tuple([0,null,1]),1],__left0__);
df.shape[1];
len(df);
export var utc_dt=datetime(1970,1,1)+timedelta(__kwargtrans__({seconds:timestamp}));
cts.minute==0&&cts.second==0;
[0]*10;
pyplot.show();
fragments;
export var locations=sorted(list(range(len(A))),__kwargtrans__({key:A.__getitem__}));
sys.stdout.flush();
var root=tree.getroot();
ax.xaxis.set_major_locator(myLocator);
print(min(Mylist,__kwargtrans__({key:function __lambda__(x){return x[1]}})));
tup[0]=tup[0].__iadd__(tuple([4,5,6]));
Gtk.main();
python-devel;
ax.set_xlim(1,11);
plt.draw();
(function(){var __accu0__=[];for(var i of np.nonzero(a)[0])__accu0__.append([i,a[i]]);return dict(__accu0__)})();
(function(){var __accu0__=[];for(var i of txt.py_split(default_sep))__accu0__.append(i.strip());return __accu0__})();
p.wait();
tmp.__setitem__([tuple([0,null,1]),tuple([0,-1,1])],tmp.__getitem__([tuple([0,null,1]),tuple([0,-1,1])])+a.__getitem__([tuple([0,null,1]),tuple([1,null,1])]));
plt.show();
export var l2=zip(l1.__getslice__(0,null,2),l1.__getslice__(1,null,2));
plt.show();
var newD=dict(zip(list(d.py_keys()),function(){var __accu0__=[];for(var v of list(d.py_values()))__accu0__.append(round(v));return __accu0__}()));
self.save();
gtk.main_quit();
A.__getitem__([tuple([tuple([0]),tuple([1])]),B]);
int(t[0],2)+int(t[1],2)/Math.pow(2,len(t[1]));
print(function(){var __accu0__=[];for(var i of s.py_split())__accu0__.append(int(i)+1);return __accu0__}());
df.apply(calculateC2,__kwargtrans__({axis:1}));
window.show();
pdb.set_trace();
var str=str.__getslice__(0,1,1).upper()+str.__getslice__(1,null,1);
collections.OrderedDict(sorted(result.py_items()));
10();
f.close();
plt.show();
var x=__mod__(x+y,48);
df_with_x5.show();
export var array2=function(){var __accu0__=[];for(var i of array2)if(!__in__(i,array1))__accu0__.append(i);return __accu0__}();
t2c.main();
sorted(py_get,__kwargtrans__({key:sortkey}));
plt.show();
sys.exit(app.exec_());
requests.py_get(url);
os.remove(filename);
watchout();
skycake();
plt.show();
func(self,...args,__kwargtrans__(kwargs));
show();
foo.py_update(list(range(2,6)));
pg.mixer.set_num_channels(50);
df.mask(np.arange(df.shape[0])>=np.arange(df.shape[1]).__getitem__([tuple([0,null,1]),np.newaxis]));
(function(){var __accu0__=[];for(var i=0;i<len(choices);i++)__accu0__.append(os.path.join(root,...choices.__getslice__(0,i+1,1)));return __accu0__})();
print(iter2(A.copy(),rc1,rc2));
df.loc[target_index];
var b=a.__getslice__(0,2,1);
dsp.close();
root.mainloop();
np.nanmean(data,__kwargtrans__({axis:0}));
Counter(test.py_split()).most_common();
print(df.sum().sum());
isinstance(dates,pd.DatetimeIndex);
df.columns=function(){var __accu0__=[];for(var i of df.columns.py_values.tolist())__accu0__.append(str(i));return __accu0__}();
canvas.pack();
(my_array.__getslice__(0,-1,1)*my_array.__getslice__(1,null,1)<0).sum();
reactor.run();
isdeployed.strip();
print(a[0][0]);
list(set(a)&set(b));
ws.write(rowi,coli,converters[coli](value));
array([[-1,-2,-1,2],[1,0,1,4]]);
plt.show();
sys.exit();
do_something();
x.__getitem__([tuple([0,null,2]),tuple([1,null,2])]);
(function(){var __accu0__=[];for(var i of np.argsort(a).__getslice__(-2,null,1))__accu0__.append(a[i]);return __accu0__})();
plt.show();
np.allclose(r1,r2);
emp.save();
f.seek(0);
os.makedirs(dir);
os.makedirs(mypath);
var __left0__=f();var list1=__left0__[0];export var list2=__left0__[1];
pygame.joystick.init();
plt.gcf().canvas.get_supported_filetypes_grouped();
df.reindex(stk_list,__kwargtrans__({level:0}));
deletec[0];
plt.show();
os.remove(i);
plt.show();
func();
print(etree.tostring(root,__kwargtrans__({pretty_print:true})));
var d=dict(map(str.py_split,list1));
np.array([arr.__getitem__([[0,n],tuple([0,null,1])]),arr.__getitem__([tuple([0,null,1]),[0,n]]).T]).ravel();
random.choice([true,false]);
(function(){var __accu0__=[];for(var [x,_]of lst)__accu0__.append(x);return __accu0__})();
(abs(x)+x)/2;
export var mydtype=np.dtype(tuple([np.void,arr.dtype.itemsize*arr.shape[1]*arr.shape[2]]));
cgi.parse_qsl(qs);
dict1.py_update(function(){var __accu0__=[];for(var key of list(dict2.py_keys()))__accu0__.append(tuple([key,dict2[key]]));return __accu0__}());
pd.read_csv(StringIO(s),__kwargtrans__({parse_dates:[0],date_parser:parser}));
blogpost.tags.__setslice__(0,null,null,new_tags);
redirect(request.path);
sys.path.append(os.path.normpath(os.path.join(SCRIPT_DIR,PACKAGE_PARENT)));
export var csvdata_old=csvdata.copy();
export var losses=tf.reshape(tf.concat(1,losses),[-1,size]);
root.mainloop();
dict(zip(range(1,5),count(7)));
plt.show();
var __left0__=zip(...function(){var __accu0__=[];for(var l of f)__accu0__.append(l.py_split());return __accu0__}());var x=__left0__[0];var y=__left0__[1];
len(set(map(tuple,M)))==len(M);
Superlist.__init__;
plt.show();
admin.site.register(Product,padmin);
test();
plt.show();
var s=sorted(s,__kwargtrans__({key:operator.itemgetter(1,2)}));
y[1<x&x<5];
pg.init();
var __left0__=map(list,zip(...data));export var first_elements=__left0__[0];export var second_elements=__left0__[1];
export var key_precedence=dict(function(){var __accu0__=[];for(var [n,x]of enumerate(string_list))__accu0__.append(tuple([x,n]));return py_iter(__accu0__)}());
ax.set_zlim(-10,0);
writer.writerow(row);
result.extend(list(t));
logger.setLevel(logging.DEBUG);
time.sleep(1);
plt.show();
(function(){var __accu0__=[];for(var x of data_set.to_records(__kwargtrans__({index:false})))__accu0__.append(tuple(x));return __accu0__})();
plt.show();
plt.show();
export var fts=ustyle.create_featuretypestyle();
a.add([1,2]);
os.path.join(os.path.dirname(parent),template);
time.mktime(datetime_object.timetuple());
employee.license_set.all();
inspect.getargspec(g);
cherrypy.quickstart(Root());
conn.close();
var ax=fig.add_subplot(111);
os.close(f);
(function(){var __accu0__=[];for(var i of sequence_list)for(var j of rex.py_split(i))__accu0__.append(j);return __accu0__})();
result.__setitem__([tuple([0,a.shape[0],1]),tuple([0,a.shape[1],1])],a);
func();
widget2.grid(__kwargtrans__({row:0,column:1}));
numpy.linalg.norm(A-B,numpy.inf);
f.seek(0,0);
nx.draw(G);
QtNetwork.QSslSocket.supportsSsl();
var p=subprocess.Popen(cmd,__kwargtrans__({stdout:subprocess.PIPE,shell:true}));
plt.show();
set(map(itemgetter(0),l1))&set(map(itemgetter(0),l2));
etree.fromstring(s,__kwargtrans__({parser:utf8_parser}));
m2[np.array(m2.__getitem__([tuple([0,null,1]),1])>10).__getitem__([tuple([0,null,1]),0])];
request.user_agent;
pckl_file.close();
shutil.rmtree(sub_folder);
(function(){var __accu0__=[];for(var i of input_elements)__accu0__.append(my_array+[i]);return __accu0__})();
pygame.font.init();
sympy.solve(l-r,c);
np.random.seed(0);
self.worker.start();
var a=function(){var __accu0__=[];for(var _=0;_<COLUMNS;_++)__accu0__.append(function(){var __accu1__=[];for(var _=0;_<ROWS;_++)__accu1__.append(0);return __accu1__}());return __accu0__}();
print(sys._getframe().f_code.co_name);
(function(){var __accu0__=[];for(var x=0;x<10;x++)if(x<7)__accu0__.append(Math.pow(x,2));return __accu0__})();
thingy1.f();
self.panel=wx.Panel(self);
var f=anotherdecorator(function __lambda__(x){return x*2});
np.ma.array(a,__kwargtrans__({mask:mask}));
ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy());
json.dump(data,sys.stdout,__kwargtrans__({indent:2}));
(function(){var __accu0__=[];for(var x of lst)if(!__in__(float(x.py_split()[-1]),s))__accu0__.append(x);return __accu0__})();
export var sess=tf.Session(__kwargtrans__({config:tf.ConfigProto(__kwargtrans__({log_device_placement:true}))}));
StringIO();
ax2.set_ylim([0,1]);
r.destroy();
str1.py_replace(str2,str2.upper());
self.transport.write(data.encode());
np.array(lists);
(function(){var __accu0__=[];for(var y of a)__accu0__.append(!__in__(y,b)?y:other_value);return __accu0__})();
array([[100,200],[255,255]],__kwargtrans__({dtype:uint16}));
np.in1d(a,[14,16,18]);
t.start();
parser.parse_args(read_my_file(sys.argv.__getslice__(1,null,1)));
export var l1=np.array([a1,b1]);
root.mainloop();
plt.show();
browser.py_get(url);
measure.grid(__kwargtrans__({row:0,column:0}));
root.mainloop();
session.commit();
os.close(fh2);
var value=py_next(function(){var __accu0__=[];for(var [i,v]of enumerate(d.py_values()))if(i==index)__accu0__.append(v);return py_iter(__accu0__)}());
m.__getitem__([tuple([0,null,1]),tuple([0,1,1])]).shape;
pl.show();
(function(){var __accu0__=[];for(var x of list1)__accu0__.append(x[0]);return set(__accu0__)})()&function(){var __accu0__=[];for(var y of list2)__accu0__.append(y[0]);return set(__accu0__)}();
out_im.putpalette(tuple([0,0,0,255,0,0,0,255,0,255,255,0]));
tmp.__setitem__([tuple([0,null,1]),tuple([1,null,1])],tmp.__getitem__([tuple([0,null,1]),tuple([1,null,1])])+a.__getitem__([tuple([0,null,1]),tuple([0,-1,1])]));
os.path.abspath(os.path.expanduser(path));
fwrite.close();
var f=function __lambda__(X,model){return cost(X,model,__kwargtrans__(__mergekwargtrans__({sparse:np.random.rand(10,10)},kw)))};
var e=py_next(py_iter(S));
plt.show();
sorted(L,__kwargtrans__({key:function __lambda__(x){return x[0]/(x[1]*1)}}));
self.main();
(df*weight[0]).sum(1);
pygame.draw.rect(screen,black,tuple([0,0,width,height]),0);
int(n);
test();
var dest=dict(chain.from_iterable(map(dict.py_items,list_of_dicts)));
self.__dict__.py_update(b);
pickle.load(f);
df[df.apply(pd.Series.nunique,__kwargtrans__({axis:1}))==1];
sorted(l1);
var driver=webdriver.Firefox(__kwargtrans__({capabilities:caps,firefox_profile:profile}));
msg.send();
plt.hist(a,bins);
p.poll();
logger.setLevel(logging.DEBUG);
f.close();
f.close();
var x=Example();
file.write(port.read());
pygame.quit();
tuple([210.184175597721,210.184175597721,210.184175597721,210.184175597721]);
print(test());
QtGui.QWidget.__init__(self);
time.sleep(5);
metadata.reflect(engine);
map(function __lambda__(x){return f(x,fixed)},srclist);
f.close();
br.set_handle_refresh(mechanize._http.HTTPRefreshProcessor(),__kwargtrans__({max_time:1}));
os.path.getsize(path);
plt.show();
f.close();
os.unlink(path);
ax.add_patch(circle1);
df.columns=col_list;
gtk.main();
QTcpSocket.__init__(self);
var A=dot(A,R.T);
(function(){var __accu0__=[];for(var [x,y]of grouper(2,q))__accu0__.append(x+y);return __accu0__})();
ssh.close();
(function(){var __accu0__=[];for(var x of r)for(var y of r)if(x+2==y)__accu0__.append(tuple([x,y]));return set(__accu0__)})();
var date=models.DateTimeField();
wx.Icon(sys.argv[0],wx.BITMAP_TYPE_ICO);
(function(){var __accu0__=[];for(var x=0;x<8;x++)__accu0__.append([0]*8);return __accu0__})();
unittest.main(__kwargtrans__({argv:[sys.argv[0]]}));
var array2=function(){var __accu0__=[];for(var x of array1)__accu0__.append(int(x==4));return __accu0__}();
plt.show();
root.mainloop();
html.escape(string);
max(function(){var __accu0__=[];for(var item of alkaline_earth_values)__accu0__.append(item[1]);return py_iter(__accu0__)}());
sorted(list(d.py_items()),function __lambda__(a,b){return b[1]-a[1]||a[0]-b[0]});
export var numbers=function(){var __accu0__=[];for(var n of numbers)if(n>=20)__accu0__.append(n);return __accu0__}();
(function(){var __accu0__=[];for(var i of y)__accu0__.append(i<0?py_next(z):i);return __accu0__})();
proc.wait();
arr.tolist();
print(Model.objects.py_get(__kwargtrans__({pk:1})).ranking);
equation1(__kwargtrans__(dict_of_parameters));
var n=np.apply_along_axis(np.linalg.norm,1,a);
(function(){var __accu0__=[];for(var [x,y]of zip(it,it1))__accu0__.append(tuple([x,y]));return __accu0__})();
my_list.insert(index,item);
set([tuple([4,5]),tuple([2,2,5]),tuple([1,20]),tuple([2,10])]);
f2.close();
writer.writerow(row);
self.assertEqual(2,0);
f1.writelines(lines);
A.extend(B);
connection.close();
root.deiconify();
cv2.rectangle(eroded,tuple([0,0]),tuple([x,y]),tuple([255,255,255]),1);
var df=pandas.concat([df1,df2],__kwargtrans__({axis:1}));
export var X_test=scaler.transform(X_test);
a[a.argsort().__getslice__(-10,null,1)];
QtGui.QTableView.__init__(self,...args,__kwargtrans__(kwargs));
[[4,2,6],[8,10,12],[6,8,6]];
list(x);
test[1].index+pd.DateOffset(__kwargtrans__({hours:16}));
(function(){var __accu0__=[];for(var x of list_of_nums)__accu0__.append((x+(x-1))/2);return __accu0__})();
print(input[indices[0<=indices&indices<5]]);
f.close();
d.py_pop(your_key);
plt.show();
var result=(M.__getitem__([tuple([0,null,1]),tuple([0,9,1])])*N.__getitem__([tuple([0,9,1]),tuple([0,null,1])]).T).sum(1);
queue.Queue(__kwargtrans__({maxsize:0}));
(function __lambda__(i){return function __lambda__(x){return __mod__(x,i)}})(i);
session.query(inc_type_md_col).filter(cnt_col>0);
zip(itertools.repeat(ls[0]),ls.__getslice__(1,null,1));
plt.colorbar();
window.show_all();
ax.set_ylim([0,5]);
self.process.start();
var result=function(){var __accu0__=[];for(var [key,value]of dict.py_items())if(value==min_value)__accu0__.append(key);return __accu0__}();
dict.fromkeys(list(range(2)),object());
plt.plot(x,y1);
main();
f.flush();
plt.show();
(function(){var __accu0__=[];for(var v of sorted(list(dict.py_items()),__kwargtrans__({key:function __lambda__(k_v){return tuple([-k_v[1],k_v[0]])}})))__accu0__.append(v[0]);return __accu0__})();
print(template.render());
print(json.dumps(jsonobj));
string.ascii_uppercase+string.digits;
any(function(){var __accu0__=[];for(var x of myarray)__accu0__.append((myrow1==x).all());return py_iter(__accu0__)}());
pandas.read_csv(s);
var __left0__=tuple([y,x+y]);var x=__left0__[0];var y=__left0__[1];
var y=function(){var __accu0__=[];for(var i of x)for(var j=0;j<len(i);j++)__accu0__.append(i[j]);return __accu0__}();
var my_list=list(my_set);
all(function(){var __accu0__=[];for(var x of iseq)__accu0__.append(py_typeof(x)===first_type);return py_iter(__accu0__)}())?first_type:false;
time.sleep(5);
any(function(){var __accu0__=[];for(var t of month.__getslice__(1,null,1))__accu0__.append(t.isupper());return py_iter(__accu0__)}());
random.choice(string.ascii_letters+string.digits);
list(function(){var __accu0__=[];for(var x of mylist)if(__in__(x,pattern))__accu0__.append(x);return __accu0__}());
sum(function(){var __accu0__=[];for(var [i,j]of zip(v1,v2))__accu0__.append(i*j);return py_iter(__accu0__)}());
sum(map(function __lambda__(x,y){return bool(x-y)},a,b));
export var tfactory=TTransport.TBufferedTransportFactory();
print(list(Counter(l).py_items()));
var s=sum(function(){var __accu0__=[];for(var [a,b]of zip(list_1,list_2))if(a)__accu0__.append(b);return py_iter(__accu0__)}());
sys.exit(1);
model.objects.all();
var data=np.random.randint(0,10,__kwargtrans__({size:tuple([1E5,2])}));
print(sys.version);
a.append(tuple([1,2,4]));
var df=df.reindex(__kwargtrans__({columns:cols}));
exp.evalf(__kwargtrans__({subs:dict([[a,6],[b,5],[c,2]])}));
export var tup=tuple(function(){var __accu0__=[];for(var element of alist)__accu0__.append(tuple([element.foo,element.bar]));return py_iter(__accu0__)}());
settings.__dict__;
A.data=np.array([10,6]);
master.mainloop();
export var params=function(){var __accu0__=[];for(var arg of self.request.py_arguments())__accu0__.append([arg,self.request.get_all(arg)]);return dict(__accu0__)}();
dict(function(){var __accu0__=[];for(var i of L)__accu0__.append(list(i.py_items())[0]);return py_iter(__accu0__)}());
var A=P*D.sum(__kwargtrans__({axis:1}))-D.dot(P);
plt.hist(x,__kwargtrans__({bins:20}));
subprocess.Popen(cmd).communicate();
test();
map(max,arr);
mail.Send();
var data=np.arange(-50,50,10);
df.eq(df.iloc.__getitem__([tuple([0,null,1]),0]),__kwargtrans__({axis:0}));
ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy());
plt.show();
var __left0__=process.communicate();export var stdout=__left0__[0];export var stderr=__left0__[1];
sorted(d,__kwargtrans__({key:function __lambda__(i){return int(d[i])}}));
self._droplock();
new_foo.append(item);
var e=function(){var __accu0__=[];for(var x of eagles)__accu0__.append(x[0]);return __accu0__}();
(function(){var __accu0__=[];for(var [key,group]of groupby(li))if(len(tuple(group))==1)__accu0__.append(key);return __accu0__})();
np.unravel_index(match_indices,result.shape);
pd.DataFrame(res);
session.commit();
(function(){var __accu0__=[];for(var val of np.unique(B))__accu0__.append(tuple([val,np.sum(A[B==val])]));return __accu0__})();
plt.show();
plt.show();
itertools.product(list(C.py_items()),__kwargtrans__({repeat:2}));
instance.save();
hey();
hist(b.ravel().astype(np.uint8),__kwargtrans__({bins:255,range:tuple([0,255])}));
(function(){var __accu0__=[];for(var [k,v]of list(dictionary.py_items()))if(begin<=k&&k<=end)__accu0__.append([k,v]);return dict(__accu0__)})();
var first=l.py_pop(0);
tkmc.close();
var cleaned=function(){var __accu0__=[];for(var i of function(){var __accu1__=[];for(var word of words)__accu1__.append(word.strip());return py_iter(__accu1__)}())if(i)__accu0__.append(i);return __accu0__}();
f.close();
G.data=np.ones(G.nnz);
time.sleep(1);
var ax=fig.add_subplot(111);
tuple([function __lambda__(a,b){return b>0?b*a(a,b-1):1},b]);
sys.getsizeof(s);
(function(){var __accu0__=[];for(var s of sets)__accu0__.append(list(s));return __accu0__})();
ser.close();
clf.fit(X,y);
plt.subplots_adjust(__kwargtrans__({bottom:.17}));
bool(my_list);
os._exit(1);
__init__.py;
(function(){var __accu0__=[];for(var x of l)__accu0__.append(x>=45?x+1:x+5);return __accu0__})();
tornado.ioloop.IOLoop.instance().start();
print(list(mydict.py_keys())[list(mydict.py_values()).index(16)]);
plt.show();
var sock=socket.socket(socket.AF_INET,socket.SOCK_DGRAM);
id(copy_my_list[0])==id(my_list[0]);
x.append(i);
df1.py_sort(__kwargtrans__({axis:1}))==df2.py_sort(__kwargtrans__({axis:1}));
var my_list=list(my_set);
solve(my_func,16);
int(a);
df.groupby(df.columns.tolist(),__kwargtrans__({as_index:false})).size();
frame.show();
__init__.py;
setattr(self,py_name,number);
var a=db.ReferenceProperty(A);
d+datetime.timedelta(__kwargtrans__({hours:8}));
sys.path.py_pop(0);
b.remove(i);
print(function(){var __accu0__=[];for(var x of words)if(len(x)>average)__accu0__.append(x);return __accu0__}());
sorted(text,__kwargtrans__({key:function __lambda__(x){return tuple([str.lower(x),x])}}));
plt.show();
distance[0][1][2];
fig.set_size_inches(18.5,10.5,__kwargtrans__({forward:true}));
(function(){var __accu0__=[];for(var [k,v]of zip(list(range(1,5)),list(range(7,11))))__accu0__.append([k,v]);return dict(__accu0__)})();
p.start();
self.setWindowFlags(QtCore.Qt.Tool);
print(function(){var __accu0__=[];for(var x of a)if(counts[x]>=2)__accu0__.append(x);return __accu0__}());
sys.stderr=sys.__stderr__;
__init__.py;
QMainWindow.__init__(self,parent);
x2.__setitem__([tuple([0,null,1]),4],np.roll(x2.__getitem__([tuple([0,null,1]),4]),2));
print(is_list_of_strings(i));
time.sleep(5);
e/e.sum(__kwargtrans__({axis:1,keepdims:true}));
subprocess.Popen(cmd);
plt.show();
var x=x.__getslice__(0,-1,1);
__builtins__.set;
var ax=fig.add_subplot(111);
!set(a).isdisjoint(b);
br.submit();
print(w.readline().strip());
l.py_sort(__kwargtrans__({key:function __lambda__(x){return x[1]}}));
ax2.set_ylim(0,10);
platform.system();
setattr(obj,prop_list[0],something);
centroids.append(tuple([x,y]));
plt.show();
random.sample(list(enumerate(a)),5);
export var dtwithoutseconds=dt.py_replace(__kwargtrans__({second:0,microsecond:0}));
plt.show();
sys.version;
export var received_json_data=json.loads(request.body);
var soup=BeautifulSoup(page);
var line=line.__getslice__(2,null,1);
main.run();
p.start();
lst.__setslice__(0,null,null,function(){var __accu0__=[];for(var v of lst)if(pred(v))__accu0__.append(v);return __accu0__}());
(function(){var __accu0__=[];for(var x of L)if(!any(function(){var __accu1__=[];for(var y of L)if(x!==y)__accu1__.append(set(x)<=set(y));return py_iter(__accu1__)}()))__accu0__.append(x);return __accu0__})();
plt.subplots_adjust(__kwargtrans__({wspace:.001}));
n.__setslice__(0,null,null,function(){var __accu0__=[];for(var a of n)__accu0__.append(function(){var __accu1__=[];for(var b of a)__accu1__.append(b-1);return __accu1__}());return __accu0__}());
export var data_file=models.FileField(__kwargtrans__({upload_to:content_path}));
urllib.request.urlopen(request).read();
self.socket.setsockopt(socket.SOL_SOCKET,socket.SO_REUSEADDR,1);
logger.setLevel(logging.DEBUG);
np.random.uniform(5,10);
export var key=py_next(py_iter(d));
plt.show();
clf.fit(X);
reactor.run();
unittest.main();
var df=df.loc[mask];
plt.show();
main();
df.head();
export var j2=function(){var __accu0__=[];for(var i of j)if(i>=5)__accu0__.append(i);return __accu0__}();
time.sleep(.5);
rf.merge_arrays(tuple([arr,x]),__kwargtrans__({flatten:true}));
set(x)==set(y);
var X_test=sc.transform(X_test);
json.dumps(d);
var form=MyForm(__kwargtrans__({questions:your_list_of_questions}));
print(Matrix[x][y]);
ser.close();
isinstance(b,Test2);
normal_dist.set_shape([input_data.get_shape()[1],labels.get_shape()[1]]);
sys.stdout.write(REVERSE+CYAN);
var a=np.array([d]);
IOLoop.instance().start();
export var married=models.CharField(__kwargtrans__({max_length:1,choices:MAYBECHOICE}));
print(function(){var __accu0__=[];for(var obj of gc.get_objects())if(isinstance(obj,potions))__accu0__.append(obj.py_name);return __accu0__}());
QtCore.Qt.ItemIsEditable|QtCore.Qt.ItemIsEnabled;
csv_writer.writerow(function(){var __accu0__=[];for(var i of cursor.description)__accu0__.append(i[0]);return __accu0__}());
var py_values=function(){var __accu0__=[];for(var x of py_values)__accu0__.append(max(x,0));return __accu0__}();
HttpResponse(simplejson.dumps(data_dict));
list(csv.reader(s,__kwargtrans__({skipinitialspace:true})));
(function(){var __accu0__=[];for(var x of listD[0])__accu0__.append(x[0]);return __accu0__})();
workbook.close();
print(hex(new_int));
df;
mylist.__setslice__(0,null,null,function(){var __accu0__=[];for(var x of mylist)__accu0__.append(!x);return __accu0__}());
ax.set_axis_bgcolor(tuple([1,0,0]));
random.sample(s,1)[0];
var c=function(){var __accu0__=[];for(var t of zip(a,b))for(var item of t)__accu0__.append(item);return __accu0__}();
ax.margins(.2);
setup.py;
ssh.connect(server,__kwargtrans__({username:username,password:password}));
var ordered=function(){var __accu0__=[];for(var item of ordered)if(__in__(item,unordered))__accu0__.append(item);return __accu0__}();
(function(){var __accu0__=[];for(var [i,row]of df.iterrows())__accu0__.append(OrderedDict(row));return __accu0__})();
var c=dict.fromkeys(s,0);
print(datetime.utcfromtimestamp(tai_timestamp));
var __left0__=tuple([b.__getitem__([tuple([0,null,1]),0,0]),a.__getitem__([tuple([0,null,1]),0,0]).copy()]);a.__setitem__([tuple([0,null,1]),0,0],__left0__);b.__setitem__([tuple([0,null,1]),0,0],__left0__);
fout.close();
data.reset_index(__kwargtrans__({drop:true}));
export var vals=numpy.delete(vals,numpy.where(a),__kwargtrans__({axis:0}));
(function(){var __accu0__=[];for(var num of list1)__accu0__.append(sum(function(){var __accu1__=[];for(var c of str(num))__accu1__.append(int(c));return py_iter(__accu1__)}()));return __accu0__})();
list(map(hash,list(range(1,6))));
nx.has_path(G,1,5);
user.save();
var date=models.DateTimeField(__kwargtrans__({py_default:datetime.now,blank:true}));
df1.combine_first(df2);
s.tolist();
wx.Frame.__init__(self,parent,id,title);
plt.show();
A-mean.reshape(mean.shape[0],1);
app.run();
plt.show();
plt.show();
len(alist)-alist.__getslice__(-1,null,-1).index(value)-1;
file.write(unicode_text);
root.mainloop();
regr.fit(Xtrain,ytrain);
plt.show();
df.rolling(__kwargtrans__({window:10})).mean().applymap(round).shift();
os.kill(process.pid,signal.SIGINT);
circular();
export var final_l=[];
(function(){var __accu0__=[];for(var i=0;i<len(bv);i++)if(bv[i])__accu0__.append(i);return __accu0__})();
plt.draw();
f.write(line);
export var query=session.query(TestUser).filter(TestUser.numbers.any(25)).all();
self.process.terminate();
sorted(A,__kwargtrans__({key:A.py_get}));
var df=pd.DataFrame(data,__kwargtrans__({columns:columns}));
plt.figure(__kwargtrans__({figsize:[6,6]}));
var driver=webdriver.Chrome(__kwargtrans__({chrome_options:options}));
hist(b.ravel().astype(np.uint8),__kwargtrans__({bins:255}));
var my_list=list(the_tuple);
ax1.xaxis.set_visible(false);
self.root.mainloop();
login(request,user);
var result=re.sub(regex,subst,file_contents);
Foo._bar();
(function(){var __accu0__=[];for(var x of workList)__accu0__.append(random.shuffle(x));return __accu0__})();
plt.show();
export var pi=Math.pow(a+b,2)/(4*t);
var l=l[0]+tuple([l[1]]);
plt.show();
df.to_excel(ew);
a.__getitem__([,[1,1]]);
(function(){var __accu0__=[];for(var i of indices)__accu0__.append(tuple([s[i],i]));return __accu0__})();
var d=dict(list(row.py_items()));
export var rgb=np.dstack(tuple([r,g,b]));
ax.xaxis.set_ticks(x);
a-a.min(__kwargtrans__({axis:0}));
infloop();
sys.exit(app.exec_());
root.mainloop();
np.minimum(arr,255,__kwargtrans__({out:arr}));
sorted(list(range(len(K))),__kwargtrans__({key:function __lambda__(x){return K[x]}})).__getslice__(-5,null,1);
plt.xlim(-1,1);
tf.multiply(x,y).eval();
elements.append(table);
export var primes=list(range(2,20));
export var found=any(function(){var __accu0__=[];for(var line of file)__accu0__.append(__in__(word,line.py_split()));return py_iter(__accu0__)}());
pdb.set_trace();
app.MainLoop();
var form=CModelForm(UPOST(request.POST,c_instance),__kwargtrans__({instance:c_instance}));
time.sleep(1);
df.a/df.b.py_replace(dict([[0,np.nan]]));
zip(np.nonzero(starts)[0],np.nonzero(ends)[0]);
print(pandas.concat([s1,s2],__kwargtrans__({axis:1})).min(__kwargtrans__({axis:1})));
my_dict.py_clear();
xlbook.close();
(function(){var __accu0__=[];for(var i=0;i<len(seq)-n+1;i++)__accu0__.append(seq.__getslice__(i,i+n,1));return __accu0__})();
export var h=function(){var __accu0__=[];for(var [k,v]of l)__accu0__.append([k,v]);return dict(__accu0__)}();
(function(){var __accu0__=[];for(var [key,group]of groupby(a))__accu0__.append(len(list(group)));return __accu0__})();
do_something();
1-residual/sum(Math.pow(y-y.mean(),2));
ax.set_xlim(ts.index.min(),ts.index.min()+24);
df.fillna(0,__kwargtrans__({inplace:true}));
all(function(){var __accu0__=[];for(var [x,y]of zip(L,L.__getslice__(1,null,1)))__accu0__.append(x<=y);return py_iter(__accu0__)}());
time.sleep(1);
plt.show();
var y=int(x,16);
layout.setContentsMargins(20,0,20,0);
[8,5,6];
root.mainloop();
os.rename(tmpFile,myFile);
lst.py_sort(__kwargtrans__({key:itemgetter(1),reverse:true}));
admin.site.register(TestModel,TestModelAdmin);
print(etree.tostring(tag,__kwargtrans__({pretty_print:true})));
var root=Tk();
plt.tight_layout();
os.killpg(os.getpgid(p.pid),signal.SIGTERM);
sys.exit(app.exec_());
Math.pow(a.__getitem__([tuple([0,null,1]),np.newaxis,tuple([0,null,1])])-v,2).sum(__kwargtrans__({axis:-1})).min(__kwargtrans__({axis:0})).sum();
time.sleep(x);
(function(){var __accu0__=[];for(var [start,end]of zip(slices.__getslice__(0,null,2),slices.__getslice__(1,null,2)))__accu0__.append(index.__getslice__(start,end,1));return __accu0__})();
export var uniq_animal_groups=function(){var __accu0__=[];for(var t of set(map(tuple,animal_groups)))__accu0__.append(list(t));return __accu0__}();
df.append(dm2);
var df=df.reset_index();
(function(){var __accu0__=[];for(var i of x)if(60<i&&i<70)__accu0__.append(1);return py_iter(__accu0__)})();
plt.plot(x,y);
var __left0__=do_something();var a=__left0__[0];var b=__left0__[1];var c=__left0__[2];
bane.astype(np.float).view(np.complex64);
self.configure(__kwargtrans__({width:width,height:height}));
plt.clabel(cs,__kwargtrans__({inline:1,fontsize:9}));
py_keys.py_sort(function __lambda__(x,y){return cmp(dict[x],dict[y])});
[0,1,2,4];
time.sleep(1);
random.sample(zip(xs,ys),1E3);
app.MainLoop();
(function(){var __accu0__=[];for(var j of function(){var __accu1__=[];for(var i=0;i<10;i++)__accu1__.append(function __lambda__(i){if(typeof i=="undefined"||i!=null&&i.hasOwnProperty("__kwargtrans__"))var i=i;return i});return __accu1__}())__accu0__.append(j());return __accu0__})();
var line=sys.stdin.readline();
time.sleep(1);
export var py_split=pd.concat([df,TScolumns],__kwargtrans__({axis:1}));
logger.setLevel(logging.DEBUG);
plt.show();
print(numpy.round(dataAC,10).__getitem__([tuple([0,null,1]),tuple([0,4,1])]));
var lst=[];
(function(){var __accu0__=[];for(var x of data)for(var y of x)__accu0__.append(y);return __accu0__})();
a[0].append(1);
var obj=PageModel.get_by_id(page_id);
var M=np.column_stack(tuple([Math.pow(x,2),x,np.ones_like(x)]));
solve(eqs2,[x,y]);
(function(){var __accu0__=[];for(var item of mylist)if(item[0][0]==letter)__accu0__.append(item);return __accu0__})();
plt.show();
fh.close();
ax.set_yticklabels([]);
df.append(data);
print(Foo.bar.__get__(f,Foo));
all(function(){var __accu0__=[];for(var e of a)__accu0__.append(e==a[0]);return py_iter(__accu0__)}());
py_next(function(){var __accu0__=[];for(var x of function(){var __accu1__=[];for(var f of hundreds)__accu1__.append(f(y));return py_iter(__accu1__)}())if(x)__accu0__.append(x);return py_iter(__accu0__)}());
self.process.wait();
pygame.joystick.quit();
worksheet.save();
export var row0=ynew[0].toarray();
d[i[i<d.shape[0]]];
self._socket.bind(tuple([self._host,self._port]));
f.write(text);
print(str(n).__getslice__(0,null,-1));
var b=function(){var __accu0__=[];for(var i of range(n.bit_length()-1,-1,-1))__accu0__.append(n>>i&1);return __accu0__}();
(function(){var __accu0__=[];for(var item of my_lists)__accu0__.append(sorted(item,__kwargtrans__({key:priority.py_get})));return __accu0__})();
test.__getslice__(n,null,1);
sys.stdout.flush();
zip(...function(){var __accu0__=[];for(var i=0;i<n;i++)__accu0__.append(lst.__getslice__(i,null,1)+lst.__getslice__(0,i,1));return __accu0__}());
print(function(){var __accu0__=[];for(var [i,x]of enumerate(a))__accu0__.append(x-i);return __accu0__}());
lists[0].append(1);
Image.fromarray(result).save(sys.argv[2]);
dict(zip(l.__getslice__(0,null,2),l.__getslice__(1,null,2)));
sess.close();
var result=function(){var __accu0__=[];for(var r of result)__accu0__.append(r[0]);return __accu0__}();
plt.show();
plt.show();
any(function(){var __accu0__=[];for(var x of zip(...arr))__accu0__.append(x.__getslice__(1,null,1)==x.__getslice__(0,-1,1));return __accu0__}());
export var dsub=df1.reset_index(__kwargtrans__({drop:true})).sub(df2.reset_index(__kwargtrans__({drop:true})));
doctest.testmod();
logging.getLogger().getEffectiveLevel();
df;
MyThread().start();
round(2.607,2);
(function(){var __accu0__=[];for(var [k,n]of Counter(seq).py_items())if(n==1)__accu0__.append(k);return __accu0__})();
root.mainloop();
var indices=function(){var __accu0__=[];for(var [i,x]of enumerate(myList))if(re.search(regex,x))__accu0__.append(i);return __accu0__}();
np.abs(A.__getitem__([tuple([0,null,1]),np.newaxis])-B);
self.timer.stop();
export var username=request.user.username;
pd.read_csv(f,__kwargtrans__(kwargs));
var soup=BeautifulSoup.BeautifulSoup(html);
sys.path.append(path);
deletemy_list[1];
foo(tuple([noniterable]));
app.root.mainloop();
print(sorted(py_iter(counter.py_items()),__kwargtrans__({key:function __lambda__(x){return x.__getslice__(0,null,-1)}})));
vectors/=np.sqrt(Math.pow(vectors,2).sum(-1)).__getitem__([,np.newaxis]);
s.find_longest_match(0,len(a),0,len(b));
(function(){var __accu0__=[];for(var [k,v]of list(dict.py_items()))if(v>something)__accu0__.append([k,v]);return dict(__accu0__)})();
db.session.commit();
var results=sorted(list(results.py_items()),__kwargtrans__({cmp:function __lambda__(a,b){return b[1]-a[1]}}));
(function(){var __accu0__=[];for(var [k,g]of groupby(data))__accu0__.append(k);return __accu0__})();
my_func(...arr.T);
sys.exit(app.exec_());
sum(map(len,function(){var __accu0__=[];for(var s of x)if(len(s)>1)__accu0__.append(s);return __accu0__}()));
test_rec[indices];
Color(...Color2.as_list());
xbook.close();
plt.colorbar();
var combined=function(){var __accu0__=[];for(var sublist of lists)for(var item of sublist)__accu0__.append(item);return __accu0__}();
deletec.__getslice__(0,null,1);
root.mainloop();
ws.cell(__kwargtrans__({row:index,column:2})).value=x1;
datetime(1970,1,1);
var my_dict=json.load(f);
dot(x,y);
print(match.groups());
var Y=X-X.mean(__kwargtrans__({axis:1,keepdims:true}));
df.where(df.eq(df.max(1),0),-1);
f_out.close();
plt.show();
export var maxlen=len(max(a,__kwargtrans__({key:len})));
var data=pickle.load(f);
Response(serializer.data,__kwargtrans__({status:status.HTTP_201_CREATED}));
export var plot_data=[[]]*len(positions);
export var application=django.core.handlers.wsgi.WSGIHandler();
sum(map(r,v))==-n;
np.cross(c,d).reshape(5,4);
var e=Example(__kwargtrans__({size:10}));
result.append(x.__getslice__(0,2,1).tolist());
method();
self.ProgressBar.SetValue(0);
func(...args,__kwargtrans__(kwargs));
df.loc[df.index.tolist()+missing];
result.__getslice__(0,-1,1);
df.loc[set(df.index)-set(blacklist)];
time.sleep(1);
np.where(a==a.max());
(function(){var __accu0__=[];for(var f of funcs)for(var a of args)__accu0__.append(f(a));return __accu0__})();
var current_module=sys.modules[__name__];
var response=mechanize.urlopen(request,__kwargtrans__({data:data}));
sys.path.append(path);
print(f.stdout.readline());
var tup=tuple(function(){var __accu0__=[];for(var element of alist)__accu0__.append(tuple([element.foo,element.bar]));return __accu0__}());
sys.exit(app.exec_());
print(c.most_common()[0]);
plt.show();
main();
df.iloc[np.argmin(np.abs(df.index.to_pydatetime()-dtObj))];
a.__setslice__(0,null,null,function(){var __accu0__=[];for(var s of a)__accu0__.append(s.strip());return __accu0__}());
p[s]==np.arange(n);
random.shuffle(newcolors);
t+np.roll(t,-1);
l.py_sort(operator.itemgetter(0),__kwargtrans__({reverse:true}));
var __left0__=tuple([float(strs[0]),float(strs[1])]);al[0]=__left0__[0];al[1]=__left0__[1];
str(random.random()).__getslice__(2,null,1);
var r=requests.post(URL,__kwargtrans__({data:payload}));
list(set().union(a,b,c));
main();
self.graph=self.ax.hexbin(self.xData,self.yData);
csvwriter.writerow(row);
c.setopt(c.HEADERFUNCTION,storage.write);
admin.site.unregister(Group);
sys.stderr=sys.__stderr__;
export var R=np.array(mean_data).__getitem__([tuple([0,null,1]),0]);
numpy.invert(array);
sum(function(){var __accu0__=[];for(var x of gen)__accu0__.append(1);return py_iter(__accu0__)}());
print(a[x][y]);
a[1].append(2);
np.log(df.col1/df.col1.shift());
export var addrport=ADDRPORT(addrbytes,portshort);
var L=[[0,1,1,1],[1,0,1,1],[1,1,0,1],[1,1,1,0]];
make_adder(5)(10);
cbar.set_ticks([mn,md,mx]);
export var mag=np.sqrt(x.dot(x));
np.random.seed(1977);
var lol=[list(range(10)),list(range(2,12)),list(range(5,15))];
split_curve(np.array([0,1]),np.array([0,1]),2);
sys.stderr.close();
print(my_new_list);
Base.metadata.create_all(engine);
window.show_all();
a.append(str(wi));
plt.show();
logging.Handler.__init__(self);
ax7.yaxis.set_label_coords(-.2,.5);
ax2.set_xlim(0,10);
t.date();
len(set(perms));
np.random.choice(array1,5,__kwargtrans__({py_replace:false}));
getattr(module,class_name);
plt.imshow(crop_lena,__kwargtrans__({cmap:plt.cm.gray}));
plt.show();
con.close();
var df=pd.DataFrame(data);
export var big_df=pd.concat(df_list);
var data=function(){var __accu0__=[];for(var line of csv.reader(f))__accu0__.append(tuple(line));return __accu0__}();
wx.Panel.__init__(self,parent);
a.__getslice__(-9,null,1);
ax.grid(true);
plt.show();
df.reindex(s.index);
a.repeat(2,__kwargtrans__({axis:0})).repeat(2,__kwargtrans__({axis:1}));
signal.signal(signal.SIGALRM,signal_handler);
a.reshape(-1,100).__getslice__(0,null,2).ravel();
a.__getitem__([np.arange(len(a)),[1,0,2]]);
sys.exit();
Project.objects.all();
isinstance(f,float);
plt.plot(x,y2);
var form=MyForm(request.user);
print(df.astype(float).sum().astype(int).astype(str));
entry.focus_set();
(function(){var __accu0__=[];for(var [a,b]of zip(data.__getslice__(0,null,2),data.__getslice__(1,null,2)))__accu0__.append(myfunc(a,b));return __accu0__})();
plt.show();
pd.DataFrame(a.reshape(A.shape[0],-1),A.index);
var mask=np.in1d(a.__getitem__([tuple([0,null,1]),0]),b);
time.sleep(0);
y[y.nonzero()];
tuple([1,1,1,1,1,1,1,1,1,1,4,6,6,6,6,6,6,6,6,6,6,6]);
var driver=webdriver.Firefox();
print(list(f()));
list(Blog.objects.py_values());
ax.xaxis.set_major_formatter(dates.AutoDateFormatter(locator));
tornado.ioloop.IOLoop.instance().start();
print(cmod.greet(a));
export var im_data=output.getvalue();
print(random.choice(a));
writer.writerows(new_data);
np.array_split(a,2,__kwargtrans__({axis:1}));
f.write(leds[0]);
vals.__getitem__([tuple([0,null,1]),0])==0&vals.__getitem__([tuple([0,null,1]),1])==1;
(function(){var __accu0__=[];for(var key of one_by_ip)__accu0__.append([key,data[key]]);return dict(__accu0__)})();
ax.xaxis.set_major_locator(mdates.YearLocator());
tk.mainloop();
item_labels.py_sort(__kwargtrans__({key:function __lambda__(t){return c[t[1]]}}));
br.title();
list(set(theList).intersection(theDict));
Decimal(1)/Decimal(7);
heapq.nsmallest(l,2);
max(function(){var __accu0__=[];for(var i of oceans[regcode-1])__accu0__.append(i[0]);return py_iter(__accu0__)}());
sorted(a,__kwargtrans__({key:function __lambda__(x){return tuple([x[0].isdigit(),x])}}));
plt.show();
a.dot(v);
set(function(){var __accu0__=[];for(var x of l)if(l.count(x)>1)__accu0__.append(x);return __accu0__}());
f.seek(0,2);
var root=Tk();
admin.site.register(User,UserAdmin);
logging.basicConfig(__kwargtrans__({level:logging.DEBUG}));
orcl.close();
root.grid_columnconfigure(0,__kwargtrans__({weight:1}));
df.apply(function __lambda__(s){return s.value_counts().py_get(0,0)},__kwargtrans__({axis:1}));
export var first2pairs=function(){var __accu0__=[];for(var k of sorted(mydict.py_keys()).__getslice__(0,2,1))__accu0__.append([k,mydict[k]]);return dict(__accu0__)}();
plt.colorbar();
ax.set_xticklabels(x_labels);
dict(__kwargtrans__({form:form}));
plt.xlim(0,data.shape[0]);
var df=df[df.line_race!=0];
plt.contourf(xi,yi,zi,v,__kwargtrans__({cmap:plt.cm.jet}));
zip(...data);
print(row[0].read());
L.append(l);
any(function(){var __accu0__=[];for(var i of string)__accu0__.append(i.isdigit());return py_iter(__accu0__)}());
f.seek(-len(line),os.SEEK_CUR);
QtGui.QWidget.__init__(self);
sum(function(){var __accu0__=[];for(var i=0;i<len(s);i++)__accu0__.append(s.__getslice__(i,null,1).startswith(subs));return py_iter(__accu0__)}());
logging.getLogger().addFilter(Aggregator);
len(function(){var __accu0__=[];for(var x of myList)if(__in__(x,myDict))__accu0__.append(x);return __accu0__}())>0;
print(date.isoformat());
table.create();
HttpResponse(__kwargtrans__({status:500}));
sys.exit(0);
my_dict[key].append(value);
df.drop(drops,__kwargtrans__({inplace:true}));
writer.writerow(dict(zip(fieldnames,row)));
print(function(){var __accu0__=[];for(var k of all_keys)__accu0__.append([k,function(){var __accu1__=[];for(var d of dd)if(__in__(k,d))__accu1__.append(d[k]);return __accu1__}()]);return dict(__accu0__)}());
sys.stdout.flush();
layout.addWidget(btn);
sorted(a.py_keys());
A[np.lexsort(tuple([A.__getitem__([tuple([0,null,1]),0]),A.__getitem__([tuple([0,null,1]),1])]))];
session.commit();
plt.hist(np.clip(values_A,bins[0],bins[-1]),__kwargtrans__({bins:bins}));
plt.show();
time.sleep(.1);
lst.__setslice__(0,null,null,function(){var __accu0__=[];for(var words of lst)for(var word of words.py_split())__accu0__.append(word);return __accu0__}());
requests.delete(url,__kwargtrans__({data:json.dumps(data)}));
earth.speed(0);
mars.speed(0);
df.stack().value_counts();
b.py_sort(__kwargtrans__({key:float}));
autoreconf-i;
hdf5.close();
reactor.run();
dict(__kwargtrans__({i:i,j:j,k:k}));
sorted(lst,__kwargtrans__({key:function __lambda__(x){return tuple([counts[x],-firstidx[x]])},reverse:true}));
changewriter.writerow([productcode,amountentered]+changecoins);
os.system(cmd);
plt.gcf().canvas.get_supported_filetypes();
plt.show();
threading.Thread.__init__(self);
export var answer=[0,1,1,1,1,0];
s.setsockopt(socket.SOL_SOCKET,socket.SO_LINGER,linger_struct);
main();
var __left0__=draw.textsize(text,font);export var w=__left0__[0];var h=__left0__[1];
sys.stdout.write(line);
x[y.nonzero()]=y[y.nonzero()];
self.assertEqual(response.status_code,200);
pd.concat([pd.DataFrame(out,df.index,a),df],__kwargtrans__({axis:1}));
urllib.request.urlopen(req);
self.__getitem__(slice(start,stop));
itertools.chain(...function(){var __accu0__=[];for(var i=1;i<5;i++)__accu0__.append([i]*i);return py_iter(__accu0__)}());
[range(2,5),range(12,17),20];
time.sleep(1);
var mySet=function(){var __accu0__=[];for(var x of TUPLES)__accu0__.append(x[0]);return set(__accu0__)}();
print(os.listdir(path));
cursor.execute(sql,args);
extra_logger.setLevel(logging.INFO);
pylab.show();
var v=int(float(s))==float(s)?int(float(s)):float(s);
export var id_map=function(){var __accu0__=[];for(var [v,k]of enumerate(df.phone_no.unique(),1))__accu0__.append([k,v]);return dict(__accu0__)}();
deletefoo.fields[index];
fig.canvas.draw();
print(tuple([char,char.isalpha()]));
plt.show();
plt.draw();
export var distances=np.sqrt(Math.pow(x-x0,2)+Math.pow(y-y0,2)+Math.pow(z-z0,2));
getattr(someobject,foostring);
np.append(a,z,__kwargtrans__({axis:1}));
map(str.strip,my_list);
list(ordered_dict.py_values())[2];
np.concatenate(tuple([arr.__getitem__([[0,n],tuple([0,null,1])]).ravel(),arr.__getitem__([tuple([1,-1,1]),[0,n]]).ravel()]));
np.random.seed(1);
f.close();
list(set(a));
(function(){var __accu0__=[];for(var i of bin(x).__getslice__(2,null,1))__accu0__.append(int(i));return __accu0__})();
HttpResponse(line);
br.set_cookiejar(cj);
var plot_data=function(){var __accu0__=[];for(var _ of positions)__accu0__.append([]);return __accu0__}();
var a=np.array(function(){var __accu0__=[];for(var _ of y)__accu0__.append(np.array(list()));return __accu0__}());
(np.abs(a-val)<=tol).argmax();
plt.show();
__init__.py;
(function(){var __accu0__=[];for(var c of list)__accu0__.append(seen[c]);return __accu0__})();
QApplication.restoreOverrideCursor();
plt.show();
sys.stdout.flush();
QtGui.QWidget.__init__(self);
widget.destroy();
pd.concat([df.iloc.__getitem__([tuple([0,null,1]),tuple([0,1,1])]),df.shift(1),df.shift(2).iloc.__getitem__([tuple([0,null,1]),tuple([4,null,1])])],__kwargtrans__({axis:1}));
transmission_array.append(0);
var app=Flask(__name__);
np.insert(B,np.arange(len(A)),A);
plt.show();
df;
ax.set_ylim(tuple([0,10]));
mylist.append(item);
export var inverse=numpy.linalg.inv(x);
df.show();
button1.config(__kwargtrans__({height:WHATEVER,width:WHATEVER2}));
a[-1];
(function(){var __accu0__=[];for(var x of ls)if(ls.count(x)==1)__accu0__.append(x);return __accu0__})();
var ones=function(){var __accu0__=[];for(var x of l)if(x[1]==1)__accu0__.append(x);return __accu0__}();
main();
f.close();
fout.close();
var json_data=json.loads(response.text);
self.fig.canvas.draw();
termios.tcsetattr(sys.stdin,termios.TCSADRAIN,old_settings);
reverse_dict.py_setdefault(value,[]).append(keypath);
mlab.show();
list(itertools.chain(...l2));
new_list.append(item[1]);
var out=function(){var __accu0__=[];for(var l of out)if(l)__accu0__.append(l);return __accu0__}();
json.loads(text);
nltk.tokenize.sent_tokenize(text);
export var widget_set=new set([tuple(sorted(widget.py_items()))]);
self.response.out.write(photo.imageblob);
time.sleep(2);
(function(){var __accu0__=[];for(var [i,j]of itertools.combinations(range(len(x)+1),2))__accu0__.append(x.__getslice__(i,j,1));return py_iter(__accu0__)})();
(function(){var __accu0__=[];for(var [i,j]of zip(x,y))if(i==j)__accu0__.append(i);return __accu0__})();
driver.switch_to_window(driver.window_handles[0]);
ts.ix[ts.index.indexer_between_time(datetime.time(9),datetime.time(18))];
max(function(){var __accu0__=[];for(var p of PlayerList)__accu0__.append(max(p.__getslice__(1,null,1)));return py_iter(__accu0__)}());
print(os.walk(DIR_PATH).py_next()[1]);
var pool=Pool(__kwargtrans__({processes:4}));
plt.show();
print(aslocaltimestr(datetime.utcnow()));
plt.show();
ser.read(bytesToRead);
var aa=function(){var __accu0__=[];for(var k of f)__accu0__.append(d[k]);return __accu0__}();
np.transpose(arr,[2,0,1]).reshape(5,-1);
f(function __lambda__(x,y){return x+y},1,2);
print(etree.tostring(bar,__kwargtrans__({pretty_print:false,with_tail:true})));
results[i].append(benchmark(i));
unique_list.append(sorted(item));
plt.show();
export var newdict=function(){var __accu0__=[];for(var k of goodkeys)__accu0__.append([k,olddict[k]]);return dict(__accu0__)}();
db.close();
plt.gca().add_artist(myline);
plt.show();
plt.show();
isinstance(n,int);
var img=cv2.cvtColor(img,cv2.COLOR_BGRA2BGR);
export var extractedData=data.__getitem__([tuple([0,null,1]),[1,9]]);
pylab.show();
(function(){var __accu0__=[];for(var x of G)__accu0__.append(x[0]);return __accu0__})();
var result=function(){var __accu0__=[];for(var y of function(){var __accu1__=[];for(var x of mylist)__accu1__.append(expensive(x));return py_iter(__accu1__)}())if(y)__accu0__.append(y);return __accu0__}();
self.connection.commit();
np.concatenate([a.__getitem__([np.newaxis,tuple([0,null,1])]),b.__getitem__([np.newaxis,tuple([0,null,1])])],__kwargtrans__({axis:0}));
export var objects=ndb.get_multi(function(){var __accu0__=[];for(var k of ids)__accu0__.append(ndb.Key(Model,k));return __accu0__}());
export var filtered=function(){var __accu0__=[];for(var i of full)if(!regex.search(i))__accu0__.append(i);return __accu0__}();
export var avgs=function(){var __accu0__=[];for(var [a,b]of zip(...[py_iter(data)]*2))__accu0__.append((a+b)/2);return __accu0__}();
tekstboks2.pack();
plt.subplot(211);
list(permutations(list_of_tuples));
self.ax.set_xlim(0,R+pR);
deleted[k];
httpd.serve_forever();
x.shape;
ts1.corr(ts2);
pkgutil- -pkgs;
res.reset_index();
var z=[x]+(isinstance(y,list)?y:[y]);
formatdate(time.mktime(dt.timetuple()));
np.array_equiv(A,B);
export var relative_paths=function(){var __accu0__=[];for(var path of paths)__accu0__.append(os.path.relpath(path,common_prefix));return __accu0__}();
myArray[1][1]==2.71828;
export var deque_slice=collections.deque(itertools.islice(my_deque,10,20));
fro.close();
zip(...[s]*2);
list(itertools.chain.from_iterable(L));
export var clf=linear_model.LinearRegression();
var x=str(something);
print(tuple([value,count]));
(function(){var __accu0__=[];for(var [k,g]of itertools.groupby(l))__accu0__.append(tuple([len(list(g)),k]));return __accu0__})();
test.append(pd.Series(200,__kwargtrans__({index:[101]})));
[1]*5;
str(int(value));
Dataset.objects.filter(__kwargtrans__({i_end_int__gte:x,i_begin_int__lte:x}));
zip(a,x);
plt.plot(x,y);
py_next(gen);
print(first.lower()<=second.lower()&&second.lower()<=third.lower());
list(chain.from_iterable(a));
(function(){var __accu0__=[];for(var x of a_list)__accu0__.append(x*(2-__mod__(x,2)));return __accu0__})();
ax.plot(x,y);
instance.save();
random.shuffle(array);
tuple([X_train,y_train,X_val,y_val,X_val,y_val]);
p.wait();
var list1=function(){var __accu0__=[];for(var _f of list1)if(_f)__accu0__.append(_f);return __accu0__}();
print(len(unique_values));
ax.set_xticks(np.arange(data.shape[1])+.5,__kwargtrans__({minor:false}));
self.__init__(...args,__kwargtrans__(kwargs));
Response(__kwargtrans__({status:204}));
export var rec=function __lambda__(x){return isinstance(x,list)?sum(map(rec,x)):x};
plt.figure(__kwargtrans__({figsize:plt.figaspect(1)}));
sys.stdout.flush();
plt.draw();
print(self.bar);
nlargest(5,vector,__kwargtrans__({key:itemgetter(1)}));
random.shuffle(s);
export var new_re_df=function(){var __accu0__=[];for(var i of ts)__accu0__.append(s.iloc[np.where(ts.astype(int)==int(i))]);return __accu0__}();
bin(10);
list(product(x,chain.from_iterable(y)));
msg.attach(MIMEText(text));
export var maxLPFt=max(lpfData,__kwargtrans__({key:operator.itemgetter(1)}))[1];
BillboardTracker.objects.filter(__kwargtrans__({expiry_date__le:datetime.now()}));
func2(__kwargtrans__(locals()));
bsizer.Add(yourTxtCtrl,1,wx.EXPAND);
sum(function(){var __accu0__=[];for(var [_,n]of structure)__accu0__.append(n);return py_iter(__accu0__)}());
ssh.close();
do_something();
a[index]+=1;
matplotlib.pyplot.show();
handler.setLevel(logging.DEBUG);
json.dumps(data,__kwargtrans__({ensure_ascii:false}));
a.add(2);
zip(s,s);
x[np.isnan(x)]=something_not_nan;
export var uncompressedData=bz2.BZ2File(zipFile).read();
self.grid_columnconfigure(2,__kwargtrans__({weight:1}));
var B=np.linalg.inv(A.T).T;
export var nums=function(){var __accu0__=[];for(var n of text.py_split())__accu0__.append(int(n));return __accu0__}();
(function(){var __accu0__=[];for(var e of zip(...data))__accu0__.append(sum(e)/len(e));return __accu0__})();
df1[df1==1].count();
os.getlogin();
process.wait();
sys.exit(1);
var words=f.read().py_split();
cursor.close();
export var body=body.py_replace(block.text,hilited);
b+=int(a);
br.add_handler(PrettifyHandler());
reactor.run();
writer.writerow(csvdata);
var a=np.hstack(tuple([[.2],np.linspace(1,60,60),[60.8]]));
current_command();
pylab.hist(function(){var __accu0__=[];for(var t=0;t<1E4;t++)__accu0__.append(random_triangular(1,6,5));return __accu0__}());
moving_average(a,__kwargtrans__({n:4}));
tf.py_func(func,inp,Tout,__kwargtrans__({stateful:stateful,py_name:py_name}));
var result=set(function(){var __accu0__=[];for(var l of array)for(var x of l)__accu0__.append(x);return py_iter(__accu0__)}());
plt.show();
timeit(function(){var __accu0__=[];for(var x of a)if(__in__(x,b))__accu0__.append(x);return __accu0__}());
var ax=fig.add_subplot(111);
plt.show();
QtGui.QMainWindow.__init__(self);
var d=dict(function(){var __accu0__=[];for(var [k,v]of list(d.py_items()))if(k)__accu0__.append(tuple([k,v]));return py_iter(__accu0__)}());
sys.exit(app.exec_());
print(soup.prettify());
fh.close();
plt.show();
df.apply(function __lambda__(x){return x.apply(function __lambda__(x){return math.isnan(x)?[]:x})});
app.run(__kwargtrans__({server:server}));
arr.sum(__kwargtrans__({axis:1})).shape;
var r=function(){var __accu0__=[];for(var i=0;i<4;i++)__accu0__.append([]);return __accu0__}();
df.append(df.sum(__kwargtrans__({numeric_only:true})),__kwargtrans__({ignore_index:true}));
a.py_get()+b.py_get();
lst.append(function __lambda__(x){return f(x,i)});
app.root.mainloop();
(function(){var __accu0__=[];for(var x of L)if(x>=0)__accu0__.append(x);return __accu0__})();
print(key,value);
setattr(module,py_name,value);
print(df.applymap(function __lambda__(x){return x>1}));
(function(){var __accu0__=[];for(var x of sorted(random.sample(enumerate(myList),K)))__accu0__.append(x[1]);return __accu0__})();
logging.set_up_done=true;
np.hstack(results);
(a==b).sum();
newsampledata.sample(n,__kwargtrans__({py_replace:true})).reset_index(__kwargtrans__({drop:true}));
(function(){var __accu0__=[];for(var x of data)__accu0__.append(sum(map(f,x)));return __accu0__})();
sns.heatmap(data,__kwargtrans__({ax:ax}));
tornado.ioloop.IOLoop.instance().start();
time.sleep(.1);
list(dict(function(){var __accu0__=[];for(var x of L)__accu0__.append(tuple([tuple(x.__getslice__(0,2,1)),x]));return py_iter(__accu0__)}()).py_values());
(function(){var __accu0__=[];for(var i of indexList)__accu0__.append(wordList[i]);return __accu0__})();
print(s.recv(1024));
sum(function(){var __accu0__=[];for(var i=0;i<len(a);i++)__accu0__.append(a[i]!=b[i]);return py_iter(__accu0__)}());
do_something_with(lines);
window.Minimize();
fig.canvas.draw();
fig.canvas.draw_idle();
dict.__init__(self,...args,__kwargtrans__(kwargs));
self.table.setColumnCount(5);
export var foundItems=function(){var __accu0__=[];for(var [key,vals]of list(mydict.py_items()))if(__in__(item,vals))__accu0__.append(key);return py_iter(__accu0__)}();
root.destroy();
signal.signal(signal.SIGINT,signal.SIG_DFL);
ax.pcolormesh(x,y,z,__kwargtrans__({cmap:mpl.cm.Reds}));
unittest.main(...args,__kwargtrans__(kwargs));
var result=map(sum,a);
pd.concat([pd.DataFrame(a),pd.DataFrame(b)],__kwargtrans__({axis:1}));
lst.extend([5,6,7]);
col.find_one();
var numbers=py_iter(list(range(100)));
my_queue.put(x);
len(function(){var __accu0__=[];for(var i=0;i<len(s)-n+1;i++)__accu0__.append(s.__getslice__(i,i+n,1));return set(__accu0__)}());
shutil.copyfileobj(buf,fd);
ftp.cwd(path);
(function(){var __accu0__=[];for(var item of l)for(var x of repeat(item,2))__accu0__.append(x);return __accu0__})();
dict(zip(headers,zip(...sdata)));
pattern.format(s);
random.shuffle(x);
virtualenv;
pd.isnull(df).any();
tasklist.append(newtask);
(function(){var __accu0__=[];for(var x of lst)if(!__in__(x.lower(),seen)&&!seen.add(x.lower()))__accu0__.append(x);return __accu0__})();
array([[1,0,0],[0,1,0],[0,1,0],[0,0,1],[1,0,0],[0,1,0]]);
var log=logging.getLogger(__name__);
app.run();
export var html=urllib.request.urlopen(url).read();
sys.exit(0);
list(takewhile(function __lambda__(x){return x<5},list(range(5))));
p.kill();
np.array_equal(A,B);
plt.show();
Base.metadata.create_all(engine);
var new_array=np.array(df.index.to_pydatetime(),__kwargtrans__({dtype:numpy.datetime64}));
output.close();
export var grid=QtGui.QGridLayout();
nodes.CallBlock([call],[],[],[]);
requests.post(url,__kwargtrans__({data:data,headers:headers}));
export var grades=function(){var __accu0__=[];for(var x of files.readlines())__accu0__.append(x.strip());return __accu0__}();
(function __lambda__(i){return isinstance(i,int)});
any(function(){var __accu0__=[];for(var e of my_list)__accu0__.append(isinstance(e,list));return py_iter(__accu0__)}());
time.sleep(5);
export var ssh_client=paramiko.SSHClient();
export var elapsed_time=time.time()-start_time;
new set([new set([value|unlocalize])]);
test.__getitem__([1,tuple([0,null,1])]);
df[0].to_json();
s.getvalue();
var t=tuple(lst);
math.ceil(x/500)*500;
print(ET.tostring(graph,__kwargtrans__({pretty_print:true})));
zip(...[s,s]);
var im=Image.open(StringIO.StringIO(buffer));
test.__getitem__([tuple([0,null,1]),0]);
var c=list(itertools.chain.from_iterable(zip(a,b)));
(function(){var __accu0__=[];for(var [item,flag]of zip(s,b))if(flag==1)__accu0__.append(item);return __accu0__})();
reactor.run();
_draw_point(renderer,position,j,i);
os.path.dirname(sys.executable);
print(min(strings,__kwargtrans__({key:len})));
ax.set_xlim(.5,5);
(function(){var __accu0__=[];for(var [x,y]of zip(a,h))__accu0__.append(x+tuple([y]));return __accu0__})();
self.sock.setsockopt(socket.SOL_SOCKET,socket.SO_REUSEADDR,1);
sorted(mydict.py_items());
self.log.setLevel(logging.INFO);
np.multiply(np.arange(1,5),Math.pow(2,np.arange(0,4)[np.newaxis].T));
[0,1,2];
plot(x,y,__kwargtrans__({color:color}));
export var sorted_by_medals=sorted(list_of_medals,__kwargtrans__({key:function __lambda__(tup){return tuple([-tup[1],tup[0]])}}));
Image.open(file).verify();
(function(){var __accu0__=[];for(var pair of zip(l,l))for(var x of pair)__accu0__.append(x);return __accu0__})();
func(...args,__kwargtrans__(kwargs));
reactor.run();
(function(){var __accu0__=[];for(var v of list(mydict.py_values()))__accu0__.append([randint(0,9),v+1]);return dict(__accu0__)})();
var R=np.array(mean_data.__getitem__([tuple([0,null,1]),0]));
layout.addWidget(QtGui.QLineEdit(self));
fcntl.flock(self.__lock_file.fileno(),fcntl.LOCK_EX|fcntl.LOCK_NB);
sys.exit(0);
r.grid(__kwargtrans__({sticky:tuple([N,E,S,W])}));
cv2.destroyAllWindows();
plt.show();
matches.append(os.path.join(root,filename));
regex.findall(filename);
a+b;
print(tuple([m.span(),m.group(0)]));
list(s);
(function(){var __accu0__=[];for(var [a,b]of list(params.py_items()))__accu0__.append(a);return __accu0__})();
cur.close();
datetime.datetime.combine(tdate,datetime.time.min);
var c=tuple(function(){var __accu0__=[];for(var [x,y]of zip(a,b))__accu0__.append(x-y);return py_iter(__accu0__)}());
plt.show();
(function(){var __accu0__=[];for(var sub of a)for(var e of sub)__accu0__.append(e);return __accu0__})();
pygame.quit();
p.start();
dall.py_update(d);
X-np.dot(A,B);
Blender.Redraw();
im.wcs.__getitem__([tuple([0,null,2]),tuple([0,null,2])]);
export var min_keys=function(){var __accu0__=[];for(var [k,x]of list(d.py_items()))if(!any(function(){var __accu1__=[];for(var y of list(d.py_values()))__accu1__.append(y<x);return py_iter(__accu1__)}()))__accu0__.append(k);return __accu0__}();
server_socket.close();
print(function(){var __accu0__=[];for(var [key,group]of groupby(x))if(len(list(group))>1)__accu0__.append(key);return __accu0__}());
app.run(__kwargtrans__({debug:true}));
func();
requests.py_get(url,__kwargtrans__({verify:path_to_bundle}));
all(function(){var __accu0__=[];for(var i=1;i<len(x)-1;i++)__accu0__.append(x[i]-x[i-1]==x[i+1]-x[i]);return py_iter(__accu0__)}());
app.run();
s.seek(0,os.SEEK_END);
pd.__version__;
mainwin.mainloop();
plt.show();
map(tuple,np.array(list(combinations(list(range(N-1,-1,-1)),M))).__getslice__(0,null,-1));
print(f.read());
plt.bar(x,y);
widget.deleteLater();
var sock=socket.socket(socket.AF_INET,socket.SOCK_DGRAM);
df.columns=df.columns.str.lower();
var size=fields.IntegerRangeField(__kwargtrans__({min_value:-100,max_value:100}));
pd.concat([df,dict_col.apply(pd.Series)],__kwargtrans__({axis:1}));
main();
app.run();
ax2.xaxis.set_visible(false);
var now=datetime.datetime.now();
app.MainLoop();
os.remove(os.path.join(dir,f));
(dt-datetime.datetime.utcfromtimestamp(0)).total_seconds();
func(that,...args,__kwargtrans__(__mergekwargtrans__({session:session},kwargs)));
var date=datetime.datetime.fromtimestamp(your_timestamp/1E3);
print(np.mgrid.__getitem__([tuple([0,5,1]),tuple([0,5,1])]));
sys.stdout.flush();
root.mainloop();
numpy.random.seed(0);
window.mainloop();
pprint(stiff);
export var AB=function(){var __accu0__=[];for(var i=0;i<len(A);i++)__accu0__.append(A[i]+B[i]);return __accu0__}();
wx.Frame.__init__(self,...args,__kwargtrans__(kwargs));
plt.subplot(2,1,2);
sys.exit(app.exec_());
a.__getitem__([np.array(n1).__getitem__([tuple([0,null,1]),np.newaxis]),np.array(n2).__getitem__([np.newaxis,tuple([0,null,1])])]);
plt.legend(__kwargtrans__({loc:0}));
f_in.close();
print(a[s]);
(function(){var __accu0__=[];for(var x of my_list)__accu0__.append(function(){var __accu1__=[];for(var y of x)if(!__in__(y,to_del))__accu1__.append(y);return __accu1__}());return __accu0__})();
time.sleep(.05);
(function(){var __accu0__=[];for(var t of tuples)if(all(function(){var __accu1__=[];for(var f of filters)__accu1__.append(f(t));return py_iter(__accu1__)}()))__accu0__.append(t);return __accu0__})();
json.loads(json.loads(b));
plt.show();
[tuple([1,5]),tuple([8,11]),tuple([200,202])];
var my_dict=function(){var __accu0__=[];for(var [k,v]of list(tmp.py_values()))__accu0__.append([k,len(v)>1?v:v[0]]);return dict(__accu0__)}();
dict1.py_update(function(){var __accu0__=[];for(var k of py_keys)__accu0__.append(tuple([k,dict2[k]]));return py_iter(__accu0__)}());
list(itertools.combinations(py_items,2));
tuple([pid,stdin,stdout,stderr]);
export var MyDiccoSorted=sorted(list(MyDicco.py_items()),__kwargtrans__({key:function __lambda__(x){return x[1][0]}}));
time.mktime(datetime.datetime.now().timetuple())*1E3;
ax.collections;
var data=function(){var __accu0__=[];for(var x of data)__accu0__.append(float(fractions.Fraction(x)));return __accu0__}();
var doc=lxml.etree.parse(xml);
(function(){var __accu0__=[];for(var i=0;i<length;i++)for(var j=i+1;j<length+1;j++)__accu0__.append(s.__getslice__(i,j,1));return py_iter(__accu0__)})();
my_list.remove(4);
scipy.array(x).ravel().tolist();
var py_name=models.CharField(__kwargtrans__({max_length:255}));
itertools.chain.from_iterable(function(){var __accu0__=[];for(var i=1;i<5;i++)__accu0__.append([i]*i);return py_iter(__accu0__)}());
l.append(x.__getslice__(0,len(x)-k,1));
var b=a[0].__getslice__(0,null,1);
var data=p.stdout.readline();
plt.show();
(function(){var __accu0__=[];for(var tupl of tupleOfTuples)for(var element of tupl)__accu0__.append(element);return __accu0__})();
GC.remove_edge(clique[0],clique[1]);
var new_list=function(){var __accu0__=[];for(var d of old_list)__accu0__.append(function(){var __accu1__=[];for(var [k,v]of list(d.py_items()))__accu1__.append([transform[k],v]);return dict(__accu1__)}());return __accu0__}();
pylab.show();
np.place(arr,~np.in1d(arr,valid),0);
conn.send(stranza);
export var pil_im=Image.open(strio);
fig.canvas.draw();
plt.show();
(A==B).all();
startupinfo.dwFlags|=subprocess.STARTF_USESHOWWINDOW;
date+=datetime.timedelta(__kwargtrans__({days:1}));
cbar.set_clim(newimg.min(),newimg.max());
writer.writerows(function(){var __accu0__=[];for(var row=0;row<sheet.nrows;row++)__accu0__.append(sheet.row_values(row));return py_iter(__accu0__)}());
var f=function __lambda__(a,b,c){return function __lambda__(x){return a+b*c-x}}(a,b,c);
(function(){var __accu0__=[];for(var a of x)if(a!=2)__accu0__.append(a);return __accu0__})();
s1[s1.isin(s2)];
pygame.event.poll();
var data=json.loads(resp.text);
sorted(lst).__getslice__(-20,null,1);
pptable(x_axis,y_axis,a.tolist());
export var rescaled=np.uint8(b);
exec(open(filename).read());
s.reset_index();
list(set(function(){var __accu0__=[];for(var a of l)__accu0__.append(tuple([a,l.count(a)]));return __accu0__}()));
var b=np.fill_diagonal(np.zeros(tuple([N,N])),value);
QtCore.QThread.__init__(self);
var session=request.session;
numpy.matrix(numpy.identity(n),__kwargtrans__({copy:false}));
list(itertools.product(...arrays));
bytearray(function(){var __accu0__=[];for(var _=0;_<size;_++)__accu0__.append(random.getrandbits(8));return py_iter(__accu0__)}());
fig.subplots_adjust(__kwargtrans__({bottom:.2}));
a.A*~mask.A;
sorted(array,__kwargtrans__({key:function __lambda__(x){return x.__getslice__(0,24,1)}}));
print(mirror(function(){var __accu0__=[];for(var sublist of inputs)__accu0__.append(mirror(sublist));return __accu0__}()));
deletemydict[k];
object_list.py_sort(__kwargtrans__({key:function __lambda__(x){return string_list.index(x.key)}}));
list(itertools.zip_longest(...lists,__kwargtrans__({fillvalue:0})));
driver.find_element_by_id(tc.value).click();
cherrypy.engine.block();
export var pixbuf=pixbuf.scale_simple(width,height,gtk.gdk.INTERP_BILINEAR);
plt.draw();
pprint(function(){var __accu0__=[];for(var k of dir(f.__code__))__accu0__.append([k,getattr(f.__code__,k)]);return dict(__accu0__)}());
(function(){var __accu0__=[];for(var x of lst)if(__mod__(x,2))__accu0__.append(x);return __accu0__})();
plt.scatter(x,y,__kwargtrans__({c:t,cmap:cm.jet}));
deletemy_dict[key[-1]];
time.sleep(.1);
print(uuid.uuid4());
A[~np.isnan(A)].mean();
P.__getitem__([np.arange(n),x,y]);
var form=ContactForm();
numbers.append(random.randint(a,b));
client.close();
s.index(t.lower());
pygame.mouse.get_pos();
var t=s.reshape(-1,k);
random.shuffle(l,random.random);
temp.iloc[[0,1,4]].index.tolist();
urlfetch.set_default_fetch_deadline(60);
print(function(){var __accu0__=[];for(var x of test)__accu0__.append(x-empty);return __accu0__}());
sys.exit(0);
float(s);
time.sleep(1);
plot(x,sin(x)*cos(x));
(function(){var __accu0__=[];for(var x=0;x<m;x++)for(var y=0;y<n;y++)__accu0__.append(x);return __accu0__})();
var request=client.read_holding_registers(0,4,__kwargtrans__({unit:1}));
zlib.decompress(data);
print(line.rstrip());
sorted(list(counts.py_items()),__kwargtrans__({reverse:true,key:function __lambda__(tup){return tup[1]}})).__getslice__(0,top,1);
df.stack(0).reset_index(1);
app.exec_();
datetime.now();
time.sleep(1);
log.start();
var out=(m.__getslice__(1,null,1)>m.__getslice__(0,-1,1)).sum()+m[0];
plt.show();
list(filter(os.path.isdir,os.listdir(os.getcwd())));
df.columns[df.isnull().any()].tolist();
ax.scatter(x,y,zflat);
var __left0__=tuple([a.mean(),a.std()]);export var mean=__left0__[0];export var sigma=__left0__[1];
tk.Text.__init__(self,...args,__kwargtrans__(kwargs));
df.groupby(df.index).max();
var a=np.arange(10);
var d=ast.literal_eval(some_string);
dict(list(dict1.py_items())+list(dict2.py_items()));
plt.show();
var obj=session.query(ObjectRes).order_by(ObjectRes.id.desc()).first();
plt.ylim([-.5,1.5]);
var indices=function(){var __accu0__=[];for(var [i,x]of enumerate(myList))if(re.match(regex,x))__accu0__.append(i);return __accu0__}();
Series(df.py_values.ravel()).unique();
plt.ylim(-1,1);
driver.close();
pyodbc.connect(connect_string,__kwargtrans__({autocommit:true}));
self.widget_name.deleteLater();
len(set(function(){var __accu0__=[];for(var x of l)__accu0__.append(len(x));return py_iter(__accu0__)}()))<=1;
var val=img.getpixel(tuple([x,y]));
var a=[a];
export var filename=str(uuid.uuid4());
D();
var foo=decorator(foo);
time.sleep(2);
var a=[0]*1E7;
df.reindex(__kwargtrans__({columns:cols}));
export var tags=json.loads(s,__kwargtrans__({object_pairs_hook:collections.OrderedDict}));
var A=map(function __lambda__(t){return list(t)},A);
var img=client.images.py_get(IMAGE_ID);
text.splitlines()[0];
self.response.out.write(template.render(path,template_values));
var __except0__=FileNotFoundError(errno.ENOENT,os.strerror(errno.ENOENT),filename);__except0__.__cause__=null;throw __except0__;
file.close();
time.sleep(.01);
print(getglobals(f));
max(set(lst),__kwargtrans__({key:lst.count}));
ExampleApp().run();
var author=models.CharField(__kwargtrans__({max_length:60}));
sys.stdout.flush();
plt.axis([min(x_arr),max(x_arr),max(y_arr),0]);
(function(){var __accu0__=[];for(var [x,y]of myiter(data))__accu0__.append(myfunc(x,y));return __accu0__})();
all(function(){var __accu0__=[];for(var [k,v]of aa.py_items())if(__in__(k,bb))__accu0__.append(bb[k]==v);return py_iter(__accu0__)}());
plt.show();
datetime.date.fromordinal(datetime.date.today().toordinal()-1);
plt.plot(x,y);
root.destroy();
set(x);
x.__setitem__([tuple([0,null,1]),i],np.roll(x.__getitem__([tuple([0,null,1]),i]),i));
p1.stdout.close();
print(cmp(list1,list2));
self.main.show();
plt.show();
Gtk.main();
dict(zip(unique,counts));
sorted(lst,__kwargtrans__({key:str.lower,reverse:true}));
sorted(myList,__kwargtrans__({key:itemgetter(1)}));
p.wait();
var results=dict.fromkeys(inputs,[]);
(function(){var __accu0__=[];for(var x of l)__accu0__.append(indexes[x]);return __accu0__})();
var f=Math.pow(x,2)+1;
self.list_of_strings.append(str_to_add);
words[word[0]+word[-1]].append(word);
var s=socket.socket(socket.AF_INET,socket.SOCK_DGRAM);
var __left0__=b;self.a=__left0__;var a=__left0__[0];self.b=__left0__[1];
sock.setsockopt(socket.IPPROTO_TCP,TCP_KEEPALIVE,interval_sec);
plt.show();
plt.show();
(function(){var __accu0__=[];for(var i=0;i<5;i++)__accu0__.append(i*i);return py_iter(__accu0__)})();
call([command,parameter]);
pyplot.show();
d[key][0]=x;
(dt.py_replace(__kwargtrans__({month:__mod__(dt.month,12)+1,day:1}))-timedelta(__kwargtrans__({days:1}))).day;
plt.close();
export var dtyp=np.dtype(list(zip(X.dtypes.index,X.dtypes)));
var driver=webdriver.PhantomJS();
print(match.group(0));
time.sleep(float(sys.argv[1]));
np.where(~a.any(__kwargtrans__({axis:1})))[0];
[z0]*len(seconds);
a[-1]*(a[-1]+1)/2-sum(a);
50-List1[0][0]+List[0][1]-List[0][2];
ax.plot(x,y);
shutil.copy2(src,dst);
client.disconnect();
var df=df.loc[mask];
m.save();
(function(){var __accu0__=[];for(var [i,_]of itertools.groupby(ks))__accu0__.append(i);return __accu0__})();
entity.key().id_or_name();
ax.set_ylim([-1,10]);
np.reshape(data,__kwargtrans__({newshape:tuple([len(data)/5,5])}));
self.Bind(wx.EVT_ERASE_BACKGROUND,self._onEraseBackground);
tuple([1,0,1,0,0,0,0,0,1,0]);
plt.show();
pd.rolling_mean(aapl,200).plot();
export var counts=Counter(sentence.lower().py_split());
df[~pd.isnull(df[list_of_cols]).all(__kwargtrans__({axis:1}))];
df.apply(function __lambda__(x){return x.apply(function __lambda__(x){return isnan(x)?[]:x})});
min(t,__kwargtrans__({key:function __lambda__(i){return tuple([i[1],-i[2]])}}));
ax.autoscale();
var response=br.submit();
string_list.py_sort(__kwargtrans__({key:function __lambda__(s){return len(s)},reverse:true}));
plt.show();
py_next(function(){var __accu0__=[];for(var [i,d]of enumerate(lod))if(__in__(1,d))__accu0__.append(tuple([i,d]));return py_iter(__accu0__)}());
sorted(l,__kwargtrans__({key:function __lambda__(name_score){return int(name_score[1])},reverse:true}));
var rows=table.tbody.find_all(true,__kwargtrans__({recursive:false}));
time.sleep(.1);
py_replace(my_dict);
json.dumps(c.__dict__);
var response=urllib.request.urlopen(req).read();
np.random.shuffle(arr);
f.write(data);
var foo=Foo();
export var first2vals=function(){var __accu0__=[];for(var k of sorted(mydict.py_keys()).__getslice__(0,2,1))__accu0__.append(mydict[k]);return __accu0__}();
root.mainloop();
py_next(function(){var __accu0__=[];for(var i of userInput)if(__in__(i,wordsTask))__accu0__.append(i);return __accu0__}());
QtGui.QDialog.__init__(self,parent);
numpy.linalg.lstsq(a,b);
browser.submit();
(function(){var __accu0__=[];for(var tag of tags)for(var entry of entries)__accu0__.append(__in__(tag,entry)?entry:[]);return __accu0__})();
plt.show();
element.py_clear();
conn.commit();
A.test();
QMainWindow.__init__(self);
s.sendmail(sender,recipients,msg.as_string());
map(id,a);
proc.stdin.close();
y*=np.hanning(len(y));
a.shape;
np.where(np.triu(np.ones(A.shape[0],__kwargtrans__({dtype:bool})),1),A.T,A);
np.reshape(self.data,__kwargtrans__({newshape:tuple([self.data.shape[0]/5,5])}));
print(sum(py_iter(function __lambda__(){return len(sys.stdin.read(4096))},0)));
var contents=self.view.substr(sublime.Region(0,self.view.size()));
sorted(new_lst,__kwargtrans__({reverse:true}));
gevent.sleep(5);
print(expr.evalf(__kwargtrans__({subs:dict(__kwargtrans__({a:2,b:4,n:5}))})));
np.where(arr==arr.min());
a.__getitem__(slice(0,1)).__setitem__(0,1);
export var lst_gen=sum(function(){var __accu0__=[];for(var i=1;i<10;i++)__accu0__.append(tuple([i,i*i]));return __accu0__}(),tuple([]));
os.lseek(fd,0,os.SEEK_SET);
logging.getLogger().setLevel(logging.DEBUG);
var parser=argparse.ArgumentParser();
dict.fromkeys(my_list,0);
plt.show();
pool.join();
bin(int(binascii.hexlify(st),16));
np.sqrt(Math.pow(A-B,2).sum(-1));
print(json.dumps(out));
plt.show();
list(function(){var __accu0__=[];for(var t of py_reversed(l))__accu0__.append([t[1],t]);return dict(__accu0__)}().py_values());
ax.add_artist(rect);
web.HTTPError.__init__(self,status,headers,data);
ax.set_xticks(list(range(0,11)));
var img=cv2.imdecode(nparr,cv2.CV_LOAD_IMAGE_COLOR);
value.Increament();
export var it=heapq.nlargest(20,allrows,__kwargtrans__({key:function __lambda__(x){return x[2]}}));
df1.merge(df2);
(function(){var __accu0__=[];for(var x=1;x<21;x++)__accu0__.append((__mod__(x-1,8)+2)*x);return __accu0__})();
pyl.draw();
export var converted_text=pattern.sub(function __lambda__(m){return format_term(m.group(0))},text);
ax[1].autoscale(true);
time.sleep(1);
export var Z=Y.transpose(1,2,0);
(function(){var __accu0__=[];for(var k of d1.py_keys()&l1)__accu0__.append([k,d1[k]]);return dict(__accu0__)})();
plt.show();
x.loc[x.B>=111&x.B<=500];
dict(y,__kwargtrans__(x));
list_.py_sort(__kwargtrans__({key:function __lambda__(x){return len(x[1])}}));
server.login(user,password);
array([[1,2],[0,2]]);
Note.objects.filter(__kwargtrans__({created__year:years.year}));
tuple([np.nonzero(starts)[0],np.nonzero(ends)[0]]);
plt.show();
print(p.stdout.read());
print(handle.read());
(function(){var __accu0__=[];for(var el of lst)if(isinstance(el,collections.Iterable)&&__in__(st,el))__accu0__.append(el);return __accu0__})();
random.shuffle(py_keys);
print(test[numpy.in1d(test.__getitem__([tuple([0,null,1]),1]),wanted)]);
tuple([int(numberA),int(numberB)]);
np.linalg.lstsq(a,b);
somelist.py_sort(__kwargtrans__({cmp:function __lambda__(x,y){return cmp(x.resultType,y.resultType)}}));
export var common_keys=list(dict_a.py_keys()&dict_b.py_keys());
set(df.Col1).union(set(df.Col2));
s.decode(encoding);
(function(){var __accu0__=[];for(var c of words)if(!c.isalpha()&&!c.isdigit()&&!c.isspace())__accu0__.append(c);return __accu0__})();
(function(){var __accu0__=[];for(var x of a)__accu0__.append(d[x]);return __accu0__})();
float(1.001).is_integer();
foo();
self.user.get_full_name();
self.Bind(wx.EVT_CHAR_HOOK,self.hotkey);
arr.__getitem__([1,-2]);
image[idx]=chex[idx];
print(function(){var __accu0__=[];for(var [k,v]of groupby(myList,__kwargtrans__({key:itemgetter(0)})))__accu0__.append(tuple(function(){var __accu1__=[];for(var t of v)__accu1__.append(t[1]);return py_iter(__accu1__)}()));return __accu0__}());
p.kill();
ax1.legend(__kwargtrans__({loc:2}));
export var match=re.search(re.escape(string),text);
f.close();
list(my_dataframe);
export var finalPath=os.path.abspath(os.path.join(p.netloc,p.path));
root.mainloop();
(function(){var __accu0__=[];for(var [k,v]of list(my_counter.py_items()))if(v>1)__accu0__.append(k);return __accu0__})();
var df=pd.concat(list_of_series,__kwargtrans__({axis:1})).transpose();
driver.switch_to_window(driver.window_handles[1]);
sys.stdout.write(chr(c+48));
equation1(...list_of_parameters);
bool(set(a)&set(b));
os.kill(pid,0);
self.create_socket(socket.AF_INET,socket.SOCK_STREAM);
print(line);
Player.objects.filter(Q(__kwargtrans__({games1__pk:self.pk}))|Q(__kwargtrans__({games2__pk:self.pk})));
var py_values=json.loads(data);
np.triu(A.T,1)+A;
var x=rnorm(__kwargtrans__({n:100,mean:0,sd:1}));
l.append(tuple([4,5]));
ax.set_xlim([-1,10]);
(function(){var __accu0__=[];for(var i of sequence_list)__accu0__.append(function(){var __accu1__=[];for(var j of rex.finditer(i))__accu1__.append(j.span());return __accu1__}());return __accu0__})();
browser.set_window_size(1400,1E3);
map(math.log10,x);
sorted(tuples,__kwargtrans__({key:function __lambda__(x){return tuple([x[0],x[2]])}}));
A[np.isnan(A)]=0;
froms[p[0]].append(p);
var result=np.array(function(){var __accu0__=[];for(var [_,g]of groupby(a))__accu0__.append(list(g));return __accu0__}());
BeautifulSoup(r.content).title.text;
var out=np.concatenate(input_list).ravel();
(area_width-string_width)/2;
urlparse.urljoin(url,urlparse.urlparse(url).path);
mrg.drop(drops,__kwargtrans__({axis:1}));
list(compress(seq,criteria));
var x=256*ord(pS[0])+ord(pS[1]);
xvfb.terminate();
(e.T/e.sum(__kwargtrans__({axis:1}))).T;
pylab.show();
[0,1,0,9,0,25,0,49,0,81];
quit_gracefully();
a+=b[idx].sum(0);
var d=np.array(dataPoints.tolist());
var posts=TodaysObject.objects.filter(datafilter);
var first2vals=function(){var __accu0__=[];for(var v of list(mydict.py_values()).__getslice__(0,2,1))__accu0__.append(v);return __accu0__}();
np.random.shuffle(A);
plt.legend();
data[0];
s.close();
cls.objects.py_get(__kwargtrans__({pk:self.pk}));
var d2=dict(function(){var __accu0__=[];for(var [k,v]of list(d1.py_items()))if(v>0)__accu0__.append(tuple([k,v]));return py_iter(__accu0__)}());
[1,1];
var z=dict(itertools.chain(py_iter(x.py_items()),py_iter(y.py_items())));
np.median([2,0,1,0,0]);
B[X.ravel()]=A.ravel();
print(function(){var __accu0__=[];for(var [k,v]of d.py_items())if(v==1)__accu0__.append(k);return __accu0__}());
draw();
runserver.py;
plt.plot(x,f(x),__kwargtrans__({zorder:1}));
redirect(client.authorize_url);
urllib.request.urlopen(url,postData);
plt.show();
df[df.ix.__getitem__([tuple([0,null,1]),tuple([2,null,1])]).abs().lt(1).all(1)];
k.set_contents_from_string(data_file.readlines());
df.reindex(idx);
subprocess.Popen([py_name],__kwargtrans__({stdout:devnull,stderr:devnull})).communicate();
reactor.run();
gtk.main();
print(dt.year,dt.month,dt.day);

timedelta(__kwargtrans__({hours:6}))/2;
self.modules=[];
df1.merge(df2);
setattr(self,k,v);
os.unlink(path);
plt.show();
sys.exit(app.exec_());
l[i].append(j);
ax.plot(list(range(10)));
np.argwhere(M.T==0).squeeze();
export var df_html=df.to_html();
print(list(set(function(){var __accu0__=[];for(var i of a)__accu0__.append(tuple(i));return py_iter(__accu0__)}())));
browser.py_get(url);
x.reshape(2,2,2,2).swapaxes(1,2).reshape(4,-1);
mpl_plt.show();
con.close();
locals().py_update(parm);
var result=DataFrame(result).reset_index(__kwargtrans__({drop:true}));
py_typeof(b)===Test1;
map(list,set(map(tuple,k)));
var d=function(){var __accu0__=[];for(var t of[t0,t1,t2])__accu0__.append([t.key,t]);return dict(__accu0__)}();
b.shape;
any(function(){var __accu0__=[];for(var x of someList)__accu0__.append(__in__(x,someDict));return py_iter(__accu0__)}());
dists/=dists.max(__kwargtrans__({axis:tuple([0,1])}));
var d=dict(function(){var __accu0__=[];for(var [k,v]of d1.py_items())__accu0__.append(tuple([k,tuple(v)]));return py_iter(__accu0__)}());
time.sleep(.5);
plt.show();
array1.reshape(array2.shape);
l.py_pop(0);
var b=map(function __lambda__(x){return x.__getslice__(0,9,1)},g);
os.path.join(path,format);
app.mainloop();
plt.clf();
np.random.choice(np.flatnonzero(b==b.max()));
instance.save();
print(np.allclose(r[1],b));
list(d.py_keys());
parse_freebase_quadruple_tsv_file(file_name);
var first2pairs=function(){var __accu0__=[];for(var k of list(mydict.py_keys()).__getslice__(0,2,1))__accu0__.append([k,mydict[k]]);return dict(__accu0__)}();
writer.close();
(function(){var __accu0__=[];for(var i of[1,2])for(var z of zs_i)__accu0__.append(tuple([i,z]));return __accu0__})();
(function(){var __accu0__=[];for(var x=0;x<width;x++)for(var y=0;y<height;y++)__accu0__.append(tuple([x,y]));return py_iter(__accu0__)})();
pylab.show();
ax.set_yticks([]);
cursor.execute(sql,args);
d[cols[0]]=dict(function(){var __accu0__=[];for(var [idx,v]of enumerate(cols.__getslice__(1,null,1)))__accu0__.append(tuple([headers[idx],v]));return py_iter(__accu0__)}());
sys.exit(app.exec_());
group[group.apply(function __lambda__(x){return len(x)>1})];
root.mainloop();
random.shuffle(itrange);
winfile.close();
self.exec_();
result[i].append(j);
avgs[np.where(binplace==1)];
self.user_set.all();
sys.exit();
sess.run(train_op);
random.randint(1,6);
server.mainloop();
export var tree=soupparser.parse(StringIO(text));
var a=numpy.nan_to_num(a);
my_file.copy(to_file);
Py_Finalize();
find_eulerian_tour(cg4);
df[-mask.any(__kwargtrans__({axis:1}))];
export var capture=cv.CaptureFromCAM(-1);
deletetest[2];
b+=[c];
plt.gcf().axes[0].xaxis.set_major_formatter(formatter);
var rdd=df.rdd;
plt.show();
print(doc.toxml());
plt.plot(xs,density(xs));
numpy.column_stack(tuple([a,b,c]));
A-mean.__getitem__([tuple([0,null,1]),np.newaxis]);
grid[function(){var __accu0__=[];for(var a of np.where(mask))__accu0__.append(a[second_mask]);return __accu0__}()]=100;
func();
fcntl.ioctl(s.fileno(),SIOCGIFFLAGS,ifr);
auth_login(request,user);
a.__getitem__([0,1,2]);
print(tuple([key,py_values]));
frame.axes.get_xaxis().set_ticks([]);
ax2.contour(theta_edges.__getslice__(0,-1,1),r_edges.__getslice__(0,-1,1),H);
export var BASE_DIR=os.path.dirname(os.path.dirname("./P2JSnippets.py"));
print(t.total_seconds());
map(len,s.py_split());
max(set(list),__kwargtrans__({key:list.count}));
ax1.yaxis.tick_left();
var foo=_log_error(logger)(partial(bar,someparam));
export var input_list=function(){var __accu0__=[];for(var a of input_list)__accu0__.append(int(a));return __accu0__}();
urllib.request.install_opener(opener);
self.box.grid(__kwargtrans__({column:0,row:0}));
sys.exit(0);
request.session.set_expiry(request.session.get_expiry_age());
dict(function(){var __accu0__=[];for(var an_object of object_list)__accu0__.append(tuple([an_object.py_name,an_object]));return __accu0__}());
sys.exit();
render_to_response(your_custom_template,ctx);
df.ix[0];
draw.text(tuple([10,0]),txt,tuple([0,0,0]),__kwargtrans__({font:font}));
layout.addWidget(self.lineedit);
ax.add_patch(polygon1);
a.py_split();
[9.444064187694842,1.2256912728995506];
new set([new set([jsonData|safe])]);
!seen.add(x);
f.close();
(function(){var __accu0__=[];for(var x=0;x<10;x++)__accu0__.append([x,x*x]);return dict(__accu0__)})();
export var bydiscra=sorted(promotion_items,__kwargtrans__({key:bydra}));
sys.stdout.write(data);
plot(X,Y);
wx.Dialog.__init__(self,...args,__kwargtrans__(kwds));
datetime.timedelta(__kwargtrans__({hours:-5}));
time.mktime(now.timetuple());
export var table=function(){var __accu0__=[];for(var row of data)__accu0__.append(row);return __accu0__}();
time.sleep(10);
tuple(l.T);
mngr.window.setGeometry(newX,newY,dx,dy);
isinstance(b,Test1);
my_file.seek(0,os.SEEK_END);
(function(){var __accu0__=[];for(var [i,j]of zip_longest(start,end))__accu0__.append(s.__getslice__(i,j,1));return __accu0__})();
np.random.shuffle(b);
writer.writerows(new_rows);
print(list(matdata.py_keys()));
con.close();
reverse(str1.__getslice__(1,null,1))+str1[0];
fig.canvas.draw();
print(simplejson.loads(json_string));
__init__.py;
self.canvas.draw();
new set([new set([form.certification()])]);
[ComVisible(py_true)];
var df=pd.concat(list(pd.read_csv(Reader(gen()),__kwargtrans__({chunksize:1E4}))),__kwargtrans__({axis:1}));
len(haystack)-len(parts[-1])-len(needle);
sorted(l,__kwargtrans__({key:function __lambda__(x){return tuple([x.__getslice__(0,-1,1),x[-1].isdigit(),x])}}));
dict(widget_set.py_pop());
plt.show();
s.group(0);
list(q)[0];
print(lilfoo.baaz);
sorted(l,__kwargtrans__({key:function __lambda__(x){return float(x[1])}}));
self.button.pack();
print(regex.search(data).groups());
sys.exit();
export var diag=function(){var __accu0__=[];for(var i=0;i<len(mat);i++)__accu0__.append(mat[i][i]);return __accu0__}();
ax.plot_surface(X,Y,Z);
export var matching_lines=function(){var __accu0__=[];for(var line of string_list)if(filter_func(line))__accu0__.append(line);return __accu0__}();
plt.show();
print(function(){var __accu0__=[];for(var n of function(){var __accu1__=[];for(var x of q)__accu1__.append(x.giveMyNum());return py_iter(__accu1__)}())if(n>1)__accu0__.append(n);return __accu0__}());
L2.py_sort(__kwargtrans__({key:function __lambda__(x){return L.index(x)}}));
int(log10(x))+1;
var mySet=set(function(){var __accu0__=[];for(var x of TUPLES)__accu0__.append(x[0]);return py_iter(__accu0__)}());
export var suspect=dict({});
os.kill(9999999999999,0);
user.profile.save();
Foo.__init__.__self__.__class__;
print(track.permalink_url);
var __left0__=tuple([int(a),a-int(a)]);var a=__left0__[0];var b=__left0__[1];
plt.show();
newlist.append(i);
np.frombuffer(test);
dict(function(){var __accu0__=[];for(var [k,v]of list(mydict.py_items()))if(k>=6)__accu0__.append(tuple([k,v]));return __accu0__}());
l.__getslice__(0,1,1)+function(){var __accu0__=[];for(var [a,b]of zip(l,l.__getslice__(1,null,1)))if(a!=b)__accu0__.append(b);return __accu0__}();
left.remove(left[0]);
local_file.write(f.read());
(function(){var __accu0__=[];for(var seq of my_list)if(function(){var __accu1__=[];for(var item of seq)if(some_condition())__accu1__.append(item);return __accu1__}())__accu0__.append(seq);return __accu0__})();
(function(){var __accu0__=[];for(var [i,v]of enumerate(bin(109).__getslice__(0,1,-1)))if(int(v))__accu0__.append(Math.pow(2,i));return __accu0__})();
server.serve_forever();
print(key,d[key]);
model_to_dict(instance,__kwargtrans__({fields:function(){var __accu0__=[];for(var field of instance._meta.fields)__accu0__.append(field.py_name);return __accu0__}()}));
sys.exit(0);
(function(){var __accu0__=[];for(var k of list(h1.py_keys())+list(h2.py_keys()))__accu0__.append([k,min(h1.py_get(k)||h2[k],h2.py_get(k)||h1[k])]);return dict(__accu0__)})();
platform.system();
sorted(A,__kwargtrans__({key:A.py_get,reverse:true})).__getslice__(0,5,1);
var __left0__=p.communicate();var stdout=__left0__[0];var stderr=__left0__[1];
var __left0__=function(){var __accu0__=[];for(var t of mylist)if(t[0]==10)__accu0__.append(t[1]);return __accu0__}();var age=__left0__[0];
export var comb=list(comb);
Publication.objects.all().delete();
(function(){var __accu0__=[];for(var a of A)for(var b of B)if(__in__(a,b))__accu0__.append(tuple([a,b]));return __accu0__})();
var number=random.randint(5,20);
some_queue.py_get();
re.findall(s,text);
np.min(np.nonzero(np.hstack(tuple([B,1]))));
var m=coo_matrix(tuple([v,tuple([l-1,c-1])]),__kwargtrans__({shape:tuple([l.max(),c.max()])}));
export var uppers=function(){var __accu0__=[];for(var l of letters)if(l.isupper())__accu0__.append(l);return __accu0__}();
func(func,...args,__kwargtrans__(kwargs));
pygame.display.flip();
reactor.run();
c.setopt(pycurl.WRITEFUNCTION,function __lambda__(bytes){return len(bytes)});
unsure_rows[key].append(row[key]);
(function(){var __accu0__=[];for(var sublist of list_of_lists)__accu0__.append(item);return py_iter(__accu0__)})();
numpy.digitize(b,a);
var cleaned=function(){var __accu0__=[];for(var _f of map(str.strip,words))if(_f)__accu0__.append(_f);return __accu0__}();
ax.set_xlim(-10,10);
app.MainLoop();
var p=sparse.dia_matrix(1/np.array(x),__kwargtrans__({shape:tuple([len(x),len(x)])}));
numpy.array([.24])[0]==.24;
py_typeof(list(d.py_values()));
export var X=1;
self.assertEqual(content,expected_content);
var s=pd.Series([0,1,0,1,1,1,0,0,1,1,0,1,0,0,1]);
glob.glob(py_name)[0];
var result_dict=function(){var __accu0__=[];for(var u of my_query.fetchall())__accu0__.append(u.__dict__);return __accu0__}();
curses.endwin();
time.sleep(1);
getattr(filters,method)(__kwargtrans__(options));
driver.switch_to_window(driver.window_handles[-1]);
(function(){var __accu0__=[];for(var [k,v]of list(d.py_items()))__accu0__.append([k,map(sum,zip(...v))]);return dict(__accu0__)})();
a.__getitem__([tuple([0,null,1]),1]);
reactor.run();
var newNums=function(){var __accu0__=[];for(var [i,x]of enumerate(nums))if(x==12)__accu0__.append(i);return __accu0__}();
os.close(fh1);
var fig=plt.figure(__kwargtrans__({figsize:tuple([6,6])}));
var now=datetime.now();
s.play();
werte.__getslice__(1,-1,1)[(diff(werte).__getslice__(0,-1,1)>0)*(diff(werte).__getslice__(1,null,1)<0)];
numpy.unravel_index(A.argmin(),A.shape);
f.__dict__.py_update(b);
sys.stdout.buffer.write(pdf_file.read());
ax.xaxis.set_minor_locator(MultipleLocator(.2));
var df=df[df.columns.__getslice__(0,11,1)];
[true,true,false,true,true];
var f=function __lambda__(){var x=tuple([].slice.apply(arguments).slice(0));return sum(x)-1};
print(dir(__builtins__));
var contents=urllib.request.urlopen(request).read();
print(args);
ax.yaxis.set_ticks([16,8,4,2,1,0]);
numpy.reshape(array,array.shape+tuple([1]));
min(timeit.repeat(function __lambda__(){return dict(function(){var __accu0__=[];for(var [k,v]of zip(py_keys,py_values))__accu0__.append(tuple([k,v]));return py_iter(__accu0__)}())}));
export var user=models.ForeignKey(User);
deletex.__getslice__(i+1,null,1);
self.setWindowFlags(Qt.FramelessWindowHint);
list[0].py_pop(0);
req.close();
(function(){var __accu0__=[];for(var x of sorted(data,__kwargtrans__({key:function __lambda__(x){return x[1]},reverse:true})).__getslice__(0,6,1))__accu0__.append(x[0]);return __accu0__})();
pdb.set_trace();
export var degs=degrees(rads);
(function(){var __accu0__=[];for(var elem of g)__accu0__.append(elem.__getslice__(0,12,1));return __accu0__})();
plt.show();
setattr(module_obj,method_name,func);
self.clickcnx.close();
export var dict1=function(){var __accu0__=[];for(var x of py_keys)__accu0__.append([x,dict1[x]]);return dict(__accu0__)}();
df.reindex(approach1(df.A.py_values,df.B.py_values));
re.findall(pattern,s);
pd.tslib.repr_timedelta64;
app.run(__kwargtrans__({debug:true}));
py_next(function(){var __accu0__=[];for(var x of lst)if(__mod__(x,2)==0)__accu0__.append(x);return py_iter(__accu0__)}());
self.assertDictEqual(a,b);
export var problem=importlib.import_module(sys.argv[1]);
b.insert(bisect(b,a),a);
union([tuple([10,12]),tuple([9,16])]);
f.write(line);
build_stylus();
br.set_response(response);
var __left0__=cv2.findContours(img,cv2.RETR_LIST,cv2.cv.CV_CHAIN_APPROX_NONE);export var contours=__left0__[0];export var _=__left0__[1];
(function(){var __accu0__=[];for(var [k,v]of list(mydict.py_items()))if(list(mydict.py_values()).count(v)>1)__accu0__.append(k);return __accu0__})();
pygame.init();
dev.leds(__kwargtrans__({verbose:true}));
(function(){var __accu0__=[];for(var sublist of zip(...myListOfLists))__accu0__.append(sum(sublist));return __accu0__})();
export var last_row=df.ix[df.last_valid_index()];
pygame.init();
var ax=fig.add_subplot(111);
var res=cv2.bitwise_and(closex,closey);
print("./P2JSnippets.py");
plt.show();
eval(x);
cv2.destroyAllWindows();
var c=function(){var __accu0__=[];for(var y of a)__accu0__.append(function(){var __accu1__=[];for(var [i,x]of enumerate(y))__accu1__.append(x+b[i]);return __accu1__}());return __accu0__}();
funkytown._asdict();
export var my_string=my_string.py_replace(k,v);
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
print(read_records(data));
Foo().bar();
glUniform1i(self.tex2D,0);
list.__getitem__(self,index);
print(parser.parse(treebank.sents()[0]));
numpy.vstack(tuple([x,y]));
[[],[]];
ax.set_xticks(xticks);
button.clicked.connect(function __lambda__(){return self.commander(command)});
l[0][0]+=1;
export var height=img.get_height();
tree.removeItemWidget(i,0);
fig.canvas.draw();
sys.getsizeof(i);
print(fibonacci(int(eval(input()))));
export var birth_years=dict(zip(py_name,year));
var ax=fig.add_subplot(1,1,1);
var d=function(){var __accu0__=[];for(var [i,b]of enumerate(a))__accu0__.append([b,a.__getitem__([tuple([0,null,1]),i])]);return dict(__accu0__)}();
tk.mainloop();
f.write(content);
TextCtrlInstance.GetValue();
np.flatnonzero(~a.__getslice__(0,-2,1)&a.__getslice__(1,-1,1)&a.__getslice__(2,null,1));
asdf.save();
plt.ylim(10,40);
libdl.dlclose(handle);
var Z=func(X,Y);
plt.show();
ax.set_yticklabels(y_label,__kwargtrans__({fontsize:20}));
cursor.execute(qry,list(myDict.py_keys())+list(myDict.py_values()));
os._exit(0);
random.shuffle(r);
my_treeview.setEditTriggers(QAbstractItemView.NoEditTriggers);
var total=value[c1-1]+value[c2-1];
plt.show();
df.groupby(__kwargtrans__({level:0,py_sort:false})).transform(function __lambda__(x){return sorted(x,__kwargtrans__({key:pd.isnull}))});
print(lxml.etree.tostring(doc));
m.mask=np.repeat(i==j,k.size,__kwargtrans__({axis:2}));
subversion.search(s).group();
var __except0__=AssertionError(expression2);__except0__.__cause__=null;throw __except0__;
calendar.monthrange(2012,2)[1];
frames.append(pandas.DataFrame(row));
np.sqrt((a*a).sum(__kwargtrans__({axis:1})));
QtGui.QWidget.__init__(self);
print(os.path.abspath(my_module.__file__));
plt.show();
self.view.setModel(self.model);
random.shuffle(word);
export var img_as_np=np.asarray(img.getdata()).reshape(img.size[1],img.size[0],-1);
data.py_setdefault(k,[]).append(v);
self.func(...args,__kwargtrans__(self.kwargs));
print(y.max());
df.apply(OrderedDict);
print(list(date_range(5,2)));
QMainWindow.__init__(self,...args);
phrase.strip().capitalize();
var min_keys=function(){var __accu0__=[];for(var k of d)if(d[k]==min_value)__accu0__.append(k);return __accu0__}();
list(choice(json_obj[k]).py_values())[0];
df.head();
df.plot(__kwargtrans__({subplots:true}));
(function(){var __accu0__=[];for(var d of l)__accu0__.append(tuple(d.py_values()));return __accu0__})();
time.sleep(1);
sys.path.insert(0,p);
plt.show();
sys.stdout.write(py_next(spinner));
new_lst.append(x);
sys.stdout.flush();
curses.endwin();
PyErr_Clear();
np.asarray(np.bmat([[A,Z],[Z,B]]));
ax.add_patch(polygon2);
sock.bind(tuple([UDP_IP,UDP_PORT]));
nodeenv- -python-virtualenv;
p.wait();
(function(){var __accu0__=[];for(var group of zip(...[py_iter(data)]*size))__accu0__.append(sum(group)/size);return __accu0__})();
list(itertools.product(...l));
helloworld.helloworld();
plt.show();
pd.to_numeric(s);
sum(function(){var __accu0__=[];for(var x of a)__accu0__.append(x>7);return py_iter(__accu0__)}());
abs(n);
var df=pd.read_csv(io.StringIO(string),__kwargtrans__({delim_whitespace:true}));
var ax=pylab.gca();
p.stdin.close();
file.close();
threading.Timer(60,f).start();
plt.show();
self.create_socket(socket.AF_INET,socket.SOCK_STREAM);
x[0].append([]);
var l=list(t);
obj.func1();
export var list_of_nums=function(){var __accu0__=[];for(var x of list_of_nums)if(x!=2)__accu0__.append(x);return __accu0__}();
HttpResponse(html);
sys.stdout.flush();
sum(function(){var __accu0__=[];for(var x of l)__accu0__.append(bool(x));return py_iter(__accu0__)}());
var c=np.in1d(a,b);
var diag=function(){var __accu0__=[];for(var [i,row]of enumerate(mat))__accu0__.append(row[i]);return __accu0__}();
tuple([[0,0,0,0,1,1]]);
pygame.quit();
self.sections.py_clear();
all(function(){var __accu0__=[];for(var i=2;i<a;i++)__accu0__.append(__mod__(a,i));return py_iter(__accu0__)}());
sys.stderr=logger;
sys.exit(100);
time.sleep(10);
(function(){var __accu0__=[];for(var seq of my_list)__accu0__.append(function(){var __accu1__=[];for(var item of seq)if(some_condition)__accu1__.append(item);return __accu1__}());return __accu0__})();
list(range(start,end,step));
conn.close();
proc.wait();
plt.plot();
plt.show();
PyObject_HEAD_INIT(NULL);
var age=models.IntegerField();
print(response.status_code);
main();
sorted(py_iter(cityPopulation.py_items()),__kwargtrans__({key:function __lambda__(k_v){return k_v[1][0]},reverse:true}));
f.write(bytes(bin_array));
sum(function(){var __accu0__=[];for(var i of l1)if(isinstance(i,int))__accu0__.append(i);return __accu0__}());
np.meshgrid(x,x,__kwargtrans__({sparse:true}));
df.iloc.__getitem__([tuple([0,2,1]),tuple([0,null,1])]);
logging.getLogger().addHandler(console_handler);
app.MainLoop();
max(function(){var __accu0__=[];for(var x of ls)if(x<0)__accu0__.append(x);return __accu0__}());
var data=numpy.arange(5*4).reshape(5,4);
all(function(){var __accu0__=[];for(var [x,y]of zip(l1,l2))__accu0__.append(x*y>0);return py_iter(__accu0__)}());
app.MainLoop();
var f=function __lambda__(x){return x[0]*x[0]*x[0]+x[1]*x[1]};
datetime.datetime.date(2011,1,1);
self.grid_columnconfigure(0,__kwargtrans__({weight:1}));
sleep(1);
plt.xlim(0,125);
export var min_unfairness=min(function(){var __accu0__=[];for(var i=0;i<n-k+1;i++)__accu0__.append(num[i+k-1]-num[i]);return py_iter(__accu0__)}());
var logger=logging.getLogger(__name__);
print(function(){var __accu0__=[];for(var x of T1)__accu0__.append(int(x));return __accu0__}());
A[~np.in1d(A.dot(cumdims),B.dot(cumdims))];
(function(){var __accu0__=[];for(var [x,y]of groupby(L))if(len(list(y))<2)__accu0__.append(x);return __accu0__})();
plt.scatter(x,y);
TimeModel.objects.create(__kwargtrans__({time:td.total_seconds()}));
__init__.py;
df.columns[pd.isnull(df).any()].tolist();
var a=function(){var __accu0__=[];for(var _=0;_<8;_++)__accu0__.append([0]*8);return __accu0__}();
print(binascii.hexlify(content));
now.py_replace(__kwargtrans__({minute:0,hour:0,second:0,microsecond:0}));
p.wait();
plt.show();
sys.exit();
writer.writerows(rows);
time.sleep(5);
export var lines=set(f.readlines());
float(x);
sys.path.append(dirname("./P2JSnippets.py"));
all(function(){var __accu0__=[];for(var x of L)__accu0__.append(x==L[0]);return py_iter(__accu0__)}());
(function(){var __accu0__=[];for(var a of s)if(s.count(a)==1)__accu0__.append(a);return __accu0__})();
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
np.multiply(a,b);
var result=function(){var __accu0__=[];for(var x of product(...lists))__accu0__.append(separator.join(map(str,x)));return __accu0__}();
(function(){var __accu0__=[];for(var py_name of data1)if(__in__(py_name,data2))__accu0__.append(py_name);return __accu0__})();
export var reversed_arr=np.swapaxes(np.swapaxes(arr,0,k).__getslice__(0,null,-1),0,k);
df.drop_duplicates();
server_socket.setsockopt(socket.SOL_SOCKET,socket.SO_REUSEADDR,1);
writer.close();
print(imap_conn.list());
plt.show();
export var user_pass=dict(cursor.fetchall());
os.path.dirname(sys.argv[0]);
json.dumps(data);
(function(){var __accu0__=[];for(var j=0;j<M;j++)__accu0__.append(function(){var __accu1__=[];for(var i=0;i<N;i++)__accu1__.append(random.random());return __accu1__}());return __accu0__})();
src.close();
gtk.main();
len(a)/np.sum(1/a);
datetime.date.fromtimestamp(ts).month;
df.divide(df.ix[0]/100);
df.apply(function __lambda__(x){return sum(x.isnull().py_values)},__kwargtrans__({axis:0}));
print(json.dumps(e,__kwargtrans__({cls:new_alchemy_encoder(),check_circular:false})));
print(d.py_get(frozenset(tuple([2,1]))));
time.sleep(5);
var l=function(){var __accu0__=[];for(var d of days)if(__in__(d.weekday(),[1,2]))__accu0__.append(d);return __accu0__}();
barbar.py;
(function(){var __accu0__=[];for(var [i,x]of enumerate(y))if(i!=1)__accu0__.append(x);return __accu0__})();
s.lstrip(punctuation);
var data=urllib.request.urlopen(url).read();
wav_file.close();
ax.legend();
x();
os.rename(os.path.join(base,old_name),os.path.join(base,new_name));
plt.show();
ax.scatter(x,y,__kwargtrans__({c:c,cmap:cmap}));
chain.from_iterable(function(){var __accu0__=[];for(var r=1;r<len(s)+1;r++)__accu0__.append(combinations(s,r));return py_iter(__accu0__)}());
np.vstack(a);
ftpc.close();
fig.tight_layout();
ax.set_ylim(0,10);
Response(serializer.data);
ax.set_xlim(0,20);
plt.legend();
kNN1.fit(data,class_labels);
df.index;
export var reg=conn.fetchall();
var a=a[a>=-100&a<=100];
datetime.datetime.fromtimestamp(1004256400);
export var p2=Process(__kwargtrans__({target:f,args:tuple([d])}));
self.finish();
p.terminate();
a.reshape(-1,np.prod(a.shape.__getslice__(-2,null,1))).__getitem__([tuple([0,null,1]),tuple([0,null,-1])]).reshape(a.shape);
df.max(1);
matches.append([os.path.join(root,filename),error]);
sock.connect(tuple([address,port]));
func();
__init__.py;
fig.close();
time.sleep(5);
R2a.__init__(self);
map(int,sum(map(function __lambda__(x){return list(str(x))},lst),[]));
plt.plot(x,x);
app.mainloop();
Series(df.Letter.py_values,__kwargtrans__({index:df.Position})).to_dict();
df.prod(__kwargtrans__({axis:1}));
l.py_sort();
dicts.flatMap(function __lambda__(x){return list(x.py_items())});
sorted(li,__kwargtrans__({key:function __lambda__(x){return x[1]}}));
(function(){var __accu0__=[];for(var [a,b]of zip(idata,idata))__accu0__.append(myfunc(a,b));return __accu0__})();
sum(function(){var __accu0__=[];for(var x=0;x<size;x++)__accu0__.append(data.__getslice__(x,null,size));return py_iter(__accu0__)}())/size;
root.overrideredirect(true);
(function(){var __accu0__=[];for(var arr of np.py_split(v,np.where(mask)[0]+1))__accu0__.append(np.max(arr));return __accu0__})();
var r=client.post(URL,__kwargtrans__({data:login_data,headers:dict(__kwargtrans__({Referer:URL}))}));
setattr(self,py_name,value);
print(top[0][1][2]);
random.seed(1);
np.histogramdd(data,__kwargtrans__({bins:tuple([2,2,2])}))[0];
numpy.count_nonzero(25<a&a<100);
a+=numpy.histogram(b,numpy.arange(len(a)+1))[0];
export var surface=pygame.Surface(tuple([100,100]));
sorted(arr[ind]);
var response=view(request);
a[np.isfinite(a)];
ax.xaxis.set_major_locator(MultipleLocator(20));
np.eye(d.shape[1])*d.__getitem__([tuple([0,null,1]),tuple([0,null,1]),np.newaxis]);
time.sleep(1);
plt.show();
export var imageblob=db.BlobProperty();
dict(d1,__kwargtrans__(d2));
clf.fit(X_train,y_train);
export var local_dt=datetime.datetime.fromtimestamp(timestamp);
(function(){var __accu0__=[];for(var _=0;_<1E4;_++)__accu0__.append(0);return __accu0__})();
string.format_map(function(){var __accu0__=[];for(var [k,v]of list(data.py_items()))__accu0__.append([k,Pluralizer(v)]);return dict(__accu0__)}());
(function(){var __accu0__=[];for(var c of df)__accu0__.append(c);return __accu0__})();
ax.set_navigate(false);
var data=json.loads(response.body);
dict(function(){var __accu0__=[];for(var c of string)__accu0__.append(tuple([c,string.count(c)]));return py_iter(__accu0__)}());
sys.path.insert(0,p);
self.stdout.write(data);
export var dropped_copies=function(){var __accu0__=[];for(var i=0;i<2;i++)__accu0__.append(function(){var __accu1__=[];for(var x of copies[i])__accu1__.append(x[i]);return __accu1__}());return __accu0__}();
temp.__getslice__(0,null,-1).py_sort();
(function(){var __accu0__=[];for(var [x,y]of zip(xscat,yscat))__accu0__.append(peaks([x,y]));return __accu0__})();
[1,4,7];
fig.tight_layout();
(function(){var __accu0__=[];for(var i=0;i<Math.floor(len(arr)/2);i++)__accu0__.append(tuple([arr[i],arr[-i-1]]));return __accu0__})();
sys.exit(app.exec_());
df.loc[df.A.isin(a)];
list(_);
print(output[0]);
[[1,5],[6,11]];
time.sleep(5);
print(argparse._sys.argv[0]);
pd.DataFrame(data);
export var suite=unittest.TestSuite();
root.mainloop();
driver.manage().timeouts().pageLoadTimeout(15,TimeUnit.SECONDS);
matches.extend(isbn.findall(line));
y.__getitem__([tuple([0,null,1]),tuple([0,null,2])]);
OrderedDict(py_items);
export var beginnings=numpy.where(diffs==1);
time.sleep(.1);
var a=np.array(a);
var application=wsgi.WSGIHandler();
var a=a.clip(__kwargtrans__({min:0}));
threading.Thread.__init__(self);
(function __lambda__(x,y){return set([x])==(b?y:function __lambda__(x,y){return __in__(x,y)})});
main();
plt.show();
random.randrange(100,20001,100);
plt.figure(__kwargtrans__({figsize:tuple([10,7])}));
print(m.group(1));
cv2.waitKey(0);
export var pos=nx.spring_layout(G,__kwargtrans__({k:.15,iterations:20}));
f.close();
results.append(tuple([url,urlopen(url).read()]));
ax2.set_xlim([0,repeat_length]);
root.mainloop();
var array=list(range(numCase));
list(solve(4));
plt.show();
convertfile.write(line);
match.start(1);
plt.show();
np.put(a,np.ravel_multi_index(idx.T,a.shape),5);
stackless.run();
np.argmax(np.random.multinomial(1,a,1));
lin.py_split();
print(dict(zip(py_keys,zip(...data))));
var result=function(){var __accu0__=[];for(var key of list(crucial.py_keys())&list(dishes.py_keys()))__accu0__.append(dishes[key]);return __accu0__}();
df;
A.dot(B).dot(C);
sorted(points);
1/2;
solution.sort_index();
df.isnull().any();
var data=data.groupby(data.index).sum();
memory2.py_clear();
numpy.hstack(tuple([x,y]));
export var sums=function(){var __accu0__=[];for(var subseq of subseqs)__accu0__.append(sum(subseq));return __accu0__}();
py_name.ljust(15).__getslice__(0,15,1);
[datetime.date(2010,2,27),datetime.date(2010,2,28)];
f2.write(lines[i+2]);
print(os.walk(DIR_PATH).py_next()[2]);
sys.stdout.write(os.read(stdout.fileno(),1024));
(function(){var __accu0__=[];for(var i of range(0,len(line),n))__accu0__.append(line.__getslice__(i,i+n,1));return __accu0__})();
export var PROJECT_PATH=os.path.dirname(os.path.abspath("./P2JSnippets.py"));
Point(x,y);
var ax=fig.add_subplot(211);
export var queryset=MyModel.objects.all();
db.session.add(new_provider);
threading.Thread(__kwargtrans__({target:play_audio})).start();
Counter(words).most_common(10);
np.where(np.array([0,1]));
[100,10,20];
cur.execute(query,args);
var df=df.py_sort();
max(l_one+l_two);
gnuplot.stdin.flush();
ppf(q,__kwargtrans__({loc:0,scale:1}));
to_file.write(replacement_line);
ax.yaxis.set_major_locator(MultipleLocator(.5));
pylab.show();
hatch_path_stroke.width(1);
ctypes.c_void_p(offset);
__init__.py;
s.apply(pd.to_datetime,__kwargtrans__({dayfirst:true}));
locals()[string1+string2]();
print();
var __left0__=scipy.optimize.curve_fit(func,x,ynoisy);export var popt=__left0__[0];export var pcov=__left0__[1];
np.mean(gp);
df[df.groupby(__kwargtrans__({level:0})).transform(np.size).gt(1).py_values];
combo.focus_set();
ws.write(rowi,coli,float_if_possible(value));
sys.exit(app.exec_());
fig.canvas.draw();
df.sort_index(__kwargtrans__({inplace:true}));
np.count_nonzero(a.__getitem__([tuple([0,2,1]),tuple([0,2,1])]));
df[cols]=np.where(df[cols]<0,np.nan,df[cols]);
remove_extras_and_sort(my_list);
signal.signal(signal.SIGINT,signal_handler);
d[len(lst)]+=1;
export var sets=function(){var __accu0__=[];for(var [i,j]of enumerate(myList))if(j==9)__accu0__.append(tuple([myList[i-1],j]));return __accu0__}();
time.sleep(10);
export var game=models.ForeignKey(Game);
new_instance.save();
br.set_handle_redirect(true);
p.__setslice__(i,j,null,list(sorted(p.__getslice__(i,j,1))));
text_classifier.fit(X_vectorized,y_train);
salesdata.Outlet_Size.dropna().unique();
l.extend(map(int,function(){var __accu0__=[];for(var w of line.py_split())if(w.isdigit())__accu0__.append(w);return py_iter(__accu0__)}()));
new set([new set([person.get_gender_display])]);
instance.save();
files.extend(glob(os.path.join(dir,pattern)));
(function(){var __accu0__=[];for(var fn of a)__accu0__.append(os.path.splitext(os.path.basename(fn))[0]);return __accu0__})();
ppp_data.rename(__kwargtrans__({columns:dict(zip(columns.__getslice__(2,null,1),names)),inplace:true}));
var lines=random.sample(f.readlines(),5);
f.write(text);
sumlog([5,4,1,0,2])<sumlog([5,1,4,1E-4,1]);
LOGNORM.DIST(x,Ln(mean),standard_dev,FALSE);
LOGNORM.DIST(x,Ln(mean),standard_dev,TRUE);
self.attr2=attr2;
bottle.run();
a.any(__kwargtrans__({axis:1}));
array([2,2,2,2,1,2,1,2]);
print(file(path).read());
nx.draw(G,__kwargtrans__({pos:pos,with_labels:true}));
open_smbus.restype=ctypes.c_void_p;
expit(.458);
a.max(__kwargtrans__({axis:0}))[0];
time.sleep(1);
tuple([letter2,letter1,letter4,letter5]);
cur.close();
os.path.py_split(s);
ax.add_patch(rect1);
sys.path.append(path);
time.sleep(1);
any(function(){var __accu0__=[];for(var char of inputString)__accu0__.append(char.isdigit());return py_iter(__accu0__)}());
export var t1=set(function(){var __accu0__=[];for(var i of t)__accu0__.append(frozenset(i));return py_iter(__accu0__)}());
Py_Finalize();
out_file.write(line);
print(xls.sheet_names());
list(itertools.product(...l));
bool(np.array([0,0]));
tuple([1,2]).__getslice__(0,1,1);
pickle.loads(pickle.dumps(C()));
list(itertools.chain.from_iterable(a));
DBSession.close();
output_stream.close();
export var sorted_li=sorted(li,__kwargtrans__({key:function __lambda__(x){return tuple([-x[1],x[0]])}}));
plt.show();
cherrypy.engine.exit();
export var tmp_file=os.path.join(settings.MEDIA_ROOT,path);
os.execl(sys.executable,sys.executable,...sys.argv);
queryset.filter(__kwargtrans__({mycolname__len__gte:10}));
file_out[-1]=file_out[-1].__getslice__(0,-1,1);
A.__getitem__([tuple([0,1,2]),tuple([0,1,0])]);
reactor.run();
list_.py_sort(__kwargtrans__({key:function __lambda__(x){return float(x[1])}}));
[0,0,0,.4,.6];
print(match.group(),match.start(),match.end());
var e=Example();
ipshell();
py_values[np.where((coo==[1,2]).all(1))].mean();
list(adjacent_tuples(list(range(8)),4));
self.Bind(wx.EVT_LEFT_UP,self.OnLeftUp);
app.run();
var base=df.index.get_indexer_for(df[df.A==2].index);
self._tree=function __lambda__(f){return f(f)}(function __lambda__(t){return defaultdict(function __lambda__(){return t(t)})});
print(json.dumps(data,__kwargtrans__({ensure_ascii:false})));
doctest.testmod();
export var oceans=[[],[],[],[],[]];
logging.basicConfig(__kwargtrans__({level:logging.DEBUG}));
(m.__getslice__(1,null,1)>m.__getslice__(0,-1,1)).sum()+m[0];
cords_set.add(tuple([x,y]));
print(list(message.py_keys()));
var t=dt.time(0,0,0);
df.tail(1).index;
syncdict.py_update([tuple([key,0])]);
plt.show();
f.close();
self.window2.show();
(function(){var __accu0__=[];for(var s of mylist)__accu0__.append(s+mystring);return py_iter(__accu0__)})();
other_list.remove(other_list[index]);
a.__getslice__(n,null,1)+[py_default][0];
var maxlen=max(function(){var __accu0__=[];for(var sublist of a)__accu0__.append(len(sublist));return py_iter(__accu0__)}());
var __left0__=zip(...lst);var x=__left0__[0];var y=__left0__[1];
export var distribution=scipy.stats.gengamma(100,70,__kwargtrans__({loc:50,scale:10}));
run();
str(dt);
(function(){var __accu0__=[];for(var x of perm_index[i].__getslice__(1,null,1))__accu0__.append(x-1);return __accu0__})();
s.sendmail(from_email,emails,msg.as_string());
self.entry.pack();
export var sub_dict=dict(function(){var __accu0__=[];for(var key of a)__accu0__.append(tuple([key,round(a[key]-b.py_get(key,0),1)]));return __accu0__}());
true;
sent_detector.tokenize(your_text);
var tuples=function(){var __accu0__=[];for(var x of subset.py_values)__accu0__.append(tuple(x));return __accu0__}();
export var list_of_groups=zip(...tuple([py_iter(the_list)])*group_size);
export var o=urlparse.urlparse(self.request.url);
app.exec_();
time.sleep(1);
a/=a.sum(__kwargtrans__({axis:1})).__getitem__([tuple([0,null,1]),numpy.newaxis]);
layout.addWidget(grview);
A.__getitem__([tuple([0,4,1]),1]);
module.workflow_set.filter(__kwargtrans__({trigger_roles__in:[self.role],allowed:true}));
do_something_with(wrapper[0]);
(function(){var __accu0__=[];for(var row of matrix)__accu0__.append(__in__(0,row)?[0]*len(row):row);return __accu0__})();
plt.show();
export var matchingVals=function(){var __accu0__=[];for(var x of a)if(x>2)__accu0__.append(x);return __accu0__}();
datetime.time(0);
var r=requests.delete(URL_delete,__kwargtrans__({params:mydata}));
app.register_blueprint(heysyni);
print(os.getcwd());
plt.subplots_adjust(__kwargtrans__({right:.75}));
any(function(){var __accu0__=[];for(var i=0;i<len(lst)-n+1;i++)__accu0__.append(sublst==lst.__getslice__(i,i+n,1));return py_iter(__accu0__)}());
out.remove(x);
winsound.Beep(Freq,Dur);
print(sorted(inputWords,__kwargtrans__({key:function __lambda__(word){return function(){var __accu0__=[];for(var c of word)__accu0__.append(alphabet.index(c));return __accu0__}()}})));
urllib.parse.unquote(s);
testit();
task.cancel();
bothlists[x[0]].append(x);
request.data;
export var dgtsv=lapack.dgtsv_;
requests.delete(url,__kwargtrans__(kwargs));
ax.autoscale();
var new_list=map(operator.itemgetter(1),old_list);
glVertex2i(10,10);
zip(...lis);
df.ix.__getitem__([tuple([0,null,1]),(df==0).all()]);
cv2.destroyAllWindows();
print(np.where(~mask)[0]);
ax.legend();
plt.imshow(im2,__kwargtrans__({cmap:plt.cm.gray}));
var p=Process(__kwargtrans__({target:fn}));
popen.wait();
self.periodiccall();
plt.ylim([-400,400]);
(function(){var __accu0__=[];for(var result of self.post.results)__accu0__.append(Teaser(Context(result)));return __accu0__})();
mp.Process(__kwargtrans__({target:run,args:tuple([_QUEUE,cb,func,args,kwargs])})).start();
print((dt.datetime.combine(dt.date(1,1,1),t)+delta).time());
len(function(){var __accu0__=[];for(var _f of a_list)if(_f)__accu0__.append(_f);return __accu0__}())==len(a_list);
plt.show(__kwargtrans__({block:true}));
s.multiply(1/np.sqrt(s.multiply(s).sum(1)));
sys.stdout.flush();
os.path.exists(my_path);
ax.set_ylim([-2,2]);
mp.Process.__init__(self);
m.__getitem__([tuple([0,null,1]),[0]]).shape;
export var filepath=os.path.abspath(filepath);
self.button.clicked.connect(self.testMethod);
export var topdirs=function(){var __accu0__=[];for(var x of dirs)__accu0__.append(os.path.py_split(x)[0]);return __accu0__}();
print(tuple([m.group(1),m.group(2)]));
a.reshape(2,2,2,2).sum(__kwargtrans__({axis:1})).sum(__kwargtrans__({axis:2}));
x.reshape(4,2,2);
var __except0__=ValueError;__except0__.__cause__=null;throw __except0__;
sorted(s1,__kwargtrans__({key:prefixed_digits()}));
plt.show();
df.index=pd.DatetimeIndex(df.index);
list(range(1,6))+list(range(15,20));
df.index.level_map;
br.select_form(__kwargtrans__({nr:0}));
pd.rolling_apply(df,12,function __lambda__(x){return np.prod(1+x)-1});
temp.append(sub_list[0]);
admin.site.register(Employee,EmployeeAdmin);
i+=1;
print(np.sqrt(np.sum(Math.pow(p.__getitem__([tuple([0,null,1]),np.newaxis])-p.__getitem__([np.newaxis,tuple([0,null,1])]),2),__kwargtrans__({axis:-1}))));
set(function(){var __accu0__=[];for(var [x,count]of common)if(count==common[0][1])__accu0__.append(x);return py_iter(__accu0__)}());
export var cat_sorted=zip(...sorted(zip(...cat),__kwargtrans__({key:itemgetter(2)})));
print(my_list);
signal.signal(signal.SIGALRM,handler);
plt.show();
pd.DataFrame(MM,__kwargtrans__({dtype:int,columns:Col}));
export var conn=socket.socket(socket.AF_INET,socket.SOCK_STREAM);
db.session.add(region2);
time.sleep(2);
print_matrix(spiral(5,5));
map(list,list(result.py_items()));
var mylist=function(){var __accu0__=[];for(var w of words)__accu0__.append(w[0]+w[1]);return __accu0__}();
img.fill(255);
random.randrange(5,10);
export var __mycode=true;
max(py_iter(stats.py_items()),__kwargtrans__({key:operator.itemgetter(1)}))[0];
var args=parser.parse_args();
print(line);
some_module.py;
list(obj.children);
print(map(str,young_fellas));
do_something();
sorted(list(the_dict.py_items()),__kwargtrans__({key:function __lambda__(x){return x[1]},reverse:true})).__getslice__(0,10,1);
var a=function(){var __accu0__=[];for(var [one,two]of zip(a,a.__getslice__(1,null,1)))if(two[1]>one[1])__accu0__.append(two);return __accu0__}();
f.close();
var df=df[dupemask];
var cursor=db.cursor();
plt.xlim(x.min(),x.max());
os.remove(temp_file);
app.MainLoop();
pd.concat([df,df1],__kwargtrans__({axis:0,ignore_index:true}));
ax.grid();
tuple.__new__(cls,tuple([x,y]));
sessions.append(sessionmaker(__kwargtrans__({bind:engine}))());
f.geturl();
var __left0__=j.__getslice__(4,7,1).__getslice__(0,null,-1);var v=__left0__[0];var b=__left0__[1];var n=__left0__[2];
np.array(function(){var __accu0__=[];for(var x of a1)__accu0__.append([x]);return __accu0__}());
log.start();
print(test2());
form.save();
plt.subplots_adjust(__kwargtrans__({bottom:.1}));
df;
app.run(__kwargtrans__({debug:true}));
export var rnd=np.random.rand(n);
sometuple+tuple([someitem]);
x[x.columns[0]];
driver.quit();
var id=Column(Integer,__kwargtrans__({primary_key:true}));
app.MainLoop();
knapp.pack(__kwargtrans__({pady:10}));
views/__init__.py;
export var ssh=paramiko.SSHClient();
QMainWindow.__init__(self,parent);
func(...args);
int(Math.pow(n,.5))+1;
main();
list(chain.from_iterable(function(){var __accu0__=[];for(var i=1;i<10;i++)__accu0__.append(tuple([i,i*i]));return py_iter(__accu0__)}()));
export var bar=foo(bar);
L+=[4]*10;
ufunc.reduceat(mat.data,mat.indptr.__getslice__(0,-1,1));
pygame.init();
response.set_data(json.dumps(d));
df[col_values]=df[col_values].astype(float);
f.write(text);
df.to_json();
print(time.mktime(py_new.timetuple()));
session.add(obj);
plt.show();
termios.tcsetattr(sys.stdin,termios.TCSADRAIN,new_settings);
self.entry.focus();
k.reshape(k.shape+tuple([1]));
reactor.run();
tuple([a,b,c]);
var result=first_date+np.arange(24)*datetime.timedelta(__kwargtrans__({hours:1}));
dictionary[py_next(py_iter(dictionary))];
export var powd=DataFrame(data2);
deletec.__getslice__(0,2,1);
input();
print(int(date.__getslice__(0,4,1))+1);
__main__();
QtGui.QMainWindow.__init__(self);
df.mean();
print(sys.path);
var t=threading.Thread(__kwargtrans__({target:task,args:tuple([data])}));
pd.DataFrame.from_dict(d);
yx.py_sort();
export var color=ebar[0].get_color();
window.show_all();
f.close();
browser.quit();
var filtered_list=function(){var __accu0__=[];for(var x of input_list)if(__mod__(x,2)==0)__accu0__.append(x);return __accu0__}();
newdf.head();
var d=datetime.date.today();
var d=dict(function(){var __accu0__=[];for(var t of[t0,t1,t2])__accu0__.append(tuple([t.key,t]));return py_iter(__accu0__)}());
print(list(tb_notes.select().execute()));
writer.writerow(row);
result.append(tuple([[key]*len(py_values),py_values]));
plt.axis([0,10,0,1]);
pickle.load(f);
p.communicate();
export var all_potion_names=list(all_potions.py_keys());
export var wkt=dane[0][0].read();
sys.path.append(os.path.dirname("./P2JSnippets.py"));
(function(){var __accu0__=[];for(var x=0;x<length;x++)__accu0__.append(lower+x*(upper-lower)/length);return __accu0__})();
time.sleep(1);
get_object_or_404(Book,__kwargtrans__({pk:id}));
inspect.stack()[2];
fig.canvas.draw();
dists.shape;
plt.xlim(0,20);
list(_);
time.mktime(dt.timetuple());
plt.draw();
print(txtrecord.to_text());
HttpResponse(__kwargtrans__({status:410}));
ax.set_xlim(0,6);
py_name[0][0][-1][-1];
pool.append(Process(__kwargtrans__({target:pool_func,args:tuple([q])})));
sys.stdout.writelines(sorted_lines);
p.terminate();
thestring.__getslice__(0,-len(ending),1);
var output_list=function(){var __accu0__=[];for(var x of input_list)if(isinstance(x,list))__accu0__.append(x);return __accu0__}();
dftmtx(2);
var img=pygame.image.load(filename);
socket.close();
last_lines.append(line);
X.dot(A.T);
foo();
blob.delete();
var zeros=function(){var __accu0__=[];for(var _=0;_<M;_++)__accu0__.append([0]*N);return __accu0__}();
list(chain.from_iterable(ls.__getslice__(0,1,1)+ls.__getslice__(2,null,1)));
root.mainloop();
(function(){var __accu0__=[];for(var item of sequence)if(item<value)__accu0__.append(item);return __accu0__})();
sys.exit(0);
lock.acquire();
v.py_setdefault(value,[]).append(key);
dict_setitem(self,key,value);
[1][0][0];
var res=requests.post(url,__kwargtrans__({files:files,data:data,headers:headers}));
var py_items=SomeModel.objects.all();
export var b_t=np.vstack(tuple([b,np.ones_like(b)]));
user.save();
plt.tight_layout();
pylab.xlim([-2.5,2.5]);
sudo(command,__kwargtrans__({user:sudouser}));
plt.show();
dict(function(){var __accu0__=[];for(var [k,v]of d.py_items())if(k>=begin&&k<=end)__accu0__.append(tuple([k,v]));return __accu0__}());
Dataset.objects.filter(__kwargtrans__({i_begin_int__lte:170,i_end_int__gte:170}));
data.append(sheet1.cell(i,1).value);
time.mktime(then.timetuple())*1E3+then.microsecond/1E3;
len(A)==len(B)?!sum(function(){var __accu0__=[];for(var i of B)__accu0__.append(!__in__(i,A));return __accu0__}()):false;
plt.show();
var ax=fig.add_subplot(1,1,1);
df.reset_index(__kwargtrans__({inplace:true}));
(function(){var __accu0__=[];for(var [a,b]of zip(df.a.__getslice__(10,20,1),df.b.__getslice__(10,20,1)))__accu0__.append(a.join(b));return __accu0__})();
plt.ylim(0,5);
print(sys.argv[0]);
export var newMyList=function(){var __accu0__=[];for(var [v,k]of myList)if(!__in__(k,myDict))__accu0__.append(tuple([v,k]));return __accu0__}();
top.mainloop();
(function(){var __accu0__=[];for(var x of sorted(set(li)))__accu0__.append(function(){var __accu1__=[];for(var [i,n]of enumerate(li))if(n==x)__accu1__.append(i);return __accu1__}());return __accu0__})();
print(k,d2.py_get(k,0));
reactor.run();
export var limit=int(limit);
sheet.set_portrait(false);
simplejson.JSONEncoder.py_default(self,obj);
plt.pcolor(data,__kwargtrans__({vmin:.01,vmax:.99,cmap:my_cmap}));
df.Group.value_counts();
foo();
df.a.sort_values();
Number(randint(1,100));
var result=function(){var __accu0__=[];for(var elem of yourlist)__accu0__.append(makedict(elem));return __accu0__}();
plt.show();

server.serve_forever();
regex.findall(s);
any((a.__getslice__(0,null,1)==[1,20]).all(1));
plt.gcf().show();
py_iter(self.books.py_values());
listbox.pack();
export var probas_=clf.predict_proba(Kt);
ax.add_patch(rect2);
export var json_obj=json.dumps(a_dict,__kwargtrans__({ensure_ascii:false}));
tuple(map(operator.add,a,b));
export var allow_unicode=true;
s.py_replace(d);
pd.DataFrame(stdf.tolist());
print(function(){var __accu0__=[];for(var [element,count]of Counter(list1).most_common())__accu0__.append(element);return __accu0__}());
plt.gcf().autofmt_xdate();
(function(){var __accu0__=[];for(var item of lyst)__accu0__.append(item?py_next(car):py_next(a));return __accu0__})();
pd.concat(function(){var __accu0__=[];for(var [i,g]of grouped)if(len(g)>2)__accu0__.append(g);return py_iter(__accu0__)}());
proc.stdin.close();
var alist=[arr.__getitem__([0,tuple([0,null,1])]),arr.__getitem__([tuple([1,null,1]),-1]),arr.__getitem__([-1,tuple([0,-1,1])]),arr.__getitem__([tuple([1,-1,1]),0])];
main();
app.mainloop();
cherrypy.engine.start();
extra_logger.setLevel(logging.DEBUG);
(function(){var __accu0__=[];for(var match of matches)__accu0__.append(match);return __accu0__})();
s.__getslice__(0,null,-1);
toarchive.filter(__kwargtrans__({date__gt:interval})).delete();
var root=tk.Tk();
plt.show();
data.py_pop();
var fig=plt.figure();
export var df_c=pd.concat([df_a.reset_index(__kwargtrans__({drop:true})),df_b],__kwargtrans__({axis:1}));
(function(){var __accu0__=[];for(var x of L)__accu0__.append(x+1);return __accu0__})();
sum(function(){var __accu0__=[];for(var i=a;i<b+1;i++)if(!__mod__(i,2))__accu0__.append(i);return py_iter(__accu0__)}());
var z=dict(x,__kwargtrans__(y));
tuple([np.sum(a),np.nonzero(np.any(a,__kwargtrans__({axis:0})))[0]]);
conn.close();
export var eliminated=eliminated.append(x);
rect.set_visible(true);
(function(){var __accu0__=[];for(var [i,vali]of enumerate(f(...vals)))__accu0__.append(vali[i]);return __accu0__})();
pd.melt(piv);
urllib.request.install_opener(my_opener);
var obj=json.loads(json_string);
var s=s.lower();
__all__[module_name]=__import__(module_name);
sys.stdout.flush();
results.extend(re.findall(key,message,re.IGNORECASE));
print(function(){var __accu0__=[];for(var [k,v]of groupby(sorted_list,__kwargtrans__({key:move})))__accu0__.append(list(v));return __accu0__}());
print(dumps(a.__dict__));
export var angle=atan2(a.x*b.y-a.y*b.x,a.x*b.x+a.y*b.y);
export var api=falcon.API();
plt.show();
weekly.append(sum(visitors.__getslice__(x,x+7,1)));
export var randomvalue=myRandom.randint(0,10);
df[column_list].iloc[row_index_list].mean(__kwargtrans__({axis:0}));
func();
var L4=function(){var __accu0__=[];for(var n of L1)if(!__in__(n,tmpset))__accu0__.append(n);return __accu0__}();
shutil.copyfile(path,os.path.join(...path_rel));
var counter_list=function(){var __accu0__=[];for(var item of counter_list)if(len(item)!=0)__accu0__.append(item);return __accu0__}();
new set([new set([f.following_set.count()])]);
export var stripped_list=function(){var __accu0__=[];for(var j of initial_list)__accu0__.append(j.strip());return __accu0__}();
plt.show();
np.isclose([1E10,0],[1.00001E-10,0]);
workbook.close();
print(df2.set_index([0,1]));
df;
ax.imshow(pawprint);
g.plot();
df[(df!=0).all(1)];
list.remove(item_to_be_removed);
set(function(){var __accu0__=[];for(var x of zip(a,a.__getslice__(1,null,1)))if(x[0]==x[1])__accu0__.append(x[0]);return py_iter(__accu0__)}());
print(os.path.getmtime(os.path.join(SOME_DIR,filename)));
export var win=gtk.Window();
plt.show();
ctypes.cast(x,ctypes.POINTER(ctypes.c_ulong));
export var now_epoch=(datetime.utcnow()-datetime(1970,1,1)).total_seconds();
vec.fit_transform(measurements).toarray();
map(bool,a).index(true);
l[0][1];
print(a.__getslice__(0,-10,-1));
bottleneck.partsort(a,a.size-10).__getslice__(-10,null,1);
var l=list(zip_longest(x,x,__kwargtrans__({fillvalue:[]})));
draw.ellipse(tuple([x-r,y-r,x+r,y+r]),__kwargtrans__({fill:tuple([255,0,0,0])}));
__init__.py;
(function(){var __accu0__=[];for(var k of A)if(__in__(k,B))__accu0__.append(tuple([A[k],B[k]]));return __accu0__})();
export var RNA_integers=function(){var __accu0__=[];for(var i of RNA_list)if(__in__(i,RNA_dictionary))__accu0__.append(RNA_dictionary[i]);return __accu0__}();
p.stdout.close();
min(py_items,__kwargtrans__({key:function __lambda__(item){return p1.compute_distance_to(item.loc)}}));
var arr=numpy.random.randint(2,__kwargtrans__({size:tuple([n])}));
list(chain.from_iterable(l));
round(random.random()*(m_time-min_time)+min_time,1);
plt.show();
cv2.destroyAllWindows();
np.allclose(C0,C2);
ax.plot(data);
mydog.findall(s)[0];
var uniq_animal_groups=set(map(tuple,animal_groups));
ax.set_xticklabels([]);
QtCore.Qt.ItemIsEnabled;
writer.writerow(the_list);
export var string=string.isdigit()?float(string):string;
logger.setLevel(logging.DEBUG);
a/(a-1);
var __left0__=tuple([A[0],A[1],A[1]]);A[1]=__left0__[0];A[0]=__left0__[1];A[1]=__left0__[2];
py_next(function(){var __accu0__=[];for(var e of lelist)if(__in__(e,lestring))__accu0__.append(__in__(e,lestring));return py_iter(__accu0__)}());
print(np.all(norm1==norm2));
canvas.pack();
django.setup();
print(df2.reindex(df.index[df.index.isin(df2.index)]));
var ii=np.nonzero(a==4);
subprocess.Popen(command,__kwargtrans__({stdout:subprocess.PIPE})).communicate()[0];
json.loads(data,__kwargtrans__({object_hook:_json_object_hook}));
sys.stdout.flush();
a.__setslice__(0,null,2,1);
var value=my_dic.py_get(100,0);
var fig=plt.figure();
numpy.isnan(myarray).any();
var b=a.__getslice__(0,null,1);
do_something_with(result);
ax.set_yticks([.5,1]);
cnx.sendInitPresence();
np.average(a,__kwargtrans__({axis:-1})).repeat(a.shape[-1]).reshape(a.shape);
classifier.fit(X,y);
log.setLevel(logging.DEBUG);
print(trks.py_name());
plt.draw();
a.py_setdefault(key,[]);
axcut.set_visible(false);
array([[1,0,0],[0,1,0],[0,0,1],[0,1,0]]);
reactor.run();
pd.isnull(df).any(__kwargtrans__({axis:1}));
win.run();
export var urlsIwant=function(){var __accu0__=[];for(var x of allurls)if(any(function(){var __accu1__=[];for(var w of words)__accu1__.append(__in__(w,x));return py_iter(__accu1__)}()))__accu0__.append(x);return __accu0__}();
new_list.extend(i);
text_file.close();
np.exp(-4*np.log(2)*(Math.pow(x-x0,2)+Math.pow(y-y0,2))/Math.pow(fwhm,2));
A.objects.filter(__kwargtrans__({id:some_a.id})).py_update(__kwargtrans__({hidden:true}));
s.apply(function __lambda__(x){return Series(1,__kwargtrans__({index:x}))}).fillna(0);
self.SetSizerAndFit(sizer);
pkl_file.close();
print(m.group(1));
tuple([resp.text,resp.status_code,list(resp.headers.py_items())]);
self.tcp_socket=socket.socket(socket.AF_INET,socket.SOCK_STREAM);
var X_train=scaler.fit_transform(X_train);
f.close();
request.user.get_profile().token;
session.commit();
self.frame.pack(__kwargtrans__({fill:BOTH,expand:YES}));
var count=sum(function(){var __accu0__=[];for(var line of myfile)__accu0__.append(1);return py_iter(__accu0__)}());
var fig=plt.figure();
time.sleep(10);
random.choice(list(range(100,20100,100)));
(function(){var __accu0__=[];for(var [aItem,bItem]of zip(a,b))__accu0__.append(f(aItem,bItem));return __accu0__})();
var G=nx.Graph();
var s=socket.socket(socket.AF_INET,socket.SOCK_DGRAM);
match.group(0);
print(sum(map(function __lambda__(x){return x*x},l)));
export var normalizedscores=function(){var __accu0__=[];for(var [u,l]of list(linkscores.py_items()))__accu0__.append([u,float(l)/maxscore]);return dict(__accu0__)}();
var resp=urllib.request.urlopen(req);
var all_data=[];
a.extend(a,b);
dict(function(){var __accu0__=[];for(var k of dict1[0])__accu0__.append(tuple([k,sum(function(){var __accu1__=[];for(var d of dict1)__accu1__.append(d[k]);return py_iter(__accu1__)}())]));return py_iter(__accu0__)}());
urllib.request.urlopen(url).read();
datetime.timedelta(0);
var M=scipy.sparse.csr_matrix(M);
runserver.py;
dict(itertools.islice(py_iter(dictionary.py_items()),begin,end+1));
main1();
(function(){var __accu0__=[];for(var [a,a]of list(params.py_items()))__accu0__.append(a);return __accu0__})();
tk.Tk.__init__(self,...args,__kwargtrans__(kwargs));
new set([dict([[user|hash,item]])]);
len(set(function(){var __accu0__=[];for(var sl of L)__accu0__.append(sum(sl));return py_iter(__accu0__)}()))==1;
(function(){var __accu0__=[];for(var x of test)__accu0__.append(id(x));return __accu0__})();
(function(){var __accu0__=[];for(var x of L)if(!__in__(x,delitems))__accu0__.append(x);return __accu0__})();
sum(function(){var __accu0__=[];for(var [i,j]of zip(a,b))__accu0__.append(i!=j);return py_iter(__accu0__)}());
a.reshape(-1,R);
random.shuffle(myList);
conn.commit();
self.thisptr.clone();
np.average(df.y-df.x,__kwargtrans__({weights:df.index.asi8}));
(function(){var __accu0__=[];for(var [time,line]of sorted(zip(listofTimes,listofLines)))__accu0__.append(line);return __accu0__})();
export var VVg=np.sum(np.dot(GinvVV.__getitem__([tuple([0,null,1]),tuple([0,-1,1])]),GRZVV.T),__kwargtrans__({axis:-1}))*VV;
frame.axes.get_yaxis().set_ticks([]);
e.pack();
self.window1.show();
foo();
resp.peercert;
df.iloc[0];
cursor.execute(insert_query,data);
pygame.display.flip();
spherical_dist(locations_1,locations_2.__getslice__(0,-1,1));
plt.show();
var G=nx.Graph();
print(repr(line));
sock.connect(tuple([host,port]));
possibles.py_update(locals());
export var que=multiprocessing.Manager().Queue();
fh.write(base64.decodestring(imgData));
var fig=plt.figure();
re.compile(regex).groups;
(function(){var __accu0__=[];for(var v of vals)__accu0__.append(v*v);return __accu0__})();
MyApp().run();
print(self.time);
(function(){var __accu0__=[];for(var char of yourstring)__accu0__.append(char);return __accu0__})();
sum(function(){var __accu0__=[];for(var item of arr)if(item==0&&py_typeof(item)===py_typeof(0))__accu0__.append(1);return py_iter(__accu0__)}());
time.sleep(1);
np.stack(np.nonzero(df.py_values)).T;
user.user_trips.all();
list(map(function __lambda__(f,a){return f(a)},...zip(...itertools.product(funcs,args))));
print(result.group(1));
var app=wx.App(false);
browser.select_form(__kwargtrans__({nr:0}));
print(r.data());
print(sorted(a,__kwargtrans__({key:Counter(a).py_get,reverse:true})));
pandas.DataFrame.from_records(function(){var __accu0__=[];for(var s of signals)__accu0__.append(s.to_dict());return __accu0__}());
df.groupby(__kwargtrans__({level:0,as_index:false})).nth(2);
proc.stdin.flush();
var dictionary=json.loads(cur.fetchone()[0]);
proc.wait();
var c=(len(a)*a-sum(a))/b;
ax.set_title(title);
[0][0][0];
field.setAlignment(QtCore.Qt.AlignCenter);
export var gray=cv2.cvtColor(img,cv2.COLOR_BGR2GRAY);
__init__.py;
a.func(__kwargtrans__(kwargs));
bool(__mod__(number,2));
A[np.lexsort(A.T)];
sample(10,[2,4,8,16]);
sum(a,b);
len(np.atleast_1d(a));
var df=pd.DataFrame(data.tolist(),__kwargtrans__({columns:data.dtype.names}));
tornado.ioloop.IOLoop.instance().start();
os.makedirs(dst);
list(map(len,s.py_split()));
user.put();
var a=sorted(list(a.py_items()),__kwargtrans__({key:function __lambda__(x){return x[1]}}));
plt.xlim(X[0]-day,X[-1]+day);
plt.plot(list(range(10)));
var a=numpy.tile([1,-1],15);
server.quit();
plt.show();
plt.show();
var mylist=function(){var __accu0__=[];for(var i of myorder)__accu0__.append(mylist[i]);return __accu0__}();
var py_name=models.CharField(__kwargtrans__({max_length:100}));
p1.join();
var new_array=map(list,old_array);
infile.close();
Base.metadata.bind=engine;
export var list_of_lines=function(){var __accu0__=[];for(var _=0;_<chunk_len;_++)__accu0__.append(py_next(f));return __accu0__}();
plt.show();
print(key,sum(function(){var __accu0__=[];for(var r of rows)__accu0__.append(r[2]);return py_iter(__accu0__)}()));
var content=content_file.read();
ax.set_ylim(0,10);
conda- -version;
Page.query.py_get(page_id).query.delete();
export var field_names=function(){var __accu0__=[];for(var i of cursor.description)__accu0__.append(i[0]);return __accu0__}();
np.allclose(result_data,result_data2);
time.sleep(1800);
export var project_root=os.path.dirname(os.path.abspath("./P2JSnippets.py"));
c.fetchall();
print(len(unicode_string));
pl.plot(X,Cosine);
plt.show();
hex(15);
tuple([[0,1,1,0,0,0]]);
Peak();
export var agent_list=function(){var __accu0__=[];for(var line of f)__accu0__.append(list(ast.literal_eval(line)));return __accu0__}();
app.MainLoop();
var ax=fig.add_subplot(111);
export var cnxn=pyodbc.connect(connectString);
plt.subplot(122);
mylist.count(mylist[0])==len(mylist);
p.join();
var r=requests.post(url,__kwargtrans__({files:files,headers:headers}));
scrapyd;
new_dict[v].append(k);
avg.append(sum(d[key])/len(d[key]));
list(merge(list1,list2));
urllib.request.install_opener(opener);
new set([new set([form.content()])]);
s.setsockopt(socket.SOL_SOCKET,socket.SO_REUSEADDR,1);
df.dropna(__kwargtrans__({thresh:df.shape[1]-7}));
lines.py_sort(__kwargtrans__({key:extract_time,reverse:true}));
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
sleep(1);
plt.show();
var a=np.array(df.C);
plt.show();
(function __lambda__(py_name){return tuple([py_name[0],-len(py_name),py_name])});
print(nodes[0].firstChild.nodeValue);
__init__.py;
sorted(list(d.py_items()),__kwargtrans__({key:foo}));
bytearray(hex_data);
final_data[cnames[i]]=np.zeros(tuple([nalpha,nmach,nbeta,nalt]));
hello.helloworld();
Motifs.insert(x,Motif);
main();
var tree=ET.fromstring(msg);
list(zip(foo,bar));
(function(){var __accu0__=[];for(var x=LOW;x<HIGH;x++)if(len(set(str(x)))==len(str(x)))__accu0__.append(x);return __accu0__})();
db.session.commit();
self._file.close();
request.user;
export var categories=function(){var __accu0__=[];for(var [k,v]of list(categories.py_items()))__accu0__.append([k,sum(v)/len(v)]);return dict(__accu0__)}();
logging.setLoggerClass(ColoredLogger);
d>timedelta(__kwargtrans__({minutes:1}));
print(json.dumps(obj,__kwargtrans__({indent:2})));
time.sleep(5);
np.allclose(omega,slicing_summing(a,b,c));
Popen(cmd,__kwargtrans__({shell:true,cwd:newpath}));
rdd.collect();
window.show();
(function(){var __accu0__=[];for(var [b,b]of list(params.py_items()))__accu0__.append(a);return __accu0__})();
hex(int(time.time()));
var response=requests.py_get(url,__kwargtrans__({headers:headers}));
mlab.show();
py_typeof(a)(b);
ax.plot(x,y);
export var dicts=function(){var __accu0__=[];for(var d of data)__accu0__.append(dict(zip(fields,d)));return __accu0__}();
plt.plot(x,y);
print(bcrypt.hashpw(password,bcrypt.gensalt()));
print(team.__dict__==team2.__dict__);
export var std_2=numpy.std(list_size_2,__kwargtrans__({axis:1}));
w.pack();
sum(function(){var __accu0__=[];for(var word of wordslist)__accu0__.append(len(word));return py_iter(__accu0__)}());
ax.plot(x,y);
df.TIMESTAMP.dt.hour;
ax.margins(.1);
time.sleep(1);
PyArray_ENABLEFLAGS(arr,NPY_ARRAY_OWNDATA);
sum(function(){var __accu0__=[];for(var num of numbers)if(__mod__(num,2)==1)__accu0__.append(num);return py_iter(__accu0__)}());
np.append(xs,arr[i]);
var s=numpy.fromstring(s,numpy.int16)/10*5;
export var start_time=start_time.py_replace(__kwargtrans__({minute:ceil_to,second:0,microsecond:0}));
export var dict_with_ints=dict(function(){var __accu0__=[];for(var [k,v]of dict_with_strs.py_items())__accu0__.append(tuple([k,int(v)]));return py_iter(__accu0__)}());
layout.addWidget(self.button);
(function(){var __accu0__=[];for(var [k,v]of list(self.__class__.__dict__.py_items()))if(py_typeof(v)===property)__accu0__.append(k);return __accu0__})();
export var distance=skfmm.distance(m);
urllib.request.urlopen(url);
counts.py_sort(__kwargtrans__({key:operator.itemgetter(1)}));
transaction.commit();
ax.set_yticks([1,2,8]);
var my_array=my_array.reshape(tuple([50,50]));
test.py_pop();
int(x);
p.close();
plt.xlim([-400,400]);
print(my_list.__getslice__(1,null,2));
ax2.yaxis.set_visible(false);
len(x)>=4;
process.stdin.flush();
app.ActiveWorkbook.ActiveSheet.Cells(r,c).Formula;
(function(){var __accu0__=[];for(var i of a)__accu0__.append(i<0?0:i);return __accu0__})();
subprocess.check_call(cmd,__kwargtrans__({startupinfo:startupinfo}));
smagnoni;
d.py_setdefault(year,[]).append(value);
tuple([[0,0,0,0,0]]);
plt.show();
(function(){var __accu0__=[];for(var child of soup.td.children)if(isinstance(child,str))__accu0__.append(child);return __accu0__})();
dg.Items.Add(value);
ax.get_xaxis().set_ticklabels([]);
s.save();
app.register_blueprint(mod);
divtd(datetime.timedelta(__kwargtrans__({hours:12})),datetime.timedelta(__kwargtrans__({hours:2})));
export var df_out=pd.concat([df,df_v],1);
time.sleep(1);
sum(map(operator.mul,vector1,vector2));
[0,2,4,6,8,10,12,14,16,18];
df.T.squeeze();
dict(function(){var __accu0__=[];for(var x of data)__accu0__.append(tuple([x,data.count(x)]));return py_iter(__accu0__)}());
export var fileMenu=Menu(menubar,__kwargtrans__({tearoff:false}));
__in__(B,function(){var __accu0__=[];for(var i=0;i<len(A);i++)__accu0__.append(A.__getslice__(i,i+len(B),1));return py_iter(__accu0__)}());
buf.seek(0);
sum(itertools.starmap(operator.mul,itertools.combinations(l,2)));
my_shelf.close();
strat2.execute();
main();
export var msg=MIMEText(fp.read());
yourProcess.terminate();
var x2=sorted(x1,__kwargtrans__({key:function __lambda__(t){return t[1]}}));
conn.close();
s.setsockopt(socket.SOL_SOCKET,socket.SO_REUSEADDR,1);
np.diagonal(np.dot(b,a)).T;
plt.subplots_adjust(__kwargtrans__({top:.85}));
pygame.display.flip();
writer.UpdatePipeline();
A.__getitem__([[0,2],tuple([0,null,1]),tuple([1,null,1])]);
plt.show();
ax1.plot(X,Y);
do_something();
data.columns=function(){var __accu0__=[];for(var x of data.columns)__accu0__.append(x.lower());return __accu0__}();
mlab.show();
(function(){var __accu0__=[];for(var ch of s)__accu0__.append(doSomethingWith(ch));return __accu0__})();
df.py_values.tolist();
s.sum();
plt.draw();
export var page=urllib.request.urlopen(url);
matplotlib.pylab.show(__kwargtrans__({block:false}));
xcode-select- -install;
img.putdata(data);
max(function(){var __accu0__=[];for(var a of yourlist)if(a[2]>=100)__accu0__.append(a);return __accu0__}(),__kwargtrans__({key:itemgetter(1)}));
(df==1).any(__kwargtrans__({axis:1}));
var args=main_parser.parse_args();
plt.close();
ax.set_yticks(np.arange(data.shape[0])+.5,__kwargtrans__({minor:false}));
eval(input());
bar();
var df=DataFrame(data);
random.shuffle(list(range(n))).__getslice__(0,k,1);
time.sleep(20);
pdb.set_trace();
export var mat=hstack([mat.__getitem__([tuple([0,null,1]),tuple([0,i,1])]),mat.__getitem__([tuple([0,null,1]),tuple([i+1,null,1])])]);
self.response.out.write(zipstream.getvalue());
parse_qs(urlparse(url).query);
__in__(set([1,2]),new set([1,2,frozenset([1,2])]));
gtk.gdk.notify_startup_complete();
numpy.where(your_array_name!=0,1,0).sum();
setattr(self,property,getattr(self,property)+amount);
self.cursor.execute(query);
random.choice(states.py_split());
pyplot.show();
random.sample(list(D.py_items()),K);
export var active_id=hex(ewmh.EWMH().getActiveWindow().id);
self.foo.kill();
var results=[[1,0,1],[0,1,0],[1,1,0]];
classifier.classify(test_sent_features);
scipy.signal.filtfilt;
p.stdout.close();
var results=map(int,results);
cursor.close();
var a=forms.CharField(__kwargtrans__({max_length:20}));
sum(p)*(c[1]-c[0]);
self.process.stdin.flush();
pipeline.fit(X,y);
f.write(response.content);
im.save(newpathname);
Counter(chain.from_iterable(map(set,listOfLists)));
export var temp_list=function(){var __accu0__=[];for(var i of squares())__accu0__.append(i);return __accu0__}();
window.SetFocus();
mask1&=~mask2;
self.grid_columnconfigure(0,__kwargtrans__({weight:1}));
evt.Skip();
(idx.__getslice__(1,null,2)-idx.__getslice__(0,null,2)).max();
inv.fill(tuple([255,255,255,255]));
print(collections.Counter(words));
export var uniq=function(){var __accu0__=[];for(var x of a)if(!__in__(x,seen)&&!seen.add(x))__accu0__.append(x);return __accu0__}();
pd.concat([T,df]);
getattr(obj,py_name);
session.commit();
var line=line.rstrip();
someMethod.__code__.co_argcount;
sorted(li,__kwargtrans__({key:itemgetter(1)}));
plt.clf();
serve_pil_image(img);
var cursor=db.test.find(__kwargtrans__({timeout:false}));
solution.loc[df.index];
var __left0__=tuple([foo[j],foo[i]]);foo[i]=__left0__[0];foo[j]=__left0__[1];
plt.show();
find_majority([1,1,1,1,-1,-1,-1,0]);
clf.fit(X,y);
driver.manage().window().maximize();
var matches=function(){var __accu0__=[];for(var x of a)if(__in__(x,str))__accu0__.append(x);return __accu0__}();
sorted(templist,__kwargtrans__({key:int,reverse:true}));
unittest.main();
var d=defaultdict(function __lambda__(){return defaultdict(function __lambda__(){return defaultdict(list)})});
cursor.close();
plt.draw();
export var graph=facebook.GraphAPI(oauth_access_token);
y.__getslice__(0,null,1).__getslice__(0,null,2);
logger.setLevel(logging.DEBUG);
commands[com](...args);
file.flush();
np.add.reduceat(X.__getitem__([tuple([0,null,1]),idx0]),cut_idx,__kwargtrans__({axis:1}));
logger.setLevel(logging.DEBUG);
dict(zip(tokens.__getslice__(0,null,2),tokens.__getslice__(1,null,2)));
len(set(py_items))==1;
setattr(self,py_name,value);
pd.DataFrame([s1,s2]).min();
time.sleep(.1);
cnxn.close();
var args=parser.parse_args();
plt.show();
df.astype(int);
ax.legend();
export var kana=a+k+g+s+z+t+d+n+h+b+p+m+y+n;
l1.append([4,5,6]);
time.sleep((future-t).seconds);
signal.signal(signal.SIGALRM,original_handler);
var __left0__=a.__getslice__(0,2,1);var x=__left0__[0];var y=__left0__[1];
print(response.text);
min(py_items,__kwargtrans__({key:function __lambda__(x){return abs(x-pivot)}}));
time.sleep(1);
root.mainloop();
print(f.getvalue());
numpy.all(product1==product2);
User.query.py_get(id);
plt.draw();
var py_values=function(){var __accu0__=[];for(var k of py_keys)__accu0__.append(d[k]);return __accu0__}();
df.where(df.a.isNull()).count();
a.symmetric_difference(b);
(function(){var __accu0__=[];for(var [k,vs]of list(extension_to_type_mapping.py_items()))for(var v of vs)__accu0__.append([v,k]);return dict(__accu0__)})();
cv2.waitKey(0);
self.request.query_string;
var py_new=str.__getslice__(0,1,1)+py_new+str.__getslice__(6,null,1);
print(sys.exit.__doc__);
im.show();
print(f(4));
json.dumps(data);
export var header=input.readline();
plt.show();
x.__getitem__([list(range(0,i))+list(range(i+1,x.shape[0])),tuple([0,null,1]),tuple([0,null,1])]);
main();
proc.stdin.close();
var __left0__=p.communicate();var out=__left0__[0];export var err=__left0__[1];
pygame.sprite.Sprite.__init__(self);
testdataframe2.plot(__kwargtrans__({style:styles2,ax:ax}));
np.log(absd,absd);
plt.contour(data);
ax.patch.set_visible(false);
server.login(username,password);
export var map=function(){var __accu0__=[];for(var [a,b]of map)if(a>0&&b>0)__accu0__.append([a,b]);return __accu0__}();
print(Digit[i]);
new set([new set([car.date_of_manufacture|strftime])]);
df.iloc.__getitem__([tuple([0,null,1]),n]);
ax.get_xaxis().set_ticks([2,4,6,8]);
xprt.excel();
run();
data.append(ruamel.yaml.load(open(file_name)));
~a.any(__kwargtrans__({axis:1}));
subprocess.Popen(cmd_str,__kwargtrans__({shell:true}));
pool.terminate();
process.terminate();
Test.__init__();
con.set_option(ldap.OPT_X_TLS_REQUIRE_CERT,ldap.OPT_X_TLS_NEVER);
print(line);
var result=self.cur.executemany(sql,data);
plt.figure();
np.argwhere(Ax==Bx.min()&Ay==By.min());
s.stack().reset_index(__kwargtrans__({level:1,drop:true}));
plt.show();
plt.ylim(0,20);
cv2.destroyAllWindows();
print(datetime.fromtimestamp(timestamp));
obj.save();
time.sleep(wtime);
var ax=fig.add_subplot(111);
plt.show();
plt.ylim(-1,1);
var d=function(){var __accu0__=[];for(var i=0;i<1024;i++)__accu0__.append(.25*math.sin(math.radians(i)));return __accu0__}();
os.path.join(dir_name,base_filename+suffix);
sizer.Add(buttons,0,wx.EXPAND|wx.ALL,5);
plt.figure();
var m=re.search(reg,s);
cherrypy.tree.mount(root);
print(hash.hexdigest().__getslice__(0,10,1));
smtp.starttls();
pd.to_datetime(dte.stack()).unstack();
msg.attach(body);
cax.get_xaxis().set_visible(false);
plt.xticks([]);
var a=function(){var __accu0__=[];for(var x of names)if(any(function(){var __accu1__=[];for(var pat of pattern)__accu1__.append(__in__(pat,x));return py_iter(__accu1__)}()))__accu0__.append(x);return __accu0__}();
sys.exit(0);
var indices=tf.where(where);
print(link.text);
plt.show();
plt.show();
arr.T.reshape(5,-1);
ax.set_xlim(0,24);
print(x[np.unique(a)]);
errf.close();
proc.terminate();
ax.set_ylim(-40,40);
abort(404);
print(tuple([a,b,c]));
connection.commit();
var df=df2.transpose();
c.py;
bmp.Bind(wx.EVT_ENTER_WINDOW,onWindow);
(function(){var __accu0__=[];for(var i of mylist)__accu0__.append(!i);return __accu0__})();
pdfkit.from_string(html_text,output_filename);
issubclass(A,A);
abs(b-c)<abs(b)/1E12;
var u=Union(a,b);
pygame.display.py_update();
s+=str(n);
df.rename(__kwargtrans__({index:function __lambda__(x){return tup}}));
seaborn.voilinplot(__kwargtrans__(__mergekwargtrans__({ax:ax,data:df},violin_options)));
ax.set_xlim([-.5,4.5]);
(function(){var __accu0__=[];for(var y of zip(list,list))for(var x of y)__accu0__.append(x);return __accu0__})();
df1.corr();
initpyxmod();
plt.show();
export var dat1=pd.concat([dat1,dat2],__kwargtrans__({axis:1}));
map(f,list(range(10)));
var line=line.rstrip();
self.assertEqual([attr,val],[attr,getattr(self.nu,val)]);
var filename=sys.argv[-1];
Base.metadata.create_all(engine);
fig.savefig(os.path.join(my_path,my_file));
instance.__dict__;
sum(tuples,tuple([]));
df;
sys.argv.__getslice__(1,null,1);
var k=function __lambda__(x){return x[1]};
list(function(){var __accu0__=[];for(var [k,g]of itertools.groupby(numbers))__accu0__.append(k);return py_iter(__accu0__)}());
ax.set_xlim(tuple([0,10]));
ax.yaxis.set_major_locator(ticker.MultipleLocator(1));
object.__getattribute__(self,py_name);
cmp(x.lower(),y.lower());
print();
export var fps=cap.py_get(cv2.cv.CV_CAP_PROP_FPS);
logger.addHandler(handler);
dict(zip_longest(x,y));
df.apply(update_vals,__kwargtrans__({axis:1}));
tuple([cleared,dominated]);
fill_between(x.py_values,y.min(),y.py_values,__kwargtrans__({alpha:.5}));
plt.show();
print(py_name.lower());
sys.stdout.write(line);
b.doSomething();
sock.connect(tuple([host,port]));
bulk.execute();
gevent.wait();
libxslt-devel;
(function(){var __accu0__=[];for(var [i,row]of df.iterrows())__accu0__.append(OrderedDict(row));return py_iter(__accu0__)})();
mylist.__getslice__(0,null,1);
menu.remove(i);
logger.setLevel(logging.INFO);
__all__[n]=1;
var new_array=list(set(main_array)-set(second_array));
np.corrcoef(df1.s1,df1.s2);
row.delete();
(function(){var __accu0__=[];for(var x of nested_list)__accu0__.append(function(){var __accu1__=[];for(var ix of x)__accu1__.append(ix.upper());return __accu1__}());return __accu0__})();
var array2=np.tile(array1,tuple([20,20,1,1]));
cv2.destroyAllWindows();
req.close();
s[-1].isdigit();
print(arr[idx]);
pd.Series(...zip(...function(){var __accu0__=[];for(var [a,b]of data)__accu0__.append(tuple([b,a]));return py_iter(__accu0__)}()));
export var ind=np.flatnonzero(mask);
conn.close();
df.iloc.__getitem__([tuple([0,5,1]),tuple([0,4,1])]);
export var tangent=np.array([1/ds_dt]*2).transpose()*velocity;
app.run(__kwargtrans__({threaded:true}));
l.py_sort(__kwargtrans__({key:asum}));
var __left0__=img.size;export var width=__left0__[0];var height=__left0__[1];
print(etree.tostring(document,__kwargtrans__({xml_declaration:true})));
print(unicode_text.encode(sys.getfilesystemencoding()));
root.overrideredirect(true);
sys.exit(1);
(function(){var __accu0__=[];for(var key of a)__accu0__.append([key,list(set(a[key])-set(b.py_get(key,[])))]);return dict(__accu0__)})();
export var epoch_time=int(time.time());
time.sleep(.01);
time.sleep(5);
np.reshape(self.data,__kwargtrans__({newshape:tuple([len(self.data)/5,5])}));
(function(){var __accu0__=[];for(var i=0;i<int(len(flatten)/2);i++)__accu0__.append(flatten[int(i*2)]);return __accu0__})();
Fraction(...(.25).as_integer_ratio());

signal.signal(signal.SIGINT,self.handler);
np.may_share_memory(a,a.__getitem__([tuple([0,null,1]),tuple([1,null,2])]));
var o=numpy.delete(n,deletions,__kwargtrans__({axis:0}));
sum(r(i))==-n;
foo.bar();
unittest.main();
np.linspace(x[0],x[-1],10);
B.__setitem__([tuple([0,null,1]),tuple([0,null,1]),2],0);
df.py_values;
s1[s1.index.isin(s2.index)&s1.isin(s2)];
nobj.__dict__=oobj.__dict__.copy();
sys.exit(0);
(a>2).sum();
df.ix.__getslice__(d1,d2,1);
print(oct(9));
norm.ppf(.95,__kwargtrans__({loc:10,scale:2}));
(function(){var __accu0__=[];for(var x of itertools.product(l1,l2))__accu0__.append(__mod__(s,x));return __accu0__})();
r.json();
print(re.search(find,l).group(0));
max(self.left.depth(),self.right.depth())+1;
print(os.py_name);
cv2.FONT_HERSHEY_SIMPLEX;
self.root.mainloop();
qdict.py_update(dict);
df.stack(__kwargtrans__({level:1})).reset_index(__kwargtrans__({level:1,drop:true})).reset_index();
writer.writerow(row);
export var outFile=sys.argv[2];
var root=Tk();
export var server=socket.socket(socket.AF_UNIX,socket.SOCK_STREAM);
print(s.group());
root.mainloop();
etree_to_dict(tree.getroot());
np.repeat(np.arange(4),4);
img_io.seek(0);
data.columns=map(str.lower,data.columns);
df.groupby(diff_to_previous.cumsum());
print(ElementTree.tostring(xmlET));
button.pack();
parser.feed(data);
new_list;
ax2.yaxis.get_major_ticks()[0].label1.set_visible(false);
(function(){var __accu0__=[];for(var [k,v]of list(line_dict.py_items()))__accu0__.append(data[k].append(v));return set(__accu0__)})();
(function(){var __accu0__=[];for(var i=0;i<length;i++)for(var j=i+1;j<length+1;j++)__accu0__.append(s.__getslice__(i,j,1));return __accu0__})();
list(split_on_members(l,s));
export var serializer=PhotoSerializer(__kwargtrans__({data:request.DATA,files:request.FILES}));
sorted(the_list,__kwargtrans__({key:splitter}));
music.play();
db.session.commit();
my_func(...my_list);
a.__setitem__([idx.__getitem__([tuple([0,null,1]),0]),idx.__getitem__([tuple([0,null,1]),1]),idx.__getitem__([tuple([0,null,1]),2])],5);
classifier.fit(X,Y,__kwargtrans__({sample_weight:weights}));
var indices=np.arange(len(arr));
var r=requests.post(url,__kwargtrans__({data:json.dumps(payload)}));
plt.show();
add_matrices(c,d);
sns.set();
data.reshape(2,-1).mean(0);
random.shuffle(x);
d[tup[0]][tup[1]]=[tup[2]];
np.dot(a,b)==np.tensordot(a,b,__kwargtrans__({axes:tuple([[-1],[2]])}));
lcmm(...list(range(1,21)));
len(list(d.py_items())[0][1]);
y.do_something();
QtGui.QWidget.__init__(self,parent);
df.py_values===df.py_values;
ax.set_yticks([.2,.55,.76]);
print(__in__(evil_vals[0],list(dict_with_evil_keys.py_keys())));
var woduplicates=set(lseparatedOrblist);
df[(df==pd.Series(conditions)).all(__kwargtrans__({axis:1}))];
ax.legend();
self.clslength();
export var e2=np.array([0,1,0]);
Books.objects.exclude(__kwargtrans__({authors__in:bad_authors}));
thread.start();
round(2.615,2);
admin.site.register(Game,MyModelAdmin);
self.proc.wait();
reactor.run();
var output=subprocess.Popen(cmd,__kwargtrans__({shell:true,stdout:subprocess.PIPE}));
self.linenumbers.config(__kwargtrans__({state:DISABLED}));
var matrix=function(){var __accu0__=[];for(var line of matrixfile)__accu0__.append(list(line.strip()));return __accu0__}();
zlib.decompress(decrypt(data));
shapely.ops.unary_union(list(shapely.ops.polygonize(lines)));
print(df.py_values.tolist());
print(list(d.py_values()));
(function(){var __accu0__=[];for(var x of library)if(terms.issubset(x))__accu0__.append(x);return __accu0__})();
var out=proc.communicate()[0];
counter+=1;
plt.show();

ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy());
todb.commit();
var args=parser.parse_args();
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
db.session.remove();
sleep(1);
Gtk.Entry.__init__(self);
sys.stdout.flush();
print(function(){var __accu0__=[];for(var x of htmldata)__accu0__.append(py_typeof(x));return __accu0__}());
model.fit(X);
pl.py_pop();
process.wait();
workbook.close();
print(sys.version);
x.total_seconds();
os.path.dirname(sys.executable);
(function(){var __accu0__=[];for(var row of zip(nums,chars))__accu0__.append(dict(zip(py_keys,row)));return py_iter(__accu0__)})();
im.shape;
any(function(){var __accu0__=[];for(var x of d)__accu0__.append(__in__(1,x));return py_iter(__accu0__)}());
multiprocessing.Process.__init__(self);
plt.show();
var data=numpy.asarray(im);
df.columns=columns;
map(len,s.py_split());
sorted(s);
checkbox.Click();
pdb.Pdb.interaction(self,...args,__kwargtrans__(kwargs));
export var decompressedString=zlib.decompress(compressedString);
var data=json.loads(mtext);
self.func(...args,__kwargtrans__(kwargs));
print(buffalo);
time.ctime();
zip(it,it);
model.fit(X_train,y_train);
do_something();
bytes(10);
msg.attach(attachment);
redirect(redirect_url());
list(itertools.chain(...function(){var __accu0__=[];for(var [k,v]of sorted(d.py_items()))__accu0__.append([k]*v);return __accu0__}()));
lki.py_sort(__kwargtrans__({key:itemgetter(1)}));
export var cur=db.cursor();
var app=Flask(__name__);
var py_name=models.CharField(__kwargtrans__({max_length:100}));
x[~np.any(np.isnan(x),__kwargtrans__({axis:1}))];
min(itertools.product(...lists),__kwargtrans__({key:distance}));
df.AC=df.AC.astype(float);
var result=json.dumps(d,__kwargtrans__({ensure_ascii:false}));
df.plot(__kwargtrans__({subplots:true,layout:tuple([1,2])}));
print(match.groups());
var df2=df.stack().reset_index(1);
tuple([[0,1,1,1,1]]);
print(df.groupby(Math.floor(df.A/2)).A.apply(pd.Series.sample,__kwargtrans__({n:2})));
User.objects.count();
json.dump(LoL,myfile);
export var cleantext=BeautifulSoup(raw_html).text;
export var groups_no_a=function(){var __accu0__=[];for(var group of groups)if(a.isdisjoint(group))__accu0__.append(group);return __accu0__}();
random.sample(deq,10);
print(dt-datetime.fromtimestamp(s));
export var CHOICES=function(){var __accu0__=[];for(var i=0;i<11;i++)__accu0__.append(tuple([i,i]));return __accu0__}();
export var imRes=cv2.resize(im,maxsize,__kwargtrans__({interpolation:cv2.CV_INTER_AREA}));
var __left0__=pd.qcut(a,2,__kwargtrans__({retbins:true}));var q=__left0__[0];var bins=__left0__[1];
ax.set_xlim(-40,40);
app.url_map;
ax1.set_ylim(0,1.2);
ax.xaxis.set_visible(false);
sys.exit(0);
deletel.__getslice__(100,null,1);
self.response.out.write(simplejson.dumps(function(){var __accu0__=[];for(var p of photos)__accu0__.append(p.to_dict());return __accu0__}()));
array.tolist();
a.flat[np.abs(a-a0).argmin()];
object.__getattribute__(self,attr);
plt.show();
session.commit();
df.reset_index(__kwargtrans__({drop:true})).T;
export var final_image=cv2.warpPerspective(image,H,tuple([2150,2800]));
fig.subplots_adjust(__kwargtrans__({wspace:.5}));
self.transport.write(data);
var out=function(){var __accu0__=[];for(var n=0;n<bits;n++)__accu0__.append(num&1<<bits-1-n?1:0);return __accu0__}();
mainloop();
tuple(A.__getitem__([tuple([0,null,1]),0]));
ssh.close();
print(connection.getresponse().read());
is_cardano_triplet(2,1,5);
random.shuffle(new_lst);
export var FFnetlayer0=FFnetlayer0.reshape(-1,2);
max(function(){var __accu0__=[];for(var i=0;i<20;i++)if(__mod__(n,2<<i)==0)__accu0__.append(i+1);return py_iter(__accu0__)}());
var sock=socket.socket(socket.AF_INET,socket.SOCK_STREAM);
var new_data=function(){var __accu0__=[];for(var n of data)__accu0__.append(float(n));return __accu0__}();
var __left0__=tuple([L.__getslice__(0,1,1),L.__getslice__(1,null,1)]);L.__setslice__(-1,null,null,__left0__);L.__setslice__(0,-1,null,__left0__);
request.resolver_match.app_name;
[6,7,8];
df.columns=df.columns.str.strip();
pylab.show();
plt.pause(.05);
var image=cv2.imread(image_path,cv2.IMREAD_UNCHANGED);
fig.canvas.draw();
export var property_asel=function(){var __accu0__=[];for(var i of good_indices)__accu0__.append(property_a[i]);return __accu0__}();
linregress(X,Y);
var image=tk.PhotoImage(__kwargtrans__({data:b64_data}));
np.fill_diagonal(corrs.py_values,-2);
f.close();
a.remove(x);
ax.plot(x,y);
sess.run(init_op);
print(channel.recv(1024));
var r=requests.post(url,__kwargtrans__({data:json.dumps(payload),headers:headers}));
numpy.count_nonzero(boolarr);
np.random.shuffle(x);
print(etree.tostring(root,__kwargtrans__({pretty_print:true})));
p.stdin.close();
(function(){var __accu0__=[];for(var [b,a]of list(params.py_items()))__accu0__.append(a);return __accu0__})();
export var rowmax=df.max(__kwargtrans__({axis:1}));
time.sleep(2);
Y==np.array([6,7,8,9]);
MM().__dict__;
l1.extend([4,5,6]);
self.assertEqual(a,b);
logger.addHandler(mh);
shutil.copyfileobj(source_file,target_file);
input();
user.save();
lookup.py_setdefault(key(item),[]).append(item);
f.close();
skrift2.pack(__kwargtrans__({pady:10}));
writer.save();
df.col2.py_replace(-1,np.nan).interpolate().astype(int);
isinstance(a,Test2);
session2.add(obj1);
dff.drop(c,__kwargtrans__({axis:1,inplace:true}));
array([8,5.5]);
m.groups()[0];
do_something();
wr.writerow([item]);
product(list(range(2)),__kwargtrans__({repeat:k}));
x+tuple([tuple([0,0])]);
(function(){var __accu0__=[];for(var uc of udata)__accu0__.append(chr(ord(uc)));return __accu0__})();
np.take(mat,ixs,__kwargtrans__({axis:0})).sum(__kwargtrans__({axis:0}));
int_arr.__getitem__([-2,-2])+int_arr.__getitem__([0,0])-int_arr.__getitem__([-2,0])-int_arr.__getitem__([0,-2]);
self.socket.close();
conn.set_timeout(self.timeout);
var result=func();
main();
print(round(a,2));
sys.getsizeof(Math.pow(10,Math.pow(10,7)));
all(function(){var __accu0__=[];for(var x of py_items)__accu0__.append(x==py_items[0]);return py_iter(__accu0__)}());
var df2=df.transpose();
label.mainloop();
proc.wait();
export var csum=np.cumsum(b);
ax.set_xticklabels(dates,__kwargtrans__({rotation:90}));
plt.plot(x,y);
self.response.out.write(row);
y.astype(int);
db.collection.find().limit(1).skip(Math.floor(Math.random()*N));
dlg.ShowModal();
main();
signal.signal(signal.SIGALRM,handler);
var rnd=np.random.rand(n)/np.sqrt(2*np.pi);
datetime.date(2011,1,1);
export var my_instance=my_class();
fig.subplots_adjust(__kwargtrans__({bottom:.2}));
abs(A[0]-B[0])+abs(A[1]-B[1]);
np.any(tuple([x,y,z]),__kwargtrans__({axis:0}));
set_trace();
form.populate_obj(user);
app.run();
os.path.dirname(filepath);
max(map(len,tup));
plt.axvline(__kwargtrans__({x:.22058956}));
a.f4(1);
set([1]);
export var rs=function(){var __accu0__=[];for(var u of urls)__accu0__.append(grequests.py_get(u));return py_iter(__accu0__)}();
ax.add_patch(patch);
sum(function(){var __accu0__=[];for(var _ of assignments(12,5))__accu0__.append(1);return py_iter(__accu0__)}());
time.sleep(10);
print(OpenSSL.crypto.dump_certificate(OpenSSL.crypto.FILETYPE_TEXT,x509));
QtGui.QFrame.__init__(self);
sys.path.insert(0,self.install_lib);
setup();
np.median(x,__kwargtrans__({axis:0}));
np.where(cond,arr,-inf).argmax(__kwargtrans__({axis:1}));
var newstr=oldstr.__getslice__(0,midlen,1)+oldstr.__getslice__(midlen+1,null,1);
db.close();
print(tuple([a,b,c,d]));
export var sorteditems=sorted(py_iter(mydict.py_items()),__kwargtrans__({key:itemgetter(1)}));
set_contents_from_string(data_file.read());
decorator_to_enhance(func,...args,__kwargtrans__(kwargs));
plt.show();
np.random.seed(seed);
df.show();
A.view(__kwargtrans__({dtype:np.complex64}));
l.py_sort();
x.py_pop(0);
self.__dict__.py_update(d);
d.py_setdefault(k,[]).append(v);
frame.pack();
A.__getitem__([tuple([0,null,1]),np.mod(np.arange(ncols),A.shape[1])]);
print(function(){var __accu0__=[];for(var x of p.findall(s))if(x)__accu0__.append(x);return __accu0__}());
plt.close();
var data=json.loads(input_str);
self.assertEqual(callresult,[xargs,yargs]);
list(metadata.tables.py_keys());
print(datetime.datetime.utcfromtimestamp(dt));
mlab.show();
print(clf.coef_);
fopen.close();
setattr(someobject,py_name,user);
export var label_indices=function(){var __accu0__=[];for(var i=1;i<numL+1;i++)__accu0__.append((labels==i).nonzero());return __accu0__}();
op.worksheet.Worksheet.iter_rows();
export var docvec=model.docvecs[99];
__in__(set([2,1]),list);
export var CATSDllApiProto=ctypes.WINFUNCTYPE(ctypes.c_uint8,ctypes.c_double);
db.close();
urllib.request.install_opener(opener);
(function(){var __accu0__=[];for(var [k,g]of grouped)__accu0__.append(list(g));return py_iter(__accu0__)})();
var res=np.array(sorted(a,__kwargtrans__({key:function __lambda__(x){return-x[0]}})));
plt.figure(__kwargtrans__({figsize:tuple([5.15,5.15])}));
d.copy();
self.thread.start();
ax.set_ylim([177,196]);
var c=numpy.linalg.lstsq(b.T,a.T)[0].T;
QtGui.QWidget.__init__(self);
plt.show();
export var hasproperty=np.all(C);
var result=dict(setup1);
g.add_edge(a[0],a[1]);
signal.signal(signal.SIGINT,signal_handler);
os.setsid();
self.response.out.write(str(datetime.datetime.now()-starttime));
isinstance(obj,ModuleType);
(function(){var __accu0__=[];for(var x=0;x<10;x++)__accu0__.append(x*x);return __accu0__})();
(function(){var __accu0__=[];for(var x of ls)if(c[x]==1)__accu0__.append(x);return __accu0__})();
var y=dict(function(){var __accu0__=[];for(var [k,v]of x.py_items())__accu0__.append(tuple([k.lower(),v]));return py_iter(__accu0__)}());
os.isatty(sys.stdout.fileno());
export var img_resized=image.resize(tuple([188,45]),Image.ANTIALIAS);
np.isnan(np.nan);
config.write(configfile);
var d=eval(some_string);
display.flush();
min(function(){var __accu0__=[];for(var i of a)if(__in__(i,s))__accu0__.append(s.find(i));return py_iter(__accu0__)}());
round(x/500)*500;
f(a,b);
images.reshape(tuple([images.shape[0],-1]));
self.assertEqual(len(result),2);
javasphinx-apidoc- -help;
self.response.out.write(row);
self.d=self.d+1;
formset.save();
np.random.seed(1977);
var py_keys=function(){var __accu0__=[];for(var [k,v]of list(dict.py_items()))if(v==maxval)__accu0__.append(k);return __accu0__}();
var lines=tuple(lines);
map(tuple,N-1-np.array(list(combinations(list(range(N)),M))).__getslice__(0,null,-1));
os.path.relpath(filename,blog_images);
batch.execute(__kwargtrans__({http:http}));
bin(1);
d.dot(d.T);
setattr(namespace,dest,value);
ax.set_ylim([0,2]);
pd.Series(dict(__kwargtrans__({col1:a,col2:b})));
var data=np.array(data);
plt.show();
var y=r*np.sin(t);
print(any(function(){var __accu0__=[];for(var x of search)__accu0__.append(__in__(x,regx.py_split(string)));return py_iter(__accu0__)}()));
ent2.grid(__kwargtrans__({row:1,column:1}));
(function(){var __accu0__=[];for(var prod of product(...lists))__accu0__.append(tuple(chain.from_iterable(prod)));return __accu0__})();
new set([new set([mywidget.script()])]);
new set([new set([item])]);
dateutil.parser.parse(date_string);
app.run();
print(etree.tostring(elem));
tuple([[0,1,1,0,0,1]]);
ax.get_yticklabels()[i].set_visible(false);
sys.modules[__name__]=Foo();
l.append([]);
app.run(__kwargtrans__({debug:true}));
plt.close();
backup.close();
t5.start();
fro.readline();
view_func(request,...args,__kwargtrans__(kwargs));
var lines=sorted(shopping.readlines());
var a=dict(function(){var __accu0__=[];for(var [key,value]of a.py_items())if(!__in__(key,exclusion))__accu0__.append(tuple([key,value]));return py_iter(__accu0__)}());
s[0].lower()+s.__getslice__(1,null,1);
var csum=np.cumsum(a.__getitem__([tuple([0,null,1]),1]));
pkgutil.iter_modules();
export var pattern=re.compile(pattern_string);
ax.set_yticks(np.linspace(0,200,11));
Tablename.objects.filter(__kwargtrans__({fieldname__lt:value}));
map(list,my_array);
float(x);
print(data.py_split());
set(d[0]).intersection(...d.__getslice__(1,null,1));
np.full(tuple([200,20,10,20]),0);
plt.setp(ax.get_xticklabels()[-1],__kwargtrans__({visible:false}));
str(.1);
setattr(self,key,dictionary[key]);
plt.subplots_adjust(__kwargtrans__({hspace:.001}));
dict(zip(headers,sdata));
termios.tcsetattr(fd,termios.TCSADRAIN,old);
func(...parameters);
plt.tight_layout();
var parser=argparse.ArgumentParser();
var __left0__=py_values;export var Jan=__left0__[0];export var Feb=__left0__[1];export var Mar=__left0__[2];export var Apr=__left0__[3];export var May=__left0__[4];export var Jun=__left0__[5];export var Jul=__left0__[6];export var Aug=__left0__[7];export var Sep=__left0__[8];export var Oct=__left0__[9];export var Nov=__left0__[10];export var Dec=__left0__[11];
PrintLn(Abs(vf));
image.show();
os.remove(path);
print(urlparse.urlunparse(url_parts));
list(chain(...x));
np.array(list(itertools.zip_longest(...ll,__kwargtrans__({fillvalue:np.nan})))).T;
logging.getLogger().addHandler(handler);
root.mainloop();
a.__getslice__(len(a)-1,-len(a)-1,-1);
foo(...t);
numpy.random.shuffle(ids);
my_list.append(int(i));
df.loc[~df.index.isin(t)];
ax.set_xticklabels(x_labels);
set(my_list)-function(){var __accu0__=[];for(var e of bad)for(var i of my_list)if(__in__(e,i))__accu0__.append(i);return set(__accu0__)}();
list(x[x>0].stack().index);
dll.add.restype=c_double;
numpy.where(M==0);
(function(){var __accu0__=[];for(var x of mylist)__accu0__.append(x+1);return __accu0__})();

pprint(function(){var __accu0__=[];for(var i of input_elements)__accu0__.append(my_array+[i]);return __accu0__}());
mydict[key].append(line.strip());
server.serve_forever();
x[(x&x-1)==0];
export var shallow_copy_of_set=old_set.copy();
random.choice(files);
deletesys.path[0];
model4.py;
scipy.signal.lfilter;
Department._objects.filter(__kwargtrans__({group__exact:self.group}));
py_next(function(){var __accu0__=[];for(var [i,j]of list(enumerate(s)).__getslice__(0,null,-1))if(j==x)__accu0__.append(i);return py_iter(__accu0__)}());
var result=json.loads(result);
server.close();
driver.close();
outer_list.py_sort(__kwargtrans__({key:MyOrdering}));
plt.plot(y);
var fig=plt.figure(__kwargtrans__({figsize:tuple([5,5])}));
reactor.run();
var r=random.choice(numbers);
logging.disable(logging.CRITICAL);
ax2.imshow([[0,1],[2,0]]);
time.sleep(5);
the_sum+=A[k]*B[k];
py_typeof(a.tolist()[0]);
(function(){var __accu0__=[];for(var a of ranges)__accu0__.append(len(a)>1?slice(...map(int,a)):int(a[0]));return __accu0__})();
np.random.seed(seed);
ftp.login();
(function(){var __accu0__=[];for(var x of[1,-2,2])__accu0__.append(x<0&&x+4||x);return __accu0__})();
maze_dict.__setitem__([r,c],[tuple([r-1,c]),tuple([r,c+1])]);
e.py_update();
sys.stdout.flush();
simplejson.JSONEncoder.py_default(self,obj);
mylist.py_sort(__kwargtrans__({key:function __lambda__(v){return Math.pow(v.x,2)+Math.pow(v.y,2)}}));
ax.imshow(data);
figure(__kwargtrans__({figsize:tuple([4,4])}));
time.time();
asin(2).evalf();
f.close();
export var xDate=sys.argv[1];
plt.plot(x,y);
fxn();
dict(zip(x,map(x.count,x)));
session.commit();
painter.setPen(Qt.QColor(100,100,100));
self.assertEqual(1,0);
connection.close();
wx.Yield();
(function(){var __accu0__=[];for(var [i,j]of c.most_common())__accu0__.append(i);return __accu0__})();
plt.clf();
print(json.load(json_file));
os.remove(os.path.join(parent,fn));
var l=list(t);
np.dot(a,a);
var r=requests.post(url,__kwargtrans__({files:files,data:py_values}));
threading.Thread.__init__(self);
export var model=sm.Logit(y,x.astype(float)).fit();
array([[24,20,21],[4,0,1],[9,5,6]]);
os.remove(os.path.join(dirpath,file));
var fib=function __lambda__(n){return n<2?n:fib(n-1)+fib(n-2)};
root.columnconfigure(0,__kwargtrans__({weight:1}));
Image.open(path);
var __left0__=tuple([1,0]);var dx=__left0__[0];var dy=__left0__[1];
gluLookAt(eX,eY,eZ,cX,cY,cZ,0,1,0);
set([]);
np.diagonal(np.dot(np.rollaxis(a,2),a),0,2).T;
var res=function(){var __accu0__=[];for(var [x,y]of d.py_items())__accu0__.append(tuple([[x]*len(y),y]));return __accu0__}();
func(...posargs,__kwargtrans__(fkwargs));
print(rawstr(test4));
b.__setitem__([x,y],z);
self.sftp.putfo(fileobj,path);
(function(){var __accu0__=[];for(var n of tf.get_default_graph().as_graph_def().node)__accu0__.append(n.py_name);return __accu0__})();
im.show();
inset.set_ylim(axis.get_ylim());
screen.blit(background,tuple([0,0]));
dict.__setitem__(self,key,value);
export var Hn=np.fft.fft(Moisture_mean_x[0]);
print(str(names).__getslice__(1,-1,1));
ssh.close();
res.cluster.value_counts();
list(itertools.chain(function(){var __accu0__=[];for(var line of data)__accu0__.append(pat.py_split(line));return py_iter(__accu0__)}()));
(function(){var __accu0__=[];for(var [i,j]of combinations(array,2))__accu0__.append(i*j);return __accu0__})();
my_objects.append(MyClass(i));
plt.draw();
[[.4,.6,0,0],[.2,.4,.4,0],[0,0,.4,.6]];
self.setLayout(self.layout);
a.writerows(data);
df.py_values-df2.py_values;
json.dump(data,f,__kwargtrans__({ensure_ascii:false}));
theano.printing.debugprint(f);
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
ax.lines.remove(lines[0]);
test.py;
smtp.sendmail(from_addr,to_addr,m.as_string());
ch.setLevel(logging.DEBUG);
var mask=cv2.cvtColor(mask,cv2.COLOR_GRAY2BGR);
db.create_all();
var ax=fig.add_subplot(111);
help(dir);
plt.show();
button.pack();
var T=map(function __lambda__(i){return L[i]},Idx);
var f=function __lambda__(x,y){return x>100&&y<50?x:y};
line.__getslice__(len(prefix),null,1);
proc.stdin.flush();
new set([new set([a])]);
self.create_socket(socket.AF_INET,socket.SOCK_STREAM);
print(s,s[-1].isdigit());
t.pack();
self.Layout();
app.logger.handlers.__setslice__(0,null,null,[]);
data.py_split();
today.day;
dVal.apply(function __lambda__(series){return series/dX});
plt.show();
export var abc=dict(function(){var __accu0__=[];for(var c of string)__accu0__.append(tuple([c,string.count(c)]));return py_iter(__accu0__)}());
do_something();
export var diag_T=np.ravel(T.diagonal().copy());
result[key]+=int(row[0]);
ax.xaxis.set_visible(false);
var names=pd.concat(names,frame,__kwargtrans__({ignore_index:true}));
print(my_list);
scores.close();
Response(serializer.data);
writer.writerow(row);
threading.Timer(1,greeting,tuple([oh_hi])).start();
(function(){var __accu0__=[];for(var row of LoL[r])__accu0__.append(row[s]);return __accu0__})();
np.random.choice(np.squeeze(a));
list(dict1.py_items())^list(dict2.py_items());
blowfish();
np.in1d(a,b);
var __left0__=list(d.py_items());var k=__left0__[0][0];var v=__left0__[0][1];

output.append(float(row[4]));
var log=logging.getLogger(__name__);
sys.argv[i];
a.remove(set([2]));
self.table.setRowCount(5);
array([1,1,1,1,0]);
var y=np.hsplit(x,np.arange(10,129,10));
self.queue.add(item);
print(list(a[b]));
print(b.__class__.__name__);
int(n)==n;
x.__getslice__(0,null,2);
plt.plot(data);
new set([new set([form.as_div])]);
var files=list(filter(path.isfile,os.listdir(dirToScreens)));
pd.to_datetime(df.Date).order().index;
func(func,...args,__kwargtrans__(kwargs));
(function(){var __accu0__=[];for(var [key,value]of zip(bins,count))__accu0__.append([str(key),value]);return dict(__accu0__)})();
m.put();
skrift1.pack(__kwargtrans__({pady:5}));
tekstboks.pack(__kwargtrans__({pady:5}));
t.start();
plt.show();
time.sleep(5);
os.system(cmd);
plt.show();
self.add(record);
subprocess.call(args);
f.close();
right.remove(right[0]);
time.sleep(1);
main();
admin.site.register(ItemPending,ItemAdminPending);
out.extend(map(str,list(range(a,b+1))));
pygame.init();
ax.invert_yaxis();
a.xaxis.set_major_formatter(ticker.NullFormatter());
foo.__class__;
var id=models.AutoField(__kwargtrans__({primary_key:true}));
threading.Thread(__kwargtrans__({target:play_audio})).start();
sum(function(){var __accu0__=[];for(var i of a)__accu0__.append(isinstance(i,int));return py_iter(__accu0__)}());
print(map(function __lambda__(x,y){return x+[y]},A,list(range(1,len(A)+1))));
sys.stdout.write(message);
pylab.plot(x,y);
var proc=subprocess.Popen(command,__kwargtrans__({startupinfo:startupinfo}));
print(conn.notices[-1]);
self.method();
df.index.py_values;
bmp.Bind(wx.EVT_LEAVE_WINDOW,onWindow);
var data=np.loadtxt(f);
export var order_array=np.array(rows_list);
var screen=pygame.display.set_mode(size);
instance.save();
ax.plot(xx,yy);
sum(map(pow,l,count(1)));
export var ts=time.mktime(dtt);
print(map(hex,a));
export var abs_path=os.path.abspath(file.py_name);
logging.basicConfig(__kwargtrans__({level:logging.INFO}));
var res=urllib.request.urlopen(req);
(myset-(myset-set([b]))).py_pop()===a;
app.MainLoop();
app.logger.addHandler(stream_handler);
f.read();
self.root.after(1E3,self.update_clock);
min(function(){var __accu0__=[];for(var i of a)__accu0__.append(s.find(i));return py_iter(__accu0__)}());
session.query(Foo).filter(tuple_(Foo.a,Foo.b,Foo.c).in_(py_items));
var data=f.readframes(chunk);
QtCore.QVariant();
[2,5,6,7,8,10];
export var zipped=zip(mylist.__getslice__(0,null,2),mylist.__getslice__(1,null,2));
time.sleep(1);
print(pd.concat([df,df1]));
sys.exit(2);
plt.show();
board[i].append(0);
f(...args,__kwargtrans__(kwargs));
print(datetime.timedelta(__kwargtrans__({days:1})));
(function(){var __accu0__=[];for(var item of my_list)if(!__in__(item,to_be_removed))__accu0__.append(item);return __accu0__})();
var py_items=sorted(list(d.py_items()),__kwargtrans__({key:keyfunc}));
plt.scatter(x,y,__kwargtrans__({c:z,s:20}));
query_set.filter(__kwargtrans__({deleted_at__isnull:true}));
plot(data);
var a=set(a);
self.bottom_frame.grid_columnconfigure(0,__kwargtrans__({weight:1}));
var y=np.arange(10,20);
settings.py;
mech.set_handle_robots(false);
var df=df.sortlevel(__kwargtrans__({level:1,axis:1}));
file.seek(-len(line),1);
(function(){var __accu0__=[];for(var k of x)if(py_typeof(k)==str)__accu0__.append(k);return __accu0__})();
list1.py_sort();
app.root.mainloop();
var a=function(){var __accu0__=[];for(var row of a)if(all(function(){var __accu1__=[];for(var j of range(0,len(row),2))__accu1__.append(row[j]<=0);return py_iter(__accu1__)}()))__accu0__.append(row);return __accu0__}();
loop.run();
exit(0);
cv2.waitKey();
zip(list_a,list_b);
print(dss);
ax.set_xticks([]);
export var rank=models.IntegerField();
plt.show();
string[0].isdigit();
var application=django.core.handlers.wsgi.WSGIHandler();
var data=response.json();
sys.stdout=FlushFile(sys.__stdout__);
var d=function(){var __accu0__=[];for(var [x,y]of zip(m.__getslice__(0,null,2),m.__getslice__(1,null,2)))__accu0__.append([x,y]);return dict(__accu0__)}();
app.exec_();
var app=QtGui.QApplication([]);
x[np.ix_(np.arange(x.shape[0]),x_range,y_range)];
cygstart/cygdrive/c/Python27/Scripts/ipython.exe;
var a=np.where(np.eye(7),np.nan,1);
var opener=urllib.request.build_opener();
areas.apply(multiply_by_demand).unstack(0);
btn.pack();
df[(df.py_values>1.5).any(1)];
(function(){var __accu0__=[];for(var [k,v]of list(Counter(L).py_items()))__accu0__.append([k]*v);return __accu0__})();
os.listdir(base);
yourcode();
var indices=np.where(a>=1.5);
window.show();
var x=list(x);
plt.subplot(122);
var content=urllib.request.urlopen(req).read();
unittest.main();
export var sift=cv2.xfeatures2d.SIFT_create();
np.where(np.isnan(a),ma.array(a,__kwargtrans__({mask:np.isnan(a)})).mean(__kwargtrans__({axis:0})),a);
(function(){var __accu0__=[];for(var [k,v]of somedict.py_items())if(key_criteria_func(k))__accu0__.append([k,v]);return dict(__accu0__)})();
print(df);
np.roll(a,-1);
(function(){var __accu0__=[];for(var [i,e]of enumerate(lst))__accu0__.append(__in__(i,indices)?new_element:e);return __accu0__})();
plt.show();
map(int,list(bin(YOUR_NUMBER).__getslice__(2,null,1)));
var d=function(){var __accu0__=[];for(var [py_name,value]of splitstrs)__accu0__.append([py_name,int(value)]);return dict(__accu0__)}();
plot(x,y);
plt.ylim(1,0);
print(np.may_share_memory(a,b));
plt.show();
pd.DataFrame(d);
print(datetime.datetime.fromtimestamp(dt));
gevent.joinall([job1,job2]);
plt.show();
shutil.rmtree(self.py_name);
b.shape;
elementwiseApply(add,[[0,0,0],[0,0],0],[[4,4,4],[4,4],4]);
(function(){var __accu0__=[];for(var x of list_1)if(isinstance(x,numbers.Number))__accu0__.append(x);return __accu0__})();
datetime.datetime.utcfromtimestamp(x.tolist()/1E9);
f.write(mytext);
set([0,9,4,6,7]);
apps.get_models();
print(match.group(0));
time.sleep(1);
ax.scatter(x,y,z);
list(set(q)&set(w));
user.save();
response;
export var cbar=fig.colorbar(result);
self.frame.Show();
export var prettyHTML=soup.prettify();
root.mainloop();
plt.show();
np.count_nonzero((np.bitwise_xor(a,b)&r)!=0);
list.__getslice__(0,10,1);
run_cmd();
file.writelines(data);
self.show();
sys.stdout.flush();
example1();
assertDictEqual(dict1,dict2);
df.py_sort(__kwargtrans__({axis:1,inplace:true}));
export var Eat=0;
var text=sys.stdin.read();
min(max(num,start),end);
export var extension=os.path.splitext(filename)[1].__getslice__(1,null,1);
index_list.append(function(){var __accu0__=[];for(var i=0;i<py_items;i++)__accu0__.append(i+temp);return __accu0__}());
plt.show();
df.Cat1=np.where(df.Cat1.isnull(),df.Cat2,df.Cat1);
export var unique_longest_strings=list(set(longest_strings));
var df=pd.DataFrame.from_records(data);
Tkinter.Frame.__init__(self,root);
var logger=logging.getLogger(__name__);
(function __lambda__(){return 1})()==function __lambda__(){return 1}();
app.jinja_env.filters.py_update(my_filters);
export var stopword_pattern=re.compile(stopstring);
startupinfo.dwFlags|=subprocess.STARTF_USESHOWWINDOW;
data.append(row);
(function(){var __accu0__=[];for(var i of range(len(LoL))[r])__accu0__.append(LoL[i][s]);return __accu0__})();
df[df.index.levels[0].isin(stk_list)];
export var DBSession=scoped_session(sessionmaker(__kwargtrans__({bind:engine})));
plt.pause(.5);
print(time.mktime(datetime.datetime.now().timetuple()));
getattr(parent,collection).append(child);
result.append(b[index-1]);
var row=function(){var __accu0__=[];for(var item of cursor.fetchall())__accu0__.append(item[0]);return __accu0__}();
plt.show();
var __left0__=tuple([A.__getslice__(0,null,2),A.__getslice__(1,null,2)]);var B=__left0__[0];var C=__left0__[1];
proc.communicate();
np.arange(1,a.shape[1],2);
plt.show();
ax.lines=[];
df1.ix.__getitem__([0]);
var x=all(list_of_bools);
print(function(){var __accu0__=[];for(var k of sorted(index.py_keys()))__accu0__.append(tuple([k,len(index[k])]));return __accu0__}());
my_model.duration=datetime.timedelta(__kwargtrans__({days:20,hours:10}));
np.argwhere(np.in1d(a,np.intersect1d(a,b))==false).flatten().tolist();
print(tuple([len(s),len(data),data]));
sorted(qs,__kwargtrans__({key:function __lambda__(n){return tuple([n[0],int(n.__getslice__(1,null,1))])}}));
dict(enumerate(google_price_data,__kwargtrans__({start:1})));
json.load(f);
print(decoded.strip());
(function(){var __accu0__=[];for(var [k,v]of list(d1.py_items()))if(v==max(d1.py_values()))__accu0__.append(k);return __accu0__})()[0];
print(row.get_text());
process.exit();
sys.stdout.flush();
gtk.main();
(function(){var __accu0__=[];for(var x of seq)if(!__in__(x,seen)&&!seen.add(x))__accu0__.append(x);return __accu0__})();
p.start();
print(socket.gethostname());
driver.close();
export var anyTrue=any(function(){var __accu0__=[];for(var elem of someIterable)__accu0__.append(somePredicate(elem));return py_iter(__accu0__)}());
loop.close();
weekdays[datetime.now().weekday()];
export var data_json=simplejson.dumps(data_dict);
getattr(obj,py_name);
np.unique(a.round(__kwargtrans__({decimals:4})));
set(function(){var __accu0__=[];for(var x=0;x<10;x++)__accu0__.append(x*x);return py_iter(__accu0__)}());
sys.exit(1);
d.py_setdefault(item[0],[]).append(item.__getslice__(1,null,1));
plt.show();
(function(){var __accu0__=[];for(var row of zip(nums,chars))__accu0__.append(dict(zip(py_keys,row)));return __accu0__})();
f.seek(old_file_position,os.SEEK_SET);
mylist.py_pop(0);
export var new_d=pd.Series(d);
var df=df.applymap(str);
var df=pd.DataFrame([]);
fig.autofmt_xdate();
a.append(1);
var q=function(){var __accu0__=[];for(var i=0;i<5;i++)for(var j=0;j<4;j++)__accu0__.append([tuple([i,j]),0]);return dict(__accu0__)}();
print(request.get_message().request_body.flatten().data);
models.py;
func();
plt.plot(x,g(x),__kwargtrans__({zorder:1}));
set(d2.py_items()).issubset(set(d1.py_items()));
session.query(BlogPost).filter_by(__kwargtrans__({visible:true}));
Gtk.main_quit();
twrv.start();
tasks[sys.argv[1]]();
var users=db.session.query(User).all();
random.shuffle(py_items);
f.close();
self.show();
subprocess.call(row,__kwargtrans__({shell:true}));
print(function(){var __accu0__=[];for(var column of cursor.fetchall())__accu0__.append(columns[0]);return __accu0__}());
np.minimum.accumulate(a);
interleaveHelper(lst.__getslice__(0,len(lst)/2,1),lst.__getslice__(len(lst)/2,null,1));
int(input(msg));
print(json.dumps(somedict));
time.sleep(1);
pl.show();
sys.exit(0);
py_name.__class__.__class__;
session.query(ZKUser).filter(ZKGroup.id.in_([1,2])).all();
len(function(){var __accu0__=[];for(var char of unistr)if(unicodedata.combining(char)==0)__accu0__.append(char);return __accu0__}());
x.as_matrix();
(function(){var __accu0__=[];for(var elem of some_iterable)__accu0__.append(elem);return __accu0__})();
imshow(gray1,__kwargtrans__({cmap:cm.gray,alpha:.5}));
dict(dict_list);
c.flatten();
plt.show();
matched[0];
zipDocment.extractall();
np.py_sort(reference);
var v=data[row][col];
var list_2=function(){var __accu0__=[];for(var num of list_1)if(isinstance(num,tuple([int,float])))__accu0__.append(num);return __accu0__}();
sys.stdout.write(alphabet[bisect.bisect(f_list,random.random())-1]);
session.rollback();
map(numpy.random.shuffle,a);
(function(){var __accu0__=[];for(var item of x)if(!y.intersection(item))__accu0__.append(item);return __accu0__})();
export var nextmonth=datetime.date.today()+relativedelta.relativedelta(__kwargtrans__({months:1}));
-len(l)<=index&&index<len(l)?x[index]:py_default;
var result=function(){var __accu0__=[];for(var [r]of result)__accu0__.append(r);return __accu0__}();
app.MainLoop();
var list_of_tuples=function(){var __accu0__=[];for(var [x,y,label]of data_one)__accu0__.append(tuple([x,y]));return __accu0__}();
bisect.bisect(grid,value);
print(Matrix[0][0]);
frame.grid(__kwargtrans__({row:0,column:0,sticky:N+S+E+W}));
print(sys.argv[0]);
a.deiconify();
self.conn.send(msg);
print(calendar.timegm(d.timetuple()));
var py_keys=set().union(...all_dicts);
Py_Finalize();
Math.pow(x,2);
ax.grid();
shutil.move(py_name,dst);
var text=dlg.ui.lineEdit.text();
plt.show();
sys.exit(app.exec_());
app.logger.setLevel(logging.DEBUG);
start_server();
np.random.shuffle(a.flat);
shutil.copytree(from_path,to_path);
cogrouped.mapValues(function __lambda__(x){return tuple([list(x[0]),list(x[1])])}).collect();
curses.endwin();
l.py_sort(__kwargtrans__({key:itemgetter(1),reverse:true}));
pd.DataFrame(data);
[10,40,60,90,100];
np.random.choice(array1,5);
(function(){var __accu0__=[];for(var k of m)__accu0__.append([k,p[k]-Math.pow(m[k],2)]);return dict(__accu0__)})();
var f=open(fpath);
t.start();
plt.figure();
object.__setattr__(self,py_name,value);
(function(){var __accu0__=[];for(var row=0;row<height;row++)__accu0__.append(function(){var __accu1__=[];for(var col=0;col<width;col++)__accu1__.append(m[row][col]);return __accu1__}());return __accu0__})();
json_data.close();
self.setSizePolicy(QtGui.QSizePolicy.Expanding,QtGui.QSizePolicy.Fixed);
os.isatty(sys.stdout.fileno());
list(b);
logging.Handler.__init__(self);
os.killpg(process.pid,signal.SIGKILL);
export var scaling=np.array([dx,dy,dz]);
export var complete_path=os.path.join(root_path,sanitised_path);
print(f());
Photo.objects.filter(__kwargtrans__({tags:t1})).filter(__kwargtrans__({tags:t2}));
var data=function(){var __accu0__=[];for(var y of data)__accu0__.append(function(){var __accu1__=[];for(var x of y)__accu1__.append(eval(x));return __accu1__}());return __accu0__}();
list(s);
writes.writerows(mygen(reader));
QtCore.Qt.ItemIsEnabled;
plt.pcolormesh(X,Y,Z);

ser.close();
var primes=function(){var __accu0__=[];for(var x=2;x<101;x++)if(all(function(){var __accu1__=[];for(var y=2;y<min(x,11);y++)__accu1__.append(__mod__(x,y));return py_iter(__accu1__)}()))__accu0__.append(x);return set(__accu0__)}();
export var dups=function(){var __accu0__=[];for(var x of list_a)if(list_a.count(x)>1)__accu0__.append(x);return __accu0__}();
email.send();
print(r.url);
list(chain.from_iterable(function(){var __accu0__=[];for(var sub of G)__accu0__.append(len(sub)>1?sorted(sub):sub);return py_iter(__accu0__)}()));
row.remove(row.getchildren()[1]);
Py_Finalize();
var x=np.linspace(-np.pi,np.pi,100);
print(model.summary());
var result=sorted(py_iter(dictionary.py_items()),__kwargtrans__({key:function __lambda__(k_v){return tuple([k_v[0].field,k_v[1]])}}));
ax.set_xticks(np.arange(0,6,1));
math.isnan(b);
df2.plot(__kwargtrans__({ax:axes.__getitem__([0,1])}));
json.dumps(a,__kwargtrans__({py_default:encode_b}));
pd.end_time=pandas.to_datetime(pd.end_time);
var x=tf.Variable(tf.constant(0,__kwargtrans__({shape:[2,2]})));
int((value-epoch).total_seconds());
ax.xaxis.set_visible(false);
var a=dict.fromkeys(a,0);
self.root.destroy();
self.Acceuil.show();
lst.append(st.__getslice__(i,i+10,1));
current_module.new_name=func;
self.configure(__kwargtrans__({image:self.image}));
animals.py_sort(__kwargtrans__({key:function __lambda__(py_name){return tuple([py_name[0],-len(py_name),py_name])}}));
HttpResponse(__kwargtrans__({status:204}));
tuple([array([1]),array([0])]);
print(datetime.now()-datetime.combine(bday,time()));
(function(){var __accu0__=[];for(var [k,v]of sorted(py_iter(d.py_items()),__kwargtrans__({key:function __lambda__(k_v){return tuple([-k_v[1],k_v[0]])}})))__accu0__.append(k);return __accu0__})();
plt.show();
np.where(a>0);
isinstance(y,float);
zip(...a);
classifier.fit(X_train,y_train);
ax.set_xlim([-2,2]);
sys.exit(0);
np.py_split(data,np.where(np.diff(data)!=stepsize)[0]+1);
conn.commit();
(function(){var __accu0__=[];for(var n=start;n<stop;n++)__accu0__.append(self[n]);return __accu0__})();
var parser=argparse.ArgumentParser();
sys.argv[1];
var d=make_defaultdict(2,list);
print(tuple([x,y]));
sum(function(){var __accu0__=[];for(var i=1;i<5;i++)__accu0__.append(dict[i]);return py_iter(__accu0__)}());
subprocess.call(cmd,__kwargtrans__({shell:true}));
arr.sum(__kwargtrans__({axis:tuple([0,1])}));
export var wordset=set(wordlist);
shutil.copy(src,dst);
b.remove(e);
dict(MyClass(5,6,7));
new_file.close();
export var raw_bytes=(ctypes.c_ubyte*20).from_buffer_copy(str_bytes);
dict(itertools.chain.from_iterable(function(){var __accu0__=[];for(var dct of dicts)__accu0__.append(list(dct.py_items()));return py_iter(__accu0__)}()));
plt.show();
A.__setitem__([i,j],D.__getitem__([i,j]));
self._body;
self.setLayout(layout);
(function(){var __accu0__=[];for(var k of itertools.chain(...function(){var __accu1__=[];for(var d of list(foo.py_values()))__accu1__.append(list(d.py_keys()));return py_iter(__accu1__)}()))__accu0__.append(k);return __accu0__})();
pyplot.show();
export var serversocket=socket.socket(socket.AF_INET,socket.SOCK_STREAM);
var s=pd.Series(np.random.randn(5));
main();
array([[1,0,0,1],[0,1,0,1],[0,0,1,1]]);
var form=waypointForm(user);
app.MainLoop();
sys.stdout.write(mystdout.get_text());
l.index(d);
export var filtered_numbers=function(){var __accu0__=[];for(var n of numbers)if(len(repr(n))==len(set(repr(n))))__accu0__.append(n);return __accu0__}();
export var modernthingy=zopethingy.asdatetime();
(function(){var __accu0__=[];for(var x of dt.T.itertuples())__accu0__.append(list(x));return __accu0__})();
df.apply(func,__kwargtrans__({axis:1}));
print(function(){var __accu0__=[];for(var x=2;x<100;x++)if(!function(){var __accu1__=[];for(var t=2;t<x;t++)if(!__mod__(x,t))__accu1__.append(t);return __accu1__}())__accu0__.append(x);return __accu0__}());
var soup=BeautifulSoup(f);
A.__setslice__(1,1,null,B);
export var new_df=pd.concat([new_df,extract_df],__kwargtrans__({ignore_index:true}));
np.diff(m.tocsr().indptr);
db.session.commit();
foo();
self.ax.axis([-10,10,-10,10]);
(function(){var __accu0__=[];for(var j of function(){var __accu1__=[];for(var i=0;i<10;i++)__accu1__.append(create_lambda(i));return __accu1__}())__accu0__.append(j());return __accu0__})();
print(list_end_counter([1,2,1,1,1]));
var df=pd.DataFrame(data.__getslice__(1,null,1),__kwargtrans__({columns:data[0]}));
ax.get_yticklines()[i].set_visible(false);
unittest.main();
Clock.schedule_interval(self.py_update,2);
var foo=d.py_get(x,bar);
plot_df.plot(__kwargtrans__({subplots:true}));
plt.draw();
(function(){var __accu0__=[];for(var [ix,row]of enumerate(a))for(var [iy,i]of enumerate(row))if(i==0)__accu0__.append(tuple([ix,iy]));return __accu0__})();
self.set_tab_reorderable(tab.child,true);
df.apply(pd.value_counts);
self.origstream.write(self.escape_char);
export var notlast=function __lambda__(lst){return itertools.islice(lst,0,len(lst)-1)};
p1.start();
var s=set(function(){var __accu0__=[];for(var i=0;i<1E6;i++)__accu0__.append(A());return py_iter(__accu0__)}());
images[idx].reshape(90,90);
cv2.destroyAllWindows();
writer.writerow(row);
dict(function(){var __accu0__=[];for(var [key,value]of a.py_items())if(key==1)__accu0__.append(tuple([key,value]));return py_iter(__accu0__)}());
export var ran_floats=function(){var __accu0__=[];for(var _=0;_<size;_++)__accu0__.append(random.uniform(low,high));return __accu0__}();
var results=map(function __lambda__(x){return tuple([x[0],x.__getslice__(1,null,1)])},reader);
session.commit();
axis.set_major_formatter(ScalarFormatter());
var response=serializers.BooleanField(__kwargtrans__({required:true}));
var df=df.iloc.__getitem__([tuple([0,null,1]),function(){var __accu0__=[];for(var [j,c]of enumerate(df.columns))if(j!=i)__accu0__.append(j);return __accu0__}()]);
var date=models.DateTimeField(__kwargtrans__({py_default:datetime.now,blank:true}));
var __left0__=function(){var __accu0__=[];for(var [val,delta]of zip(tuple([x,y]),tuple([1,2])))__accu0__.append(val-delta);return py_iter(__accu0__)}();var x=__left0__[0];var y=__left0__[1];
(function(){var __accu0__=[];for(var a of A2)__accu0__.append(np.argmin(a));return __accu0__})();
df;
var query=__mod__(query,conn.escape(args));
setattr(Foo,v,0);
process.start();
np.abs(a-b)<atol+rtol*np.abs(b);
map(list.__add__,L1,L2);
cnxn.commit();
list(range(x1,x2+1));
np.delete(arr,2,__kwargtrans__({axis:1}));
plt.scatter(X,Y);
export var everyone=[friendlies+enemies];
cls(a,b);
jsonFile.close();
ax.set_xticklabels(alphab);
__init__.py;
scipy.linalg.cython_blas;
admin.site.register(Contest,ContestAdmin);
files_list.py_sort(__kwargtrans__({key:operator.itemgetter(1)}));
var l2=function(){var __accu0__=[];for(var x of sorted(l1))__accu0__.append(l1.index(x));return __accu0__}();
plt.show();
print(list(db.py_keys()));
lowess(y,x);
print(time.time());
var y=tuple(function(){var __accu0__=[];for(var z of img.size)__accu0__.append(z*10);return __accu0__}());
var mydict=dict([[x[0],x[1]]]);
pumpedThread.start();
Fraction(.185).limit_denominator();
c.py_update(line.py_split());
var b=cosfromsin(x,a);
map(str,numbers);
lbl7.grid(__kwargtrans__({row:1,column:0}));
np.where(cond,arr,-100).argmax(1);
threading.Thread.__init__(self);
app.run(__kwargtrans__({processes:2}));
time.sleep(.1);
send_file(tempcreator.somePath);
grequests.map(rs);
print(neigh.predict_proba([[.9]]));
directory_list.append(os.path.join(root,py_name));
foo(a.__getitem__([tuple([0,null,1]),tuple([0,null,1]),np.newaxis])-b.__getitem__([tuple([0,null,1]),np.newaxis]));
tree.write(filename,__kwargtrans__({pretty_print:true}));
var timestamp=(utc_naive-datetime(1970,1,1)).total_seconds();
i+=1;
var abc=dict(function(){var __accu0__=[];for(var c of set(string))__accu0__.append(tuple([c,string.count(c)]));return py_iter(__accu0__)}());
var timestamp=dt.timestamp();
var tree=html.fromstring(page);
plt.show();
__init__.py;
axe.set_xticklabels(df.index,__kwargtrans__({rotation:0}));
self._dynprop;
dict[array[i][0]]=array[i][1];
subprocess.call(command.py_split(),__kwargtrans__({shell:false}));
print(_[0][0].decode(_[0][1]));
(function(){var __accu0__=[];for(var c of col_names)if(!any(function(){var __accu1__=[];for(var f of filter_array)__accu1__.append(__in__(f,c));return py_iter(__accu1__)}()))__accu0__.append(c);return __accu0__})();
var b=__in__(word,wordList.__getslice__(0,1,1)+wordList.__getslice__(2,null,1));
scatter(function(){var __accu0__=[];for(var [a,b]of zip(x,y))if(a>0&&a<10)__accu0__.append(tuple([a,b]));return __accu0__}());
ZipFile.write(os.path.basename(a),__kwargtrans__({compress_type:zipfile.ZIP_DEFLATED}));
var mydict=dict.fromkeys(string.printable,0);
int(math.log(n,2));
print([a[i],a[i+1]]);
v.py_split();
json.dumps(pyDict);
self.Bind(wx.EVT_LEFT_UP,self._onMouseUp);
fig.autofmt_xdate();
var results=cur.fetchall();
MyApp().run();
self.assertEqual(response.status_code,200);
A.__getitem__([tuple([0,2]),tuple([0,null,1]),tuple([1,null,1])]);
(function(){var __accu0__=[];for(var [row,col]of enumerate(col_index))__accu0__.append(a.__getitem__([row,col]));return __accu0__})();
var __left0__=curve_fit(goal,xdata,ydata,__kwargtrans__({p0:[1]*5}));var popt=__left0__[0];var pcov=__left0__[1];
metadata.create_all(engine);
plt.show();
self.setupUi(self);
print(tuple([py_name,val]));
(function(){var __accu0__=[];for(var c of data)__accu0__.append(hex(ord(c)));return __accu0__})();
[2,1,0];
sm.__getitem__([np.random.sample(sm.shape[0],K,__kwargtrans__({py_replace:false})),tuple([0,null,1])]);
var ax=fig.add_subplot(1,1,1);
time.sleep(60);
list(filterer(list1,list2));
var data=function(){var __accu0__=[];for(var item of map(sorted,lst))__accu0__.append(tuple(item));return set(__accu0__)}();
con.close();
sorted(gen);
my_handler.setLevel(logging.INFO);
plt.close();
session2.commit();
np.fill_diagonal(a,0);
(function(){var __accu0__=[];for(var t of tuples)for(var item of t)__accu0__.append(item);return __accu0__})();
qs.filter(__kwargtrans__({py_namestartswith:self.kwargs.py_name}));
(condition?foo().bar():foo()).baz();
hscrollbar.grid(__kwargtrans__({row:1,column:0,sticky:E+W}));
time.sleep(2);
pd.concat(function(){var __accu0__=[];for(var x of df.T)__accu0__.append(df.T[x]);return __accu0__}(),__kwargtrans__({ignore_index:true}));
round(0,4);
cor.loc.__setitem__([tuple([0,null,1]),tuple([0,null,1])],np.tril(cor.py_values,__kwargtrans__({k:-1})));
logging.getLogger(my_module.__name__).setLevel(logging.DEBUG);
print(df.groupby(ind).head());
np.where(a==a.max());
print(map(joiner,sixgrams));
time.mktime(time.strptime(time1,format));
tuple([a.__getitem__([0,tuple([0,null,1]),tuple([0,null,1])]),a.__getitem__([1,tuple([0,null,1]),tuple([0,null,1])]),a.__getitem__([2,tuple([0,null,1]),tuple([0,null,1])])]);
plt.show();
f.close();
asyncio.get_event_loop().run_until_complete(hello());
ax.yaxis.set_minor_locator(MultipleLocator(.2));
(function(){var __accu0__=[];for(var i of fruits)__accu0__.append(__in__(i,fruit_dict2));return __accu0__})();
workbook.close();
plt.show();
print(my_list[-1]);
var html=driver.page_source;
var fig=PLT.figure();
fruitdict[i]=locals()[i];
plt.show();
var ax=fig.add_subplot(1,1,1);
your_method();
np.sum(arr.__getitem__([tuple([1,-1,1]),tuple([1,-1,1])]));
plt.colorbar();
print(flatten_count(x,1));
np.getbufsize();
self.decorator(func);
item_set[category].append(item);
plt.xticks();
list(zip(lst.__getslice__(0,-2,1),lst.__getslice__(1,-1,1),lst.__getslice__(2,null,1)));
var ax=fig.add_subplot(111);
var result=function(){var __accu0__=[];for(var x of S)__accu0__.append(x*P);return __accu0__}();
bar.__getslice__(a,b,c).foo();
json.JSONEncoder.py_default(self,obj);
pl.clf();
var data=function(){var __accu0__=[];for(var line of csv.reader(f))__accu0__.append(tuple([line[0],line.__getslice__(1,null,1)]));return __accu0__}();
writer.writerow(row);
print(cv2.__version__);
(function(){var __accu0__=[];for(var y of x)__accu0__.append(log(y,10));return __accu0__})();
df;
(function(){var __accu0__=[];for(var [i,x]of enumerate(unculledlist))if(__mod__(__mod__(i,6),2)==0)if(__mod__(__mod__(i,5),2)==0)__accu0__.append(x);return __accu0__})();
time.sleep(delay);
startupinfo.dwFlags|=subprocess.STARTF_USESHOWWINDOW;
(function(){var __accu0__=[];for(var x of lst)if(__mod__(x,2)==0)__accu0__.append(x);return __accu0__})();
new_df.iloc.__setitem__([0,0],1);
s.setsockopt(SOL_SOCKET,SO_BROADCAST,1);
min(l1,l2);
os.remove(file_list.py_pop());
self.crawler.engine.unpause();
ax2.set_yticklabels(y_label2,__kwargtrans__({fontsize:20}));
self.driver.quit();
ax.legend(__kwargtrans__({numpoints:1}));
con.commit();
var soup=BeautifulSoup(html);
threading.Thread.__init__(self);
string.__getslice__(start,end,1);
tuple(function(){var __accu0__=[];for(var k of py_keys)__accu0__.append(d[k]);return py_iter(__accu0__)}());
etree.fromstring(xml_response);
conn.close();
subprocess.call(cmd,__kwargtrans__({stdin:subprocess.PIPE}));
(function(){var __accu0__=[];for(var k of list(d1.py_keys())&l1)__accu0__.append([k,d1[k]]);return dict(__accu0__)})();
export var json_docs=function(){var __accu0__=[];for(var doc of cursor)__accu0__.append(json.dumps(doc,__kwargtrans__({py_default:json_util.py_default})));return __accu0__}();
plt.show();
df.columns[np.argsort(df.py_values)];
df.groupby(__kwargtrans__({level:0,group_keys:false})).apply(first_last);
plt.show();
g.sum();
[[400,200]];
df1.loc[df2.index[0]]=df2.iloc[0];
get_color(1);
fig.set_figwidth(24);
(function(){var __accu0__=[];for(var x of range(0,len(a),seg_length))__accu0__.append(a.__getslice__(x,x+seg_length,1));return __accu0__})();
var ax=fig.add_subplot(111);
print(function(){var __accu0__=[];for(var item of product(B,__kwargtrans__({repeat:len(A)})))__accu0__.append(zip(A,item));return __accu0__}());
print(sys.stdin.readline());
random.shuffle(data);
self.layout().addWidget(self.child);
logger.setLevel(logging.DEBUG);
np.count_nonzero(df.isnull());
var start_time=time.time();
intbids.append(int(bid));
(function(){var __accu0__=[];for(var value of add)__accu0__.append(dict(template,__kwargtrans__(dict([[k,value]]))));return __accu0__})();
print(time.mktime(d.timetuple()));
[Request(self.start_url,__kwargtrans__({callback:self.parse_listings,follow:true}))];
time.sleep(20);
ws.cell(__kwargtrans__({row:1,column:1})).style.border.top.border_style=borders.BORDER_MEDIUM;
(function(){var __accu0__=[];for(var [x,y]of zip_longest(py_reversed(P),py_reversed(Q),__kwargtrans__({fillvalue:0})))__accu0__.append(x+y);return __accu0__})().__getslice__(0,null,-1);
unittest.main();
x[mask]=np.nan;
table.append(row);
len();
workbook.close();
nsolve([x*y-1,4*Math.pow(x,2)+Math.pow(y,2)-5],[x,y],[1,1]);
reactor.run();
print(math.ceil(v*100)/100);
example.__getslice__(4,1,1);
var out=function(){var __accu0__=[];for(var c of contribs)__accu0__.append(np.sum(data[c]));return __accu0__}();
plt.show();
conn.rollback();
py_next(function(){var __accu0__=[];for(var x of list_of_tuples)if(__in__(value,x))__accu0__.append(x);return py_iter(__accu0__)}());
screen.blit(image,tuple([0,0]));
arr.resize(tuple([arr.shape[0]*2,arr.shape[1]]));
b.close();
a[tuple(idx.T)]=5;
var fig=plt.figure();
libc.cprogram(wts,res,kks,byref(n),ex);
var c=np.concatenate(tuple([a,b]));
time.sleep(1);
df.reindex([2,0,1]);
np.array(map(str,a));
buff+=sys.stdin.read(1);
lst.py_sort();
new set([new set([a.some_other_field])]);
export var mydic=dict({});
datetime.datetime(2001,12,11,0,0);
ax.set_aspect(2);
(function(){var __accu0__=[];for(var [value,group]of itertools.groupby(b_List))if(value)__accu0__.append(len(list(group)));return __accu0__})();
var output=stdout.read();
export var db_col_data=json.dumps(latest_data);
do_stuff();
sum(function(){var __accu0__=[];for(var v of d.py_values())__accu0__.append(len(v));return py_iter(__accu0__)}());
print(new_list);
result.append(tuple([btoa[k],k]));
admin.site.unregister(User);
tuple([[0,1,1,1,0]]);
self.assertEqual(response.status_code,200);
pixels.append(tuple([tuple([x,y]),pixel.__getslice__(0,-1,1)]));
var dist=numpy.linalg.norm(a-b);
x.reshape(-1,np.prod(x.shape.__getslice__(-2,null,1))).shape;
export var newshapeA=A.shape+tuple([1])*(N+1-A.ndim);
export var predictions=function(){var __accu0__=[];for(var t of trees)__accu0__.append(t.predict(testData));return __accu0__}();
data.append(json.loads(line));
export var List_name=df_name.py_values.tolist();
export var json_output=json.dumps(my_query);
var y=set(x.flat);
(function(){var __accu0__=[];for(var num of list)__accu0__.append(sum(function(){var __accu1__=[];for(var i of num)__accu1__.append(int(i));return py_iter(__accu1__)}()));return __accu0__})();
time.sleep(1);
print(np.allclose(coeffs1,coeffs2));
np.random.seed(seed);
var kOUT=np.zeros(N+1,__kwargtrans__({dtype:object}));
cython.ushort;
cython.longlong;
cython.ulonglong;
(function(){var __accu0__=[];for(var i of l)__accu0__.append(i-1);return __accu0__})();
plt.show();
urllib.request.install_opener(opener);
browser._update_state(response);
OrderedDict(lla.__getslice__(0,null,-1));
export var trainer=BackpropTrainer(n,__kwargtrans__({dataset:ds,learningrate:.1,verbose:true}));
self.close();
image.close();
df[~df.index.isin(df_a.index+df_b.index)];
ent.grid(__kwargtrans__({row:0,column:1}));
i.setGridIntersection(i.pos());
main();
coords.reshape(-1,2);
cv2.waitKey(0);
export var hsz=wx.BoxSizer(wx.HORIZONTAL);
df.groupby(dr5minute.asof).agg(ohlcsum);
sum(function(){var __accu0__=[];for(var _ of py_iter)__accu0__.append(1);return py_iter(__accu0__)}());
self.ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy());
seen.add(i);
plt.imshow(rotate_lena_noreshape,__kwargtrans__({cmap:plt.cm.gray}));
s.send(data);
export var VVg1=np.sum(np.multiply(EVV1.__getitem__([tuple([0,n,1]),tuple([0,null,1])]),VV.__getitem__([tuple([0,null,1]),np.newaxis])),__kwargtrans__({axis:0}));
(function(){var __accu0__=[];for(var i=0;i<count;i++)__accu0__.append(tuple(sequence.__getslice__(i,i+n,1)));return __accu0__})();
var c=copy.deepcopy(a);
print(sys.path);
list(d.py_items());
urllib.parse.quote(a);
(function(){var __accu0__=[];for(var value of add)__accu0__.append(dict(template,__kwargtrans__({z:value})));return __accu0__})();
wrapped();
sorted(lst,__kwargtrans__({key:function __lambda__(x){return x[1]},reverse:true}));
df.iloc.__setitem__([tuple([0,null,1]),tuple([2,null,1])],a);
print(int(Nationality.PL));
as_strided(a,__kwargtrans__({shape:tuple([2,2,2,2]),strides:tuple([2*s,0,s,0])})).reshape(4,4);
f.read();
root.destroy();
map(min,zip(...alist));
dict(lst);
main();
print(ET.tostring(tree));
var driver=webdriver.Chrome(__kwargtrans__({chrome_options:options}));
export var filtered_d=dict(function(){var __accu0__=[];for(var k of py_keys)if(__in__(k,d))__accu0__.append(tuple([k,d[k]]));return py_iter(__accu0__)}());
(function(){var __accu0__=[];for(var token of text.py_split())if(token.isdigit())__accu0__.append(token);return __accu0__})();
print(np.fft.fft(x));
d[k].append(v);
main();
a_unique_max[np.argsort(perm[last])];
lst.py_sort(__kwargtrans__({key:function __lambda__(x){return x[1]}}));
ax.scatter(x,y,z);
print(tuple([cities[0][0],cities[1][0]]));
p.Start();
dict(zip(py_keys,py_values));
export var max_value=max(my_list);
var user=models.ForeignKey(User);
export var listings=list(get_listings());
py_reversed(sorted(a.py_keys()));
signal.signal(signal.SIGALRM,_handle_timeout);
[1,1,0,1,0,1];
var ax=fig.add_subplot(1,1,1);
cv2.waitKey(0);
self._s.py_get(k.lower());
lst.__getslice__(1,null,2);
lots_list.py_sort(mycmp);
f1.write(line);
self.socket.close();
export var mobile=models.CharField(__kwargtrans__({max_length:16}));
len(df.columns);
print(get_drives());
var res=function(){var __accu0__=[];for(var i=2;i<len(s);i++)if(s[i]==s[i-2])__accu0__.append(s.__getslice__(i-2,i+1,1));return __accu0__}();
str(float(your_string_goes_here));
df[~df.field.isin(ban_field)];
export var slices=diagonal.reshape(-1,2);
__init__.py;
gtk.main();
test();
self.send_response(200);
pl.figure(1);
var result=cursor.fetchall();
np.concatenate(tuple([a1,b1]));
var my_list2=function(){var __accu0__=[];for(var i of my_list)__accu0__.append(i[0]);return __accu0__}();
[1][0][1];
vectors/norms.reshape(1,-1);
export var settings_dir=os.path.dirname("./P2JSnippets.py");
print(line);
m.create_all();
lines.append(ax.plot(np.arange(1E3)/2));
sys.exit(1);
self.button.clicked.connect(self.handleButton);
result.py_update(function(){var __accu0__=[];for(var k of set(dol1).intersection(dol2))__accu0__.append(tuple([k,dol1[k]+dol2[k]]));return py_iter(__accu0__)}());
sys.stdout.flush();
var response=requests.delete(url,__kwargtrans__({data:json.dumps(payload),headers:headers}));
a.__getslice__(0,1,1)[0]=1;
var df=pd.DataFrame([series]);
print(nplats[index],nplons[index]);
print(function(){var __accu0__=[];for(var y of a)__accu0__.append(tuple(function(){var __accu1__=[];for(var x of y)if(x)__accu1__.append(x);return py_iter(__accu1__)}()));return __accu0__}());
history.append(py_next(sequence));
zip(t.__getslice__(0,null,2),t.__getslice__(1,null,2));
print(max(foo));
sys.modules[__name__].__file__;
test();
itertools.zip_longest(...args,__kwargtrans__({fillvalue:fillvalue}));
Z[(raw.__getitem__([tuple([0,null,1]),tuple([0,2,1])])-minimum(raw.__getitem__([tuple([0,null,1]),tuple([0,2,1])]),__kwargtrans__({axis:0}))).T.tolist()]=raw.__getitem__([tuple([0,null,1]),2]);
sns.kdeplot(x,__kwargtrans__({shade:true}));
c.save();
plt.close();
Counter(words).most_common(10);
df.plot();
app.mainloop();
celery.config_from_object(celeryconfig);
time.sleep(random.random());
dic.py_setdefault(key,[]).append(item[-1]);
list(itertools.product(tuple([0,1]),__kwargtrans__({repeat:4})));
print(find_nearest(array,value));
logfile.close();
plt.legend();
pygame.sprite.Sprite.__init__(self,self.groups);
print(len(someList));
d[pair[0]]=int(pair[1]);
var py_items=sorted(list(ipCount.py_items()),__kwargtrans__({key:my_key}));
var page=html.fromstring(urllib.request.urlopen(url).read());
var list=x.py_split();
nic.EnableDHCP();
map(id,a.__getslice__(1,null,1));
logging.basicConfig(__kwargtrans__({level:logging.ERROR}));
lst.count(1)>1;
msg.send();
sorted(adict,__kwargtrans__({key:adict.py_get,reverse:true}));
convert_file(sys.argv[1],sys.argv[2]);
wb.save(__kwargtrans__({filename:dest_filename}));
sorted(l1,__kwargtrans__({key:function __lambda__(id_and_name){return id_and_name[0]}}));
tuple([[0,0,0,0,0,0,1,1]]);
beat(__kwargtrans__({app:app})).run();
new_dic.py_setdefault(1,dict({}))[2]=5;
matrix.append([0]*ncols);
print(f(2));
random.shuffle(py_values);
export var splitlists=function(){var __accu0__=[];for(var i of range(0,len(mylist),n-1))__accu0__.append(mylist.__getslice__(i,i+n,1));return __accu0__}();
pd.DataFrame(dfN,__kwargtrans__({columns:wordlist})).fillna(0);
print(line);
py_next(function(){var __accu0__=[];for(var [key,value]of d.py_items())if(value==my_value)__accu0__.append(key);return py_iter(__accu0__)}());
var data=File.read(16*1024*1024);
plt.show();
time.sleep(sleep_time);
dict(function(){var __accu0__=[];for(var a of A)for(var b of B)for(var c of C)__accu0__.append(tuple([tuple([a,b,c]),1]));return py_iter(__accu0__)}());
pygame.display.set_mode(tuple([infoObject.current_w,infoObject.current_h]));
os.path.dirname(foo.__file__);
plt.contour(r*np.cos(t),r*np.sin(t),z);
nx.draw_networkx(G,pos);
plot(b.__getitem__([tuple([0,null,1]),0]),b.__getitem__([tuple([0,null,1]),1]));
label.pack();
len(gc.get_referrers(my_obj));
data.py_get(num,data[min(list(data.py_keys()),__kwargtrans__({key:function __lambda__(k){return abs(k-num)}}))]);
np.random.seed(0);
json.dumps(row);
print(line);
export var make_list=ArrayField(models.CharField(__kwargtrans__({max_length:200})),__kwargtrans__({blank:true}));
mod==__import__(module_name);
self.assertEqual(res,7);
file1.close();
export var subset=df2.columns.__getslice__(-k,null,1);
var A=(B==np.arange(M).__getitem__([tuple([0,null,1]),np.newaxis])).dot(C.T);
lst.attr.py_get(idx,default_value);
screen.fill(tuple([0,0,0]));
var df=df.merge(df.apply(calculate,__kwargtrans__({axis:1})),__kwargtrans__({left_index:true,right_index:true}));
[tuple([1,4]),tuple([6,8]),tuple([10,10])];
lbl6.grid(__kwargtrans__({row:0,column:0}));
np.empty(tuple([M,N,L]));
sorted(lst);
Route.objects.filter(__kwargtrans__({stops_forwards__contains:[285]}));
plt.show();
random.shuffle(random_order);
sess.run(train_op);
py_items.py_sort();
writer.writerow([test_data[0][1]]);
signal.signal(signal.SIGINT,self.old_handler);
dir(settings);
python-V;
print(etree.tostring(root,__kwargtrans__({pretty_print:true})));
pprint.pprint(list(cursor));
QtGui.QWidget.__init__(self,parent);
df.stack().dropna().reset_index(__kwargtrans__({drop:true}));
pygame.display.list_modes();
list(chain(repeat(0,a.count(0)),compress(a,a)));
file_date_tuple_list.py_sort(__kwargtrans__({key:function __lambda__(x){return x[1]},reverse:true}));
plt.gcf().canvas.draw();
sum(totals.py_values());
var data=json.loads(result.text,__kwargtrans__({object_pairs_hook:OrderedDict}));
myscript.py|xclip;
np.random.seed(0);
pg.display.flip();
(function(){var __accu0__=[];for(var x of l)__accu0__.append(function(){var __accu1__=[];for(var _=0;_<x;_++)__accu1__.append(py_next(b));return __accu1__}());return __accu0__})();
webbrowser.open(url);
simplejson.JSONEncoder.py_default(self,obj);
export var start_date=local_tz.localize(start_date);
dict.__init__(self,...args,__kwargtrans__(kwargs));
sum(function(){var __accu0__=[];for(var n of list(index2count.py_values()))__accu0__.append(Math.floor(n*(n-1)/2));return py_iter(__accu0__)}());
print(match.group(1));
d.save();
ax.legend();
csv.writer(f,__kwargtrans__({quoting:csv.QUOTE_NONE})).writerows(cursor);
self.driver.implicitly_wait(20);
writer.writerows(data);
export var all_words=set(gen_words(txt));
df.join(s);
s[s==12].index;
all(function(){var __accu0__=[];for(var [x,y]of itertools.combinations(objs,2))__accu0__.append(x!=y);return py_iter(__accu0__)}());
test_f();
ax.patch.set_visible(false);
fh.write(h.hexdigest());
ax[1].plot(np.arange(2)/p,__kwargtrans__({c:c}));
time.sleep(1);
writer.writerows(zip_list);
sys.path;
bar.py_sort(__kwargtrans__({reverse:true}));
app.mainloop();
a.reshape(-1,R).mean(__kwargtrans__({axis:1}));
np.where(np.logical_and(a>=6,a<=10));
var pool=Pool(__kwargtrans__({processes:5}));
new set([new set([my_json|safe])]);
root.grid_rowconfigure(0,__kwargtrans__({weight:1}));
writer.writerow(reorderfunc(row));
export var allsum=mask.sum();
print(my_file.read());
fib(n-1)+fib(n-2);
platform.architecture();
min(x,__kwargtrans__({key:function __lambda__(t){return tuple([t[1],-t[0]])}}));
ax.plot(list(range(10)));
(function(){var __accu0__=[];for(var x of A)if(!__in__(x,subset_of_A))__accu0__.append(x);return __accu0__})();
subprocess.Popen(cmd);
greeter.greet();
sys.maxsize+1;
self._handle.close();
var __left0__=process.communicate();var output=__left0__[0];var err=__left0__[1];
base64.b64encode(chr(255));
list(ordered_dict.py_keys())[2];
np.diag(A.dot(B.T));
pylab.show();
py_keys.add(parts[1]);
myreportscode.py;
plt.xlim(0,4);
main();
buff.seek(0);
ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy());
time.sleep(.5);
any(function(){var __accu0__=[];for(var c of letter)__accu0__.append(first==c);return py_iter(__accu0__)}());
vectors.T/norms.reshape(-1,1);
wx.Frame.__init__(self,wx.GetApp().TopWindow,__kwargtrans__({title:self.title}));
sorted(list(some_dict.py_items()),__kwargtrans__({key:operator.itemgetter(1),reverse:true})).__getslice__(0,10,1);
tuple([array([[11.4,4],[12,5]])]);
self.text.focus();
(function(){var __accu0__=[];for(var e of Color)__accu0__.append(e.value);return __accu0__})();
var __left0__=os.path.py_split(path_and_file);var path=__left0__[0];var file=__left0__[1];
writer.writerow(row);
export var cb=plt.colorbar(sc,__kwargtrans__({ax:ax1,aspect:10}));
f.write(file_str);
copy.copy();
load_documentation();
new set([new set([toctree(__kwargtrans__({collapse:false}))])]);
g.__setslice__(0,null,null,function(){var __accu0__=[];for(var elem of g)__accu0__.append(elem.__getslice__(0,12,1));return py_iter(__accu0__)}());
print(tuple([i,p]));
var df=pd.DataFrame(function(){var __accu0__=[];for(var i=0;i<100;i++)__accu0__.append([i,list(range(1E3))]);return dict(__accu0__)}());
var fig=plt.figure();
sum(function(){var __accu0__=[];for(var i of set(list_of_purple_items))if(!__in__(i,main_set))__accu0__.append(1);return py_iter(__accu0__)}());
var users=User.objects.filter(__kwargtrans__({event__in:events}));
int(utc_mktime(dt.timetuple()));
export var scroll=Gtk.ScrolledWindow(__kwargtrans__({hexpand:true,vexpand:true}));
f2.close();
datetime.timedelta(2.5);
var ax=fig.add_subplot(1,1,1);
norm.cdf(norm.ppf(.95));
!float(your_number).is_integer();
arr.append([0,0,0,0]);
df.as_matrix(__kwargtrans__({columns:df.columns.__getslice__(1,null,1)}));
self.py_setdefault(key,self.default_factory(key));
array([[1,1],[2,2]]);
var common_keys=function(){var __accu0__=[];for(var k of dict1)if(__in__(k,dict2))__accu0__.append(k);return __accu0__}();
l.last_index();
export var rule_list=function(){var __accu0__=[];for(var cls of Rule.__subclasses__())__accu0__.append(cls());return __accu0__}();
collections.Counter(dictionary).most_common(2);
tuple([[0,0,0,1,1,1,0,0]]);
set(function(){var __accu0__=[];for(var element of xx)__accu0__.append(tuple(element));return py_iter(__accu0__)}());
f.close();
time.sleep(2);
ax1.plot(list(range(2)),list(range(2)),__kwargtrans__({linewidth:2}));
c[tuple(list1[0])];
tornado.ioloop.IOLoop.instance().start();
all(function(){var __accu0__=[];for(var [item1,item2]of zip(list1,list2))__accu0__.append(item1==item2);return py_iter(__accu0__)}());
sorted_rows[i[0]].append(tuple([i[1],i[2]]));
export var sc=plt.scatter([1,1],[data.min(),data.max()]);
Response(serializer.data,__kwargtrans__({status:status.HTTP_200_OK}));
AC_SUBST([PYTHON_CFLAGS]);
some_list.append(some_list);
imagedata.put();
a[~b]=np.nan;
conn.commit();
var pool=Pool(__kwargtrans__({processes:1}));
var p=numpy.vstack([p,q]);
transaction.commit();
np.random.seed(seed);
ax.xaxis.set_major_formatter(hfmt);
deletemylist.__getslice__(0,null,1);
pyplot.show();
p.start();
os.path.join(expanded,filename);
var opener=urllib.request.build_opener(MyHTTPHandler);
win.set_app_paintable(true);
app.exec_();
IOLoop.instance().start();
var l=function(){var __accu0__=[];for(var [x,y]of sorted(zip(function(){var __accu1__=[];for(var i of l)__accu1__.append(key(i));return __accu1__}(),l)))__accu0__.append(y);return __accu0__}();
export var all_my_models=MyModel.objects.all();
export var sm=plt.cm.ScalarMappable(__kwargtrans__({cmap:my_cmap}));
fsock.close();
QtGui.QWidget.__init__(self,parent);
plt.draw();
(function(){var __accu0__=[];for(var [x,y]of zip_longest(P,Q,__kwargtrans__({fillvalue:0})))__accu0__.append(x+y);return __accu0__})();
MPI_Finalize();
s.close();
print(x.apply(function __lambda__(a){return list(function(){var __accu0__=[];for(var v of a)if(v==v)__accu0__.append(v);return __accu0__}())}));
ax.add_patch(rect);
array([[0],[0],[0],[1],[1],[0]]);
sorted(trial_list,__kwargtrans__({key:trial_dict.py_get}));
inspect.getouterframes(inspect.currentframe())[1].__getslice__(1,4,1)[2];
set(a_list).intersection(a_string.py_split());
cv2.waitKey(0);
app.run(__kwargtrans__({debug:true}));
sys.stdout.flush();
print(soup.prettify());
object.__getattribute__(self,py_name);
pfile.close();
zin.close();
x==y&&py_typeof(x)==py_typeof(y);
print(hashlib.sha1(json.dumps(b,__kwargtrans__({sort_keys:true}))).hexdigest());
print(line);
(function(){var __accu0__=[];for(var x of a)__accu0__.append(x==1?4:x);return __accu0__})();
sys.stdout.flush();
list(chain(...zip_longest(d,e.__getslice__(0,null,-1))));
colorbar();
p.terminate();
new_list;
float.hex(8.25);
layout.addWidget(self.button);
np.hstack([np.repeat(a,len(a),0),np.tile(b,tuple([len(b),1]))]);
server.quit();
a.py_sort();
json.dumps(dict);
self.layout.addWidget(self.button);
a[slice(...b)];
reactor.run();
s.__getslice__(start,end,1);
sys.exit(app.exec_());
var rank=models.IntegerField(__kwargtrans__({py_default:0}));
xax.setTicks(ticks);
export var indata=fp.read();
pd.stats.moments.rolling_std(timeseries,periods,__kwargtrans__({ddof:0}));
sorted(list(a_dict.py_items()),__kwargtrans__({key:function __lambda__(k_v1_v2){return k_v1_v2[1][1]}}));
df.T.apply(function __lambda__(x){return x.nunique()},__kwargtrans__({axis:1}));
print(cls.__name__);
print(request.LANGUAGE_CODE);
self.cls.instances[key];
var q=Queue.Queue();
self.save_m2m();
self.show();
(function(){var __accu0__=[];for(var i=0;i<N;i++)__accu0__.append(random.random());return __accu0__})();
requests.py_get(url,__kwargtrans__({cookies:load_cookies(filename)}));
var id=db.Column(db.Integer,__kwargtrans__({primary_key:true}));
(function(){var __accu0__=[];for(var [i,j]of zip(a,b))__accu0__.append(tuple([i[0]+j[0],i[1]+j[1]]));return __accu0__})();
(function(){var __accu0__=[];for(var i of L1)if(__in__(i,L2))__accu0__.append(i);return __accu0__})();
admin.site.register(User,UserAdmin);
os.path.basename(fullpath);
main();
a.__getslice__(1,4,1).py_sort();
np.where(detected_minima);
sorted(s1,__kwargtrans__({key:trailing_digits}));
ssc.awaitTermination();
var ax=fig.add_subplot(111);
ax.w_xaxis.set_major_formatter(ticker.FuncFormatter(format_date));
myFunction();
var response=subprocess.check_output(cmd,__kwargtrans__({shell:true,stderr:subprocess.STDOUT}));
var text=text.translate(replace_punctuation);
print(now-dateutil.relativedelta.relativedelta(__kwargtrans__({months:1})));
main();
root.py_clear();
Article.objects.all().delete();
sqlContext.createDataFrame(rdd);
export var screen_width=root.winfo_screenwidth();
export var dupl=np.where(mask)[1];
self.lc.Bind(wx.EVT_MOTION,self.OnMouseMotion);
var a=function(){var __accu0__=[];for(var x of[[0]*cols]*rows)__accu0__.append(x.__getslice__(0,null,1));return __accu0__}();
(function(){var __accu0__=[];for(var x of l)if(f(x))__accu0__.append(f(x));return __accu0__})();
var result=child.communicate()[0];
test.myfun(f);
var args=parser.parse_args();
mylogger.setLevel(logging.INFO);
foo.mymethod(1,2);
df.loc[df.loc.__getitem__([tuple([0,null,1]),columns]).eq(value).all(__kwargtrans__({axis:1}))];
data.groupby(data.date.dt.year);
dir();
df.groupby([times.hour,times.minute]).value_col.sum();
var df=DataFrame(np.random.randn(1E3,2));
plt.show();
app.run();
(function(){var __accu0__=[];for(var py_items of product(...flat))__accu0__.append(dict(py_items));return __accu0__})();
print(sum(function(){var __accu0__=[];for(var _ of f)__accu0__.append(1);return py_iter(__accu0__)}()));
var r=np.hypot(x,y);
print(cts.minute==0);
reactor.run();
var mydict=function(){var __accu0__=[];for(var rows of reader)__accu0__.append([rows[0],rows[1]]);return dict(__accu0__)}();
pprint(d,__kwargtrans__({width:40}));
export var binary_string=binascii.unhexlify(hex_string);
dict(a);
var d=d.py_replace(__kwargtrans__({tzinfo:tz}));
a.sum(__kwargtrans__({axis:0}));
proc.kill();
var p=Process(__kwargtrans__({target:f,args:tuple([arr])}));
main();
plt.show();
random.uniform(0,numpy.nextafter(0,1));
(function(){var __accu0__=[];for(var e of lelist)if(__in__(e,lestring))__accu0__.append(e);return __accu0__})();
ax.grid(true);
plt.show();
print(iorf.fup(2));
x.py_pop();
random.shuffle(idx);
ax0.yaxis.set_ticks(np.arange(7E4,8E4,2500));
var response=requests.post(url,__kwargtrans__({files:files}));
plt.show();
source.close();
curses.endwin();
mpmath.besselk(0,1714);
int(1/2);
var __left0__=tuple([a,b]);self.a=__left0__[0];self.b=__left0__[1];
var py_name=models.CharField(__kwargtrans__({max_length:64}));
deleteglobals()[py_name];
plt.figure();
df.subtract(df2,__kwargtrans__({fill_value:0})).reindex_like(df).astype(int);
(function(){var __accu0__=[];for(var x of lst)if(__mod__(x,2)==0)__accu0__.append(x);return __accu0__})();
print(z[k.astype(int)]);
bigfloat.exp(5E3,bigfloat.precision(100));
con.commit();
[tuple([]),tuple([0]),tuple([1]),tuple([2]),tuple([0,1]),tuple([0,2]),tuple([1,2]),tuple([0,1,2])];
var __left0__=tuple([array.__getitem__([0,tuple([0,null,1])]),array.__getitem__([1,tuple([0,null,1])])]);export var xarr=__left0__[0];export var yarr=__left0__[1];
ax.add_patch(polygon);
plt.imshow(np.array(img.tolist()));
sys.exit(start_ipython());
time.sleep(timeout);
set.union(...lis);
__init__.py;
sorted(a,__kwargtrans__({key:a.count,reverse:true}));
driver.add_cookie(cookie);
new set([new set([count])]);
sys.exit();
itertools.chain(...itertools.zip_longest(...iters));
(function(){var __accu0__=[];for(var [i,j]of mylist)__accu0__.append(i);return __accu0__})();
export var strata=np.array(strata);
self.show();
var ax=fig.add_subplot(111);
mylist.py_sort(__kwargtrans__({key:sort_func}));
client.close();
self.__dict__[key];
export var ax1=fig.add_subplot(111);
thread.start();
requests.post(url,__kwargtrans__({params:params,json:data}));
d[k].append(v);
os.chdir(os.path.dirname("./P2JSnippets.py"));
grid.cbar_axes[1].colorbar(im1);
main();
main();
root.withdraw();
plt.plot(y);
np.py_split(indices,np.where(np.diff(args))[0]+1);
tree.xpath(xpathselector);
Bar.objects.filter(__kwargtrans__({pk:foo.id})).py_update(__kwargtrans__({a:bar.id}));
simplejson.loads(_);
q.queue.py_clear();
var msg=email.message_from_string(msgtxt);
new set([new set([a.some_field])]);
gc.collect();
f.write(g);
(function(){var __accu0__=[];for(var tup of mylist)__accu0__.append(tup[0]);return __accu0__})();
var df=pandas.read_csv(filename,__kwargtrans__({skiprows:skip}));
session2.commit();
app.mainloop();
var l=nx.topological_sort(g);
np.insert(a,1,np.array(tuple([1,1])),0);
len(zdumps(z));
dir(MyClass);
list(dict(function(){var __accu0__=[];for(var i of l)__accu0__.append(tuple([len(i),i]));return py_iter(__accu0__)}()).py_values());
calendar.day_name[1];
time.sleep(.1);
main();
HttpResponseRedirect(user.redirect_to());
df.dictionary.apply(str2dict).apply(pd.Series);
f.save();
(function(){var __accu0__=[];for(var woman of list(graph.py_keys()))if(!__in__(woman,list(match.py_keys())))__accu0__.append(woman);return __accu0__})();
stream.close();
time.sleep(.5);
var g=myfunct();
var text=str(combobox1.currentText());
timeout.cancel();
plt.gcf().autofmt_xdate();
a.__getitem__([[0,1],[1,1],[2,2]]);
var a=[[]]*2;

plt.show();
outfile.close();
time.sleep(.02);
w.start();
myfile.write(template.format(__kwargtrans__(context)));
export var sec_since_epoch=(date_obj.date()-date(1970,1,1)).total_seconds();
self.foo.wait();
var arr=np.empty(tuple([N,M]));
print(list(mydict.py_keys())[list(mydict.py_values()).index(16)]);
foo(__kwargtrans__({a:1,b:2}));
var py_items=function(){var __accu0__=[];for(var item of objects)__accu0__.append(item.time);return __accu0__}();
(function(){var __accu0__=[];for(var [k,v]of list(d.py_items()))if(k.startswith(s))__accu0__.append([k,v]);return dict(__accu0__)})();
words.add(line.strip());
ax.add_line(Line2D([-50,0,50],[-50,0,0],__kwargtrans__({linewidth:80})));
print(i,repr(binify(i)));
screen.blit(picture,rect);
server.sendmail(FROM,TO,message);
entryFrame.grid(__kwargtrans__({row:0,column:1}));
[l.__getslice__(0,1,1),l.__getslice__(1,null,1)];
curses.endwin();
output.close();
time.sleep(1);
range(-20,0,-1);
var tree=etree.HTML(result.read(),etree.HTMLParser());
window.show_all();
plt.plot(x,y);
plt.clf();
X.argmin(__kwargtrans__({axis:1}));
nf.write(str(random.randint(0,1E3)));
isinstance(x,collections.Iterable);
reduce(function __lambda__(d,key){return d[key]},path,aDict).py_update(aSecondDict);
plt.show();
locale.currency(1.8851898218E8,__kwargtrans__({grouping:true}));
os.unlink(self.dest);
func(...args,__kwargtrans__(kwargs));
int(round(2606.89579999999,2)*100);
x.append(1);
x.astype(int);
inspect.getmembers(MyClass,function __lambda__(a){return!inspect.isroutine(a)});

output.close();
lpr.stdin.write(your_data_here);
plt.show();
print(function(){var __accu0__=[];for(var key of a)if(!__in__(key,py_keys))__accu0__.append([key,a[key]]);return dict(__accu0__)}());
export var invite_reason=models.CharField(__kwargtrans__({max_length:64}));
sys.exit(app.exec_());
ModelA.objects.filter(Q(__kwargtrans__({instance_of:ModelB})));
profile.save();
map(dict.fromkeys,l);
call_with_dict(some_func,my_dict);
self.SetSize(tuple([self.Size[0],self.figurecanvas.Size[1]]));
(function(){var __accu0__=[];for(var c of self.__table__.columns)__accu0__.append([c.py_name,getattr(self,c.py_name)]);return dict(__accu0__)})();
var out=np.vstack(tuple([lats,lons,vals]));
ax.axis([0,10,0,10]);
s[0].astype(int);
json.dumps(recursive_asdict(data));
root.mainloop();
f();
tuple(function(){var __accu0__=[];for(var x of G)__accu0__.append(x[0]);return __accu0__}());
print(requests.post(target_url,__kwargtrans__({data:xml,headers:headers})).text);
(a*67108864+b)/9007199254740992;
RichIPythonWidget.__init__(self,...args,__kwargtrans__(kw));
(a+a.__getslice__(0,0,-1))*len(a).__getslice__(0,null,len(a)).__getslice__(0,len(a),1);
print(document.text_content());
self.newargument=myarg;
var first_element=myList[i[0]];
export var title=models.CharField(__kwargtrans__({max_length:60}));
f.flush();
(function(){var __accu0__=[];for(var col=0;col<width;col++)__accu0__.append(function(){var __accu1__=[];for(var row=0;row<height;row++)__accu1__.append(m[row][col]);return __accu1__}());return __accu0__})();
series.dt.date.astype(str).to_json();
plt.colorbar();
mask.__setslice__(0,null,4,0);
a.append(2);
var x=function(){var __accu0__=[];for(var [k,v]of spec1.py_items())if(__in__(k,spec2)&&spec2[k]==v)__accu0__.append([k,v]);return dict(__accu0__)}();
(function(){var __accu0__=[];for(var tag of tags)for(var entry of entries)if(__in__(tag,entry))__accu0__.append(entry);return __accu0__})();
p.Start();
plt.subplot(121);
urllib.request.install_opener(opener);
screen.blit(surf1,tuple([100,100,100,100]));
print(urlparse.parse_qs(qs));
combo.pack();
var path=path.to.module.__file__;
var a=numpy.array(function(){var __accu0__=[];for(var _=0;_<4;_++)__accu0__.append(Register());return __accu0__}());
sorted(list(mydict.py_items()),__kwargtrans__({key:itemgetter(1)}));
[0][1][0];
var bar=dict(foo);
reverse(text.__getslice__(1,null,1))+text[0];
var DELTAFETCH_ENABLED=true;
Py_Finalize();
ws.cell(__kwargtrans__({row:2,column:2})).value=2;
df.rename(__kwargtrans__({columns:function __lambda__(x){return py_typeof(x)==float?int(x):x}}));
sys.exit(app.exec_());
export var timediff=datetime.datetime.now()-self.pub_date;
export var rgb_uint8=(np.dstack(tuple([r,g,b]))*255.999).astype(np.uint8);
link.click();
entry.pack();
np.allclose(C0,C1);
sys.stdout.flush();
plt.plot(x,density(x));
f.write(bin_array);
ax.yaxis.set_major_formatter(mpl.ticker.ScalarFormatter());
plt.hist(data,__kwargtrans__({bins:bins,alpha:.5}));
ax.get_xaxis().set_minor_locator(mpl.ticker.AutoMinorLocator());
urlfetch.set_default_fetch_deadline(60);
ax2.get_position();
any(function(){var __accu0__=[];for(var i of fruits)__accu0__.append(__in__(i,fruit_dict2));return __accu0__}());
os.chdir(path_dir);
export var derefrenced_spams=prefetch_refprops(Spams,models.Spam.eggs);
var dt=datetime.fromtimestamp(mktime(struct));
plt.show();
var a=sps.csr_matrix(tuple([a.data,a.indices,a.indptr]),__kwargtrans__({shape:tuple([1E4,10020])}));
tk.Tk.__init__(self);
set(itertools.combinations(S,m));
self.grid_columnconfigure(1,__kwargtrans__({weight:1}));
xs.intersection(y);
my_file.seek(0,0);
time.sleep(remain);
var value=cache.py_get(key)||cache.py_setdefault(cache,func(key));
(function(){var __accu0__=[];for(var k of set(mylist))__accu0__.append([k,mylist.count(k)]);return dict(__accu0__)})();
obj.foo42();
proc.wait();
var __left0__=function(){var __accu0__=[];for(var n of l)__accu0__.append(function __lambda__(n){if(typeof n=="undefined"||n!=null&&n.hasOwnProperty("__kwargtrans__"))var n=n;return n*n});return __accu0__}();var a=__left0__[0];var b=__left0__[1];var c=__left0__[2];
var __left0__=tuple([temp[0][0],temp[0][-1],temp[1][0],temp[1][-1]]);export var min_x=__left0__[0];export var max_x=__left0__[1];export var min_y=__left0__[2];export var max_y=__left0__[3];
x.__add__(x);
np.frombuffer(ftdi.read(RXcount),__kwargtrans__({dtype:np.uint8}));
self.ax=self.fig.add_subplot(111);
plt.close();
setattr(someobject,key,value);
plt.axvline(__kwargtrans__({x:xc}));
zip(...args);
frame.py_values[0][0];
itertools.cycle(list(range(2,10)));
conn.close();
time.sleep(1);
print(function(){var __accu0__=[];for(var v of list(d.py_values()))__accu0__.append([v[0],v.__getslice__(1,null,1)]);return dict(__accu0__)}());
var indices=np.where(a==a.max());
var d=np.diag(a.__getitem__([tuple([0,null,1]),0]));
time.sleep(1);
plt.colorbar();
s.reset_index().groupby(s.index.names).first();
ax.add_collection(coll);
self.__class__.__name__;
(function(){var __accu0__=[];for(var [i,v]of enumerate(list1))__accu0__.append(__mod__(i,2)!=0?v+1:v);return __accu0__})();
var __left0__=list(d.py_items())[0];var k=__left0__[0];var v=__left0__[1];
uuid.UUID(__kwargtrans__({int:rd.getrandbits(128)}));
deletethe_dict[key];
df.groupby(__kwargtrans__({by:[df.index.year,df.index.month]})).sum().transpose();
__init__.py;
(function(){var __accu0__=[];for(var x of lst)if([!__in__(tuple([x[A],x[C]]),seen),seen.add(tuple([x[A],x[C]]))][0])__accu0__.append(x);return __accu0__})();
A.__getitem__([2,2,tuple([0,null,1]),tuple([0,null,1])]);
cvuint8.dtype;
self.__dict__.py_update(s);
admin.site.register(TwitterUser,TwitterUserAdmin);
new_list;
do_something_with_frame(frame);
tuple([[0,0,0,1,0,1,0,0]]);
export var my_type=field.get_internal_type();
var data=json.loads(contactFile.read());
ciao.ciao();
server.starttls();
pprint(sorted(flatten(THIS)));
var r=Math.pow(size,1/(n-1));
signal.alarm(0);
numpy.apply_along_axis(function __lambda__(row){return numpy.linalg.norm(row,__kwargtrans__({ord:1}))},1,a);
numpy.where(numpy.all(a_view==may_b,__kwargtrans__({axis:1})))[0];
(function(){var __accu0__=[];for(var x of a)if(!__in__(x,b))__accu0__.append(x);return __accu0__})();
py_next(function(){var __accu0__=[];for(var x of lst)if(matchCondition(x))__accu0__.append(x);return py_iter(__accu0__)}());
queryset.filter(__kwargtrans__({id__in:articles}));
var modernthingy=datetime.datetime.fromtimestamp(zopethingy.timeTime());
session.query(Page.url).filter(tuple_(Page.url_crc,Page.url).in_(py_keys));
f.write(str(x));
solve([5,10],[1,4]);
export var main_sizer=wx.BoxSizer(wx.VERTICAL);
list(chain(...a));
pd.DataFrame(x.T).T.drop_duplicates(__kwargtrans__({keep:false})).as_matrix();
var lines=lines.__getslice__(0,-1,1);
transaction.rollback();
lst.py_sort(__kwargtrans__({key:function __lambda__(c){return POS[c]}}));
export var fin=cv2.warpPerspective(img,h,tuple([back.shape[1],back.shape[0]]));
ax.xaxis.set_major_locator(locator);
var C=np.dot(A,B);
ip_list;
time.sleep(1);
ax.w_xaxis.set_major_locator(ticker.FixedLocator(some_dates));
root.mainloop();
(function(){var __accu0__=[];for(var x of zip(...lis))__accu0__.append(sum(x));return __accu0__})();
time.sleep(1);
var result=json.load(urllib.request.urlopen(url));
var py_name=models.CharField(__kwargtrans__({max_length:100}));
-r72-g595x842;
plt.figure();
pd.options.display.max_colwidth;
ax.set_rmax(1);
[1][1][0];
np.random.seed(5);
var result=function(){var __accu0__=[];for(var [k,v]of list(summed.py_items()))__accu0__.append([k,v/len(list_of_dicts)]);return dict(__accu0__)}();
py_next(py_iter(q));
libxml2-devel;
file_2.write(file_1.read());
(function(){var __accu0__=[];for(var y of z)if(sum(y)>10)for(var x of y)if(x<10)__accu0__.append(x);return __accu0__})();
locale.setlocale(locale.LC_ALL,saved);
tuple(itertools.chain.from_iterable(t));
(function(){var __accu0__=[];for(var i of data)__accu0__.append(hex(i));return __accu0__})();
ax.plot_surface(x,y,z,__kwargtrans__({rstride:4,cstride:4,facecolors:bm}));
plt.show();
modules[module]=sys.modules[module];
sys.getsizeof(string_drawer);
var doc=yaml.load(f);
plt.subplot(121);
var df=df[df.one>0|df.two>0|df.three>0&df.four<1];
max(im.getcolors(im.size[0]*im.size[1]));
root.mainloop();
pd.Series(a,a._fields);
var l=function(){var __accu0__=[];for(var [_,g]of groups)__accu0__.append(max(g,__kwargtrans__({key:function __lambda__(x){return x[1]}}))[0]);return __accu0__}();
true;
__init__.py;
chain.delay();
x.reshape(tuple([x.shape[0],-1])).mean(__kwargtrans__({axis:1}));
list(dd.py_values());
ax.plot(x);
logging.basicConfig(__kwargtrans__({filename:settings.log_file,level:logging.DEBUG}));
var app=application(urls,__all__);
deletex.__getslice__(0,N,1);
fh.seek(0);
etree.fromstring(goodxml);
var newdict=function(){var __accu0__=[];for(var x=0;x<10;x++)__accu0__.append([x,[]]);return dict(__accu0__)}();
var gray=cv2.cvtColor(img,cv2.COLOR_BGR2GRAY);
app.run(__kwargtrans__({debug:true}));
xl.Quit();
urllib.request.install_opener(opener);
a.func(__kwargtrans__({b:b,c:c}));
window.show();
print(Outputstring);
self.y+=STEP;
np.random.seed(1);
(function(){var __accu0__=[];for(var i of x)__accu0__.append([i,[]]);return dict(__accu0__)})();
var diag=function(){var __accu0__=[];for(var [i,row]of enumerate(mat))__accu0__.append(row[-i-1]);return __accu0__}();
os.makedirs(savedir);
var maxLPFt=max(lpfData,__kwargtrans__({key:operator.itemgetter(1)}));
var data=np.random.rand(10,15,5);
py_typeof(f).__str__!==object.__str__;
-avgDists.argsort().__getslice__(0,n,1);
(function __lambda__(x,i){if(typeof i=="undefined"||i!=null&&i.hasOwnProperty("__kwargtrans__"))var i=i;return __mod__(x,i)==0});
~pd.isnull(df[list_of_cols]).all(__kwargtrans__({axis:1}));
text.collocations(__kwargtrans__({num:20}));
plt.show();
s+=timedelta(__kwargtrans__({minutes:minutes,seconds:seconds*100}));
L.append([]);
tqdm_notebook().pandas(...args,__kwargtrans__(kwargs));
np.array(function(){var __accu0__=[];for(var line of data)__accu0__.append(function(){var __accu1__=[];for(var i of line.py_split())__accu1__.append(int(i));return __accu1__}());return __accu0__}());
ax.py_clear();
basemodule.dontoverride();
pdb.set_trace();
(function(){var __accu0__=[];for(var x of itertools.combinations(main1,len(main2)))__accu0__.append(zip(x,main2));return __accu0__})();
my_failing_task();
export var unixtime=time.mktime(d.timetuple());
ax1.imshow(source,__kwargtrans__({cmap:plt.cm.gray}));
__in__(key,self.__dict__);
pool.close();
var complete_path=os.path.join(root_path,sanitised_filename);
tuple([py_typeof(plain_string),py_typeof(unicode_string)]);
self.rect.set_xy(tuple([self.x0,self.y0]));
(function(){var __accu0__=[];for(var x of l)__accu0__.append(tuple([x[0],len(x[1]),x[1][0][0]]));return __accu0__})();
browser.close();
m.dot(m.T);
[0][0][1];
Decimal(math.factorial(171));
Base.metadata.create_all();
fliplr(matrix);
tornado.ioloop.IOLoop.instance().start();
matrix[0][1];
app.run();
export var toppings=models.ManyToManyField(Topping);
berlin.delete();
ax.plot(xp,yp,__kwargtrans__({zs:zp}));
UserProfile.objects.create(__kwargtrans__({user:instance}));
dict(function(){var __accu0__=[];for(var c of set(string))__accu0__.append(tuple([c,string.count(c)]));return py_iter(__accu0__)}());
plt.imshow(data,__kwargtrans__({vmin:-10,vmax:10}));
pd.concat([price,vol],__kwargtrans__({axis:1}));
all(function(){var __accu0__=[];for(var n=1;n<len(xdiff);n++)__accu0__.append(xdiff[0]==xdiff[n]);return __accu0__}());
print(len(japanese));
master.mainloop();
s.__getslice__(0,null,-1).py_replace(old.__getslice__(0,null,-1),py_new.__getslice__(0,null,-1),count).__getslice__(0,null,-1);
print(im.size);
plusone.append(int(value));
DialApp().run();
var a_b=function(){var __accu0__=[];for(var e of a)if(!__in__(e,b))__accu0__.append(e);return __accu0__}();
print(sys.exc_info()[0]);
var extension=os.path.splitext(filename)[1];
df.rename(columns,__kwargtrans__({inplace:true}));
l.__setslice__(1,null,2,function(){var __accu0__=[];for(var x of l.__getslice__(1,null,2))__accu0__.append(x*2);return __accu0__}());
plt.show();
ts.index.freq;
np.nonzero(np.all(lower_bound<m2D&higher_bound>m2D,__kwargtrans__({axis:1})))[0][0];
file.seek(0);
self.data.columnconfigure(0,__kwargtrans__({weight:1}));
var d=ordereddict(dic,__kwargtrans__({relax:true}));
plt.plot(x,y);
p.start();
(function(){var __accu0__=[];for(var t of tuples)__accu0__.append(len(t));return __accu0__})();
file.write(line);
self.window.unfullscreen();
df1.to_sparse().info();
self.capture=cv.CaptureFromCAM(0);
print(zed());
layout.setSpacing(10);
func(parameters[0],parameters[1],parameters[2]);
sheet1.write(i,0,n,fmt);
dic[py_keys[-1]]=value;
var cbar=fig.colorbar(im);
count.most_common().__getslice__(0,10,1);
plt.subplots_adjust(__kwargtrans__({bottom:.2}));
random.shuffle(l);
var conn=pyodbc.connect(odbc_conn_str);
heapq.nsmallest(1,function(){var __accu0__=[];for(var [i,k]of enumerate(s))__accu0__.append(tuple([k,i]));return py_iter(__accu0__)}());
models.py;
var answer=function(){var __accu0__=[];for(var v of itertools.product(...ranges))if(sum(v)==100)__accu0__.append(v);return __accu0__}();
var s=c.connect();
var fig=plt.figure();
(function(){var __accu0__=[];for(var [i,v]of enumerate(list1))if(v>=1&&list2[i]==0)__accu0__.append(i);return __accu0__})();
print(function(){var __accu0__=[];for(var num of y)__accu0__.append(num>0?num:z.py_pop(0));return __accu0__}());
print(function(){var __accu0__=[];for(var i of results)__accu0__.append(i);return __accu0__}());
print(np.argmax(counts));
data.__getslice__(0,5,1);
export var index1=np.array([[0,0],[1,1]]);
print(rsp.content);
(function(){var __accu0__=[];for(var x of l2)__accu0__.append(id(x));return __accu0__})();
sys.modules[module_name];
moduleA.py;
ScrolledText(root).pack();
var content=f.read();
pygame.display.flip();
len(max(sum(tableData,[]),__kwargtrans__({key:len})));
list_of_lists;
counter.save();
f.close();
sys.exit();
my_list.remove(new_dict);
var complete_path=os.path.join(root_path,sanitised_path,sanitised_filename);
var b=copy.deepcopy(a);
self.queue.py_pop();
list(df.T.to_dict().py_values());
show();
window.show_all();
print(line);
root.mainloop();
zip(...function(){var __accu0__=[];for(var i=0;i<n;i++)__accu0__.append(x.__getslice__(i,null,1));return py_iter(__accu0__)}());
flask.jsonify(__kwargtrans__(course_list));
[1]*6;
ax.set_xticklabels(final_labels);
print(list(map(int,chain.from_iterable(function(){var __accu0__=[];for(var line of f)__accu0__.append(line.py_split());return py_iter(__accu0__)}()))));
var json_data=json.dumps(data);
x.reshape(x.shape.__getslice__(0,-2,1)+tuple([-1])).shape;
response.render();
!any(function(){var __accu0__=[];for(var sublist of maze)for(var el of sublist)__accu0__.append(el==0);return py_iter(__accu0__)}());
button.pack();
new set([new set([message|safe])]);
min(s,__kwargtrans__({key:function __lambda__(c){return tuple([-s.count(c),s.index(c)])}}));
false;
libfoo.dylib;
export var SCRIPT_DIR=os.path.abspath(os.path.dirname("./P2JSnippets.py"));
t.grid(__kwargtrans__({sticky:tuple([N,E,S,W])}));
ax.set_xticklabels(label_text);
os.remove(os.path.join(dir,file));
ax.imshow(im,...args,__kwargtrans__(kwargs));
fp.close();
random.shuffle(temp);
p.stdin.write(cmd);
var data=urllib.request.urlopen(req).read();
[];
export var category=models.ForeignKey(Category);
ofimg[0].getHomography();
main.show();
t.start();
self.write(response.content);
txt_frm.grid_columnconfigure(0,__kwargtrans__({weight:1}));
df.sort_index(__kwargtrans__({inplace:true}));
var answer=msvcrt.getch();
var __left0__=zip(...xy);var x=__left0__[0];var y=__left0__[1];
soup.contents[0];
httpd.serve_forever();
n.show();
print(instance.py_name);
figure.canvas.draw();
httpd.serve_forever();
Thread.__init__(self);
p.stdin.flush();
var json_object=json.loads(json_raw[0]);
df.append(s);
sys.exit();
writer.writerow([date,value]);
ax.set_axis_off();
threading.Thread(__kwargtrans__({target:run_all})).start();
__mod__(2-N,7);
export var PYTHONUNBUFFERED=TRUE;
df.A.apply(pd.value_counts).fillna(0).astype(int);
print(sys.exc_info());
var d=[a,b,c];
var __left0__=tuple([int(num1),int(num2)]);export var num1=__left0__[0];export var num2=__left0__[1];
export var rmfield=function __lambda__(a){var f=tuple([].slice.apply(arguments).slice(1));return a[function(){var __accu0__=[];for(var n of a.dtype.names)if(!__in__(n,f))__accu0__.append(n);return __accu0__}()]};
self.__dict__.py_update(adict);
np.allclose(D0,D2);
df_b.combine_first(df_a);
export var tmp=proc.stdout.read();
print(sum(function(){var __accu0__=[];for(var i of myList)__accu0__.append(i[list(i.py_keys())[0]][1]);return __accu0__}()));
var fig=plt.figure();
(function(){var __accu0__=[];for(var item of full_list)if(!(omit&set(item)))__accu0__.append(item);return __accu0__})();
datetime.datetime(now.date(),datetime.time(__kwargtrans__({tzinfo:now.tzinfo})));
plt.figure(__kwargtrans__({figsize:tuple([5,5])}));
self.canvas.configure(__kwargtrans__({yscrollcommand:self.vsb.set}));
result.write(new_text);
var p=subprocess.Popen([cmd_list],__kwargtrans__({shell:false}));
print(list_of_hets);
print(df.to_string());
A.T[B==1].T;
var foo=function(){var __accu0__=[];for(var x of count())__accu0__.append(Math.pow(x,2));return py_iter(__accu0__)}();
execution.history();
x[x].index;
Row(__kwargtrans__(row_dict));
root.mainloop();
TotSize.__setslice__(0,null,null,map(sum,data));
print(parse_qsl(urlparse(url)[4]));
print(list(d.py_values()));
max(function(){var __accu0__=[];for(var i=0;i<len(py_values)-1;i++)__accu0__.append(py_values[i+1]-py_values[i]);return py_iter(__accu0__)}());
random.shuffle(l);
var result=[split_result[0],split_result[1],function(){var __accu0__=[];for(var i of split_result.__getslice__(2,null,1))if(i)__accu0__.append(i);return __accu0__}()];
print(list_end_counter([1,2,1,1]));
plt.show();
deletex[index];
print(parse_python_source(os.path.join(d,f)));
hello(sys.argv[1],sys.argv[2]);
object_list.py_sort(__kwargtrans__({key:function __lambda__(x){return key_precedence[x.key]}}));
var ax=fig.add_subplot(111);
var i=max(i-1,0);
file.close();
map(sum,zip(...[py_iter(q)]*2));
list(set(A).intersection(B));
pl.show();
np.where(x==np.max(x));
ax.set_ylim(y_min,y_max);
print(function(){var __accu0__=[];for(var attr of attrs)__accu0__.append(attr.py_get(idx,default_value));return __accu0__}());
self.y=math.sin(a)*original_x+math.cos(a)*original_y;
subprocess.Popen([file],__kwargtrans__({shell:true}));
sys.setrecursionlimit(1E4);
my_array.__setitem__([tuple([0,null,1]),1],temp);
sorted(l,__kwargtrans__({key:function __lambda__(){var args=tuple([].slice.apply(arguments).slice(0));return random.random()}}));
[[[0]*n]*n]*n;
var fig=plt.figure(__kwargtrans__({figsize:tuple([4,4])}));
var response=DeviceView.as_view()(request,__kwargtrans__({pk:1}));
var path=os.path.abspath(args.file.py_name);
pyplot.show();
fig.canvas.draw();
export var root_id=hex(ewmh.EWMH().root.id);
S.py_pop();
var a=set([1]);
len(list(flatten(mylist.__getslice__(0,1,1))));
ax.add_patch(angle_plot);
__init__.py;
plt.xlim(tuple([-1,4]));
var invite_reason=models.CharField(__kwargtrans__({max_length:64}));
time.mktime(time.localtime(calendar.timegm(utc_time)));
sys.stdout=sys.__stdout__;
app.mainloop();
s.listen(1);
pylab.show();
B.sendall(A.recv(4096));
br.set_cookiejar(cookiejar);
var y=np.array([2,1,5,2]);
conn.autocommit=true;
export var priors=df[datetime.datetime.now()-df.placed_at>=timedelta(90)];
plt.plot(z,t);
time.sleep(1);
set(dict1.py_items()).symmetric_difference(list(dict2.py_items()));
pygame.init();
os.dup2(si.fileno(),sys.stdin.fileno());
print(tuple([item,value]));
var tree=etree.parse(filename,parser);
datetime.now(timezone.utc).isoformat();
plt.show();
rdd.zipWithIndex().filter(function __lambda__(tup){return tup[1]>0}).map(function __lambda__(tup){return tup[0]});
tuple(lines[0]);
serializer.save();
map(function __lambda__(x){return x.title()},s);
int(ceil(adjusted_dom/7));
new set([new set([post.tags])]);
time.sleep(5);
time.sleep(.01);
df.drop(df[df.amount==0].sample(__kwargtrans__({frac:.5})).index);
export var fileContent=file.read();
print(l[x][y]);
var words=sorted(set(stream.read().py_split()));
YourModel.objects.filter(query);
arr[[1,1]];
f.close();
etree.XMLParser(__kwargtrans__({recover:true}));
f(__kwargtrans__({x:100}));
insert_ids.append(cur.lastrowid);
var result=np.concatenate(tuple([a,val]));
datetime.datetime.strptime(dt,fmt);
myRoundedList.sum();
ax.add_patch(rectangle);
pygame.init();
tuple.__new__(...args,__kwargtrans__(kwargs));
A[A==pinf]=0;
export var imagem=cv2.bitwise_not(imagem);
print(calendar.monthrange(2012,1)[1]);
dict(function(){var __accu0__=[];for(var [v,k]of enumerate(albums_today))__accu0__.append(tuple([k,D[k]-v]));return py_iter(__accu0__)}());
var z=np.ones(tuple([5,1,1]));
(b-b[0]==0).all();
help(foo.__name__);
print(function(){var __accu0__=[];for(var _=0;_<5;_++)__accu0__.append(_);return __accu0__}());
a[slice(1,2)];
fig.canvas.draw();
plt.show();
print(sp.communicate()[0].py_split());
QtGui.QWidget.__init__(self);
var driver=webdriver.Firefox(__kwargtrans__({firefox_profile:firefoxProfile}));
DataFrame(dict(function(){var __accu0__=[];for(var [k,v]of d.py_items())__accu0__.append(tuple([k,Series(v)]));return __accu0__}()));
print(line);
plt.imshow(img,__kwargtrans__({cmap:plt.cm.gray}));
np.py_split(np.asarray(quaternion0),4,-1);
os.remove(path);
con.commit();
json.loads(json.dumps(my_dict));
d[k].py_setdefault(kk,0);
var df=pd.concat(pool.map(process,links),__kwargtrans__({ignore_index:true}));
threading.Thread(__kwargtrans__({target:post_request,args:tuple([q])})).start();
export var param=np.apply_along_axis(func1d,__kwargtrans__({axis:2,arr:data}));
ax2.xaxis.set_visible(false);
button.configure(__kwargtrans__({bg:colour}));
var result=np.sum(product,__kwargtrans__({axis:1}));
a.extend(memoryview(b).__getslice__(14,20,1));
export var ds=xr.open_dataset(path_file);
plt.show();
var a=a.ravel().view(tuple([np.str,a.itemsize*a.shape[1]]));
np.hstack(tuple([x,np.prod(x,__kwargtrans__({axis:1,keepdims:true}))]));
sum(function(){var __accu0__=[];for(var k of lst)__accu0__.append(dct.py_get(k,0));return py_iter(__accu0__)}());
print(json.dumps(dict(r.headers)));
pd.DataFrame(__kwargtrans__({data:[l]}));
app.run();
var c=list(map(operator.or_,a,b));
var B=np.random.rand(2,4);
server.starttls();
tk.mainloop();
export var ob_list=data.objects.filter(__kwargtrans__({py_namein:my_list}));
unittest.main();
results.py_sort(__kwargtrans__({key:function __lambda__(x){return x[0]},reverse:true}));
getattr(obj,py_name);
os.sysconf(2);
pygame.quit();
var data=pd.DataFrame(list(data.py_items()));
self.progbar.pack();
self.Bind(wx.EVT_CLOSE,self._on_close);
self.Bind(wx.EVT_TEXT,self.OnFiltr,self.filtr);
pylab.show();
button.clicked.connect(myFunction);
var user=models.ForeignKey(User,__kwargtrans__({unique:true}));
session.sendmail(sender,recipients,message);
b/(b-1);
(function(){var __accu0__=[];for(var [k,v]of list(dicty.py_items()))__accu0__.append([k,list(map(add_element,v))]);return dict(__accu0__)})();
var df=pd.DataFrame.from_dict(d);
cur.close();
signal.signal(signal.SIGINT,signal.SIG_DFL);
t.start();
print(py_typeof(Foo.__dict__));
__init__.py;
plt.colorbar(im,__kwargtrans__({cax:cax}));
self.log=logging.getLogger(self.__class__.__name__);
var browser=webdriver.Firefox();
export var df_Quota=pd.DataFrame();
export var index_sets=function(){var __accu0__=[];for(var i of np.unique(a))__accu0__.append(np.argwhere(i==a));return __accu0__}();
canvas.pack();
var output=process.stdout.read();
var result=np.minimum(arr,255);
var x=x||y;
plt.bar(idx,c[0],__kwargtrans__({color:hexencode(c[1]),edgecolor:hexencode(c[1])}));
f(a,b);
numpy.linalg.norm(a-b,__kwargtrans__({ord:1}));
plt.show;
var out=a[np.py_sort(sidx[np.searchsorted(a,b,__kwargtrans__({sorter:sidx}))])];
[1,1,0,1];
file.write(html);
print(int(s));
var df=df.append(data);
ax1.scatter(X,Y,Z);
p.start();
main();
os.kill(8861,0);
list(zip(...itertools.zip_longest(...ll)));
curses.endwin();
list(set(a)&set(b));
s.diff().fillna(0);
(function(){var __accu0__=[];for(var row of matrix)__accu0__.append(all(row)?row:[0]*len(row));return __accu0__})();
widget.setWindowFlags(QtCore.Qt.Window);
update_list(l,[4,5,6]);
traceback.print_stack();
args[0].__disown__();
export var LOCALIZED=true;
!any(data);
match(a,b);
print(whisper());
plt.show();
time.sleep(120);
Response(serializer.data);
cnx.commit();
t+np.r_.__getitem__([t.__getslice__(1,null,1),t[0]]);
request.add_data(edata);
userProfile.save();
(function(){var __accu0__=[];for(var a of alphastartgen(8))__accu0__.append(a);return __accu0__})();
(function(){var __accu0__=[];for(var [i,j]of p)__accu0__.append([i[0],map(int,j)]);return dict(__accu0__)})();
var lines=f.readlines();
self.fig.canvas.draw();
cursor.fetchall();
dockerpty.PseudoTerminal(client,container).start();
canvas.grid();
pyflakes- -version;
root.mainloop();
json.dumps(arrays);
export var peoples=Person.objects.all();
plt.show();
fun();
plt.show();
datetime.datetime.strptime(date_string,format1).strftime(format2);
json.dumps(my_dict);
dict(zip(freq.__getslice__(1,null,2),freq.__getslice__(0,null,2)));
(function(){var __accu0__=[];for(var i=0;i<n;i++)__accu0__.append(tuple([l[i],l[__mod__(i+1,n)]]));return __accu0__})();
plt.colorbar(sm);
self.autocomplete();
my_list;
numbers.__getslice__(start,null,1)+numbers.__getslice__(0,start,1);
__init__.py;
plt.show();
last_row.argsort();
var C=1-np.prod(D,__kwargtrans__({axis:1}));
fp.close();
simplejson.dumps(d,__kwargtrans__({ignore_nan:true}));
app.MainLoop();
w.show();
o.write(line);
fox.quit();
plt.show();
var A=coo_matrix(tuple([py_values,coords.T]));
person.put();
Base.metadata.create_all();
module.main();
sys.stdin.readline();
var py_name=db.StringProperty();
display(w);
sys.path.append(path);
sys.stdout.close();
foo.bar;
view_func(request,...args,__kwargtrans__(kwargs));
plt.legend();
self._build_data();
parser.print_help();
from_file.readline();
HttpResponse(escape(repr(request)));
plt.show();
ax.get_yaxis().set_label_coords(-.1,.5);
list(chain(...a));
print(cursor.lastrowid);
all(function(){var __accu0__=[];for(var X of dict.py_values())__accu0__.append(!X);return py_iter(__accu0__)}());
transmission_array.extend([1]*400*slot_duration);
plt.setp(cg.ax_heatmap.yaxis.get_majorticklabels(),__kwargtrans__({rotation:0}));
var result=bytes.fromhex(some_hex_string);
app.mainloop();
print(sorted(sub_strings,__kwargtrans__({key:function __lambda__(x){return levenshtein_distance(x,s)}}))[0]);
f.close();
input_file.close();
PLT.show();
self.sock.bind(tuple([self.host,self.port]));
var path=os.path.realpath(path);
export var merged_df=pd.concat(dfs,__kwargtrans__({axis:1}));
deserialized_object.save();
app.logger.setLevel(logging.ERROR);
logger.setLevel(logging.DEBUG);
Counter(list(d.py_values()));
a[0]=5;
var my_tuple=tuple(my_list);
(function(){var __accu0__=[];for(var [i,v1]of enumerate(list1))for(var j=0;j<i;j++)__accu0__.append(v1*list1[j]);return __accu0__})();
export var fact=function __lambda__(x){return x==0?1:x*fact(x-1)};
random.randint(Math.pow(10,x-1),Math.pow(10,x)-1);
writer.writerows(out_data);
client.connect();
plt.show();
df[df.a<df.a.quantile(.95)];
list_of_lists;
var new_list=list(set(function(){var __accu0__=[];for(var date of dates)if(dates.count(date)>1)__accu0__.append(date);return __accu0__}()));
time.mktime(dt_obj.timetuple());
len(buf.read());
print(np.abs(s[0]-s[1])/std);
df.__getslice__(0,2,1);
df.mean();
func();
print(function __lambda__(x){return chr(ord(x)+1)}(i));
tkinter.deletefilehandler(file);
time.sleep(random.randint(1,4));
unittest.main();
client.load_system_host_keys();
var app=QtGui.QApplication([]);
(function(){var __accu0__=[];for(var [index,value]of enumerate(obj))__accu0__.append(index);return py_iter(__accu0__)})();
export var imgc=cv2.imread(file,0);
vbox.setContentsMargins(0,0,0,0);
var df=np.dot(df,p_value);
pool.apply_async(test2,tuple([t]),[dict(__kwargtrans__({arg2:5}))]);
py_typeof(b)(a);
Session.objects.filter(__kwargtrans__({pk__in:user_sessions}));
object.save();
print(rawstr(test6));
(function(){var __accu0__=[];for(var [b,g]of itertools.groupby(bits))if(b)__accu0__.append(sum(g));return __accu0__})();
sys.exit(app.exec_());
print(subg.edges());
(function(){var __accu0__=[];for(var it of l)for(var _=0;_<2;_++)__accu0__.append(it);return __accu0__})();
var a=df.iloc.__getitem__([tuple([0,null,1]),tuple([2,null,1])]).py_values;
pickle.dump(data1,output);
server.quit();
plt.show();
len(tested)==len(input);
var pool=mp.Pool(__kwargtrans__({processes:4}));
plt.gcf().set_size_inches(10,10);
pygame.draw.circle(surf1,tuple([0,0,200,100]),tuple([100,100]),100);
print(function(){var __accu0__=[];for(var b of bases)__accu0__.append(b(5,8));return __accu0__}());
cv.Remap(image,remapped,mapX,mapY,cv.CV_INTER_LINEAR);
var sock=socket.socket(socket.AF_INET,socket.SOCK_STREAM);
print(df.loc[mask]);
im.show();
a[tuple(idx)]=5;
export var df_output_lines=function(){var __accu0__=[];for(var s of fixed_df_output.splitlines())__accu0__.append(s.py_split());return __accu0__}();
export var centroids=function(){var __accu0__=[];for(var i=0;i<k;i++)__accu0__.append(prefs[random.choice(users)]);return __accu0__}();
root.grid_columnconfigure(0,__kwargtrans__({weight:1}));
var info=collection.find_one(obj_id);
var a=np.array([[1,1],[2,2],[4,4]]);
plt.show();
logger.removeHandler(hdl);
euclid(nums[1],gcd(nums.__getslice__(0,2,1)));
var fig=plt.figure();
df[df.foo==222|df.bar==444];
var sock=socket.socket(socket.AF_INET,socket.SOCK_DGRAM);
plt.clabel(CS,__kwargtrans__({inline:1,fontsize:10}));
plt.ylim(plt.ylim()[0],1);
plt.show();
br.submit();
plt.show();
sys.stdout.write(os.read(fd,1024));
sys.exit(1);
var df=pd.concat([df,market],__kwargtrans__({axis:1}));
func(...args,__kwargtrans__(kwargs));
all(function(){var __accu0__=[];for(var v of input_list)__accu0__.append(__in__(v,value));return py_iter(__accu0__)}());
gc.garbage;
numpy.kron(a,[[1,1],[1,1]]);
print(d[k]);
self.top.destroy();
plt.show();
plt.show();
print(list(range(len(words))));
cf.insert(uuid.uuid4(),function(){var __accu0__=[];for(var d of x)__accu0__.append(function(){var __accu1__=[];for(var [k,v]of d.py_items())__accu1__.append([k,str(v)]);return dict(__accu1__)}());return __accu0__}());
np.isfinite(b);
json.dumps(object());
time.sleep(1);
pickle.dumps(defdict);
a.__getitem__([b.__getitem__([tuple([0,null,1]),0]),b.__getitem__([tuple([0,null,1]),1])]);
isinstance(v,py_typeof(LAMBDA))&&v.__name__==LAMBDA.__name__;
layout.addWidget(self.browser);
ax.set_yticklabels([]);
export var message=sys.stdin.readlines();
export var persons=Person.objects.all().order_by(now,anniversary);
s.fill(tuple([255,255,255]));
Math.pow(Math.pow(dist,2).sum(__kwargtrans__({axis:2})),.5);
export var myNames=function(){var __accu0__=[];for(var line of f)__accu0__.append(line.strip());return __accu0__}();
l1.extend([7,8,9]);
export var g2=function(){var __accu0__=[];for(var elem of g)__accu0__.append(elem.__getslice__(0,12,1));return __accu0__}();
any(function(){var __accu0__=[];for(var e of my_list)__accu0__.append(isinstance(e,list));return py_iter(__accu0__)}());
solve(eqn,Rsense);
t.start();
a.execute(sql);
self.label.pack();
export var trimmed_text=text.strip();
f.close();
any(function(){var __accu0__=[];for(var x of thelist)__accu0__.append(thelist.count(x)>1);return py_iter(__accu0__)}());
help(list);
self.add_tag(tag);
listening_socket.setsockopt(socket.SOL_SOCKET,socket.SO_REUSEADDR,1);
var j2=function(){var __accu0__=[];for(var x of j)if(x>=5)__accu0__.append(x);return __accu0__}();
np.reshape(x,tuple([-1,1]));
(function(){var __accu0__=[];for(var [i,letter]of enumerate(s))if(letter==ch)__accu0__.append(i);return __accu0__})();
self.worker.start();
df.stack();
sum(map(mul,a,b));
[datetime.datetime(2012,1,5,0,0)];
var app=Flask(__name__);
fun(ctypes.c_void_p(indata.ctypes.data),ctypes.c_void_p(outdata.ctypes.data));
ent6.grid(__kwargtrans__({row:1,column:1}));
admin.site.register(Group,GroupAdmin);
self.send_response(200);
plt.show();
scipy.optimize;
df.to_csv(f,__kwargtrans__({header:false,index:false}));
print(hex(-1&4294967295));
deletel[0];
win.show_all();
print(tuple([i,line]));
this_array.__getslice__(indices[0],indices[-1]+1,1).fill(new_v);
plt.show();
var dropped_copies=function(){var __accu0__=[];for(var i=0;i<2;i++)__accu0__.append(function __lambda__(i){return function(){var __accu1__=[];for(var x of copies[i])__accu1__.append(x[i]);return py_iter(__accu1__)}()}(i));return __accu0__}();
df_subset.apply(function __lambda__(x){return x.C*x.E},__kwargtrans__({axis:1})).sum();
os.kill(pid,0);

os.isatty(0);
print(re.findall(p,test_str));
var res=cv2.bitwise_and(img,img,__kwargtrans__({mask:mask}));
var result=p.communicate()[0];
cursor.fetchall();
var serializer=CommentSerializer(comment,__kwargtrans__({data:request.data,partial:true}));
(function(){var __accu0__=[];for(var tag of tags)for(var entry of entries)if(__in__(tag,entry))__accu0__.append(entry);return __accu0__})();
shelf.close();
var graph=facebook.GraphAPI(access_token);
self.ax.set_ylim(0,R+pR);
s.connect(tuple([HOST,PORT]));
a.__getitem__([0,tuple([0,null,1]),tuple([0,null,1])]);
cdf1.py_update(cdf2,__kwargtrans__({overwrite:false}));
print(os.path.abspath("./P2JSnippets.py"));
sys.stdout.flush();
self.pack(__kwargtrans__({fill:BOTH,expand:1,padx:5,pady:5}));
export var pts=[tuple([1,1]),tuple([10,1]),tuple([10,10]),tuple([1,10])];
print(br.response().read());
characters+=sum(function(){var __accu0__=[];for(var word of wordslist)__accu0__.append(len(word));return py_iter(__accu0__)}());
print(df.loc.__getitem__([tuple([0,null,1]),~mask]));
export var radioValue=butRadio.value_selected;
datetime.now(timezone.utc).astimezone().isoformat();
export var splitted=function(){var __accu0__=[];for(var i of re.py_split(pattern,s))if(i.strip())__accu0__.append(i.strip());return __accu0__}();
any(function(){var __accu0__=[];for(var x of myarray)__accu0__.append(np.allclose(row,x));return py_iter(__accu0__)}());
f.seek(0);
Companies.objects.filter(q);
print(s.getvalue());
ind[np.where(np.diff(ind)==0)];
server.sendmail(self.EMAIL_FROM,self.EMAIL_TO,msg.as_string());
p.stdout.close();
l.extend(map(int,r.findall(line)));
dict.__setitem__(self,py_keys[-1],value);
app.run(__kwargtrans__({debug:true}));
a[0];
sum(function(){var __accu0__=[];for(var i of l1)if(isinstance(i,numbers.Number))__accu0__.append(i);return __accu0__}());
t.start();
(function(){var __accu0__=[];for(var k of list(h1.py_keys())|h2)__accu0__.append([k,min(function(){var __accu1__=[];for(var i of tuple([h1.py_get(k),h2.py_get(k)]))if(i)__accu1__.append(i);return py_iter(__accu1__)}())]);return dict(__accu0__)})();
lst.py_sort(__kwargtrans__({key:operater.itemgetter(2),reverse:true}));
export var col=A.getcol(colindex);
var app=QtGui.QApplication([]);
var result=function(){var __accu0__=[];for(var el of itertools.zip_longest(...lists,__kwargtrans__({fillvalue:0})))__accu0__.append(sum(el));return __accu0__}();
unittest.main();
var d=function(){var __accu0__=[];for(var r of reader)__accu0__.append([r[0],tuple(r.__getslice__(1,-1,1))]);return dict(__accu0__)}();
self.instance.status;
signal.signal(signal.SIGINT,signal_handler);
plt.show();
virtualenv- -help;
var f=function __lambda__(r){return r*(sp.j0(r)+sp.jn(2,r))};
pygame.display.init();
var a=np.loadtxt(stdin,__kwargtrans__({dtype:np.int}));
random.shuffle(lis);
x[0]+x[-1];
var a=k+a;
sizer.Add(text,0,wx.ALL,5);
sys.exit(app.exec_());
people_list.append(person);
var ax=fig.add_subplot(111);
plot(tmp.max(__kwargtrans__({axis:0})));
var mat=sparse.coo_matrix(points,tuple([I,J]));
im.show();
admin.site.register(LocationCode,LocationAdmin);
config.write();
self.initUI();
siympify(y);
A.__setitem__([i,j],C.__getitem__([j,B==i]).sum());
ax.xaxis.set_major_locator(mdates.AutoDateLocator());
logging.Handler.__init__(self);
text.pack();
print(table.ascii_table(data,__kwargtrans__({has_header:true})));
jsonify(__kwargtrans__({json_list:function(){var __accu0__=[];for(var i of qryresult.all())__accu0__.append(i.serialize);return __accu0__}()}));
self.schedule.run();
plt.colorbar();
plt.draw();
max(0,min(a[1],b[1])-max(a[0],b[0]));
json.dumps(o);
df.head();
export var element_counts=collections.Counter(itertools.chain.from_iterable(allsets));
(function(){var __accu0__=[];for(var x of r)if(__in__(x+2,r))__accu0__.append(tuple([x,x+2]));return set(__accu0__)})();
cherrypy.quickstart(HelloWorld());
calendar.timegm(dt.utctimetuple());
turtle.circle(circumfrence/2);
var temp_list=function(){var __accu0__=[];for(var x=0;x<10;x++)__accu0__.append(x*x);return py_iter(__accu0__)}();
export var X_train_array=X_train.toarray();
cv.WaitKey(0);
sc.addFile(some_path);
print(len(a)-a.index(min(a))-1);
PyMem_DEL(self);
sys.path.insert(0,lib_path);
tk.Label(frame,__kwargtrans__({text:t})).grid(__kwargtrans__({row:row,column:1}));
any(function(){var __accu0__=[];for(var v of pairs.py_values())__accu0__.append(v>0);return py_iter(__accu0__)}());
help(pyudt);
self.pack();
var data=pd.DataFrame(function(){var __accu0__=[];for(var line of f)__accu0__.append(json.loads(line));return py_iter(__accu0__)}());
print(line,__kwargtrans__({file:file}));
tuple([[1,1,1]]);
trainer.trainEpochs(1E3);
g.filter(function __lambda__(x){return len(x)>=10});
self.grid_rowconfigure(0,__kwargtrans__({weight:1}));
list(range(len(sent)));
link.click();
print(v,py_typeof(v));
webbrowser.open(whatever);
[0,0,0,1,0,1];
np.arange(x[0],x[0]+60,10);
np.allclose(a,b);
plt.ion();
ax.imshow(im);
model1.objects.all();
print(json.dumps(df.T.as_matrix().tolist(),__kwargtrans__({indent:4})));
getattr(module,py_name);
os.chdir(currdir);
self._autosave();
QAbstractTableModel.__init__(self,parent);
print(template.render());
plt.figure();
self.factories.append(factory);
mpl.pyplot.legend(__kwargtrans__(dict(list(defaults.py_items())+list(kwargs.py_items()))));
plt.savefig(file_path,__kwargtrans__({dpi:80}));
httpd.serve_forever();
(numpy.diff(numpy.sign(a))!=0)*1;
thread.start();
max(knapsack(i-1,W),py_values[i]+knapsack(i-1,W-weights[i]));
timedelta(__kwargtrans__({hours:6}));
ax.set_ylim([-2,2]);
export var pil_img=PIL.Image.open(filename);
numpy.transpose(matrix7,__kwargtrans__({axes:tuple([1,0,2])})).tolist();
plt.draw();
var b=a.__getitem__([,tuple([0,null,-1])]);
paramdata.columns;
setattr(self,key,value);
var gray=cv2.cvtColor(img,cv2.COLOR_BGR2GRAY);
sum(function(){var __accu0__=[];for(var v of itertools.chain(...function(){var __accu1__=[];for(var d of myList)__accu1__.append(list(d.py_items()));return __accu1__}()))__accu0__.append(v[1][1]);return py_iter(__accu0__)}());
browser.close();
f.close();
all([]);
max(b,__kwargtrans__({key:inverse}));
setpath(d.py_setdefault(p[0],dict({})),p.__getslice__(1,null,1),k);
df.groupby(date).mean();
var __left0__=funky_func();var val=__left0__[0];var _=__left0__[1];
wrpcap(OUTFILE,paks);
var ax1=fig.add_subplot(2,1,1);
ax.yaxis.set_major_locator(mtick.LinearLocator(5));
f.write(bin_data);
set(function(){var __accu0__=[];for(var elt of example)__accu0__.append(tuple(sorted(elt)));return py_iter(__accu0__)}());
var b=[dict(a)];
plt.plot(x,y);
var fact=function __lambda__(x){return x==0?1:x*fact(x-1)};
main();
export var string_key=entity.key().urlsafe();
conn.request();
cax.get_yaxis().set_visible(false);
a.__setslice__(0,len(bbins),null,a.__getslice__(0,len(bbins),1)+bbins);
f();
Entry.objects.filter(__kwargtrans__({created__range:tuple([start_date,end_date])}));
var y=x.astype(np.float);
np.hstack(x).shape;
plt.show();
cursor.execute(sql,[id]);
var data=function(){var __accu0__=[];for(var item of data)__accu0__.append(item<0?item+256:item);return __accu0__}();
x[0]+x[-1];
var MyDiccoSorted=sorted(list(MyDicco.py_items()),__kwargtrans__({key:function __lambda__(s){return s[1][2]}}));
time.sleep(5);
self.label.setAlignment(QtCore.Qt.AlignCenter);
sorted(sentence,__kwargtrans__({reverse:true}))[0];
list(function(){var __accu0__=[];for(var [r,p]of zip(repeat(a),permutations(b)))__accu0__.append(list(zip(r,p)));return py_iter(__accu0__)}());
self.transport.write(line);
np.array_equal(np.asarray(foo_cv),foo_np_view);
self.timer.join();
plt.show();
sys.exit(0);
screen.blit(surf,tuple([100,100]));
print(list(py_iter(root.children[1])));
np.hstack(tuple([vector1.reshape(-1,1),matrix2]));
out_file.write(line);
unittest.main();
export var books_array=numpy.array(list_of_lists);
root.mainloop();
self.post(...args,__kwargtrans__(kwargs));
var ax2=fig.add_subplot(2,1,2);
imshow(np.asarray(pil_im));
circle.grid(__kwargtrans__({row:1,column:1}));
df.apply(function __lambda__(x){return x[np.where(x>0)[0][0]]},__kwargtrans__({axis:1}));
Fraction.from_float(.25);
max(function(){var __accu0__=[];for(var [k,g]of groupby(L))__accu0__.append(sum(function(){var __accu1__=[];for(var i of g)__accu1__.append(1);return py_iter(__accu1__)}()));return py_iter(__accu0__)}());
pyl.show();
self.stream.close();
array^=numpy.random.rand(len(array))<prob;
plt.show();
shutil.copyfileobj(f_in,f_out);
f();
plt.show();
self.__dict__.py_update(state);
matplotlib.pyplot.show();
time.sleep(2);
df.groupby[di.month].Category.apply(pd.value_counts);
(function(){var __accu0__=[];for(var _=0;_<6;_++)__accu0__.append(py_next(gen));return __accu0__})();
plt.show();
print(sorted(list(globalHotItems.py_items()),__kwargtrans__({key:function __lambda__(x){return x[1]}})).__getslice__(-4,null,1));
abs(__kwargtrans__({x:5}));
plt.subplots_adjust(__kwargtrans__({right:.85}));
export var biggest=function(){var __accu0__=[];for(var x of d.most_common(6))__accu0__.append(x[0]);return __accu0__}();
float(s);
main();
list(IT.izip_longest(...readers));
export var myChoice=random.choice(answer);
export var letters=function(){var __accu0__=[];for(var _=0;_<5;_++)__accu0__.append(choice(ascii_lowercase));return __accu0__}();
self.foo();
dot(A,x);
webapp2.RequestHandler.dispatch(self);
s.listen(1);
a.max(__kwargtrans__({axis:1}));
tuple([seq.__getslice__(0,null,2),seq.__getslice__(1,null,2)]);
sys.exit(app.exec_());
print(function(){var __accu0__=[];for(var r of row)__accu0__.append(r.lower());return __accu0__}());
df.apply(print_row,__kwargtrans__({axis:1}));
pyplot.show();
var r=np.sqrt(x*x+y*y);
var queryset=queryset.filter(__kwargtrans__({full_name__icontains:string}));
plt.subplots_adjust(__kwargtrans__({top:.9}));
document.close();
plt.show();
element.py_clear();
server.serve_forever();
Thread.__init__(self);
ax.xaxis.set_major_locator(MultipleLocator(1));
export var now_plus_10m=now+datetime.timedelta(__kwargtrans__({minutes:10}));
s==s.__getslice__(0,null,-1);
ax.plot_surface(x_surf,y_surf,z_surf,__kwargtrans__({cmap:theCM}));
reactor.run();
var A=np.array(mean_data).mean(__kwargtrans__({axis:0}));
new_rows.append(function(){var __accu0__=[];for(var elt of row)__accu0__.append(str(elt).expandtabs());return __accu0__}());
export var even=function(){var __accu0__=[];for(var n of numbers.__getslice__(0,numbers.index(412),1))if(!__mod__(n,2))__accu0__.append(n);return __accu0__}();
var s=requests.Session();
t.start();
Image.fromarray(imarray);
export var the_dict=json.loads(JSON_Datalist);
(function(){var __accu0__=[];for(var [i,j]of list(d.py_items()))__accu0__.append(tuple([i,sum(j)]));return __accu0__})();
sys.stdout.flush();
var item=len(singlet_list)==1?singlet_list[0]:false;
figure(__kwargtrans__({figsize:tuple([5,10])}));
self.Bind(wx.EVT_PAINT,self.OnPaint);
tuple([cbgen(int(x),base,iexps),cbgen(x-int(x),base,fexps)]);
root.mainloop();
shutil.rmtree(temp_dir);
dataframe.iloc.__getitem__([tuple([0,null,1]),[0,1,4]]);
curses.curs_set(0);
QtCore.QVariant();
var b=a*(a>0);
os.nice(1);
result.drop(0,__kwargtrans__({axis:1,inplace:true}));
export var dot_product=sum(function(){var __accu0__=[];for(var key of dict_1)__accu0__.append(dict_1[key]*dict_2.py_get(key,0));return py_iter(__accu0__)}());
sorted(dictionary,__kwargtrans__({key:dictionary.py_get,reverse:true})).__getslice__(0,10,1);
var response=requests.py_get(url);
self.show_all();
export var blobs=BlobInfo.all().run();
(function(){var __accu0__=[];for(var x of list_of_objects)__accu0__.append(x.time);return __accu0__})();
pd.MultiIndex.from_tuples(list(product(...categories)),__kwargtrans__({names:names}));
Acut[np.isnan(Acut)]=np.nanmean(Acut);
total+=float(current_number);
s[~s.isnull()];
[0,0,0,0];
changes.py_setdefault(k,[]).append(v);
pd.read_excel(filename);
[0]*(len(a)-len(c))+c;
logger.addHandler(handler);
plt.figure(1,__kwargtrans__({figsize:tuple([size_x,size_y]),dpi:98}));
aobj.__class__;
django.contrib.auth.middleware.AuthenticationMiddleware;
b.swapaxes(0,1);
var res=function(){var __accu0__=[];for(var i of range(0,len(s)-1,2))__accu0__.append((s[i]+s[i+1])/2);return __accu0__}();
export var doublepp=np.ctypeslib.ndpointer(__kwargtrans__({dtype:np.uintp}));
serializer.save();
themod.__dict__.py_update(thedict);
logger.setLevel(logging.DEBUG);
np.searchsorted(np.py_sort(x),x);
plt.axvline(x_position);
mylist.insert(0,mylist.py_pop(mylist.index(targetvalue)));
ax.plot_surface(X,Y,F);
Done;
min(map(function __lambda__(x){return __in__(x,string)?string.index(x):len(string)},specials));
random.shuffle(all);
var now=datetime.datetime.utcnow().py_replace(__kwargtrans__({tzinfo:utc}));
subprocess.Popen(cmd).wait();
threading.Thread.__init__(self);
plt.scatter(x,y,__kwargtrans__({c:t,cmap:cm.cmap_name}));
var driver=webdriver.PhantomJS();
filter_func(parent_dict,function __lambda__(x){return 2<x&&x<4});
response;
[1][0][2];
export var last_wednesday=today-timedelta(__kwargtrans__({days:offset}));
sorted(A,__kwargtrans__({key:function __lambda__(e){return!__in__(e,B)}}));
sys.path.append(os.path.abspath(scriptpath));
tuple(numpy.subtract(tuple([10,10]),tuple([4,4])));
image.image.save(file_name,files.File(lf));
seq2str(img.getdata());
b.py_sort();
threading.Thread.__init__(self);
list(compress(list_a,fil));
moduleA.py;
moduleB.py;
var ar=function(){var __accu0__=[];for(var results of cur.fetchall())__accu0__.append(function(){var __accu1__=[];for(var item of results)__accu1__.append(str(item));return __accu1__}());return __accu0__}();
plt.show();
var x=EqM_list(someiter);
var data=function(){var __accu0__=[];for(var x of data)if(py_typeof(x)==float)__accu0__.append(x);return __accu0__}();
sorted(set(a_list));
service.files().delete(__kwargtrans__({fileId:dir_id})).execute();
gtk.main();
f.close();
plt.show();
f.close();
str1.py_split();
ax.set_xlim(-.5,1.5);
print(mystring.__getslice__(2,4,1));
(function(){var __accu0__=[];for(var i of l)for(var r=0;r<2;r++)__accu0__.append(i);return __accu0__})();
var x=f.readlines();
var tree=etree.parse(StringIO(your_xml_string),magical_parser);
map(f,tuple_list);
export var bare_argspec=inspect.getargspec(func);
export var pixels=list(im.getdata());
(function(){var __accu0__=[];for(var [x,y]of it.izip(a.__getslice__(1,null,1),a))__accu0__.append(x-y);return __accu0__})();
var b=__in__(word,function(){var __accu0__=[];for(var [i,w]of enumerate(wordList))if(i!=1)__accu0__.append(w);return py_iter(__accu0__)}());
self.assertEqual(actual,expected);
ax2.set_ylim(0,1.2);
print(map(itemgetter(0),py_next(bykey)[1]));
subA.tick_params(__kwargtrans__({labelsize:6}));
var queryset=User.objects.all();
fun(__kwargtrans__(function(){var __accu0__=[];for(var [b,v]of list(dic.py_items()))__accu0__.append([b.decode(),v]);return dict(__accu0__)}()));
var x=EqM_list(py_iter(d.py_keys()));
app.run();
sympy.solve([sympy.Eq(b-Math.pow(a,2.552)-c),sympy.Eq(b,2)],__kwargtrans__({rational:false}));
__all__.py_update(function(){var __accu0__=[];for(var py_name of to_import)__accu0__.append([py_name,module_dict[py_name]]);return dict(__accu0__)}());
np.random.seed(__kwargtrans__({seed:0}));
zip(...function(){var __accu0__=[];for(var i=0;i<n;i++)__accu0__.append(s.__getslice__(i,null,1));return py_iter(__accu0__)}());
print(r.status_code);
new_list.append(temp_list);
object.__new__(cls,...args,__kwargtrans__(kwargs));
var A=(A-mean(A,__kwargtrans__({axis:0})))/std(A,__kwargtrans__({axis:0}));
list(itertools.product(a,b));
tuple([[.00148820116,2.95700572E-4,.00441516179]]);
df.iloc.__getitem__([tuple([0,null,1]),0]);
getattr(self,py_name);
var ax1=fig.add_subplot(1,2,1);
print(ruamel.yaml.dump(d,__kwargtrans__({Dumper:ruamel.yaml.RoundTripDumper})));
np.sum(x,__kwargtrans__({axis:-1})).__getitem__([tuple([0,null,1]),np.newaxis])-np.cumsum(x,__kwargtrans__({axis:-1}));
ax.yaxis.set_major_locator(MultipleLocator(1));
var __left0__=tuple([img.__getitem__([tuple([0,null,1]),tuple([0,null,1]),0]).copy(),img.__getitem__([tuple([0,null,1]),tuple([0,null,1]),1]).copy(),img.__getitem__([tuple([0,null,1]),tuple([0,null,1]),2]).copy()]);var b=__left0__[0];var g=__left0__[1];var r=__left0__[2];
smtp.sendmail(from_addr,to_addr,message.as_string());
lst.py_sort(__kwargtrans__({key:function __lambda__(x){return x[2]},py_reversed:true}));
process.kill();
views.py;
conn.send(data);
hist(function(){var __accu0__=[];for(var t of ts)__accu0__.append(t.hour+t.minute/60);return __accu0__}(),__kwargtrans__({bins:24*60/15}));
session.add(p);
c.append(quad(f,-1,1,__kwargtrans__({args:list(range(1,n+1))}))[0]);
var content=some_file.read();
print(function(){var __accu0__=[];for(var result of results)__accu0__.append(result.py_get(__kwargtrans__({timeout:10})));return __accu0__}());
print(lxml.html.tostring(doc));
var df=df.append(df);
[11,11,11,1,18,14,14,9,9];
logging.getLogger().addHandler(setupcon.ColoredHandler());
arr.__getitem__([indices.__getitem__([tuple([0,null,1]),0]),indices.__getitem__([tuple([0,null,1]),1])]);
users.create();
export var ws=wb.worksheets[0];
getpass.getuser();
parrot(__kwargtrans__(d));
var ax=fig1.gca();
app.mainloop();
self.pack();
itertools.count(1E12);
sum(a);
time.sleep(2);
os._exit(0);
print(sess.run([x,y]));
self.queries.append(a[1]);
json.dumps([str(nparray.dtype),base64.b64encode(nparray),nparray.shape]);
ax.set_zticks(np.arange(0,9,.5));
print(list(itertools.chain(...kana)));
sys.stdout.flush();
var img=np.empty(tuple([100,100,1]),__kwargtrans__({dtype:np.uint16}));
k.append(j);
client.send(message);
newobjs._register(obj);
p.kill();
math.exp(-np.logaddexp(0,-x));
ax.boxplot(data);
win.show_all();
var args=parser.parse_args(get_xyz_cmd_line(sys.argv.__getslice__(1,null,1)));
reactor.run();
json.dumps();
master.mainloop();
export var cropped=pygame.Surface(tuple([80,80]));
pandas.merge(df.stack(0).reset_index(1),id,__kwargtrans__({left_index:true,right_index:true}));
export var Ainv=np.array(map(np.linalg.inv,A));
export var milestones_list=milestones_df.index.tolist();
time.sleep(1);
plt.gcf().show();
os.symlink(linkto,dst);
print(yaml.dump(data,__kwargtrans__({Dumper:yaml.RoundTripDumper,indent:4})));
mainloop();
numpy.array(function(){var __accu0__=[];for(var [x,_]of train)__accu0__.append(network.activate(x));return __accu0__}());
print(os.path.join(path,file));
Thread.__init__(self);
np.dstack(np.nonzero(df.py_values))[0];
hash(str(d));
print(response.read());
QtGui.QTabWidget.addTab(self,widget,title);
var result_list=list(result.py_values());
print(cls.__name__);
var __left0__=np.meshgrid(XB,YB);var X=__left0__[0];var Y=__left0__[1];
print(icon_info.get_filename());
pylab.draw();
print(celery.AsyncResult.task_id);
a.argsort().__getslice__(-10,null,1);
window.activateWindow();
print(f.read());
export var content_sizer=wx.BoxSizer(wx.HORIZONTAL);
deleteL.__getslice__(0,null,2);
arr.__getitem__([1,-1]);
print(sum(a));
np.argsort(b)[c];
time.sleep(.5);
(function(){var __accu0__=[];for(var x of[2,2])__accu0__.append(x*2);return __accu0__})();
console.setFormatter(color_formatter);
var ax=fig.add_subplot(111);
signal.signal(signal.SIGINT,old_action);
silhouette_score(iris.data,iris.target,__kwargtrans__({sample_size:50}));
print(fout.read());
plt.ylim([0,1]);
sys.exit();
map(function __lambda__(x){return group(x,a)},sum_vals);
(function(){var __accu0__=[];for(var i=0;i<n;i++)__accu0__.append(stuff+stuff.__getslice__(0,n/2-1,1).__getslice__(i,i+n/2,1));return __accu0__})();
math.acos(dotproduct(v1,v2)/(length(v1)*length(v2)));
reactor.run();
var rest=(n-last_digit)/10;
var x=math.ceil(x*100)/100;
root.mainloop();
view.configure_traits();
M.reshape(-1,2,2).sum(__kwargtrans__({axis:0}));
var a=np.random.randint(0,9,10);
tuple(l);
admin.site.register(Session,SessionAdmin);
row.__getitem__([0,col.argsort()]);
ax.add_artist(circle);
wb.Close();
np.where(np.diff(x)>.5)[0];
self.text_ent.grid(__kwargtrans__({row:1,column:0}));
5+np.random.sample(10)*5;
ax.xaxis.set_major_formatter(formatter);
math.radians(45);
max(depth(self.left),depth(self.right))+1;
flask.request.user_agent.string;
print(list(reader));
py_next(py_iter(list(c.py_items())));
sorted(2*list(range(5)));
session.query(Action).filter_by(__kwargtrans__({py_name:py_name})).one();
ShowAppsView.as_view()(self.request);
df.to_excel(writer);
var py_name=models.CharField(__kwargtrans__({max_length:64}));
df.loc[cond1|cond2];
ax.legend(__kwargtrans__({loc:0}));
print(list_end_counter([1,1,2,2,2,2]));
os.chown(path,uid,gid);
app.exec_();
(function(){var __accu0__=[];for(var x=0;x<len(lst);x++)__accu0__.append(__in__(x,indices)?int(lst[x]):lst[x]);return __accu0__})();
my_dictionary_list;
x.__enter__();
__mod__(a,b);
var i=function(){var __accu0__=[];for(var x of s.py_split())__accu0__.append(int(x));return __accu0__}();
dict(zip(x,y));
webbrowser.open(url,__kwargtrans__({py_new:0,autoraise:true}));
ax.set_xlim(-10,10);
show();
df.apply(fillnull);
(function(){var __accu0__=[];for(var k of list(mydict.py_keys()))if(k>=6)__accu0__.append(k);return __accu0__})();
show(p);
var rows=function(){var __accu0__=[];for(var i=0;i<2;i++)__accu0__.append(function(){var __accu1__=[];for(var k of list(field.py_keys()))__accu1__.append(field[k][i]);return __accu1__}());return __accu0__}();
window.show();
clientsocket.send(p);
var process=subprocess.Popen(cmd,__kwargtrans__({stdout:subprocess.PIPE,stderr:subprocess.PIPE}));
a+b;
print(os.path.join(dir,file));
datetime.datetime.utcfromtimestamp(seconds);
self.y=0;
e.toxml();
(function(){var __accu0__=[];for(var el of lst)__accu0__.append(ast.literal_eval(el));return __accu0__})();
py_next(y);
export var book=Workbook();
export var fullpower=quad(f,1E-9,np.inf)[0];
Thread.__init__(self);
plt.draw();
print(np.partition(x,-10).__getslice__(-10,null,1));
plt.plot(x);
req.get_method();
t.start();
time.sleep(1);
print(function(){var __accu0__=[];for(var [i,v]of enumerate(l))__accu0__.append(abs(v-l[__mod__(i+1,len(l))]));return __accu0__}());
print(df);
(function(){var __accu0__=[];for(var k of sorted(adict,__kwargtrans__({key:adict.py_get,reverse:true})))__accu0__.append(tuple([k,adict[k]]));return __accu0__})();
s.py_replace(0,np.nan).dropna().astype(s.dtype);
sp.wait();
test.ix.__getslice__(i,null,4);
sock.settimeout(5);
export var cj=cookielib.CookieJar();
pd.DataFrame(data,df.index,u);
file.seek(0,os.SEEK_END);
parser.parse(open(filename));
a[0][0];
str(f);
sizer.Add(input,1,wx.EXPAND|wx.ALL,5);
ax.plot_surface(Rnew*np.cos(Tnew),Rnew*np.sin(Tnew),Znew);
var result=np.average(_array.__getslice__(0,null,1).__getslice__(1,null,1),__kwargtrans__({axis:1}));
var imgc=cv2.imread(file);
plt.legend();
any(map(my_dict.__contains__,my_list));
mpl.rcParams.py_update(manager._rcparams);
list(_);
np.dot(W,B);
(function(){var __accu0__=[];for(var i of tuple([0,1]))__accu0__.append(function(){var __accu1__=[];for(var z of foo)__accu1__.append(z[i]);return __accu1__}());return __accu0__})();
ax.plot(list(range(10)));
plt.show();
var B=A.__getitem__([tuple([0,null,2]),tuple([0,null,1]),tuple([1,2,1])]);
os.chdir(path);
export var board4=[[1,0,0,1],[0,1,1,0],[0,0,1,0],[0,1,0,0]];
ab[x].py_sort();
arr.__setslice__(20,null,null,[0]*(len(arr)-20));
S2.startswith(S1);
self.initialized=true;
np.clip(arr,0,255,arr);
tuple([new set([new set([forloop.counter0])]),new set([new set([j])])]);
new_column.index;
(function(){var __accu0__=[];for(var t of it)__accu0__.append([t,function(){var __accu1__=[];for(var _=0;_<py_next(it);_++)__accu1__.append(py_next(it));return __accu1__}()]);return dict(__accu0__)})();
app.mainloop();
br.set_handle_gzip(true);
plt.show();
df.apply(function __lambda__(x){return x.between(2,10,__kwargtrans__({inclusive:false}))});
s.setsockopt(socket.IPPROTO_IP,socket.IP_HDRINCL,1);
var __left0__=plt.hist(x,histedges_equalA(x,nbin),__kwargtrans__({normed:false}));var n=__left0__[0];var bins=__left0__[1];export var patches=__left0__[2];
plt.subplot(111);
time.sleep(2);
all(function(){var __accu0__=[];for(var item of py_items)__accu0__.append(item[2]==0);return py_iter(__accu0__)}());
self._background_task();
export var circ=np.linspace(0,2*pi);
ax.set_xticks(numpy.arange(0,1,.1));
c.showPage();
theproc.communicate();
export var hottest_cakes=Cake.objects.filter(__kwargtrans__({id__in:hottest_cake_ids}));
plt.subplots_adjust(__kwargtrans__({left:.25,bottom:.25}));
myApp.setWindowFlags(QtCore.Qt.Tool);
var driver=webdriver.Firefox(__kwargtrans__({firefox_profile:profile}));
s.bind(tuple([HOST,PORT]));
export var H=nx.DiGraph();
main();
df.rename(__kwargtrans__({columns:function __lambda__(x){return x.__getslice__(1,null,1)},inplace:true}));
print(html.tostring(table,__kwargtrans__({pretty_print:true})));
sys.excepthook=info;
var results=function(){var __accu0__=[];for(var t of mylist)if(t.person_id==10)__accu0__.append(t.age);return __accu0__}();
mat.data-=numpy.repeat(vec.toarray()[0],numpy.diff(mat.indptr));
var i=int(round(float(s)));
subprocess.Popen.communicate();
sys.modules.py_pop(module_name);
(function(){var __accu0__=[];for(var [i,x]of enumerate(y))if(i!=0&&x!=6)__accu0__.append(x);return __accu0__})();
d.execute();
print(todayDate.py_replace(__kwargtrans__({day:1})));
f.close();
socket.setdefaulttimeout(60);
(function(){var __accu0__=[];for(var t of my_set)if(my_list.count(t)>1)__accu0__.append(t);return __accu0__})();
bar();
var A=numpy.array([[2,-1,0],[-1,2,-1],[0,-1,2]],numpy.float);
new set([new set([value.py_name])]);
child_process.kill();
L1.py_sort(__kwargtrans__({key:function __lambda__(x){return L.index(x)}}));
func(...args,__kwargtrans__(kwargs));
list(filter(f,list(range(2,25))));
export var iv=bytes(function(){var __accu0__=[];for(var i=0;i<16;i++)__accu0__.append(random.randint(0,255));return __accu0__}());
map(operator.add,a,b);
self.create_socket(socket.AF_INET,socket.SOCK_STREAM);
main();
layout.addWidget(self.de);
print(r.content);
(function(){var __accu0__=[];for(var obj of mylist)if(!__in__(obj.id,seen))__accu0__.append(seen.add(obj.id)||obj);return __accu0__})();
multiprocessing.cpu_count();
plt.boxplot(boxes,__kwargtrans__({vert:0}));
self.setGridIntersection(self.pos());
self.layout.addWidget(self.view);
export var delta=datetime.datetime.now()-previousTime;
Entry.objects.bulk_create(aList);
(function(){var __accu0__=[];for(var [a,b]of zip(df.a,df.b))__accu0__.append(a.join(b));return __accu0__})();
show();
s.close();
var C=map(sub,A,B);
func();
sys.stdout.flush();
np.maximum.reduceat(v,idx);
window.show();
var my_list=function(){var __accu0__=[];for(var v of sorted(out))__accu0__.append(dict(out[v]));return __accu0__}();
(function(){var __accu0__=[];for(var [k,g]of groupby(a))if(len(list(g))>=2)__accu0__.append(k);return __accu0__})();
output.close();
print(cur.fetchall()[0]);
var tree=ET.ElementTree(ET.fromstring(xmlstring));
py_metatype.__new__(cls,py_name,bases,dct);
time.sleep(.11);
sorted(list(x.py_items()),__kwargtrans__({key:function __lambda__(kv){return kv[1]}}));
ctypes.c_ulong(-1);
var result=function(){var __accu0__=[];for(var line of lines)__accu0__.append(line.upper());return __accu0__}();
f.axes[0].set_position([.05,.05,.4,.4]);
var t=function(){var __accu0__=[];for(var x of q)if(__in__(x,w))__accu0__.append(x);return __accu0__}();
export var list2b=function(){var __accu0__=[];for(var c of list2)if(__in__(c,list1))__accu0__.append(c);return __accu0__}();
print(match.group(1));
self.set.remove(d);
the_list.py_sort();
var names=function(){var __accu0__=[];for(var row of curs.fetchall())__accu0__.append(row[0]);return __accu0__}();
time.sleep(1);
python- -version;
Py_Finalize();
tuple([1,1,0,0,0,1,1,0,1,1,1,1,1,1,1,0,0,1,1,1,0,0,0,0]);
w.writerow(row);
rfecv.fit(X_train,y_train);
df[~(df.A==0&df.B==2&df.C==6&df.D==0)];
(function(){var __accu0__=[];for(var p of permutations(age.get_group(21).index))__accu0__.append(df.loc[list(p)]);return __accu0__})();
print(sess.run(Z));
label.pack();
self.__dict__.py_update(kwargs);
db.close();
ssh.close();
fatal.setLevel(logging.FATAL);
process.stdin.write(data);
gtk.main_iteration(__kwargtrans__({block:false}));
solve(do_something(something));
var clf=pickle.load(f);
export var weights=tuple([np.array([[1,1,1],[1,0,1],[1,1,1]])]);
var a=MyClass();
reactor.run();
export var wb=openpyxl.load_workbook(file);
df[sheet]=pd.read_csv(csv);
df[df.duplicated(__kwargtrans__({keep:false}))];
pyplot.show();
var data=json.loads(elevations);
deletelist1.__getslice__(0,null,1);
data.py_sort(__kwargtrans__({key:keyfunc}));
array([[1,0],[1,2]]);
x.shape;
var s=socket.socket(socket.AF_INET,socket.SOCK_RAW,socket.IPPROTO_IP);
print(im.format,im.size,im.mode);
br.set_handle_robots(false);
wx.Panel.__init__(self,parent);
sys.exit(app.exec_());
root.mainloop();
var model=get_object_or_404(Customer,__kwargtrans__({id:id,user:1}));
Py_Initialize();
ax.xaxis_date();
print(f(a));
var A=np.zeros(tuple([6,6]));
s.logout();
export var race=models.CharField(__kwargtrans__({choices:RACES,max_length:5}));
set(range(1,101))-s;
list_one.append(list_two);
classroom.py;
(function(){var __accu0__=[];for(var i of range(0,len(l),n))__accu0__.append(l.__getslice__(i,i+n,1));return py_iter(__accu0__)})();
var o=function(){var __accu0__=[];for(var i of range(0,len(l),2))__accu0__.append(tuple([l[i],l[i+1]]));return __accu0__}();
rreverse(s.__getslice__(1,null,1))+s[0];
os.waitpid(p.pid,0);
FI.close();
session.commit();
frame.groupby([pd.DatetimeIndex(function(){var __accu0__=[];for(var x of frame.index)__accu0__.append(x.date());return __accu0__}())]).sum();
export var count_nan=len(df)-df.count();
export var max_validation=function __lambda__(x,y,z){return x<y&&y<z};
q.filter(or_(...conditions));
var query=Session.query(Table).filter(clauses);
zip(range(1,7,2),range(2,8,2));
var response=urllib.request.urlopen(req);
any(function(){var __accu0__=[];for(var x of my_list)__accu0__.append(np.array_equal(np.array([a,a]),x));return py_iter(__accu0__)}());
uuid.UUID(value);
[1,2,2];
var f=Foo();
res.append(lst[i]);
json.dumps(self.json);
time.sleep(.5);
any(function(){var __accu0__=[];for(var x of zip(...arr))__accu0__.append(len(set(x))==1);return py_iter(__accu0__)}());
struct.pack(new_format,...args);
server.set_debuglevel(1);
plt.show();
[[0],[1],[2],[42],[4]];
(u+x)*(a+d+g)+(v+y)*(b+e+h)+(w+z)*(c+f+i);
print(cur.fetchall());
np.vstack(j).T;
zcat.wait();
time.sleep(.25);
df[df.Phrase.str.len()!=0];
f.close();
sys.exit(app.exec_());
print(my_list);
sys.getsizeof(a);
f2.close();
plt.draw();
self.canvas.pack();
signal.signal(signal.SIGINT,signal.SIG_IGN);
sys.getsizeof(n.__dict__);
out.extend(map(str,list(range(r[0],r[-1]+1))));
QtCore.QAbstractItemModel.__init__(self);
gtk.main_quit();
export var GL=function(){var __accu0__=[];for(var [k,v]of it.groupby(sorted(L,__kwargtrans__({key:sorter})),__kwargtrans__({key:sorter})))__accu0__.append(list(v));return __accu0__}();
numpy.atleast_2d(x[x.__getitem__([tuple([0,null,1]),2])==1]);
sum(function(){var __accu0__=[];for(var x of s)if(x.isdecimal())__accu0__.append(int(x));return py_iter(__accu0__)}());
__init__.py;
plt.xticks(__kwargtrans__({rotation:70}));
cur.connection.close();
test.myfun(test.f);
self.assertEqual(r,a);
cur.execute(sql,list(py_values.py_values()));
pygame.display.flip();
(function(){var __accu0__=[];for(var i=2;i<len(lst)+1;i++)for(var x of combinations(lst,i))__accu0__.append(prod(x));return __accu0__})();
export var order=models.PositiveIntegerField(__kwargtrans__({py_default:0}));
instance.save();
rdd.mapPartitions(f).collect();
var q=Queue.Queue();
(function(){var __accu0__=[];for(var _=0;_<1;_++)__accu0__.append([b.py_pop(0),function(){var __accu1__=[];for(var _=0;_<1;_++)__accu1__.append(b.py_pop(0));return set(__accu1__)}()]);return dict(__accu0__)})();
a.__getslice__(0,null,-2);
test_handler();
print(in_nested_list(x,[1,2]));
var id=Column(Integer,__kwargtrans__({primary_key:true}));
root.quit();
data[abs(data-np.mean(data))<m*np.std(data)];
pip2- -version;
print(A[idx]);
zip(a,b,c);
result.append([list[index][0],list[index+1][1]]);
plt.scatter(x,y,__kwargtrans__({c:t}));
list(Counter(words).py_values());
ax.set_axis_off();
var xDate=sys.argv[1];
caketaste();
timedelta(__kwargtrans__({seconds:_diff.total_seconds()}));
ctx.set_font_size(font_size);
admin.site.unregister(User);
Foo.allocate_ids(__kwargtrans__({max:26740080011040}));
fig.canvas.draw();
max(function(){var __accu0__=[];for(var [k,v]of flows.py_items())__accu0__.append(tuple([len(v),k]));return py_iter(__accu0__)}());
set(a).intersection(b);
ax.spines[direction].set_visible(true);
sys.exit(exit_code);
len(self.children)==0;
sorted(_,__kwargtrans__({key:function __lambda__(x){return sum(x)}}));
(function(){var __accu0__=[];for(var [i,x]of zip(A,B))__accu0__.append([x]*i);return __accu0__})();
plt.figure();
sys.path;
plt.imshow(Z);
export var sliced=function(){var __accu0__=[];for(var i of seclist)__accu0__.append(list(islice(it,0,i)));return __accu0__}();
sys.exit(0);
PyInit_gstreamer();
(function(){var __accu0__=[];for(var i=0;i<10;i++)__accu0__.append(bar());return __accu0__})();
foo(1,2);
app.run(__kwargtrans__({extra_files:extra_files}));
sys.stdout.flush();
var __left0__=np.indices(temp.shape);var t=__left0__[0];var z=__left0__[1];var y=__left0__[2];var x=__left0__[3];
file(filename).read();
np.where(abcd<=data2a&abcd>=data2b,1,0).sum();
print(len(letters)>len(no_rep));
print(function(){var __accu0__=[];for(var i=0;i<m;i++)__accu0__.append(function(){var __accu1__=[];for(var x of a)if(len(x)==i+1)__accu1__.append(x);return __accu1__}());return __accu0__}());
ax.set_aspect(1);
i+=1;
ax.set_xlim(0,10);
print(function(){var __accu0__=[];for(var [i,p]of enumerate(P))__accu0__.append(A[p][i]);return __accu0__}());
var filtered_list=list(filter_list(full_list,excludes));
json.JSONEncoder.__init__(self,...args,__kwargtrans__(kwargs));
sys.exit(app.exec_());
var list_of_lists=function(){var __accu0__=[];for(var elem of list_of_tuples)__accu0__.append(list(elem));return __accu0__}();
var s=random.randint(0,Math.pow(2,1E4)-1);
pd.concat(pd.read_html(url),__kwargtrans__({ignore_index:false}));
urllib.parse.urlencode(a);
np.array(__,__kwargtrans__({dtype:float}));
curses.echo();
urllib.parse.urlencode(url_dict,true);
conn.close();
s1.reset_index(__kwargtrans__({drop:true}));
f.close();
export var inpaint_mask=cv.CreateImage(cv.GetSize(im),8,1);
time.sleep(1);
export var dW=masked.sum(__kwargtrans__({axis:1}));
loop.close();
np.where(a.__getitem__([tuple([0,null,1]),1])==2);
tokenize.sent_tokenize(p);
export var ordering=function(){var __accu0__=[];for(var [i,word]of enumerate(predefined_list))__accu0__.append([word,i]);return dict(__accu0__)}();
export var colnames=df.columns.tolist();
print(f(1));
login();
var py_keys=set(chain.from_iterable(dicts));
plt.show();
min(iList,__kwargtrans__({key:function __lambda__(i){return i.number}}));
tk.Label(self.frame,__kwargtrans__({text:t})).grid(__kwargtrans__({row:row,column:1}));
QtWidgets.QGraphicsScene.mouseMoveEvent(self,event);
zip(function(){var __accu0__=[];for(var item of set(x))__accu0__.append(x.count(item));return py_iter(__accu0__)}(),set(x));
print(f.read());
start_date+relativedelta(__kwargtrans__({months:2}));
export var csv_reader=csv.reader(f);
pygame.quit();
response.close();
var __left0__=tuple([seq[0],seq.__getslice__(1,null,1)]);var first=__left0__[0];var rest=__left0__[1];
root.mainloop();
print(repr(f.readline().__getslice__(0,1,1)));
QtCore.QVariant();
var msg=msg.rstrip();
list(map(itemgetter(0),G));
var results=sorted(list(results_dict.py_items()),__kwargtrans__({key:function __lambda__(x){return abs(x[0])}}));
logger.setLevel(logging.DEBUG);
(function(){var __accu0__=[];for(var x of l)__accu0__.append(list(islice(b,x)));return __accu0__})();
pprint.pprint(row);
connect.commit();
self.Bind(wx.EVT_KEY_DOWN,self.OnKey);
pickle.dump(a,f);
var py_items=[[1,2,0],[1,2,1],[1,2,0]];
time.sleep(2);
pprint(sys.path);
export var retdict=json.loads(content);
list(itertools.dropwhile(math.isnan,py_reversed(r))).__getslice__(0,null,-1);
isinstance(obj,int);
print(select([func.count()]).select_from(table));
time.sleep(1);
a+b;
ax.set_xlim(0,25);
plt.show();
deletex[2];
var fig=plt.figure();
export var srcList=list(set(srcText.py_split()));
var a=b;
result.py_setdefault(column,[]).append(value);
py_next(function(){var __accu0__=[];for(var x=0;x<10;x++)if(x==7)__accu0__.append(x);return py_iter(__accu0__)}());
str(tdo);
bisect.bisect_left(l,4);
list(df.T.to_dict().py_values());
export var clen=ctypes.c_ulonglong(0);
signal.signal(signal.SIGTERM,signal_handler);
o5.method();
self.crawler.start();
(function(){var __accu0__=[];for(var [i,j]of product(a,np.array(tuple([b,c])).T))__accu0__.append(np.insert(j,0,i));return __accu0__})();
df.groupby(df.index);
date-=timedelta(__kwargtrans__({days:5}));
var result=function(){var __accu0__=[];for(var el of result)__accu0__.append(el.text_content());return __accu0__}();
selfref_list.append(selfref_list);
plt.figure(__kwargtrans__({figsize:tuple([7.15,5.15])}));
os.path.py_split(fullpath);
celery.control.revoke(uuid,__kwargtrans__({terminate:true}));
new set([new set([42.55|round])]);
print(user.username,user.get_full_name(),user.email);
cls(...args,__kwargtrans__(kwargs));
(function(){var __accu0__=[];for(var x=0;x<5;x++)__accu0__.append(Math.pow(x,2));return __accu0__})();
export var res4=inner1d(U.transpose(0,2,1),V.T);
yourThread.daemon=true;
print(pattern.search(text).group(1));
label.pack();
plot.show();
sys.stdout=sys.__stdout__;
df.ix[row.py_name];
numpy.array(strings,__kwargtrans__({dtype:float}));
my_dict[key]+=1;
writer.writerow(py_keys);
deleteall.__getslice__(max(current-2,0),current,1);
var value=int(value);
print(num);
f.read();
var wb=load_workbook(__kwargtrans__({filename:BytesIO(input_excel.read())}));
var sess=tf.Session(__kwargtrans__({config:tf.ConfigProto(__kwargtrans__({log_device_placement:true}))}));
a[[ind]];
list(enumerate(py_reversed(test)));
pdb.set_trace();
any(function(){var __accu0__=[];for(var c of string_1)__accu0__.append(c.isalpha());return py_iter(__accu0__)}());
neurons.append(neuron);
export var all_ranges=list(gen_range(1E8,6E8,100));
f.close();
print(function(){var __accu0__=[];for(var group of t)__accu0__.append(tuple(function(){var __accu1__=[];for(var [a,b]of group)__accu1__.append(tuple([a,b+1]));return py_iter(__accu1__)}()));return __accu0__}());
export var event_full_datetime=models.DateTimeField();
print(numpy.argmax(a_by_a,__kwargtrans__({axis:1})));
do_something(my_object);
export var G_ij=K(X_i,Y_j);
controller1.py;
np.dot(a,weights);
tar.close();
deletea[k];
plt.show();
export var script=os.path.abspath(sys.argv[0]);
print(np.where(mask)[0]);
export var zdf2=bcolz.ctable.fromdataframe(df2);
var d2=copy.deepcopy(d);
deletesys.argv[1];
len(function(){var __accu0__=[];for(var x of str_.py_split())if(__in__(x,list(dict_1.py_values())))__accu0__.append(x);return __accu0__}());
cur.close();
var r=urllib.request.urlopen(req);
logging.getLogger();
media_frame.stack().map(m).unstack();
DataFrame.mode()[0];
var d=dict(l);
app.test_request_context().push();
np.py_split(index[sort_idx],np.cumsum(cnt.__getslice__(0,-1,1)));
df;
ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy());
mylist.py_pop();
var c=b[index];

(function(){var __accu0__=[];for(var [a,b]of itertools.permutations(A,2))__accu0__.append(do_stuff(a,b));return __accu0__})();
sys.exit(app.exec_());
var a=numpy.arange(25).reshape(5,5);
self.figurecanvas.draw();
var df=pd.read_csv(StringIO(text),__kwargtrans__({parse_dates:[0]}));
followers_df.reset_index();
var __left0__=zip(...sorted(zip(timestamps,elements)));export var timestamps=__left0__[0];export var elements=__left0__[1];
export var urls=sys.argv.__getslice__(2,null,1);
print(sys.version);
set(yourString)&set(badChars);
np.arange(10).__getslice__(0,null,-1);
plt.yticks(np.arange(y.min(),y.max(),.005));
var arr=np.empty(dims,__kwargtrans__({dtype:kerneldt}));
(function(){var __accu0__=[];for(var [e,g]of groupby(sorted(my_list)))__accu0__.append(e);return __accu0__})();
heapq.heappush(heap,tuple([-prod,n,n]));
unittest.main();
foo(...py_values);
self.__dict__.py_update(cls.__dict__);
matched[1]+=1;
bucket.delete();
sys.stderr.write(str(prompt));
plt.subplots_adjust(__kwargtrans__({bottom:.2}));
writer.writerow(item);
pdb.Pdb.__init__(self);
df.CITY;
self.socket.setsockopt(socket.SOL_SOCKET,socket.SO_REUSEADDR,1);
foo();
print(json.dumps(OrderedDict(table_data)));
plt.show();
var d=function(){var __accu0__=[];for(var [key,value]of zip(py_keys,py_values))__accu0__.append([key,value]);return dict(__accu0__)}();
fig.clf();
var id=Column(Integer,__kwargtrans__({primary_key:true}));
var root=tk.Tk();
var result=op_func(a,b);
sns.kdeplot(np.array(data),__kwargtrans__({bw:.5}));
sum(delta_list,timedelta())/len(delta_list);
deletedictionary[old_key];
plt.show();
parser.parse_args(f.read().py_split(),namespace);
Thread(__kwargtrans__({target:run,args:tuple([args.arg1,args.arg2])}));
newList;
pkt[TCP].payload=send_hdr;
termios.tcsetattr(fd,termios.TCSAFLUSH,new_settings);
threading.Thread.__init__(self);
socket.connect(tuple([HOST,PORT]));
myList.index(function(){var __accu0__=[];for(var x of myList)if(x!=0)__accu0__.append(x);return __accu0__}()[0]);
loop.run_forever();
print(msg.as_string());
(function __lambda__(partition){return target==sum(map(int,partition))});
classifier.classify(featurized_test_sentence);
setattr(self,Properties_Pointers[i],group);
sorted(lst,__kwargtrans__({key:function __lambda__(x){return-x[1]}}));
export var tuples_list=list(tuples2);
plt.scatter(list(range(len(y))),y,__kwargtrans__({s:60,c:z,cmap:cm.hot}));
plt.gca().add_artist(circle);
help(uuid.UUID.__init__);
fly.set_data([fdata[0][0],fdata[0][-1]],[fdata[1][0],fdata[1][-1]]);
export var numbers_float=map(float,line.py_split());
fig.show();
pandas.DataFrame(data).groupby(0).mean();
self.id=self.get_next_id();
_to.py_update(_from);
print(difflib.get_close_matches(target_word,list_of_possibles));
(function(){var __accu0__=[];for(var [x,y]of zip(...[py_iter(q)]*2))__accu0__.append(x+y);return __accu0__})();
do_something();
var s=socket.socket(socket.AF_UNIX,socket.SOCK_STREAM);
custom_API();
np.delete(x,indx);
QtWidgets.QListView.__init__(self,parent);
(function(){var __accu0__=[];for(var p of classifications)__accu0__.append(p<.5?1:2);return __accu0__})();
var result=map(function __lambda__(x){return x*P},S);
var a=a.__getslice__(0,null,1);
print(os.read(f.fileno(),50));
len(mylist);
p.terminate();
f.close();
abs(Math.pow(Math.pow(10,.5),2)-10)<1E-10;
vals[idx].tolist();
(function(){var __accu0__=[];for(var a of A1)__accu0__.append(np.argmin(a));return __accu0__})();
logger.setLevel(logging.WARNING);
oname.text;
export var stations=OrderedDict(function(){var __accu0__=[];for(var [idx,el]of enumerate(lines))__accu0__.append(tuple([el,idx]));return py_iter(__accu0__)}());
signal.signal(signal.SIGUSR1,handler);
np.sum(Math.pow(np.dot(xdiff,L_inv.T),2),__kwargtrans__({axis:1}));
plt.subplot(212);
my_string.py_split().__getslice__(0,5,1);
ax.xaxis_date();
time.sleep(.5);
fig.autofmt_xdate();
MyClass.__init__(a);
cursor.execute(sql,data);
threading.Thread.__init__(self);
thread.start();
main();
geoms.append(p);
np.argsort(x,__kwargtrans__({axis:1})).__getitem__([tuple([0,null,1]),tuple([0,k,1])]);
threads.py_setdefault(row[2],[]).append(row);
array([[11],[12]]);
plt.pause(1);
pd.rolling_mean(data,__kwargtrans__({window:5,center:true}));
main();
(function(){var __accu0__=[];for(var x of tokenize(txt))__accu0__.append(x);return __accu0__})();
print(d[key]);
soup.prettify();
df.drop(idx);
termios.tcsetattr(fd,termios.TCSADRAIN,py_new);
var b=function(){var __accu0__=[];for(var x of a)__accu0__.append(Math.pow(x,2));return py_iter(__accu0__)}();
var x=x.__getslice__(0,50,1);
lst.py_sort(__kwargtrans__({key:itemgetter(1)}));
Math.floor(5/2);
results[i].append(benchmark(i));
f.close();
yourlist.append(yourdict.copy());
self.socket.connect(tuple([server_ip,server_port]));
threading.Thread(__kwargtrans__({target:listen_to_audio})).start();
merge(DataFrame(tmp,__kwargtrans__({index:[0]})),data);
zip(...lst)[0];
tick_params(__kwargtrans__({labeltop:true,labelright:true}));
var parser=argparse.ArgumentParser();
client.load_system_host_keys();
np.vstack(function(){var __accu0__=[];for(var col of cols)__accu0__.append(get_col(col));return __accu0__}()).T;
time.sleep(.5);
var a=np.array([0,0,0,0,0,0]);
export var bbins=np.bincount(b);
sorted(set(function(){var __accu0__=[];for(var row of content.py_values())for(var val of row)__accu0__.append(val);return py_iter(__accu0__)}()));
msg.attach(part);
var __left0__=np.meshgrid(xi,yi);export var xi=__left0__[0];export var yi=__left0__[1];
var r=redis.Redis(__kwargtrans__({connection_pool:pool}));
pl.xlim(0,df2.shape[1]);
QWidget.__init__(self);
plt.show();
var data=list(datareader);
var form=UserForm(request.POST,__kwargtrans__({user:request.user}));
sum(dict(structure).py_values());
driver.set_window_position(0,0);
export var sheet=book.sheet_by_index(0);
np.unpackbits(b).__getslice__(0,n,1).reshape(shape).view(np.bool);
copy.deepcopy();
l.py_sort(__kwargtrans__({key:itemgetter(0)}));
var id=Column(Integer,__kwargtrans__({primary_key:true}));
os.startfile(d);
pg.QtGui.QApplication.exec_();
f.write(doc.toxml());
ax1.yaxis.set_major_locator(matplotlib.ticker.LinearLocator(nticks));
plt.show();
python-config- -cflags;
python-config- -ldflags;
main();
br.select_form(__kwargtrans__({nr:0}));
var min_keys=function(){var __accu0__=[];for(var k of d)if(all(function(){var __accu1__=[];for(var m of d)__accu1__.append(d[m]>=d[k]);return py_iter(__accu1__)}()))__accu0__.append(k);return __accu0__}();
print(zip(...p));
itertools.product(universe,__kwargtrans__({repeat:2}));
var ax=fig.add_subplot(1,1,1);
sys.path.append(os.path.basename(os.path.dirname("./P2JSnippets.py")));
list(zip_longest(...[py_iter(chain([0],...liPos))]*2));
plt.figure(1);
f.seek(0);
var df=pd.read_csv(yourdata,__kwargtrans__({dtype:dtype_dic}));
plt.show();
var ax=fig.add_subplot(1,1,1);
gen.__code__.co_name;
df.columns=df.iloc[1];
sys.stdout.flush();
session.add_all([a,b]);
Foo.__str__!==object.__str__;
QtGui.QWidget.__init__(self);
app.logger.setLevel(logging.INFO);
signal.signal(signal.SIGUSR1,debug);
HttpResponseRedirect(url);
var fig=plt.figure();
var l=[0,0,1,1,1,0,0,0,1,1,0,0,1,1,1,1];
list(product(...iterables));
parser.parse(some_file);
print(max(path.nodes,__kwargtrans__({key:function __lambda__(item){return item.y}})));
requests.py_get(url,__kwargtrans__({cookies:load_cookies_from_lwp(filename)}));
time.sleep(60);
tf.matmul(x,tf.transpose(y));
export var writer=csv.writer(fout);
self.someSignal.connect(self.someSlot);
a2.ravel().__setslice__(0,null,null,m.reshape(2,-1).T.tolist());
np.where(binplace==1);
pprint.pprint(value);
print(function(){var __accu0__=[];for(var g of groupby(sorted(l,__kwargtrans__({key:len})),len))__accu0__.append(list(g[1]));return __accu0__}());
var instance=form.save(__kwargtrans__({commit:false}));
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
Books.objects.filter(q);
export var random_number=random.random()*2-1;
datetime.time(0,0,0);
sys.path.append(lib_path);
print(my_list);
ax.set_aspect(1);
input.close();
p.terminate();
print(numpy.linalg.norm(x));
plt.close();
myfunc(...mylist);
fig.show();
fig.autofmt_xdate();
var f=sys.stdin;
input();
export var Znew=griddata(Xmesh.flatten(),Ymesh.flatten(),Z.flatten(),Xnew,Ynew);
export var signed_angle=atan2(b.y,b.x)-atan2(a.y,a.x);
dis.dis(function __lambda__(){return i});
root.mainloop();
var blobs=BlobInfo.all().fetch(500);
var __left0__=zip(...data);var first_elements=__left0__[0];var second_elements=__left0__[1];
sorted(function(){var __accu0__=[];for(var i of lst)if(i>0)__accu0__.append(i);return __accu0__}())+sorted(function(){var __accu0__=[];for(var i of lst)if(i<0)__accu0__.append(i);return __accu0__}());
var y=math.cos(1*math.pi/180);
var s=math.sqrt(max(radius*radius-i*i,0));
print(urllib.request.urlopen(ipcheck_url).read());
c.execute(query);
export var xml_etree=ET.parse(xml_filename,__kwargtrans__({parser:parser}));
cs.send(c+1);
timestamp.py_sort(__kwargtrans__({reverse:true}));
var fig=plt.figure();
base64.b64encode(stream.getvalue()).decode();
out_file.write(indata);
print(function(){var __accu0__=[];for(var num of a)if(counts[num]>1)__accu0__.append(num);return __accu0__}());
QtGui.QWidget.__init__(self,parent);
(function(){var __accu0__=[];for(var x of A)__accu0__.append(np.where((B==x).sum(__kwargtrans__({axis:1})))[0]);return __accu0__})();
file.write(line);
d.py_update([a,b,c]);
export var selected_array=my_array[mask];
var results=Orchard.objects.filter(__kwargtrans__(options));
plt.show();
(v1==v2).all();
self.timer.start(10);
reactor.run();
(function(){var __accu0__=[];for(var c of col_names)if(all(function(){var __accu1__=[];for(var f of filter_array)__accu1__.append(!__in__(f,c));return __accu1__}()))__accu0__.append(c);return __accu0__})();
f.axes[5].set_position([.95,.05,.05,.4]);
var df2=df[df.Group.isin(groups)];
out.shape;
clp.CloseClipboard();
self.crawler.install();
np.count_nonzero(A==B);
pipe.communicate();
plt.imshow(data.T);
ax.plot_wireframe(X,-Y,Z,__kwargtrans__({rstride:1,cstride:1}));
df.shape[0]-df.dropna().shape[0];
str(self.person);
fstools.py;
export var entry_list=function(){var __accu0__=[];for(var entry of feed.entry)__accu0__.append(entry.title.text);return __accu0__}();
var args=parser.parse_args();
f(...args,__kwargtrans__(kwargs));
ax.set_ylim(bot,top);
var f=function __lambda__(x){return 2*x};
os.waitpid(cpid);
SumLine.extend(ast.literal_eval(x));
print(list(Counter(L).py_items()));
x[np.lexsort(tuple([x.__getitem__([tuple([0,null,1]),0]),x.__getitem__([tuple([0,null,1]),1])]))];
ax.set_xlim(x_min,x_max);
print(cert.get_issuer().as_text());
p.terminate();
plt.show();
Base.metadata.create_all(engine);
root.destroy();
self.f(...args,__kwargtrans__(kwargs));
infile.close();
var __left0__=self.ax.hexbin(self.xData,self.yData);self.graph=__left0__[0];
i+=1;
array([[0,0,1,1],[0,1,1,0]]);
result.append(myDict);
plt.draw();
time.sleep(.01);
sys.stdout.write(out);
zip(a[0],a[1]);
__all__.py_update(test.__dict__);
log.start();
foo();
np.ma.median(y,__kwargtrans__({axis:0})).filled(0);
export var dict_of_lists=merge_with(list,...csv.DictReader(open(f)));
tuple([[0,1,0,2,1,1,1,0]]);
object.__new__(cls,x);
sandboxed();
inspect.getargspec(func);
np.where(np.in1d(a,b))[0];
max(function(){var __accu0__=[];for(var k of d)__accu0__.append(depth(d[k],level+1));return py_iter(__accu0__)}());
var result=function(){var __accu0__=[];for(var _f of map(expensive,mylist))if(_f)__accu0__.append(_f);return __accu0__}();
sys.stdout.flush();
var results=cursor.fetchall();
print(r.cookies);
x.append(y);
export var node_count=len(db.nodes);
list(itertools.chain(...a));
socket.close();
var __left0__=stats.norm.fit(logdata);export var estimated_mu=__left0__[0];export var estimated_sigma=__left0__[1];
time.sleep(5);
export var created_date=Column(DateTime,__kwargtrans__({py_default:datetime.datetime.utcnow}));
var __left0__=parser.parse_args();export var options=__left0__[0];var args=__left0__[1];
f.close();
print(function(){var __accu0__=[];for(var s of signs)for(var [n,i]of enumerate(s))__accu0__.append(dotted[n].__getslice__(0,-1,1)+tuple([i]));return __accu0__}());
var __left0__=plt.hist(x,histedges_equalN(x,10),__kwargtrans__({normed:true}));var n=__left0__[0];var bins=__left0__[1];var patches=__left0__[2];
signal.signal(signal.SIGINT,signal.SIG_DFL);
py_next(g);
repr(self.contained);
web.show();
hasattr(obj,py_name)&&py_typeof(getattr(obj,py_name))==types.MethodType;
time.sleep(1);
pool.terminate();
time.sleep(self.interval);
ftp.close();
var fig=plt.figure();
plt.tight_layout(__kwargtrans__({rect:[.05,.15,.95,.95]}));
hex(x).__getslice__(2,null,1);
matplotlib.get_backend();
plt.draw();
unittest.TextTestRunner().run(suite);
var p=Pool(5);
layout.addWidget(self.button);
pygame.mixer.init();
bytearray(os.urandom(1E6));
export var objs=function(){var __accu0__=[];for(var i=0;i<10;i++)__accu0__.append(MyClass());return __accu0__}();
chain.from_iterable(function(){var __accu0__=[];for(var r=1;r<len(s)+1;r++)__accu0__.append(combinations(s,r));return py_iter(__accu0__)}());
wrapper_object.blink();
export var rsa=M2Crypto.RSA.load_pub_key(pk);
self.progress.pack();
self.output.append(data);
lst[0].append(1);
print(function(){var __accu0__=[];for(var k of sorted(d.py_keys()))__accu0__.append(tuple([k,len(d[k])]));return __accu0__}());
print(x.apply(function __lambda__(y){return list(filter(np.isfinite,y))}));
export var repeated_items=function(){var __accu0__=[];for(var row of df.itertuples())__accu0__.append(list(row[1]*row[2]));return __accu0__}();
sorted(list(dct.py_items()),__kwargtrans__({key:function __lambda__(p){return p[1]},reverse:true}));
os.dup2(cat.stdin.fileno(),sys.stderr.fileno());
plt.colorbar();
min(data,__kwargtrans__({key:function __lambda__(t){return t[1]}}));
print(tuple([k]+function(){var __accu0__=[];for(var d of L)for(var v of list(d.py_values()))__accu0__.append(v);return __accu0__}()));
f.write(bytes(function(){var __accu0__=[];for(var x of L)__accu0__.append(int(x,0));return py_iter(__accu0__)}()));
my_tuple[isinstance(x,str)].append(x);
var ax=fig.add_subplot(1,1,1);
self.window.set_default_size(self.width,self.height);
a[len(a)];
df[~df.isnull().all(__kwargtrans__({axis:1}))];
event_box.set_events(gtk.gdk.BUTTON_PRESS_MASK);
var list2=function(){var __accu0__=[];for(var k of commons)__accu0__.append(dict2[k]);return __accu0__}();
smtpObj.sendmail(sender,receivers,message);
f.read();
top.mainloop();
var browser=webdriver.Firefox();
export var tt=t.reshape(-1);
export var stats=df.describe();
main();
var img=Image.open(BytesIO(response.content));
(function(){var __accu0__=[];for(var elem of testList)__accu0__.append(int(elem));return __accu0__})();
(function(){var __accu0__=[];for(var i of d)__accu0__.append(functools.reduce(dict.__getitem__,py_keys,d[i]));return __accu0__})();
plt.show();
datetime.time;
diags.sum(__kwargtrans__({axis:1}));
MySQLdb.connect(server,username,password,database,__kwargtrans__({local_infile:1}));
m.groups()[0].strip();
input_file.close();
plt.show();
(function(){var __accu0__=[];for(var p of pages)__accu0__.append(myFunc(p,additionalArgument));return __accu0__})();
inspect.ismethod(d.__setitem__);
plt.show();
var a=np.arange(100).reshape(2,50);
var d=json.loads(s);
export var x_new=x[np.sum(x,__kwargtrans__({axis:1}))>.5];
export var results_df=pd.concat(results);
sys.exit(1);
var __left0__=divmod(a,1);var a=__left0__[0];var b=__left0__[1];
p.terminate();
doctest.testmod();
lists[1].append(url);
np.random.shuffle(a);
pdb.set_trace();
Job.fetch(job_id,__kwargtrans__({connection:conn}));
HttpResponse(__kwargtrans__({status:500}));
print(s,len(s));
self.SetClientSize(tuple([self.bmp.GetWidth(),self.bmp.GetHeight()]));
foo.wait();
plt.show();
var id=models.CharField(__kwargtrans__({max_length:255,py_default:create_id}));
var x=np.linspace(0,1,20);
main();
QtGui.QMainWindow.__init__(self);
array_proxy();
os.kill(int(pid),signal.SIGTERM);
print(ET.tostring(dom));
main();
signal.signal(signal.SIGUSR2,function __lambda__(sig,frame){return code.interact()});
f(...args,__kwargtrans__(kwargs));
ax.scatter(X.__getitem__([tuple([0,null,1]),0]),X.__getitem__([tuple([0,null,1]),1]),__kwargtrans__({s:s}));
plt.show();
self.a=a;
(function(){var __accu0__=[];for(var xs of itertools.combinations(list(range(10)),2))__accu0__.append(np.bincount(xs,__kwargtrans__({minlength:10})));return __accu0__})();
numpy.linalg.norm(A-B);
plt.subplots_adjust(0,0,1,1,0,0);
self.driver.close();
max(lengths(l));
var x=function(){var __accu0__=[];for(var i=0;i<10;i++)__accu0__.append([i,set()]);return dict(__accu0__)}();
print(line);
args[-1]+mySum(...args.__getslice__(0,-1,1));
myDict[py_name];
len(s);
var arr=numpy.array(function(){var __accu0__=[];for(var i=0;i<24;i++)__accu0__.append(base+datetime.timedelta(__kwargtrans__({hours:i})));return __accu0__}());
var fig=plt.figure(1);
df.py_replace(to_remove,np.nan,__kwargtrans__({inplace:true}));
data.py_sort();
tuple([255,255,255]);
ax2.set_xlim(ax1.get_xlim());
self.calendar.pack();
some_list.__getslice__(0,target_len,1)+[0]*(target_len-len(some_list));
ax2.plot(x2,x2,__kwargtrans__({alpha:0}));
var a=str(datetime.now());
time.sleep(1);
object.__repr__(self);
max(len(str1),len(str2));
t.start();
print(func_name);
plt.contour(xi,yi,zi,con_levels,__kwargtrans__({linewidths:1}));
cv2.circle(cimg,tuple([i[0],i[1]]),i[2],tuple([0,255,0]),2);
df.sort_index(__kwargtrans__({inplace:true}));
var result=map(f,[x,y,z]);
var utc_dt=local_dt.astimezone(pytz.utc);
var df=pd.concat([df1,df2],__kwargtrans__({ignore_index:true}));
axcut.set_visible(true);
export var mydriver=webdriver.Firefox();
np.random.seed(0);
file_out.write(line);
json.loads(page_detail_string);
sys.__stdin__=dummyStream();
ax.py_clear();
__in__(nan,np.array([nan]));
list1.append(i);
self.data.append(data);
set(b.py_items())^set(a.py_items());
print(response.status,response.reason);
s.dt.to_pydatetime();
dictionary[round(a,4)];
meta.create_all();
app.exec_();
data[data.__getitem__([data.__getitem__([tuple([0,null,1]),0])==0,1])==0];
f.close();
df2.fillna(0,__kwargtrans__({inplace:true}));
dill.pickles(f);
list(set(a)-set(b));
var rdd=df.rdd.map(tuple);
all(function(){var __accu0__=[];for(var i of zipt)__accu0__.append(len(i)==len(set(i)));return __accu0__}());
stock_vals[stock_name][day_index];
var myDict=dict(list(element.attributes.py_items()));
export var appname=get_application_id();
export var cs=m.contourf(x,y,nc_new,numpy.arange(0,1,.1),__kwargtrans__({cmap:plt.cm.RdBu}));
np.hstack([R,phase]);
new set([new set([test|tojson|safe])]);
var out=ohc.fit_transform(X);
print(repr(a));
np.where(np.diff(x)>.5)[0]+1;
zip(a,b);
complex(0,0);
export var expand=function(){var __accu0__=[];for(var [a,b]of test)__accu0__.append(len(b)>0?a*int(b):a);return __accu0__}();
export var blog_post=models.ForeignKey(BlogPost);
x[nonzeros].dot(mat[nonzeros]);
pygame.init();
var found=any(function(){var __accu0__=[];for(var line of file)__accu0__.append(word==line.strip());return py_iter(__accu0__)}());
A.__getitem__([tuple([0,null,1]),0]);
self.file.close();
ContentType.objects.get_for_model(obj);
np.bmat([[A,D],[C,B]]).A;
self.panel.SetSizer(main_sizer);
os.chdir(curdir);
var __left0__=plt.subplots(1,1,__kwargtrans__({figsize:tuple([12,5])}));var fig=__left0__[0];var ax=__left0__[1];
array([1,2]);
p4in.close();
pp.py_sort(__kwargtrans__({key:function __lambda__(p){return math.atan2(p[1]-cent[1],p[0]-cent[0])}}));
Py_DECREF(v);
l.__setslice__(0,null,null,function(){var __accu0__=[];for(var x of l)__accu0__.append(x*5);return __accu0__}());
l1.append([7,8,9]);
min(dictionary.py_values());
(function(){var __accu0__=[];for(var [i,elem]of enumerate(inputlist))if(!__in__(i,excluded_indices))__accu0__.append(elem);return __accu0__})();
Bar.objects.foo_active();
df.index+pd.offsets.MonthEnd(0);
print(list(locals().py_keys()));
server.quit();
plt.xticks(x);
list(replaceiniter(range(11),function __lambda__(x){return __mod__(x,2)}));
np.any(a==5,__kwargtrans__({axis:0}));
(function(){var __accu0__=[];for(var [k,g]of groupby(a,function __lambda__(x){return x!=0}))if(k)__accu0__.append(list(g));return __accu0__})();
cursor.execute(...sql_and_params);
session.query(User,User.entries_count(Entry.date>start_date));
root.mainloop();
df1.groupby(__kwargtrans__({level:0}))[cols].apply(find_window);
k+=1;
a.shape;
plt.show();
var d=function(){var __accu0__=[];for(var [key,value]of list(d.py_items()))__accu0__.append([m.py_get(key,key),value]);return dict(__accu0__)}();
export var utc_now=datetime.datetime.utcnow;
var pool=Pool(__kwargtrans__({processes:2}));
map(dictionary.__delitem__,lst);
reduce(dict.py_get,path,aDict).py_update(aSecondDict);
n*n;
LOGGER.setLevel(logging.WARNING);
self.root.mainloop();
cookiejar.set_cookie(cookie);
np.power(df,2);
GC.remove_edge(...clique.__getslice__(0,2,1));
a.__getslice__(0,null,-1);
random.shuffle(b);
plt.show();
time.sleep(1);
export var save_as=true;
sum(map(function __lambda__(x,y){return x*y},l1,l2));
print(thingy.attrib);
min(a,__kwargtrans__({key:itemgetter(1)}));
var ax=fig.add_subplot(111);
vscrollbar.grid(__kwargtrans__({row:0,column:1,sticky:N+S}));
time.sleep(1);
print(np.loadtxt(io.BytesIO(trace.text)));
os.nice(20);
var df=pd.read_csv(filename,__kwargtrans__({skiprows:lines2skip}));
array([nan+complex(0,0),nan+nanj,nan+nanj,nan+nanj,nan+nanj]);
dis.dis(f);
sys.excepthook=handle_exception;
f.close();
dis.dis(function __lambda__(x){return x});
logging.Handler.close(self);
ax.set_yticks(list(range(0,90,10)));
main();
var found=re.findall(regex,my_txt);
print(f.decorator);
df.matches.sum();
print(numpy.sum(c*a));
plt.show();
plt.pcolormesh(X.__getslice__(i-2,i,1),Y.__getslice__(i-2,i,1),C.__getslice__(i-2,i,1));
sys.path.insert(0,self.path);
random.shuffle(thelist);
module1.Relay(1,1);
User.objects.filter(__kwargtrans__({id:self.request.user.id}));
time.sleep(5);
(function(){var __accu0__=[];for(var i of set(function(){var __accu1__=[];for(var i of a)__accu1__.append(tuple(sorted(i)));return __accu1__}()))__accu0__.append(list(i));return __accu0__})();
lbl8.grid(__kwargtrans__({row:2,column:0}));
ao.__setitem__([tuple([0,null,1]),tuple([0,-1,1])],ao.__getitem__([tuple([0,null,1]),tuple([0,-1,1])])+ai.__getitem__([tuple([0,null,1]),tuple([1,null,1])]));
fpid.close();
f(1,2);
print(sys.path);
print(np.allclose(a2,a));
sorted(templist,__kwargtrans__({key:int}));
var tt=np.linspace(0,19,20);
ord(chars[0]);
func(arg);
print(a.__getitem__([tuple([0,null,1]),1]));
(d1.year-d2.year)*12+d1.month-d2.month;
self.children=dict({});
var queryset=Model.objects.all();
show();
input.close();
export var unitary=function(){var __accu0__=[];for(var t of t_list)__accu0__.append(linalg.expm(-complex(0,1)*t*h));return __accu0__}();
plt.draw();
user.save();
var parser=argparse.ArgumentParser();
my_func();
show();
var result=bool_indices.apply(function __lambda__(x){return df.loc.__getitem__([x,col_values]).sum()});
cv2.cv.CreateMat(500,500,template.dtype);
time.mktime(t.timetuple())+t.microsecond/1E6;
conn.close();
df.loc.__setitem__([lhs,column],rhs);
callback(self);
plt.clf();
response;
np.vstack(tuple([a,a,a]));
var height=img.shape[0];
zip(list(range(len(a))),a);
os.path.join(root,file);
output.close();
print(self.__name__);
canvas.grid(__kwargtrans__({row:1,column:1,sticky:Tkconstants.NSEW}));
export var hosts=sorted(celery.current_app.control.inspect().ping().py_keys());
obj.save();
decorator;
var x=function(){var __accu0__=[];for(var bah of buh)__accu0__.append(bah*2);return __accu0__}();
self._socket=socket.socket(socket.AF_INET,socket.SOCK_DGRAM);
s.connect(tuple([ip_addr,port]));
a.py;
list(results.py_values());
export var X_imputed_df=pd.DataFrame(X_imputed,__kwargtrans__({columns:X_train.columns}));
Counter(A.flat).most_common(1);
scores.append(clf.score(X[outer_test],Z[outer_test]));
plt.show();
jsonFile.seek(0);
sorted(lst,__kwargtrans__({key:function __lambda__(x){return tuple([x<0,x])}}));
lis.append(function __lambda__(i){if(typeof i=="undefined"||i!=null&&i.hasOwnProperty("__kwargtrans__"))var i=i;return i});
(get_comments.s(url)|render_template.s()).apply_async();
var a=numpy.empty([210,8]);
communication_set.save();
self.setWindowFlags(QtCore.Qt.FramelessWindowHint|QtCore.Qt.Popup);
var words=sorted(wordset);
plt.gca().yaxis.set_major_locator(MaxNLocator(__kwargtrans__({nbins:6})));
pivoted.cumsum()+(pivoted==-1);
pd.isnull(np.array([np.nan,0],__kwargtrans__({dtype:object})));
var C=A*B;
time.sleep(1);
var ax=fig.add_subplot(111,__kwargtrans__({frameon:false,xticks:[],yticks:[]}));
pygame.display.quit();
file.flush();
print(Y.transpose());
root.mainloop();
self.create(request,...args,__kwargtrans__(kwargs));
py_typeof(li)(map(double,li));
plt.legend();
var p=subprocess.Popen(cmd,__kwargtrans__({shell:false,stdout:subprocess.PIPE}));
var category=forms.ChoiceField(__kwargtrans__({choices:CATEGORIES,required:true}));
pygame.display.set_mode();
arr[arr>255]=x;
cursor.execute(sql);
test_moduleB.py;
main.py;
plt.gca().add_artist(leg2);
plt.gca().add_artist(leg4);
plt.gca().add_artist(leg6);
[1][1][1];
x.pattern;
zip([py_iter(l)]*2);
len(set(function(){var __accu0__=[];for(var i=0;i<2E3;i++)__accu0__.append(hashlib.sha256(str(i)).hexdigest().__getslice__(0,5,1));return py_iter(__accu0__)}()));
var py_name=models.CharField(__kwargtrans__({max_length:200}));
print(time.time());
Counter(list(c.py_values()));
var results=pbex.run();
var data=json.load(f);
var ax=fig.add_subplot(1,1,1);
ax.set_xlim(0,m.shape[1]);
numpy.random.rand(count);
var result=py_next(function(){var __accu0__=[];for(var x of my_list)if(works(x))__accu0__.append(x);return py_iter(__accu0__)}());
var ts=pd.Series([2,1,2,1,5],__kwargtrans__({index:date_index}));
np.savetxt(s,x);
s.close();
var t=datetime.datetime(2009,4,1);
ax2.xaxis.set_visible(false);
Gtk.main();
root.mainloop();
img.write(pdf_path);
self.entry.focus_set();
print(result.groups());
worker.send(msg,zmq.NOBLOCK);
new set([dict([[request.user.username|multiply,5]])]);
var AB=np.matmul(A,B);
list(itertools.product(list(range(5)),list(range(5))));
export var rendered_output=template.render(context);
export var my_date=datetime.date.today();
a.insert(len(a),5);
export var data_dict=defaultdict(list);
self.stateChanged.connect(self.handleStateChanged);
var temp=tuple(map(sorted,zip(...alist)));
print(x[0],len(list(x[1])));
somelist.py_sort(__kwargtrans__({key:ordering.py_get}));

isinstance(value,list);
var population=function(){var __accu0__=[];for(var [n,a]of zip(pops,alleles))for(var _=0;_<n;_++)__accu0__.append(a);return __accu0__}();
__import__(module);
etree.tostring(tree);
a.__setitem__([tuple([0,2,1]),2],0);
app.run(__kwargtrans__({debug:true,use_reloader:false}));
export var lista=function(){var __accu0__=[];for(var x of db)__accu0__.append(x);return __accu0__}();
export var indices_zero=numpy.arange(len(array))[bindices_zero];
(function(){var __accu0__=[];for(var n=0;n<len(trials);n++)__accu0__.append(1*conversions[n]/trials[n]);return __accu0__})();
self._dealer=dealer;
func(...args,__kwargtrans__(kwargs));
shutil.copyfileobj(key,rsObject.stream());
tk.Tk.__init__(self,...args,__kwargtrans__(kwargs));
- -Commentasfkjaskfj;
var __left0__=plt.subplots(1,1);var fig=__left0__[0];var ax=__left0__[1];
resultqueue.join();
np.isnan(a[2]).nonzero();
export var cells=function(){var __accu0__=[];for(var n of B.nodes())if(!__in__(n[0],nodes))__accu0__.append(n);return __accu0__}();
setattr(obj.a,p,value);
add_something(l);
plt.show();
var res=function(){var __accu0__=[];for(var s of range(start,stop,step))__accu0__.append(list(range(s,s+step+1,step)));return py_iter(__accu0__)}();
app.MainLoop();
py_typeof(tuple([]));
L.py_sort();
print(contruct.__version__);
print(m.group());
array([[100,200],[255,255]],__kwargtrans__({dtype:uint16}));
print(json.dumps(parsed,__kwargtrans__({indent:4,sort_keys:true})));
export var Av=np.hstack(A);
ent7.grid(__kwargtrans__({row:2,column:1}));
list(zip(...function(){var __accu0__=[];for(var k of py_keys)for(var n of d[k])__accu0__.append(d[k][n]);return py_iter(__accu0__)}()));
MyObject.objects.bulk_create(my_objects);
var value=models.CharField(__kwargtrans__({max_length:240,db_index:true}));
np.mean([0,1,2]);
theclass.run();
signal.signal(signal.SIGINT,s);
var u=np.random.random(100);
(function(){var __accu0__=[];for(var [key,val]of itertools.groupby(lst,function __lambda__(x){return x.__getslice__(0,5,1)}))__accu0__.append(tuple([key,list(val)]));return __accu0__})();
self.x.pack(__kwargtrans__({side:LEFT}));
find_majority([-1,-1,0,0,0]);
print(dom.toxml());
sorted(xs,__kwargtrans__({key:len}));
(function(){var __accu0__=[];for(var elem of lst)__accu0__.append(func(elem));return __accu0__})();
ax.add_patch(polA);
ax.add_patch(polB);
out.close();
df.head(5);
df.iloc.__getitem__([tuple([0,null,1]),0]);
pylab.show();
my_category.category.all();
window.unfullscreen();
ax.xaxis.set_ticks_position(direction);
plt.figure();
lxml.html.tostring(root);
os.unlink(f.py_name);
excel.Quit();
(A+B).min(__kwargtrans__({axis:1}));
connection.close();
task.AsyncResult(task.request.id).state;
var numbers=list(map(int,s.py_split()));
df;
model.fit_transform(X,y);
list(range(0,n+1,2));
main();
time.sleep(1);
results.py_sort(__kwargtrans__({key:function __lambda__(x){return x[1]}}));
listmatrixMap(function __lambda__(val,r,c){return tuple([tuple([r,c]),val])},a,__kwargtrans__({indices:true}));
yaml.dump(self.__dict__);
var parser=argparse.ArgumentParser();
app.run();
ax.set_yticklabels(row_labels,__kwargtrans__({minor:false}));
diff_file.write(difftext);
diff(unwrap(phase(hilbert(filtered_data))));
data.depth*len(data.getbands());
t.start();
ntxt.write(rline);
server.quit();
QtGui.QApplication.sendEvent(clipboard,event);
pd.groupby(b,__kwargtrans__({by:[b.index.month,b.index.year]}));
some_file.seek(0);
ssh_client.connect(host,__kwargtrans__({username:user,password:password}));
df[~df.index.isin(dropThis)];
token.save(__kwargtrans__({force_insert:true}));
browser.close();
strange_sandwich();
(function(){var __accu0__=[];for(var i=0;i<n;i++)__accu0__.append(lst.__getslice__(indices[i],indices[i+1],1));return __accu0__})();
var idx=np.argsort(a[1]);
export var MyClass=funkyDecorator(MyClass);
pygame.display.flip();
self.f.make_a_doo();
var b=copy.deepcopy(a);
df.round();
self._rooms=dict();
itertools.chain(...zip(...iters));
sizer.Add(notebook,1,wx.EXPAND);
list();
var s=urllib.request.urlopen(form_url);
os.getpid();
set([4,5,6]);
output.append(acids[0]);
np.diff(m.tocsc().indptr);
yacc.errok();
print(locals());
print(repr(tokzr_SENT(inp1)));
plt.xlim(np.log10(ilim));
print(ET.tostring(f));
f.write(ip);
main();
func(...parameters);
main();
app.run();
label.pack();
(function(){var __accu0__=[];for(var i of py_items)if(C)__accu0__.append(a);return __accu0__})();
fo.close();
plt.show();
export var encodedWindow=base64.b64encode(s.getvalue());
session.add(stud);
var data=json.loads(response.get_data(__kwargtrans__({as_text:true})));
logger.setLevel(logging.DEBUG);
print(item);
foo(...params);
df.sort_index(__kwargtrans__({inplace:true}));
logger.setLevel(level);
p.start();
globals[key]=value;
df[~df.field.isin(ban_field)];
plt.show();
QApplication.restoreOverrideCursor();
var ax2=fig.add_subplot(1,2,2);
py_items.remove(item);
db.session.commit();
installer.uninstall();
plt.show();
dict(heapq.nlargest(5,list(names_dict.py_items()),__kwargtrans__({key:itemgetter(1)})));
arr.__getitem__([idx.__getitem__([tuple([0,null,1]),0]),idx.__getitem__([tuple([0,null,1]),1])]);
df.apply(function __lambda__(x){return(x-np.mean(x))/(np.max(x)-np.min(x))});
main();
self.data[column].add(row);
df.isnull().sum();
GL.glOrtho(-1,1,-1,1,-1,1);
export var service=__create_service();
widget.show();
print(A.T);
b.swapaxes(0,-1);
stream.Close();
export var escaped=re.escape(a_string);
C.objects.create(__kwargtrans__({a:a1,b:b}));
inputElement.submit();
os.unlink(tmpfile_name);
export var sorted_files=sorted(all_files,__kwargtrans__({key:os.path.getsize}));
print(G.nodes());
export var S=[5,5];
var data=re.findall(pattern,line);
root.mainloop();
var parser=etree.XMLParser(__kwargtrans__({remove_blank_text:true,strip_cdata:false}));
datetime.datetime.fromtimestamp(0)+datetime.timedelta(__kwargtrans__({seconds:2047570047}));
var ax=fig.add_subplot(111);
print(df);

self.filelist.append(zinfo);
mlab.axes();
gtk.main();
self.setCentralWidget(self.button);
py_typeof(a);
export var xs=dict(function(){var __accu0__=[];for(var i=0;i<2;i++)__accu0__.append(tuple([i,[]]));return py_iter(__accu0__)}());
var newprefix=prefix.__getslice__(0,null,1);
lstbox.grid(__kwargtrans__({column:0,row:0,columnspan:2}));
map(function __lambda__(){var x=tuple([].slice.apply(arguments).slice(0));return sum(x)},list(range(10)),list(range(10,0,-1)),list(range(0,20,2)));
wx.Button.__init__(self,...a,__kwargtrans__(k));
var matrix=np.random.randint(2,__kwargtrans__({size:tuple([row,col])}));
development.py;
p.wait();
export var low_bit_list=function(){var __accu0__=[];for(var byte of bytearray(fh.read()))__accu0__.append(byte&1);return __accu0__}();
export var rev_sorted=sorted(paired,__kwargtrans__({reverse:true,key:function __lambda__(x){return x[1]}}));
f.write(line);
pool.close();
var ax=fig.add_subplot(111);
sum(map(doSomething,originalList),[]);
result.append(func(e));
self.Bind(wx.EVT_BUTTON,self.OnClick,b);
exit(0);
tuple([[false,false,false,false,false]]);
export var queue=deque([]);
tk.Tk.__init__(self,...args,__kwargtrans__(kwargs));
__init__.py;
self.buttonStart.clicked.connect(self.worker.run);
Base.metadata.create_all(__kwargtrans__({bind:db.engine}));
foo(n-1)+[1];
connection.start();
webdriver.ActionChains(driver).move_to_element(el).click(el).perform();
app.run();
export var m1=np.zeros(tuple([50,50]));
driver.quit();
export var year=datetime.datetime.today().year;
f.writelines(file_lines);
np.where(self==value);
root.mainloop();
session.commit();
y[0]=0;
print(response.read());
time.sleep(10);
export var t0=math.pow(math.tan(phi1),2);
searchfile.close();
(function(){var __accu0__=[];for(var xi of my_list)__accu0__.append(add_number(xi));return __accu0__})();
ax.add_line(line_2);
sys.path;
plt.gca().add_patch(rect);
f.close();
var __left0__=np.array(M.T);var A=__left0__[0];
sys.path.py_pop(0);
export var stream=sys.argv.__getslice__(1,null,1)&&open(sys.argv[1])||sys.stdin;
int(bin(n).__getslice__(0,1,-1),2);
var doc=etree.parse(url);
optimize.fmin(func,__kwargtrans__({x0:[y_estimate,z_estimate],args:data}));
export var elm=driver.find_element_by_xpath(expression);
var result=(Math.pow(x.sum(),2)-x.dot(x))/2;

session.query(Workflow).py_get(id);
filtered_output.write(line);
psutil.cpu_times();
msglist.append(hextotal.__getslice__(start,start+4096,1));
data.write(c+n);
b1.insert(END,item);
x.append(tuple([i,j]));
dict(zip(fields,row));
true;
test.__getitem__([tuple([0,null,1]),[0]]);
var y=np.array([-1,1,1,1,-1,1]);
controller2.py;
controllerapi.py;
utilities.py;
extfoo.py;
var array=np.ones(tuple([n,n]));
var words=function(){var __accu0__=[];for(var line of file_a)__accu0__.append(line.strip());return set(__accu0__)}();
Cmd.cmd.__func__();
Base.metadata.create_all(engine);
var data=pd.concat([data,stock_data],__kwargtrans__({axis:1}));
self.window.fullscreen();
var data=cursor.fetchone()[0];
math.degrees(math.atan(1.18));
Category.objects.py_get(__kwargtrans__({pk:2})).get_descendants(__kwargtrans__({include_self:true}));
client.close();
self.root.mainloop();
cv.SetCaptureProperty(video2,cv.CV_CAP_PROP_FRAME_WIDTH,800);
print(open(my_module.__file__).read());
L.py_pop(i);
self.image.show();
var text=Tkinter.Text();
fin.close();
df.loc[g.groups[1]];
(function(){var __accu0__=[];for(var x of L)__accu0__.append(x.__getslice__(0,index,1)+x.__getslice__(index+1,null,1));return __accu0__})();
s.groupby(s.index).first();
(function(){var __accu0__=[];for(var x of seq)if(!(__in__(x,seen)||seen_add(x)))__accu0__.append(x);return __accu0__})();
dt.py_replace(__kwargtrans__({microsecond:int(parts[1])}));
plt.gca().add_artist(mynewline);
sys.maxunicode;
var new_list=function(){var __accu0__=[];for(var foo of foos)if(foo.location==2)__accu0__.append(foo);return __accu0__}();
var __left0__=plt.subplots(__kwargtrans__({figsize:tuple([8,8])}));var fig=__left0__[0];var ax=__left0__[1];
f.seek(0,0);
dict_of_lists[key].append(val);
(function(){var __accu0__=[];for(var _=0;_<n;_++)__accu0__.append(py_next(generator));return __accu0__})();
ax.set_xticks(np.linspace(0,2*np.pi,5));
ax1.xaxis.set_major_locator(xloc);
x.append(sublist[0]);
var L4=list(function(){var __accu0__=[];for(var item of L1)if(!__in__(item,unwanted))__accu0__.append(item);return py_iter(__accu0__)}());
time.sleep(duration);
foo.module_method();
__in__(os.path.normpath(path1),function(){var __accu0__=[];for(var p of list_of_paths)__accu0__.append(os.path.normpath(p));return py_iter(__accu0__)}());
list(chain.from_iterable(zip(a,py_reversed(a)))).__getslice__(0,len(a),1);
np.finfo(np.float).eps;
self.finish();
arr[arr.__getitem__([tuple([0,null,1]),0])>=xmin&arr.__getitem__([tuple([0,null,1]),0])<=xmax];
Thaidump(text);
plt.show();
a[0]=np.nan;
var data=function(){var __accu0__=[];for(var [p,b]of list(rays_starters.py_items()))__accu0__.append(tuple([b[1],p,b[0],b[2]]));return __accu0__}();
export var is_main_user=models.BooleanField(__kwargtrans__({py_default:false}));
plt.show();
image.show();
print(term.move(term.height-1,0));
a.__getitem__([i1,i2,i]);
msvcrt.get_osfhandle(a.fileno());
pd.Series(np.nanmean(val.reshape(-1,k),__kwargtrans__({axis:1})));
msg.send();
os.makedirs(final_path);
time.sleep(.01);
math.factorial(n);
(function(){var __accu0__=[];for(var i of allsets)__accu0__.append(i-set.union(...function(){var __accu1__=[];for(var j of allsets)if(j!=i)__accu1__.append(j);return __accu1__}()));return __accu0__})();
text.pack();
dict(function(){var __accu0__=[];for(var [k,v]of d.py_items())__accu0__.append(tuple([k.lower(),v]));return py_iter(__accu0__)}());
df.reset_index(__kwargtrans__({inplace:true}));
s.groupby(idx).mean();
module.myif.__init__(self);
cur.execute(query,parameters);
set(tuple1).issubset(tuple2);
sum(itervalues(d));
var instance=YourModel(__kwargtrans__({py_name:value,image:self.get_image_file()}));
var value=np.ctypeslib.as_array(value).tolist();
r.json();
export var fifth_period_slope=np.diff(y.__getslice__(0,null,5))/np.diff(x.__getslice__(0,null,5));
var tree=scipy.spatial.cKDTree(array_of_coordinates);
abs(a-b)<=max(rel_tol*max(abs(a),abs(b)),abs_tol);
dict(d2,__kwargtrans__(d1));
var df2=pd.DataFrame(__kwargtrans__({index:df1.index.copy()}));
var image=Image.open(file);
var df=df[df.line_race!=0];
np.unravel_index(np.ravel_multi_index(tuple([10,1,2]),arr1.shape),arr2.shape);
time.sleep(10);
all(function(){var __accu0__=[];for(var element of data)__accu0__.append(!element);return py_iter(__accu0__)}());
min(function(){var __accu0__=[];for(var s of lst)if(isinstance(s,str))__accu0__.append(s);return __accu0__}());
export var list_of_pixels=list(im.getdata());
var root=tk.Tk();
var id=Column(Integer,__kwargtrans__({primary_key:true}));
plt.show();
var arr=np.array(arr_ip,__kwargtrans__({dtype:dtyp}));
[[[1]][[2]]];
logger.setLevel(logging.DEBUG);
sys.exit(app.exec_());
df.sum();
signal.signal(signal.SIGINT,handler);
var a=np.empty(tuple([15]));
mymodel.objects.filter(__kwargtrans__({pk:a[i]})).py_update(__kwargtrans__({attr:i}));
(function(){var __accu0__=[];for(var [i,v]of enumerate(a))if(__in__(v,b_set))__accu0__.append(i);return __accu0__})();
print(py_name.title());
df_both.swaplevel(0,1).sort_index().swaplevel(0,1);
var x=list(y);
self.pot.temperatureRaisedSignal.connect(self.temperatureWarning);
plt.show();
new set([new set([post.text|markdown])]);
self.user.username;
self.get_solr_results();
df;
widget.setWindowFlags(QtCore.Qt.Widget);
print(et.tostring(tree));
plt.show();
button.show();
a2.append(float(s));
[0][0][2];
repo.push();
lexobj.writetab(lextab,outputdir);
export var client=paramiko.SSHClient();
(function(){var __accu0__=[];for(var i of indices)__accu0__.append(lst[i]);return py_iter(__accu0__)})();
resolve(request.path).app_name;
b[a]=10;
f.close();
len(function(){var __accu0__=[];for(var x of a_list)if(x[0]==1)__accu0__.append(x);return __accu0__}())>0;
fig.subplots_adjust(__kwargtrans__({bottom:.2}));
ax2.set_xticklabels(new_labels);
plt.imshow(Z);
datetime.utcfromtimestamp(timestamp1);
plt.show();
var args=parser.parse_args(sys.argv.__getslice__(1,null,1));
(function __lambda__(){return 1})==function __lambda__(){return 1};
var g=nx.Graph();
foo.x;
print(sum(function(){var __accu0__=[];for(var i of l)__accu0__.append(i*i);return py_iter(__accu0__)}()));
print(max(function(){var __accu0__=[];for(var [a,b]of pairwise(py_values))__accu0__.append(b-a);return py_iter(__accu0__)}()));
plt.legend();
w.show_all();
pcap_lookupnet(dev,ctypes.byref(mask),ctypes.byref(net),errbuf);
server.serve_forever();
setattr(cls,attr_name,prop);
list(nx.weakly_connected_component_subgraphs(G));
ax0b.plot(x,y);
ax0c.plot(x,y);
mysignal.connect_via(app)(print_howdy);
var fig=plt.figure();
app.run();
var root=Tk();
logging.Handler.__init__(self);
var serializer=NewModelSerializer(__kwargtrans__({data:request.data,context:context}));
win.show_all();
zip(...elements);
any(function(){var __accu0__=[];for(var d of lod)__accu0__.append(__in__(1,d));return py_iter(__accu0__)}());
urlparse(request.url).query;
dict([[tuple([1,1]),something]]);
post_save.connect(create_user_profile,__kwargtrans__({sender:User}));
process.kill();
print(y.shape);
var __except0__=py_TypeError(node);__except0__.__cause__=null;throw __except0__;
func(...args,__kwargtrans__(kw));
print(aiff_file.nframes/float(aiff_file.samplerate));
m.toarray();
d.py_setdefault(y,[]).append(x);
pd.DataFrame(function(){var __accu0__=[];for(var n of wordlist)__accu0__.append([n,c.apply(function __lambda__(x){return x.py_get(n,0)})]);return dict(__accu0__)}());
var session=requests.Session();
fid.close();
[0]*A+[1]*B;
binascii.hexlify(bytearray(array_alpha));
wavf.write(out_wav,fs,out_data);
print(p.stdout.read());
(function(){var __accu0__=[];for(var item of lyst)__accu0__.append(item?car.py_pop(0):a.py_pop(0));return __accu0__})();
dic[g][y]=df[df[Gender]==g&df[Year]==y];
validate(yaml.load(bad_instance),yaml.load(schema));
var new_list=function(){var __accu0__=[];for(var v of a)if(!__in__(v,b))__accu0__.append(v);return __accu0__}();
export var dict_out=function(){var __accu0__=[];for(var [i,iterID]of enumerate(indices))__accu0__.append([unq[i],iterID]);return dict(__accu0__)}();
app.start();
var form=PostForm(__kwargtrans__({obj:post}));
sizer.Add(self.canvas,1,wx.EXPAND);
np.put(out,np.ravel_multi_index(idx.T,dims),vals);
var cb=plt.colorbar(sc,__kwargtrans__({ax:ax1,aspect:10,format:Myfmt()}));
gs1.py_update(__kwargtrans__({wspace:.025,hspace:.05}));
yylex();
admin.site.register(User,UserProfileAdmin);
var row=cursor.fetchmany(10);
root.mainloop();
sorted(a)==sorted(b);
math.floor(math.log(n,2))+1;
f.write(sio.getvalue());
num_fatals+=1;
server.run();
export var func=yad(list_of_decorators)(func);
blogpost.tags.__setslice__(0,null,null,new_tags);
writer.writerow(row);
isinstance(amodule,__builtins__.__class__);
HTMLParser.HTMLParser.__init__(self);
var ax=fig.add_subplot(111,__kwargtrans__({polar:true}));
export var scatter=ax.scatter(np.random.randn(100),np.random.randn(100));
QtGui.QFrame.__init__(self,parent);
print(m.group(1).rstrip());
var __left0__=function(){var __accu0__=[];for(var i of[1,4,10])__accu0__.append(lst[i]);return __accu0__}();var one=__left0__[0];export var four=__left0__[1];export var ten=__left0__[2];
gtk.main();
print(hashlib.sha512(password).hexdigest());
cv2.__version__;
qs.filter(map(operators.or_,function(){var __accu0__=[];for(var [k,v]of list(request.GET.py_items()))__accu0__.append(Q(__kwargtrans__({k:v})));return __accu0__}()));
L[idx].append(item);
cashflow[-1]+=100;
ax.get_yaxis().set_minor_locator(mpl.ticker.AutoMinorLocator());
runner.run();
np.mean([0,0,1]);
file.seek(0);
urllib.request.urlretrieve(url,filename);
print(tuple([word,count]));
s1.reset_index();
var b=a.__getslice__(0,null,1);
list(unique_everseen(lst,__kwargtrans__({key:len})));
isinstance(obj,collections.Callable);
df.columns=new_cols;
time.sleep(1);
time.sleep(1E3);
self.send_response(200);
export var oath_access_token=utils.get_application_access_token(app_id,app_secret);
root.columnconfigure(tuple([0,2]),__kwargtrans__({weight:1}));
var element=max(myset);
(function(){var __accu0__=[];for(var x of myTuple)if(foo(1,x,4))__accu0__.append(x);return __accu0__})();
(function(){var __accu0__=[];for(var elem of myList)__accu0__.append(elem+func());return __accu0__})();
d[k].append(v);
var results=sorted(list(results_dict.py_items()),__kwargtrans__({key:function __lambda__(x){return x[1]}}));
db.session.add(post);
self.y=function(){var __accu0__=[];for(var i=0;i<1;i++)__accu0__.append(self.x);return __accu0__}();
ax.plot_surface(X,Y,Z);
var nodes=function(){var __accu0__=[];for(var _=0;_<100;_++)__accu0__.append(node());return __accu0__}();
var __left0__=curve_fit(function __lambda__(x,a){return func(x,a,b)},x1,x2);var popt=__left0__[0];var pcov=__left0__[1];
User.objects.py_get(__kwargtrans__({id:uid}));
plt.gcf().subplots_adjust(__kwargtrans__({hspace:.5,wspace:.5}));
plt.show();
msvcrt.setmode(sys.stdin.fileno(),os.O_BINARY);
export var COMPRESS_ENABLED=true;
cmp(A[adiff],b[bdiff]);
network.draw();
np.sqrt((w*q*q).sum());
np.allclose(np.dot(A,B),A*sparse_B);
threading.Thread.__init__(self);
(function(){var __accu0__=[];for(var [k,grp]of groups)__accu0__.append(function(){var __accu1__=[];for(var [i,j]of grp)__accu1__.append(df.columns[j]);return __accu1__}());return __accu0__})();
foo(...x,__kwargtrans__(y));
time.sleep(1);
session.commit();
export var gs1=gridspec.GridSpec(4,4);
FOUT.close();
root.mainloop();
var ax1=fig.add_subplot(111);
ax.minorticks_off();
df1.index&df2.index;
print(x.apply(function __lambda__(y){return function(){var __accu0__=[];for(var a of y)if(pd.notnull(a))__accu0__.append(a);return __accu0__}()}));
(function(){var __accu0__=[];for(var vec of x)__accu0__.append(Math.pow(sum(function(){var __accu1__=[];for(var i of vec)__accu1__.append(i*i);return __accu1__}()),.5));return __accu0__})();
var proc=subprocess.Popen(cmd,__kwargtrans__({stdout:subprocess.PIPE,env:initial}));
(function(){var __accu0__=[];for(var [key,value]of sorted(dictobj.py_items()))__accu0__.append(value);return py_iter(__accu0__)})();
export var isodd=function __lambda__(x){return __mod__(x,2)!=0};
list.__setitem__(self,index,value);
d.py_sort(__kwargtrans__({key:itemgetter(0)}));
pd.DataFrame(function(){var __accu0__=[];for(var n of wordlist)__accu0__.append([n,c.apply(function __lambda__(x){return x[n]})]);return dict(__accu0__)}());
var n=n+1/Math.pow(10,len(repr(n))-2);
export var hist=History.objects.py_get(__kwargtrans__({pk:1}));
(function(){var __accu0__=[];for(var [x,y]of groupby(L))if(sum(function(){var __accu1__=[];for(var i of y)__accu1__.append(1);return py_iter(__accu1__)}())<2)__accu0__.append(x);return __accu0__})();
b.__setslice__(1,null,null,b.__getslice__(1,null,1)-b.__getslice__(0,-1,1));
var driver=webdriver.Chrome(__kwargtrans__({chrome_options:opts}));
df;
ax.xaxis.set_visible(false);
np.delete(x,1,1);
conn.close();
pylab.show();
driver.py_get(url);
var a=np.hstack(tuple([a,b]));
var d=function(){var __accu0__=[];for(var [k,v]of groupby(tags,__kwargtrans__({key:function __lambda__(x){return x[0]}})))__accu0__.append([k,list(v)]);return dict(__accu0__)}();
-tox;
fsizer.Add(self.filtr,1,wx.EXPAND);
tfile.seek(0);
print(chr(i));
export var li2=list(itertools.chain(...li));
var parser=argparse.ArgumentParser();
export var avg_rating=db.FloatProperty();
os.dup2(w,sys.stderr.fileno());
[numpy.all(-2),numpy.all(-1),numpy.all(0),numpy.all(1),numpy.all(2)];
export var date_parser=pd.datetools.to_datetime();
sorted(population,__kwargtrans__({key:keyfun}));
td_series.astype(pd.Timedelta).apply(function __lambda__(l){return l.days});
GPIO.output(4,true);
formset.save_m2m();
var soup=BeautifulSoup(page);
var pattern=re.compile(re.escape(motif));
id(df._data.blocks[0].py_values);
writer.writerow(row);
df.loc[df.isin([1,2]).any(1)];
os.path.join(base_path,relative_path);
array[mask]=255;
sftp.close();
print(temp_df.apply(function __lambda__(x){return x-temp_arr[x.index]},__kwargtrans__({axis:1})));
(function(){var __accu0__=[];for(var [k,v]of list(d1.py_items()))if(v==m)__accu0__.append(k);return __accu0__})()[0];
cmds.ls(__kwargtrans__({sl:1,fl:1}));
pygame.draw.circle(surf2,tuple([200,0,0,100]),tuple([100,100]),100);
var writer=csv.writer(f);
exit();
var ax1=fig.add_subplot(111);
var s=s.__getslice__(117,null,1);
b.extend(map(ord,s));
var text=nltk.Text(tokens);
run();
subprocess.call([PLAYERPATH,FILEPATH]);
yaml.add_representer(OrderedDict,represent_ordereddict);
ax.imshow(im);
(function(){var __accu0__=[];for(var p of PlayerList)__accu0__.append(float(p[1]+p[2])/2);return __accu0__})();
main();
print(br.response().read());
self.create(request,...args,__kwargtrans__(kwargs));
all(starmap(lt,zip(a,b)));
signal.pause();
var y=list(x);
print(function(){var __accu0__=[];for(var [x,y]of l)__accu0__.append(y-x);return __accu0__}());
var df=df[colnames];
var results=function(){var __accu0__=[];for(var f of filenames)__accu0__.append(do_smth(slurp_file(f)));return __accu0__}();
print(tuple([k,v]));
plt.colorbar(pc,__kwargtrans__({cax:axes}));
math.isnan(a);
df.iloc[sort_slice];
Base.metadata.create_all(engine,__kwargtrans__({checkfirst:true}));
plt.plot([0,1]);
sys.stdout.close();
print(zip(...function(){var __accu0__=[];for(var ls of data)__accu0__.append(zip(itertools.repeat(ls[0]),ls.__getslice__(1,null,1)));return py_iter(__accu0__)}()));
ax.scatter(xs,ys,zs);
self.response.out.write(xml);
print(list(d.py_keys()));
formset.save();
neuron.draw();
export var new_im_vec=im.swapaxes(0,2).swapaxes(1,2).flatten();
self.textEdit.setPlainText(mytext);
var image=Image.open(io.BytesIO(bytes));
df.rdd.map(function __lambda__(r){return r.zip_code}).collect();
server.quit();
time.sleep(1);
tf.div(x,y);
print(function(){var __accu0__=[];for(var [i,_]of groupby(id))__accu0__.append(data[id==i].max());return __accu0__}());
fh.close();
sys.path.append(path);
df.iloc.__getitem__([tuple([0,null,1]),tuple([1,null,1])]);
f.write(line);
a.py_sort(__kwargtrans__({key:len}));
var soup=BeautifulSoup(data);
var time=datetime.strptime(time,DATETIME_FORMAT);
self.ax.figure.canvas.draw();
f.close();
window.add(vbox);
var s=socket.socket(socket.AF_INET,socket.SOCK_RAW,socket.IPPROTO_IP);
plt.pause(.001);
export var dict2=function(){var __accu0__=[];for(var [key,value]of list(dict1.py_items()))if(__in__(key,required_fields))__accu0__.append([key,value]);return dict(__accu0__)}();
func(...args,__kwargtrans__(kwargs));
df.comments.dropna();
var img=f.read();
groups.sortlevel([0,2],__kwargtrans__({sort_remaining:false}));
var pool=Pool(__kwargtrans__({processes:2}));
warnings.resetwarnings();
imshow(skeleton,__kwargtrans__({cmap:cm.Greys_r}));
var q=Post.query.options(db.joinedload(Post.tags)).all();
yacc.errok();
float(sum(lst.__getslice__(len(lst)/2-1,len(lst)/2+1,1)))/2;
s[s.index.dayofweek<5];
df.applymap(function __lambda__(x){return x===np.nan?tuple([0,0]):x});
self.mthread.start();
print(zip(...lists));
browser.py_get(url);
print(soup.html.string);
var cursor=conn.cursor();
var timestamp=(aware-datetime(1970,1,1,__kwargtrans__({tzinfo:pytz.utc}))).total_seconds();
plt.tight_layout();
time.sleep(1);
eyear1.grid(__kwargtrans__({row:1,column:1}));
layout.removeWidget(self.widget_name);
mc.__dict__;
var draw=ImageDraw.Draw(im);
ax.patch.set_alpha(.5);
self.__getattribute__(py_name);
df;
df2;
plt.figure();
print(list(words));
[1][2][0];
plt.show();
var a=numpy.array(a);
export var time_t=time.mktime(my_date.timetuple());
pylab.show();
bin(int(my_hexdata,scale)).__getslice__(2,null,1).zfill(num_of_bits);
print(repr(data));
var s=chr(i);
plt.ylim(tuple([-5,5]));
export var random_day=date.fromordinal(random.randint(start_date,end_date));
func(...args,__kwargtrans__(kwargs));
df.tail(1).T.assign(__kwargtrans__({passes:function __lambda__(x){return x.iloc.__getitem__([tuple([0,null,1]),0])>1}}));
f();
locale.setlocale(locale.LC_ALL,lang);
(counts==1).all(__kwargtrans__({axis:1}));
fig.autofmt_xdate();
var df=pd.DataFrame.from_dict(data);
f();
plt.show();
ax.set_ylim(0,m.shape[0]);
a.shape;
session.add(inst);
Representative.objects.create(__kwargtrans__(dict(zip(fields,row))));
turtle.forward(100);
a.tolist();
self.sprockets.add(spr);
print(ord(s[0]));
data.py_get(num)||data[min(list(data.py_keys()),__kwargtrans__({key:function __lambda__(k){return abs(k-num)}}))];
model.fit(X,y);
table.cols.key.createIndex();
p.terminate();
print(char,char.isalpha());
printRecurrence();
ax.axis(tuple([x1,x2,y1-1,y2+1]));
square(double(Maybe(5)));
var driver=webdriver.Firefox(__kwargtrans__({firefox_binary:binary}));
ax.yaxis.set_major_formatter(formatter);
dict(enumerate(grouper(numbers),1));
var x=function(){var __accu0__=[];for(var i=0;i<4;i++)__accu0__.append([]);return __accu0__}();
var f=open(fd,__kwargtrans__({closefd:true}));
bar.py_name;
(function(){var __accu0__=[];for(var v of list(d.py_values()))__accu0__.append(id(v));return __accu0__})();
problems;
[1][1][2];
[0][1][1];
mydict[index]+=1;
moobar();
print(json.dumps(data,__kwargtrans__({indent:4})));
df[g.cumcount()==n-1];
dict(function(){var __accu0__=[];for(var [k,v]of list(r.py_items()))__accu0__.append(tuple([k,dict(v)]));return py_iter(__accu0__)}());
plt.show();
(function(){var __accu0__=[];for(var words of lst)for(var word of words.py_split())__accu0__.append(word);return __accu0__})();
ax.set_rlim([0,5]);
session.add(feed);
User.py_name.property.columns[0].py_metatype.length;
var r=requests.py_get(url,__kwargtrans__({params:payload_str}));
i+=1;
list(filter(my_filter,my_iterable));
image.save(savepath);
print(pd.concat([df,pd.DataFrame(D,__kwargtrans__({index:df.index}))],__kwargtrans__({axis:1})));
np.random.rand(5)<.8;
a.tolist();
export var hash=hashlittle(hashstr,0);
chain.apply_async();
fd.close();
print(f.getvalue());
t.start();
ent5.grid(__kwargtrans__({row:4,column:1}));
var data=dict({});
1-scipy.stats.hypergeom.pmf(0,N,M,Q);
print(r.json());
(function(){var __accu0__=[];for(var i of set(mylist))__accu0__.append(tuple([i,mylist.count(i)]));return __accu0__})();
__init__.py;
print(func());
lst.__setslice__(0,null,null,function(){var __accu0__=[];for(var v of lst)if(pred(v))__accu0__.append(v);return py_iter(__accu0__)}());
time.sleep(.5);
var x=list(itertools.islice(list(d.py_items()),0,4));
proc.stdout.close();
unittest.main();
image.__setitem__([mask.__getslice__(0,null,1)==0],chex.__getitem__([mask.__getslice__(0,null,1)==0]));
wr.writerow(list1);
(function(){var __accu0__=[];for(var word of list)for(var subword of word.py_split())__accu0__.append(subword);return __accu0__})();
self.thisptr.myBMethod(dereference(a.thisptr),getAMethod());
export var data_line=function(){var __accu0__=[];for(var i of good_cols)__accu0__.append(data_line[i]);return py_iter(__accu0__)}();
m.group(1);
var n=np.clip(n,minN,maxN);
ax.set_xticklabels(column_labels,__kwargtrans__({minor:false}));
export var gp1=[2,6,9];
spherical_dist(locations_1[0],locations_2[0]);
var __except0__=NotImplementedError;__except0__.__cause__=null;throw __except0__;
f2.write(lines[i+1]);
plt.scatter(_x,_y,__kwargtrans__({marker:_s,c:c}));
L[1].__getslice__(0,null,1);
inset.xaxis.set_tick_params(__kwargtrans__({labelsize:INSET_TICK_FONTSIZE}));
tuple(function(){var __accu0__=[];for(var [x,y]of zip(xs,ys))__accu0__.append(x+y);return py_iter(__accu0__)}());
(function(){var __accu0__=[];for(var i of range(0,len(value),n))__accu0__.append(value.__getslice__(i,i+n,1));return py_iter(__accu0__)})();
(function(){var __accu0__=[];for(var [v,i]of sorted(function(){var __accu1__=[];for(var [i,v]of enumerate(x))__accu1__.append(tuple([v,i]));return py_iter(__accu1__)}()))__accu0__.append(i);return __accu0__})();
var ws=base.add_sheet(k.upper());
mycanvas.pack(__kwargtrans__({fill:BOTH,expand:YES}));
mylist.remove(min(mylist));
img.size;
np.broadcast(x,y,z).shape;
var cols_to_use=df2.columns-df.columns;
find_majority([1,1,-1,-1,0]);
(function(){var __accu0__=[];for(var uc of udata)__accu0__.append(ord(uc));return __accu0__})();
plt.legend(handles,labels);
twitterDataFile.close();
self.panel.SetSizer(sizer);
np.concatenate(function(){var __accu0__=[];for(var k of x)__accu0__.append(a.__getslice__(0,k,1));return __accu0__}());
time_list[np.arange(5,7)];
lst.append(4);
export var image_data_blue=image_data.__getitem__([tuple([0,null,1]),tuple([0,null,1]),2]);
var b=a.copy();
print(line);
pprint(a);
get_proc_name();
var l=list(map(function __lambda__(x){return f(__kwargtrans__({indices:x}))},itertools.product(x,y,z)));
print(checktype(i));
(function(){var __accu0__=[];for(var x of full_list)if(!__in__(x,s))__accu0__.append(x);return py_iter(__accu0__)})();
sorted(l,__kwargtrans__({key:function __lambda__(x_y){return tuple([-x_y[1],x_y[0]])}}));
ax.set_ylim(0,5);
answer[pk].append(dict([[sk,L[i][1]]]));
var row=dict(zip(list(row.py_keys()),row));
[2,0,1,0,1,0];
index_list.append(last_index);
csv_file.writerows(mylist);
export var dec_num=int(oct_string,8);
self._reverse_mocks();
self.Bind(wx.EVT_RIGHT_UP,self.OnExit);
module_name.__file__;
np.array(avgDists).argsort().__getslice__(0,null,-1).__getslice__(0,n,1);
sys.stdout.write(line);
var fig=plt.figure();
name_in_module();
ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy());
export var jmag=np.array(jmah);
export var merged_dict=function(){var __accu0__=[];for(var k of py_keys)__accu0__.append([k,function(){var __accu1__=[];for(var d of dicts)__accu1__.append(d.py_get(k,np.nan));return __accu1__}()]);return dict(__accu0__)}();
Gtk.main();
self.ax.py_clear();
export var hxs=HtmlXPathSelector(response);
(function(){var __accu0__=[];for(var [v,k]of enumerate(albums_today))__accu0__.append([k,D[k]-v]);return dict(__accu0__)})();
itertools.combinations();
max(function(){var __accu0__=[];for(var [k,v]of flows.py_items())__accu0__.append(tuple([len(v),v,k]));return py_iter(__accu0__)}()).__getslice__(1,null,1);
tz.fromutc(utc_time);
transaction.commit();
result.append(message);
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
print(hex_to_datetime(s),dt);
array.__getslice__(i,i+size,1)+array.__getslice__(0,max(0,i+size-len(array)),1);
fcntl.flock(g,fcntl.LOCK_EX);
h.encode();
var t=threading.Thread(__kwargtrans__({target:get_url,args:tuple([q,u])}));
self.send_response(200);
var data=line.py_split();
print(2*math.asin(1));
export var letter_count=dict.fromkeys(string.ascii_lowercase,0);
pak.show2();
var value=a_lower[key.lower()];
export var digits=int(math.log10(n))+1;
signal.signal(signal.SIGINT,signal.SIG_DFL);
os.chdir(directory);
np.repeat(arr,rep.flat).reshape(2,-1);
var data=dict([[foo,foo_value],[bar,bar_value]]);
(function(){var __accu0__=[];for(var i of range(0,len(alist),sublen))__accu0__.append(alist.__getslice__(i,i+sublen,1));return __accu0__})();
self.py_name=py_name;
print(frame.f_lineno);
export var dtt=d.timetuple();
sys.exit(1);
tuple([point.x,point.y]);
var obj=MyModel.objects.create(__kwargtrans__({val:1}));
print(url);
print(m[0]);
self.ShowModal();
list(data.py_keys());
process_url(a);
jsonFile.write(json.dumps(data));
export var board2=[[1,0,1],[1,0,1],[0,1,0]];
self.assertEqual(yargs[0],yexpected);
var my_list=list(my_set);
[8,8,8,8,8,8,8,8,8,8];
self.main_app(environ,start_response);
pl.plot(X,Sine);
reactor.run();
ax1.plot(s1.index,s1);
p.communicate();
print(sys.builtin_module_names);
cur.execute(query,tuple([limit1,limit2]));
collatz(10);
var data=sys.stdin.read();
self.assertEqual(xargs[0],xexpected);
plot.colorbar(im,__kwargtrans__({cax:ax2}));
ax.set_ylim(-.5,1.5);
driver.set_window_size(1120,550);
app.logger.addHandler(file_handler);
jsonify(d);
self.redis=Redis();
L.py_sort();
isinstance(dict({}),dict);
sin(x)*cos(x);
s.rstrip(punctuation);
plt.show();
sys.stdout.flush();
new set([new set([request.user.pretty_username])]);
plt.show();
sp.sourceslist.save();
pd.DataFrame(X,__kwargtrans__({columns:v.get_feature_names(),index:grouped.index}));
var fig=plt.figure();
os.system(mycommand);
worker.start();
cmp(x,y);
os.chmod(path,511);
a.__setslice__(0,null,null,function(){var __accu0__=[];for(var x of b)__accu0__.append(tuple([x,mapping[x]]));return __accu0__}());
var soup=BeautifulSoup(html);
map(list,a);
signal.signal(signal.SIGINT,signal_handler);
sys.exit(12);
min(filtered,__kwargtrans__({key:function __lambda__(x){return x.last-x.first}}));
(function(){var __accu0__=[];for(var [i,x]of enumerate(a))if(__in__(x,list_duplicates(a)))__accu0__.append(i);return __accu0__})();
tk.Tk.__init__(self,...args,__kwargtrans__(kwargs));
zip(MONTHS,MONTHS);
var x=X.objects.py_get(__kwargtrans__({id:x.id}));
bisect.bisect_left(list_,item);
np.log(sample_df).diff();
some_list==sorted(some_list);
QApp().run();
e1.pack();
var res=func(...args,__kwargtrans__(kwargs));
var n=clamp(n,7,42);
export var ostream=StringIO(istream.read());
print(random.choice(data));
os.chdir(random.choice(function(){var __accu0__=[];for(var d of os.listdir(os.curdir))if(os.path.isdir(d))__accu0__.append(d);return __accu0__}()));
json.dumps(doc,__kwargtrans__({sort_keys:true,indent:4,py_default:json_util.py_default}));
subprocess.Popen(smart_cmd);
plt.xlim(tuple([-5,5]));
os.kill(2405,0);
export var some_object=klass();
b[indices]=a[indices];
export var end=datetime.time(1,0,0);
layout.addWidget(self.button);
print(map(function __lambda__(x,y){return abs(x-y)},l.__getslice__(1,null,1)+l.__getslice__(0,1,1),l));
plt.figure(__kwargtrans__({figsize:tuple([12,8])}));
self.after(1E3,self.countdown);
reshaped2.show();
my_list.py_sort();
var app=Flask(__name__);
var data=json.load(json_data);
screen.blit(temp_surf,tuple([0,0]));
df.groupby(Math.floor(np.arange(len(df))/10));
self.app(environ,custom_start_response);
print(list(get_week(datetime.datetime.now().date())));
plt.setp(ax.get_xticklabels(),__kwargtrans__({visible:false}));
__init__.py;
last_inner_append(x[-1],y);
self.driver.quit();
driver.py_get(url);
ax.xaxis.grid(true);
signal.signal(signal.SIGALRM,signal_handler);
var L=function(){var __accu0__=[];for(var x of L)__accu0__.append(x+[0]);return __accu0__}();
colorbar();
time.sleep(.1);
[2,2.0017];
app.debug=true;
client.put_file(dropbox_path,f);
sorted(function(){var __accu0__=[];for(var j=0;j<10;j++)for(var i=0;i<10;i++)if(j>i)__accu0__.append(tuple([i,j]));return __accu0__}());
df.xs(1);
print(f.bar);
var cursor=conn.cursor();
export var board1=[[1,0,1],[1,0,1],[0,0,1]];
temp.append(data.tolist());
app.MainLoop();
func_to_call();
pylab.show();
list(filter(bool,l));
dt.microsecond;
print(json.dumps(t,__kwargtrans__({cls:MyEncoder})));
self._numberButtons[i].clicked.connect(partial(self._number,i));
df2.apply(function __lambda__(x){return df2.loc.__getitem__([~x.isin(df1[x.py_name]),x.py_name])});
var df=df.sort_index(__kwargtrans__({axis:1}));
false;
logger.setLevel(logging.DEBUG);
plt.ylim(0,8);
export var BabyDataSet=zip(names,births);
btn5.grid(__kwargtrans__({row:4,column:0}));
(function(){var __accu0__=[];for(var r of x)if(!any(function(){var __accu1__=[];for(var s of y)__accu1__.append(__in__(s,r));return py_iter(__accu1__)}()))__accu0__.append(r);return __accu0__})();
client.set_options(__kwargtrans__({wsse:security}));
user.get_all_permissions();
counterpart.sendall(data);
print(Photo.objects.filter(__kwargtrans__({tags:t1})).filter(__kwargtrans__({tags:t2})).query);
reactor.run();
plt.show();
x>0?Math.floor((x-1)/10):0;
event.wait();
A-A.multiply(BisBigger)+B.multiply(BisBigger);
var id=Column(Integer,__kwargtrans__({primary_key:true}));
browser.quit();
(function(){var __accu0__=[];for(var k1 of d1)if(__in__(d1[k1],d2))__accu0__.append([k1,d2[d1[k1]]]);return dict(__accu0__)})();
db.session.commit();
(function(){var __accu0__=[];for(var idx of range(0,len(arr),2))__accu0__.append(arr.__getslice__(max(0,idx-1),idx+2,1));return __accu0__})();
np.where((x&x-1)==0);
local_dt.py_replace(__kwargtrans__({microsecond:utc_dt.microsecond}));
newgrid.append(function(){var __accu0__=[];for(var x of grid)__accu0__.append(x[i]);return __accu0__}());
ax.set_yticks([]);
enemy1-=punch;
func(...args,__kwargtrans__(kwargs));
var date=datetuil.parser.parse(string,__kwargtrans__({tzinfos:tzd})).astimezone(pytz.utc);
sess.run([init_op]);
engine.execute(createview);
ax0b.set_xticklabels([]);
seen.add(item.lower());
float_array.fromstring(input_file.read());
app.MainLoop();
self.grid_rowconfigure(1,__kwargtrans__({weight:1}));
export var pubkey=rsa.PublicKey(n,e);
timer.timeout.connect(self.move_towards);
var fig=plt.figure();
print(response.content);
df.columns=list(resoverall.py_keys());
reactor.run();
print(df2[[15,16,17,18,19,8]]);
texts[0].set_fontsize(4);
var fig=plt.figure(__kwargtrans__({figsize:tuple([xinch,yinch])}));
ws.cell(__kwargtrans__({row:i,column:j}));
sys.exit(0);
ax.set_zlim(0,5);
main();
[0,0,0,0,1,1,1];
p.wait();
client.set_missing_host_key_policy(paramiko.AutoAddPolicy());
df[col]=df[col].sum();
ng.run();
(function __lambda__(){return function(){var __accu0__=[];for(var _=0;_<n;_++)__accu0__.append(func());return __accu0__}()});
var pattern=re.compile(pattern_string);
fout.close();
export var best_authors=Author.objects.filter(__kwargtrans__({books__bestseller:true})).distinct();
df[~df.From.str.contains(ignorere)];
sstd.on_changed(py_update);
__builtins__.set;
plt.legend();
e.shape;
random.choice(my_list)();
alist.append(string.__getslice__(i,j+1,1));
all(function(){var __accu0__=[];for(var [x,y]of zip(l1,l2))__accu0__.append(x>0==y>0);return py_iter(__accu0__)}());
print(response.text);
export var log2int_faster=int(x).bit_length()-1;
var ax=fig.add_subplot(111);
np.array(list(chain(...function(){var __accu0__=[];for(var i=0;i<2;i++)__accu0__.append(np.arange(20).reshape(4,5).__getslice__(i,null,2));return __accu0__}())));
ax.xaxis.set_minor_locator(MultipleLocator(5));
dict.__setitem__(self,x,value);
ax.figure.show();
Tkinter.mainloop();
export var dir=os.path.dirname("./P2JSnippets.py");
s.between(0,1).any();
self.data[attr];
export var inList=any(function(){var __accu0__=[];for(var sublist of mylist)__accu0__.append(__in__(a,sublist));return py_iter(__accu0__)}());
np.random.shuffle(arr.__getitem__([tuple([0,null,1]),i]));
var __left0__=np.meshgrid(X,Y);var X=__left0__[0];var Y=__left0__[1];
print(len(s),len(data),repr(data));
print(img.shape);
r.read();
pylab.ylim([0,1E3]);
plt.plot(c[0],c[1],c[2]);
list(intermix([1,0,1,1,2,1,0,1,1,1,1,1,1,1,2]));
proc.wait();
np.fill_diagonal(out,1);
redirect(login_url);
var frame=cv.QueryFrame(self.capture);
print(s.read());
var msg=MIMEMultipart();
var D=np.r_.__getitem__([np.c_.__getitem__([A,B]),np.c_.__getitem__([B.T,C])]);
print(list(itertools.islice(arith(10,2),100)));
bool(_digits.search(d));
L[item][0];
manual_wcwidth(data);

var a=np.append(a,i);
var response=json.loads(jsonResponse);
final_l.append(tuple([p[0],visit(p)]));
tmp.append(function(){var __accu0__=[];for(var i of X)__accu0__.append(X.__getitem__([i,j]));return __accu0__}());
sys.exit(app.exec_());
var BabyDataSet=list(zip(names,births));
var d=int(s.__getslice__(0,7,1),2)+int(s[8])/2;
var s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);
foo();
var pool=multiprocessing.Pool();
print(df.iloc.__getitem__([tuple([0,null,1]),0]).tolist());
ax.set_zlim(-100,100);
var ax=plt.gca();
a.__getitem__([i,j]);
self.clip.disconnect(self.signal_id);
server.ehlo();
deleterow[1];
axes.set_ylim([ymin,ymax]);
Y.__getitem__([1,tuple([0,null,1])]);
time.sleep(.1);
do_stuff();
var x=x.__getslice__(1,null,1);
quit();
time.sleep(1);
cur.execute(sql,params);
plt.show();
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
sw.pack(__kwargtrans__({fill:tk.BOTH,expand:1}));
l.extend(t+t2);
print(token.access_token);
dict(function(){var __accu0__=[];for(var k of wanted_keys)if(__in__(k,bigdict))__accu0__.append(tuple([k,bigdict[k]]));return py_iter(__accu0__)}());
NameRank.py_sort(__kwargtrans__({key:function __lambda__(x){return int(x.py_split()[1])}}));
set(x)==set(y);
print(save_data.py_get());
tuple([new set([new set([i])]),new set([new set([j])])]);
cls.__new__();
list(OrderedDict.fromkeys(t).py_keys());
var __left0__=tuple([b,a+b]);var a=__left0__[0];var b=__left0__[1];
plt.show();
self.setCentralWidget(self.window);
random.choice(list(dictionary.py_values()));
lbl5.grid(__kwargtrans__({row:4,column:0}));
n*factorial(n-1);
(function(){var __accu0__=[];for(var _ of itertools.compress(d,map(function __lambda__(x){return x>=4},a)))__accu0__.append(_);return __accu0__})();
df.stack().map(m).unstack();
d+=timedelta(__kwargtrans__({days:7}));
conn.send(data);
var __left0__=tuple([1,1]);var a=__left0__[0];var b=__left0__[1];
c.mymethod2();
str(User.query.filter_by(__kwargtrans__({role_id:user_role})));
view.show();
ax.set_ylim(0,10);
df.iloc[np.py_sort(np.concatenate([idx[~iszero],keep_these]))];
new_pressures.append(0);
var x=ast.literal_eval(x);
ser.write(str(d));
export var application_path=os.path.dirname(os.path.abspath("./P2JSnippets.py"));
table[1][2];
plt.xticks(list(range(len(x))),x);
func();
export var pairs=dict(zip(second_split.__getslice__(0,null,2),second_split.__getslice__(1,null,2)));
(function(){var __accu0__=[];for(var i of myindex)__accu0__.append(myarray[i]);return py_iter(__accu0__)})();
collections.deque(itertools.islice(iterator,n),__kwargtrans__({maxlen:0}));
var fig=plt.figure();
driver.set_window_size(1024,768);
A.shape;
(function(){var __accu0__=[];for(var o of objects)__accu0__.append(o.specific_attr);return __accu0__})();
var x=list(someiter);
(function(){var __accu0__=[];for(var a of sequence)__accu0__.append(a?a:b);return __accu0__})();
df.reindex(ind&ind2);
test[2]=new_value;
o4.method();
export var cardValue=int(card[0]);
X.__setitem__(0,2);
var s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);
plt.show();
dict(function(){var __accu0__=[];for(var [k,v]of d.py_items())__accu0__.append(tuple([k,int(v)]));return py_iter(__accu0__)}());
var names=self.__class__.__dict__;
var Ainv=np.zeros_like(A);
func(...args,__kwargtrans__(kwargs));
df2.apply(function __lambda__(x){return df2.loc.__getitem__([~x.isin(df1.py_values.ravel()),x.py_name])});
df;
fig.set_size_inches(11.7,8.27);
math.hypot(y[0]-x[0],y[1]-x[1]);
py_next(decfa);
decimal.Decimal(1)/decimal.Decimal(7);
var arr=ctypes.c_int*len(pyarr)(...pyarr);
os.kill(self.pid,signal.SIGKILL);
export var dfs=[df0,df1,df2,dfN];
Response(token,__kwargtrans__({status:200}));
plot_df.plot();
ftp.quit();
print(function(){var __accu0__=[];for(var [k,v]of list(dupl.py_items()))if(len(v)>1)__accu0__.append(tuple([k,v]));return __accu0__}());
json.dump(row,outfile);
f.seek(0);
var j2=sorted(function(){var __accu0__=[];for(var i of j)if(i>=5)__accu0__.append(i);return py_iter(__accu0__)}());
suffix_array.py_sort(__kwargtrans__({key:function __lambda__(a){return buffer(content,a)}}));
var sess=tf.InteractiveSession();
Py_Finalize();
sys.stdout.flush();
ao.__setitem__([tuple([0,null,1]),tuple([1,null,1])],ao.__getitem__([tuple([0,null,1]),tuple([1,null,1])])+ai.__getitem__([tuple([0,null,1]),tuple([0,-1,1])]));
self.predictions_.append(classifier.predict_proba(X));
driver.switch_to.window(driver.window_handles[1]);
print(list_of_dict);
var result=function(){var __accu0__=[];for(var [ai,bi,ci]of zip(a,b,c))__accu0__.append(tuple([ai,bi]+ci));return __accu0__}();
main();
subprocess.call(command,__kwargtrans__({shell:true}));
ancestors_descendents.add(descendent);
par2.xaxis.set_ticklabels(function(){var __accu0__=[];for(var i of data)__accu0__.append(i[0]);return __accu0__}());
proc.wait();
export var index_list=function(){var __accu0__=[];for(var i of index_list)__accu0__.append(int(i));return __accu0__}();
sys.exit(app.exec_());
ax.py_clear();
print(function(){var __accu0__=[];for(var g of group([],function __lambda__(x){return __mod__(x,5)==0}))__accu0__.append(list(g));return __accu0__}());
mark_safe(simplejson.dumps(data));
loader.load_module();
map(function __lambda__(x,y){return x+y},itertools.repeat(x),y);
print(function(){var __accu0__=[];for(var w of txt.py_split())if(!__in__(w,s))__accu0__.append(w);return __accu0__}());
test.py;
list(d.py_items());
literal_eval(s);
random.shuffle(py_items);
trace.main();
pylab.show();
xl.Workbooks.Close;
var df=df.T.stack().reset_index();
pd.concat([d1,df],__kwargtrans__({axis:1}));
export var attr=function(){var __accu0__=[];for(var o of objsm)__accu0__.append(o.attr);return py_iter(__accu0__)}();
Py_INCREF(interned);
df.dtypes;
IOLoop.instance().start();
var fig=plt.figure(__kwargtrans__({figsize:tuple([4,10])}));
print(sys.argv);
var time=time-datetime.timedelta(__kwargtrans__({microseconds:time.microseconds}));
(function(){var __accu0__=[];for(var i=1;i<N;i++)__accu0__.append(indicies[elements==i]);return __accu0__})();
print(re.findall(p,test_str));
Sample.objects.filter(__kwargtrans__({date__range:[startdate,enddate]}));
L[i]=sorted(L[i],__kwargtrans__({key:operator.itemgetter(1,2)}));
var s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);
(Math.pow(sum(a),2)-sum(function(){var __accu0__=[];for(var x of a)__accu0__.append(Math.pow(x,2));return __accu0__}()))/2;
examplemod.do_stuff();
os.unlink(filename);
var d=collections.defaultdict(dict);
session_list.delete();
(function(){var __accu0__=[];for(var [left,right]of pairwise(a))if(right[1]>left[1])__accu0__.append(right);return __accu0__})();
export var resultwords=function(){var __accu0__=[];for(var word of querywords)if(!__in__(word.lower(),stopwords))__accu0__.append(word);return __accu0__}();
var fig=plt.figure();
plt.show();
export var parts2=urlparse.urlparse(fake_url);
db.session.add(c);
do_stuff();
line.set_ydata(r.__getitem__([tuple([0,null,1]),1]));
var form=ExcludedDateForm(__kwargtrans__({user:request.user}));
__all__[funcname](__kwargtrans__(argsdict));
var driver=webdriver.Firefox(p);
f.close();
my_list;
(function(){var __accu0__=[];for(var [i,j]of zip(seq,shift))if(tuple([i,j])!=tuple([x,x]))__accu0__.append(i);return py_iter(__accu0__)})();
app.exec_();
export var User=settings.AUTH_USER_MODEL;
var __left0__=tuple([b,a+b]);var a=__left0__[0];var b=__left0__[1];
sum(function(){var __accu0__=[];for(var [_,value]of list(a.py_items()))if(value>0)__accu0__.append(value);return py_iter(__accu0__)}());
foo();
var data=json.dumps(myobject.__dict__);
print(powercheck([1,0,1,1,1,0,1,1,1,0,1,1]));
ax.set_position(pos2);
tuple([id(lines[0]),id(ax.lines[0])]);
draw.ellipse(tuple([x1,y1,x2,y2]),__kwargtrans__({fill:background_color}));
hasattr(obj,method_name)&&callable(getattr(obj,method_name));
foo(2);
var cursor=collection.find(__kwargtrans__({spec:dict({}),snapshot:true}));
sorted(d,__kwargtrans__({key:sorting}));
df[new_columns];
var data=myfile.read();
var opener=urllib.request.build_opener(urllib.request.HTTPCookieProcessor(cj));
d.py_setdefault(t[0],dict({}))[t[1]]=t[2];
handle.close();
var writer=csv.writer(f);
var out=np.asarray(np.bmat([[A,Z],[Z,B]]));
x[0]=x[0]+1;
run();
adder(10);
plt.show();
curses.noecho();
print(soup.prettify());
np.array(result).__getslice__(0,null,-1);
client.set_missing_host_key_policy(paramiko.AutoAddPolicy());
sys.maxunicode;
master.grid_rowconfigure(0,__kwargtrans__({weight:0}));
b.foo();
include(GenerateExportHeader);
db.session.commit();
(function(){var __accu0__=[];for(var arg of args)__accu0__.append(arg+1);return __accu0__})();
var d=function(){var __accu0__=[];for(var x of DATA)__accu0__.append(list(map(int,x)));return __accu0__}();
hi();
mylist.py_sort(__kwargtrans__({key:function __lambda__(x){return x[1]}}));
TaskBase.__call__(self,...args,__kwargtrans__(kwargs));
self.assertTrue(mock.called);
t.start();
foo.py_name;
func(...args,__kwargtrans__(kwargs));
admin.site.register(User,CustomUserAdmin);
var parser=argparse.ArgumentParser();
(function(){var __accu0__=[];for(var i=0;i<n;i++)__accu0__.append(lst.__getslice__(i,null,n));return __accu0__})();
admin.site.register(CherryTomato,TomatoAdmin);
self.session.execute(count_query).scalar();
export var duplicates=function(){var __accu0__=[];for(var x of mylist)if(mylist.count(x)>1)__accu0__.append(x);return __accu0__}();
var user2=forms.ChoiceField(__kwargtrans__({choices:choices}));
ActionChains(driver).move_to_element(element).perform();
json.dumps(convert(d));
sys.exit();
writer.writerow(row);
message.save();
self.grid_rowconfigure(0,__kwargtrans__({weight:1}));
var __left0__=np.indices(a.shape);var i=__left0__[0];var j=__left0__[1];
time.sleep(.5);
var fig=plt.figure();
(function(){var __accu0__=[];for(var [k,v]of list(dicty.py_items()))__accu0__.append([k,add_element(v)]);return dict(__accu0__)})();
json.loads(x);
self.sock=ssl.wrap_socket(sock,self.key_file,self.cert_file);
time.sleep(1);
__all__;
func.__code__.co_consts;
export var rgbs=function(){var __accu0__=[];for(var x of py_values)__accu0__.append(tuple([(x&16711680)>>16,(x&65280)>>8,x&255]));return __accu0__}();
float(element);
x.isoformat();
y.compute();
var tt=np.linspace(0,20,201);
sys.exit(1);
fout.close();
var foo=set(range(0,4));
__init__.py;
export var product=functools.reduce(operator.mul,iterable,1);
export var belly_name=models.CharField(__kwargtrans__({max_length:50}));
(function(){var __accu0__=[];for(var x of G)__accu0__.append(x[0]);return __accu0__})();
list(s)==sorted(s);
sum(function(){var __accu0__=[];for(var [i,c]of enumerate(mystr))__accu0__.append(ord(c)<<i*8);return py_iter(__accu0__)}());
export var avg=float(sum(mylist))/len(mylist);
list(roundrobin(l1,l2));
var __left0__=tuple([b,a+b]);var a=__left0__[0];var b=__left0__[1];
var res=urllib.request.urlopen(req);
ax.add_line(line_1);
spstereo.scatter(x,y);
n11.add(n111);
datetime.timedelta(__kwargtrans__({seconds:seconds}));
str(a);
var x=x+a+b+c;
im.show();
export var cov=np.array([[u20,u11],[u11,u02]]);
s1.reset_index(__kwargtrans__({inplace:true,drop:true}));
self.canvas.update_idletasks();
os.remove(filename);
print(me.toJSON());
loggerCent.setLevel(logging.DEBUG);
export var key_to_delete=max(d,__kwargtrans__({key:function __lambda__(k){return d[k]}}));
var new_list=function(){var __accu0__=[];for(var [a,b]of zip(a_list,b_list))__accu0__.append(a+b);return __accu0__}();
py_typeof([]);
all(function(){var __accu0__=[];for(var c of string.ascii_lowercase)__accu0__.append(__in__(c,gram.lower()));return py_iter(__accu0__)}());
module.workflow_set.filter(__kwargtrans__({trigger_roles__in:[self.role.id],allowed:true}));
form.rate.queryset=Rate.objects.filter(__kwargtrans__({company_id:the_company.id}));
var pool=multiprocessing.Pool(4);
sys.exit(1);
cls.recalc_mro();
os.kill(os.getppid(),0);
export var desired_cols=function(){var __accu0__=[];for(var row of reader)__accu0__.append(tuple(function(){var __accu1__=[];for(var col of columns)__accu1__.append(row[col]);return py_iter(__accu1__)}()));return py_iter(__accu0__)}();
(data.T/vector).T;
(function(){var __accu0__=[];for(var w of word_list)__accu0__.append([w,counts[w]]);return dict(__accu0__)})();
var py_new=map(int,old);
var d2=function(){var __accu0__=[];for(var [k,v]of list(d.py_items()))__accu0__.append([k,v*.5]);return dict(__accu0__)}();
(A.stack(0)<<np.arange(10)).sum(1).unstack();
plt.show();
print(function(){var __accu0__=[];for(var k of set(x)|set(y))__accu0__.append([k,x.py_get(k,0)+y.py_get(k,0)]);return dict(__accu0__)}());
ax.figure.canvas.draw();
key.__getslice__(0,2,1).upper()+key.__getslice__(2,null,1);
deletelist[index];
cur.execute(query,tuple([b]));
self.button.pack(__kwargtrans__({padx:10,pady:10}));
var m=re.search(pat,t);
var persons=Person.objects.all().order_by(birthday,anniversary);
r.status_code;
a.index(4);
dff[function(){var __accu0__=[];for(var c of dff)if(dff[c].isnull().sum()<2)__accu0__.append(c);return __accu0__}()];
var dropped_copies=function(){var __accu0__=[];for(var i=0;i<2;i++)__accu0__.append(function __lambda__(j){return function(){var __accu1__=[];for(var x of copies[j])__accu1__.append(x[j]);return py_iter(__accu1__)}()}(i));return __accu0__}();
print(function(){var __accu0__=[];for(var value of x)if(!math.isnan(value))__accu0__.append(value);return __accu0__}());
otest.py_sort(__kwargtrans__({key:function __lambda__(x){return int(x)}}));
df.tail(5);
print(text[i]);
s==len(s)*s[0];
sys.getsizeof(Bar.__dict__);
plt.show();
plt.plot(data.index,data.amount);
[1,1,1,1,1,1,1,1,1,1,1,1,1];
fig.subplots_adjust(__kwargtrans__({left:.25,bottom:.25}));
json.loads(obj);
var query=users.select().order_by(-users.c.id.desc()).limit(5);
bucket.configure_lifecycle(lifecycle_config);
export var arrback=numpy.array(json.loads(s));
x.digits(10,0,-1,1);
np.array_equal(a,b);
self.temperatureRaisedSignal.emit();
var __except0__=web.notfound();__except0__.__cause__=null;throw __except0__;
df.head();
self._task.cancel();
a.__getitem__([tuple([0,null,1]),idx]);
logger.addHandler(file_handler);
var out=function(){var __accu0__=[];for(var x of a)if(__in__(x,b)&&__in__(x,c))__accu0__.append(x);return __accu0__}();
export var newdf=df.join(newcols);
plt.xlim([0,len(data)]);
var dropped_copies=function(){var __accu0__=[];for(var i=0;i<2;i++)__accu0__.append(make_gen(i));return __accu0__}();
main();
f(__kwargtrans__(function(){var __accu0__=[];for(var [k,v]of list(kwargs.py_items()))__accu0__.append([str(k),v]);return dict(__accu0__)}()));
ax.plot_surface(grid_x,grid_y,grid_z,__kwargtrans__({cmap:plt.cm.Spectral}));
reactor.run();
print(files[0]);
export var ch=logging.StreamHandler();
print(json.dumps(output,__kwargtrans__({indent:4})));
main();
req.read();
df.loc.__getitem__([tuple([0,null,1]),msk]);
(function(){var __accu0__=[];for(var x of data)for(var y of x)__accu0__.append(y);return __accu0__})();
logger.setFormatter(logFormatter);
plt.subplot(1,2,2);
np.ma.array([[1,0,0,1],[1,0,1,0]],__kwargtrans__({mask:[[0,0,0,1],[1,1,0,1]]}));
export var RGB_tuples=map(function __lambda__(x){return colorsys.hsv_to_rgb(...x)},HSV_tuples);
enumerate(list(range(2E3,2005)),1);
export var json_dict=json.dumps(py_values);
self.transport.write(data);
s.py_update(list(fus_s.py_keys()));
var browser=webdriver.Firefox();
print(cmp(memoryview(test1),memoryview(test2)));
signal.signal(signal.SIGQUIT,dumpstacks);
print(function(){var __accu0__=[];for(var [a,b]of zip(prices.__getslice__(0,null,1),prices.__getslice__(1,null,1)))__accu0__.append(100*(b-a)/a);return __accu0__}());
var output=urllib.request.urlopen(url).read();
export var __metaclass__=Proxier;
(function(){var __accu0__=[];for(var i=0;i<20;i++)__accu0__.append(mm_fib(i));return __accu0__})();
fig.canvas.draw_idle();
export var anumlist=function(){var __accu0__=[];for(var x of alist)if(x.isdigit())__accu0__.append(int(x));return __accu0__}();
data.append([w.getparams(),w.readframes(w.getnframes())]);
var app=flask.Flask(__name__);
request.user.get_myuser().pretty_username();
(function(){var __accu0__=[];for(var [n,i]of enumerate(d))if(!__in__(i,d.__getslice__(n+1,null,1)))__accu0__.append(i);return __accu0__})();
var new_dict=function(){var __accu0__=[];for(var [k,v]of my_dict.py_items())if(v>=threshold_value)__accu0__.append([k,v]);return dict(__accu0__)}();
ax.scatter(a.real,a.imag);
self.previewImage.show();
print(arr_list);
var df=pd.DataFrame();
array([1,2,4,5,6,7,8]);
regr.fit(chntrain,austrain);
print(response.read());
tk.Tk.__init__(self);
p.start();
container.grid_columnconfigure(0,__kwargtrans__({weight:1}));
ax.set_xticks(np.arange(len(df.columns))+.5);
print(df);
var __left0__=plt.subplots(__kwargtrans__({nrows:2,sharex:true}));var fig=__left0__[0];export var axes=__left0__[1];
df.fillna(1,__kwargtrans__({inplace:1}));
list(product());
imshow(gray2,__kwargtrans__({cmap:cm.gray,alpha:.5}));
imshow(gray2b,__kwargtrans__({cmap:cm.gray,alpha:.5}));
db.init_app(app);
var app=Bottle();
string1.join(string2);
fileObj.close();
export var lists=function(){var __accu0__=[];for(var i=0;i<num_lists;i++)__accu0__.append([]);return __accu0__}();
export var train_perplexity=math.pow(2,train_loss);
loader.construct_yaml_str(node);
decorator;
foo(params[0],params[1]);
fileinput.close();
sys.stdin.close();
background_label.place(__kwargtrans__({x:0,y:0,relwidth:1,relheight:1}));
layout.addWidget(self.label);
export var boundaries=[1,6,10,21,40,51];
[0,1,0,2,1,0];
print(tuple([i,os.path.join(dir,file)]));
python- -version;
plt.figure();
sys.exit(2);
deletesys.modules[py_name];
var a=[a];
worksheetObject.portrait=false;
var d=dict(function(){var __accu0__=[];for(var t of zip(m.__getslice__(0,null,2),m.__getslice__(1,null,2)))__accu0__.append(t);return py_iter(__accu0__)}());
new set([c.py_name]);
app.mainloop();
export var meets=Counter(chain.from_iterable(function(){var __accu0__=[];for(var line of lines)__accu0__.append(combinations(line,2));return py_iter(__accu0__)}()));
plt.plot(signal);
var s=socket.socket(socket.AF_INET,socket.SOCK_DGRAM);
plt.scatter(R,P,__kwargtrans__({s:150,color:c,zorder:2}));
l2.append(function(){var __accu0__=[];for(var x of zip(pattern,facs))if(!x[0])__accu0__.append(x[1]);return __accu0__}());
print(key[index].reshape(a.shape));
var args=parser.parse_args();
myData.dtype.names;
socket.close();
export var list_regexs=function(){var __accu0__=[];for(var x of list_patterns)__accu0__.append(re.compile(x));return __accu0__}();
MyModel.objects.all().delete();
export var regressions=regressions.reshape(A.shape);
var data=function(){var __accu0__=[];for(var _=0;_<d;_++)__accu0__.append(function(){var __accu1__=[];for(var _=0;_<w;_++)__accu1__.append([0]*h);return __accu1__}());return __accu0__}();
traceback.print_exc();
min(timeit.repeat(function __lambda__(){return function(){var __accu0__=[];for(var d of tuple([x,y]))for(var [k,v]of list(d.py_items()))__accu0__.append([k,v]);return dict(__accu0__)}()}));
mainloop();
deleteself.__dict__[key];
max(max(l_one),max(l_two));
any(function(){var __accu0__=[];for(var child of self.children)__accu0__.append(child.contains(other_node));return py_iter(__accu0__)}());
regressor.fit(X,y);
print(x);
export var querset=MyModel.objects.filter(__kwargtrans__({id__in:custom_list}));
plt.show();
__init__.py;
do_your_thing_with(item);
self.close();
thread.start();
im.show();
map(join,zip(s,drop(s,1)));
newlist+=mylist.__getslice__(i,i+22,1);
(function(){var __accu0__=[];for(var i of userInput)if(__in__(i,wordsTask))__accu0__.append(i);return __accu0__})();
f.close();
print(d[1]+f.py_split(d)[1]);
instance.__init__(cls,...args,__kwargtrans__(kw));
pd.concat([df,df.shift(-1)],__kwargtrans__({axis:1,py_keys:[0,1]})).dropna();
export var subs=function(){var __accu0__=[];for(var i=0;i<len(l);i++)if(len(l.__getslice__(i,i+n,1))==n)__accu0__.append(l.__getslice__(i,i+n,1));return __accu0__}();
admin.site.register(Example,MyAdmin);
list(itertools.product(l1,l2));
x[np.argmin(abs(f2-f1))];
var json_data=json.load(StringIO(json_str));
var a=map(float_or_string,mylist);
var data=dict(function(){var __accu0__=[];for(var key of list(request.form.py_keys()))__accu0__.append(tuple([key,request.form.getlist(key)]));return py_iter(__accu0__)}());
f.close();
fig.show();
(Math.pow(1+sqrt(5),n)-Math.pow(1-sqrt(5),n))/(Math.pow(2,n)*sqrt(5));
(function(){var __accu0__=[];for(var _=0;_<10;_++)__accu0__.append(tuple([py_next(it),py_next(it1)]));return __accu0__})();
os.makedirs(expanded);
print(key,value);
str(d);
browser.py_get(googleURL);
self.app.run();
out.close();
help(parrot);
sys.stderr.close();
ax.axis([-1,10,-1,10]);
ax.transData.transform([tuple([0,1]),tuple([1,0])])-ax.transData.transform(tuple([0,0]));
zf.close();
setup.py;
num2words(1E25);
time.sleep(10);
root.mainloop();
self.__dict__.py_update(dictionary);
print(Board([1,2]));
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
pyglet.app.run();
cache.py_update();
print(instance.Variable);
var root=tree.getroot();
print(root.winfo_height());
var tree=ET.fromstring(xmlstr);
m/m.norm(1,__kwargtrans__({axis:1})).reshape(tuple([m.shape[0],1]));
l.extend(list(range(1,n+1)));
reactor.run();
print(list(roundrobin(...l)));
np.partition(x,-10).__getslice__(-10,null,1);
smtp.close();
timestamp.py_sort(__kwargtrans__({reverse:true}));
print(find_eulerian_tour(graph));
var df1=df1.fillna(0);
time.sleep(1);
(function(){var __accu0__=[];for(var [k,g]of groupby(inp,__kwargtrans__({key:function __lambda__(i,j){if(typeof j=="undefined"||j!=null&&j.hasOwnProperty("__kwargtrans__"))var j=count();return i-py_next(j)}})))__accu0__.append(list(g));return __accu0__})();
plt.show();
reactor.run();
myTreeView.setEditTriggers(QAbstractItemView.NoEditTriggers);
plt.show();
base.rhyme();
do_something_special();
array([1,1]);
workbook.close();
webdriver.ActionChains(driver).move_to_element(el).click(el).perform();
outputfile.close();
(function(){var __accu0__=[];for(var [k,v]of list(mydict.py_items()))if(c[v]>1)__accu0__.append(k);return __accu0__})();
layout.addWidget(self.connectButton);
str1_list.py_sort();
selenium_logger.setLevel(logging.WARNING);
plt.hold(true);
a[ainb];
df.isnull().sum().sum();
print(time.time()-start);
offset+=datetime.timedelta(__kwargtrans__({days:1}));
pygame.draw.circle(screen,tuple([0,0,0]),tuple([250,250]),125);
__mod__(i/int(pow(10,l-m)),int(pow(10,m-n+1)));
var rs=urllib.request.urlopen(req.to_url());
(function(){var __accu0__=[];for(var [start,end]of slices)if(end-start>1)__accu0__.append(x.__getslice__(start,end,1));return __accu0__})();
td.findAll(__kwargtrans__({text:true}));
var r=requests.delete(URL_delete,__kwargtrans__({data:json.dumps(mydata)}));
print(bool([]));
list(intermix([1,0,1,1,2,1,0,1,1,1,1,1,1,2]));
sys.stdin.close();
t[0][0];
export var seventh_value=py_next(function(){var __accu0__=[];for(var i=1;i<10;i++)if(i==7)__accu0__.append(f(i));return py_iter(__accu0__)}());
any(function(){var __accu0__=[];for(var i of array1)__accu0__.append(__in__(i,array2));return py_iter(__accu0__)}());
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
traceback.print_exc(__kwargtrans__({file:sys.stdout}));
self.openBtn.clicked.connect(self.openClicked);
(function(){var __accu0__=[];for(var x of Counter(n).most_common())if(x[0]>1)__accu0__.append(x[1]);return __accu0__})();
var y=arr[29].sum();
df[1].plot(__kwargtrans__({ax:axes.__getitem__([0,1])}));
listbox.config(__kwargtrans__({width:0}));
TestApp().run();
y.__getitem__([1,tuple([0,null,1]),2,tuple([0,null,1])]);
simplejson.load(f);
export var list_of_pairs=function(){var __accu0__=[];for(var p1 of people)for(var p2 of people)__accu0__.append(tuple([p1,p2]));return __accu0__}();
var opener=urllib.request.build_opener(urllib.request.HTTPCookieProcessor(jar));
pylab.show();
axborder.set_xlim(0,binimg.shape[1]-1);
any(function(){var __accu0__=[];for(var x of my_list)__accu0__.append(np.array_equal(b,x));return py_iter(__accu0__)}());
ax.set_ylim(-20,100);
admin.site.register(CMSMediaDocument);
var cj=cookielib.LWPCookieJar();
sys.exit(0);
pygame.image.save(Surface,filename);
export var __rmul__=__mul__;
plt.pause(1E-4);
var lst=function(){var __accu0__=[];for(var [x]of mysql_rows)__accu0__.append(x);return __accu0__}();
do_something();
self.text.configure(__kwargtrans__({yscrollcommand:self.vsb.set}));
sm.OLS(df[ycol],df[xcols]).fit().predict();
var response=urllib.request.urlopen(url).read();
time.sleep(.1);
OrderedDict.__setitem__(self,key,value);
u.save();
any(function(){var __accu0__=[];for(var e of data)__accu0__.append(e[1]==search);return py_iter(__accu0__)}());
F(n-1)+F(n-2);
(function(){var __accu0__=[];for(var day=0;day<len(day_list);day++)if(day_list[day]==inp)__accu0__.append(day);return __accu0__})()[0];
Py_DECREF(arr);
logging.StreamHandler.__init__(self);
tuple([unique[maxsort],counts[maxsort]]);
var df_out=pd.DataFrame(out,__kwargtrans__({index:df_index}));
list(itertools.dropwhile(function __lambda__(x){return x==r[-1]},py_reversed(r))).__getslice__(0,null,-1)+r.__getslice__(-1,null,1);
var somelist=function(){var __accu0__=[];for(var [j,i]of enumerate(somelist))if(!__in__(j,remove_indices))__accu0__.append(i);return __accu0__}();
writer.close();
self.server.serve_forever();
fig.subplots_adjust(__kwargtrans__({hspace:.5,wspace:.001}));
plt.show();
cPickle.loads(_);
l.append(tuple([floar(row[0]),float(row[1])]));
main();
sorted_list==list(range(sorted_list[0],sorted_list[-1]+1));
var y=[0,0,0,1,1,0,0,1,0,0,0];
dict(a);
var app=Flask(__name__);
var d=collections.defaultdict(int);
net.build();
export var first_line=f.readline();
plt.scatter(x,y);
nmf_model.fit(A);
plt.tight_layout();
browser.set_handle_robots(false);
libc.cprogram(wts,res,kks,pointer(n),ex);
print(function(){var __accu0__=[];for(var [a,b]of l)__accu0__.append(tuple([a,b,z[a]]));return __accu0__}());
server.listen(5);
res.append(copy.deepcopy(l));
gb.apply(function __lambda__(x){return dict(zip(...x))}).unstack();
[97,98,114,97,107,97];
pylab.show();
export var tf=tempfile.NamedTemporaryFile(__kwargtrans__({delete:false}));
f.close();
lst.append(function __lambda__(x,z){if(typeof z=="undefined"||z!=null&&z.hasOwnProperty("__kwargtrans__"))var z=i;return f(x,z)});
plt.show();
print(list(chain(...listOfTuples)));
print(tuple([x,y]));
(function(){var __accu0__=[];for(var b of bytestr)__accu0__.append(ord(b));return __accu0__})();
s.set_xticklabels(group_labels);
(function(){var __accu0__=[];for(var i=0;i<5;i++)__accu0__.append([i,str(i)]);return dict(__accu0__)})();
unittest.main();
self.emitter.start();
followers_df.index=list(range(20));
blocklist.append(line);
plt.scatter(t,x,__kwargtrans__({c:y}));
export var upper=tuple(function(){var __accu0__=[];for(var x of upper)__accu0__.append(x+1);return py_iter(__accu0__)}());
root.mainloop();
var writer=csv.writer(out_file);
layout.addWidget(self.label);
var reversed_arr=arr.__getslice__(0,null,-1);
export var pizza=models.ForeignKey(Customer);
simplejson.dumps(object());
QObject.__init__(self);
var hist=np.histogram(img.flatten(),256,[0,256])[0];
self.left.extend(self.right.__getslice__(0,x,1));
print(list(d));
count.most_common(2);
p1.join();
var process=subprocess.Popen(command,__kwargtrans__({stdout:subprocess.PIPE,shell:true}));
sorted(py_iter(x),__kwargtrans__({key:function __lambda__(k){return random.random()}}));
glTranslatef(100,100);
legobj.set_linewidth(2);
self.response.set_status(401);
py_items.append(self.listWidget.item(index));
plt.show();
threading.Thread.__init__(self);
var response=requests.py_get(url,__kwargtrans__({auth:tuple([username,password]),verify:false}));
export var out4=a.__getslice__(i[0]+1,i[2],1);
signal.signal(signum,sighandler);
df[0][0];
PyMODINIT_FUNC;
numpy.where(a!=0,1,0).sum();
x.py_sort();
var arr=numpy.array(tuple([tuple([2,2]),tuple([2,-2])]));
f();
py_next(function(){var __accu0__=[];for(var x=0;x<10;x++)if(x==11)__accu0__.append(x);return py_iter(__accu0__)}());
print(repr(object));
sorted(list(mydict.py_items()),__kwargtrans__({key:itemgetter(1,0)}));
res.fillna(0);
np.diff(a);
var output=defaultdict(function __lambda__(){return defaultdict(int)});
print(bar.__name__);
image.set_from_pixbuf(pixbuf);
self.img.set_from_file(fname);
app.setStyleSheet(stylesheet);
server.NOT_DONE_YET;
var b=function(){var __accu0__=[];for(var sl of a)__accu0__.append(sl+[0]*(len(max(a,__kwargtrans__({key:len})))-len(sl)));return __accu0__}();
(function(){var __accu0__=[];for(var i of range(0,len(t),n))__accu0__.append(t.__getslice__(i,i+n,1));return __accu0__})();
json.dump(data,f);
unittest.main(__kwargtrans__({verbosity:2}));
df.C.plot(__kwargtrans__({ax:plt.gca()}));
export var db=SQLAlchemy(app);
print(line);
submodule2.py;
np.linspace(0,1,10,__kwargtrans__({endpoint:false}));
var size=fields.IntegerRangeField(list(range(1,50)));
map(ord,os.urandom(10));
var logger=logging.getLogger();
do_something_with(py_name);
x.py_sort();
urllib.request.install_opener(opener);
pd.read_csv(io.StringIO(t),__kwargtrans__({header:false}));
print(list(iterable));
widget.lift();
user.save();
((x-a)/(b-a)).clip(0,1);
self.fitness=2*self.i;
plt.gcf().add_subplot(422);
export var ytest=regr.predict(Xtest);
self.render_to_response(self.get_context_data(__kwargtrans__({form:form})));
stdin.flush();
ax.bar(x,y,__kwargtrans__({width:10}));
var form=ContactForm(request.POST);
myscript.py;
export var popen=subprocess.Popen(args,__kwargtrans__({stdout:subprocess.PIPE}));
tornado.ioloop.IOLoop.instance().start();
time.tzset();
float(output_string);
var list_2=function(){var __accu0__=[];for(var item of list_2)if(f(item))__accu0__.append(item);return __accu0__}();
var x=pickle.load(f);
var x=foo[index];
var a=np.arange(729).reshape(tuple([9,9,9]));
export var province=models.ForeignKey(Province);
browserify();
A.__setitem__([i,j],A.__getitem__([i,j])+C.__getitem__([j,k]));
hash.py_update(line);
var dists=np.vstack(tuple([[x_dists.T],[y_dists.T]])).T;
par1.set_ylim(0,4);
sorted(l1);
(function(){var __accu0__=[];for(var day=0;day<len(day_list);day++)if(day_list[day]==inp)__accu0__.append(day);return __accu0__})()[0];
stats.weibull_min.fit(data,__kwargtrans__({floc:0}));
sorted(function(){var __accu0__=[];for(var [k,v]of list(obj.py_items()))__accu0__.append(tuple([k,ordered(v)]));return py_iter(__accu0__)}());
float(value);
self.matplotlibWidget.canvas.draw();
os._exit(1);
cv2.destroyAllWindows();
export var jsonString=json.dumps(data);
sys.exit(1);
msg.attach(part1);
f.tell()==os.fstat(f.fileno()).st_size;
(function(){var __accu0__=[];for(var item of tl)__accu0__.append(item[0]);return __accu0__})();
p.start();
app.run();
var data=np.random.uniform(-1,1,44100);
plt.show();
print(value.__getslice__(0,min(len(value),size),1).ljust(size));
list(remove_reversed_duplicates(a));
self.ui_web_view.installEventFilter(self);
p.join();
time.sleep(.1);
clf.fit(X,y);
a.setLevel(logging.DEBUG);
export var server_socket=socket.socket(socket.AF_INET,socket.SOCK_STREAM);
deletearray[0];
pd.get_dummies(df.apply(tuple,1)).groupby(__kwargtrans__({level:0})).sum();
export var learner=milk.defaultclassifier();
app.run();
gtk.main_quit();
self.finish();
main();
new set([new set([mydocimage.property.date_added])]);
plt.plot(x2,my_curve2);
foo.bar();
a();
all(function(){var __accu0__=[];for(var [x,y]of zip(L,L.__getslice__(1,null,1)))__accu0__.append(x>y);return py_iter(__accu0__)}());
QtGui.QWidget.__init__(self,parent);
percentages.append(temp);
pyplot.show();
l.append(i);
self.mainframe.columnconfigure(0,__kwargtrans__({weight:1}));
QtGui.QDialog.__init__(self);
fig.subplots_adjust(__kwargtrans__({wspace:0}));
self.socket.bind(tuple([server_ip,server_port]));
self.common1();
results[i].append(benchmark(i));
h.append(function(){var __accu0__=[];for(var k of get_keys)__accu0__.append([k,d.py_get(k)]);return dict(__accu0__)}());
sorter[np.searchsorted(b,a,__kwargtrans__({sorter:sorter}))];
grid_1.AddMany(function(){var __accu0__=[];for(var i=0;i<24;i++)__accu0__.append(wx.StaticText(self.panel,__kwargtrans__({label:str(i)})));return py_iter(__accu0__)}());
x.__getitem__([row_idx.reshape(-1,1),col_idx]);
sys.stdout.flush();
f(Foo(1));
export var creatures=defaultdict(function __lambda__(){return defaultdict(function __lambda__(){return defaultdict(int)})});
print(py_next(zip(...s)));
print(row.column_name);
l.append([x,y]);
var a=A();
df.loc[all_days];
dates.py_sort();
self.filelist.append(zinfo);
np.equal(a,tgt).all(1).any();
var length=sum(function(){var __accu0__=[];for(var x of clusterList)__accu0__.append(1);return py_iter(__accu0__)}());
ax.set_xticklabels(df.columns,__kwargtrans__({rotation:90,size:15}));
var d=tf.constant([[1,1],[0,1]]);
self.rect.set_width(self.x1-self.x0);
var lines=function(){var __accu0__=[];for(var line of infile)__accu0__.append(line);return __accu0__}().__getslice__(0,N,1);
bananaxxxxxxxxxgestrawberryxxxxxxxar;
df.hist(__kwargtrans__({layout:tuple([1,2])}));
var df=pd.concat([df.ix.__getitem__([tuple([0,null,1]),tuple([0,5,1])]),x],__kwargtrans__({axis:1}));
rconsole.spawn_server();
pycurl_connect.setopt(pycurl.URL,your_url);
cv2.waitKey();
item.setCheckState(QtCore.Qt.Unchecked);
f.seek(0);
ax.set_axis_off();
print(df.loc.__getitem__([tuple([0,null,1]),mask]));
time.sleep(1);
scored.py_sort();
var d=dict(urlparse.parse_qsl(qs));
print(word);
gtk.main();
sorted(set(chain.from_iterable(py_iter(content.py_values()))));
export var __str__=function __lambda__(self){return str(self._name)};
var s=ax.scatter(X,Y,__kwargtrans__({c:C}));
self.button.clicked.connect(self.createTab);
process.wait();
print(tuple([k,v]));
np.where(x<0,-x/x.min(__kwargtrans__({axis:0})),x/x.max(__kwargtrans__({axis:0})));
tuple(function(){var __accu0__=[];for(var sublist of base_lists)for(var x of sublist)__accu0__.append(x);return __accu0__}());
print(widget.GetName());
label.pack();
sum(range(a[0],a[-1]+1))-sum(a);
var b=function(){var __accu0__=[];for(var x of s)__accu0__.append(ord(x));return __accu0__}();
var driver=webdriver.Chrome();
(function(){var __accu0__=[];for(var group of groups)if(a.isdisjoint(group))__accu0__.append(group);return __accu0__})();
print(json.dumps([1,a,b]));
var a=csc_matrix([[1,0,0,0],[0,0,10,11],[0,0,0,99]]);
var t=tuple(s);
os.system(cmd);
numpy.linalg.norm(a-b,__kwargtrans__({ord:1}));
process.kill();
os.makedirs(directory_name);
(function(){var __accu0__=[];for(var [idx,el]of enumerate(foo))if(np.array_equal(el,arr))__accu0__.append(idx);return __accu0__})();
sys.exit(1);
var ax=plt.gca();
dict(c);
p.stdin.flush();
main();
[false]*20;
var app=QtGui.QApplication(sys.argv);
time.gmtime(0);
self.Bind(wx.EVT_PAINT,self.on_paint);
thread.start();
x.g(2);
wx.Frame.__init__(self,parent,__kwargtrans__({title:title,size:tuple([200,100])}));
m.drawcoastlines();
i+=1;
print(objectify.dump(root));
browser.back();
export var points=function(){var __accu0__=[];for(var i of random.sample(range(sx*sy),n))__accu0__.append(tuple([Math.floor(i/sy),__mod__(i,sy)]));return __accu0__}();
map(function __lambda__(x){return 7<=x&&x<=22?.4:.2},hourOfDay);
json.dumps(object());
zip(A,B+B);
ax.set_xticks(np.arange(25));
export var scene=QtGui.QGraphicsScene();
sock.setsockopt(socket.IPPROTO_TCP,socket.TCP_KEEPCNT,max_fails);
(function(){var __accu0__=[];for(var x of list(dic.py_values()))__accu0__.append(id(x));return __accu0__})();
w.readline();
str2_list.py_sort();
n+=1;
var fig=plt.figure();
time.sleep(10);
print(a.py_get());
print(np.percentile(map(int,i),95));
foo(a,b);
(function(){var __accu0__=[];for(var i of l)__accu0__.append(tuple([i,o]));return py_iter(__accu0__)})();
p.plot();
result.append(item);
plt.draw();
f(2);
lists.append(pickle.load(infile));
a*b;
plt.show();
export var reader=csv.reader(f);
etree.LXML_VERSION;
item.lower();
print(doc.text_content());
pd.concat(dfs,__kwargtrans__({ignore_index:true}));
proc.terminate();
b.__getitem__([static_indices[0],static_indices[1],static_indices[2]]);
codeErr.close();
var r=sum(compress(list_2,list_1));
self[key].add(value);
np.allclose([np.nan],[np.nan]);
var yy=np.concatenate(tuple([y,[0]*10*len(y)]));
arr.__setitem__([tuple([0,null,1]),col],arr.__getitem__([tuple([0,null,1]),col])/abs(arr.__getitem__([tuple([0,null,1]),col])).max());
lines.append(line);
writer.writeheader();
positionsList.py_sort(__kwargtrans__({key:function __lambda__(p){return howCentric(p,boardLength)}}));
p.terminate();
main();
sorted(zip(unique_rows,counts),__kwargtrans__({key:function __lambda__(x){return x[1]},reverse:true}));
fixed.write(line);
log.setLevel(logging.INFO);
cv.SetCaptureProperty(video2,cv.CV_CAP_PROP_FRAME_HEIGHT,600);
app.exec_();
sys.stdout.buffer.write(TestText2);
server.serve_forever();
sample_df.apply(np.log).diff();
[a,b,c,d];
var __left0__=np.mgrid.__getitem__([tuple([0,5,1]),tuple([0,5,1]),tuple([0,5,1])]);var xx=__left0__[0];var yy=__left0__[1];export var zz=__left0__[2];
print(re.findall(pattern,string));
my_method();
print(browser.title);
var img=cv2.imread(sys.argv[1]);
var fig=plt.figure();
r.reset_index();
proc.start();
br.set_handle_equiv(false);
a.foo=new_foo.__get__(a,py_typeof(a));
test_file.close();
add_column(engine,table_name,column);
var d2=function(){var __accu0__=[];for(var [k,v]of sorted(d.py_items()))for(var _=0;_<v;_++)__accu0__.append(k);return __accu0__}();
foo();
var nums=map(function __lambda__(x){return x*2},nums);
divtd(datetime.timedelta(__kwargtrans__({hours:12})),2);
element.click();
root.withdraw();
d[row[0]].append(row.__getslice__(1,null,1));
export var email=models.EmailField(__kwargtrans__({max_length:255}));
print(sorted(list(mydict.py_items()),__kwargtrans__({key:function __lambda__(k_v){return ordering[k_v[0]]}})));
settings.py_name;
sum(function(){var __accu0__=[];for(var x of divs)__accu0__.append(x[1]);return py_iter(__accu0__)}());
csv2.close();
print(res[1]);
my_foo.echo_bar();
f.seek(0,2);
export var input=list(input);
wx.ListCtrl.__init__(self,...args,__kwargtrans__(kwargs));
QWidget().setLayout(self.layout());
imobj.set_data(np.zeros(tuple([100,100])));
np.piecewise(a,[a>80,40<a&a<=80,a<=40],[funcA,funcB,funcC]);
Funny.dynprop;
self.sock=socket.socket(socket.AF_INET,socket.SOCK_STREAM);
yaml.dump(data,ff,__kwargtrans__({allow_unicode:true}));
time.sleep(1);
var __left0__=np.meshgrid(np.linspace(xmin,xmax,100),np.linspace(ymin,ymax,200));var X=__left0__[0];var Y=__left0__[1];
(function(){var __accu0__=[];for(var e of set(str1))__accu0__.append([e,str1.count(e)]);return dict(__accu0__)})();
time.mktime(ts);
clips.Run();
var fig=plt.figure();
print(dom.toprettyxml());
var m=m.multiply(m>=10);
tuple([[1,1,1,1,1,1,1,1]]);
w.show();
pd.DataFrame.from_records(records_from_json(fh));
var y=np.hsplit(x,function(){var __accu0__=[];for(var i=0;i<Math.floor((129-1)/10);i++)__accu0__.append((i+1)*10);return __accu0__}());
var mydict=dict(function(){var __accu0__=[];for(var [k,v]of mydict.py_items())if(k!=val)__accu0__.append(tuple([k,v]));return py_iter(__accu0__)}());
sys.getsizeof(sys.getsizeof);
var temp=temp.reshape(-1,1);
pygame.quit();
var id=Column(Integer,__kwargtrans__({primary_key:true}));
ax.xaxis.set_label_position(direction);
main();
tuple(zip(...ii));
export var ptdiff=function __lambda__(p1_p2){return tuple([p1_p2[0][0]-p1_p2[1][0],p1_p2[0][1]-p1_p2[1][1]])};
unittest.main();
print(regex.group(1));
ax2.yaxis.set_major_locator(mtick.LinearLocator(5));
prettyp([1]*100);
print(tuple([x.eval(),y.eval(),tf.gradients(y,[x])[0].eval()]));
var new_dict=nested_dict(2,float);
var l=function(){var __accu0__=[];for(var [i,x]of enumerate(l))__accu0__.append(x*(__mod__(i,2)==1?2:1));return __accu0__}();
plt.xlim(xmin,xmax);
QWebView.__init__(self);
frame.Show(true);
df.shape;
export var new_points=function(){var __accu0__=[];for(var [x,y,z]of surface.points)__accu0__.append(do_something_with(x,y,z));return __accu0__}();
legend.draggable(__kwargtrans__({state:true}));
urllib.request.Request.__init__(self,...args,__kwargtrans__(kwargs));
burger.save();
wilma.save();
myList.__setslice__(0,null,null,function(){var __accu0__=[];for(var [a,b]of myList)if(myDict.py_get(a,sentinel)!=b)__accu0__.append(tuple([a,b]));return __accu0__}());
regex.findall(string);
var df=pd.read_sql_query(query.statement,engine);
random.shuffle(tmp);
var text=tk.Text();
print(my_list_of_objs);
ax.plot_wireframe(xp,yp,zp);
map(sum,a);
export var br=mechanize.Browser();
json.dumps(data);
df2.fillna(0,__kwargtrans__({inplace:true}));
help(func);
export var clamp=function __lambda__(n,minn,maxn){return max(min(maxn,n),minn)};
t.start();
plt.show();
print(CreateTable(Model.__table__).compile(engine));
var queue=Queue();
sys.getsizeof(bitArray.tobytes())/float(len(sequence));
var __left0__=np.linalg.eigh(cov);export var eigvals=__left0__[0];export var eigvecs=__left0__[1];
Af.reshape(A.shape);
file_handler.setLevel(logging.INFO);
self.setLevel(logging.INFO);
sys.__stdout__.write(s);
df.iloc.__getitem__([tuple([0,null,1]),np.lexsort(v.T.__getslice__(0,null,-1))]);
(function(){var __accu0__=[];for(var [v,a]of sorted(function(){var __accu1__=[];for(var a of y)__accu1__.append(tuple([x[a],a]));return py_iter(__accu1__)}()))__accu0__.append(a);return __accu0__})();
df1.reindex(index);
(function(){var __accu0__=[];for(var m of matches)if(m)__accu0__.append(m.group(1));return __accu0__})();
self.my_list.extend(repeat(0,4-len(self.my_list)));
pprint.pprint(l);
plt.figure();
os.setsid();
var py_name=models.CharField(__kwargtrans__({max_length:50}));
var id=Column(Integer,__kwargtrans__({primary_key:true}));
export var iter_10=function(){var __accu0__=[];for(var i=0;i<10;i++)__accu0__.append(i);return py_iter(__accu0__)}();
(function(){var __accu0__=[];for(var i of[1,2])for(var z of zs_i)__accu0__.append(tuple([i,z]));return __accu0__})();
s.quit();
compressed_table.append(tuple([istart,i,table[i]]));
export var fig2=plt.figure();
print(subprocess.list2cmdline(sys.argv.__getslice__(1,null,1)));
ax.py_clear();
df.groupby(1);
var root=Tk();
var b=[a,a];
plt.show();
sys.stdout;
print(data.splitlines());
sum_yearly_data(...list(data.py_values()));
axes.set_xlim([xmin,xmax]);
dict.py_get(self,key);
pdb.set_trace();
output.close();
numcount[num]+=1;
py_next(g,default_value);
axm.xaxis.set_visible(false);
print(etree.tostring(root,__kwargtrans__({xml_declaration:true})));
var tuples=[tuple([1,1]),tuple([0,1]),tuple([1,0]),tuple([0,0]),tuple([2,1])];
datetime.datetime(...eut.parsedate(text).__getslice__(0,6,1));
print(tuple([1,2,get_nesting_level()]));
layout.addWidget(self.buttons);
export var gp5=[1,4,7,9];
var year=datetime.date.today().year;
signal.signal(signal.SIGINT,on_interrupt);
ax.invert_yaxis();
shm_test();
var driver=webdriver.Firefox(__kwargtrans__({firefox_profile:profile}));
os.close(fd);
export var time_d_float=time_d.total_seconds();
self.builder.get_name(widget);
math.sin(2*math.pi/LIMIT*x)+.001*random.random();
l.py_sort(__kwargtrans__({key:int}));
export var SESSION_COOKIE_AGE=600;
myModule.printX();
db.put(models);
tuple([[0,1,1,2,2,2,1,0]]);
argparse.ArgumentParser.__init__(self,...args,__kwargtrans__(kwargs));
sorted(list(range(len(K))),__kwargtrans__({key:function __lambda__(x){return K[x]}}));
var __left0__=np.meshgrid(x,y);var X=__left0__[0];var Y=__left0__[1];
tar.close();
var df=pd.DataFrame(d);
(function(){var __accu0__=[];for(var subl of _itersplit(l,splitters))if(subl)__accu0__.append(subl);return __accu0__})();
p.wait();
show_windows();
x[0]+np.arange(0,60,10);
export var all_genic_snps=pd.concat(all_dfs);
do_sth();
var x=Bunch(d);
sio.seek(0);
paramdata.index;
lst.py_sort(__kwargtrans__({key:POS.py_get}));
int(p.stdout.read());
mcastsock.setsockopt(socket.SOL_SOCKET,socket.SO_REUSEADDR,1);
export var sk=Sink();
(function(){var __accu0__=[];for(var [x,y]of zip(list(range(1,21)),cycle(list(range(2,10)))))__accu0__.append(x*y);return __accu0__})();
print(repr(tokzr_QA(inp1)));
numpy.full(tuple([2,2]),true,__kwargtrans__({dtype:bool}));
s.map(Timestamp.date);
data.groupby([a,b]).count();
np.py_split(b.indices,b.indptr.__getslice__(1,-1,1));
print(str(item.__getslice__(0,null,1)).__getslice__(1,-1,1));
show();
np.fromiter(a,__kwargtrans__({dtype:np.float}));
numpy.median(numpy.array(lst));
list(d.py_keys());
any(function(){var __accu0__=[];for(var i=0;i<len(a)-len(b)+1;i++)__accu0__.append(b==a.__getslice__(i,i+len(b),1));return py_iter(__accu0__)}());
button.clicked.connect(self.make_calluser(py_name));
lst.py_sort(__kwargtrans__({key:function __lambda__(x){return x[0]}}));
plt.tight_layout();
var result=json.loads(line);
con.close();
b.append(i+1);
__in__(1,set(function(){var __accu0__=[];for(var l of a_list)__accu0__.append(l[0]);return __accu0__}()));
var data=cur.fetchone()[0];
(function(){var __accu0__=[];for(var _f of sequence)if(_f)__accu0__.append(_f);return __accu0__})();
pygame.draw.rect(x,y,width,length);
sys.stdout=sys.__stdout__;
clf.fit(Xs,ys);
countvec.fit_transform(df.title);
do_stuff();
other_list.append(obj);
min(list(range(len(L))),__kwargtrans__({key:L.__getitem__}));
pickle.dump(my_list,f);
writer.writerow(function(){var __accu0__=[];for(var i of cursor.description)__accu0__.append(i[0]);return __accu0__}());
print(repr(arr));
export var ffit=np.polyval(coefs.__getslice__(0,null,-1),x_new);
var result=function(){var __accu0__=[];for(var [i,j]of enumerate(tlist))__accu0__.append(convert(i,j));return __accu0__}();
print(list(map(py_replace,a)));
tuple([x,y]);
foo();
export var seq=difflib.SequenceMatcher(a,b);
(function(){var __accu0__=[];for(var x of crucial)if(__in__(x,dishes))__accu0__.append(dishes[x]);return __accu0__})();
time.sleep(10);
os.dup2(copied.fileno(),stdout_fd);
var response=br.submit();
writer.close();
setattr(self,py_name,val);
var df2=df[df.a!=-1|df.b!=-1];
var py_items=[[1,2,0],[1,2,0],[1,2,0]];
app.run();
print(first.lower()<=second.lower()&&second.lower()<=third.lower());
np.unique(struct);
print(cur.fetchone());
unittest.TextTestRunner().run(suite);
admin.site.register(Group,GroupAdmin);
self.dg.Items.Add(self.value);
xl.ActiveWorkbook.ActiveSheet.Columns(1).AutoFilter(1);
p.start();
print(list(value.py_keys())[0]);
axclust.imshow(clustimg);
print(df[c].value_counts());
var tags=Tag.objects.all();
anims.append(f);
root.setLevel(logging.DEBUG);
db.close();
fout.close();
axr.yaxis.set_major_locator(yrloc);
dict_x.py_setdefault(key,[]).append(value);
exit(0);
plt.show();
(function(){var __accu0__=[];for(var s of sites)__accu0__.append(remove_cruft(s));return __accu0__})();
context;
var app=QtWidgets.QApplication(sys.argv);
export var salt=b62encode(os.urandom(16));
f.write(value);
b.save();
var sess=tf.Session();
var data=pd.DataFrame(list(collection.find()));
ret[line.strip()]=parse_message_to_tree_helper(buf,index);
var app=Flask(__name__);
matplotlib.pyplot.show();
screen.blit(pygame.transform.scale(pic,tuple([500,500])),tuple([0,0]));
var py_name=models.CharField(__kwargtrans__({max_length:100}));
deleted[key_to_delete];
floor_float(10.8976540981,8);
numpy.median(d,__kwargtrans__({axis:0}));
self.SetSizer(sizer);
self.logentry.append(line);
os.path.dirname(str(sys.executable,encoding));
map(list,py_iter(c.py_items()));
df.sub(df2,__kwargtrans__({fill_value:0}));
gtk.main();
dosomething();
self.layout=QtGui.QHBoxLayout();
print(df[df.Name.isin(val)].reset_index(__kwargtrans__({drop:true})));
func2(__kwargtrans__(locals()));
var ax=fig.add_subplot(2,1,1);
np.isclose(arr_f,a,__kwargtrans__({atol:.01})).any();
numpy.prod(a);
(function(){var __accu0__=[];for(var s of count(1))__accu0__.append(function(){var __accu1__=[];for(var _ of _range(s))__accu1__.append(py_next(it));return __accu1__}());return py_iter(__accu0__)})();
sys.stdout.flush();
__in__(1,function(){var __accu0__=[];for(var i of zip(...arr))__accu0__.append(len(set(i)));return __accu0__}());
my_strings.py_sort(__kwargtrans__({key:last_part}));
print(function(){var __accu0__=[];for(var x of range(0,len(daily),7))__accu0__.append(sum(daily.__getslice__(x,x+7,1)));return __accu0__}());
(function(){var __accu0__=[];for(var x of lst)if(__mod__(x,2)==0)__accu0__.append(x);return __accu0__})()[0];
main();
print(args);
MyApp().main(sys.argv.__getslice__(1,null,1));
print(a.sum());
plt.xticks(list(range(len(D))),list(D.py_keys()));
var args=parser.parse_args();
print(tuple([key,value]));
df[df.a<df.b&df.b<df.c];
print(random.random());
var form=ContactForm(request.POST);
new set([new set([django_version])]);
var s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);
arr.sum(__kwargtrans__({axis:0}));
(function(){var __accu0__=[];for(var n=0;n<12;n++)for(var s of[square(n)])if(s>50)__accu0__.append(s);return __accu0__})();
f.seek(0,2);
pygame.init();
print(df.iloc.__getitem__([tuple([0,null,1]),0]).py_values.tolist());
output.writelines(data);
m*c.__getitem__([tuple([0,null,1]),np.newaxis]);
time.sleep(5);
proc.kill();
tuple(function(){var __accu0__=[];for(var i of a)__accu0__.append(totuple(i));return py_iter(__accu0__)}());
sorted([15,8]);
self.grid_columnconfigure(2,__kwargtrans__({weight:1}));
frame.Show();
self.assertEqual(cm.exception.code,1);
var img=Image.open(image_path);
var app=Flask(__name__);
np.vstack(a)-b;
cv2.waitKey(0);
[0][2][0];
print(get_authoritative_nameserver(sys.argv[1],log));
var a=np.arange(5);
isinstance(s,string_types);
list(islice(rows,0,len(rows),int(1/proportion)));
var q=multiprocessing.Queue();
func_to_cache();
f.close();
var ax1=fig.add_subplot(111);
var file=models.FileField(__kwargtrans__({upload_to:content_file_name}));
np.maximum(X.A,Y.A);
(function(){var __accu0__=[];for(var x of l)if(x!==0)__accu0__.append(x);return __accu0__})()+function(){var __accu0__=[];for(var x of l)if(x===0)__accu0__.append(x);return __accu0__}();
var avg=sum(mylist)/len(mylist);
shutil.copy2(os.path.join(dirpath,file),dstdir);
t.date.dt.to_pydatetime();
L.append(L[-1].__getslice__(0,null,1)+[L[-1][-1]+1]);
list(itertools.zip_longest(...ll));
plt.hist(val,__kwargtrans__({weights:weight}));
con.commit();
nx.draw(G,__kwargtrans__({node_size:1E3}));
id(a.__getslice__(0,2,1));
L.__getslice__(0,start,1)+L.__getslice__(start+n,i,1)+L.__getslice__(start,start+n,1)+L.__getslice__(i,null,1);
var c=MyClass();
var id=Column(Integer,__kwargtrans__({primary_key:true}));
new set([0,0,0,0,1,0,1,1,1,0,1,1,0,0,1,1,1,1,0,1,0,1,0,0,1,1]);
cv2.waitKey(0);
do_something();
Response(serializer.data,__kwargtrans__({status:status.HTTP_201_CREATED}));
lines.__getslice__(-n,null,1);
s.fill(tuple([255,255,255,128]));
pl.show();
sum(function(){var __accu0__=[];for(var [i,j]of enumerate(py_reversed(l)))__accu0__.append(j<<i);return py_iter(__accu0__)}());
b.T;
dfile.close();
var s=json.dumps(foo.__dict__);
df.loc[idx];
print(np.cross(a,b));
root.winfo_children();
var s=s.__getslice__(0,null,-1);
x.__getslice__(0,5,1);
scipy.misc.imshow(im_out);
list(function(){var __accu0__=[];for(var x of py_reversed(lst))__accu0__.append([len(x),x]);return dict(__accu0__)}().py_values());
print(a.__getitem__([i,j]));
var fig=plt.figure(__kwargtrans__({figsize:tuple([15,10])}));
python- -version;
tuple([0,1,1,0,0,0,0,1,0]);
self.frame.destroy();
printx();
show();
__in__(item,self.queue);
l+[pad]*(n-len(l));
s.close();
py_next(f);
var a=np.arange(27);
os.unlink(file_path);
[2,0,1,0,1,0];
signal.signal(signal.SIGINT,handler);
list(chain(...zip(list(range(1,7)),list(range(-7,0)).__getslice__(0,null,-1))));
widget.show();
cv.CvtColor(vis0,vis2,cv.CV_GRAY2BGR);
export var Globals=GLOBALS();
dict.__setitem__(self,py_keys,value);
obj.save();
columns.py_setdefault(column,[]).append(row);
l+=[sum(v)/len(v)];
var soup=BeautifulSoup(html_text);
grouped.JobNos.sum().order(__kwargtrans__({ascending:false}));
export var proxies=dict({});
btn.grid(__kwargtrans__({row:0,column:tabslen,sticky:W+E}));
b.shape;
f.close();
export var myarr0=array([1,0]);
ax.set_yticklabels(df.index);
var matches=function(){var __accu0__=[];for(var x of lst)if(x>6)__accu0__.append(x);return py_iter(__accu0__)}();
session1.add(item);
var color=models.CharField(__kwargtrans__({max_length:2}));
setattr(self.obj,self.attr,val);
con.commit();
export var inactive_user_count=IntegerField(__kwargtrans__({py_default:0}));
export var parsedData=feedparser.parse(data.content);
plt.clf();
!set(a).isdisjoint(b);
inner(myList,[]);
tornado.ioloop.IOLoop.instance().start();
isinstance(x,tuple)&&isinstance(x.__dict__,collections.abc.Mapping);
var b=np.lib.stride_tricks.as_strided(a,tuple([1E3,a.size]),tuple([0,a.itemsize]));
var df=pd.DataFrame(rows_list);
s.value_counts().index.__getslice__(2,null,1);
reactor.run();
session.commit();
isinstance(obj,dict)?obj:range(len(obj));
outf.flush();
apsched.start();
bit.__getslice__(0,null,-1);
ax.set_yticks(y_tick*np.pi);
self.mc.Play();
list(filter(pattern.search,strings));
conn.sendmail(sender,destination,msg.as_string());
_.view(data.dtype);
self.handle_request();
(function(){var __accu0__=[];for(var [a,b]of x)__accu0__.append(a+b);return __accu0__})();
expander.py;
shell.interact();
!bool;
var ax=fig.add_subplot(111);
export var intercepts=y_log.__getslice__(0,-1,1)-slopes*x_log.__getslice__(0,-1,1);
MyClass.call_me();
var new_d=dict(function(){var __accu0__=[];for(var val of reverse_d.py_values())__accu0__.append(tuple([val,d[val]]));return py_iter(__accu0__)}());
export var first_column=function(){var __accu0__=[];for(var x of mysql_rows)__accu0__.append(x[0]);return __accu0__}();
func();
studying/VBG;
numpy.sum(boolarr);
np.cumsum(np.bincount(v))-1[v];
cls._instances[cls].__init__(...args,__kwargtrans__(kwargs));
export var fox=webdriver.Firefox();
reactor.run();
requests.status_codes._codes[200];
myList.__setslice__(0,null,null,function(){var __accu0__=[];for(var x of myList)if(myDict.py_get(x[0],sentinel)!=x[1])__accu0__.append(x);return __accu0__}());
tuple([[0,0,0,0,0,0,0,0]]);
im.set_clim(vmin,vmax);
final.append(compound[x]);
np.linalg.lstsq(A.T.dot(A)+lamb*np.identity(n_col),A.T.dot(y));
Employee.__init__(self,py_name,salary);
plt.show(__kwargtrans__({block:true}));
var im=Image.open(imgfile);
s.bind(tuple([host,8080]));
list(range(min(tuple([a,b])),max(tuple([a,b]))+1));
conn.send(filepath);
arr.dtype.names;
print(doCombine(target,x,len(target),0,0));
tk.Canvas.__init__(self,...args,__kwargtrans__(kwargs));
x[np.logical_and(x>-2,x<2)];
var args=parser.parse_args();
sys.exit(0);
plt.show();
(function(){var __accu0__=[];for(var x of lst)if(__mod__(x,2)==0)__accu0__.append(x);return __accu0__})().__getslice__(0,1,1);
a+b==c||a+c==b||b+c==a;
admin.site.unregister(User);
a[slice(...b)];
time.ctime();
set(function(){var __accu0__=[];for(var perm of permutations(list(range(9))))__accu0__.append(zip(perm.__getslice__(0,null,2),perm.__getslice__(1,null,2)));return __accu0__}());
any(function(){var __accu0__=[];for(var x of my_list)__accu0__.append(np.array_equal(a,x));return py_iter(__accu0__)}());
fig.autofmt_xdate();
np.random.choice(py_keys,__kwargtrans__({size:n,py_replace:true,p:prob}));
f_out.write(i);
self.panel.SetSizerAndFit(self.sizer);
plt.plot(data);
print(function(){var __accu0__=[];for(var d of foo.bar._decorators)__accu0__.append(d.__name__);return __accu0__}());
export var subject=db.StringField(__kwargtrans__({max_length:255,required:true}));
(function(){var __accu0__=[];for(var v of x)if(v==v)__accu0__.append(v);return __accu0__})();
sys.exit(app.exec_());
thread.start();
show_firm_url.allow_tags=true;
print(list_end_counter([1,1,2]));
ax.bar(arange(len(grosses)),grosses);
var data=json.loads(json_string);
get_max(dicts);
var b=np.array([[5,6],[7,8]]);
var __except0__=ValueError;__except0__.__cause__=null;throw __except0__;
print(solve([2,0,1]));
version.search(s).group();
dir(module);
os.waitpid(-pid);
self.assertTrue(settings.DEBUG);
export var myObject2=MyObject(foo,bar);
child.widget().deleteLater();
plt.subplots_adjust(__kwargtrans__({left:0,bottom:0,right:1,top:1,wspace:0,hspace:0}));
fp.close();
ax.set_xlim(0,len(changes)+1);
var py_items=list(yourdict.py_items());
PLT.show();
my_dict[len(data)].append(id);
var r=requests.py_get(url,__kwargtrans__({cookies:cd}));
var obj=MyClass();
sys.getrecursionlimit();
fig.autofmt_xdate();
var b=map(bool,a);
soup.find_all(__kwargtrans__({text:is_comment}));
export var reg_data=np.ones(tuple([int(1E3),int(1E5)]));
result.append(x);
plt.show();
datetime.datetime.strptime(date_txt,DATE_FORMAT);
fig.show();
format_timedelta(timedelta(__kwargtrans__({minutes:-5})));
self.graphicsView.setScene(scene);
datetime.fromtimestamp(0);
export var current_size=f.tell();
test.__getslice__(start,end,1);
self.socket.listen(1);
plt.plot(x,2*x);
browser.py_get(url);
all(function(){var __accu0__=[];for(var val of list(d.py_values()))__accu0__.append(val==testval);return py_iter(__accu0__)}());
contact_form.save();
acc.py_setdefault(key,[]).append(value);
sbtn.click();
myList.py_sort(__kwargtrans__({key:extractNum}));
df.columns=function(){var __accu0__=[];for(var c_name of df.columns.py_values.tolist())__accu0__.append(c_name.strip());return __accu0__}();
var image=Image.open(buffer);
__init__.py;
export var listener=socket.socket(socket.AF_INET,socket.SOCK_STREAM);
Foo.class_method();
mat[ixs].sum(__kwargtrans__({axis:0}));
tuple(map(sum,zip(a,b)));
plt.draw();
pool.join();
var idx=numpy.argmin(numpy.abs(A-target));
cursor.execute(sql);
self.assertTrue(users.is_current_user_admin());
print(myString[len(myString)-1]);
self.save();
var id=Column(Integer,__kwargtrans__({primary_key:true}));
s.__getslice__(len(start),-len(end),1);
match.groups();
app.run();
print(repr(b));
var sock=socket.socket(socket.AF_INET,socket.SOCK_STREAM);
runserver.py;
print(soup);
var writer=csv.writer(outfile);
print(line);
plt.setp(list(ax.spines.py_values()),__kwargtrans__({color:color}));
var bins=np.array([0,1,10,60,60*10,60*60,24*60*60]);
turtle.forward(size);
host.close();
export var mypass=getpass.getpass();
self.board[y][x];
sys.path.append(PYSOLR_PATH);
var d=dateutil.parser.parse(s);
tuple([[false,false,true,false,false]]);
print(os.path.join(root,py_name));
s[4];
pd.concat(function(){var __accu0__=[];for(var c of[France,Germany])__accu0__.append(c.series);return __accu0__}(),__kwargtrans__({axis:1}));
os.remove(os.path.join(root,file));
ax.set(__kwargtrans__({xticks:np.arange(dates.size),xticklabels:datelabels}));
dialog.setLayout(some_layout);
ax.set_xlim(0,5);
time.sleep(1);
img.putdata(data);
var fig=plt.figure();
var a=numpy.empty_like(b);
ws.cell(__kwargtrans__({row:r,column:1})).value=statN;
print(soup.li.findAll(__kwargtrans__({text:true,recursive:false})));
xl.Application.Quit();
ser.setDTR(false);
sum(function(){var __accu0__=[];for(var i=0;i<4;i++)__accu0__.append(b[i]<<i*8);return py_iter(__accu0__)}());
np.meshgrid(x,x);
os.unlink(path);
np.subtract.at(dW,np.s_.__getitem__([tuple([0,null,1]),y]),masked.sum(__kwargtrans__({axis:2})));
len(tup);
ax1.set_xlim([.1,10]);
commands[command](...sys.argv.__getslice__(1,null,1));
s.commit();
plt.hlines([0],-10,20);
QtDBus.QDBusConnection.sessionBus().send(msg2);
map(function __lambda__(a_b){return a_b[1]-a_b[0]},pairwise(L));
var result=dict(result);
var sets=function(){var __accu0__=[];for(var i of g)for(var j of g)if(i!=j&&set(i)&set(j))__accu0__.append(set(i+j));return __accu0__}();
collections.deque.__getitem__(self,index);
var draw=ImageDraw.Draw(img);
set(bell).issubset(printset);
frame.columnconfigure(1,__kwargtrans__({weight:1}));
self.a[-1];
plt.xticks(__kwargtrans__({rotation:25}));
plt.contourf(X,Y,Z);
var pi=square(a+b)/(4*t);
setattr(object,py_name,value);
my_dict[item]=a[index+1];
print(max(function(){var __accu0__=[];for(var s of row)__accu0__.append(len(s));return py_iter(__accu0__)}()));
datetime.datetime(2012,11,16,0,0);
print(output);
random.shuffle(x);
all(map(function __lambda__(x){return x==py_items[0]},py_items));
var k=np.arange(n);
sys.path.append(SYS_PATH);
main();
sys.maxsize;
random.shuffle(thelist);
s.get_text();
backend.setsockopt(zmq.XPUB_VERBOSE,true);
export var row_ind=function(){var __accu0__=[];for(var [k,v]of list(d.py_items()))for(var _=0;_<len(v);_++)__accu0__.append(k);return __accu0__}();
logger.setLevel(logging.ERROR);
logging.shutdown();
np.array(zip(...function(){var __accu0__=[];for(var i=0;i<n;i++)__accu0__.append(A.__getslice__(i,null,1));return py_iter(__accu0__)}()));
time.sleep(1);
pd.concat(function(){var __accu0__=[];for(var [_,i]of df.py_items())__accu0__.append(i);return __accu0__}()).dropna().reset_index(__kwargtrans__({drop:true}));
(function(){var __accu0__=[];for(var _f of map(func,x))if(_f)__accu0__.append(_f);return __accu0__})();
var ax=fig.add_subplot(111);
var li2=function(){var __accu0__=[];for(var x of li)for(var y of x)__accu0__.append(y);return __accu0__}();
root.mainloop();
plt.xlim(0,4);
br.select_form(__kwargtrans__({nr:0}));
var cursor=db.cursor();
len(x);
self.verticalLayout.addWidget(self.label);
var df=pd.concat([df1,df2]);
var MY_SORTED_TUPLE=tuple(sorted(MY_TUPLE,__kwargtrans__({key:itemgetter(1)})));
var root=Tk();
print(g.reset_index(__kwargtrans__({drop:true})));
data_dict[regNumber].append(details);
plt.figure();
var __except0__=KeyError(request.POST);__except0__.__cause__=null;throw __except0__;
__init__.py;
print(find_nearest(x));
output.py_sort();
df.loc[mask.any(__kwargtrans__({axis:1}))];
pd.__version__;
os.makedirs(dir);
(function(){var __accu0__=[];for(var full of A)__accu0__.append(int(any(function(){var __accu1__=[];for(var last of B)__accu1__.append(full.endswith(last));return py_iter(__accu1__)}())));return __accu0__})();
self.est.predict_proba(X).__getitem__([tuple([0,null,1]),1]).__getitem__([tuple([0,null,1]),numpy.newaxis]);
var date=models.DateTimeField(__kwargtrans__({auto_now_add:true,blank:true}));
locals().py_update(dict([[col,df[col]]]));
django.setup();
(function(){var __accu0__=[];for(var item of my_iterable)if(my_filter(item))__accu0__.append(item);return __accu0__})();
re.findall(p,test_str);
client.send(msg);
str(b);
plt.annotate(labls[i],__kwargtrans__({xy:tuple([x.__getitem__([i,2]),y.__getitem__([i,2])]),rotation:rotn.__getitem__([i,2])}));
jsonFile.close();
do_many_amazing_things(a,b);
math.isnan(x);
plt.show();
sys.exit(1);
var __left0__=np.mgrid.__getitem__([tuple([0,bignum,1]),tuple([0,bignum,1])]);var X=__left0__[0];var Y=__left0__[1];
df[col].py_replace(to_remove,np.nan,__kwargtrans__({inplace:true}));
channel.basic_consume(callback_func,queue,__kwargtrans__({no_ack:true}));
df.ix[df.index.indexer_between_time(datetime.time(10),datetime.time(14))];
mratings.mean(__kwargtrans__({axis:0}));
store.put(key,value,__kwargtrans__({table:true,append:false}));
tk.Tk.__init__(self);
plt.yticks(np.arange(y.max()+1),labels);
outfile.write(file2.read());
do_something();
area1+area2;
py_typeof(a[0]);
sum(map(len,primes));
main();
(function(){var __accu0__=[];for(var x of t_f_list)__accu0__.append(__mod__(x,2)==0);return __accu0__})();
a.childNodes[0].nodeValue;
(function(){var __accu0__=[];for(var val of a)for(var _ of tuple([0,1]))__accu0__.append(val);return __accu0__})();
var s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);
test.__getitem__([tuple([0,null,1]),0]);
sys.stdout.write(RED);
template.render();
gevent.killall(function(){var __accu0__=[];for(var obj of gc.get_objects())if(isinstance(obj,greenlet))__accu0__.append(obj);return __accu0__}());
ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy());
getdict(x);
list(range(1,11));
printArray(function(){var __accu0__=[];for(var x of row)__accu0__.append(str(x));return __accu0__}());
self.send_blob(blob_info,__kwargtrans__({save_as:true}));
x.py_sort(__kwargtrans__({key:str.lower}));
output.close();
a.__setslice__(0,0,null,b);
os.symlink(linkto,dstname);
im.file.save(img_filename,File(img_temp));
print(repr(t[1]));
p[np.argsort(p)];
int(b.__getslice__(0,null,-1),2);
root.mainloop();
app.run();
setHatchThickness(1);
self.queue.add(item);
(function(){var __accu0__=[];for(var item of l)__accu0__.append(item+tuple([z[item[0]]]));return __accu0__})();
var sess=tf.Session();
time.sleep(5);
y.mean();
datetime.fromtimestamp(time.mktime(time_tuple));
np.sin(2*np.pi*freq*t);
s.py_replace(d,__kwargtrans__({regex:true}));
sound.play();
df;
pprint(dict_to_etree(d));
YourModel.objects.filter(__kwargtrans__({some_datetime__date:some_date}));
(function(){var __accu0__=[];for(var [item,count]of Counter(a).py_items())if(count>1)__accu0__.append(item);return __accu0__})();
ax.scatter(a,b,c,__kwargtrans__({c:function(){var __accu0__=[];for(var x of d)__accu0__.append(use_colours[x[0]]);return __accu0__}(),s:50}));
suite.addTest(unittest.TestLoader().loadTestsFromModule(module));
ax.set_xlim(xlim);
a.itemset(tuple([i,j]),x);
df.loc[function(){var __accu0__=[];for(var i of df.index)__accu0__.append(df.iloc.__getitem__([i,tuple([1,null,1])]).duplicated().sum()==0);return __accu0__}()];
var path=sys.modules[self.__module__].__file__;
app.register_blueprint(post_blueprint);
df[k]=df[k].astype(v);
py_typeof(json.loads(data));
(function(){var __accu0__=[];for(var k of d)__accu0__.append(k[1]);return __accu0__})();
button.grid(__kwargtrans__({row:1,column:4}));
str(165).zfill(4);
var img=Image.open(stream);
np.linalg.norm(A.__getslice__(1,null,1)-A.__getslice__(0,-1,1),__kwargtrans__({axis:1}));
locals().py_update(d);
fobj.close();
new set([new set([page.get_title])]);
sum(np.array(a)>7);
time.sleep(4);
Py_Finalize();
Table.query.filter(Table.py_name==con.py_name).first();
array2.__setslice__(0,null,null,function(){var __accu0__=[];for(var e of array2)if(!__in__(e,set1))__accu0__.append(e);return __accu0__}());
lucky.append(L[0]);
var r=np.exp(np.sqrt(x*x+y*y));
__in__([1,2],a.tolist());
self.mainloop();
export var reduced_basi=[[[0,0]],[[1,0],[0,1]],[[2,0],[1,1],[0,2]]];
var args=parser.parse_args();
var args=parser.parse_args();
ax.plot([1,1,1]);
str(self.as_date());
export var min_positions=function(){var __accu0__=[];for(var [i,x]of enumerate(a))if(x==mymin)__accu0__.append(i);return __accu0__}();
print(len(list(group)),key);
int(true);
table.py_sort(functools.cmp_to_key(team_cmp));
G.add_edge(prereq,target);
var driver=webdriver.PhantomJS(__kwargtrans__({desired_capabilities:dcap}));
obj.save();
con.close();
QtGui.QWidget.__init__(self,parent);
df.loc.__getitem__([tuple([0,null,1]),(df!=df.ix[0]).any()]);
py_iter(self._data);
cv2.waitKey(0);
var my_list=function(){var __accu0__=[];for(var i=0;i<n;i++)__accu0__.append(false);return __accu0__}();
(function(){var __accu0__=[];for(var s of perms)if(valid(s))__accu0__.append(s);return __accu0__})();
main();
canvas.pack();
plt.show();
plt.subplot(154);
numpy.random.seed(x);
var fig=plt.figure();
painter.rotate(90);
plt.ion();
fh.close();
py_values[i]=struct.unpack(endian,f.read(bytes))[0];
os.chdir(whatever);
var __left0__=itertools.tee(totalist,2);export var totalist=__left0__[0];export var forselection=__left0__[1];
f.close();

var df=df.sample(__kwargtrans__({frac:1})).reset_index(__kwargtrans__({drop:true}));
var driver=webdriver.Firefox(__kwargtrans__({firefox_binary:binary}));
time.sleep(.1);
export var sorted_B=sorted(B);
(function(){var __accu0__=[];for(var x of lst)__accu0__.append(s.index(x));return __accu0__})();
sys.getrefcount(object);
plt.show();
var bar=foo.copy();
print(line);
module.run_pool();
sum(A,[]);
ast.__getitem__([[0,1,2],[0,1,0],[0,2,2],0,tuple([0,2,1]),tuple([0,2,1])]);
same_structure(a[0],b[0])&&same_structure(a.__getslice__(1,null,1),b.__getslice__(1,null,1));
a*Math.pow(x,2)+b+c*np.sin(x);
var indices=np.py_split(sidx,np.flatnonzero(np.diff(arr[sidx])>0)+1);
list(s);
dict(function(){var __accu0__=[];for(var k of py_keys)__accu0__.append(tuple([k,dol1.py_get(k,no)+dol2.py_get(k,no)]));return py_iter(__accu0__)}());
M.A.diagonal(2);
Py_Finalize();
time.sleep(.5);
A.__getitem__([tuple([0,null,1]),1]).sum();
wx.StaticBitmap(panel,-1,jpg,tuple([10,pos]),tuple([jpg.GetWidth(),jpg.GetHeight()]));
map(complex,row);
export var mypoly=Point(0,0);
export var thisFile="./P2JSnippets.py";
export var dllname=os.path.dirname("./P2JSnippets.py");
export var nid=Column(Integer,__kwargtrans__({primary_key:true}));
(function(){var __accu0__=[];for(var item of sorted(set(the_list)))__accu0__.append(tuple([item,the_list.count(item)]));return __accu0__})();
export var fulldate=fulldate+datetime.timedelta(__kwargtrans__({milliseconds:500}));
s.splitlines();
master.grid_rowconfigure(1,__kwargtrans__({weight:1}));
(function(){var __accu0__=[];for(var x of l)__accu0__.append(x+1);return __accu0__})();
zip(a.__getslice__(0,null,2),a.__getslice__(1,null,2));
(function(){var __accu0__=[];for(var sublist of mylist)for(var val of sublist)__accu0__.append(val);return __accu0__})();
df.set_index(df.merged_ix,__kwargtrans__({inplace:true}));
a[np.ix_(...function(){var __accu0__=[];for(var i of a.shape)__accu0__.append(list(range(0,i,2)));return __accu0__}())];
var fig=plt.figure();
time.sleep(.1);
ax.plot(x,y);
y.shape;
sorted(listofLines,__kwargtrans__({key:extract_time}));
np.random.uniform(-10,10);
deletemydict[k];
store.close();
ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy());
deleterecursive_dict[key];
X.T;
fp.seek(0);
lines.py_sort(__kwargtrans__({key:second_column}));
print(ame_to_bre(text));
var b=function(){var __accu0__=[];for(var i of a)__accu0__.append(i);return __accu0__}();
func(...args,__kwargtrans__(kwargs));
imresize(np.ones(tuple([1E3,1E3])),50).shape;
wx.Frame.__init__(self,parent,id,title,__kwargtrans__({size:tuple([600,600])}));
root.mainloop();
any(function(){var __accu0__=[];for(var sub of subs)__accu0__.append(__in__(sorted(sub),range(min(l),max(l)+1)));return __accu0__}());
ldap.set_option(ldap.OPT_DEBUG_LEVEL,0);
var __left0__=np.linalg.lstsq(M,y);var k=__left0__[0];var _=__left0__[1];var _=__left0__[2];var _=__left0__[3];
dta.co2.interpolate(__kwargtrans__({inplace:true}));
a.__getslice__(i,j,1);
connlisten_thread.start();
print(foo.bar());
self.yet=true;
A.__getitem__([np.arange(m),idx]);
print(line.strip());
np.dot(X,np.dot(M,X.T)).trace();
ax.set_xlim([x[0],x[1]]);
tuple([tuple([220922E3,2428])]);
tuple([tuple([220922001,2429])]);
tuple([tuple([220922564,2992])]);
tuple([tuple([220922566,2994])]);
tuple([tuple([220924161,4589])]);
var lines=ax.plot(list(range(10)),np.random.randn(10),list(range(10)),np.random.randn(10));
export var xml_tree=etree.parse(xml_file);
print(is_shifted_copy([1,1,1],[1,1,1]));
HttpResponse(__kwargtrans__({status:400}));
text.pack();
(function(){var __accu0__=[];for(var i=0;i<len(audio)*2;i++)__accu0__.append(audio[Math.floor(i/2)]);return __accu0__})();
var df=pd.concat(series,__kwargtrans__({axis:1}));
pipeline.fit(X.__getitem__([tuple([0,null,1]),np.newaxis]),y);
time.sleep(.05);
var y=np.array([0,0,1,1]);
plt.plot(x,y);
export var process_names=function(){var __accu0__=[];for(var proc of psutil.process_iter())__accu0__.append(proc.py_name());return __accu0__}();
a.repeat(2,__kwargtrans__({axis:1}));
true;
var b=tuple(a);
obj.save();
sess.query(Tag.py_name).distinct();
im.save(sys.argv[2]);
bool([1,2]);
plt.plot(x,y);
self.Bind(wx.EVT_MOTION,self.on_motion);
export var y_pred=model.predict(X_test);
pub_dict[p.key].append(p);
print(data);
(function(){var __accu0__=[];for(var j=2;j<n;j++)if(isprime(n))__accu0__.append(j);return __accu0__})();
var c=itertools.chain(a,b);
df1.plot(__kwargtrans__({ax:axes.__getitem__([0,0])}));
export var final_dict=function(){var __accu0__=[];for(var key of t)if(!__in__(key,[key1,key2]))__accu0__.append([key,t[key]]);return dict(__accu0__)}();
tar.close();
dict(re.findall(pattern,json_string));
df.ix[df.Col1.isin(search_list)];
self.app=app.app.test_client();
var lock=threading.Lock();
ax2.get_yaxis().set_animated(true);
(function(){var __accu0__=[];for(var i=1;i<11;i++)__accu0__.append(cube(i));return __accu0__})();
int(1/-2);
ax1.yaxis.set_major_locator(y1loc);
export var ipython=get_ipython();
func(a);
img.save(__kwargtrans__({filename:output_destination}));
prettyp(CrazyClass());
myfunc(a,b,c,d,e,f);
py_next(function(){var __accu0__=[];for(var x of seq)if(predicate(x))__accu0__.append(x);return py_iter(__accu0__)}());
ftp.cwd(path);
self.multlineCommands=Forward();
var fig=plt.figure();
execlist[i][4]=mydelay;
var __left0__=zip(...points);var x=__left0__[0];var y=__left0__[1];
x.append([]);
Z.__setitem__([xidx,yidx],raw.__getitem__([tuple([0,null,1]),2]));
var temp=temp.__getslice__(1,null,1);
self.model.objects.filter(__kwargtrans__({active:true}));
df.iloc.__getslice__(2,6,1);
print(map(itemgetter(1),g));
print(tuple([r.status_code,r.reason]));
var __left0__=np.meshgrid(xi,ti);var xi=__left0__[0];export var ti=__left0__[1];
chain.from_iterable(function(){var __accu0__=[];for(var n=0;n<len(xs)+1;n++)__accu0__.append(combinations(xs,n));return py_iter(__accu0__)}());
np.diagonal(np.rollaxis(np.tensordot(a,a,tuple([1,1])),1),0,2).T;
Gtk.main();
f.close();
dict(d1,__kwargtrans__(d2));
export var window=collections.deque(sorted(window),__kwargtrans__({maxlen:WINDOW_SIZE}));
signal.pause();
(function(){var __accu0__=[];for(var [k,g]of groupby(s))__accu0__.append(tuple([k,len(list(g))]));return __accu0__})();
serverSocket.setsockopt(socket.SOL_SOCKET,socket.SO_REUSEADDR,1);
Counter(function(){var __accu0__=[];for(var lst of listOfLists)for(var item of set(lst))__accu0__.append(item);return py_iter(__accu0__)}());
self.canvas.after(50,self.check_queue);
str(numpy.array([.24])[0]);
self.assertEqual(resp.status_code,200);
[0][1][2];
print(recursive_lambda(function __lambda__(a,b){return b>0?b*a(a,b-1):1})(6));
list(set(a)&set(b));
cursor.execute(query);
root.mainloop();
sys.getsizeof(b);
data.append(item);
np.moveaxis(np.indices(dims),0,-1);
var a=dict.fromkeys(list(range(4E6)));
var ax1=fig.add_subplot(111);
var b=[6,7,8,9,0];
var soup=BeautifulSoup(browser.page_source);
m.close();
self.httpd.stop();
(function(){var __accu0__=[];for(var x of a)if(x==x)__accu0__.append(x);return set(__accu0__)})();
var dictionary=dict(zip(py_keys,py_values));
process.stdout.close();
list(itertools.chain.from_iterable(function(){var __accu0__=[];for(var x of lslice)__accu0__.append(l[x]);return __accu0__}()));
sys.stdout.write(s);
print(json.dumps(foo));
os.startfile(filename);
QtCore.Qt.ItemIsEnabled|QtCore.Qt.ItemIsSelectable|QtCore.Qt.ItemIsEditable;
cv2.waitKey(0);
cv2.destroyAllWindows();
(function(){var __accu0__=[];for(var x of l)__accu0__.append(x+1);return py_iter(__accu0__)})();
numpy.ndarray(tuple([5,5]));
var user=models.OneToOneField(User);
pyglet.app.run();
self._stack.py_pop();
time.sleep(1);
b.py;
webtail;
list(range(m,(count+1)*m,m));
main();
func(x);
print(sys.exc_info()[2].tb_next.tb_frame.f_locals);
tuple([datetime(2015,12,2,0,0),datetime.datetime(2015,12,8,0,0)]);
f.write(text);
d.py_update(locals());
Notify.uninit();
celery.config_from_object(app.config);
len(a);
a.append(row);
print(df.attr.iloc[i]);
var data=np.random.random(tuple([int(1E3),int(1E5)]));
any((a.__getslice__(0,null,1)==[1,2]).all(1));
np.vstack(tuple([a,a,a]));
doctest.testmod();
plt.setp(plt.xticks()[1],__kwargtrans__({rotation:90}));
cursor.execute(qSQL);
print(json.dumps(data,__kwargtrans__({py_default:date_handler})));
frame1.axes.get_yaxis().set_ticks([]);
arr.append(list(df.iloc[i]));
threading.Thread.__init__(self);
(function(){var __accu0__=[];for(var counter of counters)__accu0__.append(map(counter.__getitem__,all_features));return __accu0__})();
file.close();
~pd.isnull(df[list_of_cols]);
2*frexp(n)[0];
gdata.gauth.AeLoad(users.get_current_user().user_id());
var G=nx.MultiGraph();
export var count_array=function(){var __accu0__=[];for(var i of mvv_list.collect())__accu0__.append(int(i.count));return __accu0__}();
df.stack();
sock.close();
np.vstack(function(){var __accu0__=[];for(var i=0;i<A.shape[0];i++)__accu0__.append(np.diag(c.__getitem__([tuple([0,null,1]),i,i])));return __accu0__}()).T;
var f=open(filename);
export var AuthorFormSet=modelformset_factory(Author,__kwargtrans__({extra:2,form:AuthorForm}));
qs.filter(__kwargtrans__({user:request.user}));
screen.mainloop();
QtCore.Qt.ItemIsEnabled;
MyApp().run();
result[numpy.argsort(A)]=numpy.py_sort(B);
time.sleep(10);
print(getpass.getuser());
print(queue.method.message_count);
item.set_fontsize(20);
cal_window.show_all();
test_moduleA.py;
mpl.ticker.MaxNLocator.__init__(self,__kwargtrans__({nbins:9,steps:[1,2,5,10]}));
main();
dict(function(){var __accu0__=[];for(var [k,v]of list(json.loads(val).py_items()))__accu0__.append(tuple([k,json.dumps(v)]));return py_iter(__accu0__)}());
signal.signal(signal.SIGALRM,old_handler);
(m.T*c).T;
df.iloc[idx];
var new_list=list(range(1,6))+list(range(15,20));
app.MainLoop();
var fig=plt.figure();
os.chdir(storetodir);
axborder.set_ylim(binimg.shape[0],-1);
print(codeproc.stdout.read());
var image=Image.open(f);
dset1.apply(func,__kwargtrans__({axis:1}));
layout.addWidget(self.label);
repeat(function __lambda__(){return bar(42)});
var __left0__=generate_arrangements(data);export var first_num=__left0__[0];export var first_arr=__left0__[1];export var second_num=__left0__[2];export var second_arr=__left0__[3];
export var nhb=random.choice(range(0,len(A)));
connection.commit();
elapsed2s.append(elapsed2);
elapsed1s.append(elapsed1);
d[key].append(row.__getslice__(1,null,1));
var subsampled=df.ix[function(){var __accu0__=[];for(var x of grouped.groups.py_values())__accu0__.append(choice(x));return py_iter(__accu0__)}()];
p.map(process_file,listdir(inputDir));
locale.resetlocale();
b.foo();
python-mfoo.bar;
thread.start();
img.size;
User.insert_many(row_dicts).execute();
df.Group.map(df.Group.value_counts());
plt.draw();
pdf_text_object.textOut(text);
imp.load_dynamic(__name__,"./P2JSnippets.py");
form.save();
main();
var df=df.py_sort();
mock.assert_called_with(42);
export var listOfStuff=function(){var __accu0__=[];for(var v of range(Math.floor(n/2),-1,-1))__accu0__.append(doSomethingWith(v));return __accu0__}();
fig.subplots_adjust(__kwargtrans__({wspace:.4}));
print(df[df.Symbol1==df.Symbol2&df.BB==df.CC]);
wx.StaticBitmap(panel,-1,bmp,tuple([10,pos]),tuple([bmp.GetWidth(),bmp.GetHeight()]));
other_app.other_view(request,__kwargtrans__(kwargs));
print(map(float_or_str,line.py_split()));
var myArray=np.vstack(myArray);
process_data(line);
moduleZ.py;
plt.plot(X,Y,__kwargtrans__({lw:0}));
do_some_other_stuff();
export var dict_lol=dict(function(){var __accu0__=[];for(var item of lol)__accu0__.append(tuple([item[1],item]));return py_iter(__accu0__)}());
legline.set_color(color);
df_out;
json.dumps(result,__kwargtrans__({py_default:json_util.py_default}));
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
self.__class__(data);
export var kwargs_new=function(){var __accu0__=[];for(var [k,v]of list(d.py_items()))__accu0__.append([str(k),v]);return dict(__accu0__)}();
t.start();
f(...args,__kwargtrans__(kwargs));
print(tag.nextSibling.nextSibling.__class__);
(function(){var __accu0__=[];for(var i of py_items)__accu0__.append(C?a:b);return __accu0__})();
var uniq_animal_groups=map(list,set(map(tuple,animal_groups)));
export var im1=ndimage.grey_erosion(im,__kwargtrans__({size:tuple([15,15])}));
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
x+1;
root.withdraw();
var pool=multiprocessing.Pool(multiprocessing.cpu_count());
var r=requests.py_get(URL,__kwargtrans__({cookies:jar}));
foo();
conn.close();
greetings.hello();
numpy.zeros(tuple([2,2]),__kwargtrans__({dtype:bool}));
r.findall(s);
var __left0__=p.communicate();var output=__left0__[0];var err=__left0__[1];
var a=a.reshape(-1);
d+=timedelta(__kwargtrans__({days:6-d.weekday()}));
export var largest_names=function(){var __accu0__=[];for(var x of heapq.nlargest(6,your_list,__kwargtrans__({key:itemgetter(1)})))__accu0__.append(x[0]);return __accu0__}();
print(yaml.load(f));
jsonify(__kwargtrans__({result:wordlist}));
print(function(){var __accu0__=[];for(var word of sentence.py_split())if(__in__(word,filters))__accu0__.append(filters.py_get(word));return __accu0__}());
proc.terminate();
[[2],[0],[1],[0],[1],[0]];
np.dot(Zij,G);
tuple(function(){var __accu0__=[];for(var x of G)__accu0__.append(x[0]);return py_iter(__accu0__)}());
print(t.timeit(5));
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
ax2.set_xticks([100,80,50]);
df;
a.remove(i);
hex(__mod__(val+(1<<nbits),1<<nbits));
pyglet.app.run();
distinct();
var result=response.read();
hashlib.md5(img.tostring()).hexdigest();
button.pack();
__in__(MyClass,MyClass.__mro__);
self.listTools.add(self.addButton);
a.append(tuple([1,2,4]));
xml.close();
sorted([B,C,A,D,X],__kwargtrans__({key:function __lambda__(cls){return len(cls.mro())}}));
hash(self.PersonID);
var str_list=function(){var __accu0__=[];for(var item of str_list)if(item)__accu0__.append(item);return __accu0__}();
py_next(hex_list);
OrderedDict(sorted(list(d.py_items()),__kwargtrans__({key:function __lambda__(t){return t[1]}})));
X.__setitem__([tuple([0,null,1]),i],x);
platform.system();
print(newcorpus.sents());
len(set(it_copy))==1;
export var DISABLE_SIMULATION=_DISABLE_SIMULATION;
a.flatten();
random.shuffle(array);
pprint(data);

var uniq_animal_groups=map(list,set(map(tuple,map(set,animal_groups))));
all(function(){var __accu0__=[];for(var x of list(d.py_values()))__accu0__.append(x==0);return py_iter(__accu0__)}());
b.py_setdefault(j,[]).append(i);
os.remove(os.path.join(my_dir,fname));
self.py_name=py_name;
form.save();
export var newImage=myImage.copy();
B.__setitem__([A[1],cat_index],A[2]);
shutil.rmtree(tmpdir);
f.flush();
seq.__getslice__(n,null,1)+seq.__getslice__(0,n,1);
df;
export var select_indices=np.where(np.logical_and(x>1,x<5));
logger.addHandler(fileHandler);
var b=np.array([0]*4);
var result=function(){var __accu0__=[];for(var data of zip(...args))__accu0__.append(sum(data));return __accu0__}();
export var dot_data=StringIO();
var fig=plt.figure();
new_list.append(x);
unique_a.view(a.dtype).reshape(tuple([unique_a.shape[0],a.shape[1]]));
plt.gcf().tight_layout();

Thread.__init__(self);
arity.__class__.arity=arity;
numpy.histogram(my_values,__kwargtrans__({bins:numpy.r_.__getitem__([-numpy.inf,my_bins,numpy.inf])}));
p.start();
df.clip(__kwargtrans__({upper:4400})).plot.hist(__kwargtrans__({stacked:true,bins:bins,normed:true}));
export var naive_dt=datetime.now();
var df=pd.DataFrame([[1,0,0,0],[0,0,1,0]]);
self._server.shutdown();
ax.set_autoscale_on(false);
traceback.print_exc();
help(hehe);
arr.__getitem__([[1,1],tuple([0,null,1])]);
(function(){var __accu0__=[];for(var x of mylist)if(!any(function(){var __accu1__=[];for(var c of x)__accu1__.append(c.isdigit());return py_iter(__accu1__)}()))__accu0__.append(x);return __accu0__})();
traceback.print_exc();
self._list[x];
b[i]=1;
itertools.islice(mygenerator(),10);
var l=json.loads(s);
export var afield=forms.ChoiceField(__kwargtrans__({choices:my_choices}));
var __left0__=tuple([1,2]);var a=__left0__[0];var b=__left0__[1];
var fig=plt.figure();
func();
Py_Finalize();
dialog.setAttribute(QtCore.Qt.WA_DeleteOnClose);
stack[-1].append([]);
var mask1=arange(10)>5&arange(10)<=8;
self.sock.connect(tuple([host,port]));
list(map(chr,list(range(ord(s[0]),ord(s[-1])+1))));
a.reshape(tuple([2,2,2]));
var logger=logging.getLogger(__name__);
var __left0__=tuple([a.__getslice__(0,-1,1),a[-1]]);var a=__left0__[0];var result=__left0__[1];
top.py_sort(__kwargtrans__({key:function __lambda__(a){return a[1]}}));
var b=tuple(b);
print(delta.days*24*60*60+delta.seconds+delta.microseconds/1E6);
tf.contrib.layers.embedding_column(workclass,__kwargtrans__({dimension:8}));
GEN_SUSPENDED;
x.view(tuple([float,len(x.dtype.names)]));
setattr(self,k,d[k]);
export var arraymean=sum(function(){var __accu0__=[];for(var i of array)__accu0__.append(int(i[0]));return __accu0__}())/len(array);
result.append(list[-1]);
output.append(float(row[4]));
var words=function(){var __accu0__=[];for(var x of words)if(!__in__(x,bad_words))__accu0__.append(x);return __accu0__}();
export var attrList=map(function __lambda__(x){return x.attr},objectList);
list(set(function(){var __accu0__=[];for(var x of l)if(l.count(x)>1)__accu0__.append(x);return __accu0__}()));
[[6,2],[7,5],[8,7],[9,9],[0,4]];
print(x);
do_something_dangerous();
fig.autofmt_xdate();
var AB=function(){var __accu0__=[];for(var [a,b]of itertools.zip_longest(A,B,__kwargtrans__({fillvalue:0})))__accu0__.append(a+b);return __accu0__}();
unittest.main();
sys.exit(1);
var ax2=ax.twinx();
foo();
any(function(){var __accu0__=[];for(var x of some_list)if(x>5)__accu0__.append(some_func(x));return py_iter(__accu0__)}());
r.json();
export var EMAIL_USE_TLS=true;
time.sleep(1);
var from_date=from_date-datetime.timedelta(__kwargtrans__({days:1}));
df.dtypes;
out.close();
some_value;
export var xml=xml.dom.minidom.parse(xml_fname);
uuid.uuid1(random.randint(0,0xffffffffffff));
unittest.main(__kwargtrans__({failfast:true}));
nonzero(r_.__getitem__([1,diff(t).__getslice__(0,-1,1)]));
bar.foobar();
dev/tests/test_file.py;
print(textelem.text);
var x=json.loads(x);
np.vstack([topbottom,xvalues]).__getitem__([tuple([0,null,1]),mask]).T;
ax.xaxis.set_major_formatter(major_formatter);
var fig=plt.figure();
s.add(get_my_new_random_number());
export var hmag=np.array(hmag);
self.label.pack();
ispower(1,1);
print(json.JSONEncoder().encode(response));
df.loc.__getitem__([tuple([0,null,1]),df.dtypes==object]);
random.shuffle(ans);
var args=parser.parse_args();
norm.cdf(1.96);
self.fileobj.seek(-8,1);
Base.metadata.create_all(engine);
views.py;
foo.f();
element.py_clear();
[1426802400,1429218E3];
export var firstvalue=mvv_list[0].mvv;
cursor.commit();
self.scrollbar.grid(__kwargtrans__({column:2,sticky:N+S}));
ax2.set_ylim([np.amin(image.__getitem__([tuple([0,null,1]),5,5])),np.amax(image.__getitem__([tuple([0,null,1]),5,5]))]);
print(p.stderr.read());
plt.show();
QtCore.QAbstractListModel.__init__(self);
canvas.configure(__kwargtrans__({yscrollcommand:vsb.set}));
soup.prettify();
print(Foo.instance_count);
var __left0__=s.accept();var conn=__left0__[0];export var addr=__left0__[1];
zip(...lol);
ax.yaxis.set_visible(false);
tableWidget.show();
json_data.close();
bool(urlparse.urlparse(url).netloc);
hash(obj);
print(request.headers);
var subList=function(){var __accu0__=[];for(var n of range(0,len(theList),N))__accu0__.append(tempList.__getslice__(n,n+N,1));return __accu0__}();
feeder_lock_object.lock();
f.columnconfigure(0,__kwargtrans__({weight:1}));
parser.parse(string);
ax.py_clear();
export var anims=function(){var __accu0__=[];for(var f of files)if(!__in__(f[2].lower(),IMAGE_TYPES))__accu0__.append(f);return __accu0__}();
seen_add(element);
a[b];
self.window.show();
batch.execute(__kwargtrans__({http:http}));
export var layout=QVBoxLayout();
var soup=BeautifulSoup(html);
do_the_stuff(my_list);
zip(...r);
plt.subplots_adjust(__kwargtrans__({top:.55}));
df.stack().loc.__getslice__(first,last,1).min();
run(__kwargtrans__({reloader:true}));
str(self.__dict__);
cursor.execute(CQLString);
x.py_pop();
np.testing.assert_almost_equal(tuple([x,x,x]),tuple([y,y,y]),5);
bar();
c.save();
fnan==fnan;
zip(words.__getslice__(1,null,1),words.__getslice__(0,-1,1));
outsock.close();
sorted(list(range(len(a))),__kwargtrans__({key:a.__getitem__}));
PLT.show();
sns.regplot(x,y,__kwargtrans__({lowess:true}));
a[a<0]=0;
cmp(x[1],y[1]);
main();
event.SetEventObject(self);
option.click();
datetime.datetime(__kwargtrans__({year:year,month:month,day:day,hour:hour}));
(function(){var __accu0__=[];for(var [i,j]of zip(list_of_urls,string.lowercase.__getslice__(0,14,1)))__accu0__.append(i+j);return __accu0__})();
var contents=fh.read();
print(db_data.count(__kwargtrans__({with_limit_and_skip:true})));
outputStream.close();
plt.show();
tuple([np.arange(lllon,urlon,2)]);
print(a,b,c);
self.widget.click.connect(self.onWidgetClick);
xlim(0,.8);
print(A[0],B[0]);
print(2*math.acos(0));
max(a,__kwargtrans__({key:itemgetter(1)}))[0];
out.close();
np.sum(Math.pow(np.linalg.solve(L,xdiff.T),2),__kwargtrans__({axis:0}));
__all__[py_name]=value;
syncdict.py_update([tuple([key,syncdict.py_get(key)+inc])]);
ax2.imshow(template,__kwargtrans__({cmap:plt.cm.gray}));
print(list1.__getslice__(-5,null,1));
sys.exit(app.exec_());
gc.get_objects();
ASTVisitor.__init__(self);
var logger=logging.getLogger(COMPANY_LOGGER);
m.__getitem__([tuple([0,null,1]),tuple([0,null,1]),tuple([0,null,-1])]);
server.terminate();
export var APP_ROOT=os.path.dirname(os.path.abspath("./P2JSnippets.py"));
C.__init__(self);
(function(){var __accu0__=[];for(var [[x1,x2],[y1,y2]]of combinations(myList,2))__accu0__.append(tuple([y1-x1,y2-x2]));return __accu0__})();
export var col_1=M.__getitem__([tuple([0,null,1]),1]);
var ax=fig.add_subplot(1,1,1);
(b-a).total_seconds();
writer.writerow(row);
int(round(170,-2));
self.view.header().resizeSection(column,width);
test();
tdelta.total_seconds();
root.mainloop();
self.assertAlmostEqual(em(1,2),.1481,4);
print(len(request.headers));
(function(){var __accu0__=[];for(var x of lis[0])__accu0__.append(x*py_next(cyc));return __accu0__})();
var i=int(float(s));
ax.xaxis.set_major_formatter(mpl.ticker.FuncFormatter(myFormatter));
export var tested=function(){var __accu0__=[];for(var i of input)if(i>2)__accu0__.append(i);return __accu0__}();
pprint(od,__kwargtrans__({width:40}));
var args=parser.parse_args();
export var flat=itertools.chain.from_iterable(pairs);
HttpResponse(__kwargtrans__({status:204}));
mylib.mySub.argtypes=[POINTER(c_double),c_int,POINTER(c_double)];
ax.yaxis.set_major_formatter(y_formatter);
var user=User.objects.py_get(__kwargtrans__({pk:uid}));
export var a_to_as=np.argsort(a);
var even=list(function(){var __accu0__=[];for(var n of numbers)if(0==__mod__(n,2))__accu0__.append(n==412?py_next(py_iter(tuple([]))):n);return py_iter(__accu0__)}());
ttk.Radiobutton(self.mainframe,__kwargtrans__({value:0})).grid(__kwargtrans__({column:1,row:2}));

print(ArrayAddition([2,95,96,97,98,99,100]));
map(func,...sequences);
print(float(x));
(function(){var __accu0__=[];for(var ip of sorted_ips)__accu0__.append(ips_data[ip]);return __accu0__})();
export var nDigits=int(ceil(log(nmb,base)));
plt.show();
reactor.run();
self.assertEqual(expected,self.nums.marshal());
self.fcall(...args);
signal.signal(signal.SIGTERM,sigterm_handler);
admin.site.register(LocationGroup);
container.grid_columnconfigure(0,__kwargtrans__({weight:1}));
numpy.fromiter(function(){var __accu0__=[];for(var row of X)__accu0__.append(your_func(row));return py_iter(__accu0__)}(),__kwargtrans__({dtype:bool,count:len(X)}));
time.sleep(1);
zip(...data);
self.frame.pack();
f.close();
export var ainb=np.array(function(){var __accu0__=[];for(var x of a.__getitem__([tuple([0,null,1]),2]))__accu0__.append(__in__(x,b));return __accu0__}());
var py_name=CharField();
f.read();
plt.ylim(-1,2);
(function(){var __accu0__=[];for(var i of range(0,len(str),chunk_size))__accu0__.append(str.__getslice__(i,i+chunk_size,1));return __accu0__})();
l[t[0]][t[1]]=something;
export var unq_out=np.any(np.diff(sorted_Ar,__kwargtrans__({axis:0})),1).sum()+1;
sorted(li,__kwargtrans__({key:function __lambda__(x){return x.anniversary_score}}));
sys.exit(-1);
np.roots([a,b,c]);
main();
var title=models.CharField();
plt.show();
MyInterpreter().cmdloop();
var x=np.linspace(0,2*np.pi);
np.issubdtype(np.complex64,np.integer);
sizer.Add(widget,__kwargtrans__({proportion:0,style:wx.ALL,border:5}));
csv_out.close();
self.fp.flush();
print(function(){var __accu0__=[];for(var v of py_values)if(len(v[1])>1)__accu0__.append(v);return __accu0__}());
str1_list==str2_list;
int(s);
pprint(list(iter_rows(ws)));
ax.plot(data1);
tunnel.start();
plt.plot(x,y);
xbook.close();
pd.Series(test).where(function __lambda__(x){return x!=1}).dropna();
f(...args);
process.poll();
var lines=function(){var __accu0__=[];for(var line of f)if(line.strip())__accu0__.append(line);return __accu0__}();
info[2][1]==6;
Text.__init__(self,...args,__kwargtrans__(kwargs));
var __left0__=tuple([given_str.__getslice__(0,len(given_str)/2,1),given_str.__getslice__(len(given_str)/2,null,1)]);var a=__left0__[0];var b=__left0__[1];
s.reset_index();
df.reindex(all_days);
get_value(dic,0);
tuple([mdd,start,end]);
export var td=timedelta(__kwargtrans__({seconds:TimeModel.objects.py_get(__kwargtrans__({id:1})).time}));
fig.canvas.draw();
[a,b,c];
subprocess.call([path_to_notepad,path_to_file]);
var data=function(){var __accu0__=[];for(var x of line.py_split())__accu0__.append(x.isalpha()?x:float(x));return __accu0__}();
np.array([0,1]).any();
var data=self.request.recv(1024);
export var config=configparser.ConfigParser();
var file=os.path.join(os.getcwd(),os.listdir(os.getcwd())[0]);
plot(x,y);
dict(function(){var __accu0__=[];for(var elem of s)__accu0__.append(tuple([elem,0]));return __accu0__}());
out.__setitem__([tuple([1,null,1]),tuple([0,null,1])],out.__getitem__([tuple([1,null,1]),tuple([0,null,1])])+tmp.__getitem__([tuple([0,-1,1]),tuple([0,null,1])]));
ax.xaxis.set_major_locator(ticker.MultipleLocator(20));
ssh.load_system_host_keys();
var py_keys=function(){var __accu0__=[];for(var [k,v]of Arr)__accu0__.append(k);return __accu0__}();
plt.show();
requests.py_get(url,__kwargtrans__({stream:true}));
aw2.show();
do_something(i);
var out=[];
q.put(urllib.request.urlopen(url).read());
print(py_typeof(parsed));
var A=alpha*x*y+beta*Math.pow(x,2)+gamma*Math.pow(y,2);
foo(__kwargtrans__(dict([[key,1],[foo,2]])));
json.dumps(datetime.datetime.now(),__kwargtrans__({py_default:date_handler}));
var found=m.group(1);
print(response.read());
os.close(fh1);
a.reshape(tuple([-1,5])).__setitem__([tuple([0,null,1]),tuple([1,4,1])],100);
vfunc(...np.ix_(xv,yv,zv));
var email=forms.EmailField(__kwargtrans__({required:true}));
fib(n-1)+fib(n-2);
p.wait();
(function(){var __accu0__=[];for(var [K,D]of list(c.py_items()))__accu0__.append(push(D,k,K));return __accu0__})();
signal.signal(signal.SIGINT,signal_handler);
var mask=numpy.random.choice([false,true],len(data_arr),__kwargtrans__({p:[.75,.25]}));
list(ordered_dict.py_values())[2];
words[0]==words[-1]&&words[-1]==check_str;
plt.ylim([0,5]);
winfile.close();
df.A.append(df.B).dropna().reset_index(__kwargtrans__({drop:true}));
time.sleep(2);
print(function(){var __accu0__=[];for(var i=0;i<len(arr);i++)__accu0__.append(arr[i][i][i]);return __accu0__}());
uwsgi-H/path/to/your/virtualenv;
urllib.request.urlopen(r);
print(my_queryset.query);
self.mfcChanged.emit();
deletemydict[key];
var logger=get_task_logger(__name__);
a.__getitem__([tuple([0,2]),tuple([0,null,1]),tuple([0,null,1])]);
self.rect.left+=self.xvel;
pipe.wait();
(function(){var __accu0__=[];for(var [k,v]of groupby(sorted(a)))__accu0__.append(k);return __accu0__})();
a+_(b*c);
var c=function(){var __accu0__=[];for(var [x,y]of zip(a,b))__accu0__.append(x+[y]);return __accu0__}();
var data=numpy.fromfile(my_file,__kwargtrans__({dtype:numpy.uint8})).reshape(-1,N);
print(function(){var __accu0__=[];for(var py_name of dir(B))if(isbuiltin(getattr(B,py_name)))__accu0__.append(py_name);return __accu0__}());
sample_object.save();
print(tree.getpath(e));
os.makedirs(dest_dir);
time.sleep(5);
list(range(...args));
var __left0__=wfloat.transpose(tuple([2,0,1]));var r=__left0__[0];var g=__left0__[1];var b=__left0__[2];
var d=function(){var __accu0__=[];for(var dct of l)for(var [k,v]of list(dct.py_items()))__accu0__.append([k,v]);return dict(__accu0__)}();
f.write(urllib.request.urlopen(url).read());
numpy.random.randint(0,1E3,count)*.001;
s.py_sort();
ax.plot(x,y*2);
zip_longest(...args,__kwargtrans__({fillvalue:fillvalue}));
tuple([[0,1,1,1,1,1,1,0]]);
var l=function(){var __accu0__=[];for(var i=1;i<n;i++)__accu0__.append(cond(i));return __accu0__}();
base64.urlsafe_b64encode(encoded_string);
ax.plot(x,y);
c.execute(query);
print(lxml.etree.tostring(the_doc,__kwargtrans__({pretty_print:true})));
screen.blit(surf2,tuple([200,200,100,100]));
plt.figure(__kwargtrans__({figsize:tuple([7,7])}));
sizer.Add(fsizer,0,wx.EXPAND);
tf.matmul(tf.transpose(x),y);
logging.info(line);
main();
tree.add(2);
plt.show();
avg_sum.append(A.sum(__kwargtrans__({axis:1})).mean());
(self.players1.all()|self.players2.all()).distinct();
var result=process.communicate()[0];

signal.signal(signal.SIGINT,signal_handler);
Gtk.main();
var options=webdriver.ChromeOptions();
int(math.ceil(x/100))*100;
(function(){var __accu0__=[];for(var i of a)if(i!=[0])__accu0__.append(i);return __accu0__})();
(function(){var __accu0__=[];for(var solution of solve(4))__accu0__.append(solution);return __accu0__})();
time.sleep(.5);
image.astype(np.uint8);
map(function __lambda__(d){return abs(d-date)},dates);
sys.setrecursionlimit(1E5);
cols.append(str(col));
s.cookies.py_clear();
dates_dict[key].append(date);
np.maximum.accumulate(Q,__kwargtrans__({axis:1}));
self.own_id=current_socket.getsockname()[1];
ax.yaxis.set_major_locator(ticker.MultipleLocator(20));
ax.plot(x,y);
random.shuffle(l);
var stream=len(sys.argv)>1?sys.argv[1]:sys.stdin;
obj.save();
wx.Panel.__init__(self,parent);
var x=int(x);
i+=1;
plt.show();
plt.setp(ax2.get_yticklabels(),__kwargtrans__({visible:false}));
json.dump(my_dict,f);
a.py_split();
sum(map(my_condition,l));
ax.add_patch(patch);
export var start=str(cols[1].find(__kwargtrans__({text:true})));
df.loc[df[0]==k[0]&df[1]==k[1]]=[[v[0],v[1]]];
export var food=function(){var __accu0__=[];for(var i of list(my_dict.py_values()))__accu0__.append(random.choice(i));return __accu0__}();
deletex[k];
var indices=zip(...sp_matrix.nonzero());
X[np.ix_(idx,idx)];
mail.starttls();
[z0]*len(seconds);
tuple([[0,0,0,0,0,0,0,0,0,0,0,0,0]]);
p.start();
var x=numpy.arange(data.shape[1]);
out.value_counts(__kwargtrans__({py_sort:false})).plot.bar();
test.py_pop(5);
add(...l);
plt.show();
writer.writerows(clean_list);
var a=fig.add_subplot(1,2,1);
tuple([[0,0,0,0,1,0,0,0]]);
signal.signal(signal.SIGALRM,_handle_timeout);
array.py_sort(__kwargtrans__({key:function __lambda__(k){return Math.pow(k[0]-point[0],2)+Math.pow(k[1]-point[1],2)}}));
os.open(os.devnull,os.O_RDWR);
self.setCentralWidget(self.view);
conn.rollback();
var y=numpy.arange(data.shape[0]);
print(dict(d));
(function(){var __accu0__=[];for(var [i,[a1,a2]]of enumerate(zip(s1,s2)))if(a1!=a2)__accu0__.append(i);return __accu0__})();
export var leg=plt.legend();
f_new.close();
df.as_matrix(__kwargtrans__({columns:[df.__getslice__(1,null,1)]}));
self.axes.set_title(title);
num_words+=len(line.py_split());
export var new_x=np.ma.masked_where(np.ma.getmask(m),x);
var image=np.zeros(tuple([max_x,max_y]));
var index=np.array([0,1,2]);
py_new.append(l.__getslice__(i,i+5,1));
main(sys.argv[1]);
ax1.plot(list(range(0,10)));
print(r.content);
df.to_excel(writer,__kwargtrans__({index:false}));
var line=line.strip();
heapq.heappush(heap,tuple([-prod2,x,y-1]));
plt.setp(g.ax_heatmap.get_xticklabels(),__kwargtrans__({rotation:90}));
ttypager(text);
self.add_widget(Label(__kwargtrans__({text:str(data)})));
py_typeof(c)(a);
A.f.__func__(b);
sys.path.append(somepath);
var A=(A-mean(A))/std(A);
buffer+=ser.read(ser.inWaiting());
var p=np.poly1d(np.polyfit(t,data,2));
l.extend(t);
var fig=plt.figure();
var soup=BeautifulSoup.BeautifulSoup(data);
ax1.set_color_cycle(function(){var __accu0__=[];for(var i=0;i<NPOINTS-1;i++)__accu0__.append(cm(1*i/(NPOINTS-1)));return __accu0__}());
new_list.append([some_tuple]);
pir(df);
self.figure.canvas.draw();
ax.imshow(X,__kwargtrans__({cmap:cm.jet}));
f.write(image_response.read());
ax.set_xlim(-1,7);
df.merge(melted_items,__kwargtrans__({left_index:true,right_index:true}));
(function(){var __accu0__=[];for(var x of data)if(func(x))__accu0__.append(x);return __accu0__})();
recur(n-1,count+1);
self.response.write(py_name);
document.append(line);
(function(){var __accu0__=[];for(var x=0;x<len(self.states);x++)if(self.states[x])__accu0__.append(x);return __accu0__})();
plt.show();
series.hist(__kwargtrans__({bins:division}));
var driver=webdriver.Chrome();
plt.plot(list(range(10)));
!any(d.py_values());
plt.show();
dict(function(){var __accu0__=[];for(var x of set(List))if(List.count(x)>1)__accu0__.append(tuple([x,duplicates(List,x)]));return py_iter(__accu0__)}());
print(r.__getslice__(i,i+n,1));
print(new_dic);
self.assertAlmostEqual(em(1,1),.6407,4);
a.py_sort(__kwargtrans__({key:key,reverse:true}));

print(year_fraction(datetime.datetime.today()));
print(counter.most_common());
numpy.nextafter(1,0);
element.py_clear();
df.ix.__getslice__(yesterday.strftime(fmt),now.strftime(fmt),1);
fig.canvas.draw();
print(tuple([f.__name__,f.__hash__]));
plt.setp(ax2,__kwargtrans__({xticks:[],yticks:[]}));
win.set_keep_above(false);
child.interact();
plt.xlim([0,1]);
ax1.set_color_cycle(function(){var __accu0__=[];for(var i of np.linspace(0,1,number_of_plots))__accu0__.append(colormap(i));return __accu0__}());
a.remove(10);

fig.autofmt_xdate();
df.join(pd.concat([pd.DataFrame(s).T]*len(df),__kwargtrans__({ignore_index:true})));
tuple([0,1,0,1]);
signal.alarm(0);
urllib.request.install_opener(opener);
(a1.__getitem__([tuple([0,null,1]),numpy.newaxis])==a2).all(__kwargtrans__({axis:2}));
OrderedDict(sorted(list(d.py_items()),__kwargtrans__({key:function __lambda__(t){return t[0]}})));
collections.Counter(lst);
ax.fill_between(np.arange(1,10),1,2,__kwargtrans__(__mergekwargtrans__({zorder:-1},kwargs)));
var id=Column(Integer,__kwargtrans__({primary_key:true}));
frame.Show();
df.columns=zip(...col_names)[1];
float(x)/float(x);
export var my_app=MyApp();
print(url_without_query_string);
img.putdata(my_list);
urllib.request.install_opener(opener);
self.canvas=tk.Canvas(self,__kwargtrans__({width:100,height:100}));
var data=json.loads(json_input);
reactor.run();
var B=np.array([2,4,6,8]);
export var nocapture=1;
(function(){var __accu0__=[];for(var x of l1)if(!any(function(){var __accu1__=[];for(var p of l2)__accu1__.append(fnmatch(x,p));return py_iter(__accu1__)}()))__accu0__.append(x);return __accu0__})();
f.close();
self.video_out.release();
var uniq_animal_groups=set(map(tuple,animal_groups));
var __left0__=plt.subplots(2,1);var fig=__left0__[0];var ax=__left0__[1];
outfile.close();
db.session.commit();
var conset=set(map(frozenset,consarray));
a.__getslice__(0,null,-1);
print(message.get_payload());
astar(formation,heuristic,solution,getneighbors);
export var sanitised_path=sanitise_filesystem_path(path);
zip_longest(...args,__kwargtrans__({fillvalue:fillvalue}));
sum(masked,__kwargtrans__({axis:1}));
export var sparse_out=coo_matrix(tuple([data,tuple([np.arange(N),a.ravel()-1])]),__kwargtrans__({shape:tuple([N,L])}));
a.tolist();
set(df.Col1)|set(df.Col2);
var data=function(){var __accu0__=[];for(var x of data)__accu0__.append(str(float(fractions.Fraction(x))));return __accu0__}();
self.driver.close();
[1][2][2];
admin.site.register(FooProxy,FooAdmin2);
(datetime.datetime.min+value).time();
jsonpath.jsonpath(data,path);
var new_dict=dict(list);
export var naive_utc_dt=datetime.utcnow();
var a=np.arange(100);
var __left0__=max(enumerate(l),__kwargtrans__({key:operator.itemgetter(1)}));export var max_idx=__left0__[0];export var max_val=__left0__[1];
time.sleep(.1);
var reader=io.open(sys.stdin.fileno());
PLT.show();
np.random.seed(0);
series[10]=np.nan;
matplotlib.pyplot.close();
np.nanargmax(a,__kwargtrans__({axis:1}));
var file=zipfile.ZipFile(BytesIO(request.content));
var msglist=list(chunkify(hextotal,4096));
ax.xaxis.set_minor_locator(MultipleLocator(.2));
django.setup();
shutil.copyfileobj(infile,outfile);
celery.start();
x.reshape(x.shape[0],-1).shape;
Response(UserSerializer(request.user).data);
(function(){var __accu0__=[];for(var x of it)__accu0__.append(Factorial(x));return __accu0__})();
f();
np.roll(a,-2);
fp.close();
gca().get_xaxis().get_major_formatter().set_useOffset(false);
myfunc();
res.cumsum().applymap(function __lambda__(x){return np.unique(list(x))});
plt.show();
p.start();
pd.DataFrame(v.__getslice__(i0,i1,1),df.loc[df.py_name].index.__getslice__(i0,i1,1),df.columns);
new_string;
connection.disconnect();
py_typeof(a).__call__(a);
f.write(chunk);
b.py_sort(__kwargtrans__({key:order.py_get}));
self.setWindowFlags(Qt.FramelessWindowHint);
print(f.read());
ax.plot_surface(x,y,10,__kwargtrans__({rstride:5,cstride:5,facecolors:img}));
var im=img.load();
self.__class__.__name__;
print(df.reset_index());
[1,2];
(function(){var __accu0__=[];for(var [k,g]of groupby(a))__accu0__.append(list(g));return __accu0__})();
self.start.connect(self.run);
plt.bar(J2-.5*width,z(J2),__kwargtrans__({width:width}));
csv_fileh.seek(0);
User.objects.py_get(__kwargtrans__({pk:user_id}));
ee.save();
max(function(){var __accu0__=[];for(var n of a)if(n<.7)__accu0__.append(n);return py_iter(__accu0__)}());
new set([new set([raw|unquote_raw])]);
inspect.getargvalues(traceback.tb_frame);
dict.__delitem__(self,key);
p.start();
b?a:c;
instance.save();
df;
var l=np.array([[0,0],[0,1],[1,1]]);
var __left0__=parser.parse_known_args();var args=__left0__[0];export var unknownargs=__left0__[1];
[1][2][1];
var r=requests.post(url,__kwargtrans__({files:files,data:py_values}));
pprint(function(){var __accu0__=[];for(var key of dir(f))__accu0__.append([key,getattr(f,key)]);return dict(__accu0__)}());
self.fig=mplfig.Figure(__kwargtrans__({figsize:tuple([5,4]),dpi:100}));
frec(word);
var py_keys=set();
ax.bar(list(range(len(dates))),py_values,__kwargtrans__({width:width}));
module1.f();
s.run();
var app=QtGui.QApplication(sys.argv);
nums.py_sort(__kwargtrans__({key:functools.cmp_to_key(function __lambda__(x,y){return cmp(y+x,x+y)})}));
plt.legend(__kwargtrans__({handles:legend_patches}));
var ssh_client=paramiko.SSHClient();
print(function(){var __accu0__=[];for(var i of nums)for(var f of fruit)__accu0__.append([i,f.lower()]);return dict(__accu0__)}());
request.finish();
print(cursor.fetchall());
df.reindex(ind-ind2).join(df2.reindex(ind-ind2));
inithello();
base64.b64decode(a);
ax.scatter(x,y);
np.shape(result);
var reader=csv.reader(f);
plt.show();
df.index.get_level_values(0);
p.plot(x,y);
var __left0__=plt.subplots(tuple([2,2]));var fig=__left0__[0];var axes=__left0__[1];
time.sleep(.1);
plt.pcolormesh(X.__getslice__(0,1,1),Y.__getslice__(0,1,1),C.__getslice__(0,1,1));
var newList=function(){var __accu0__=[];for(var [word,mask]of zip(s,b))if(mask)__accu0__.append(word);return __accu0__}();
mask.__setitem__([tuple([y,y+h,1]),tuple([x,x+w,1])],img.__getitem__([tuple([y,y+h,1]),tuple([x,x+w,1])]));
zip(...[py_iter(l)]*2);
server.sendmail(FROMADDR,TOADDRS,msg);
out.close();
db.put(1);
df.loc[i]=function(){var __accu0__=[];for(var d of data)__accu0__.append(float(d));return __accu0__}();
len(function(){var __accu0__=[];for(var i of x)if(60<i&&i<70)__accu0__.append(i);return __accu0__}());
(df==0).astype(int).sum(__kwargtrans__({axis:1}));
var b=a[m];
board.append([]);
destination.close();
var y=x.__getslice__(1,null,1)-x.__getslice__(0,-1,1);
c.coords(x);
plot(x,sin(x));
instance._meta.app_label;
subprocess.Popen(__mod__(SCRIPT,filename),__kwargtrans__({shell:true}));
python-V;
plt.ion();
py_next(p);
x.astype(int);
sys.stdout=old_stdout;
(function(){var __accu0__=[];for(var x of l)if(!__in__(x,f))__accu0__.append(x);return __accu0__})();
(function(){var __accu0__=[];for(var [i,x]of enumerate(a))if(__in__(i,indices))__accu0__.append(x);return __accu0__})();
list(intermix([1,0,1,1,2,1,0,1,1,1,2]));
a();
export var picture=pygame.transform.scale(picture,tuple([1280,720]));
Silly(0);
ax.yaxis.set_visible(false);
(function(){var __accu0__=[];for(var i of x)__accu0__.append(id(i));return __accu0__})();
plt.figure(1);
double([1,2]);
var __left0__=ax.contourf([],[],[],500);export var cont=__left0__[0];
fig.canvas.draw();
int(s);
app.MainLoop();
isinstance(x,int);
sorted(array,__kwargtrans__({key:function __lambda__(x){return x===0}}));
c.append(l);
main_sizer.Add(content_sizer,1,wx.EXPAND);
var a=A(10);
file.seek(0,os.SEEK_END);
print(url);
ax.set_ylim(0,max_height);
a[i]=d.py_get(a[i],a[i]);
surround.py;
result.append(item);
self.show();
xl.ActiveWorkbook.Close(__kwargtrans__({SaveChanges:1}));
driver.switch_to_default_content();
export var areas_pos=abs(z.__getslice__(0,-1,1)+z.__getslice__(1,null,1))*.5*dx;
var __left0__=proc.communicate();var out=__left0__[0];var err=__left0__[1];
var fig=plt.figure(__kwargtrans__({figsize:tuple([10,5])}));
shout.start();
list(f([9,8],[2,1]));
map(int,testList);
img.show();
print(tuple([a,b]));
wrapper(fn(...args,__kwargtrans__(kw)));
(function(){var __accu0__=[];for(var x of l)if(!__in__(x,ulist))__accu0__.append(ulist.append(x));return __accu0__})();
print(a,b,c,d);
export var dict_you_want=function(){var __accu0__=[];for(var your_key of your_keys)__accu0__.append([your_key,old_dict[your_key]]);return dict(__accu0__)}();
plt.show();
sys.stdout.write(line);
user().key().id();
export var list_comprehension=function(){var __accu0__=[];for(var i=0;i<4;i++)if(i>0)__accu0__.append(i);return __accu0__}();
unbroadcast(y).shape;
plt.show();
var __left0__=d.nonzero();var z=__left0__[0];var x=__left0__[1];var y=__left0__[2];
var text=str(encoded_string,the_encoding);
arr.__setslice__(0,null,null,[a,b]);
a1[mask.A]=0;
ax2.yaxis.get_offset_text().set_color(plot_ax2.get_color());
(function(){var __accu0__=[];for(var item of mylist)if(item.isalpha())__accu0__.append(item);return __accu0__})();
thread.start_new_thread(loop0,tuple([]));
[n];
plt.show();
ax.set_theta_direction(-1);
graph.tree().pprint();
export var latest_subdir=max(all_subdirs,__kwargtrans__({key:os.path.getmtime}));

np.where(binplace==2);
self._numberButtons[i].clicked.connect(function __lambda__(i){if(typeof i=="undefined"||i!=null&&i.hasOwnProperty("__kwargtrans__"))var i=i;return self._number(i)});
self.listbox.pack(__kwargtrans__({padx:10,pady:10}));
setattr(self,key,value);
do_post_install_stuff();
print(k,a[k]);
var data=s.recv(4096);
app.exec_();
print(Foo.bar.__get__);
uniques[col].py_update(chunk[col].unique());
ax.yaxis.set_ticks([]);
sys.exit(1);
f.write(s);
print(df1[[0,7]]);
var l=function(){var __accu0__=[];for(var s of sections)__accu0__.append(s.py_name);return __accu0__}();
self.transport.loseConnection();
self.suggestions.append(a[1]);
p.map(g,list(range(10)));
self.py_name;
time.sleep(1);
print(user_result);
subprocess.call(cmd,__kwargtrans__({stdin:fd}));
df.drop(df.index.get_duplicates());
tuple([[0,0,1,1,1,1,1,0]]);
self.selenium.start();
export var od=OrderedDict(sorted(list(d.py_items()),__kwargtrans__({key:function __lambda__(x){return x[1]},reverse:true})));
os.kill(int(pid),0);
app.exec_();
(x&-x).bit_length()-1;
show();
print(function(){var __accu0__=[];for(var each of l)__accu0__.append(function(){var __accu1__=[];for(var x of l)__accu1__.append(each-x);return __accu1__}());return __accu0__}());
dir();
export var lesser=qsort(function(){var __accu0__=[];for(var x of inlist.__getslice__(1,null,1))if(x<pivot)__accu0__.append(x);return __accu0__}());
var writer=csv.writer(f);
var a=x<1?1:x>10?10:x;
var B=A[0];
export var conv1d_on_image=Reshape(tuple([dim_x,output_channels]))(conv1d_on_image);
var yourdate=dateutil.parser.parse(datestring);
plt.show();
export var student=Student.objects.py_get(__kwargtrans__({user:id}));
a.__getitem__([tuple([0,null,1]),tuple([0,null,1]),tuple([0,null,1]),0]).flatten();
ax.yaxis.labelpad=20;
json.dumps(_data,__kwargtrans__({indent:4}));
plt.show();
descendents_ancestors.add(descendent);
min(dates,__kwargtrans__({key:function __lambda__(d){return abs(d-date)}}));
plt.show();
mask.reshape(-1,20).sum(1);
sleep(1);
df.loc[mask];
logger.setLevel(logging.INFO);
api.update_status(__kwargtrans__({status:single_tweet}));
print(nat.Poland);
output.writeframes(data[0][1]);
self.thread=threading.Thread(__kwargtrans__({target:self.run,args:tuple([])}));
print(df.to_csv(__kwargtrans__({index:false,header:false})));
ax.set_ylim(-40,40);
pd.concat(vals,__kwargtrans__(__mergekwargtrans__({axis:1,py_keys:py_keys},kwargs)));
obj.save();
var root=Tk();
plt.show();
process.poll();
var categories=Category.filter(__kwargtrans__({animals__in:animals})).all();
s.sendmail(me,you,msg.as_string());
l.extend([pad]*(n-len(l)));
var b=list(a);
df.plot();
map(list,zip(...lis));
var size=sum(function(){var __accu0__=[];for(var _ of bucket.objects.all())__accu0__.append(1);return py_iter(__accu0__)}());
var __left0__=np.ogrid.__getitem__([tuple([0,shape[0],1]),tuple([0,shape[1],1])]);var x=__left0__[0];var y=__left0__[1];
export var html_source=driver.page_source;
ax.set_axis_off();
start.mainloop();
set(chain.from_iterable(df.genres));
var db=client.get_default_database();
df.idxmax();
sys.exit();
(function(){var __accu0__=[];for(var row of data)__accu0__.append(row.tostring());return __accu0__})();
export var csv_writer=csv.writer(csv_file);
np.vstack(np.hsplit(a,m/k));
plt.show();
Z[np.where(Z==0)]=np.nan;
cv2.CV_FONT_HERSHEY_SIMPLEX;
self.SetIcon(icon);
context.py_pop();
x+=tuple(y);
audio.save();
plt.plot(xvalues,yvalues);
setattr(self,attr,getattr(student,attr));
var pts=[tuple([10,10]),tuple([10,11]),tuple([20,11]),tuple([20,10]),tuple([10,10])];
var ii=(Math.pow(s1,2)+Math.pow(s2,2)<1).sum();
GL.glVertexAttribPointer(self.loc,1,GL.GL_FLOAT,GL.GL_FALSE,0,0);
p2.stdout.close();
pg.draw.rect(surf,STIMCOL,tuple([10,20,40,50]));
lst.__getslice__(i,null,1)+lst.__getslice__(0,i,1);
json.dump(pickle.load(fpick),fjson);
inF.close();
var x_new=sparse.lil_matrix(sparse.csr_matrix(x).__getitem__([tuple([0,null,1]),col_list]));
print(tuple([f,b]));
scipy.stats.linregr(X,Y);
(function(){var __accu0__=[];for(var [k,v]of a.py_items())__accu0__.append([k,callable(v)?v():v]);return dict(__accu0__)})();
export var repo=user.create_repo(full_name);
plt.show();
pd.get_dummies(s1[s1.notnull()]);
time.sleep(1);
export var blue_count=len(set(list_of_blue_items).difference(list_of_all_items));
var toppings=forms.ModelMultipleChoiceField(__kwargtrans__({queryset:Topping.objects.all()}));
df_norm.max()-df_norm.min();
export var topten=sorted(list(mydict.py_items()),__kwargtrans__({key:itemgetter(1),reverse:true})).__getslice__(0,10,1);
var browser=webdriver.Chrome(__kwargtrans__({chrome_options:co}));
self.send(response.toXml());
print(count.most_common(16));
(function(){var __accu0__=[];for(var a=0;a<x+1;a++)for(var b=0;b<y+1;b++)for(var c=0;c<z+1;c++)__accu0__.append(tuple([a,b,c]));return __accu0__})();
f.seek(0,os.SEEK_END);
plt.show();
traceback.print_exc();
app.MainLoop();
forwarder.write(serial_out);
var root=Tk();
GpsPoint(self.x+other,self.y+other,self.z+other);
tuples.remove(tuple([entry[1],entry[0]]));
plt.scatter(latt,lont,__kwargtrans__({c:uniqueish_color(len(latt))}));
f.write(data);
ax.set_yticklabels(map(str,list(range(90,0,-10))));
data.most_common(1);
var response=urllib.request.urlopen(req);
ax.yaxis.set_visible(false);
logger.addHandler(handler);
set_keyring(PlaintextKeyring());
map(int,temps);
var __left0__=process.communicate();export var stdoutdata=__left0__[0];export var stderrdata=__left0__[1];
self.button.pack();
print(args.bar);
window.show_all();
np.random.seed(seed);
var l=math.floor(math.log10(i))+1;
list(collection.questions);
entry_list.extend(function(){var __accu0__=[];for(var x of feed.entry)__accu0__.append(x.title.text);return py_iter(__accu0__)}());
a.py_sort(__kwargtrans__({key:operator.itemgetter(1)}));
random.random()<probability;
bin(100);
df2.reindex(ix);
(function(){var __accu0__=[];for(var pair of zip(iterA,iterB))__accu0__.append(multiply(...pair));return __accu0__})();
plt.plot(x_fit,y_fit);
min(data,__kwargtrans__({key:operator.itemgetter(1)}));
var y=np.linspace(0,1,20);
serializer.save();
groups.append(list(g));
print(dishes[key]);
self.SetTitle(str(event.GetSize()));
var __left0__=zip(...li);var x=__left0__[0];var y=__left0__[1];
(function(){var __accu0__=[];for(var x of result)__accu0__.append(x[0]*x[1]);return __accu0__})();
c[a|b];
admin.site.register(ModelMock);
list(np.array(a)-np.array(b));
sys.stdout.write(py_next(spinner));
curses.endwin();
obj.__dict__[prop];
theclass;
any(function(){var __accu0__=[];for(var i=0;i<len(sub)-ln+1;i++)__accu0__.append(lst.__getslice__(i,i+ln,1)==sub);return py_iter(__accu0__)}());
str(str(self));
sys.modules[__name__]=ModuleClass();
n*(n-1)*2;
(function(){var __accu0__=[];for(var _=0;_<100;_++)__accu0__.append(node());return __accu0__})();
var title=CharField();
proc.stdin.write(text);
export var firstpost=db.DateTimeProperty();
var current_time=time.time();
plt.ylim([0,1]);
(function(){var __accu0__=[];for(var [x,y]of it.combinations(a,2))__accu0__.append(y-x);return __accu0__})();
df.buyer_id=df.apply(make_buyer_id,__kwargtrans__({axis:1}));
np.linalg.inv(a);
var lst=ast.literal_eval(strab);
export var Session=sessionmaker(__kwargtrans__({bind:engine,autocommit:true}));
var app=Flask(__name__);
max(MyCount,__kwargtrans__({key:int}));
var ax=fig.add_subplot(111);
sp.Matrix(np.diag(d-4)+4);
print(random.triangular(0,1,.7));
print(function(){var __accu0__=[];for(var [i,j]of list(d.py_items()))__accu0__.append(tuple([i,sum(j)]));return __accu0__}());
p.stdin.close();
urllib.request.install_opener(opener);
var r=int(s);
lines.py_pop(0).remove();
plt.hold(true);
platform.version();
tuple([[1,0,1,1,0,0,0,1]]);
print(eventdata);
logger.setLevel(logging.INFO);
var pos=nx.spring_layout(G);
var content=browser.page_source;
wb.save(stream);
time.sleep(1);
shutil.rmtree(TEST_OBJECTS_DIR,__kwargtrans__({onerror:on_rm_error}));
a.py_update(1);
a.bit_length();
print(match.groups());
var i=s.index(t.lower());
serializer.is_valid();
self.connection.close();
db.session.commit();
[datetime.datetime(2012,1,1,0,0),datetime.datetime(2012,1,1,1,0)];
df.apply(function __lambda__(row){return get_nth(row,n)},__kwargtrans__({axis:1}));
result.extend(list(range(a,b+1)));
data_cluster.fit(data_numeric);
x.dtype;
index_list(l);
var docvec=model.docvecs[99];
self.save();
time.sleep(1);
var list2=function(){var __accu0__=[];for(var i=0;i<100;i++)__accu0__.append(function(){var __accu1__=[];for(var item of list)if(len(item)>i)__accu1__.append(item[i]);return __accu1__}());return __accu0__}();
client.close();
__in__(tuple([1,2]),d);
print(list(kwargs.py_items()));
var result=DataFrame(list(cursor),__kwargtrans__({columns:tweet_fields}));
draw.ellipse(tuple([0,0])+size,__kwargtrans__({fill:255}));
print("./P2JSnippets.py");
list(itertools.product(a,b));
var form=forms.ChapterForm(request.POST,request.FILES,__kwargtrans__({instance:chapter}));
(df[self.target]==t).any();
cfloats[i]=pyfloats[i];
np.argmin(myList);
(function(){var __accu0__=[];for(var p of permutations(b))__accu0__.append(list(zip(a,p)));return __accu0__})();
print(py_typeof(im));
signal.signal(signal.SIGINT,signal.SIG_IGN);
br.set_handle_refresh(mechanize._http.HTTPRefreshProcessor(),__kwargtrans__({max_time:1}));
print(info.get_content_maintype());
self.lock.acquire();
aDict[py_name].append(tuple([startTime,endTime]));
var s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);
var pool=multiprocessing.Pool();
list.py_pop(self,...args,__kwargtrans__(kwargs));
urllib.request.install_opener(opener);
browser.show();
out.append(l[new_i].py_pop(random.randint(0,len(l[new_i])-1)));
print(sqrt(2));
dest_file.close();
set().union(...lis);
var py_values=list(dictionary.py_values());
var matrix=function(){var __accu0__=[];for(var line of infile)__accu0__.append(line.rstrip());return __accu0__}();
np.where(a>5)[0][0];
a.astype(numpy.int64);
export var skel=mh.thin(im);
var mylist=function(){var __accu0__=[];for(var [i,p]of enumerate(mylist))if(!__in__(i,remove))__accu0__.append(p);return __accu0__}();
int(s);
export var fullname=os.path.join(thispath,filename);
plt.show();
main();
unittest.main();
var filename=input();
sleep(1);
export var duggars=db.session.query(Parent).filter(Parent.child_count>17);
f.write(file_data);
var sess=tf.Session();
tuple([x_2,y_2]);
sys.stdout.write(line);
ax.set_xticks(np.arange(len(dates))+width/2);
var __left0__=tuple([min(x,y),max(x,y)]);export var min_val=__left0__[0];var max_val=__left0__[1];
export var resource=urllib.request.urlopen(url);
var serializer=UserSerializer(user,__kwargtrans__({data:request.DATA,partial:true}));
format_to_year_to_value_dict.py_setdefault(format_str,dict({}))[year]=value;
var x=array([0,0,0,1,1,0,0,0,1,0,0,0,1,0,1,1],__kwargtrans__({dtype:np.bool}));
subprocess.Popen(shlex.py_split(command));
print(f.__self__);
session.add(another_obj);
export var argvb=list(map(os.fsencode,sys.argv));
tuple([[1,0,0,0,0,1,0,1]]);
print(np.array([i,j],__kwargtrans__({dtype:np.int64})));
py_iter(self.__dict__);
decimal.Decimal(x.seconds);
_(1,4);
reactor.run();
logging.getLogger().setLevel(logging.INFO);
var form=CustomQueryConstraintForm(__kwargtrans__({initial:request.POST}));
process.kill();
self.fig.canvas.draw();
export var sorter=np.argsort(colkeys);
var match=re.search(pat,s);
var new_df=pandas.DataFrame.from_dict(a_dict);
var b=np.array([1,.9,.8,.7,.6]);
ax.scatter(theta,r);
var response=requests.py_get(bl_url,__kwargtrans__({headers:headers}));
export var script_dir=os.path.dirname("./P2JSnippets.py");
print(polygon(4,2,math.pi/4,[10,10]));
self.canvas.after(10,self.move);
p.wait();
list(hex_list);
self._handler.close();
self.show();
-np.linalg.det(self.state);
ax.imshow(data);
print(r.content);
data.remove(row);
[0,0,0,0,0];
var session=requests.session();
(function(){var __accu0__=[];for(var [x,y]of zip(s,t))__accu0__.append(x==y);return __accu0__})();
current_milli_time();
self.lock.release();
random.shuffle(c);
(function(){var __accu0__=[];for(var [x,y]of py_split)__accu0__.append(tuple([int(x),int(y)]));return py_iter(__accu0__)})();
getpass();
new set([new set([form.as_p])]);
sys.exit(1);
print(make_hash(Foo.__dict__));
print(test._tests);
self.rect.top+=self.yvel;
print(list(get_names(func)));
main();
export var cv_image=cv_image.__getitem__([tuple([0,null,1]),tuple([0,null,1]),tuple([0,null,-1])]);
a.remove(b);
inithello();
sys.exit(main());
printFoo();
new set([new set([analytics_code])]);
var v=fbx.FbxVector4(x,y,z);
newdict.py_update(mydict);
grequests.map(rs);
TaskBase.__call__(self,...args,__kwargtrans__(kwargs));
main();
random.shuffle(row);
sys.getwindowsversion()[0]>=6;
d[k].add(v);
map(flat_tuple,a,b,c);
OrderedDict.__getitem__(self,key);
var l=[0]*1E4;
b[0].append(1);
sorted(lst);
export var dtsegs=zip(dtg0,dtg1);
area+=(p1[0]-p0[0])*(trapezoid?(p1[1]+p0[1])/2:p0[1]);
show();
time.sleep(5);
sys.stderr.close();
setattr(self,py_name,kwargs[py_name]);
img.resize(tuple([width,height]),Image.ANTIALIAS);
pdb.set_trace();
print(intersects(a,b));
print(dict(customers));
canvas.pack();
var __left0__=random.choice(list(d.py_items()));var k=__left0__[0];var v=__left0__[1];
var data=f.read();
rgb_values.py_pop(-1);
(function(){var __accu0__=[];for(var [k,v]of list(summed.py_items()))__accu0__.append([k,v/len(list_of_dicts)]);return dict(__accu0__)})();
MyModel.objects.filter(__kwargtrans__({created__isoyear:year,created__week:week}));
getattr(hello,m)();
string.ascii_lowercase.__getslice__(0,14,2);
scipy.optimize.fsolve(g,0);
client.connect(HOST,__kwargtrans__({username:USER,password:PASSWORD}));
list(params.py_items());
var py_items=list(dictionary.py_items());
nltk.clean_html(html);
do_something_useful();
someList.py_sort(__kwargtrans__({key:key2,reverse:true}));
var soup=BeautifulSoup.BeautifulSoup(doc);
print(dateparser.parse(date_string).date());
os.path.join(path,fname);
ax.get_xticklabels()[i].set_visible(false);
service.files().copy(__kwargtrans__({fileId:originalId,body:newfile})).execute();
self.run.grid(__kwargtrans__({row:4,column:0,sticky:EW}));
export var dataPadded=numpy.concatenate(tuple([data,padding]),__kwargtrans__({axis:1}));
df_new;
json.dump(sample,fp);
f(1);
self.Show();
(b-a).seconds;
len(self.__dict__);
sys.stdout.flush();
browser.submit();
var ax=plt.subplot(111);
loader.construct_yaml_map(node);
inspect.getmembers(a,__kwargtrans__({predicate:inspect.ismethod}));
df.isnull().any(__kwargtrans__({axis:1}));
myClass.__subclasses__();
print(L[i]);
infile.close();
frame1.axes.get_yaxis().set_visible(false);
fig.autofmt_xdate();
(function(){var __accu0__=[];for(var k of li)__accu0__.append([k,c[k]]);return dict(__accu0__)})();
output.append(sublist[0]);
ws.append(l);
elem.py_clear();
(function(){var __accu0__=[];for(var x of itertools.permutations(list1,len(list2)))__accu0__.append(zip(x,list2));return __accu0__})();
export var numcols=len(input[0]);
ax2.set_xlim([0,repeat_length]);
plt.figure();
ax.set_xlim(-40,40);
self.finish();
time.sleep(1);
imshow(Z1,__kwargtrans__({cmap:cm.hsv,alpha:.6,extent:extent}));
unittest.main();
time.sleep(5);
export var last_modified_date=datetime.fromtimestamp(mtime);
var result=pattern.sub(function __lambda__(x){return d[x.group()]},s);
sleep(1);
all(function(){var __accu0__=[];for(var [x,y]of zip(L,L.__getslice__(1,null,1)))__accu0__.append(x>=y);return py_iter(__accu0__)}());
(function(){var __accu0__=[];for(var v of x2)if(v[1]==optimal[0]&&v[2]==optimal[1])__accu0__.append(v);return __accu0__})();
var today=datetime.datetime.today();
df[1].apply(pd.Series);
s.get_data();
app.run();
var ssh_client=paramiko.SSHClient();
var data=json.loads(file);
mystr.py_replace(k,v);
getattr(self._i,n);
var result=sorted(py_iter(promotion_items.py_items()),__kwargtrans__({key:item_value}));
print(x.task_id);
sorted(s,function __lambda__(x,y){return cmp(x.lower(),y.lower())||cmp(x,y)});
var value=py_next(py_iter(some_collection));
self.__dict__.py_update(_dict);
my_list;
time.sleep(10);
self.builder.add_from_file(self.glade_file);
math.isnan(math.nan);
a.__getitem__([np.arange(a.shape[0]),entries_of_interest]);
var d=math.floor(sdl2.SDL_ALPHA_OPAQUE*(math.ceil(s)-s)+.5);
time.sleep(1);
(function(){var __accu0__=[];for(var i=1;i<n+1;i++)for(var comb of itertools.combinations(x,i))__accu0__.append(list(comb));return __accu0__})();
startupinfo.dwFlags|=subprocess.STARTF_USESHOWWINDOW;
shlex.py_split(raw_args,__kwargtrans__({posix:false}));
var A=numpy.vstack([A,newrow]);
logging.Formatter.converter=time.gmtime;
bar.baz.__getslice__(a,b,c).foo();
mainFrame.grid();
export var object_list=function(){var __accu0__=[];for(var c of Content.objects.all())if(random.random()<fraction)__accu0__.append(c);return __accu0__}();
writer.writerows(worksheet.get_all_values());
number+=1;
sys.stdout.flush();
logging.getLogger(className);
len(set(sum(a,[]))&set(b)&set(c).is_empty())>0;
MySuperClass.__init__(self);
t.start();
QtGui.QWidget.__init__(self,parent);
A.remove(i);
plt.legend(__kwargtrans__({numpoints:1}));
out.read();
list(y);
clf.fit(X,y);
print(root.winfo_width());
var a=np.arange(10);
logger.setLevel(logging.DEBUG);
httpd.serve_forever();
person.delete();
var client=requests.session();
my_list.py_pop();
self._getlock();
df[function(){var __accu0__=[];for(var l of df.genre.py_values.tolist())__accu0__.append(iscomedy(l));return __accu0__}()];
var element=min(myset);
var some_object=klass();
form.save();
app.start();
ax.add_patch(rect);
list.append(run(...i));
conn.commit();
min(max(start,num),end);
__in__(group,user.groups.all());
export var pkgpath=os.path.dirname(testpkg.__file__);
var y=odeint(func,0,t);
np.delete(arr,index,0);
np.vstack(function(){var __accu0__=[];for(var i=0;i<width;i++)__accu0__.append(A.__getslice__(i,i-width,1));return __accu0__}()).T;
message.save();
t.isoformat();
(function(){var __accu0__=[];for(var word of text.py_split())__accu0__.append(word.strip(string.punctuation));return __accu0__})();
f.write(response.body);
var timestamp=(dt-datetime(1970,1,1)).total_seconds();
f_out.write(data);
ax.xaxis.set_major_locator(ticker.FixedLocator(x));
ax1.plot(pd.Series(np.random.uniform(0,1,__kwargtrans__({size:10}))));
plt.show();
seq.py_sort();
print(map(itemgetter(1),g));
(function(){var __accu0__=[];for(var [i,elem]of enumerate(lst))if(condition(elem))__accu0__.append(i);return __accu0__})();
time.sleep(0);
var a=list(range(10));
any(i)&&!any(i);
var result=np.array(list(ranges(intersect(a,b))));
main.py;
export var image_data=np.asarray(image);
list(grpname.py_keys());
list(subgrpname.py_keys());
print(df);
pylab.show();
ax.add_patch(unmanhattan_patch);
var ax=fig.add_subplot(111);

EmailThread(subject,html_content,recipient_list).start();
pd.rolling_mean(aapl,50).plot();
arr[mask!=5]=0;
writer.writeheader();
self.root.quit();
set(b1).intersection(b2);
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
export var current_frame=inspect.currentframe();
a.py_sort(__kwargtrans__({key:function __lambda__(v){return v!=0}}));
a[mask]=888;
print(Child.getId());
plt.plot(x,y,__kwargtrans__({color:tuple([r,g,b])}));
A().test();
(function(){var __accu0__=[];for(var value of a1)if(__in__(value,mapping))__accu0__.append(mapping[value]);return __accu0__})();
var mask=pd.Index(base).union(pd.Index(base-1)).union(pd.Index(base+1));
JsonResponse(posts_serialized,__kwargtrans__({safe:false}));
var a=np.array(t);
send_thread.daemon=true;
var bigdata=data1.append(data2,__kwargtrans__({ignore_index:true}));
var result=collections.defaultdict(function __lambda__(){return collections.defaultdict(list)});
time.mktime(utc_tuple)-time.mktime(tuple([1970,1,1,0,0,0,0,0,0]));
calendar.timegm(time.gmtime(0));
var b=A.__getitem__([2,tuple([0,null,1])]).copy();
var key=sum(map(itemgetter(play)));
win.show();
app.register_blueprint(auth_blueprint);
libtest2d.print_2d_list(arr2d.shape[0],arr2d.shape[1],arr2d);
result+=[[x,y,z]];
np.linalg.inv(b);
testclassb().testmethod2();
self.response.out.write(filename);
var __except0__=tornado.web.HTTPError(404);__except0__.__cause__=null;throw __except0__;
writer.writerow(header);
var lst=function(){var __accu0__=[];for(var s of lst)__accu0__.append(maybe_int(s));return __accu0__}();
np.arange(100,1,-1);
(function(){var __accu0__=[];for(var x of a)if(!__in__(x,b))__accu0__.append(x);return __accu0__})();
thread.start();
op(x,y);
self._stdout=sys.stdout;
ax.set_xticks(np.arange(AUC.shape[1])+.5,__kwargtrans__({minor:false}));
objc.__version__;
list(IT.izip_longest(readers[0],readers[1],readers[2]));
export var dt_sec=map(datetime.timedelta.total_seconds,dt);
plt.draw();
print(data.__getitem__([tuple([0,null,1]),tuple([0,null,1]),tuple([0,null,1]),1]));
var im=Image.open(filename);
session2.add(new_item);
var c=np.hstack(tuple([a[a_inds],b[b_inds]]));
f.close();
dict[firstname]=dict.py_get(firstname,0)+1;
create_engine(db_connect_string,__kwargtrans__({connect_args:ssl_args}));
deletelst.__getslice__(len(lst)-n,null,1);
stringaxis.setTicks([list(xdict.py_items())]);
var b=zip(...a);
time.sleep(1);
b.__class__;
imshow(X,__kwargtrans__({norm:norm}));
Counter(function(){var __accu0__=[];for(var i=0;i<len(protein)-5;i++)__accu0__.append(protein.__getslice__(i,i+6,1));return py_iter(__accu0__)}());
py_iter(f);
models.ForeignKey(EntryAdmin);
var __left0__=map(float,line.py_split());var a=__left0__[0];var b=__left0__[1];var c=__left0__[2];var d=__left0__[3];
timeit.timeit(function __lambda__(){return timeit.timeit(f)},__kwargtrans__({number:100}));
data.dtype.names;
export var col_dict=function(){var __accu0__=[];for(var [x,col]of enumerate(df.columns))__accu0__.append([x,col]);return dict(__accu0__)}();
export var nlistnew=function(){var __accu0__=[];for(var row of nlist)__accu0__.append([a]+row);return __accu0__}();
pyplot.plot(x,y);
time.sleep(1);
var args=parser.parse_args();
ax.legend();
app.exec_();
canvas.pack();
export var created_at=db.DateTimeField(__kwargtrans__({py_default:datetime.now}));
ax.set_xlim(0,2*np.pi);
var driver=webdriver.Firefox(profile);
export var per_column=zip(...per_row);
hex(ord(chars[0]));
var x=x+1;
var c=pygame.time.Clock();
s.send_message(msg);
df.reset_index(__kwargtrans__({inplace:true}));
x.append([]);
tuple([audio_data,pyaudio.paContinue]);
var z=np.sqrt(Math.pow(x,2)+Math.pow(y,2))+np.sin(Math.pow(x,2)+Math.pow(y,2));
ax.set_ylim(min(y),max(y));
format_elements(reduce_list(some_list));
self.progbar.start();
tk.Toplevel.__init__(self,...args,__kwargtrans__(kwargs));
label.pack(__kwargtrans__({padx:4,pady:4}));
self.app=Flask(__name__);
shutil.copyfileobj(src,dest);
plt.show();
temp.py_sort();
export var joint=function(){var __accu0__=[];for(var [a,b]of zip(incoming,outgoing))__accu0__.append(function(){var __accu1__=[];for(var x of zip(a,b))__accu1__.append(sum(x));return __accu1__}());return __accu0__}();
db.put(groups);
print(sum(function(){var __accu0__=[];for(var line of data)__accu0__.append(sum(map(int,r.findall(line))));return py_iter(__accu0__)}()));
self.window.set_border_width(8);
server.serve_forever();
device.dispose();
max(hand,__kwargtrans__({key:function __lambda__(c){return rank_cards.index(c[0])}}));
var a=[[0]*ROWS]*COLUMNS;
self.out.write(bytearray([self.accumulator]));
var A=np.empty(tuple([15,15]));
client_sock.close();
var app=QtGui.QApplication(sys.argv);
ax1.set_ylim([.1,10]);
var offset=datetime.fromtimestamp(0)-datetime.utcfromtimestamp(0);
var fig=plt.figure();
analysed.add(color);
(function(){var __accu0__=[];for(var i of py_items)if(fC)__accu0__.append(tC?a:b);return __accu0__})();
result.predict(np.vander(x_new,degree+1));
max(elements,__kwargtrans__({key:function __lambda__(e){return int(e[0])}}));
(function(){var __accu0__=[];for(var sub of tgt)if(isinstance(sub,tuple([list,tuple])))for(var e of sub)__accu0__.append(e);return __accu0__})().__getslice__(-5,null,1);
print(sum(function(){var __accu0__=[];for(var [a,b]of combinations(xList,2))__accu0__.append(a*b);return py_iter(__accu0__)}()));
var x=np.array([0,-1,-1,0,1,1]);
itertools.product(list(range(2)),__kwargtrans__({repeat:n}));
print(function(){var __accu0__=[];for(var py_items of res)__accu0__.append(dict(zip(py_keys,py_items)));return __accu0__}());
plt.matshow(M,__kwargtrans__({cmap:plt.cm.Blues}));
var all_challenges=session.query(Challenge).all();
all_pixels.append(luma);
print(soup.prettify());
(function(){var __accu0__=[];for(var key of py_keys)for(var other of prefixes[key.__getslice__(1,null,1)])__accu0__.append(tuple([key,other]));return __accu0__})();
sys.exit(1);
plt.rcParams.py_update(params);
foo.__defaults__;
var a=np.fromiter(Data,__kwargtrans__({dtype:np.float,count:DataLength.value}));
np.random.shuffle(indices);
result.py_update(d);
fluidsynth.play_Note(64,0,100);
export var d1=np.random.random(tuple([25,4]));
screen.blit(surface,tuple([0,0]));
issubclass(test,object);
parser.parse_args([]);
some_list.__getslice__(start,stop,step);
df.__getslice__(0,5,1);
doctest.testmod();
var client=Client(url,__kwargtrans__({transport:ntlm}));
export var new_a=a[(a==a).all(1)];
export var maxValue=curs.fetchone()[0];
win.add(vbox);
var x=[false,true,true,false];
var id=Column(Integer,__kwargtrans__({primary_key:true}));
np.fromiter(a,__kwargtrans__({dtype:np.float,count:1E5}));
a.exec_loop();
var server=socket.socket(socket.AF_INET,socket.SOCK_STREAM);
var ax=fig.add_subplot(111);
pprint.pprint(output);
plt.show();
dict([[a,1],[b,2]]);
cppcode.init();
print(json.dumps(data,__kwargtrans__({indent:4})));
export var time_waited=time.time()-then;
sys.exit(app.exec_());
d+timedelta(__kwargtrans__({weeks:week-1,days:-d.weekday()}));
base64.b64encode(bytes([foo]));
self.lineedit.setFocus();
pd.concat(df_list,__kwargtrans__({ignore_index:true}));
app_log.addHandler(file_handler);
self.belltimer.Start(1E3);
ax.set_zlim(tuple([0,50]));
var filename=tkFileDialog.askopenfilename(__kwargtrans__({filetypes:FILE_DIALOG_FILETYPES}));
var app=Flask(__name__);
ax.plot(x,y*10);
self._shape=tuple([self._shape[0]-1,self.shape[1]]);
tuple([m.group(1),int(m.group(2))]);
my_list.py_sort(__kwargtrans__({key:function __lambda__(elem){return function(){var __accu0__=[];for(var c of elem[0])__accu0__.append(my_alphabet.index(c));return __accu0__}()}}));
pd.DataFrame(zip(X.columns,np.transpose(model.coef_)));
test.py;
dict(function(){var __accu0__=[];for(var k of dict1[0])__accu0__.append(tuple([k,sum(map(itemgetter(k),dict1))]));return py_iter(__accu0__)}());
var ws=wb.active;
var args=parser.parse_args();
f.close();
var out=np.add.reduceat(X.__getitem__([tuple([0,null,1]),idx0]),cut_idx,__kwargtrans__({axis:1}));
len(set(str_.py_split())&set(dict_1.py_values()));
maxu2().sum();
subprocess.list2cmdline(args);
m[list(zip(...map(range,m.shape)))]=0;
db.commit();
HTML_with_style(df.head());
self.SetSizer(self.sizer);
print(df.sum(1).to_frame());
pprint.pprint(yourDict);
var BASE_DIR=os.path.dirname(os.path.dirname(os.path.abspath("./P2JSnippets.py")));
new_matrix.append(matrix[i]);
self.children=weakref.WeakValueDictionary();
sys.path.append(path_to_parent);
var __left0__=zip(...my_list);var a=__left0__[0];var b=__left0__[1];
os.chdir(default_path);
var ax=fig.add_subplot(111);
df.reset_index(__kwargtrans__({drop:true}));
export var cin=ast.literal_eval(cin);
json.dumps(rh);
deleteL.__getslice__(__mod__(len(L),2),null,2);
Tkinter.mainloop();
bSizer.Add(button6,0,wx.ALL,5);
bSizer.Add(button7,0,wx.ALL,5);
bSizer.Add(button8,0,wx.ALL,5);
var new_list=function(){var __accu0__=[];for(var foo of foos)if(foo.location==2)__accu0__.append(foo);return __accu0__}();
plt.xlim([0,bin.size]);
objs[0].do_sth();
ast.literal_eval(s);
frame.focus_set();
out[-1];
axborder.set_axis_off();
print(le.tostring(doc));
export var handler=logging.StreamHandler();
file.close();

file.close();
cursor.execute(sql);
self.assertOK(response);
thread.start_new_thread(updateCounter,tuple([]));
list(range(0,1))==list(range(0,1));
(a-a[0]==0).all();
print(datetime.now()-start);
var a=models.ForeignKey(Foo,__kwargtrans__({py_default:function __lambda__(){return Foo.objects.py_get(__kwargtrans__({id:1}))}}));
print(add.addtwo_(byref(a),byref(b)));
plt.show();
reactor.run();
groups.append(list(g));
new set([new set([form.title])]);
C/C.astype(np.float).sum(__kwargtrans__({axis:0}));
writer.writerow(row);
os.listdir(short_unc);
var c=a.__getslice__(2,null,1);
var mean=A.mean(__kwargtrans__({axis:1}));
var r=requests.post(post_url,__kwargtrans__({data:json.dumps(payload),headers:headers}));
pygame.display.flip();
tm+=datetime.timedelta(__kwargtrans__({minutes:10}));
bool(b);
datetime.datetime(...map(int,py_values));
argv.py_pop(0);
plt.figure();
export var unique_edges=set(map(normalize,edges));
timer.start();
time.sleep(10);
self.cmdloop();
timedelta(__kwargtrans__({seconds:_diff.total_seconds()}))-timedelta(wek);
json.dumps(message);
cvtColor(src,gray,COLOR_BGR2GRAY);
print(f.readlines().__getslice__(1,15,1));
var lists=[[]]*5;
export var array_double=np.array(a,__kwargtrans__({dtype:np.double}));
export var testsite_array=my_file.readlines();
s.send(data_string);
ax.cla();
(function(){var __accu0__=[];for(var x of s.lower())if(__in__(x,string.ascii_lowercase))__accu0__.append(x);return __accu0__})();
all_pairs.py_sort(__kwargtrans__({key:function __lambda__(p){return distance(p[0][0],p[1][0])}}));
zfile.close();
time.sleep(random.random());
b.save();
var py_keys=list(test);
gtk.main_quit();
day_list.index(inp);
print(x,categorize(x));
np.sum(np.log(np.arange(1,n+1)));
s.ioctl(socket.SIO_RCVALL,socket.RCVALL_OFF);
plt.plot(np.arange(10),4*np.arange(10));
out_file.write(line);
plt.plot(y);
var time=models.FloatField();
cooler();
var circles=cv2.HoughCircles(gray,cv2.HOUGH_GRADIENT);

v.toPyObject()[0];
Page.objects.published();
df.iloc.__getitem__([tuple([0,10,1]),tuple([0,5,1])]);
(function(){var __accu0__=[];for(var row of data)__accu0__.append(map(second,row));return __accu0__})();
list(filter(str.isdigit,text));
var n=re.findall(pattern,string);
ax.set_xticks(indeces);
self._fd.close();
a*np.exp(-c*x)+d;
var root=Tk();
dict(counts);
var area=area1+area2;
C.f(2);
self.stop();
main(sys.argv);
var output=p2.communicate()[0];
threading.Thread(__kwargtrans__({target:cli})).start();
ax.xaxis.set_major_formatter(formatter);
sys.exit(0);
r._meta.id;
np.array(mp.arange(600));
repo.pull();
plt.xlim([0,n]);
task.react(main_task);
(function(){var __accu0__=[];for(var value of the_list)if(value!=val)__accu0__.append(value);return __accu0__})();
result.append(c);
export var post_body=self.rfile.read(content_len);
driver.set_window_size(1024,768);
lis.py_sort(__kwargtrans__({key:itemgetter(1)}));
self.request.route_url(py_name,__kwargtrans__(__mergekwargtrans__({id:self.id},kw)));
self.target(...args,__kwargtrans__(kwargs));
obj.save();
wb.Close();
(function __lambda__(x){return f(g(x))});
time.sleep(1);
plt.subplots_adjust(__kwargtrans__({left:.2,bottom:.2}));
export var k_keys_sorted_by_values=heapq.nlargest(k,dictionary,__kwargtrans__({key:dictionary.py_get}));
q.open();
list(unique_everseen(a,__kwargtrans__({key:frozenset})));
codecs.BOM_UTF8;
chi2_contingency(data);
datetime.strptime(text,fmt);
response.status_code;
canvas.place(__kwargtrans__({x:5,y:height+10}));
unittest.main();
model.setData(index,newValue,QtCore.Qt.EditRole);
[5,6,7,8,9];
ndimage.gaussian_filter1d(np.float_([0,0,0,0,1,0,0,0,0]),1);
var total=sum(total);
print(mystring.__getslice__(0,1,1));
data[k].append(fitem(v));
Thread(__kwargtrans__({target:serve_on_port,args:[1111]})).start();
sum(function(){var __accu0__=[];for(var i of x)if(60<i&&i<70)__accu0__.append(1);return py_iter(__accu0__)}());
list(chain.from_iterable(result));
print(p.url);
axarr[0].set_xticklabels(map(str,axarr[0].get_xticks()));
p.start();
writer.writerow(d);
c.__getattribute__;
print(Math.pow(Decimal(2),Decimal(2)));
c.add(1).cumprod();
var __metaclass__=Singleton;
var text=pattern.sub(function __lambda__(m){return rep[re.escape(m.group(0))]},text);
print(df.groupby(function __lambda__(x){return x.month}).agg([min,max,np.mean]));
mlab.show();
xl.Quit();
Counter(data).most_common();
p1.wait();
social.set_extra_data(extra_data);
main();
print(paths(p)[0]);
var elapsed_time=time.time()-start_time;
print(np.py_sort(x).__getslice__(-10,null,1));
var my_randoms=random.sample(range(100),10);
grid.cbar_axes[2].colorbar(im2);
var l=[0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,2,2,2];
process.wait();
runInParallel(func1,func2);
mainloop();
(function(){var __accu0__=[];for(var [url,text]of urlstext)__accu0__.append(Link(url,text));return __accu0__})();
var driver=webdriver.PhantomJS();
HttpResponseRedirect(settings.LOGIN_URL);
var __left0__=p.communicate(in_string);var stdout=__left0__[0];var stderr=__left0__[1];
self.timeout.cancel();
self.py_name=py_name;
ax.set_xticks([]);
response.read();
Base.metadata.create_all(engine);
filter_func(parent_dict,func);
f.seek(0,0);
t.date();
print(cur.fetchall());
var s=pd.Series([2],__kwargtrans__({index:[2]}));
result.append(x);
tuple(function(){var __accu0__=[];for(var i of colorsys.hsv_to_rgb(h,s,v))__accu0__.append(int(i*255));return py_iter(__accu0__)}());
process.wait();
(function(){var __accu0__=[];for(var i of b)__accu0__.append(a[i]);return __accu0__})();
asyncore.loop();
wd.config(__kwargtrans__({height:500,width:500}));
plot.rcParams.py_update(params);
print(list(chain(...A)));
export var funs=list(get_petters());
quit();
self.label.pack();
var lines=infile.readlines();
A.__init__(self,n);
var __left0__=X.nonzero();var rows=__left0__[0];var cols=__left0__[1];
root.mainloop();
print(ndimage.zoom(data,tuple([1,2,2])));
var df=df.stack().sample(__kwargtrans__({frac:.8})).unstack();
cur.execute(sql,macs,host);
var dict2=dict1.copy();
tuple([[0,0,0,0,0,0,0,0,0,164]]);
my_list.extend(function(){var __accu0__=[];for(var i of row)if(i.isdigit())__accu0__.append(int(i));return __accu0__}());
print(Dummy());
[[4,2,6],[8,10,12],[6,4,6]];
new set([new set([user.username|e])]);
Model.objects.filter(filters_for_query);
export var req=urllib.request.Request(site,data,headers);
table[0][1];
var r=s.post(url,__kwargtrans__({data:data}));
[2,5];
tuple([[1,1,1,0,1,0,0,1]]);
list(gen());
var m=np.log10(np.abs(x));
print(hex(res));
var date=datetime(__kwargtrans__({year:int(s.__getslice__(0,4,1)),month:int(s.__getslice__(4,6,1)),day:int(s.__getslice__(6,8,1))}));
(function(){var __accu0__=[];for(var i=0;i<n;i++)__accu0__.append(lst.__getslice__(i,null,n));return __accu0__})();
export var exif_data=img._getexif();
ax.xaxis.set_major_formatter(date_format);
export var role=models.CharField();
self.__addL__[self.number][x];
container.grid_rowconfigure(0,__kwargtrans__({weight:1}));
issubclass(B,A);
self.response.out.write(json.dumps(response));
s.add(item);
max(depth(self.left),depth(self.right))+1;
myprocess.kill();
sys.stdout.write(sio.getvalue());
self.parent.x;
datetime.now()+relativedelta(__kwargtrans__({weekday:FR(-1)}));
plt.show();
manager.start();
sys.executable;
f(x);
var graph=facebook.GraphAPI(oauth_access_token);
console_handler.setLevel(logging.DEBUG);
var match=py_next(function(){var __accu0__=[];for(var x of a)if(__in__(x,str))__accu0__.append(x);return py_iter(__accu0__)}(),false);
tuple([[0,0,1,1,0,1,1,0]]);
plt.plot(x,y);
zip(x,y,z);
tuple([id9,Wood,moreinfo9]);
show();
print(etree.tostring(elem,__kwargtrans__({pretty_print:true})));
x[0][0][1]=111;
cv2.waitKey(0);
gimpfu.main();
form.save();
export var PREPEND_WWW=true;
var doc=etree.fromstring(xml);
array(function(){var __accu0__=[];for(var x of A)__accu0__.append(np.linalg.solve(x,identity));return __accu0__}());
self.append(x);
(function(){var __accu0__=[];for(var x of a)if(x.size>0)__accu0__.append(x);return __accu0__})();
export var AllItems=function(){var __accu0__=[];for(var i=0;i<QComboBoxName.count();i++)__accu0__.append(QComboBoxName.itemText(i));return __accu0__}();
q.interruptable_get();
np.random.choice(elements,10,__kwargtrans__({p:probabilities}));
plt.plot(xdata,ydata);
all(function(){var __accu0__=[];for(var s of some_array)__accu0__.append(is_okay(s));return py_iter(__accu0__)}());
rect.set_height(h);
dict(urlparse.parse_qsl(urlparse.urlsplit(url).query));
var screen=pygame.display.set_mode(tuple([500,500]));
var py_name=module.py_name;
var soup=BeautifulSoup(html);
np.nanargmax(a,__kwargtrans__({axis:0}));
imobj.set_data(img);
dict(function(){var __accu0__=[];for(var [k,vs]of itertools.groupby(l,function __lambda__(x){return x[0]}))__accu0__.append(tuple([k,function(){var __accu1__=[];for(var v of vs)__accu1__.append(v[1]);return __accu1__}()]));return py_iter(__accu0__)}());
var fig=plt.figure();
var ax=plt.gca();
plt.fill([0,0,1,1],[0,1,1,0]);
Image.objects.all().large().portraits();
response;
np.dot(a,b);
ax.scatter(x,y,z);
ax.set_zlim(z_min,z_max);
f.close();
var a=np.random.rand(10,10);
df1.reset_index(__kwargtrans__({inplace:true}));
export var port=s.getsockname()[1];
var my_list=function(){var __accu0__=[];for(var i of my_list)__accu0__.append(tuple(i));return __accu0__}();
print(df.sum().to_frame());
sum(function(){var __accu0__=[];for(var c of yourstring)__accu0__.append(letterGoodness[c]);return py_iter(__accu0__)}());
bool(array);
var p=(b-a)*p+a*p.ceil();
pl.show();
draw();
Column(id_column_name,UUID(),__kwargtrans__({primary_key:true,py_default:uuid.uuid4}));
main();
writes.writerow(x);
f.writelines(mylist);
checkbutton.grid(__kwargtrans__({row:1,column:0}));
im.show();
isinstance(gen,types.GeneratorType);
print(twenty.data[958]);
export var max_product=max(mul(...l.__getslice__(0,2,1)),mul(...l.__getslice__(-2,null,1)));
var df=pandas.DataFrame(data);
logger.addHandler(dh);
conn.send(data);
logger.addHandler(handler);
board.__getitem__([x,y]);
var win=tk.Toplevel(root);
list(zip(...G))[0];
var size=win.window.get_size();
layout.addWidget(self.edit);
df.py_replace([np.inf,-np.inf],np.nan);
plt.figure(1);
np.min(np.nonzero(np.hstack(tuple([A,1]))));
var y=function(){var __accu0__=[];for(var a of x)__accu0__.append(a);return __accu0__}();
var db=MySQLdb.connect(self.server,self.user,self.passwd,self.schema);
var soup=BeautifulSoup(driver.page_source);
np.unique1d(np.floor(1E7*x)/1E7);
b[0].append(1);
l1.remove(x);
(function __lambda__(s){return s.isdigit()?int(s):0});
(function(){var __accu0__=[];for(var cluster of cl.getlevel(2))__accu0__.append(mean(cluster));return __accu0__})();
tuple([GST_VERSION_MAJOR]);
var df2=df[df.dte<lastyear].head(depth);
[py_iter(l)]*2;
site.addsitedir(self.install_lib);
self.ui.PoseBtn_GridLayout.addWidget(self.button,0,0,1,1);
ax2.yaxis.set_major_locator(MaxNLocator(__kwargtrans__({nbins:len(ax1.get_yticks())})));
var a=np.arange(100).reshape(10,10);
q.close();
sum(args);
var ax=fig.add_subplot(111);
max(function(){var __accu0__=[];for(var [k,v]of d.py_items())__accu0__.append(dict_depth(v,depth+1));return py_iter(__accu0__)}());
browser.py_get(url);
var a=np.random.randint(0,2,tuple([10,8]));
set(a)==set(c);
compat.register();
os.close(f);
x.__getslice__(1,null,2);
df.divide(df.sum(__kwargtrans__({axis:1})),__kwargtrans__({axis:0}));
b[b>0];
trimmed.py_setdefault(tuple([k[0],k[-1]]),[]).append(v);
plt.xlim(bins[0],bins[-1]);
file.seek(0,os.SEEK_END);
f.apply(clean,__kwargtrans__({axis:1})).reindex(f.index);
fct();
list(theDict.py_keys()&theList);
source_file.readline();
export var dct=defaultdict(list);
export var street=models.CharField(__kwargtrans__({max_length:100}));
print(os.getegid());
var B=A.__getitem__([[0,2],tuple([0,null,1]),tuple([0,null,1])]).__getitem__([tuple([0,null,1]),tuple([0,null,1]),[1,2]]);
temp_file.close();
time.sleep(1);
df_a.merge(df_b,__kwargtrans__({left_index:true,right_index:true}));
w.menuBar().addMenu(menu);
a[a<0]=0;
var ax=fig.add_subplot(111);
dosomethingelse;
sorted(list(scores.py_items()),__kwargtrans__({key:itemgetter(1),reverse:true}));
mapping[frozenset(list(d.py_keys()))](__kwargtrans__(d));
aaa();
export var t_points=t_image[[t_pos.__getitem__([tuple([0,null,1]),1]),t_pos.__getitem__([tuple([0,null,1]),0])]];
random.shuffle(charlst);
stdin.close();
plt.legend(__kwargtrans__({scatterpoints:1}));
var ax=fig.add_subplot(1,1,1);
list(set(seq));
print(calendar.month(tgtdate.year,tgtdate.month));
var ip=models.CharField(__kwargtrans__({max_length:200,blank:true,db_index:true}));
plt.gca().get_xaxis().get_major_formatter().set_useOffset(false);
s.seek(0);
(df*weights).sum(1);
logger.addHandler(logging.StreamHandler());
len(set(in_list))==len(in_list);
(function(){var __accu0__=[];for(var i=0;i<min(len(L1),len(L2));i++)__accu0__.append(L1[i]+L2[i]);return __accu0__})();
self.connection.commit();
sub_df.iloc[0];
zip(...[it]*2);
foo();
__init__.py;
var frame=cv2.cvtColor(frame,cv2.COLOR_BGR2RGB);
answer.append(tuple([key,len(list(py_iter))]));
tuple([4,5,6])>tuple([1,1,1,9]);
os.setsid();
export var seen=set();
var ax2=fig.add_subplot(2,2,2);
Simulation.mocked_method;
plt.show();
export var combs=function(){var __accu0__=[];for(var j=1;j<len(atom)+1;j++)for(var i of combinations(atom,j))__accu0__.append(i);return __accu0__}();
var select_indices=np.where(np.logical_or(x<1,x>5));
print(line);
draw.ellipse(tuple([x-r,y-r,x+r,y+r]),__kwargtrans__({fill:tuple([255,0,0,0])}));
f.write(new_text);
x.subs([tuple([y,z]),tuple([x,y])]);
inset.set_xlim(inset_xlimit[0],inset_xlimit[1],__kwargtrans__({auto:false}));
tuple([float(p[1]-b[1])/float(p[0]-b[0]),p[0]<b[0]]);
startupinfo.dwFlags|=_subprocess.STARTF_USESHOWWINDOW;
f.write(s);
now.timetuple().tm_isdst;
set(a)==set(b);
list(product(x,flatten(y)));
list(set(array2));
var MyList=[inst1.i,inst2.i];
self.send_result;
var app=wx.PySimpleApp();
var RNA_integers=function(){var __accu0__=[];for(var i of RNA_list)if(__in__(i,RNA_dictionary))__accu0__.append(RNA_dictionary[i]);return __accu0__}();
print(twenty.data[0]);
tgt.close();
dict(function(){var __accu0__=[];for(var [k,v]of list(json.loads(val).py_items()))__accu0__.append(tuple([k,json.dumps(v)]));return py_iter(__accu0__)}());
var __left0__=itertools.repeat(0,4);var x1=__left0__[0];var y1=__left0__[1];var x2=__left0__[2];var y2=__left0__[3];
res.append(count);
var ssh=paramiko.SSHClient();
print(os.path.join(root,f));
pprint.pprint(dataDict);
reactor.stop();
array([[14,22],[46,54]]);
var app=wx.App(__kwargtrans__({redirect:true}));
tuple([tuple([2,2,10,10]),tuple([12,8,2,10])]);
fxn();
screen.py_update();
print(list(go(py_iter(lst))));
self.foo.kill();
var x=np.arange(100);
sess.run([sparse_update]);
var __left0__=tuple([A.__getitem__([c2b,r2b]),A.__getitem__([c1b,r1b])]);A.__setitem__([c1b,r1b],__left0__[0]);A.__setitem__([c2b,r2b],__left0__[1]);
t.selection_get();
tornado.ioloop.IOLoop.instance().start();
var fig=plt.figure();
sys.stdout.write(session.recv(4096));
(function(){var __accu0__=[];for(var n of b)__accu0__.append(function(){var __accu1__=[];for(var _=0;_<n;_++)__accu1__.append(py_next(a_iter));return __accu1__}());return __accu0__})();
a[np.ix_(index,index)];
sum(range(start,start+n));
tuple([0,0,0,0|0,1,0,1,1,0]);
newdf.iloc.__getitem__([tuple([0,10,1]),tuple([0,5,1])]);
p.kill();
print(func.__name__,args,kwargs);
data.__getslice__(0,size,1);
f.write(r.content);
plt.show();
plt.show();
set(a);
print(a.data.nbytes+a.indptr.nbytes+a.indices.nbytes);
pygame.quit();
print(json.dumps(tree,__kwargtrans__({indent:4})));
h.py_setdefault(x,[]).append(y);
time.sleep(1);
np.intersect1d(b1,a);
print(function(){var __accu0__=[];for(var i of dict)if(dict[i]>=x)__accu0__.append(dict[i]);return __accu0__}());
screen.exitonclick();
var py_name=models.CharField(__kwargtrans__({max_length:150}));
print(match.groups());
var __left0__=0;var x1=__left0__;var y1=__left0__;var x2=__left0__;var y2=__left0__;
print(t.timeit(__kwargtrans__({number:1})));
self.emitter.append(e);
self.platforms.append(e);
ax.set_xlim(xbnds);
s.setsockopt(socket.SOL_SOCKET,socket.SO_REUSEADDR,1);
df.to_csv(s);
a.py_sort(__kwargtrans__({key:function __lambda__(d){return list(d.py_values())[0]},py_reversed:true}));
result_dict.py_setdefault(x.key,[]).append(x.value);
self.button.clicked.connect(self.handleButton);
dic[i].append(j);
time.sleep(1);
eval(command);
export var cmap=mcolors.ListedColormap([tuple([0,0,1]),tuple([0,1,0]),tuple([1,0,0])]);
connection.close();
plt.clf();
var x=function(){var __accu0__=[];for(var i=0;i<10;i++)__accu0__.append([i]);return __accu0__}();
(function(){var __accu0__=[];for(var i of data.reshape(data.shape[0],-1))__accu0__.append(len(set(i)));return __accu0__})();
print(repr(html_to_text(html)));
setup.py;
list.append(run(i[0],i[1],i[2]));
platform.system();
self.Raise();
min(timeit.repeat(function __lambda__(){return dict(function(){var __accu0__=[];for(var [k,v]of zip(py_keys,py_values))__accu0__.append(tuple([k,v]));return __accu0__}())}));
plt.xlim(0,9);
str(self.i);
py_reversed(lines);
map(functools.partial(f,__kwargtrans__({y:fixed})),srclist);
stdout_thread.start();
a.reshape(Math.floor(a.shape[0]/n),n,a.shape[1]).sum(1);
self.button.Bind(wx.EVT_BUTTON,self.OnButton);
export var the_frame=pd.read_sql_table(name_of_table,engine);
pickle.dump(data,fp);
ax.set_yticks(numpy.arange(0,1,.1));
grouped.py_sort(__kwargtrans__({key:itemgetter(1),reverse:true}));
a.close();
heapq.heappush(heap,tuple([-prod1,x-1,y]));
export var fruit=function(){var __accu0__=[];for(var row of df.py_values)__accu0__.append(df.columns[row.astype(bool)].tolist());return __accu0__}();
var args=parser.parse_args();
self.canvas.scale(ALL,x,y,self.scale,self.scale);
var limit=int(limit);
var window=gtk.Window();
chris.userprofile.followed_by.all();
export var renormalize=py_true;
var py_keys=function(){var __accu0__=[];for(var k of scores)if(scores[k]==scores[key])__accu0__.append(k);return __accu0__}();
cursor.execute(sql);
(function(){var __accu0__=[];for(var k of sorted(d))__accu0__.append(dict([[k,d[k]]]));return __accu0__})();
var driver=webdriver.PhantomJS();
(function __lambda__(j){return function __lambda__(x){return x==j||__mod__(x,j)!=0}})(i);
var z=a[0]*b[1]-a[1]*b[0];
main.py;
var d=dict(matches);
subprocess.call(cmd);
(function(){var __accu0__=[];for(var k of sorted(dic))__accu0__.append(dic[k]);return __accu0__})();
plt.imshow(img);
self._id=uuid1().urn;
termios.tcsetattr(sys.stdin,termios.TCSADRAIN,orig_settings);
dbQueryModel.itemData(treeView.selectedIndexes()[0]);
bp.stdout.readline();
frame.grid();
py_iter(self.books.py_values());
min(zip(Lat,Lon),__kwargtrans__({key:operator.itemgetter(1)}))[0];
ax.set_xticks(np.arange(-.5,width,1),__kwargtrans__({minor:true}));
print(sys.argv[0]);
export var pivots=np.zeros(tuple([m,n]),intc);
GF4(self.__addL__[self.number][x]);
list(groups.py_values());
plt.figure();
time.sleep(.5);
ax.autoscale();
cap.release();
[5,5,5,4];
print(np.arange(100).nbytes);
print(df.head());
y.reshape(2,1)-x;
self.urls_seen.add(request.url);
self.send_blob(blobstore.BlobInfo.py_get(blob_key),__kwargtrans__({save_as:true}));
export var TRUE=1;
setattr(fundamentalconstants,py_name,value);
plt.scatter(X,Y);
do_something_with(x);
sns.distplot(a,__kwargtrans__({bins:list(range(1,110,10)),ax:ax,kde:false}));
QMainWindow.__init__(self,parent);
np.allclose(df_norm.py_values.dot(coef),pca.fit_transform(df_norm.py_values));
my_dict[k].append(dict1[k]);
(function(){var __accu0__=[];for(var i of mysites)if(!__in__(i,list(sites.py_keys())))__accu0__.append(i);return __accu0__})();
chr(65);
pyplot.plot(x,y);
(function(){var __accu0__=[];for(var x of b)__accu0__.append(index_dict[x]);return __accu0__})();
p.get_open_files();
logger.addHandler(handler2);
var x=np.asarray(x);
all(function(){var __accu0__=[];for(var c of s)__accu0__.append(__in__(c,string.hexdigits));return py_iter(__accu0__)}());
var m=coo_matrix(tuple([py_values,tuple([row,col])]),__kwargtrans__({shape:tuple([nrows,ncols]),dtype:float}));
QtGui.QMainWindow.eventFilter(self,widget,event);
var __left0__=plt.subplots(__kwargtrans__({ncols:2}));var fig=__left0__[0];var ax=__left0__[1];
print(G.edges());
plt.plot(x,y);
x.append(l);
models.ForeignKey.__init__(self,User,__kwargtrans__(__mergekwargtrans__({null:true},kwargs)));
zip(a,b);
main.config.from_object(config);
cPickle.load(f);
var s=socket.socket(socket.AF_INET,socket.SOCK_DGRAM);
plt.plot(freqs[idx],ps[idx]);
ax2.set_ylim(0,2);
print(info.get_content_type());
sum(function(){var __accu0__=[];for(var k=1;k<Q+1;k++)__accu0__.append(scipy.stats.hypergeom.pmf(k,N,M,Q));return py_iter(__accu0__)}());
db.model_to_protobuf(your_entity);
list(combinations(x,2));
zip(l,combinations(py_reversed(l),len(l)-1));
self.send(message);
plt.show();
var fig=plt.figure();
x.py_split();
client.set_missing_host_key_policy(paramiko.AutoAddPolicy());
var new_array=new_array.reshape(old_array.shape);
var data=data[~np.isnan(data).any(__kwargtrans__({axis:1}))];
child.sendline(mypassword);
print(int(x));
pygame.draw.rect(game_display,tuple([0,0,0]),rect_old);
export var DEBUG=true;
np.argmin(abs(f2-f1));
regex.findall(string);
ax.plot(x,x);
chmod+x/home/randy/lib/python/gbmx.py;
export var L1=[[0,50],[7.75,120],[10.25,70],[17,100],[20,60]];
export var mat_array=cv.fromarray(numpy_array);
round(2.675,2);
var s=p.sub(process_match,s);
sum(range(a+__mod__(a,2),b+1,2));
pd.DataFrame(d);
dict_.py_update(function(){var __accu0__=[];for(var prefix of prefixes)__accu0__.append(tuple([prefix,value]));return py_iter(__accu0__)}());
export var rotn=np.degrees(np.arctan2(y.__getitem__([tuple([0,null,1]),tuple([1,null,1])])-y.__getitem__([tuple([0,null,1]),tuple([0,-1,1])]),x.__getitem__([tuple([0,null,1]),tuple([1,null,1])])-x.__getitem__([tuple([0,null,1]),tuple([0,-1,1])])));
gui.root.mainloop();
Foo();
numpy.arange(11,17,.5);
list.append([]);
myarray[x.group(1)]=[x.group(2)];
driver.set_script_timeout(10);
app.MainLoop();
do_something(f.result());
var app=QtGui.QApplication(sys.argv);
(function __lambda__(_){return f()});
var image=Image.open(data);
export var limitx=random.choice([0,1]);
list(range(string.ascii_lowercase));
var b=np.identity(A.shape[2],__kwargtrans__({dtype:A.dtype}));
var q=mp.Queue();
var ax=fig.add_subplot(111);
nx.traversal.dfs_successors(G);
sys.stdout.write(out);
var __left0__=user_list[0];var db=__left0__[0];export var host=__left0__[1];var user=__left0__[2];export var password=__left0__[3];
self.sizer.Add(self.canvas,1,wx.LEFT|wx.TOP|wx.GROW);
(function(){var __accu0__=[];for(var [k,v]of list(d.py_items()))if(!__in__(k,excluded_keys))__accu0__.append([k,v]);return dict(__accu0__)})();
max(function(){var __accu0__=[];for(var i of x)__accu0__.append(len(i[j]));return py_iter(__accu0__)}());
df.index[(df==window_stop_row).all(__kwargtrans__({axis:1}))];
result[-1].append(thetext);
(function(){var __accu0__=[];for(var x of oldList)__accu0__.append(max(min(x,255),0));return __accu0__})();
QtWebKit.QWebView.__init__(self);
ssl.OPENSSL_VERSION;
root.mainloop();
(function(){var __accu0__=[];for(var i of index)__accu0__.append(self[i]);return __accu0__})();
plot_date(a,2);
df.columns;
bar();
passer();
merged[k].append(d2[k]);
print(d[2]);
start_response(status,headers);
var now=datetime.datetime.now();
form;
print(a);
export var wordslist=line.py_split();
palette.set_bad(__kwargtrans__({alpha:0}));
display(fig);
export var c_mat1=np.tensordot(Q,a1,__kwargtrans__({axes:tuple([[-1],[0]])}));
var start_time=time.time();
p.join();
traceback.print_exc();
data.__setitem__([0,0],[1,2]);
var area=cv2.contourArea(contour);
numpy.random.seed(1);
df;
locale.currency(float(cents)/100);
plt.show();
dict(d);
export var profile=webdriver.FirefoxProfile();
bar(ind,num,width,__kwargtrans__({color:colors}));
ax.xaxis.set_major_formatter(daysFmt);
app.run(__kwargtrans__({debug:true}));
subprocess.call(cmd,__kwargtrans__({shell:true}));
plt.show();
print(tailq.get_nowait());
ws.cell(__kwargtrans__({row:1,column:1})).hyperlink=link;
Response(__kwargtrans__({status:204}));
self.origstream=sys.stdout;
Entry.objects.bulk_create(function(){var __accu0__=[];for(var x of a)__accu0__.append(Entry(__kwargtrans__({py_name:x})));return __accu0__}());
list(product(...map(function __lambda__(x){return list(range(x[0],x[1]+1))},args)));
Row(__kwargtrans__(OrderedDict(sorted(row_dict.py_items()))));
plot.append(axE);
plot.append(axPA);
var writer=csv.writer(output);
cast(a,POINTER(c_int));
lst.__getslice__(-1,null,1)+reverse(lst.__getslice__(0,-1,1));
p.start();
tk.Tk.__init__(self,...args,__kwargtrans__(kwargs));
main(sys.argv);
Qt.QFrame.paintEvent(self,event);
IOLoop.current().run_sync(runner);
print(m.group(1));
var app=Flask(__name__);
plt.plot(X,Y);
print(OrderedDict.fromkeys(s));
os.close(sys.stderr.fileno());
self.figure.set_facecolor(tuple([1,1,1]));
win.mainloop();
writer.writerow(out);
var x=np.linspace(0,2*np.pi,100);
complex(0,1)*numpy.inf;
var area=img.crop(box);
time.sleep(1);
f2.write(line);
grid.grid(__kwargtrans__({sticky:N+S+E+W,column:0,row:7,columnspan:2}));
export var f128=numpy.frombuffer(file.read(16),__kwargtrans__({dtype:numpy.float128}));
ssh.connect(host,__kwargtrans__({username:username,password:password}));
self.est.predict_proba(X).__getitem__([tuple([0,null,1]),1]);
np.tile(v,tuple([1,2]));
(function(){var __accu0__=[];for(var row of cursor)__accu0__.append(dict(zip(columns,row)));return __accu0__})();
np.cumsum(a,__kwargtrans__({out:a}));
var id=db.Column(db.Integer,__kwargtrans__({primary_key:true}));
session.query(QuerySchema).filter(QuerySchema.way.ST_Within(bbox));
export var MyObject=MyClass();

listbox.pack();
self.set.add(d);
fib(n-1)+fib(n-2);
var new_dict=dict(zip(py_keys,py_values));
Counter(chain.from_iterable(map(str.py_split,f)));
var __left0__=map(int,input().py_split());var a=__left0__[0];var b=__left0__[1];
o.writerow(line.py_split());
map(function __lambda__(x){return int(255*x)},tuple([r,g,b]));
np.arange(0,1,.1);
list(it1);
export var reduced_list=function(){var __accu0__=[];for(var x of full_list)if(!omit.intersection(x))__accu0__.append(x);return __accu0__}();
app.register_blueprint(child2.child2);
someList.py_sort(__kwargtrans__({key:key1}));
var line=line.strip();
abs(numpy.array([.24])[0]-.24)<numpy.finfo(float).eps;
plt.show();
print(newcorpus.sents(newcorpus.fileids()[0]));
self.root.destroy();
random.shuffle(x);
wtr.writerow(r);
os.chdir(prev_cwd);
var EMAIL_USE_TLS=false;
process.stderr.close();
cursor.close();
df1[ind].append(df2[ind]);
KillerApp().run();
print(hashlib.sha1(json.dumps(a,__kwargtrans__({sort_keys:true}))).hexdigest());
var driver=webdriver.Remote(__kwargtrans__({desired_capabilities:options.to_capabilities()}));
b[0].append(1);
k[np.in1d(list(map(np.ndarray.dumps,k)),list(map(np.ndarray.dumps,k2)))];
var new_x=itertools.chain(y,x);
print(np.array_equal(A,C));
list(d.py_values());
imshow(img,__kwargtrans__({zorder:0,extent:[left,right,bottom,top]}));
sys.exit(0);
app.mainloop();
p.wait();
time.sleep(1);
var args=parser.parse_args();
t.start();
blobstore.delete(key);
emonth1.grid(__kwargtrans__({row:1,column:2}));
re.findall(str_in_doublequotes,text);
plt.colorbar();
var __left0__=[1,2];var a=__left0__[0];var b=__left0__[1];
(function(){var __accu0__=[];for(var x of individual(nest))__accu0__.append(x);return __accu0__})();
numpy.random.seed(29);
conn.response();
pyplot.show();
np.savetxt(myfile,sample_array);
ax2.set_yticks(y_tick*np.pi);
ax.set_xlim(-5,100);
main_menu.display();
var content=fp.read();
axr.set_ylim(altitude.min(),altitude.max());
export var full_df=pd.concat(dfs);
var path=os.getcwd();
var tree=etree.ElementTree(root);
df2.boxplot();
tf.mul(scale,x);
gc.collect();
list(function(){var __accu0__=[];for(var val=0;val<10;val++)if(val&1)__accu0__.append(val);return __accu0__}());
deletetup[0];
my_file.close();
setattr(obj,py_name,value);
str(self);
reactor.run();
self.handler=logging.StreamHandler(self.stream);
print(dict(re.findall(r,z)));
root.mainloop();
py_sort(data,__kwargtrans__({key:key,reverse:rev}));
response.set_data(soup.prettify());
emailer.send(messages);
var list2=function(){var __accu0__=[];for(var y of list(itertools.chain(...function(){var __accu1__=[];for(var x of list1)__accu1__.append(str(x));return __accu1__}())))__accu0__.append(int(y));return __accu0__}();
a[i].append(int(value));
print(sum(chain(n,o,p)));
axes[0].legend(__kwargtrans__({bbox_to_anchor:tuple([0,.5])}));
plt.show();
ax.set_ylim(-1,7);
[tuple([2,5]),tuple([12,17]),tuple([22,22]),tuple([25,26]),tuple([28,28]),tuple([51,52]),tuple([57,57])];
var pixels=function(){var __accu0__=[];for(var i=0;i<height;i++)__accu0__.append(pixels.__getslice__(i*width,(i+1)*width,1));return __accu0__}();
export var events=list(groupify(lines));
plt.subplot(111);
list(repeat(100,foo));
s2[s2.isin(s1)];
plt.xlim([0,6]);
self.write(self.request.uri);
ldap.set_option(ldap.OPT_X_TLS_REQUIRE_CERT,ldap.OPT_X_TLS_NEVER);
df_out;
random.seed();
var ax1=fig.add_subplot(2,2,1);
myArray.append(np.array([i,i+1,i+2]));
self.category.py_name;
game.init();
root.mainloop();
mlab.show();
print(m.cancel());
np.savetxt(outfile,slice_2d);
var counts=[0,0,0,0,0,0,0,0,0,0,0,0,0];
myDict.py_setdefault(newKey,[]).append(value);
export var channels=cv2.py_split(img);
plt.show();
var __left0__=cv2.findContours(edges,cv2.RETR_LIST,cv2.CHAIN_APPROX_NONE);var contours=__left0__[0];var _=__left0__[1];
export var parent_map=dict(function(){var __accu0__=[];for(var p of tree.getiterator())for(var c of p)__accu0__.append(tuple([c,p]));return py_iter(__accu0__)}());
l.__getslice__(1,null,2);
set(map(tuple,map(sorted,pairs)));
ax.xaxis.set_major_formatter(fmt);
self.log.close();
self.config_from_object(app.config);
app.run(__kwargtrans__({debug:true,threaded:false}));
union([tuple([10,12]),tuple([14,16]),tuple([15,22])]);
print(PixelAt(int(sys.argv[1]),int(sys.argv[2])));
var id=db.Column(db.Integer,__kwargtrans__({primary_key:true}));
event.widget.pack_forget();
var a=fig.add_subplot(1,2,2);
np.intersect1d(amem,bmem).size;
scores.ffill().sum(__kwargtrans__({axis:1}));
var proc=subprocess.Popen(cmd,__kwargtrans__({stdout:subprocess.PIPE,stderr:subprocess.STDOUT}));
s.close();
m.save();
var wb=openpyxl.load_workbook(__kwargtrans__({filename:file}));
outarr.__setitem__([tuple([x1to,x2to,1]),tuple([y1to,y2to,1])],inarr.__getitem__([tuple([x1fr,x2fr,1]),tuple([y1fr,y2fr,1])]));
np.where(M==0);
a2.ravel().__setslice__(0,null,null,function(){var __accu0__=[];for(var l of m.reshape(2,-1).T)__accu0__.append(tuple(l));return __accu0__}());
ttk.Radiobutton(self.mainframe,__kwargtrans__({value:1})).grid(__kwargtrans__({column:2,row:2}));
var filtered_list=function(){var __accu0__=[];for(var x of your_list)if(all(function(){var __accu1__=[];for(var f of filters)__accu1__.append(f(x));return py_iter(__accu1__)}()))__accu0__.append(x);return __accu0__}();
Base.metadata.create_all(engine);
export var domain=str(line.strip());
x.a=2;
(function(){var __accu0__=[];for(var file of files)__accu0__.append([file,find_mime_with_file(file)]);return dict(__accu0__)})();
rx.findall(allsorts);
var lines=f.readlines();
ax.set_xlim(.5,ly+.5);
pool.map(function __lambda__(x){return preprocess(x)},real_preds);

var dest=dict(chain(list(orig.py_items()),list(extra.py_items())));
Toplevel.__init__(self,parent);
lines.append([tuple([x,lastY]),tuple([x,y])]);
foo(x,y);
plt.show();
print(np.all(A[a_to_b]==B));
draw.rectangle(bbox,__kwargtrans__({outline:tuple([0,255,0])}));
repr(tst2);
s.set_missing_host_key_policy(paramiko.AutoAddPolicy());
tuple([[0,1,0,0,1,0,1,0]]);
f.close();
var opener=urllib.request.build_opener();
df[df.one.isin(checkList)|df.two.isin(checkList)];
datetime.date(datetime.now()).isocalendar()[1];
var d=defaultdict(int,zip(list(range(1,10)),list(range(50,61))));
B().a();
export var term_appearance=Counter(chain.from_iterable(texts_list));
layout.addWidget(self.canvas);
var l=function(){var __accu0__=[];for(var sublist of list)for(var item of sublist)__accu0__.append(item);return __accu0__}();
var data=data.reshape(data.size/2,2);
PyErr_Print();
export var conn2=psycopg2.connect(dsn2);
x.argsort().argsort();
export var is_active=true;
plt.clf();
self.sock.close();
signal.signal(signal.SIGINT,handle);
os.symlink(pythonapp,newpython);
var file=models.FileField(__kwargtrans__({upload_to:get_random_filename}));
kmeans.fit(p_df);
bin(a^b);
var pos=emcee.utils.sample_ball(mean,np.sqrt(np.diag(C)),__kwargtrans__({size:Nwalkers}));
var driver=webdriver.Firefox(__kwargtrans__({firefox_profile:profile}));
os.system.__module__;
pd.crosstab(df.gender,df.doctor);
urllib.request.install_opener(opener);
all(function(){var __accu0__=[];for(var [x,y]of zip(L,L.__getslice__(1,null,1)))__accu0__.append(x<y);return py_iter(__accu0__)}());
export var paired_sorted=sorted(rev_sorted,__kwargtrans__({key:function __lambda__(x){return x[0]}}));
q.T.reshape(-1,2,2).swapaxes(1,2).reshape(-1,2);
cache._cache.flush_all();
ax.plot(data2);
cv.create_rectangle(10,10,50,50);
df[df.genre.map(iscomedy)];
sum(function(){var __accu0__=[];for(var x of s)__accu0__.append(sys.getsizeof(x));return py_iter(__accu0__)}());
connection.close();
export var kurt=kurt.T;
var profile=request.user.get_profile();
export var zusers=bcolz.ctable.fromdataframe(users);
export var my_num=int(f.read(1));
MyApp().run();
Done;
py_next(it1);
print(np.linalg.det(A));
json_data_rdd.flatMap(function __lambda__(j){return processDataLine(j,arg1,arg2)});
p.stdin.close();
zip(...function(){var __accu0__=[];for(var i=0;i<4;i++)__accu0__.append(L.__getslice__(i,null,4));return __accu0__}());
export var result_df=json_normalize(my_list).T;
list(accumulate(example_list,add));
var ax=self.figure.add_subplot(111);
export var person=models.ForeignKey(Person);
var s=socket.socket(socket.AF_INET,socket.SOCK_DGRAM);
export var list_a=[1,2,4,6];
var b=a.transpose();
__init__();
plt.show();
v.append(n);
np.take(arr,inds);
export var now_plus_10=now+datetime.timedelta(__kwargtrans__({minutes:10}));
var a=datetime.datetime.now();
G.add_nodes_from([1,2]);
__init__.py;
var writer=csv.writer(f);
print(df.loc[mask]);
f(x,y,z);
export var j_obj=json.load(j);
pylab.figure(__kwargtrans__({figsize:tuple([20,9])}));
new set([new set([nhl_form.league])]);
dict(function(){var __accu0__=[];for(var i of range(0,len(alist),2))__accu0__.append(alist.__getslice__(i,i+2,1));return py_iter(__accu0__)}());
f();
pygame.display.py_update();
profile.user.save();
df.loc[df.py_name].tail(2);
Node.objects.get_queryset_descendants(my_queryset,__kwargtrans__({include_self:false}));
self.panel.Bind(wx.EVT_CHAR,self.OnKeyDown);
t.start();
df;
thread.start();
plt.setp(xticklabels,__kwargtrans__({visible:false}));
list(t);
x>1?tobin(x/2)+[__mod__(x,2)]:[x];
subprocess.call(args,__kwargtrans__({stderr:subprocess.STDOUT,stdout:f}));
logger.setLevel(logging.INFO);
self.table.setItem(1,0,QtGui.QTableWidgetItem(self.led.text()));
someClass.doSomething();
df.columns=df.columns.astype(str);
pylab.gca().add_patch(arr);
print(etree.tostring(tree));
regex.match(string);
a.result()+b.result();
tk.Frame.__init__(self,root);
f.write(s.getvalue());
f.seek(0,2);
self.out_file.close();
a.print_x.__func__(b);
print(s.__getslice__(0,null,1));
var f=np.array(function(){var __accu0__=[];for(var n=0;n<N;n++)__accu0__.append(n<N/2?df*n:df*(n-N));return __accu0__}());
var my_dict=function(){var __accu0__=[];for(var x=0;x<10;x++)__accu0__.append([x,Math.pow(x,2)]);return dict(__accu0__)}();
print(json.dumps(doc.reprJSON(),__kwargtrans__({cls:ComplexEncoder})));
g.username=user.py_name;
file.close();
p.stdout.close();
(function(){var __accu0__=[];for(var i=0;i<len(choices);i++)__accu0__.append(os.path.join(...choices.__getslice__(0,i+1,1)));return __accu0__})();
print(row[0]);
var fig=plt.figure();
(function(){var __accu0__=[];for(var c of chars)__accu0__.append([c,counter.py_get(c,0)]);return dict(__accu0__)})();
sys.path;
do_stuff();
export var client_name=models.CharField(__kwargtrans__({max_length:400}));
export var laplace_k=make_kernel([[.5,1,.5],[1,-6,1],[.5,1,.5]]);
list(it.product(x,mit.collapse(y)));
fun(...args,__kwargtrans__(kwargs));
py_typeof(s);
m_action2.perform();
var ax=self.figure.add_subplot(111);
process.kill();
timezone.localtime(timezone.now());
export var mz=np.indices(IRtest.shape)[0];
var __left0__=img.size;var width=__left0__[0];var height=__left0__[1];
c.append(a[index]);
df.ix[idx];
config.write(configfile);
main();
cur.close();
gp1.iloc[0].py_values;
var fig=plt.figure();
fsizer.Add(self.stext,0,wx.ALL);
pickle.dump(selfref_list,output,-1);
start_response(status,response_headers);
export var auser=self.auth.get_user_by_session();
print(list(takewhile(function __lambda__(x){return bool(x.strip())},v)));
np.dot(J,mat);
var df=pd.DataFrame(list(BlogPost.objects.all().py_values()));
var response=urllib.request.urlopen(url);
all_pairs+=function(){var __accu0__=[];for(var [nA,nC]of itertools.product(listA,listC))__accu0__.append(tuple([tuple([nA,0]),tuple([nC,2])]));return __accu0__}();
result[nI]=v2[nI];
smtp.quit();
os.dup2(savout,1);
var a=a&b;
new set([dict([[user|hash,item]])]);
print(tmp);
pd.concat(tuple([df1,df2]),__kwargtrans__({axis:1}));
export var mydict_as_string=cPickle.dumps(mydict);
print(str(mytuple).__getslice__(1,-1,1));
var queryset=Profile.objects.filter(condition);
var __left0__=plt.subplots(1,1);var fig=__left0__[0];var ax=__left0__[1];
plt.subplot(122);
print(yaml.dump(a,__kwargtrans__({default_flow_style:false})));
parameters(my_get_params);
get_lineage(dt,df.columns);
var my_list=function(){var __accu0__=[];for(var item=0;item<10;item++)__accu0__.append(item);return __accu0__}();
strided(a,__kwargtrans__({shape:tuple([Math.floor((a.size+n-1)/n),n]),strides:tuple([n*s,s])})).__getitem__([tuple([0,null,1]),tuple([1,null,1])]);
self._app(environ,log_response);
f.seek(2);
len(a);
time.sleep(1);
plt.rcParams.py_update(params);
QtCore.QAbstractTableModel.__init__(self,parent);
plt.hexbin(x,y);
self.right.extend(self.left.__getslice__(0,x,1));
var shallow_copy_of_set=set(old_set);
clf.fit(K,y);
ax.xaxis.set_major_locator(dates.MinuteLocator());
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
export var image_file_size=img_file.tell();
QtCore.Qt.ItemIsEnabled|QtCore.Qt.ItemIsSelectable|QtCore.Qt.ItemIsDragEnabled|QtCore.Qt.ItemIsDropEnabled;
pri();
self._decks=[];
object_list.append(new_element);
sleep(10);
Feed.objects.update_one(__kwargtrans__({push__posts:post}));
s.ix.__getslice__(x,y,1).asfreq(BDay()).count();
print(arr.__getitem__([[1,2],[0,1]]));
var user=models.ForeignKey(User,__kwargtrans__({unique:true}));
image.show();
os.symlink(src,dst);
txt_frm.grid_rowconfigure(0,__kwargtrans__({weight:1}));
np.sum(a==b);
result.extend(flatten_to_strings(i));
export var sl=slice(0,4);
self._display.sync();
tuple([[datetime.datetime(2012,1,2,0,0)]]);
frozenset(itertools.chain.from_iterable(args));
py_next(function(){var __accu0__=[];for(var [i,string]of enumerate(strings))if(__in__(substring,string))__accu0__.append(i);return py_iter(__accu0__)}());
other_work();
func(...args,__kwargtrans__(kwargs));
curses.wrapper(MyApp);
self.py_name=py_name;
convert_A_to_B(sys.stdin,sys.stdout);
time.mktime(utc_dt.timetuple());
infile.seek(0);
self.process.run();
output.append(tuple([num,val]));
datetime.date(int(a.__getslice__(0,4,1)),int(a.__getslice__(5,7,1)),int(a.__getslice__(8,10,1)));
var result=function(){var __accu0__=[];for(var [k,v]of list(d.py_items()))for(var x of k*v)__accu0__.append(x);return __accu0__}();
print(cursor.bindnames());
new set([dict([[value|currency,request.session.currency_type]])]);
execute(sys.argv[1]);
fh.readlines();
export var allmodules=function(){var __accu0__=[];for(var py_name of modulenames)__accu0__.append(sys.modules[py_name]);return __accu0__}();
t.to_datetime();
export var fact2=dd0*dd0/2;
c.append(int(digit));
var somelist=function(){var __accu0__=[];for(var [j,i]of enumerate(somelist))if(!__in__(j,indices))__accu0__.append(i);return __accu0__}();
(function(){var __accu0__=[];for(var n of nums)__accu0__.append(fac(n));return __accu0__})();
app;
numpy.float64(1)/0;
f.close();
np.issubdtype(np.bool,np.integer);
a[ind];
new set([new set([test|safe])]);
tuple(f());
self.data=data;
flipbf(m).swapaxes(1,2);
export var times=function(){var __accu0__=[];for(var match of pattern.finditer(ifile.read()))__accu0__.append(match.group(1));return __accu0__}();
states.py_split();
func();
np.argmax(np.mean(complete_matrix,__kwargtrans__({axis:1})));
sys.exit(app.exec_());
export var df_test=df_test.apply(sizes,__kwargtrans__({axis:1}));
var a=[0,1,0,1,0,0,0,0];
ax.grid(true);
shutil.copyfile(source_path+file_name,dest_path+file_name);
var app=Flask(__name__);
p.stdout.flush();
self.__name__;
conn.send(msg);
print(tuple([k,v]));
np.rollaxis(result,0,result.ndim);
export var ok=models.BooleanField(__kwargtrans__({null:false,py_default:true}));
print(sys.maxunicode);
Py_Finalize();
plt.clf();
export var data_mean=pd.rolling_mean(data,__kwargtrans__({window:5})).shift(-2);
print(bar.x);
elevation[elevation>0]=numpy.NAN;
list(range(start,stop+1,step));
print(add_number(A));
export var cube=numpy.array(list(itertools.product(tuple([0,1]),tuple([0,1]),tuple([0,1]))));
var args=parser.parse_args();
locale.setlocale(locale.LC_COLLATE,newone);
a*b.__getitem__([tuple([0,null,1]),np.newaxis]);
var __left0__=ax.get_legend_handles_labels();var handles=__left0__[0];var labels=__left0__[1];
dir(nltk.corpus);
plt.gca().add_artist(scalebar);
s.connect(tuple([host,port]));
self.stop.grid(__kwargtrans__({row:4,column:1,sticky:EW}));
export var Str=random.randomint(1,18);
print(df1.to_string());
var c=np.array([[1,0,0],[1,0,0],[1,0,0],[1,1,0]]);
var G=np.array([[0,0,0,0],[1,0,0,0],[1,1,0,0],[1,1,1,0]]);
manager.connect();
plt.show();
print(rf.predict([testdataset[-1]]));
django.setup();
(function(){var __accu0__=[];for(var i of x)__accu0__.append(i);return __accu0__})();
Food._meta.get_all_related_objects()[0].model;
[list(range(2,6)),list(range(12,18))];
ax.pcolormesh(theta,r,Z);
export var hb2=plt.hexbin(x2,y2,__kwargtrans__({norm:norm}));
(function(){var __accu0__=[];for(var x of arg)__accu0__.append(Factorial(x));return __accu0__})();
response;
f.write(template);
print(link.text.strip().__getslice__(5,null,1));
var ax=fig.add_subplot(111);
PyEval_SaveThread();
var numbers=map(int,s.py_split());
export var signed_number=ctypes.c_long(number).value;
text.set_rotation(90);
joe(joe(joe(dict({}),myTupleList[0]),myTupleList[1]),myTupleList[2]);
setp(ax1.get_xticklabels(),__kwargtrans__({fontsize:6}));
time.sleep(1);
var myNames=f.readlines();
logger.addHandler(fh);
o.a=2;
app.SetTopWindow(frame);
plt.show();
var B=matrix(expm(A));
print(f(1));
x[1];
stdscr.getch();
2*a+b;
vbox1.addWidget(self.edit2);
progbar.pack();
main();
result_dict[str(len(word))].append(word);
logging.root.setLevel(logging.DEBUG);
var data=request.GET;
between1(b[0],p[0],q[0])&&between1(b[1],p[1],q[1]);
myDict[key]+=val;
export var flt=np.array(function(){var __accu0__=[];for(var x of lrg)if(x==0)__accu0__.append(x);return __accu0__}());
print(s.__getslice__(i,null,1));
var __left0__=ax2.plot(image.__getitem__([tuple([0,time,1]),5,5]));export var im2=__left0__[0];
Obj2.grid_forget();
var result=list(DBProcessor().get_listings());
res+=function(){var __accu0__=[];for(var d of dirs)__accu0__.append(os.path.join(root,d));return __accu0__}();
var cap=cv2.VideoCapture(0);
dict.fromkeys(s,0);
app.register_blueprint(mod);
cur.close();
sys.exit(app.exec_());
var x=np.arange(len(df.columns));
min(map(function __lambda__(x){return __in__(x,s)?s.index(x):len(s)},a));
new set([new set([message])]);
df;
plt.show();
e.save();
find_indices(a,function __lambda__(e){return e>2});
nodes[2]=1;
print(regex.group(2));
obj.refresh_from_db();
self.visit_typeA(dataobj);
var a=np.array([1,2,2,1]).reshape(2,2);
user.Setinfo();
var html=gzipper.read();
gmpy.divm(1,4,9);
dict(dd);
var a=str(tag.getArtist());
df.to_excel(writer,__kwargtrans__({sheet_name:sheetname}));
main();
var app=QtGui.QApplication([]);
nlargest(2,tags,__kwargtrans__({key:function __lambda__(e){return e[1]}}));
response;
simplejson.loads(json);
export var oldest=max(people,__kwargtrans__({key:function __lambda__(p){return p[1]}}));
sys.exit(EMERGENCY);
result.append([]);
var __left0__=parser.parse_args();export var opt=__left0__[0];var args=__left0__[1];
axes.legend(handles,labels);
export var unicode_string=byte_string.decode(encoding);
var img=Image.open(StringIO(response.content));
app.cgirun();
var image=Image.open(picture);
groupby(a,[1]);
(function(){var __accu0__=[];for(var k of sorted(groups.py_keys()))__accu0__.append(groups[k]);return __accu0__})();
sock.setsockopt(socket.IPPROTO_TCP,socket.TCP_KEEPINTVL,interval_sec);
signal.signal(signal.SIGTERM,self.exit_gracefully);
var res=urllib.request.urlopen(req);
setattr(obj,self.py_name,float(val));
plt.figure();
var q=DBSession.query(model.Name).distinct(model.Name.value);
obj.post_set.count();
draw(2,4,5);
plt.locator_params(__kwargtrans__({nbins:10}));
print(hex(id(x)));
print(dll.get_buf());
var p=figure(__kwargtrans__({x_range:tuple([-1,1]),y_range:tuple([-1,1])}));
words.flatMap(set).distinct().count();
var a=defaultdict(function __lambda__(){return 1});
sys.exit(0);
print(key,dict[key]);
zippend(tuple([one_array,two_array]),two_outputs());
l.__getslice__(0,n,1);
numpy.set_printoptions(__kwargtrans__({threshold:numpy.nan}));
self.label.setMouseTracking(true);
export var flann=cv2.flann_Index(desc2,flann_params);
var m=merge_a_b(a,b);
print(function(){var __accu0__=[];for(var x of itertools.zip_longest(...lists,__kwargtrans__({fillvalue:0})))__accu0__.append(sum(x));return __accu0__}());
sys.exit();
var writer=csv.writer(self.response.out);
var s=requests.Session();
var int_list=function(){var __accu0__=[];for(var x of line.py_split())__accu0__.append(int(x));return __accu0__}();
plt.set_cmap(viridis);
var documents=function(){var __accu0__=[];for(var doc of documents)__accu0__.append(doc[0]);return __accu0__}();
print(function(){var __accu0__=[];for(var b of bases)__accu0__.append(b(5));return __accu0__}());
(dt-epoch).total_seconds();
Py_DECREF(result);
sigmoid(W1*x1+W2*x2+B);
!any(data);
list(zip(A,B*2));
var __left0__=parser.parse_args();var options=__left0__[0];var args=__left0__[1];
(new set([1])).py_pop();
var my_list=[b,a];
cv.SetCaptureProperty(camcapture,cv.CV_CAP_PROP_FRAME_WIDTH,1280);
(np.diff(sdata)>0).sum(__kwargtrans__({axis:1}))+1;
list(chain.from_iterable(a));
data.append(map(str.strip,row));
var id=Column(Integer,__kwargtrans__({primary_key:true}));
var category=models.ForeignKey(Category);
mail.quit();
pylab.show();
unittest.main();
export var myDF=pd.DataFrame(data);
self._shape=tuple([self._shape[0],self._shape[1]-1]);
app;
(function(){var __accu0__=[];for(var i of zip_longest(...l,__kwargtrans__({fillvalue:0})))__accu0__.append(sum(i));return __accu0__})();
cursor.close();
listD.append(listC[num]);
canvas.grid(__kwargtrans__({row:0,column:0,sticky:N+S+E+W}));
var x=np.clip(x,0,1);
list(itertools.combinations(enumerate(a),2));
var result=np.vectorize(my_dict.py_get)(a);
py_typeof(counts);
var __left0__=np.linalg.lstsq(A,B);export var coeff=__left0__[0];var r=__left0__[1];var rank=__left0__[2];var s=__left0__[3];
admin.site.register(Department,DepartmentAdmin);
c.close();
var cleaned=function(){var __accu0__=[];for(var i of map(str.strip,words))if(i)__accu0__.append(i);return __accu0__}();
print(function(){var __accu0__=[];for(var element of lst)__accu0__.append(element);return __accu0__}());
var app=Flask(__name__);
Counter(map(tuple,a));
var text=pipe.communicate()[0];
var filename=models.CharField(__kwargtrans__({max_length:128}));
sock.close();
random.shuffle(l2);
parser.parse_args();
export var a2D=np.lib.stride_tricks.as_strided(a,__kwargtrans__({shape:tuple([nrows,N]),strides:tuple([n,n])}));
var a=[1,1,1,1,1];
export var bin_n=bin(int(n));
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
diff(x);
map(a.__getitem__,b);
[0,2,6,7];
matrix.__setslice__(0,null,null,function(){var __accu0__=[];for(var row of matrix)__accu0__.append(__in__(0,row)?[0]*len(row):row);return __accu0__}());
pickle.dump(abe,f);
qs_sorted.append(qs.py_get(__kwargtrans__({id:id})));
export var solution=pd.concat(frames);
export var myparent=models.ForeignKey(Parent);
sys.path.insert(0,parent_dir);
child.sendline(password);
collections.deque(iterator,__kwargtrans__({maxlen:0}));
root.rowconfigure(tuple([0,1]),__kwargtrans__({weight:1}));
print(x.group(1));
zip(...list_of_values.__getslice__(i,i+len(pattern),1));
(function(){var __accu0__=[];for(var item of py_items)if(item.col2==2006)__accu0__.append(item);return __accu0__})();
asyncore.dispatcher.__init__(self);
DataFrame(function(){var __accu0__=[];for(var i=0;i<1E3;i++)__accu0__.append(row);return __accu0__}());
export var kwargs=dict({});
isinstance(dict(),collections.MutableMapping);
plt.show();
wr.writerow(mylist);
export var template=cv2.imread(template_path,cv2.IMREAD_UNCHANGED);
(function(){var __accu0__=[];for(var i of range(0,chunks,chunk_size))__accu0__.append(x.__getslice__(i,i+chunk_size,1));return __accu0__})();
plt.colorbar();
export var mech=mechanize.Browser();
pd.DataFrame(r,i,u);
sys.path;
export var new_list2=function(){var __accu0__=[];for(var i of indicies)__accu0__.append(list2[i]);return __accu0__}();
output+=item[0].upper()+item.__getslice__(1,null,1);
df.join(x);
fib(n-1)+fib(n-2);
var date_parser=pd.datetools.to_datetime;
pylab.show();
func();
pprint(result);
var win=gtk.Window(gtk.WINDOW_TOPLEVEL);
list.__setitem__(self,index,value);
suite.py_sort();
list[i].append(random.randint(0,9));
print(df.reset_index());
df.loc[[0,2,4]];
writer.writerows(zip(...test_data.__getslice__(1,null,1)));
user.put();
4*scipy.integrate.nquad(f,[[0,inf],[0,inf]])[0];
print(dict.py_setdefault.__doc__);
print(json_data[entry]);
main();
[[[1][2]]];
print(e.subs([tuple([a,d]),tuple([b,f])]));
fig.clf();
time.sleep(1);
s.bind(tuple([TCP_IP,TCP_PORT]));
scipy.misc.factorial(6);
db.init_app(app);
gc.collect();
image.paste(ic,box);
var groups_no_a=function(){var __accu0__=[];for(var i of groups)if(!__in__(a,i))__accu0__.append(i);return __accu0__}();
QWebView.page().setNetworkAccessManager(myNetworkAccessManager);
print(moneyx);
django.setup();
new set([new set([request.user.get_myuser.pretty_username])]);
py_clear();
var n=gmpy2.next_prime(n);
plt.scatter(x,y,__kwargtrans__({zorder:1}));
max_by_group.collect();
print(py_next(py_next(mp.parse_sents([sent,sent2]))));
print(list(myDict.py_keys()));
self.rect.set_height(self.y1-self.y0);
export var wordlist=openedfile.read().py_split();
do_something(column);
tuple(function(){var __accu0__=[];for(var x of map(itemgetter(0),G))__accu0__.append(x);return __accu0__}());
n.addConnection(bias_to_hidden);
reversed_dict[value].append(key);
plt.figure(1);
export var manylinux1_compatible=false;
os.listdir(long_unc);
cv2.destroyAllWindows();
do_something();
ax.set_xlim(x.min(),x.max());
math.pow(x,y);
var B=np.hstack(tuple([splits[0],splits[2]]));
(function(){var __accu0__=[];for(var x of filename)if(x.isdigit())__accu0__.append(x);return __accu0__})();
os.path.py_split(x)[-1];
var cursor=cnx.cursor(__kwargtrans__({dictionary:true}));
export var commom=function(){var __accu0__=[];for(var item of list(dict_b.py_values()))if(__in__(item,list(dict_a.py_values())))__accu0__.append(item);return __accu0__}();
unittest.main();
self.show_popup();
print(fin.read());
c.connect(tuple([hostn,80]));
df.index=df.index+1;
a/(math.sqrt(2)*erfinv(P));
test.py;
plt.step(x,y);
print(cookie);
itertools.zip_longest(...args,__kwargtrans__({fillvalue:fillvalue}));
tuple_foo(tuple(a));
os.makedirs(path);
df.__getslice__(0,-1,1);
export var CoverageACol=array(list(range(10)),__kwargtrans__({dtype:str})).reshape(2,5);
df;
plt.show();
ax.plot(x,y);
var test=np.array([0,1,2,5,0]);
var args=parser.parse_args(sys.argv.__getslice__(1,null,1));
Response(serializer.data);
image.save(output);
np.set_printoptions(__kwargtrans__({suppress:true}));
pyhk.addHotkey(SomeHotkey,SomeFunction);
df;
(function(){var __accu0__=[];for(var s of range(start,stop,step))__accu0__.append(list(range(s,s+step+1,step)));return __accu0__})();
fn(...args,__kwargtrans__(kwargs));
pygame.quit();
conn.close();
p.start();
nx.draw(G);
var __left0__=itertools.tee(walk);export var walk=__left0__[0];export var walk2=__left0__[1];
do_code();
var __left0__=p.communicate();var out=__left0__[0];var err=__left0__[1];
nx.draw_networkx_edge_labels(G,pos,__kwargtrans__({edge_labels:edge_labels}));
do_stuff();
var app=QApplication(sys.argv);
curses.endwin();
var bar=models.CharField();
var data=json.load(f);
sum(function(){var __accu0__=[];for(var c of s)if(c.isdigit())__accu0__.append(int(c));return py_iter(__accu0__)}());
var ws=wb.worksheets[0];
print(columns[0]);
Gtk.ContainerClass.list_child_properties(parent);
signal.signal(signal.SIGINT,handler);
ax2.plot(list(range(100)),np.ones(100));
df.loc.__setitem__([df2.index,df2.columns],df2);
print(function(){var __accu0__=[];for(var k of sorted(out.py_keys()))__accu0__.append(tuple([k,out[k]]));return __accu0__}());
self.columnconfigure(10,__kwargtrans__({weight:1}));
axclust.set_xticks([]);
axcltwo.set_xticks([]);
ax.autoscale(false);
self.window.refresh();
curses.initscr();
new set([new set([field.errors])]);
out.append([]);
list(itertools.combinations(py_keys,2));
mqtt.client.loop_start();
run_loop_with_timeout();
self.fig.canvas.draw();
most_expensive_cars.append(list(company.cars_by_price.all())[0]);
time.sleep(.1);
yests+=[yest];
fileout.close();
(function(){var __accu0__=[];for(var x of seq)if(!__in__(x,seen)&&!seen.add(x))__accu0__.append(x);return __accu0__})();
str.__init__(self,...args);
print(list(zip(A,i)));
[e]*n;
bool(s.intersection(list(someDict.py_keys())));
sys.exit(1);
(function(){var __accu0__=[];for(var file of files)__accu0__.append([file,check_image_with_pil(file)]);return dict(__accu0__)})();
result.py_setdefault(v,[]).append(k);
self.func();
plt.xlim([0,len(sub_data)]);
var sock=socket.socket(socket.AF_INET,socket.SOCK_STREAM);
btn.Bind(wx.EVT_BUTTON,self.onDialog);
df;
simplejson.JSONEncoder.py_default(self,obj);
sys.stdout.write(char);
sys.stderr.flush();
f.is_integer()?int(f):f;
cursor.execute(sql);
server.start();
plt.show();
print([eq1]==[eq2]);
f.write(contents);
var q=B.select().join(A).where(B.date==last_entry_date);
[.66666667-.66666667];
__DBNAME__[0]=py_name;
dict.__setitem__(self,frozenset(tuple([idx])),value);
var py_items=sorted(list(dct.py_items()),__kwargtrans__({key:function __lambda__(kv){return kv[0]}}));
list(zip(a,b,zip(...gr),d));
self.x==p.x&&self.y==p.y;

var df=pd.DataFrame(np.random.randn(10,6),__kwargtrans__({columns:cols}));
var p=subprocess.Popen(cmdline,__kwargtrans__({stdout:sys.stdout,stderr:sys.stderr}));
parent.config(__kwargtrans__({menu:menubar}));
edge_dict[e[0]][e[-1]]+=1;
(function __lambda__(s){var args=tuple([].slice.apply(arguments).slice(1));return!v(s,...args,__kwargtrans__(kw))});
var im=Image.open(filename);
var result=list(filter_value(a,1));
float(x);
var gray=img.__getitem__([tuple([0,null,1]),tuple([0,null,1]),0]);
thread.start();
print(s.query(myTable));
min_obj_set.append(obj);
var sess=tf.Session(__kwargtrans__({config:tf.ConfigProto(__kwargtrans__({gpu_options:gpu_options}))}));
var app=QtGui.QApplication(sys.argv);
plt.figure(1);
con.commit();
z.close();
y.std();
export var cert=crypto.dump_certificate(crypto.FILETYPE_PEM,k);
export var frame2=cv.QueryFrame(video2);
var id=models.UUIDField(__kwargtrans__({primary_key:true,py_default:uuid.uuid4,editable:false}));
var reader=csv.reader(f);
result[a][b]=n[a][b]-1;
var now=datetime.datetime.utcnow();
x;
var __left0__=p.communicate();var out=__left0__[0];var err=__left0__[1];
evaluate(function __lambda__(x){return x<5&&x>-5});
self.y/self.x;
random.shuffle(arr);
numpy.std(rolling_window(observations,n),1);
zip(np.ravel(ix0),np.ravel(ix1),np.ravel(v2));
handle_last_line(last_line);
wm.add_watch(watched_dir,pyinotify.IN_CLOSE_WRITE,__kwargtrans__({proc_fun:MyProcessEvent()}));
shutil.rmtree(dir);
print(tuple([r.status_code,r.reason]));
x+=y.todense();
ax.figure.canvas.draw();
np.random.shuffle(coordinates);
func(...args,__kwargtrans__(kwds));
export var yvalues=line2d[0].get_ydata();
model4.py;
print(function(){var __accu0__=[];for(var item of newlist)__accu0__.append(find_interval(tlist,item));return py_iter(__accu0__)}());
sheet.write(0,index,value);
var soup=BeautifulSoup(html_object);
np.array(function(){var __accu0__=[];for(var row of arr)__accu0__.append(row.__getslice__(0,num_cols,1));return __accu0__}());
x+=datetime.timedelta(1);
print(int(round(random.randint(100,200001),-2)));
session.add(s);
list(takewhile(function __lambda__(i,j){if(typeof j=="undefined"||j!=null&&j.hasOwnProperty("__kwargtrans__"))var j=py_iter(list2);return i==py_next(j)},list1));
p.close();
var df=pd.concat(tuple([ser1,ser2]),__kwargtrans__({axis:1}));
urllib.parse.unquote_plus(t);
var fig=plt.figure();
var driver=webdriver.Firefox(__kwargtrans__({firefox_profile:firefox_profile}));
array.append([0]*8);
sys.stdout.write(prompt);
var idx=np.argsort(a,__kwargtrans__({axis:1}));
proc.wait();
var k=function(){var __accu0__=[];for(var x of l)__accu0__.append(ord(x)-96);return __accu0__}();
model.setData(index,editor.currentIndex());
httpd.serve_forever();
[tuple([8,9]),tuple([4,9]),tuple([7,9])];
var __left0__=os.path.splitdrive(path);export var drive=__left0__[0];export var path_and_file=__left0__[1];
f.write(data);
max(MyCount,__kwargtrans__({key:int}));
export var first_index=match.start();
QtGui.QMainWindow.eventFilter(self,source,event);
ax.set_axis_off();
QtGui.QWidget.__init__(self);
HttpResponse(response,__kwargtrans__({content_type:mimetype[0]}));
false;
plt.plot();
driver.set_window_size(1280,1024);
(function(){var __accu0__=[];for(var [itr,i]of enumerate(unqID))__accu0__.append([i,tuple([IDsums[itr],value_sums[itr]])]);return dict(__accu0__)})();
var s=int(s);
json.dump(parse(sys.stdin),sys.stdout,__kwargtrans__({indent:2}));
ax.plot([0,normp[0]],[0,normp[1]],__kwargtrans__({zs:[0,normp[2]]}));
export var boolarr=np.array([[0,0,1],[1,0,1],[1,0,1]],__kwargtrans__({dtype:np.bool}));
var app=Flask(__name__);
child.kill();
matrix.data[row].append(column);
to_call(...args,__kwargtrans__(kwargs));
any(function(){var __accu0__=[];for(var x of ls)__accu0__.append(__in__(x,mystr));return py_iter(__accu0__)}());
var lists=function(){var __accu0__=[];for(var _=0;_<n;_++)__accu0__.append([]);return __accu0__}();
self.Show();
var results=sorted(query.fetch(FETCHED),__kwargtrans__({key:_func}));
Counter(data[1]).most_common();
idx[mask].argsort()[unqID];
var new_list=function(){var __accu0__=[];for(var x of old_list)__accu0__.append(g(f(x)));return __accu0__}();
export var nt=function __lambda__(a,b){return S[a].intersection(S[b])};
db.session.add(provider);
set_column(first_col,last_col,width,cell_format,options);
fin.seek(0);
var resp=session.post(url,__kwargtrans__({headers:headers,data:form}));
export var my_data=function(){var __accu0__=[];for(var line of lines_list.__getslice__(1,null,1))__accu0__.append(function(){var __accu1__=[];for(var val of line.py_split())__accu1__.append(int(val));return __accu1__}());return __accu0__}();
hand.py_sort(__kwargtrans__({key:function __lambda__(c){return rank_cards.index(c[0])},reverse:true}));
(function(){var __accu0__=[];for(var c of chars)__accu0__.append(hex(c));return __accu0__})();
wx.ListCtrl.__init__(self,parent,ID,pos,size,style);
var df=concat(function(){var __accu0__=[];for(var f of files)__accu0__.append(reader(f));return __accu0__}(),__kwargtrans__({py_keys:files}));
var img=Image.open(input_path);
export var dirs=list(set(function(){var __accu0__=[];for(var x of z.namelist())__accu0__.append(os.path.dirname(x));return __accu0__}()));
pickle.dump(d,afile);
cause;
feedback.save();
var a=[[0,0],[0,0]];
var __left0__=tuple([abs(sig1),abs(sig2)]);export var sig1=__left0__[0];export var sig2=__left0__[1];
setattr(object,attrname,value);
var writer=csv.writer(output,__kwargtrans__({quoting:csv.QUOTE_NONNUMERIC}));
element.close();
var __except0__=AttributeError();__except0__.__cause__=null;throw __except0__;
child.destroy();
var pairs=list(my_dict.py_items());
random.choice(function(){var __accu0__=[];for(var p of itertools.product(x,__kwargtrans__({repeat:2})))__accu0__.append(p);return __accu0__}());
export var deserialized=Data.deserialize(json.loads(json_string));
signal.signal(signal.SIGINT,signal.SIG_IGN);
plt.legend();
auth.set_access_token(access_token,access_token_secret);
df1.add(df2,__kwargtrans__({fill_value:0}));
np.random.seed(1);
plt.scatter(x,y);
group.plot(__kwargtrans__({ax:ax[ix],title:i}));
setup.py;
self.root.mainloop();
(function(){var __accu0__=[];for(var file of files)__accu0__.append([file,mimetypes.guess_type(file)]);return dict(__accu0__)})();
export var opts=parser.parse_args();
urllib.request.install_opener(opener);
foo.bar();
getattr(self.ham,func)(...args,__kwargtrans__(kwargs));
(function(){var __accu0__=[];for(var list_a of list_a)if(__in__(list_a[0],list_b))__accu0__.append(list_a);return __accu0__})();
array([[1,.1,.1],[.09,1,.1],[.2,.1,1]]);
var df=pandas.DataFrame.from_records(data_records);
var number=random.randrange(1,10);
d.py_setdefault(key,[]);
lines.append(line);
w.show();
export var y_actu=[2,0,2,2,0,1,1,2,2,0,1,2];

print(set_list_intersection(set_list));
self.save();
var soup=BeautifulSoup(html);
plt.scatter(x,y,__kwargtrans__({c:c}));
ax.set_ylim(0,16E3);
entry.grid(__kwargtrans__({row:0,column:0}));
random.shuffle(a);
var g=f();
print(len(locals()));
export var els=list(d.py_items());
model.add(Dropout(.5));
deleteseq[i];
groups.mean().b;
writer.writerow(py_values);
var v=myDict[k];
DISPATCH();
ax.add_patch(circle);
hbar.pack(__kwargtrans__({side:BOTTOM,fill:X}));
self.get_next_probe(new_list,probes,unit_length);
test();
var img=ndi.gaussian_filter(img,tuple([10,10]));
img.show();
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
HTML(df.to_html(__kwargtrans__({escape:false})));
Serial.println(a);
var df=df.dot(p_value);
X.__getitem__([[[0],[1]],[0,1]]);
browser.set_handle_equiv(true);
m.group(1);
list(islice(function(){var __accu0__=[];for(var x of a)if(!__in__(x,bset))__accu0__.append(x);return py_iter(__accu0__)}(),100));
plt.show();
t.start();
np.array([1,1]).astype(int);
print(list(request.headers.py_keys()));
[5,6,9];
x+y+z;
self.get_type_display();
self.greet();
fp.close();
g.write(base64.decodestring(newjpgtxt));
loads(dumps(input_ordered_dict));
df.end_time=pd.to_datetime(df.end_time);
ax.xaxis.set_minor_locator(FixedLocator(x_da));
var __left0__=plt.subplots(__kwargtrans__({nrows:2,ncols:2}));var fig=__left0__[0];var axes=__left0__[1];
curs.execute(query,args_tuple);
(function(){var __accu0__=[];for(var x of nums)for(var y of nums)__accu0__.append(tuple([x,y]));return __accu0__})();
var now=datetime.now();
var data=function(){var __accu0__=[];for(var [a,b]of list(data.py_items()))__accu0__.append([a,int(float(sum(b))/float(len(b)))]);return dict(__accu0__)}();
rates.sub(treas.squeeze(),__kwargtrans__({axis:0})).dropna();
list(zip_longest(...a));
var app=Flask(__name__);
time.sleep(.5);

print(hdict_from_dict(data));
s.getsockname();
print(repr(value));
var slice=arr.__getitem__([tuple([0,2,1]),tuple([0,2,1])]);
__all__[lib]=__import__(lib);
print(sock.recv(10240));
var __except0__=SystemExit(1);__except0__.__cause__=null;throw __except0__;
r.content;
print(tuple([x.subs(sol[0]),y.subs(sol[0])]));
sum(dice)-min(dice);
t.start();
age.__class__.__class__;
cur_date+=relativedelta(__kwargtrans__({months:1}));
datetime.datetime(...time.gmtime().__getslice__(0,6,1));
response;
df.isnull();
myapp.db.session.commit();
print(driver.page_source);
var your_list=f.read().py_split();
self.config(__kwargtrans__({width:self.width,height:self.height}));
var x=EqM_list(function(){var __accu0__=[];for(var bah of buh)__accu0__.append(bah*2);return py_iter(__accu0__)}());
var reversed_arr=np.fliplr([arr1d])[0];
children.append(node.starargs);
var id=Column(Integer,__kwargtrans__({primary_key:true}));
dummy_df[cols[cols].index];
(function(){var __accu0__=[];for(var [k,v]of enumerate(indices.__getslice__(0,-1,1)))__accu0__.append(list_.__getslice__(v,indices[k+1],1));return __accu0__})();
var __left0__=curve_fit(func,x1,x2);var popt=__left0__[0];var pcov=__left0__[1];
print(function(){var __accu0__=[];for(var x of set(text))__accu0__.append(tuple([x,text.count(x)]));return __accu0__}());
ax.plot(x,y);
var res=function(){var __accu0__=[];for(var k=1;k<num_labels+1;k++)__accu0__.append([k,coords[nzvals==k]]);return dict(__accu0__)}();
pprint(d);
b_any(function(){var __accu0__=[];for(var x of lst)__accu0__.append(__in__(word,x));return py_iter(__accu0__)}());
stack.append(tuple([y0,w0]));
list(combinations(list(range(len(sent))),n-1));
self.root.py_update();
ao.__setitem__([tuple([1,null,1]),tuple([1,null,1])],ao.__getitem__([tuple([1,null,1]),tuple([1,null,1])])+ai.__getitem__([tuple([0,-1,1]),tuple([0,-1,1])]));
print((b[2][0]==b[2][0]).all());
var __except0__=KeyboardInterrupt;__except0__.__cause__=null;throw __except0__;
new_button.pack();
print(datetime.date.today()-datetime.timedelta(1));
(function(){var __accu0__=[];for(var o of gc.get_objects())if(isinstance(o,Foo))__accu0__.append(o);return __accu0__})();
test_trisolve2.test_trisolve();
pool.join();
plot_selected.xaxis.set_ticks(np.arange(.2,1.1,.2));
var req=Request(environ,__kwargtrans__({shallow:true}));
f.axes[1].set_position([.05,.45,.4,.05]);
np.random.permutation(indices);
var queryset=SomeObject.objects.filter(__kwargtrans__({owner:request.user}));
tk.Tk.__init__(self,...args,__kwargtrans__(kwargs));
tuple([first_name,last_name]);
var __left0__=scipy.sparse.find(a);var x=__left0__[0];var y=__left0__[1];var z=__left0__[2];
permu(l);
plt.yticks(__kwargtrans__({visible:false}));
my_handler.setLevel(logging.DEBUG);
export var fnew=np.empty(tuple([Nj,Nk]));
worksheet.write(row,col,key);
(function(){var __accu0__=[];for(var x of[[],dict({}),np.array([])])__accu0__.append(bool(x));return __accu0__})();
np.interp(np.linspace(0,npt,nbin+1),np.arange(npt),np.py_sort(x));
listbox.insert(tk.END,key);
time.time()-time;
list(itertools.chain.from_iterable(function(){var __accu0__=[];for(var line of f)__accu0__.append(line.py_split());return py_iter(__accu0__)}()));
str(int(match.group(0))-1);
wi.fooi(7);
plt.show();
pdb.set_trace();
var app=Flask(__name__);
var now=datetime.datetime.now();
var df=pd.DataFrame(data);
plt.clf();
np.maximum(a,0,a);
self.listofrecords.append(record);
Category.objects.filter(__kwargtrans__({child__isnull:true}));
f.close();
var df=pd.concat([df.__getslice__(0,null,1),tags.__getslice__(0,null,1)],__kwargtrans__({axis:1}));
var table=Table(data,__kwargtrans__({colWidths:270,rowHeights:79}));
wx.Frame.__init__(self,parent);
models.OneToOneField(EntryAdmin);
var result=function(){var __accu0__=[];for(var s of S)for(var [i,row]of enumerate(X))if((s==row).all())__accu0__.append(i);return __accu0__}();
Response(serializer.data);
var n=sorted([minN,n,maxN])[1];
var y=[0,.5,1,1.5,2,2.5];
[1,0,0,0,0];
dlg.ShowModal();
print(list(flatten_group(b)));
np.broadcast_arrays(...output);
stdscr.refresh();
self.SetTopWindow(mainDlg);
var grid=np.zeros(tuple([10,10]));
sum(function(){var __accu0__=[];for(var k of lst)if(__in__(k,dct))__accu0__.append(dct[k]);return py_iter(__accu0__)}());
main();
self.finish();
export var location=models.CharField(__kwargtrans__({max_length:25,choices:SHOP1_CHOICES}));
(function(){var __accu0__=[];for(var x of s)if(__in__(x,printable))__accu0__.append(x);return __accu0__})();
deletearray[0];
var B=np.array([[1],[2]]);
ax.zaxis.set_major_locator(LinearLocator(10));
new_list;
np.alltrue((a==b).compressed());
export var pretty_xml_as_string=xml.toprettyxml();
var fig=plt.figure();
(function(){var __accu0__=[];for(var [x,y,z]of zip(a,b,c))__accu0__.append(min(y,max(x,z)));return __accu0__})();
df.eq(df.max(1),0).astype(int);
(function(){var __accu0__=[];for(var [k,v]of groupby(a,np.isfinite))if(k)__accu0__.append(list(v));return __accu0__})();
var pixbuf=gtk.gdk.Pixbuf(gtk.gdk.COLORSPACE_RGB,false,8,width,height);
pstree-p-a;
root.mainloop();
q.write(w);
var tree=ET.ElementTree(root);
np.ma.masked_array(np.interp(value,x,y));
sys.path.insert(0,os.getcwd());
outfile.write(json.dumps(output,__kwargtrans__({indent:4})));
[a,b,c,d,e];
export var ts_clip=ts.reindex(idx);
var soup=BeautifulSoup(html);
var req=urllib.request.Request(url);
map(str,x);
app.mainloop();
browser.set_handle_referer(true);
Process.__init__(self);
self(...args,__kwargtrans__(kwargs))+other(...args,__kwargtrans__(kwargs));
var distances=numpy.linalg.norm(np_cell[1]-srcPos,__kwargtrans__({ord:1,axis:1}));
var A=np.arange(600);
export var stdout_copy=os.fdopen(os.dup(sys.stdout.fileno()),sys.stdout.mode);
thread.start();
random.shuffle(tmp);
x[~np.isnan(x)];
A.__setitem__([tuple([0,null,1]),j],(C[j]*mask).sum(__kwargtrans__({axis:-1})));
export var ynew=np.linspace(0,1,Newy);
var f=open(str(path,encoding));
f.seek(0);
ax.xaxis.set_major_locator(ticker.FixedLocator(pos_list));
print(file.read());
f.write(file_str);
setattr(modelclass,collection_name,tuple([cls,self]));
export var best_index=np.argmin(sq);
calling_func(...args,__kwargtrans__(kw));
var x=defaultdict(int);
var process=subprocess.Popen(cmd,__kwargtrans__({stdout:subprocess.PIPE}));
export var cpoints=np.unique(cpoints);
print(py_name.lower());
print(request.json);
code.interact(__kwargtrans__({local:locals()}));
output_file.write(line);
hashlib.sha1(bn.T).hexdigest();
img.show();
a[0].append(8);
xs.__getslice__(1,null,4);
var all_data=np.hstack(tuple([my_data,new_col]));
abacus[index]=abacus[index]+1;
var p=Popen(cmd,__kwargtrans__({stdin:PIPE,stdout:PIPE,stderr:PIPE}));
p1.wait();
app_log.setLevel(logging.INFO);
numpy.std(arr,__kwargtrans__({axis:0}));
hex(x);
sys.exit(0);
main();
glOrtho(0,1,0,1,-1,1);
the_integers.__getslice__(a,b,c).foo();
time.sleep(10);
var new_list_of_dict=map(new_dict,list_of_dict);
var sess=tf.InteractiveSession();
time_d.total_seconds();
var im=np.asarray(x);
t.start();

var f=function(){var __accu0__=[];for(var x=0;x<10;x++)__accu0__.append([x,make_func(x)]);return dict(__accu0__)}();
write(n,0,0,0);
np.arange(n)>=arr.__getitem__([tuple([0,null,1]),np.newaxis]);
result();
ax1.yaxis.get_offset_text().set_color(plot_ax1.get_color());
var __left0__=tuple([A[j],A[k],A[i]]);A[i]=__left0__[0];A[j]=__left0__[1];A[k]=__left0__[2];
w.writerow([key,val]);
line;
var data=response.json();
module_b.py;
self.Bind(wx.EVT_SIZE,self.on_size);
browser.set_handle_redirect(false);
tcpCliSock.close();
d.tzname();
child.kill();
export var p_values=scipy.stats.norm.sf(abs(z_scores))*2;
print(np.asarray(tuple([unique,counts])).T);
f.write(bytearray(b));
model.fit(X,Y,__kwargtrans__({nb_epoch:5,batch_size:100,verbose:1}));
print(np.flatnonzero(npi.contains([[0,1]],vals)));
print(pd.get_dummies(py_values));
print(py_typeof(data));
app.run(__kwargtrans__({debug:true}));
self.canvas.delete(self.last_img);
plt.subplot(6,1,1);
var my_dict=obj.__dict__;
example.examplemod.do_stuff();
np.random.seed(1);
np.all(a==b,__kwargtrans__({axis:1}));
Sensor.__init__(self,...args,__kwargtrans__(kwargs));
plt.xticks(x,my_xticks);
var s=function(){var __accu0__=[];for(var e of line.py_split(d))if(e)__accu0__.append(e+d);return __accu0__}();
a.do_something();
export var test2=array([[1,0,1,0,1]]);
pygame.mixer.init();
f.close();
get_template(self.template_name);
self._lock.__exit__(...args,__kwargtrans__(kwargs));
p.start();
subprocess.Popen([command]+args,__kwargtrans__({startupinfo:startupinfo})).wait();

(function(){var __accu0__=[];for(var x=0;x<5;x++)__accu0__.append(tuple([4-x,x]));return __accu0__})();
sizer.Add(button,0,wx.ALIGN_CENTER);
unpickler.load();
image_output.seek(0);
setattr(target,attr,value);
self.w.show();
ast.literal_eval(s);
self.setCentralWidget(self.form_widget);
row.append(0);
outfile.close();
print(function(){var __accu0__=[];for(var r of ranges)for(var i=int(r[0]);i<int(r[-1])+1;i++)__accu0__.append(i);return __accu0__}());
any(function(){var __accu0__=[];for(var i=0;i<len(lst)-n+1;i++)__accu0__.append(sublst==lst.__getslice__(i,i+n,1));return py_iter(__accu0__)}());
export var module_object=importlib.import_module(module_name);

var output=f.read();
f();
export var totaldict=dict(totaldict);
print(f.read(line_len).decode());
var reader=csv.DictReader(csvfile,fieldnames);
pool.terminate();
a.__getitem__([sort_indices,static_indices[1],static_indices[2]]);
x?int(x):0;
var idx=np.array([[0,0,0],[1,1,0],[0,1,2]]);
var __left0__=tuple([seq[0],seq.__getslice__(1,null,1)]);export var head=__left0__[0];export var tail=__left0__[1];
time.sleep(delay);
print(df);
ss.chisquare(FRQ);
var matches=list(compress(totalist,selectors));
pool.map_async(f,args);
app.run();
ECD.close();

true;
export var entries=Entry.objects.select_for_update().filter(__kwargtrans__({author:request.user}));
print(sign.getvalue());
B.append(A[0]);
plt.contour(X,Y,scalar_field);
export var raw_xml=etree.tostring(div);
net.params;
var __left0__=tuple([L.__getslice__(-1,null,1),L.__getslice__(0,-1,1)]);L.__setslice__(0,1,null,__left0__);L.__setslice__(1,null,null,__left0__);
var ax=fig.add_subplot(111);
tf.set_random_seed(1);
print(json.loads(jsonstring,__kwargtrans__({object_hook:hinted_tuple_hook})));
db.session.add(query);
s.commit();
results.div(weights,__kwargtrans__({axis:0}));
os.path.isdir(path);
s.group(0);
data_file.close();
(function(){var __accu0__=[];for(var i of k)__accu0__.append(d[i]);return __accu0__})();
factarr*cplxarr.real+complex(0,1)*cplxarr.imag;
df.iloc.__setitem__([0,2],np.nan);
f(...args,__kwargtrans__(kwargs));
print(filename[0]);
print(row[0],binascii.b2a_hex(row[1]));
x[1][0][2];
nx.draw(G,pos,__kwargtrans__({with_labels:false,arrows:false}));
plt.xticks(__kwargtrans__({rotation:15}));
var now=datetime.datetime.now();
msg.attach(img);
var y_pred=[0,1,0,1,2,2,1];
plt.axis([-2,2,-12,12]);
export var cell=sheet.cell(6,0);
setattr(self,py_name,value);
sum(Math.pow(y_pred-y_true,2),__kwargtrans__({axis:-1}));
wx.PyControl.__init__(self,parent,id,__kwargtrans__(kwargs));
self.d.callback(self.buffer);
tuple([[99,99,99,99,99,99]]);
export var aware=naive.py_replace(__kwargtrans__({tzinfo:utc}));
server_ssl.close();
[1,2];
(function(){var __accu0__=[];for(var [x,y]of t)__accu0__.append([y,x]);return dict(__accu0__)})();
fliplr(m).swapaxes(0,1);
tuple([stdin,stdout,stderr]);
window.show();
do_stuff();
f.close();
l.py_sort();
var C=scipy.delete(C,1,1);
var r=dict(list(a.py_items())+list(b.py_items())+function(){var __accu0__=[];for(var k of set(b)&set(a))__accu0__.append(tuple([k,a[k]+b[k]]));return __accu0__}());
shop1();

self.byid[row[0]]=item;
input.py_sort(__kwargtrans__({key:sortkeyfn}));
betas.iloc.__getitem__([tuple([0,5,1]),tuple([0,5,1])]);
print(list(row));
Silly(1);
df.columns=pd.to_datetime(df.columns);
a*b;
plt.plot(list(range(10,20)));
var root=tk.Tk();
print(function(){var __accu0__=[];for(var [py_items,c]of Counter(a).most_common())for(var item of[py_items]*c)__accu0__.append(item);return __accu0__}());
writer.writeheader();
r.text;
var b=map(list,zip(...a));
ax.scatter(x,y,__kwargtrans__({c:z,cmap:cm,norm:norm}));
var r=proc.stdout.readline();
true;
result.append(item);
export var myarray=np.asarray(mylist);
var newList=map(function __lambda__(y){return max(0,min(255,y))},oldList);
plt.colorbar();
driver.implicitly_wait(20);
print(pool.map(square,range(1E3)));
var y=np.sin(x);
main();
inspect.isclass(X);
len(self.left)+len(self.right);
res.append(f(v));
out.__setitem__([tuple([0,-1,1]),tuple([0,null,1])],out.__getitem__([tuple([0,-1,1]),tuple([0,null,1])])+tmp.__getitem__([tuple([1,null,1]),tuple([0,null,1])]));
genn(igap,igap+2);
func2(gen2);
var result=[];
print(resp.status_code);
plt.show();
ax2.xaxis.set_major_formatter(copy.copy(Formatter));
time.sleep(10);
var b=datetime.datetime.now();
var id=Column(Integer,__kwargtrans__({primary_key:true}));
str(self);
scipy.stats.norm(100,12).cdf(100);
print(repr(text));
var err=p.communicate()[1];
imshow(data);
fcntl.flock(f.fileno(),fcntl.LOCK_EX);
print(a.intersection(b));
df.columns[(df==0).all()];
grid.cbar_axes[0].colorbar(im0);
var app=Flask(__name__);
print(trk.py_name());
dists.value;
export var imgdata=base64.b64decode(imgstring);
file1.close();
myfile.write(S);
smallerThanN([1,4,10,2,7],5);
top.mainloop();
var z=function(){var __accu0__=[];for(var x=0;x<len(s);x++)__accu0__.append(s.__getslice__(x,null,1)+s.__getslice__(0,x,1));return set(__accu0__)}();
print(f.read());
f.close();
pdf.add_page();
__init__.py;
np.concatenate(tuple([M,new_face]),dim);
sys.exit();
var width=img.shape[1];
Py_Finalize();
NULL;
seq.__getslice__(-a,null,1)+seq.__getslice__(0,-a,1);
var py_name=models.CharField();
self.harmstat=harmstat;
current_child.save();
foo[0][0][0]===foo;
getattr(self._ref2,py_name);
s.connect(tuple([HOST,PORT]));
cursor.execute(query,param);
time.sleep(1);
export var button1_window=canvas1.create_window(10,10,__kwargtrans__({anchor:NW,window:button1}));
var arr=function(){var __accu0__=[];for(var _=0;_<5;_++)__accu0__.append([]);return __accu0__}();
var b=json.loads(a);
myList.py_sort(cmp_dict);
signal.signal(signal.SIGINT,signal_handler);
print(tuple([c,p(c)]));
PyObject_HEAD_INIT(NULL);
np.arange(n);
whisper;
var x=a<<1&4294967295;
print(paramdata.py_values);
var data=urllib.request.urlopen(url).read();
np.dstack(tuple([a1,a1.T])).reshape(-1,2);
window.fullscreen();
print(sys.argv[1]);
f.pack(__kwargtrans__({padx:100,pady:100}));
pdf.savefig();
print(re.findall(r,s));
print(my_list);
ax.plot(list(range(10)),__kwargtrans__({color:color}));
var x=df.reset_index();
pat.findall(text);
conn.close();
plt.xticks(__kwargtrans__({rotation:90}));
export var list_list=function(){var __accu0__=[];for(var Null=0;Null<2;Null++)__accu0__.append([]);return __accu0__}();
f.write(e);
yappi.start();
print(tuple([x,y]));
var matches=function(){var __accu0__=[];for(var string of l)if(re.match(regex,string))__accu0__.append(string);return __accu0__}();
bool(collections.Counter([1]));
var i=np.array([[0,0],[1,1]]);
df.sort_index(__kwargtrans__({inplace:true}));
sys.getsizeof(a);
excel.Quit();
plt.tight_layout();
self.canvas.scan_mark(event.x,event.y);
var y=tf.slice(x,[i],[1]);
wx.BeginBusyCursor();
(function(){var __accu0__=[];for(var vec of x)__accu0__.append(math.sqrt(sum(function(){var __accu1__=[];for(var i of vec)__accu1__.append(i*i);return __accu1__}())));return __accu0__})();
myproject/myapp/middleware/globalrequestmiddleware.py;
s.sendmail(me,family,msg.as_string());
self.mainframe.grid(__kwargtrans__({column:0,row:0,sticky:tuple([N,W,E,S])}));
export var my=np.matrix(y);
self.canvas.configure(__kwargtrans__({scrollregion:tuple([0,0,1E3,1E3])}));
glfw.WindowHint(glfw.OPENGL_FORWARD_COMPAT,GL_TRUE);
print(channel.recv(1024));
print(trimmed_text);
random.shuffle(shuffled);
htmlentitydefs.entitydefs[x.__getslice__(1,-1,1)];
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
shutil.move(tempname,zipfname);
var start_time=time.time();
export var arr_ip=function(){var __accu0__=[];for(var i of X.as_matrix())__accu0__.append(tuple(i));return __accu0__}();
sys.stdout.flush();
db.commit();
turtle.mainloop();
Counter(myletters);
df;
writer.writerow(fields);
new_file.write(new_line);
datetime.date(2011,1,1);
list(df);
QObjectCleanupHandler().add(self.layout());
var D=np.diff(np.py_sort(product.T,__kwargtrans__({axis:0})),__kwargtrans__({axis:0}))==0;
Notification.objects.exclude(__kwargtrans__({pk__in:list(notes)})).delete();
A.__getitem__([idx,tuple([0,null,1])]);
my_list.Skip(1).Concat(my_list.Take(1));
print(data.text);
var x=np.linspace(0,10,50);
var __left0__=v;var x=__left0__[0];var y=__left0__[1];var z=__left0__[2];
deletex[key];
export var orig_image=Image.open(original_file);
var a=np.frombuffer(array_pointer.contents);
var ax=fig.add_subplot(111);
print(paragraph.text);
var new_a=np.delete(a,index);
self.fileobj.fileno();
var c=matplotlib.pyplot.contour(x,y,f(x,y));
var c=function(){var __accu0__=[];for(var e of a)__accu0__.append(tuple(function(){var __accu1__=[];for(var [i,j]of zip(e,b))__accu1__.append(i+j);return __accu1__}()));return __accu0__}();

self.num=1;
var df=pd.DataFrame(data);
Py_Initialize();
self.sock.listen(5);
tree.add(0);
server.listen(5);
var fig=plt.figure();
df1.index.get_loc(t);
inner1();
var data=s.recv(2048);
main();
l.pack();
model.fit(X);
var created_at=models.DateTimeField();
output.close();
flipbf(m).swapaxes(0,2);
var root=Tk();
shutdownJVM();
instance.save();
d+(date(d.year+years,1,1)-date(d.year,1,1));
var newList=function(){var __accu0__=[];for(var elem of oldlist)__accu0__.append(elem);return __accu0__}();
var dct=dict(zip(l2,lens));
yaml_file.write(yaml.dump(data,__kwargtrans__({default_flow_style:false})));
var id=Column(Integer,__kwargtrans__({primary_key:true,nullable:false}));
sys.stdout.write(__mod__(format,args));
np.issubdtype(np.void,np.integer);
ax.set_xlim(-.5,4.5);
self.assertEqual(first,second,msg);
child.start();
list(incremental_range(0,20,1,1));
np.array_split(a,[1],__kwargtrans__({axis:1}));
df.index=pd.to_datetime(df.index);
export var freq=db.StringProperty();
QtCore.QThread.__init__(self);
print(function(){var __accu0__=[];for(var i of list1)for(var ch of str(i))__accu0__.append(int(ch));return __accu0__}());
print(tuple([k,list(g)]));
print(my_object);
plt.scatter(i,y);
foofunc();
ax.set_ylim(6,24);
b.append(tuple([begin,end]));
functest();
os.fsync(f.fileno());
threading.Thread.__init__(self);
(function(){var __accu0__=[];for(var w of wordlist)if(is_neighbors(word,w))__accu0__.append(w);return py_iter(__accu0__)})();
plt.show();
pandas_df_to_markdown_table(infodf);
d[key].append(list(value));
build_cscript();
new set([dict([[img.height|div,2]])]);
d.py_update(new set([1]));
plt.show();
export var sizer=wx.BoxSizer(wx.VERTICAL);
dev.ledstates(__kwargtrans__({verbose:true}));
var arr=input().py_split();
export var http_request=get_request();
export var loss_or_grads=loss_or_grads.mean();
dicC.py_update(dicB);
var x=np.linspace(0,1,N);
foo();
httpd.serve_forever();
list(self).index(obj);
var foo=np.array([[0,1],[1,1]]);
var instance=klass();
pygame.camera.quit();
export var string_input=input();
export var env=Environment();
print_foo();
c_uint.__init__(self,value);
crl_url.strip();
var ax2=fig.add_subplot(122);
process.start();
main();
var w=Button(root);
fig.canvas.draw();
self.scat.set_offsets(data.__getitem__([tuple([0,2,1]),tuple([0,null,1])]));
_draw_point(renderer,position,i,j+1);
app.exec_();
var df=pd.concat([df[df.columns.__getslice__(0,5,1)],a],__kwargtrans__({axis:1}));
np.index_exp.__getitem__([tuple([10,4,1]),tuple([0,null,-1])]);
sys.exit();
var content=resp.read();
print(dtd.error_log.filter_from_errors());
contourf(x,y,H1,levels1,__kwargtrans__({cmap:cmap_lin1}));
plt.gca().add_collection(lc);
plt.show();
var now=time.time();
var mask=x==0;
var browser=webdriver.Firefox(fp);
fig.subplots_adjust(__kwargtrans__({wspace:0,hspace:0}));
fp.close();
pygame.draw.rect(game_display,tuple([255,0,0]),rect_one);
app.debug=true;
inner1d(U.transpose(0,2,1),V.T);
test.main();
var G=nx.Graph();
plt.show();
tuple([abs(x),angle(x)]);
self.scat=self.ax.scatter(x,y,__kwargtrans__({c:c,s:s,animated:true}));
false;
plt.plot(np.sin(np.linspace(0,10,100)));
export var TScolumns=pd.DataFrame(df.TimeStamp.tolist());
locale.setlocale(locale.LC_ALL,loc);
G.add_node(1);
a.__getslice__(0,i,1)+MIDCHAR;
py_next(self.iterator);
f.close();
time.sleep(10);
var py_name=models.CharField(__kwargtrans__({max_length:64}));
heap_sort();
print(list(range(maxend-maxrun+1,maxend+1)));
np.random.seed(1977);
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
reuests.post(url,__kwargtrans__({files:files}));
pdb.set_trace();
de[i].extend(j);
sphinx-apidoc- -help;
print(functools.reduce(function __lambda__(x,y){return x&y},[a,b,c]));
f(...args,__kwargtrans__(kwds));
var opener=urllib.request.build_opener();
gc.collect();
np.random.choice(choices,5,__kwargtrans__({p:counts/len(a),py_replace:false}));
print(hashlib.sha1(bencode.bencode(info)).hexdigest());
do_something(line);
self.stdin.flush();
os.unlink(filename);
pl.show();
plt.xlim([min(data)-5,max(data)+5]);
admin.site.register(Person,PersonAdmin);
main(sys.argv);
time.sleep(1);
a[0]+=1;
var list2=[1,1,0,0,1];
var conn=pymongo.MongoClient();
len(nearbystrikes)>0;
server.starttls();
apos+=alo;
tuple([a,b]);
pd.read_json(json.dumps(r)).unstack();
u.delete();
export var transport=ssh_client.get_transport();
var id=Column(Integer,__kwargtrans__({primary_key:true}));
time.mktime(date.timetuple());
var suite=unittest.TestSuite();
self.table.item(1,0).setBackground(QtGui.QColor(125,125,125));
tk.Frame.__init__(self,...args,__kwargtrans__(kwargs));
setp(ax2.get_xticklabels(),__kwargtrans__({visible:false}));
d.apply(pd.value_counts);
(function(){var __accu0__=[];for(var [k,v]of qdict.lists())__accu0__.append([k,len(v)==1?v[0]:v]);return dict(__accu0__)})();
np.where(y==0,0,x/y);
deletelist_2[int(i)];
help(window.set_position);
[5]*4;
simulations_to_run.join();
s.connect(tuple([TCP_IP,TCP_PORT]));
print(df.head());
var df=pd.DataFrame();
iren.Start();
s.starttls();
self.driver=webdriver.Firefox();
d1.py_update(d2);
ranges.append(tuple([1,10]));
4*scipy.integrate.nquad(f,tuple([[0,d/2],[0,d/2]]))[0];
myDictionary.py_get(key);
[1,2,5,6,7,10];
json.JSONEncoder.py_default(self,obj);
var p=pyaudio.PyAudio();
ax.set_xlim([-2,2]);
t.start();
var app=QtGui.QApplication(sys.argv);
export var cheese=args.three;
np.argsort(x);
os.setsid();
query_set.filter(__kwargtrans__({deleted_at__isnull:true}));
getattr(c,m)();
seen.add(x);
var f=x.decl();
numpy.random.bytes(length);
label.pack();
a*=a>0;
var tree=lxml.etree.fromstring(doc);
loop.run_forever();
print(len(lines));

export var kmdistance=float(kmdistance);
export var bitmap=gtk.gdk.Pixmap(win.window,size[0],size[1],1);
pyplot.plot(x,y);
var dir=os.path.dirname(os.path.dirname(file));
self.transport.loseConnection();
connection.close();
mail.sendmail(EMAIL_FROM,EMAIL_TO,msg.as_string());
ax.plot(x,y);
DF.cumsum();
thirdpartymodule_b.dosomething();
list(le.inverse_transform([2,2,1]));
self.root.mainloop();
roc_curve(y_true,y_score);
print(ascii_num.__getslice__(0,null,-1));
tuple([MDD_start,MDD_end,MDD_duration,drawdown,UW_dt,UW_duration]);
print(function(){var __accu0__=[];for(var s of[psum(raw)])for(var r of raw)__accu0__.append(r/s);return __accu0__}());
layout.addWidget(self.toolbar);
var p=subprocess.Popen(args,__kwargtrans__({stdout:subprocess.PIPE,stderr:subprocess.PIPE}));
zip(cv.get_feature_names(),np.asarray(X.sum(__kwargtrans__({axis:0}))).ravel());
(function(){var __accu0__=[];for(var x of alphabet)__accu0__.append([x,0]);return dict(__accu0__)})();
var id=db.Column(db.Integer,__kwargtrans__({primary_key:true}));
var data=np.random.normal(__kwargtrans__({size:1E3}));
var df=pd.read_csv(io.StringIO(data));
export var n_grams=CountVectorizer(__kwargtrans__({min_n:1,max_n:5}));
dfcopy.a.ix[0]=2;
subprocess.call(args);
round(2.605,2);
round(2.067,2);
file.seek(lastKnownSizeOfFile);
Base2.bar();
res.read();
export var member=getattr(module,membername);
print(list(filter(len,a)));
s.setsockopt(socket.SOL_SOCKET,socket.SO_REUSEADDR,1);
plt.bar(x2,y);
print(function(){var __accu0__=[];for(var k=0;k<2*N+1;k++)__accu0__.append(Math.pow(2,__mod__(N-abs(N-k),N)));return __accu0__}());
export var srf=pygame.display.set_mode(tuple([640,480]));
export var decompressed_data=zlib.decompress(f.read(),16+zlib.MAX_WBITS);
ax2.plot(list(range(10,20)));
print(PATTERN.py_split(data).__getslice__(1,null,2));
X.__getitem__([tuple([0,null,-1]),tuple([0,null,-1]),tuple([0,null,-1])]);
fout.write(regex.sub(replfunc,line));
print(tuple(l));
df1.join(df2);
export var object_id=models.PositiveIntegerField();
var X=X.reindex(np.roll(X.index,1));
var x=b?a:0;
var img=plt.imread(filename);
ax.legend();
sorted(y,__kwargtrans__({key:x.__getitem__}));
var fig=plt.figure();
var root=Tk();
c.setopt(c.URL,url);
var df=df.loc.__getitem__([df[col].isin(counts[counts>threshold].index),tuple([0,null,1])]);
var s=f.read();
var y=np.arange(Y);
print(i,j,k);
table.py_sort(__kwargtrans__({reverse:true,key:Team.getPoints}));
result.append(list(g));
unittest.main();
logger.removeFilter(dup_filter);
print(get_image_info(data));
plt.ylim(0,4E4);
export var thread=threading.Thread(__kwargtrans__({target:server.serve_forever}));
print(soup.prettify());
print(resp.url);
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
var conn=boto.connect_dynamodb();
s[0];
QApplication.__init__(self,...args);
export var module=imp.new_module(py_name);
print(key,value);
var df=pd.DataFrame(a.T);
ax.set_yticks([]);
var ax=fig.add_subplot(121);
export var rand_stocks=np.random.randint(0,len(data),__kwargtrans__({size:batch_size}));
self.assertEqual(404,response.status_code);
plt.draw();
self.myParent.grid_columnconfigure(0,__kwargtrans__({weight:1}));
var tuples=list(d.py_values());
m.mymethod();
export var Cal2=sum(function(){var __accu0__=[];for(var n of domain)if(__mod__(n,2)==0)__accu0__.append(n);return py_iter(__accu0__)}());
export var harmonic_number=function __lambda__(n){return sum(function(){var __accu0__=[];for(var d=1;d<n+1;d++)__accu0__.append(Fraction(1,d));return py_iter(__accu0__)}())};
stdscr.refresh();
[1,2].__getslice__(0,null,-1);
zip_longest(...args,__kwargtrans__({fillvalue:fillvalue}));
list(OrderedDict.fromkeys(py_items));
export var list_words=function(){var __accu0__=[];for(var x of l)for(var a of x.py_split())__accu0__.append(fs.format(a));return __accu0__}();
random.seed(42);
var list_of_pairs=function(){var __accu0__=[];for(var p1 of people)for(var p2 of people)if(p1!=p2)__accu0__.append(tuple([p1,p2]));return __accu0__}();
time.sleep(5);
var li=function(){var __accu0__=[];for(var c of list)__accu0__.append(id_s[c]);return __accu0__}();
plt.bar(df.index.to_pydatetime(),df.Val,__kwargtrans__({width:.4}));
pad.refresh(top,0,0,0,curses.LINES-1,curses.COLS-1);
var app=Flask(__name__);
dict.__setitem__(self,key,value);
os.makedirs(directory_name);
var new_a=a[(a<=100).all(1)];
ax.set_ylim(0,5);
(function(){var __accu0__=[];for(var v of obj.attrs.all())__accu0__.append(str(v));return __accu0__})();
var c=copy.deepcopy(a);
namestr(a,__all__);
df[df.a<np.percentile(df.a,95)];
func(b);
np.linalg.norm(coef,__kwargtrans__({axis:0}));
open_file.close();
pprint.pprint(arr);
z.py_update(dict([[key,value]]));
all_pairs+=function(){var __accu0__=[];for(var [nB,nC]of itertools.product(listB,listC))__accu0__.append(tuple([tuple([nB,1]),tuple([nC,2])]));return __accu0__}();
(function(){var __accu0__=[];for(var index of indices[field][key])__accu0__.append(data[index]);return py_iter(__accu0__)})();
result._fields;
var df=pandas.DataFrame(data);
print(np.corrcoef(x_tag.__getslice__(0,len(x_tag)-1,1),x_tag.__getslice__(1,null,1))[0][1]);
df.apply(make_plot);
Math.floor((i.bit_length()+7)/8);
var ordered=list(function(){var __accu0__=[];for(var val of ordering_list)__accu0__.append(list_dict[val]);return py_iter(__accu0__)}());
print(df5.groupby(__kwargtrans__({level:0})).apply(process));
self.show();
np.argwhere(np.in1d(a,np.intersect1d(a,b))==false);
export var scopes=set();
get_max(my_list);
plt.gcf().gca().add_artist(circle1);
cursor.execute(query,[id]);
var newlist=old_list.copy();
imshow(A);
ax1.set_xlim(0,1E3);
matrix[~mask]=0;
ax.w_zaxis.set_major_locator(LinearLocator(10));
self.SetSizer(self.sizer);
zfile.close();
(function(){var __accu0__=[];for(var [x,y]of zip(lis,new_lis1))__accu0__.append(id(x)==id(y));return __accu0__})();
plt.ylim(ymin,ymax);
s+=etree.tostring(sub_element);
writer.writerows(function(){var __accu0__=[];for(var row of reader)__accu0__.append(row.__getslice__(0,1,1)+[0]+row.__getslice__(1,null,1));return py_iter(__accu0__)}());
ax.grid();
plt.show();
print(soup.p);
new_list.append(l1[index]+l2[index]);
cursor.execute(sql);
dilation.process(tree.clone(),tree);
f(1);
aList.py_sort(__kwargtrans__({key:function __lambda__(x){return function(){var __accu0__=[];for(var idx of args)__accu0__.append(x[idx]);return py_iter(__accu0__)}()}}));
Counter(string);
numpy.vectorize(complex)(Data.__getitem__([,0]),Data.__getitem__([,1]));
var port=int(port);
py_typeof(data);
plt.draw();
var root=ET.fromstring(xmlstr);
export var cfs=floating_bond.cashflows();
random.sample(list(enumerate(l)),5);
print(df);
stupidtrick();
var parser=argparse.ArgumentParser();
1/(1+math.exp(-x));
db.create_tables([ModelA,ModelB,ModelC]);
imshow(cm.hsv(Z1),__kwargtrans__({alpha:.6,extent:extent}));
var model=Sequential();
export var c_dict=function(){var __accu0__=[];for(var [k,v]of groups.groups.py_items())__accu0__.append([k,pd.DataFrame(v)]);return dict(__accu0__)}();
myDB.connect();
writer.writerow(row);
all([0,1]);
(function(){var __accu0__=[];for(var i=0;i<math.ceil(len(s)/5);i++)__accu0__.append(s.__getslice__(5*i,5*i+5,1));return __accu0__})();
var x=function(){var __accu0__=[];for(var n of x)__accu0__.append(n.strip());return __accu0__}();
a.A();
axins1.set_xlim(x1,x2);
socket.setdefaulttimeout();
audio/=np.max(np.abs(audio),__kwargtrans__({axis:0}));
map(str,lst);
plt.subplots_adjust(__kwargtrans__({bottom:.15}));
var result=sum(range(1,401,4));
text_entry.pack();
A.__setslice__(0,null,null,somedata.__getslice__(0,null,1));
export var created_by=models.ForeignKey(profile);
results.append(tuple([a[first][0],a[second][0],a[third][0]]));
self.builds=builds;
print(lines.__getslice__(0,100,1));
cost_obj.save();
UserModel.save(__kwargtrans__({using:db,force_insert:true}));
var ip=socket.gethostbyname(socket.gethostname());
self._result.addFailure(self,sys.exc_info());
matplotlib_fig.show();
g.__code__.co_name;
export var color_img=cv2.cvtColor(gray_img,cv.CV_GRAY2RGB);
nlargest(n,your2DList,__kwargtrans__({key:function __lambda__(x){return x[-1]}}));
var df=pd.concat([df]*1E5).reset_index(__kwargtrans__({drop:true}));
plt.show();
ax.plot(list(range(10)));
sys.stdout.flush();
root2.minsize(root2.winfo_reqwidth(),root2.winfo_reqheight());
webbrowser.open_new(url);
a[-1].shape;
e.pack();
plt.plot(np.cos(np.linspace(0,10,100)));
d.bar();
export var normedA=array(function(){var __accu0__=[];for(var v of A)__accu0__.append(norm(v));return py_iter(__accu0__)}());
var __left0__=plt.gca().get_legend_handles_labels();var handles=__left0__[0];var labels=__left0__[1];
a.add(x);
foofoo.py;
os.kill(int(sys.argv[1]),0);
strat1.execute();
nil;
dictionary[len(i)]+=1;
var response=urllib.request.urlopen(url);
sorted(l,__kwargtrans__({key:alphanum_key}));
datetime.datetime.now();
help(raw_input);
matmult(x,y);
g.index=g.index.swaplevel(1,2);
var creatures=dict();
meds.py_sort(__kwargtrans__({ascending:false}));
canvas.pack(__kwargtrans__({side:LEFT,fill:BOTH,expand:TRUE}));
print(self.parent.__name__);
time.sleep(.1);
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
py_next(combs2);
app.run(__kwargtrans__({debug:true}));
print(py_typeof(data));
__init__.py;
var __left0__=numpy.where(M==0);var row=__left0__[0];var col=__left0__[1];
self.setupUi(self);
plt.plot(x,4*x);
pnt.ewkt;
__init__.py;
ax.set_xlim(0,10);
arg.__getslice__(0,null,-1);
plt.scatter(a[0],a[1],__kwargtrans__({s:50,c:colormap[categories]}));
var ax=plt.gca();
var size=models.IntegerField(__kwargtrans__({blank:true,null:true}));
var dct=dict(zip(ascii_uppercase,lens));
self.model=QtGui.QStandardItemModel();
sublist.py_sort();
export var saved=locale.setlocale(locale.LC_ALL);
len(function(){var __accu0__=[];for(var letter of word)if(!__in__(letter,BAD_LETTERS))__accu0__.append(letter);return __accu0__}());
plt.figure(2);
shutil.copyfileobj(r,f);
len(response.content);
plt.show();
a.append(a.py_pop(0));
print(f.info());
os.unlink(targetLink);
b_result.append(b);
pd.read_csv(s,__kwargtrans__({parse_dates:[0],dayfirst:true}));
tuple(l);
objs.append(pickle.load(f));
df;
response;
pl.hist(data,__kwargtrans__({bins:np.logspace(.1,1,50)}));
var x=copy.deepcopy(y);
print(sys.executable);
self.process.communicate();
print(utc_dt.astimezone(get_localzone()));
len(set(list_))==len(list_);
httpd.serve_forever();
print(self.__class__.__dict__);
final_ensemble.estimators_+=ensemble.estimators_;
export var ns=np.arange(-5,5+1);
var s=requests.Session();
print(__mod__(abs(x),1E3));
logger.removeHandler(logger.handlers[0]);
self.foo.start();
tuple([[1695.86408654,2140,6969]]);
var msg=MIMEMultipart();
var s=socket.socket(socket.AF_INET,socket.SOCK_DGRAM);
print(key);
f.seek(999999);
var l=list(filter(str.strip,l));
var form=ContactForm(request.POST);
root.mainloop();
var result=function(){var __accu0__=[];for(var p of pages)__accu0__.append(myFunc(p,additionalArgument));return __accu0__}();
b();
end_date[-1]=end_date[-1].__getslice__(0,4,1);
Counter(map(tuple,a.T));
pylab.show();
kpt_data.reshape(h_r.shape.__getslice__(0,2,1)+tuple([-1]));
x.upper();
gobject.threads_init();
var tt=matplotlib.delaunay.triangulate.Triangulation(x,y);
time.sleep(.01);
time.sleep(.1);
R1.__init__(self);
print(types[bisect.bisect(points,Point(.1,.1))-1]);
time.sleep(seconds/1E6);
root.mainloop();
wtr.writerows(in_iter);
var sock=socket.socket(socket.AF_INET,socket.SOCK_STREAM);
s[1];
list(chain.from_iterable(zip(data,tweets)));
export var ords=function(){var __accu0__=[];for(var c of s)__accu0__.append(ord(c));return py_iter(__accu0__)}();
var lines=function(){var __accu0__=[];for(var line of f)__accu0__.append(line.rstrip());return py_iter(__accu0__)}();
s.set_debuglevel(1);
var __left0__=proc.communicate();var stdoutdata=__left0__[0];var stderrdata=__left0__[1];
open_workbook(excel_file_full_path,__kwargtrans__({formatting_info:true}));
df.university.apply(extract_city);
sys.exit(app.exec_());
self._exit();
arr2d.sum(1);
HypotheticalBranch(0,1,1);
shutil.copyfileobj(zf,f);
Parent.__init__(self,...args,__kwargtrans__(kwargs));
df.reset_index();
var ax=plt.gca();
file.seek(-1024*1024,os.SEEK_END);
var a=numpy.empty(n,__kwargtrans__({dtype:object}));
np.array(sorted(set(a)|set(b)));
self.button.clicked.connect(self.plot);
var writer=csv.writer(f);
plt.axis([-1,6,0,6]);
ftp.close();
pygame.draw.circle(screen,COLOR,POS,RADIUS,WIDTH);
pprint.pprint(w.config());
float(num)/float(denom);
result;
export var alist2=function(){var __accu0__=[];for(var item of alist)__accu0__.append(item.__getslice__(0,null,1));return __accu0__}();
var path=urllib.request.url2pathname(path);
md5.digest();
logger.setLevel(logging.ERROR);
cmyk.append(cmyk_im[i].load());
loop.close();
print(C.x.__doc__);
newImage.paste(srcImage,tuple([x1,y1,x1+oldWidth,y1+oldHeight]));
f.close();
(function(){var __accu0__=[];for(var tpl of stackframe.__getslice__(1,null,1))__accu0__.append(hash(tpl[0]));return __accu0__})();
timediff.total_seconds();
loop.run_forever();
itertools.zip_longest(...args,__kwargtrans__({fillvalue:fillvalue}));
ax.plot(VecStart_x+VecEnd_x,VecStart_y+VecEnd_y,VecStart_z+VecEnd_z);
(function(){var __accu0__=[];for(var [k,v]of list(d.py_items()))__accu0__.append([k,v]);return dict(__accu0__)})();
foo();
xml.write(m.group(1));
var joint=function(){var __accu0__=[];for(var row of zip(outgoing,incoming))__accu0__.append(function(){var __accu1__=[];for(var [x,y]of zip(...row))__accu1__.append(x+y);return __accu1__}());return __accu0__}();
l.pack();
frozenset().union(...l);
np.array(test);
list(a.py_keys());
self.val=0;
list(accumulative_product(A,B,C));
server_socket.bind(tuple([HOST,PORT]));
gevent.joinall(greenlets);
export var tree_dict=dict([[key,tree_dict]]);
export var hex_int=int(hex_str,16);
print(myzip.namelist());
var pool=multiprocessing.Pool(__kwargtrans__({processes:cpus}));
df.drop(df.columns.__getslice__(1,null,1),__kwargtrans__({axis:1}));
urllib.request.HTTPSHandler.__init__(self);
plt.hold(true);
plt.boxplot(x);
layout.addWidget(self.button);
export var regex=re.compile(__mod__(ptn,re.escape(punc)));
a.reshape(tuple([-1,5]));
lines.append([tuple([lastX,lastY]),tuple([lastX+1,lastY])]);
Planet.MERCURY;
print(soup);
var __left0__=proc.communicate();var out=__left0__[0];var err=__left0__[1];
engine.block();
p.start();
root.mainloop();
var out=abs(z.__getitem__([,np.newaxis])-z);
_nextkey+=1;
export var myset=set(filter(test,myset));
hash(foo);
cv2.drawContours(drawing,[cnt],0,tuple([255,255,255]),2);
self.platforms.append(p);
app.MainLoop();
list(gen());
var df=pd.read_excel(path+filename);
pd.infer_freq(ts.index);
c.execute(sql,tup);
f.close();
temp_list.append(item);
export var panel=tk.Label(root,__kwargtrans__({image:img}));
new set([dict([[floatvalue|floatformat,2|intcomma]])]);
var data=data.reshape(shape);
export var float_color=color/255;
[0,2,4,10,12,14,20,22,24];
gamma+log(n)+.5/n-1/(12*Math.pow(n,2))+1/(120*Math.pow(n,4));
print(m.start(),m.group());
pygame.display.py_update();
imp.find_module(imported);
list(filter(pattern.match,strings));
sorted(lst,__kwargtrans__({reverse:true}));
print(arr.reshape(2,2,2,2).swapaxes(1,2).reshape(2,2,4).max(__kwargtrans__({axis:-1})));
var my_list=list(my_iterable);
form.field(__kwargtrans__({disabled:true}));
data.append(group_data);
spsd.euclidean(nparray1,nparray2);
self.ax.add_patch(self.rect);
list(enumerate([4,5,6,7]));
setattr(cls,membername,lockedmethod);
pd.concat([Out[24],Out[25]],__kwargtrans__({axis:1}));
chain.from_iterable(listOfLists);
range_prod(1,n);
print(driver.page_source);
System.out.println(id.getClass().getName());
random.choice([4,5,6]);
var im=Image.open(StringIO.StringIO(f.read()));
a[y.__getslice__(0,-1,1)]-=x.__getslice__(0,-1,1);
foosparse.__setitem__([key1,key2],value);
browser.driver.set_page_load_timeout(10);
var soup=BeautifulSoup(urllib.request.urlopen(url).read());
fitness_landscape.shape;
func(...args,__kwargtrans__(kw));
(function(){var __accu0__=[];for(var [_,g]of groupby(sorted(flat,__kwargtrans__({key:len})),__kwargtrans__({key:len})))__accu0__.append(list(g));return __accu0__})();
sys.exit(app.exec_());
var __left0__=function(){var __accu0__=[];for(var [k,g]of it.groupby(mylist,keyfunc))__accu0__.append(list(g));return __accu0__}();var a=__left0__[0];var b=__left0__[1];var c=__left0__[2];
axes.hist(x,...args,__kwargtrans__(__mergekwargtrans__({bins:binedges,weights:weights},kwargs)));
var args=parser.parse_args();
canvas.setStrokeColorRGB(0,0,0);
self.opt.stdin.write(string);
py_typeof(a);
var data=np.zeros(tuple([200,200]),__kwargtrans__({dtype:np.float}));
cursor.fetchall();
list[list.index(target)-1];
pl.ylim(0,ymax);
print(sorted(a,__kwargtrans__({key:to_minutes})));
array.py_sort(__kwargtrans__({key:function __lambda__(item){return item===0}}));
var iv=Random.py_new().read(16);
(function(){var __accu0__=[];for(var s of sites)__accu0__.append(remove_bad_substrings(s));return __accu0__})();
net.addModule(hidden1);
zelib.multiplier.argtypes=[ctypes.c_float,ctypes.c_float];
ax.xaxis.set_major_locator(ticker.MultipleLocator(1));
word.__getslice__(-1,-len(word)-1,-1);
var path=os.path.join(os.path.dirname("./P2JSnippets.py"),template_file);
traceback.print_stack(__kwargtrans__({file:sys.stdout}));
etree.tostring(fragment);
sleep(10);
list(result[0][1].py_keys());
var response=urllib.request.urlopen(req);
(function(){var __accu0__=[];for(var item of lst)__accu0__.append(convert_value(item));return __accu0__})();
df.py_update(df2);
var r=np.linspace(1,5,n);
var __left0__=plt.hist([x,y]);var n=__left0__[0];var bins=__left0__[1];var patches=__left0__[2];
same_structure(a.__getslice__(1,null,1),b.__getslice__(1,null,1));
plot(c(0,1),c(0,1));
fig.tight_layout();
np.resize(a,10).reshape(5,2);
plt.clf();
len(df);
print(drives);
np.allclose(OP(cords,atoms,atom_proj),project_atom(cords,atoms,atom_proj));
screen.keypad(0);
list(test)[0];
print(ast.literal_eval(input()));
export var fp=webdriver.FirefoxProfile();
array([true,true,false],__kwargtrans__({dtype:bool}));
app.exec_();
var xs=np.array([[0,1,0],[0,0,1],[0,1,1]])*1;
df.set_index(__kwargtrans__({py_keys:[df.index.year,df.index.month]})).transpose();
set(MyList).intersection(MyDict);
export var parent_parser=argparse.ArgumentParser(__kwargtrans__({add_help:false}));
functools.reduce(op.mul,function(){var __accu0__=[];for(var x of zip(...list_))__accu0__.append(sum(x));return py_iter(__accu0__)}());
ax.set_ylim(ybnds);
var PROJECT_ROOT=os.path.realpath(os.path.dirname("./P2JSnippets.py"));
plot(x,y1);
pdb.set_trace();
var arr=numpy.array(data);
self.apple_button.Bind(wx.EVT_BUTTON,self.apple_button_click);
fig.autofmt_xdate();
slice_list(x,7);
br.select_form(__kwargtrans__({nr:0}));
draw.ellipse(tuple([0,0])+size,__kwargtrans__({fill:0}));
timedelta(__kwargtrans__({hours:2}));
d[x].append(y);
plt.gca().add_artist(leg1);
plt.gca().add_artist(leg5);
window.show();
np.set_printoptions(__kwargtrans__({suppress:true}));
repr(s);
[0,0]/sum([0,0]);
arr.sum(__kwargtrans__({axis:0})).shape;
var content=file.read();
(function(){var __accu0__=[];for(var [k,g]of groupby(l,bool))if(k)__accu0__.append(list(g));return __accu0__})();
var data=json.dumps(data,__kwargtrans__({cls:DjangoJSONEncoder}));
var frame=pd.read_csv(path,__kwargtrans__({names:columns}));
xlim(0,1);
draw();
export var group=Group.objects.py_get(__kwargtrans__({pk:1}));
plt.show();
var p=subprocess.Popen(command,__kwargtrans__({stdout:subprocess.PIPE,stderr:subprocess.IGNORE}));
server.close();
array([0,2,4],__kwargtrans__({dtype:int64}));
Py_Initialize();
email.send();
var d=dict({});
print(df1.groupby(df1.columns,__kwargtrans__({axis:1})).sum());
self.close();
var df=pd.DataFrame(m.toarray());
parent.kill();
sys.stderr.close();
var B=np.array(A);
Qapp.exec_();
var ax=fig.add_subplot(111);
_draw_point(renderer,position,i,j);
export var cluster_count=len(set(map(representative,representatives)));
export var all=all.__getslice__(0,max(current-2,0),1)+all.__getslice__(current,null,1);
print(lol.__getitem__([tuple([1,4,1]),tuple([2,5,1])]));
self.listofrecords[listnum][record]=value;
true;
sqllogger.addHandler(sqlhandler);
session.quit();
var indices=np.searchsorted(u,arr.flat);
false;
self.a+self.b;
var hxs=HtmlXPathSelector(response);
plot(x,cos(x));
pprint(ddiff);
time.sleep(.1);
example_df.iloc.__getitem__([1,tuple([0,null,1])]).corr(example_df.iloc.__getitem__([2,tuple([0,null,1])]));
print(zlib.decompress(b));
(function(){var __accu0__=[];for(var xs of a)for(var x of xs)__accu0__.append(x);return __accu0__})();
export var merged=map(list,zip(listone,listtwo));
connection.close();
self.__class__.bar(self);
server.sendmail(FROM,TO,message);
ax.scatter(x,y,z);
time.sleep(1);
var results=function(){var __accu0__=[];for(var file of files)__accu0__.append(do_smth(file.read()));return __accu0__}();
ar.py_sort();
export var inputs=list(map(int,input().py_split()));
var data=np.random.normal(0,20,1E3);
threading.Thread.__init__(self);
var x=np.array(x,__kwargtrans__({copy:false,ndmin:1}));
export var handler404=Custom404.as_view();
var s=pd.Series(np.random.randn(n).cumsum());
plt.plot(X[i]);
var out=function(){var __accu0__=[];for(var p of zip(X,Y))__accu0__.append(float(f_interp(...p)));return __accu0__}();
var fig=plt.figure();
self.delete(0,Tkinter.END);
a[0]=[1,2];
print(isinstance(MyClass,MyClass()));
plt.scatter(X,Y);
pool.join();
main();
var l=[];
print(dtd.validate(root));
true;
ax.set_xticklabels(labels,__kwargtrans__({minor:false}));
(function(){var __accu0__=[];for(var i=0;i<len(given)-len(sublist);i++)__accu0__.append(given.__getslice__(i,i+len(sublist),1));return __accu0__})();
var out=data[np.in1d(data.__getitem__([tuple([0,null,1]),1]),goodIDs)];
df.mean();
admin.site.register(Foo,FooAdmin1);
(function(){var __accu0__=[];for(var i of range(0,len(seq),k))__accu0__.append(seq.__getslice__(i,i+k,1));return __accu0__})();
plt.ylim(-.1,1.1);
np.vstack(np.unravel_index(indices,arr.shape)).T;
unwrap_method(get_func)===unwrap_method(Client.py_get);
Permission.objects.all();
setattr(something,k,v);
pygame.display.flip();
ts.ix[ts.index.indexer_between_time(datetime.time(10),datetime.time(14))];
main();
list(set(x[0]).union(...x.__getslice__(1,null,1)));
List.append(Item);
var fig=plt.figure();
kde.integrate_box_1d(1,2);
var password=getpass.getpass();
sys.stdout.write(out);
bstr[0];
A.__getitem__([1,1,tuple([0,null,1])]);
print(function(){var __accu0__=[];for(var x of l)__accu0__.append(str(x));return __accu0__}());
set.intersection(...lis);
(function(){var __accu0__=[];for(var py_name of A)__accu0__.append([0,1][__in__(py_name.py_split()[-1],set(B))]);return __accu0__})();
self.sock=socket.socket(socket.AF_INET,socket.SOCK_STREAM);
browser.back();
__in__(true,set(map(function __lambda__(x){return x[0]==1},a_list)));
output.addPage(page);
var regex=re.compile(pattern,re.MULTILINE|re.DOTALL);
export var sck=socks.socksocket();
print(solution(list(range(1,2E3))));
var s=requests.session();
export var __path__=pkgutil.extend_path(__path__,__name__);
export var hsv_to_rgb=np.vectorize(colorsys.hsv_to_rgb);
self.setCursor(QtCore.Qt.SplitHCursor);
self.log.addHandler(self.handler);
chardet.detect(elems[0].getText());
var path=os.path.dirname(os.path.abspath(filename));
sys.getwindowsversion()[0]>=6;
app.exec_();
print(LH.tostring(doc,__kwargtrans__({pretty_print:true})));
var start_time=time.time();
self.forms.__getslice__(self.initial_form_count(),null,1);
var fig=plt.figure();
var p=Pool(1);
__in__(py_keys[-1],lastplace);
var result=cv2.matchTemplate(image,template,cv2.TM_CCOEFF_NORMED);
ax.set_ylim(__kwargtrans__({bottom:0}));
var df=xl.parse(0,__kwargtrans__({converters:function(){var __accu0__=[];for(var i=0;i<ncols;i++)__accu0__.append([i,str]);return dict(__accu0__)}()}));
var dict_lol=function(){var __accu0__=[];for(var item of lol)__accu0__.append([item[1],item]);return dict(__accu0__)}();
re.findall(regex,statements,re.I);
sys.stdout.write(line);
csvfile.seek(0);
player_list.append(player);
admin.autodiscover();
main();
ax.set_rmax(1.25);
cur.execute(sat);
b.shape;
foo;
a+b*c;
arr.resize(tuple([k,M]));
print(b[0]);
var y=2*np.sin(x);
f.close();
print(match.group(1));
object.__setattr__(self,py_name,value);
func();
counts[item]+=1;
pipeline.fit(X,Y);
im.resize(size,Image.BILINEAR);
env.use_ssh_config=true;
polB.set_transform(tB);
clipboard.store();
np.all(function(){var __accu0__=[];for(var i=0;i<10;i++)__accu0__.append(i);return __accu0__}());
sess.run(init_op);
mylist.append(first_el);
var idx=list(range(len(S)));
obj.__class__._default_manager.py_get(__kwargtrans__({pk:obj.pk}));
dict(__kwargtrans__({page:context}));
d[i].append(int(j));
(function(){var __accu0__=[];for(var i of b)__accu0__.append(list(islice(it,i)));return __accu0__})();
db.connections.close_all();
plot(list_of_dates,counts);
fs.noteoff(0,60);
var z=function(){var __accu0__=[];for(var [i,j]of zip(x,y))__accu0__.append(int(i==j));return __accu0__}();
print(function(){var __accu0__=[];for(var words of sixgrams)__accu0__.append(joiner(words));return __accu0__}());
ctx.set_source_rgb(1,0,0);
print(message.get_body_encoded());
var zipped=zip(...l);
A.__getitem__([tuple([0,null,1]),[1,2]]);
plt.scatter(x,y);
str(dict({}));
doSomething();
var y=x.reshape(x.shape[0]/2,2,x.shape[1]/2,2);
array_to_filter[np.in1d(array_to_filter,equal_array)];
var s=list(filter(str.isalnum,s));
tar.close();
self._socket.recv(buffersize,flags);
send_mail(subject,message,settings.DEFAULT_FROM_EMAIL,[self.user.email]);
lst.insert(randrange(len(lst)+1),item);
bin(10);
os.dup2(se.fileno(),sys.stderr.fileno());
self.fc2.draw();
(function(){var __accu0__=[];for(var x of newlist)__accu0__.append(getrange(x));return __accu0__})();
self.navigate(1);
var j=index-d*(d-1)/2+(d-i)*(d-i-1)/2+i+1;
var username=db.Column(db.String(80),__kwargtrans__({unique:true}));
np.allclose(old,py_new);
root.py_update();
print(p.pattern);
NULL;
list(set(x[-1]).union(...x.__getslice__(1,null,1)));
var b=np.dot(a,c);
time.sleep(1);
var app=Flask(__name__);
client.set_options(__kwargtrans__({soapheaders:ssn}));
QtGui.QLabel.__init__(self);
setattr(modadd,camel_name,f);
var df2=df2.reset_index();
driver.switch_to_default_content();
func(obj,...args,__kwargtrans__(kw));
var image=cv2.cvtColor(image,cv2.COLOR_RGB2GRAY);
Bar.py;
Html_file.write(html_str);
python-i;
main(sys.argv[1]);
array([10,4,1],__kwargtrans__({dtype:int64}));
ET.fromstring(t);
len(new_strs.py_split());
log.setLevel(logging.INFO);
foundwords.extend(words.__getslice__(1,null,1));
QtGui.QMainWindow.__init__(self);
var results=sorted(results,__kwargtrans__({key:getaccountingdate,reverse:true}));
deletealist[i];
t.start();
wf.close();
logger.info(parsed_item_info);
tag.save();
cursor.execute(sql);
self.image.set_from_pixbuf(loader.get_pixbuf());
url;
foo();
webapp2.RequestHandler.dispatch(self);
var br=mechanize.Browser();
self.wfile.flush();
var ax=plt.subplot(111);
time.sleep(.5);
tuple([CE,BF,BC,BD,BE]);
do_stuff();
perf_func(root.getroot(),print_level);
f?x:random.choice(good);
var today=datetime.datetime.today();
curs.fetchone();
fd.close();
export var nearby_strikes=other_strikes.loc.__getslice__(ind[0],ind[1]-1,1).copy();
var __left0__=ssh.exec_command(cmd_to_execute);export var ssh_stdin=__left0__[0];export var ssh_stdout=__left0__[1];export var ssh_stderr=__left0__[2];
self.results.append(result);
List.append(Item);
sys.getsizeof(tuple([1,2]));
a.__setslice__(0,1,null,[1]);
ax1.semilogx(data.__getitem__([tuple([0,null,1]),1]),data.__getitem__([tuple([0,null,1]),2]));
var results=pool.map(solve1,args);
var fig=plt.figure(__kwargtrans__({figsize:tuple([10,8])}));
os.close(fd);
(function(){var __accu0__=[];for(var func of map(__all__.py_get,fxnOfInterest))__accu0__.append(func(mylist));return __accu0__})();
os.path.join(path,filename);
print(p.communicate()[0]);
var __left0__=tuple([b,a+b]);var a=__left0__[0];var b=__left0__[1];
py_typeof(d);
print(finfo.dtype,finfo.nexp,finfo.nmant);
export var list_of_hets=[];
threading.Thread(__kwargtrans__({target:thread_job})).start();
window.show();
xl.Workbooks.Close();
var pool=multiprocessing.Pool();
deleteL.__getslice__(-n,null,1);
np.testing.assert_allclose([np.nan],[np.nan]);
var app=QtGui.QApplication(sys.argv);
w.show();
f.close();
root.rowconfigure(1,__kwargtrans__({weight:1}));
var q=A.select(A,B).join(B).where(B.date==last_entry_date);
r.close();
tornado.ioloop.IOLoop.instance().start();
var index=d*(d-1)/2-(d-i)*(d-i-1)/2+j-i-1;
dict.__setitem__(self,key,val);
g.Category.apply(pd.value_counts).unstack(-1).fillna(0);
a[i];
df;
value.__format__(format_spec);
random.shuffle(s);
a.upper()==b.upper();
pool.join();
MySuperClass.__init__(self);
conn.perform();
var d=datetime.datetime.now();
g.add_edge(1,2);
db.session.remove();
df.to_records().dtype;
var a=function(){var __accu0__=[];for(var [k,g]of groupby(r,__kwargtrans__({key:function __lambda__(row){return row[0]}})))__accu0__.append([k]+function(){var __accu1__=[];for(var x of g)__accu1__.append(x[1]);return __accu1__}());return __accu0__}();
dumps(a.__dict__,__kwargtrans__({py_default:encode_b}));
logging.getLogger().setLevel(logging.DEBUG);
do_stuff(A[i],A[j]);
var C=np.empty(tuple([A.shape[0]+B.shape[0],A.shape[1]]));
var root=Tk();
var script=os.path.abspath(sys.argv[0]);
print(sys.executable);
self.setCentralWidget(page);
(function(){var __accu0__=[];for(var pair of zip(repeat(pts[0]),pts.__getslice__(1,null,1)))__accu0__.append(distance(...pair));return __accu0__})();
your_module.get_logger().log_to_file(filename);
print(set(n1).difference(set(n2)));
bin(7).__getslice__(2,null,1);
res.fillna(0).squeeze().dt.days;
ax.set_ylim(ylim);
var ax1=fig.add_subplot(121);
conn.commit();
ex2.show();
QtCore.QSize(150,75);
print(tuple(pad_strings(x)));
14.078685;
ax.scatter(x,y,__kwargtrans__({c:colors,s:50,cmap:mpl.cm.Reds}));
plt.figure();
var process=subprocess.Popen(command,__kwargtrans__({shell:true,stdout:subprocess.PIPE}));
outfile.close();
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
print(tuple([i,l]));
print(pool.map(f,list(range(10))));
var B=A[[col1,col2]].iloc[idx];
plt.legend(__kwargtrans__({handles:[select],scatterpoints:1}));
browser.submit();
df;
f(...args,__kwargtrans__(kwds));
export var older_books=function(){var __accu0__=[];for(var b of BSI)if(b.year<2E3)__accu0__.append(b.title);return __accu0__}();
stack.append(stack[-1][-1]);
zf.write(os.path.join(dirname,filename));
self._children=[];
contents.py_sort(__kwargtrans__({key:itemgetter(1)}));
var df=df.reset_index();
plt.style.use(style_name);
DISPATCH();
canvas.rect(i,0,2,100);
df.apply(function __lambda__(x){return x.astype(object).py_replace(1,x.py_name)});
np.py_split(df1.index[c],np.flatnonzero(r.__getslice__(1,null,1)>r.__getslice__(0,-1,1))+1);
traceback.print_stack();
help(myFunc.__code__);
self.panel.Bind(wx.EVT_KEY_DOWN,self.OnKeyDown);
var grid=np.random.random(tuple([10,10]));
new_dic[1][2]=5;
x.astype(int);
print(sum(function(){var __accu0__=[];for(var x of re.findall(p,test_str))__accu0__.append(float(x));return __accu0__}()));
x*2;
sorted(files);
tar.add(source_dir,__kwargtrans__({arcname:os.path.basename(source_dir)}));
biglist2.py_sort(__kwargtrans__({key:tuple([operator.itemgetter(2),operator.itemgetter(0)])}));
dict(function(){var __accu0__=[];for(var [k,v]of list(mydict.py_items()))if(k>=6)__accu0__.append(tuple([k,v]));return py_iter(__accu0__)}());
plt.plot([pt[0],pt[0]],[0,pt[1]]);
tk.Canvas.__init__(self,...args,__kwargtrans__(kwargs));
var __except0__=ValueError(tuple([a,b]));__except0__.__cause__=null;throw __except0__;
true;
var py_name=models.CharField(__kwargtrans__({max_length:100}));
var data=np.array([1,4,5,5,6,8,8,9]);
str(datetime.strptime(value,FORMAT_STRING));
do_something();
handle.close();
plt.show();
ao.__setitem__([tuple([1,null,1]),tuple([0,-1,1])],ao.__getitem__([tuple([1,null,1]),tuple([0,-1,1])])+ai.__getitem__([tuple([0,-1,1]),tuple([1,null,1])]));
var df2=pd.read_csv(StringIO(df2_text),__kwargtrans__({delim_whitespace:true}));
float(Mixed(1,1,2));
isinstance(x,list);
export var em=trained.emission;
plot(a.__getitem__([tuple([0,null,1]),0]),a.__getitem__([tuple([0,null,1]),1]));
ax.plot(theta,r);
print(len(set(probes)));
var data=dd.from_pandas(df,__kwargtrans__({npartitions:2}));
frame.append(1);
localtime(now()).date();
x[x];
models.py;
var y=np.array([1,2,-1,1,1]);
g.axes[0][0].legend(__kwargtrans__({loc:1}));
cnx.close();
self.canvas.py_clear();
spam.ham;
plt.imshow(np.random.random(100,100));
print(k,v);
server.quit();
[staging];
print(str_to_type(v));
doSomething();
var reader=csv.reader(f);
traceback.print_stack();
var writer=csv.writer(f);
export var dictname=pickle.load(f);
export var seclist=[2,4,6,8];
print(img.shape);
var p=argparse.ArgumentParser();
print(file.read());
image.set_from_stock(gtk.STOCK_CLOSE,gtk.ICON_SIZE_MENU);
export var re=function(){var __accu0__=[];for(var [x,y,z]of zip(tmp.__getslice__(2,null,1),tmp.__getslice__(1,-1,1),tmp.__getslice__(0,-2,1)))if(y!=x&&y!=z)__accu0__.append(y);return __accu0__}();
plt.yticks(pos,labels.sort_index());
var __left0__=process.communicate();var output=__left0__[0];export var error=__left0__[1];
.2775516299989249;
plt.show();
math.degrees(math.atan(1));
a.__setslice__(0,1,null,[1]);
np.random.seed(10);
f.write(site.read());
var user=User.objects.py_get(__kwargtrans__({pk:request.user.id}));
__main__.py;
db.delete(item);
var words=dict({});
var parser=argparse.ArgumentParser();
os.path.join(path,filename);
(function(){var __accu0__=[];for(var xs of a)for(var x of xs)__accu0__.append(x);return __accu0__})();
print(response.content);
true;
i+=1;
self.assertEqual(fn(i),output[i]);
ordereddict.py;
any(function(){var __accu0__=[];for(var c of badChars)__accu0__.append(__in__(c,yourString));return py_iter(__accu0__)}());
new set([dict([[img.height|add,1]])]);
self.request.send(self.data.upper());
setattr(self,key.lower(),val);
export var intified_list=list(intify(lst));
glDrawArrays(GL_TRIANGLE_STRIP,0,4);
[iplocation];
var c=sorted(set(a).intersection(b));
print(in_nested_list(x,[]));
sys.exit(1);
listofLines.py_sort(__kwargtrans__({key:extract_time}));
print(df.py_values.flatten());
setattr(self,py_name,callable);
print(map(function __lambda__(x){return!(B_set-set(x))},A));
main();
reactor.connectTCP(host,port,factory);
ps.wait();
thisprogramdoesntexist;
jsonFile.truncate();
1/2;
Response(serializer.data,__kwargtrans__({status:status.HTTP_201_CREATED}));
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
f.write(line);
var data=json.load(contactFile);
pprint(sorted(list(results.py_items()),__kwargtrans__({key:function __lambda__(x){return x[1]}})));
l.__getslice__(0,n,1)+[0]*(n-len(l));
obj_list[0].do_somthing();
tuple(y);
var b=np.random.rand(10,10);
method(...args,__kwargtrans__(kwargs));
instance.topping_set.add(topping);
time.sleep(2);
main();
os.mkfifo(thefifo);
var ax=fig.add_subplot(111);
data[data<threshold]=0;
B.__setitem__([tuple([0,null,1]),col],np.prod(np.delete(A,col,1),1));
export var last_name=models.CharField(__kwargtrans__({max_length:50}));
d.py_replace(__kwargtrans__({hour:0,minute:0,second:0,microsecond:0}));
time.sleep(2);
random.shuffle(rects);
export var edge_list=function(){var __accu0__=[];for(var line of data)__accu0__.append(tuple(map(int,line.py_split())));return __accu0__}();
print(hashlib.sha512(password+salt).hexdigest());
powerpoint.Quit();
main_window.show();
f();
export var dom=minidom.parseString(xml_text);
print(list(itertools.chain(...list(parser_config.py_keys()))));
var a=np.array([1E-9]);
A.columns=pd.MultiIndex.from_product([list(range(A.shape[1]/10)),list(range(10))]);
z.set_zorder(-1);
var pool=multiprocessing.Pool(4);
conn.close();
np.where(abs(arr_f-a)<t)[0].any();
var a=np.arange(8);
f_new.write(line);
do_something(item);
print(df.sum(1).to_frame().dot(df.sum().to_frame().T).div(df.sum().sum()));
json.loads(json1);
Py_Finalize();
self._connect();
var df=df.reset_index();
print(requests.post(endpoint,__kwargtrans__({data:data,headers:headers})).json());
lib.get_strings(c_array,len(list_to_send));
conn.sendmail(sender,destination,msg.as_string());
mat-vec.__getitem__([tuple([0,null,1]),[0,0,0]]);
A.reshape(Math.floor(h/ph),ph,Math.floor(w/pw),pw,-1).swapaxes(1,2).shape;

reactor.run();
self.driver.close();
(m.transpose()-v).transpose();
collections.Counter(x)==collections.Counter(y);
logging.getLogger().setLevel(logging.DEBUG);
self.window.show_all();
list(chain(ls.__getslice__(0,idx,1),replace_with,ls.__getslice__(idx+1,null,1)));
print(np.corrcoef(x.__getslice__(0,len(x)-1,1),x.__getslice__(1,null,1))[0][1]);
s.commit();
f.writelines(lines);
export var alsonow=now.astimezone(yourtz);
export var decorated_argspec=inspect.getargspec(func2);
os.chmod(full_path,stat.S_IWRITE);
var data=numpy.fromfile(f,dt);
pd.io.json.dumps(summary,__kwargtrans__({double_precision:2}));
revlist(lst.__getslice__(1,null,1))+[lst[0]];
export var frq=frq[list(range(n/2))];
var foo=Foo();
[5,7,9,11];
ShapedFrame().Show();
stack[-1].append(x);
file.close();
var id=Column(Integer,__kwargtrans__({primary_key:true}));
main();
var pool=Pool(__kwargtrans__({processes:4}));
plt.plot(sorted,yvals);
export var bid=int(bid);
plt.show();
df.set_index([0,1],__kwargtrans__({inplace:true}));
connection.close();
var b=Matrix([[0,0],[0,0]]);
files.py_sort(__kwargtrans__({key:os.path.getmtime}));
mainloop();
lst.__setslice__(0,null,null,whatever);
var newlist=function(){var __accu0__=[];for(var x of py_values)__accu0__.append(function(){var __accu1__=[];for(var y of list)if(y[1]==x)__accu1__.append(y[0]);return __accu1__}());return __accu0__}();
d.py_setdefault(word[0].lower(),[]).append(word);
a.__getitem__([tuple([0,null,1]),0]);
urllib.request.Request.__init__(...args,__kwargtrans__(kwargs));
export var myslice=array[tuple(idx)];
py_typeof(dates[0])==pd.tslib.Timestamp;
var entry_list=function(){var __accu0__=[];for(var x of feed.entry)__accu0__.append(x.title.text);return __accu0__}();
foo();
self.driver=webdriver.Firefox();
output.close();
var result_dict=dict(function(){var __accu0__=[];for(var [i,n]of enumerate(header))__accu0__.append(tuple([n,res_list[i]]));return py_iter(__accu0__)}());
ax.annotate(str(j),__kwargtrans__({xy:tuple([i,j])}));
s.listen(1);
print(m.group());
clf.fit(X,y);
export var game_display=pygame.display.set_mode(tuple([800,800]));
smtp.close();
var fig=plt.figure();
rtc.Newline();
var output=check_output(cmd,__kwargtrans__({stdin:file}));
entry.pack();
print([0]*i);
file_writer.writerow(function(){var __accu0__=[];for(var x of lol)__accu0__.append(x[i]);return __accu0__}());
print(py_typeof(result));
var d=dict(zip(list(adict.py_values()),list(adict.py_keys())));
plt.show();
plt.colorbar();
tk.Frame.__init__(self,parent);
ax.annotate(str(y),__kwargtrans__({xy:tuple([x,y])}));
str(list(self.__iter__()));
var data=f(data);
self.figure.set_canvas(self.figurecanvas);
self.ui.main_plot.figure.subplots_adjust(__kwargtrans__({bottom:.4}));
screen.fill(tuple([0,0,0]));
coords.reshape(-1,N);
self.ax.cla();
child.kill();
var p=subprocess.Popen(your_command,__kwargtrans__({preexec_fn:os.setsid}));
self.g.py_get(key);
test.py;
var b=a.T;
self.py_update(dict([[element.tag,element.text]]));
root.mainloop();
print(sum(a));
Process(__kwargtrans__({target:do_something})).start();
print(sum(function(){var __accu0__=[];for(var char of mystring)__accu0__.append(ord(char)-base);return py_iter(__accu0__)}()));
line_count+=1;
print(sum1(-1,0,6,10));
var ax=fig.add_subplot(gs[1]);
pygame.display.py_update();
func();
__init__.py;
var res=urllib.request.urlopen(req);
var ax=fig.add_subplot(111);
random.shuffle(Order);
draw.line(tuple([0,im.size[1],im.size[0],0]),__kwargtrans__({fill:128}));
var py_new=numpy.zeros_like(arr);
s.join();
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
sc._conf.getAll();
ax0.imshow(img,__kwargtrans__({cmap:plt.cm.gray}));
A.reshape(Math.floor(h/ph),ph,Math.floor(w/pw),pw,-1).swapaxes(1,2);
self.label.configure(__kwargtrans__({text:now}));
var o=object();
print((d1+datetime.timedelta(i)).isoformat());
print(workdaycount(date(2011,8,15),date(2011,8,22),1));
np.concatenate(alist);
self.SetTopWindow(frame);
l.py_sort(__kwargtrans__({key:f}));
list(intermix([1,1,1,1,1,2,2,2,2,2]));
os.kill(pid,0);
l.py_pop();
a+b;
var a=[1E3+1,1E3+1,1E3+1];
export var cbar0=plt.colorbar(cf0);
dict[key]=val;
test.my_redifinable();
httpd.serve_forever();
print(traceback.format_exc());
plt.ylim([40,110]);
node_schema.load(json_data,__kwargtrans__({instance:Node().query.py_get(node_id),partial:true}));
var x=np.arange(10);
self.setupUi(self);
timeit(stmt4,setup4,__kwargtrans__({number:100}));
p.start();
ax.yaxis.grid(true);
print(dirname(dirname("./P2JSnippets.py")));
np.cov(data.T);
any(function(){var __accu0__=[];for(var e of b)__accu0__.append(__in__(e,s));return py_iter(__accu0__)}());
file.close();
ax.set_xlim([-1,.5]);
d[k].extend(v);
func(self,...args,__kwargtrans__(kwargs));
time.sleep(1);
r.json();
site.set_debuglevel(1);
export var quadV=[-.5,-.5,0,.5,-.5,0,-.5,.5,0,.5,.5,0];
sheet.set_clip(pygame.Rect(SPRT_RECT_X,SPRT_RECT_Y,LEN_SPRT_X,LEN_SPRT_Y));
var data=cursor.fetchall();
export var YB=np.linspace(-1,1,20);
print(pd.concat([df,pd.concat([dm]*df.shape[1],__kwargtrans__({axis:1,py_keys:df.columns}))]));
print(sys.argv);
tips.reset_index(__kwargtrans__({inplace:true}));
self.assertTrue(result);
var l=function(){var __accu0__=[];for(var sub of l)for(var i of sub)__accu0__.append(i);return __accu0__}();
var __path__=extend_path(__path__,__name__);
help(string);
np.allclose(tmp,tmp2);
print(int(number)-int(number.__getslice__(0,null,-1)));
print(dis.disco(f.f_code,i));
var __left0__=line_data[k][-1];var text=__left0__[0];export var xoff=__left0__[1];
sys.exit(0);
print(m.hexdigest());
time.sleep(1);
print(repr(a));
numpy.zeros(tuple([5,5]));
sys.stdout.flush();
ctx.set_source_rgb(.47,.47,.47);
data.append(.25*math.sin(math.radians(i)));
var y=np.array([1,2,0,1,1,2]);
print(sys.path);
a[0];
[[1][2]];
export var data_tuple=Item(__kwargtrans__(dict(zip(fields,raw_data))));
label.grid(__kwargtrans__({row:0,column:0}));
subprocess.Popen(subprocess);
X[np.ix_([0,1],[0,1])];
print(fpp[1]);
np.datetime64(datetime.utcnow()).astype(datetime);
df;
ax.yaxis.set_minor_locator(MultipleLocator(.2));
your_code.run();
export var minutes_diff=(datetime_end-datetime_start).total_seconds()/60;
df.query(qry);
model.objects.filter(__kwargtrans__({id:id})).py_update(__kwargtrans__({order:order.index(id)}));
start();
transsurface.fill(tuple([255,0,255]));
print(s.__dict__);
tuple([id(b[0]),id(b[1])]);
thread.start();
matrix[0];
somethingThread.join();
x.ix[random.sample(x.index,n)];
self.post(request,...args,__kwargtrans__(kwargs));
export var b_set=set(function(){var __accu0__=[];for(var x of a)__accu0__.append(tuple(x));return py_iter(__accu0__)}());
var rs=json.dumps(dict(lst));
s==s.__getslice__(0,null,-1);
df.describe().transpose();
root.deiconify();
var _=plt.setp(p.get_xticklabels(),__kwargtrans__({rotation:90}));
var lines=f.readlines();
result.append(list(set1.union(set2)));
formset.save();
m.eliminate_zeros();
var A=np.array(ss.zscore(A));
frame.axes.get_yaxis().set_ticks([]);
print(repr(n));
Response(content);
ax.py_clear();
pd.options.display.max_columns=50;
plt.figure();
var ax=plt.subplot(111);
tuple([[[2,2,2,2],[2,2,2,2],[2,2,2,2]]]);
sys.exit(main(sys.argv));
self.fp.write(buf);
var h=[[1,0,0].__getitem__([0,0,0]).__getitem__([0,0,-1])];
var fig=plt.figure();
var fig=plt.figure();
[1,1,1,1,1,1];
list(set(l1)&set(l2));
export var numpairs=function(){var __accu0__=[];for(var i of range(0,len(nums),2))__accu0__.append(nums.__getslice__(i,i+2,1));return __accu0__}();
py_next(py_iter(list(self.py_items())));
(function(){var __accu0__=[];for(var [a,b]of zip(l,l.__getslice__(1,null,1)).__getslice__(0,null,2))__accu0__.append(a+b);return __accu0__})();
print(monotonic_time());
print(f.read());
conn.rollback();
ax.set_ylim([-1,1.5]);
entry1.grid(__kwargtrans__({row:0,column:0}));
var py_new=dict(old);
ax.yaxis.set_minor_locator(MultipleLocator(.1));
logger.addHandler(ch);
self.fp.write(zinfo.FileHeader(zip64));
var key=line.strip().__getslice__(1,null,1);
func(1,2);
var foo=models.IntegerField();
var out=np.column_stack(tuple([sortedA.__getitem__([start_unqA,tuple([0,-1,1])]),np.nanmax(grpA,__kwargtrans__({axis:1}))]));
export var newarray=np.dstack(mylist);
inspect.getargspec(someMethod);
self.assertForbidden(response);
print(py_typeof(f.__self__));
loop.run_until_complete(main());
reduce(function __lambda__(d,k){return d.py_setdefault(k,dict({}))},py_keys,dict_nested)[newkey]=newvalue;
Y.mean(__kwargtrans__({axis:1}));
print(tuple([k,v]));
new set([new set([r.report_desc])]);
print(df[df.columns.__getslice__(2,5,1)]);
plt.subplot(122);
var handler=logging.StreamHandler();
value.__getslice__(-2,null,1);
d+=timedelta(__kwargtrans__({days:7}));
pylab.show();
str(value);
pid.wait();
print(sys.argv);
show(p);
df;
(function(){var __accu0__=[];for(var row of self._getrow(rowidx))__accu0__.append(row[colidx]);return __accu0__})();
print(requests.py_get(url,__kwargtrans__({auth:tuple([username,password])})).content);
oceans[regcode-1].append(tuple([temp,fecha]));
print(b.decode());
export var job=dict(zip(py_keys,py_values));
var my_randoms=function(){var __accu0__=[];for(var _=0;_<10;_++)__accu0__.append(random.randrange(1,101,1));return __accu0__}();
self.x-=STEP;
var im=Image.open(BytesIO(base64.b64decode(data)));
print(str(l).__getslice__(1,-1,1));
var conn=socket.socket(socket.AF_INET,socket.SOCK_STREAM);
isinstance(y,X);
print(counter.most_common(10));
var G=nx.Graph();
var letter_count=dict(zip(string.lowercase,itertools.repeat(0)));
map(function __lambda__(s){return s.py_split()},a);
file_1.write(line);
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
pool.close();
o.many2many.all();
(function(){var __accu0__=[];for(var line_dict of dr)for(var [k,v]of list(line_dict.py_items()))__accu0__.append(data[k].append(v));return set(__accu0__)})();
get_value(dic,4);
r.findall(url);
plt.figure(__kwargtrans__({figsize:tuple([12.5,2.5])}));
query_model.save();
input.seek(0,2);
var a=function(){var __accu0__=[];for(var i=2;i<10;i++)__accu0__.append(i);return __accu0__}();
QApplication.setOverrideCursor(Qt.WaitCursor);
false;
var matches=function(){var __accu0__=[];for(var x of a)if(__in__(x,str))__accu0__.append(x);return set(__accu0__)}();
plt.plot([0,2],[2,4]);
var data=function(){var __accu0__=[];for(var x of line.py_split())__accu0__.append(tryconvert(x,int,float));return __accu0__}();
var mean=sum_x/n;
test();
os._exit(EMERGENCY);
plt.show();
subplot(2,1,1);
var mask=Math.pow(x,2)+Math.pow(y,2)+Math.pow(z,2)<Math.pow(radius,2);
obj.__dict__;
fig.colorbar(im);
tasks.remove(t);
random.shuffle(data);
random.shuffle(random_list);
ax.set_xlim(-50,50);
var root=Tk();
var sock=socket.socket();
df_norm.mean();
var pool=multiprocessing.Pool(__kwargtrans__({processes:4}));
self.init();
var bins=np.arange(-100,100,5);
p.wait();
export var STATUS_ERR_INVALID_PARAMETER=2;
var __left0__=ssh_process.communicate();var out=__left0__[0];var err=__left0__[1];
handler.setLevel(logging.DEBUG);
time.sleep(.05);
helloset.issubset(printset);
manager.run();
self.makeList(aNode.lChild)+[aNode.data]+self.makeList(aNode.rChild);
plt.show();
self.initUI();
plt.contour(xgrid,ygrid,zgrid);
export var comment=models.TextField();
unittest.TestCase.__init__(self,test_name);
msg.attach(msg_image);
tuple([k,len(v)]);
result.append(el);
sys.maxunicode;
AMOServer.Disconnect();
pyplot.show();
driver.quit();
var window=Tk();
var d=pd.DataFrame(np.zeros(tuple([N_rows,N_cols])));
QtGui.QFileDialog.__init__(self,...args);
help(file.read);
export var ppc=run_ppc(trace,__kwargtrans__({model:model,samples:200}));
excel.ActiveSheet.Columns.AutoFit();
var C=MyReallyBigClassNameWhichIHateToType;
self.Layout();
self.func(self.parent_obj,...args,__kwargtrans__(kwargs));
f.write(chunk);
process(data);
print(fcount(path));
a.__setitem__([0,1,1],[0,1,0]);
print(df1[df1.B.isin(df2.B)]);
logger.addHandler(ch);
max(allfuncs);
object.__getattribute__(self,py_name);
export var college=models.CharField(__kwargtrans__({max_length:40}));
var root=tk.Tk();
df.gdp=df.gdp.shift(-1);
choice.things.all();
x[np.where([c!=2])[1]];
pygame.display.flip();
plt.ion();
np.sin(y*x);
audio.save();
var cbar=fig.colorbar(cax,__kwargtrans__({ticks:[0,5,10]}));
session.execute(sql_string).fetchall();
export var timer=pygame.time.Clock();
d+=timedelta(__kwargtrans__({days:6-d.weekday()}));
print(df_Quota);
export var propnames=function(){var __accu0__=[];for(var [py_name,value]of inspect.getmembers(SomeClass,isprop))__accu0__.append(py_name);return __accu0__}();
app.run();
var B=A.__getslice__(0,null,1);
var fig=plt.figure();
print(s.find(s2));
min(darr);
window.show();
self.hlayout.addWidget(self.b);
Encoders.encode_base64(eml_atch);
my_dict[1];
dialog.exec_();
self.foo.wait();
ax.set_xticklabels(categories);
zip_longest(...args,__kwargtrans__({fillvalue:fillvalue}));
curses.echo();
show();
print(py_next(a));
df.drop_duplicates(__kwargtrans__({inplace:true}));
find_matches(list(a),list(b));
var layout=QtGui.QVBoxLayout(self);
plt.figure(2);
export var numpydata=np.fromstring(data,__kwargtrans__({dtype:np.int16}));
var response=br.submit();
window.Maximize();
threading.Timer(1,greeting,__kwargtrans__({args:tuple([oh_hi])})).start();
matches.extend(function(){var __accu0__=[];for(var fn of filenames)__accu0__.append(os.path.join(root,fn));return __accu0__}());
np.linspace(0,1,11);
self.data.grid(__kwargtrans__({row:0,column:0,rowspan:4,columnspan:2,sticky:N+E+S+W}));
var objs=map(get_object,random.sample(list(range(length)),.001*length));
json_docs.append(json_doc);
admin.site.unregister(User);
plt.subplot(2,1,1);
ax.get_xaxis().set_visible(false);
theclass.run;
var y=data.__getitem__([tuple([0,null,1]),0]);
tasks.join();
f.writelines(lines);
u[np.argmax(np.bincount(indices))];
ssh_client.set_missing_host_key_policy(paramiko.AutoAddPolicy());
var ax=fig.add_subplot(111);
var driver=webdriver.Firefox(__kwargtrans__({proxy:proxy_config,firefox_profile:prof}));
print(out.upper());
var cs=tuple([a,b,c,d]);
var __left0__=tuple([list(dict.py_keys()),list(dict.py_values())]);var py_keys=__left0__[0];var py_values=__left0__[1];
mydriver.maximize_window();
cursor.execute(query);
termf.pack(__kwargtrans__({fill:BOTH,expand:YES}));
str(self);
export var window_after=driver.window_handles[1];
i+=1;
foo.stop();
export var center=tuple([(max(x)+min(x))/2,(max(y)+min(y))/2]);
var root=tk.Tk();
sns.set_palette(flatui);

ContestResults.objects.filter(__kwargtrans__({contest:instance})).delete();
var foo=Foo();
var ax1=plt.subplot(gs1[i]);
var driver=webdriver.Firefox();
(function __lambda__(v){return tryconvert(v,0,int)});
db.session.commit();
var soup=BeautifulSoup(html);
new_list.append(data[index][current_index]);
driver.close();
zf.seek(0);
df[df.ge(0)].fillna(-9999);
var soup=BeautifulSoup(html);
ax.xaxis.set_major_locator(days);
new set([new set([narratives.narrative_text])]);
axclust.set_yticks([]);
axcltwo.set_yticks([]);
f.close();
frame.columnconfigure(1,__kwargtrans__({weight:1}));
urllib.request.install_opener(opener);
map(function __lambda__(row){return map(int,row)},inputVals);
pl.figure();
a+list(repeat(0,6));
plt.imshow(a,__kwargtrans__({cmap:plt.gray()}));
cv2.destroyAllWindows();
arr.__getitem__([0,0]);
names.remove(py_name);
print(map(str,rr.__getslice__(0,null,2)));
var ax=fig.add_subplot(111);
result[k]+=myDict[k];
var ax=fig.add_subplot(gs[0]);
HTMLParser.__init__(self);
var result=function(){var __accu0__=[];for(var k of py_keys)__accu0__.append([k,d1[k]]);return dict(__accu0__)}();
plt.imshow(img_a);
OrderedDict.__init__(self,...args,__kwargtrans__(kwds));
__all__[key]=value;
sys.exit(app.exec_());
var sess=tf.Session();
ax.set_yticklabels(names);
export var worksheet4=workbook.add_worksheet();
table.reset_index();
var y=x.__getslice__(0,null,1);
print(prev.tb_frame.f_locals);
self.cursor.commit();
var ax1=fig.add_subplot(111);
sys._getframe(number);
fd.write(data);
setattr(self,key,value);
var b=a+b;
pprint(Matrix([[1/(4*pi),1],[1,f(x)]]));
A.todense();
pd.concat(subs);
self.canvas.configure(__kwargtrans__({yscrollcommand:self.ysb.set,xscrollcommand:self.xsb.set}));
var opener=urllib.request.build_opener(urllib.request.HTTPHandler,handler);
export var setting2=config2;
set([5,6]);
var ax=fig.add_subplot(111);
plt.show();
p.start();
self.py_name=py_name;
gtk.main();
db.backup.insert(list(cursor));
django.setup();
my_logger.setLevel(logging.DEBUG);
main.py;
print(df.head());
export var km=KMeans();
time.sleep(1);
var screen=pygame.display.set_mode(tuple([640,480]));
[a,b];
var index=np.array([0,1]);
client.options.transport.last_headers;
sys.exit(rc);
var date=datetime.datetime.fromtimestamp(timestamp);
pd.merge(df1,df2,__kwargtrans__({left_index:true,right_index:true}));
plt.draw();
var parser=etree.XMLParser(__kwargtrans__({recover:true}));
var PROJECT_ROOT=os.path.dirname("./P2JSnippets.py");
var today=date.today();
o.subscribe(my_callback_func);
print(function(){var __accu0__=[];for(var x=1;x<1E3;x++)if(pred(x))__accu0__.append(x);return __accu0__}());
var __except0__=SystemExit(1);__except0__.__cause__=null;throw __except0__;
plt.show();
conn.close();
var df=pd.DataFrame();
model_to_dict(instance,__kwargtrans__({fields:function(){var __accu0__=[];for(var field of instance._meta.fields)__accu0__.append(field.py_name);return __accu0__}()}));
os.chdir(path_dir);
np.corrcoef(signal.__getslice__(0,-1,1),signal.__getslice__(1,null,1))[0][1];
print(dt-datetime.fromtimestamp(s*factor));
Decimal(tuple([0,a,-len(a)+1]));
var df=df[df.end_date.notnull()];
metadata.create_all();
sys.stdout.flush();
export var total_loss=tf.add_n(losses);
export var gzip_file_handle=gzip.GzipFile(__kwargtrans__({fileobj:url_file_handle}));
var ax=fig.add_subplot(1,1,1);
textfile.write(artigo);
whos;
django.utils.simplejson.loads(someJson);
df.columns;
self.show_progress(100);
var response=view(request);
print(zdd1.join(zdd2).collect());
p[i]+=1;
var p2=Process(__kwargtrans__({target:func2}));
Class.method(instance,argument);
pyximport.install();
tuple([gen1,gen2]);
np.add.outer(a,a);
var r=requests.post(url,__kwargtrans__({data:form_data,headers:user_agent}));
hash(tuple());
mlab.start();
urllib.parse.quote(s);
DataFrame(foo,__kwargtrans__({index:df.index}));
process(line);
np.array(function(){var __accu0__=[];for(var x of aset&bset)__accu0__.append(x);return __accu0__}());
self.__dict__==other.__dict__;
frames.append(df);
pd.to_datetime(s);
c.setopt(c.WRITEFUNCTION,retrieved_body.store);
s.connect(tuple([ip,port]));
var id=db.Column(db.Integer,__kwargtrans__({primary_key:true}));
m.bluemarble();
var draw=ImageDraw.Draw(mask);
app.register_blueprint(filters.blueprint);
b.__getslice__(0,len(a),1)==a||is_sublist(a,b.__getslice__(1,null,1));
wx.NO_BORDER^wx.SYSTEM_MENU^wx.MINIMIZE_BOX^wx.MAXIMIZE_BOX^wx.CLOSE_BOX;
pd.read_csv(s,__kwargtrans__({index_col:0,parse_dates:true,dayfirst:true}));
self.navigate(-1);
main();
self.last_name=last_name;
var a=np.array([[5,7],[12,18],[20,29]]);
AaBbCcDdEeFfGgHhIiJjKkLlMNOPQRSTUVWXYZ;
print(p.groupby(p.ne(p.shift()).cumsum()).cumcount());
df;
main();
np.random.seed(0);
var __left0__=plt.subplots(__kwargtrans__({figsize:a4_dims}));var fig=__left0__[0];var ax=__left0__[1];
export var blurred=gaussian_filter(a,__kwargtrans__({sigma:7}));
var d=dict(zip(m.__getslice__(0,null,2),m.__getslice__(1,null,2)));
np.py_sort(np.partition(x,-10).__getslice__(-10,null,1));
bot.polling();
sys.stdout=sys.__stdout__;
var d=dict(map(tabsplit,list1));
Obj1.grid_forget();
window.show();
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
process.stdin.close();
plt.setp(ax.get_xticklines().__getslice__(-2,null,1),__kwargtrans__({visible:false}));
Thread.__init__(self);
f.write(line);
map(convert,a);
print(d.foo());
urllib.request.urlopen(URL).read();
print(my_hex);
numpy.isfinite(myarray).all();
self._sock.sendall(data);
paramdata.to_csv(sys.stdout);
ser.readline();
p1.stdout.close();
df[df.apply(function __lambda__(x){return __in__(x.A,x.B)},__kwargtrans__({axis:1}))];
sum(function(){var __accu0__=[];for(var x of arr)__accu0__.append(x===0);return py_iter(__accu0__)}());
file_bytes.seek(0,0);
main();
self.client=paramiko.SSHClient();
var x=numpy.array([0,1,1,2,2,2]);
np.random.shuffle(curr_data);
self.layout.addWidget(self.button1);
export var second=function(){var __accu0__=[];for(var [x,y]of data)__accu0__.append(y);return __accu0__}();
conn.commit();
buf.seek(0);
var complete_path=os.path.abspath(complete_path);
var s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);
os.play();
export var lowcut=500;
run();
var result=a[np.argsort(a).__getslice__(0,k,1)];
app.exec_();
export var PWD=os.path.dirname(os.path.realpath("./P2JSnippets.py"));
export var sizes=function(){var __accu0__=[];for(var display of displays)__accu0__.append(display.GetGeometry().GetSize());return __accu0__}();
test.py;
[0,1,2];
self.value=self.left.value+self.right.value;
lines.append(text);
export var time_start=time.time();
func();
export var chapter=form.save();
var __left0__=plt.subplots(2,1);var f=__left0__[0];export var axarr=__left0__[1];
datetime.datetime(d.year,d.month,d.day);
len(np.unique(arr))==1;
print(function(){var __accu0__=[];for(var x of a)if(!__in__(x,b))__accu0__.append(x);return __accu0__}()+function(){var __accu0__=[];for(var x of b)if(!__in__(x,a))__accu0__.append(x);return __accu0__}());
s.set_debuglevel(0);
parser.parse(f);
var A=np.empty(tuple([len(x),2]));
export var col_idx=np.array([0,2]);
var x=np.arange(1E3);
sum(list(dict.py_items()),tuple([]));
func(__kwargtrans__(r._asdict()));
arr.reshape(k,2,k,2).swapaxes(1,2).reshape(k,k,4).max(__kwargtrans__({axis:-1}));
session.add(foo);
var pairs=tuple(combinations(list(range(len(A[0]))),2));
heapq.heappush(heap,tuple([a+b,a,b]));
plt.clf();
plot(x,y2s);
scipy.stats.poisson.cdf([4,17],10);
print(slept);
fig.canvas.draw();
export var pl=pl.__getslice__(0,5,1);
var root=Tk();
np.diff(array1)-lens.__getslice__(0,-1,1)+1;
x.append(np.nonzero(np.in1d(a,c))[0]);
var key=function __lambda__(x){return x[1][0]};
a.__getitem__([tuple([0,null,1]),1]).toarray();
var data=sys.stdin.read();
print(new_list);
SudsObject.__init__(self);
task.revoke(__kwargtrans__({terminate:true}));
label_Image.setPixmap(QtGui.QPixmap.fromImage(image_profile));
data.reshape(2,-1);
ResultSerializer(results,__kwargtrans__({many:true})).data;
QWidget.__init__(self,parent);
plt.show();
thread.start();
np.random.seed(2015);
QApplication.setOverrideCursor(QCursor(QtCore.Qt.WaitCursor));
print(sys._getframe().f_code.co_name);
pygame.init();
print(link.url,link.text);
var __left0__=proc.communicate();var out=__left0__[0];var err=__left0__[1];
main2();
export var wait=WebDriverWait(driver,10);
help(module);
var my_list=function(){var __accu0__=[];for(var line of f)for(var i of line.py_split())if(i.isdigit())__accu0__.append(int(i));return __accu0__}();
answer.append(tuple([alo,blo]));
var x=numpy.zeros(tuple([i,j,k]));
profiler.start();
export var new_arr=arr.reshape(-1,arr.shape[-1]);
pdb.set_trace();
sys.exit(app.exec_());
ax1.bar(x,y);
var length=len(string);
os._exit(0);
__mod__(int(hashlib.sha1(s).hexdigest(),16),Math.pow(10,8));
self.set_text(new_text);
server.start();

window.show();
export var list1_indices=function(){var __accu0__=[];for(var [i,item]of enumerate(list1))__accu0__.append([item,i]);return dict(__accu0__)}();
print(x.__getslice__(0,10,1));
clf.fit(X,y);
n-1<x&&x<=n?n:n+1;
sys.stdout.write(line);
print(data);
HttpResponse();
reactor.do(thing1);
a*np.exp(-b*x)+offset;
datastream.seek(0);
l.__getslice__(0,x,1)+l.__getslice__(-y,null,1);
time.sleep(duration);
quote.save();
do_something_based_on_the_request_endpoint(request);
var app=web.application(urls,__all__);
var __left0__=foo(50);var x=__left0__[0];var y=__left0__[1];
app.config.from_object(__name__);
p.terminate();
print(repr(a));
plt.show();
locale.setlocale(locale.LC_COLLATE,old_locale);
print(requests.py_get(url,__kwargtrans__({proxies:proxies})).text);
numpy.isnan(a).any();
os.kill(os.getpid(),signal.SIGUSR1);
time.sleep(2);
export var elapsed=time.time()-t;
total+=int(row[1]);
var results=query.all();
ax.legend();
export var dfrand=pd.DataFrame(__kwargtrans__({data:np.random.randn(data.shape[0],data.shape[1])}));
app.exec_();
os.system(bashCommand);
(function(){var __accu0__=[];for(var obj of listobj)__accu0__.append(tuple(function(){var __accu1__=[];for(var field of fields)__accu1__.append(getattr(obj,field));return py_iter(__accu1__)}()));return __accu0__})();
a[np.abs(a)<eps]=0;
main();
plt.xlim([-.5,len(py_values)-.5]);
var ax=plt.gca();
plt.show(__kwargtrans__({block:false}));
var stations=[];
dist(site1[0],site1[1],site2[0],site2[1]);
float_to_str(42E16);
print(arreq_in_list(myarr1,mylistarr));
round(float(x)/500)*500;
p.start();
ao.__setitem__([tuple([0,-1,1]),tuple([0,-1,1])],ao.__getitem__([tuple([0,-1,1]),tuple([0,-1,1])])+ai.__getitem__([tuple([1,null,1]),tuple([1,null,1])]));
self.button.append(Button(frame,__kwargtrans__({text:py_name,command:callback})));
plt.plot(z,f(z,tval));
time.sleep(120);
f.__class__;
var fig=plt.figure();
print(dt+datetime.timedelta(__kwargtrans__({days:d+1})));
var e=.081819191;
s.listen(1);
export var py_replace=[tuple([y,z+1]),tuple([x,y+z]),tuple([z,a])];
f.writelines(lines);
ax.add_collection(collection,__kwargtrans__({autolim:true}));
ax.imshow(img,__kwargtrans__({extent:[min(xi),max(xi),min(yi),max(yi)]}));
t.start();
setattr(self,method,wrapped_method);
print(stdout.read());
all(function(){var __accu0__=[];for(var [x,y]of zip(s.__getslice__(0,-1,1),s.__getslice__(1,null,1)))__accu0__.append(x!=y);return py_iter(__accu0__)}());
py_next(reader);
mydict.py_setdefault(mykey,myfunc());
a[np.lexsort(np.transpose(a).__getslice__(0,null,-1))];
var out=mat[0]*(len(ixs)-np.count_nonzero(nzmask))+nzsum;
do_something();
var response=request.execute();
Thread(__kwargtrans__({target:callback})).start();
_trace(args[0]);
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
export var newID=db.insert_id();
var driver=webdriver.Firefox();
element.remove(subelement);
conn.close();
fig.tight_layout();
a.py_sort(__kwargtrans__({key:len,reverse:true}));
test.py;
sys.stdout.write(line);
signal.signal(signal.SIGTERM,function __lambda__(signum,stack_frame){return sys.exit(1)});
var c=np.tile(a,tuple([b.shape[0],1]));
A.__init__(self);
pythoncom.PumpMessages();
int(x*Math.pow(10,1+a)+y);
export var label=np.random.random(tuple([100,100]));
plt.bar([1,2],[5,4]);
print(function(){var __accu0__=[];for(var c of coupons)__accu0__.append(tuple([c.rate(),c.accrualPeriod()]));return __accu0__}());
db.create_all();
fileHandler.setLevel(logging.DEBUG);
writer.writerow(codecs.BOM_UTF16_LE);
var result=np.average(_array,__kwargtrans__({axis:1}));
signal.signal(signal.SIGINT,my_signal_handler);
lesser+[pivot]+greater;
list(a);
print();
print(__mod__(11+7,12));
conn.setopt(pycurl.FOLLOWLOCATION,true);
var soup=BeautifulSoup(html);
list(Project.__table__.columns.py_keys());
channel.start_consuming();
mylist.py_pop(0);
unittest.main(__kwargtrans__({failfast:true}));
item.active=!item.active;
df[(df>0).all(1)];

tuple(list(zip(...G))[0]);
result.py_setdefault(widget_type,[]).append(app);
plt.subplots_adjust(__kwargtrans__({hspace:0}));
export var ext=os.path.splitext(path)[1];
var v=np.array([0,1,2]);
(function(){var __accu0__=[];for(var x of a)__accu0__.append(id(x));return __accu0__})();
export var TLabels=np.array([-1,1,1,1,1,-1,-1,1,-1,-1]);
self.__class__.num+=1;
FlaskApplication().run();
json.JSONEncoder.py_default(self,o);
var list_of_tuples=[tuple([1,2]),tuple([4,5])];
false;
app.run(__kwargtrans__({debug:true}));
g.user=current_user.username;
plt.gca().yaxis.set_minor_locator(mpl.ticker.NullLocator());
app.MainLoop();
var val=rtpinterpolator(xyz2rtp(x,y,z));
sorted(my_set,__kwargtrans__({key:natural_sortkey}));
sum(args)==1;
var g=nx.Graph();
db.session.add(p);
aic.append(x);
export var comments=soup.findAll(__kwargtrans__({text:function __lambda__(text){return isinstance(text,Comment)}}));
var g=a+b+np.sqrt(d*d+e*e+f*f);
self.list[key];
func();
var app=Flask(__name__);
export var col_names=sorted(list(col_dict.py_items()),__kwargtrans__({key:function __lambda__(x){return x[0]}}));
deleted[key];
print(do_something());
window.show();
interleave(lst.__getslice__(0,len(lst)/2,1),lst.__getslice__(len(lst)/2,null,1));
time.sleep(1);
var x=np.arange(100).reshape(10,10);
dest.close();
np.kron(a.reshape(-1,2),np.ones(tuple([2,2]),__kwargtrans__({dtype:int})));
var my_array=np.clip(my_array,minN,maxN);
fig.canvas.draw();
var ax=fig.add_subplot(111);
var graph=GraphAPI(oauth_access_token);
fg.canvas.draw();
print(df);
root.after(0,add_letter);
var __left0__=function(){var __accu0__=[];for(var e of[a,b,c])__accu0__.append(str(e));return __accu0__}();export var sa=__left0__[0];export var sb=__left0__[1];var sc=__left0__[2];
sc.parallelize([],n).count();
self.rebuild_index();
var br=mechanize.Browser();
__all__[string1+string2]();
plt.plot(data);
s.write(line);
logging.basicConfig(__kwargtrans__({level:logging.DEBUG,format:FORMAT}));
a.sum(__kwargtrans__({axis:1}));
l.py_pop();
var result=[];
py_items.py_sort(__kwargtrans__({key:function __lambda__(obj){return tuple([obj.firstname,[function(){var __accu0__=[];for(var c of obj.lastname)__accu0__.append(-ord(c));return py_iter(__accu0__)}()]])}}));
setp(ax.get_yticklabels(),__kwargtrans__({fontsize:8}));
json.loads(json.dumps([dict1,dict2]));
decorator;
help(foo);
list_list.append(list1);
self.ProgressBar.SetValue(event.count);
self.thread.start();
-min(function(){var __accu0__=[];for(var [i,x]of enumerate(py_values))__accu0__.append(tuple([x,-i]));return py_iter(__accu0__)}())[1];
plt.subplot(6,1,2);
self.setCentralWidget(widget);
plt.show();
var py_name=models.CharField(__kwargtrans__({max_length:255}));
print(row.rstrip());
str(int(match.group(0))-1);
var ax=fig.add_subplot(1,1,1);
file.close();
export var obj_list=function(){var __accu0__=[];for(var x of set(function(){var __accu1__=[];for(var obj of obj_list)__accu1__.append(HashMyAttr(obj));return py_iter(__accu1__)}()))__accu0__.append(x.obj);return __accu0__}();
self.fd.close();
m.fit(X,y);
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
s.between(0,1);
e2.pack();
export var betterdata=numpy.concatenate(tuple([maybeinliers,alsoinliers]));
dict(function(){var __accu0__=[];for(var [f,_]of self._fields_)__accu0__.append(tuple([f,getattr(self,f)]));return py_iter(__accu0__)}());
os.unlink(file);
result_dict[k]=v;
wjoykhsapcmvjmar;
reader.SetFileName(filename);
self.num+=1;
print(line);
reactor.run();
dir(__builtin__);
time.time()-start;
flatten_to_strings(list_of_menuitems);
os.killpg(p.pid,signal.SIGKILL);
print(function(){var __accu0__=[];for(var x=0;x<5;x++)for(var y of[f(x)])if(y!=2)__accu0__.append(tuple([x,y]));return __accu0__}());
setattr(cls,py_name,new_value);
export var ys=lowess(y,x).__getitem__([tuple([0,null,1]),1]);
export var P=expm(A);
a.append(function(){var __accu0__=[];for(var n=0;n<len(mykeys);n++)__accu0__.append([mykeys[n],py_values[n]]);return dict(__accu0__)}());
var r=func(...args,__kwargtrans__(kwargs));
self.transport.write(self.py_name,tuple([self.host,self.port]));
m.put(k,m.py_get(k)+1);
writer.writerow(row);
var window=QtGui.QMainWindow();
print(tuple([letter,count[letter]]));
self.setSceneRect(0,0,width,height);
datetime.time(...py_values);
FooModel.objects.py_get(__kwargtrans__({pk:1})).children.all();
var test=array([[0,1,2],[1,1,6],[2,0,4]]);
background.paste(top,tuple([0,0]));
testRust();
(function(){var __accu0__=[];for(var [x,y]of pairwise(xs))if(x!=y)__accu0__.append(x);return __accu0__})();
self.ax.set_xlim(self.min_x,self.max_x);
self.file.flush();
df[df.line_race!=0];
PyQt4.QtCore.QPoint(1867,416);
picture.putpixel(tuple([x,y]),new_color);
list(mkimap());
gradients;
export var cvs=df.columns.py_values;
NUMBER_OF_EXCEPTIONS+=1;
copy+copy_to_depth(item,depth-1);
var z=function(){var __accu0__=[];for(var [i,j]of zip(x,y))__accu0__.append(int(i==j));return __accu0__}();
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
cursor.execute(query);
all_labels.py_sort();
self.assertEqual(self.seq,list(range(10)));
f.write(bitbufstr);
list(compress(listOfTuples,bool_array));
print(f.read());
export var img_gray=cv2.cvtColor(img,cv2.COLOR_RGB2GRAY);
(py_values.cumsum()-ALLOWANCE).clip_lower(0).diff().fillna(0);
zin.close();
export var gray2b=cv2.warpAffine(gray2,Minv,shape(gray2.T));
HttpResponse(escape(some_string));
self.newargument=myarg;
myfile2.write(text);
plt.show();
export var graceful=argparse.ArgumentParser(__kwargtrans__({add_help:false}));
print(s);
var a=concat(a,b);
time.sleep(1);
map(itemgetter(1),rows);
var ax1=fig.add_subplot(111);
bisect.bisect==bisect.bisect_left;
func(...args,__kwargtrans__(kwargs));
plt.title(title);
now.py_replace(__kwargtrans__({minute:now.minute-__mod__(now.minute,15),second:0,microsecond:0}));
export var floored_data=data.apply(np.floor);
Script1.py;
A.objects.filter(__kwargtrans__({id:some_a.id})).py_update(__kwargtrans__({hidden:false}));
print(sys.stdin.read());
var script=os.path.abspath(sys.argv[1]);
var pairs=tuple(combinations(list(range(len(A[0]))),n));
df.loc[new_index]=pd.Series([99],df.columns);
plt.figure();
export var good=function(){var __accu0__=[];for(var x of mylist)if(__in__(x,goodvals))__accu0__.append(x);return __accu0__}();
id(Point(1,2))==id(Point(1,2));
loop.run_until_complete(asyncio.wait_for(asyncio.sleep(60),5));
print(html2text.html2text(html));
link.click();
clientsocket.send(r.encode());
image.show();
var root=etree.fromstring(xml);
server.ehlo();
output_file.write(ablob[0]);
warning.setLevel(logging.WARNING);
print(args.file.readlines());
module;
sorted(set(a).intersection(xyz));
fixedser.dropna().plot(__kwargtrans__({ax:axes[1]}));
newser.dropna().plot(__kwargtrans__({ax:axes[1]}));
figure.canvas.draw();
app.MainLoop();
func_a(s);
driver.py_get(url);
export var nzsum=np.take(mat,ixs[nzmask],__kwargtrans__({axis:0})).sum(__kwargtrans__({axis:0}));
sys.exit(app.exec_());
l.append(x.__getslice__(0,k,1));
list(pairs(board));
var now=datetime.datetime.now();
m.close();
numpy.set_printoptions(__kwargtrans__({precision:15}));
answerlist.extend(templist.__getslice__(0,lengthmodified,1));
export var se=pd.Series(mylist);
_finditem(v,key);
workList.py_sort(__kwargtrans__({key:len,reverse:true}));
foo.x=0;
main();
(function(){var __accu0__=[];for(var x of numberlist)__accu0__.append(isinstance(x,list)?double(x):x*2);return __accu0__})();
var fig=pyplot.figure();
ax.set_xticks(bins);
var cookies=browser.get_cookies();
pg.draw.rect(surf,STIMCOL,tuple([60,70,80,90]));
time.sleep(5);
jsonify(__kwargtrans__({username:g.user.username,email:g.user.email,id:g.user.id}));
var image=Image.open(image_in_path);
x<y?x:y;
something();
var fig=plt.figure();
new_list.append(tmp_list);
var fig=plt.figure(__kwargtrans__({figsize:tuple([5,10])}));
list(dill.detect.badtypes(f,__kwargtrans__({depth:1})).py_keys());
admin.site.register(User,UserAdmin);
var text=models.TextField();
var pool=Pool();
pickle.dump(obj,f,pickle.HIGHEST_PROTOCOL);
scipy.linalg.solve(X,Y);
insert_sort(descend_list,i,function __lambda__(x,y){return x.__getslice__(1,null,1)<y.__getslice__(1,null,1)});
display(fig);
self.Refresh();
pd.DataFrame(list(ds1.difference(ds2)));
df;
df;
test(1,2);
s.connect(tuple([host,port]));
tuple([[1,0,1]]);
var resp=urllib.request.urlopen(request);
self.driver=webdriver.Firefox();
var ax=fig.add_subplot(111,__kwargtrans__({polar:true}));
print(map(function __lambda__(x){return dict(zip(reader[0],x))},reader));
print(os.getpid());
resp.set_data(soup.prettify());
fig.multi_line(y_err_x,y_err_y,__kwargtrans__(__mergekwargtrans__({color:color},error_kwargs)));
c+=initval2;
np.array(b);
Math.floor(permutate(n,k)/permutate(k,k));
other_file.py;
sys.exit(app.exec_());
sorted(list(y.py_items()),__kwargtrans__({cmp:reverse_comparison}));
print(word[1],word[0]);
var __left0__=p.communicate(myfile.read());var output=__left0__[0];export var output_err=__left0__[1];
all(function(){var __accu0__=[];for(var c of bell)__accu0__.append(__in__(c,string.printable));return py_iter(__accu0__)}());
parser.print_help();
sum(function(){var __accu0__=[];for(var ele of a)__accu0__.append(ele[1]==1);return py_iter(__accu0__)}());
ax.set_position([.1,.1,.5,.8]);
list(skip(list(range(10)),__kwargtrans__({at_start:2,at_end:2})));
f1.close();
WSGIScriptAlias/myapp/code/wsgi/wsgi.py;
test.postmodel_set.all();
print(max(function(){var __accu0__=[];for(var node of path.nodes)__accu0__.append(node.y);return py_iter(__accu0__)}()));
self.setCentralWidget(self.view);
math.ceil(float(177)/10);
np.random.seed(0);
d1.x1-d2.x2.py_values;
numpy.array(function(){var __accu0__=[];for(var i=0;i<4;i++)__accu0__.append(Register());return __accu0__}());
var application=QtGui.QApplication(sys.argv);
print(i,list(csv.reader(source)));
setattr(e,key,val);
var result=np.empty_like(zeta);
chars.append(c);
var n=random.randint(1,1E3);
var b=function(){var __accu0__=[];for(var i=1;i<N;i++)__accu0__.append(indicies[elements==i]);return __accu0__}();
do_something_else(array[-1]);
p.stdin.write(answer);
self.setStrokeColorRGB(0,0,0);
set(a).intersection(b);
Image.open(filepath);
s[-1];
tuple([0,-64,208,0,-90,0,-80,0,0,-80,-48]);
plot([4,5,6]);
time.sleep(.1);
main();
var b=OrderedDict(sorted(a.py_items()));
np.set_printoptions(__kwargtrans__(original));
var h=[[0,0,1].__getitem__([0,0,0]).__getitem__([-1,0,0])];
var serializer=UserSerializer(__kwargtrans__({data:request.DATA}));
neurons.append(neuron);
var b=numpy.arange(5);
export var sat=im.cumsum(1).cumsum(0);
plt.show();
main();
self.toolbar.py_update();
hash(dict({}));
strat0.execute();
msg.attach(attachment);
latex_float(1E9);
bisect.bisect(l,55);
print(socket.gethostname());
A.__getslice__(np.where(~np.isnan(A))[0][0],null,1);
df.stack().str.py_split().str[-1].unstack();
server.serve_forever();
sys.stderr=os.devnull;
Path("./P2JSnippets.py").parent.parent;
collections.OrderedDict();
plt.show();
print(get_last_non_zero_index([]));
Response(serializer.data);
ax.set_xticks(xticks.__getslice__(1,-1,1));
var val=hex(val);
export var indices_nonzero=numpy.arange(len(array))[~bindices_zero];
var __left0__=CartesianToPolar(xedges.__getslice__(0,-1,1),yedges.__getslice__(0,-1,1));export var theta_edges=__left0__[0];export var r_edges=__left0__[1];
history.append(item);
app.mainloop();
export var response_doc=etree.fromstring(body,parser);
chardet_detector.close();
var now=utc.localize(datetime.datetime.utcnow());
numbers.append(map(int,line.py_split()));
dt+datetime.timedelta(__kwargtrans__({seconds:delta}));

pickle.dump(requests.utils.dict_from_cookiejar(session.cookies),f);
var list1=[1,1,1,0,0];
var merged=list(joinz(0,zusers.py_iter(),0,zratings.py_iter()));
f(1,np.pi);
var Z=itp(X,Y,__kwargtrans__({grid:false}));
var soup=BeautifulSoup(totstring);
export var images=function(){var __accu0__=[];for(var seq of images)for(var image of seq)__accu0__.append(image);return __accu0__}();
mod.__file__;
self.stopped=true;
points.append(tuple([x,y]));
plt.scatter(data1,data2,__kwargtrans__({c:colors,cmap:my_cmap}));
var data=conn.recv(4096);
self.setWindowFlags(self.windowFlags()|QtCore.Qt.FramelessWindowHint);
export var ser=pd.Series(np.random.normal(__kwargtrans__({size:100})));
export var pix=im.load();
options[0];
plt.yticks(__kwargtrans__({rotation:0}));
export var colors=hsv(np.linspace(0,1,len(kinds)));
norm.ppf(.5);
sine_list.append(math.sin(2*math.pi*freq*(x/frate)));
print(child.tag,child.attrib,child.text);
a.func();
var x=lst.py_pop();
print(ridge.coef_);
(function(){var __accu0__=[];for(var a of s)if(len(a)>0)__accu0__.append(a);return __accu0__})();
app.exec_();
hex(n&4294967295).__getslice__(0,-1,1);
d.py_update(dict(d));
hbar.config(__kwargtrans__({command:canvas.xview}));
B_p.to_csv(sys.stdout);
M.iloc[index][col];
Signal.send_robust(sender,__kwargtrans__(kwargs));
self.response.out.write(output.getvalue());
shapesMatch([tuple([0,0]),tuple([1,1]),tuple([0,2]),tuple([-1,1])],l_shape);
var __left0__=np.meshgrid(X,Y);var X=__left0__[0];var Y=__left0__[1];
sorted(randlist2(2E9,1E7,19E8));
plt.show();
unplugged();
export var pid=proc.pid;
entretien_send_email.send_mail(self.id);
printout();
time.sleep(1);
signal.signal(signal.SIGINT,function __lambda__(number,frame){return sys.exit()});
pprint.pprint(tup,__kwargtrans__({depth:6}));
tuple([c,b]);
db.init_app(current_app);
list(zip(lst.__getslice__(0,-1,1),lst.__getslice__(1,null,1)));
var py_name=models.CharField(__kwargtrans__({max_length:100}));
var tree=ElementTree.parse(StringIO.StringIO(output));
var __left0__=plt.plot([],[]);export var hl=__left0__[0];
new set([new set([formset])]);
plt.axis([xmin,xmax,ymin,ymax]);
var p=Process(__kwargtrans__({target:f,args:tuple([arr])}));
__init__.py;
tuple([a,b,c]);
fig.tight_layout();
print(df.to_latex());
var app=Flask(__name__);
dill.pickles(Foo.x);
oneone;
s.fillna(0).plot();
all(function(){var __accu0__=[];for(var [a,b]of zip_longest(gen_1,gen_2,__kwargtrans__({fillvalue:sentinel})))__accu0__.append(a==b);return py_iter(__accu0__)}());
ax.add_artist(ell);
var flt=float(random.randint(0,100));
py_case(re.search(pattern,st));
var idx=np.arange(n);
out.close();
python/Users/luca/Documents/python/gameover.py;
a[indices];
export var averaged=function(){var __accu0__=[];for(var [k,v]of list(summed.py_items()))__accu0__.append([k,v/len(folds)]);return dict(__accu0__)}();
db.test.remove(doc_id);
send_email();
game.py_update();
(rollingcor.sum(__kwargtrans__({skipna:0})).sum(__kwargtrans__({skipna:0}))-n)/2/n;
pickle.dump(dict2,fp);
export var my_objects=[];
set(l1)|set(l2);
im.set_clip_path(clip_path);
print(line);
0<x&x<1;
export var constr=[];
self._points=[];
export var local_tz=tzlocal.get_localzone();
var __except0__=KeyError(key);__except0__.__cause__=null;throw __except0__;
fh.setLevel(logging.DEBUG);
newlist.append(d);
var trainer=deepbelief.DeepBeliefTrainer(net,__kwargtrans__({dataset:ds}));
var ax=fig.add_subplot(111);
var root=tk.Tk();
pickle.dump(score,file);
df.ix.__getitem__([tuple([0,null,1]),2]);
image.save(self.get_thumbnail_path());
f.write(something);
ax.set_xlim(0,X);
sum(function(){var __accu0__=[];for(var word of str1.py_split())__accu0__.append(i==word);return py_iter(__accu0__)}());
imresize(np.ones(tuple([1E3,1E3])),tuple([100,100])).shape;
export var len1=math.hypot(x1,y1);
a.set_xlim(0,4*pi);
(function(){var __accu0__=[];for(var i of range(0,len(x),step))__accu0__.append(x.__getslice__(i,i+step,1));return __accu0__})();
print(function(){var __accu0__=[];for(var b of zip(l,inner))__accu0__.append(list(b));return __accu0__}());
ax.yaxis.set_major_formatter(ticker.FuncFormatter(myLogFormat));
export var tpool=ThreadPool(__kwargtrans__({processes:4}));
df.info();
self.crawler.engine.crawl(self.create_request(),spider);
smtp.sendmail(send_from,send_to,msg.as_string());
httplib.HTTPConnection.connect(self);
sorted(numbers)[-2];
plt.figure(__kwargtrans__({figsize:tuple([4.5,2.5])}));
print(D.x.value);
themsg.attach(msg);
item;
chain.from_iterable(function(){var __accu0__=[];for(var r=0;r<len(s)+1;r++)__accu0__.append(combinations(s,r));return py_iter(__accu0__)}());

var ax1=fig.add_subplot(111);
urllib.request.urlopen(request);
func(...args,__kwargtrans__(kwargs));
export var step=datetime.timedelta(__kwargtrans__({days:1}));
p.start();
var start_date=start_date.py_replace(__kwargtrans__({tzinfo:local_tz}));
pylab.show();
os.remove(path);
var img=np.uint8(np.random.random(tuple([720,1280]))*256);
win.set_decorated(false);
var browser=webdriver.Firefox();
var matches=regex.findall(my_str);
sess.run(apply_transform_op);
itertools.chain(py_iter(self.py_items.py_values()),py_iter(self.people.py_values()));
ax.plot(list(range(10)));
var arr=np.vstack(tuple([arr,np.array([4,5,6])]));
var G=nx.Graph();
var soup=BeautifulSoup(html_page);
sum(function(){var __accu0__=[];for(var line of sys.stdin)__accu0__.append(__mod__(int(line),k)==0?1:0);return py_iter(__accu0__)}());
pythoncom.CoInitialize();
all_data.shape;
root.withdraw();
plt.plot(y);
var ax=plt.subplot(gs.__getitem__([i,j]));
db.delete(q.fetch(200));
print(np.allclose(res1,res2));
fig.canvas.draw();
getattr(self.cp,attr);
export var alltests=unittest.TestSuite([fast,slow]);
engines.append(engine);
self.finish();
self.tk.config(__kwargtrans__({menu:self.menu}));
var new_list=copy.copy(old_list);
print(firstMatch.group());
s.setsockopt(socket.IPPROTO_IP,socket.IP_HDRINCL,1);
csvout.close();
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
py_typeof(s);
a.max(__kwargtrans__({axis:0}));
self.setCentralWidget(self.web_view);
writer.writeheader();
fig.subplots_adjust(__kwargtrans__({wspace:.05}));
fs.noteoff(0,67);
var x=2;
plt.show();
myQuery.Availability;
tar.extractall(path,get_members(tar,args[1]));
A.__setslice__(0,null,null,function(){var __accu0__=[];for(var sub of A)if(st.issubset(sub))__accu0__.append(sub);return py_iter(__accu0__)}());
var reader=csv.reader(f);
velcro.right(180);
do_something(val);
word_list.py_sort(__kwargtrans__({key:function __lambda__(i){return i[0].lower()}}));
export var lowdiag=[.5]*(n-1)+[0]*2;
odeint(func,y0,t,...list1);
print(Second_row_first_column.strip()+Second_row_second_column.strip());
var l=sorted(list(d.py_items()),__kwargtrans__({key:function __lambda__(x){return x[1]},reverse:true}));
p.start();
df;
ax.xaxis_date();
np.sin(y*x)+z;
var points=np.random.randint(0,5,tuple([10,2]));
list(chain.from_iterable(function(){var __accu0__=[];for(var w of input_list)__accu0__.append(pattern.py_split(w));return py_iter(__accu0__)}()));
print(f.text);
s.setsockopt(SOL_SOCKET,SO_BROADCAST,1);
export var curs=conn.cursor();
pygame.event.pump();

s[~s.index.duplicated()];
plt.axis([0,10,0,10]);
compressor.close();
var n=a.shape[0];
(function(){var __accu0__=[];for(var [k1,k2]of zip(chain.from_iterable(dge),nde))__accu0__.append(tuple([k1[0],k1[1],k2]));return __accu0__})();
cv.Rectangle(color_image,pt1,pt2,cv.CV_RGB(255,0,0),1);
sys.exit(0);
max(zip(function(){var __accu0__=[];for(var item of set(x))__accu0__.append(x.count(item));return py_iter(__accu0__)}(),set(x)));
list(range(int(toks[0]),int(toks[1])+1));
f.close();
app.MainLoop();
print(parser.parse_args());
print(py_name,value);
self._worker_handler.start();
vbox.add(label);
(function __lambda__(a,b){return tuple([a+1,b*1])});
demangled.__getslice__(0,-1,1);
model.train_on_batch(state_action_vector,target);
ax1.set_xlim(0,60);
self.assertEqual(a,b);
numpy.finfo(numpy.longdouble);
var screen=pygame.display.set_mode(tuple([500,500]));
int(round(5678,-1));
print(df.eq(df.iloc[0]));
sorted(set(range(start,end+1)).difference(L));
print(combinedRDD.collect());
data+=proc.stdout.read();
server.start();
plt.tight_layout();
export var surfc=ax.plot_trisurf(Xc,Yc,Zc,__kwargtrans__({cmap:cm.jet,linewidth:.2}));
var html=urlopen(url).read();
py_keys.insert(i,k);
np.floor(series);
var gray_image=cv2.cvtColor(image,cv2.COLOR_BGR2GRAY);
(function(){var __accu0__=[];for(var x=0;x<len(lists[0]);x++)__accu0__.append(function(){var __accu1__=[];for(var l of lists)__accu1__.append(l[x]);return __accu1__}());return __accu0__})();
mainloop();
tst.main(__all__);
(function(){var __accu0__=[];for(var k of set(listanum+listbnum))__accu0__.append([k,[da.py_get(k,[]),db.py_get(k,[])]]);return dict(__accu0__)})();
s.setsockopt(socket.SOL_TCP,socket.TCP_KEEPCNT,5);
print(re.findall(pattern,line));
pbar.finish();
tuple([image.swapaxes(0,1),out]);
print(nums.mean(__kwargtrans__({axis:1})));
get_value(d[l[0]],l.__getslice__(1,null,1));
var y=np.random.rand(m,n);
out.close();
logger.addHandler(handler);
print(new_pressures);
print(f());
nosetests-v;
remove_even([4,5,4,7,9,11]);
var response=urllib.request.urlopen(req);
Label.__init__(self,master,__kwargtrans__({image:self.frames[0]}));

d[a].append(b);
x.__getslice__(0,null,2);
self.n+=1;
wr.writerows(function(){var __accu0__=[];for(var [k,v]of list(od.py_items()))__accu0__.append([k]+v);return py_iter(__accu0__)}());
window.show_all();
df.mean();
export var final_list=sorted(pos_list)+sorted(neg_list);
pickle.dump(saved_data,outfile,__kwargtrans__({protocol:pickle.HIGHEST_PROTOCOL}));
datetime.datetime(...dtuple.__getslice__(0,6,1));
s.compute();
var list_1=function(){var __accu0__=[];for(var [n,i]of enumerate(list_1))if(!__in__(n,index_list))__accu0__.append(i);return __accu0__}();
your_csv_file.close();
var book=xlwt.Workbook();
df.groupby(Math.floor(np.arange(len(df))/2)).mean();
ax.add_line(line);
data.sum();
d[key]=value;
button.pack();
var p=Pool(5);
testdataframe1.plot(__kwargtrans__({style:styles1,ax:ax}));
list(set(a)-set(b)).__getslice__(0,100,1);
plt.figure();
export var density=scipy.stats.gaussian_kde(scatterpoints);
ax.set_ylim(-.5,4.5);
b.__getitem__([tuple([0,null,1]),[true,true,true,false,false]]);
pd.concat(function(){var __accu0__=[];for(var col of cols)__accu0__.append(df[col].apply(pd.Series));return __accu0__}(),__kwargtrans__({axis:1,py_keys:cols}));
writer.writerow(row);
var list_2=function(){var __accu0__=[];for(var [n,i]of enumerate(list_2))if(!__in__(n,index_list))__accu0__.append(i);return __accu0__}();
events.append([]);
e.findall(data);
add_patch(axes[0],__kwargtrans__({alpha:.2,rasterized:false}));
zk.start();
ax.add_patch(polygon);
var df=pd.read_csv(StringIO(text),__kwargtrans__({parse_dates:[0]}));
var id=Column(Integer,__kwargtrans__({primary_key:true}));
results.append(pool.apply_async(foo,__kwargtrans__({args:tuple([words[i],numbers[i]])})));
list(range(item.start||0,item.stop||len(self),item.step||1));
window.show();
string.ascii_letters.__getslice__(0,random.randint(1,50),1).title();
new set([new set([instance.key().py_name()])]);
app.mainloop();
time.sleep(.25);
Base.metadata.create_all();
export var processed_images=tf.map_fn(process_fn,images);
sorted(results);
var df=df.unstack();
Tkinter.Label(root,__kwargtrans__({image:imgtk})).pack();
self.show();
res.extend([entry.__getslice__(1,null,1),entry.__getslice__(0,1,1)]);
np.array(a)-np.array(b);
user.save();
np.isnan(np.nan);
plot_selected.yaxis.set_ticks(np.arange(0,1.1,.2));
self.wb.save(self.dest);
proc.join();
var ax1=fig.add_subplot(111);
fig.subplots_adjust(__kwargtrans__({right:.75}));
set(perms);
int(round(5678,-2));
var x=numpy.random.uniform(1.5);
self.Bind(wx.EVT_LEFT_UP,self.OnClick);
export var orig_stdout=sys.stdout;
var points=np.random.randint(0,5,tuple([N,2]));
self.thisptr.calculate();
self.spinbox.valueChanged.connect(self.worker.update_value);
var d=dict(function(){var __accu0__=[];for(var an_object of object_list)__accu0__.append(tuple([an_object.py_name,an_object]));return py_iter(__accu0__)}());
export var autosummary_gerenerate=true;
var filename=sys.argv[1];
f.close();
(function(){var __accu0__=[];for(var full of A)__accu0__.append(any(function(){var __accu1__=[];for(var last of B)__accu1__.append(full.endswith(last));return py_iter(__accu1__)}())?1:0);return __accu0__})();
np.allclose(function(){var __accu0__=[];for(var x of b)__accu0__.append(np.where(a<=x)[0][0]);return __accu0__}(),np.digitize(b,a));
ax.set_xlim(0,1);
var n=__mod__(n,len(strg));
var out=np.where(mask,np.nan,a);
print(i,chr(i));
session.commit();
gzip_obj.read();
var result=timedelta1+timedelta2;
export var first_name=models.CharField(__kwargtrans__({max_length:50}));
x[index];
sys.exit();
QGraphicsTextItem.mouseMoveEvent(self,event);
user.groups.add(group);
t.start();
Math.pow(x,2)+Math.pow(y,2)+Math.pow(z,2)<Math.pow(radius,2);
R_mean1.append(R);
var s=s.lower();
var output=np.array([1,1,5]);
output.writeframes(data[1][1]);
time.sleep(.1);
var ax=plt.subplot(gs.__getitem__([tuple([0,null,1]),tuple([0,null,1])]));
plt.subplot(121);
var app=Flask(__name__);
ax.tick_params(__kwargtrans__({labelsize:8}));
print(x);
object.__getattribute__(self,py_name);
wx.version();
var c=f.read(1);
print(fig.axes[0]);
self.__dict__.py_update(d);
self.q.join();
print(foo.__getitem__([tuple([1,5,1]),1,2]));
self.wsgi_app(environ,start_response);
sub_cmd.cmdloop();
test();
df[idx];
nosetests- -all-modules;
var res=dict(function(){var __accu0__=[];for(var t of pairs)__accu0__.append(tuple([t,nt(...t)]));return __accu0__}());
data.py_sort(__kwargtrans__({key:get_score,reverse:true}));
sys.exit(app.exec_());
df[df.b.isnull()];
(function(){var __accu0__=[];for(var line of f)__accu0__.append(int(line));return __accu0__})();
im2.set_xdata(np.arange(n));
dynamic(py_name,bases,attrs);
export var Value2=Baz;
var query=query.filter(and_(...filter_group));
export var fulldict=function(){var __accu0__=[];for(var i=0;i<1E3;i++)__accu0__.append([i,i]);return dict(__accu0__)}();
indices[field][key].add(i);
plt.show();
py_new.py_setdefault(i,[]).extend(j);
print(list(function(){var __accu0__=[];for(var x of words)if(len(x)>average)__accu0__.append(x);return __accu0__}()));
self.write(data);

export var outeropt=outer_result.py_get();
time.sleep(1-elapsed);
self.mainframe.rowconfigure(1,__kwargtrans__({weight:1}));
all_pairs+=function(){var __accu0__=[];for(var [nA,nB]of itertools.product(listA,listB))__accu0__.append(tuple([tuple([nA,0]),tuple([nB,1])]));return __accu0__}();
df.columns=ts_clip.iloc.__getslice__(0,len(df.columns),1).index.time;
value;
tuple([item,value]);
text.pack(__kwargtrans__({expand:1,fill:BOTH}));
print(settings.BASE_DIR);
layout.itemAt(i).widget().deleteLater();
areas.apply(foo);
sum(l)+.529964086141668;
var averaged=function(){var __accu0__=[];for(var k of folds[0])__accu0__.append([k,sum(function(){var __accu1__=[];for(var d of folds)__accu1__.append(d[k]);return py_iter(__accu1__)}())/len(folds)]);return dict(__accu0__)}();
scipy.misc.factorial(temp);
plt.bar(indexes,py_values,width);
(function __lambda__(a,b){return tuple([a+1,b*1])});
app.exec_();
w.GetWindowText(w.GetForegroundWindow());
sys.exit(-1);
plt.show();
.0054===.0054;
self.output(.1,Op.setlinewidth);
pd.get_dummies(Math.floor(df.Knownvalue/10));
dd.min(__kwargtrans__({axis:1}));
foo.py_sort();
var parser=argparse.ArgumentParser();
var im=A2.shape[1]-1-np.argmax(A2.__getitem__([tuple([0,null,1]),tuple([0,null,-1])])<0,__kwargtrans__({axis:1}));
resp.raise_for_status();
preincrement(i);
self.setLayout(self.layout);
complex(0,1)*numpy.inf*1;
export var intersection=queryset1&queryset2;
export var user_input=user_input.strip().lower();
ax0b.get_yaxis().get_offset_text().set_size(10);
ax0c.get_yaxis().get_offset_text().set_size(10);
var df=pd.DataFrame(data);
potential(abs(b[np.triu_indices_from(b,1)])).sum();
linesamples.add(int(4*i+1));
s.bind(tuple([HOST,PORT]));
link.allow_tags=true;
var my_array=my_array.reshape(nrows,ncols);
var root=tk.Tk();
w.close();
isinstance(d,dict);
dic[mygroup].append(entry);
export var conj=rdflib.ConjunctiveGraph();
var r=s.post(url,__kwargtrans__({data:data}));
HypotheticalBranch(0,0,0);
time.sleep(.01);
var pool=Pool();
pdb.set_trace();
cv2.waitKey();
var G=nx.Graph();
(function(){var __accu0__=[];for(var u of self.custom_fields)if(self.cleaned_data[str(u.id)])__accu0__.append(u);return __accu0__})();
row.insert(0,a);
G.add_node(1);
(function(){var __accu0__=[];for(var y of l)if(len(y)<4)for(var x of y)if(isinstance(x,int))__accu0__.append(x);return __accu0__})();
random.shuffle(order);
widget.show();
obj.__class__=cls;
frame.set_linewidth(0);
dir(obj);
-np.array(avgDists).argsort().__getslice__(0,n,1);
toc2();
print(repr(s));
print(df1.columns.unique());
var __left0__=flatten(v);var a=__left0__[0];var b=__left0__[1];var c=__left0__[2];var d=__left0__[3];var e=__left0__[4];var f=__left0__[5];
i.close();
var line=file.readline();
pp(list(map(list,zip(...grid))));
main();
this_row.append(s.cell_value(row,col));
plt.ylim(-20,60);
your_csv_file.close();
df;
self.set_positions(tuple([xs[0],ys[0]]),tuple([xs[1],ys[1]]));
list(intersect(...postings));
var x=np.array(x);
Base.Foo(self);
db.session.add(entry);
export var html_use_index=true;
var x=np.array([.1,.2,np.nan,.4,.5]);
ax1.plot(np.array([1,5])*i,__kwargtrans__({label:i}));
var ynew=csc_matrix(tuple([data,tuple([rows,cols])]),__kwargtrans__({shape:tuple([N,M]),dtype:dtype}));
pdb.set_trace();
var __left0__=divmod(x,y);var q=__left0__[0];var r=__left0__[1];
s.connect(tuple([HOST,PORT]));
matplotlib.pyplot.close(f);
var sc=SparkContext();
export var allkey=set().union(...alldict);
(function(){var __accu0__=[];for(var c of s)if(c.isdigit())__accu0__.append(int(c));return __accu0__})();
var screen=pygame.display.set_mode(tuple([640,480]));
os.mkfifo(path);
self.lock.acquire();
ax1.plot(x,y);
var d=function(){var __accu0__=[];for(var [i,x]of enumerate(lis))__accu0__.append([x,i]);return dict(__accu0__)}();
foo.py;
print(len(list1));
var data=np.genfromtxt(urllib.request.urlopen(url),__kwargtrans__({skip_header:1,skip_footer:4}));
(function(){var __accu0__=[];for(var i=0;i<5;i++)__accu0__.append(i*i);return py_iter(__accu0__)})();
asyncio.get_event_loop().run_until_complete(start_server);
var app=QtGui.QApplication(sys.argv);
var x=tab.query();
var y_pred=pipe_lrSVC.predict(X_test);
np.maximum.accumulate(idx,__kwargtrans__({axis:1,out:idx}));
celery.start();
np.array(tmp).reshape(tuple([len(longlist),len(longlist[0])]));
QtGui.QItemDelegate.__init__(self,parent);
m2[np.asarray(m2.__getitem__([tuple([0,null,1]),1])>10).flatten()];
strncpy(addr.sun_path,UD_SOCKET_PATH,sizeof(addr.sun_path)-1);
var soup=BeautifulSoup(data);
mylist.remove(max(mylist));
p.parse_args([]);
var reader=csv.DictReader(f);
pprint.pprint(combs);
add_cols(...x.T);
painter.rotate(-angle);
list(d.py_items())[1];
self.canvas.config(__kwargtrans__({scrollregion:self.canvas.bbox(ALL)}));
ax.xaxis.get_minorticklines();
modinv(exp,(p-1)*(q-1));
export var df5=pn5.to_frame();
export var csv_row=line.py_split();
var response=urllib.request.urlopen(url,data,headers);
sns.kdeplot(x,__kwargtrans__({ax:ax2}));
f.seek(-len(os.linesep),os.SEEK_END);
self.changeLayout(QtCore.Qt.Vertical);
list(set(x)&set(y));
print(format_float(15E5));
var A=A[np.ix_(L)];
self.assertTrue(mock_bar.called);
p.start();
wav_file.close();
sum(function(){var __accu0__=[];for(var num=start;num<end;num++)__accu0__.append(is_monotonic(num,reverse));return py_iter(__accu0__)}());
len(set(a)-set(b));
random.sample(a,len(a)+1);
l.append(row[i]);
pyplot.show();
thread.start();
Book.create_table();
print(tuple([a,b,c,d]));
var app=QtGui.QApplication(sys.argv);
export var normX=np.sqrt(ssX);
sess.run(init_op);
logging.basicConfig(__kwargtrans__({stream:sys.stdout,level:logging.DEBUG}));
var cursor=connection.cursor();
df.sum();
my_module.__file__;
pdb.set_trace();
file.save();
self._thread.start();
button.pack();
(function(){var __accu0__=[];for(var line of f)__accu0__.append(int(line));return __accu0__})();
df;
py_iter(List);
channel.queueDeclarePassive(queueName).getMessageCount();
var ssh=paramiko.SSHClient();
ax.set_yticks([0,.5,1]);
data.append(fileData);
threading.Thread.__init__(self);
var data=np.random.uniform(-1,1,fs);
print(browser.title);
max(-15,0);
blank_image.paste(image64,tuple([0,0]));
int(time.mktime(d.timetuple()));
p.start();
var soup=BeautifulSoup.BeautifulSoup(your_data);
foo.start();
yaml.load(s);
[5,6,10];
vc.release();
var text=open(filename).read();
plt.plot(list(range(10)));
sys.stdout.flush();
np.array(function(){var __accu0__=[];for(var sym of syms)__accu0__.append(float(sym.subs(all_dict)));return __accu0__}());
some_fun();
meta.py;
export var section_sums=mask.reshape(-1,20).sum(1);
var cursor=db.cursor();
find_chamber_discard2(locals());
dict(__kwargtrans__({const1:const1,const2:const2}));
var users=User.objects.all();
writer.writerow(py_next(reader));
self.ui.gridLayout.py_update();
readFileObject.close();
bin(-4);
print(sum(s)/len(s));
set(l1).intersection(l2);
a_string.encode(encoding);
ranges.append(tuple([4,10]));
dot(Phi,R);
(function(){var __accu0__=[];for(var sublist of list_)if(sublist[1]!=1)__accu0__.append(sublist);return __accu0__})();
my_data.append(line);
file.seek(0);
pygame.sprite.spritecollide(hook,fish,false,pygame.sprite.collide_circle);
time.sleep(1);
d+=timedelta(__kwargtrans__({days:inc}));
thread.start();
self.ax.set_autoscaley_on(true);
app.exec_();
print(msg.get_payload());
var __left0__=tuple([[],[]]);var a=__left0__[0];var b=__left0__[1];
np.vstack([a,b]);
a.__getslice__(0,1,1)[0]=4;
var tuples=function(){var __accu0__=[];for(var [word,freq]of D.py_items())__accu0__.append(tuple([freq,word]));return __accu0__}();
x+1;
a.__setitem__([tuple([0,null,1]),1],-1);
print(numpy.array_equal(new_data,output));
client.connect(server,port,user,password);
canvas.itemconfigure(cwid,__kwargtrans__({width:wi,height:hi}));
self.button.grid(__kwargtrans__({row:1,column:0,sticky:W}));
sys.stdin=sys.__stdin__;
rdd.groupByKey().mapValues(function __lambda__(x){return sum(x)/len(x)}).collect();
print(scipy.optimize.brentq(f,0,100,__kwargtrans__({args:tuple([77/27,1,1,10])})));
var __left0__=tuple([int(a),int(b)]);var a=__left0__[0];var b=__left0__[1];
var df=pd.DataFrame(delimit);
var t=datetime.timedelta(__kwargtrans__({seconds:1}));
export var queens=function(){var __accu0__=[];for(var i=1;i<9;i++)__accu0__.append(tuple([i,random.randint(1,8)]));return __accu0__}();
cv.SetCaptureProperty(camcapture,cv.CV_CAP_PROP_FRAME_HEIGHT,720);
a.newMethod=newMethod.__get__(a,A);
thread.start();
file.readline();
df.iat.__getitem__([0,0]);
widget.setLayout(layout);
Thread(__kwargtrans__({target:recv})).start();
tuple([]);
func();
len(max(tup,__kwargtrans__({key:len})));
logger.setLevel(level);
df.plot(__kwargtrans__({ax:axs,alpha:.7}));
export var next_num=cur.fetchone()[0];
export var session_id=hismgr.get_last_session_id();
var data=cursor.fetchone();
(function(){var __accu0__=[];for(var i=0;i<len(uo);i++)__accu0__.append(gu(i));return __accu0__})();
template.render(context);
var a=numpy.load(memfile);
dir(__builtins__);
result.extend(literal_eval(line.strip()));
b.__getitem__([sort_indices,static_indices[1],static_indices[2]]);
sample.save();
export var divisibleBySeven=function(){var __accu0__=[];for(var num of inputList)if(meetsCondition(num))__accu0__.append(num);return __accu0__}();
print(d[keyList[i-1]]);
export var fooarray=numpy.zeros(tuple([N,M]));
deletep_list[idx];
var line=proc.stdout.readline();
zlib.decompress(inf,16+zlib.MAX_WBITS);
ecb();
df.iloc.__getslice__(last-2,last+1,1);
var ax=plt.subplot(111);
print(fmax,pinf,ninf,fnan);
fout.write(f.getvalue());
export var chromosome2=[1,1,2,1,0];
f[i]+=1;
l[1]=5;
G.add_nodes_from(L4);

var my_new_list=list(my_set);
m2.__getitem__([tuple([0,null,1]),1])>10;
var data=np.vstack(tuple([data,(np.ones(data.shape[0])*num).reshape(-1,1)]));
df_two.show();
main();
foo.save();
hops.insert(0,response.geturl());
pygame.mixer.music.load(soundfile);
var driver=webdriver.Chrome();
print(binascii.hexlify(x));
user.save();
list_one.insert(2,list_two);
sizer.Add(self.grid,1,wx.EXPAND);
no_vow(seq,index+1);
var image=cv2.imread(imagepath);
export var dirname1=os.path.basename(dir);
writer.commit();
unittest.TextTestRunner(__kwargtrans__({verbosity:2})).run(suite);
points[index];
os.fdopen(fd,...args,__kwargtrans__(kwargs));
(function(){var __accu0__=[];for(var x of pattern.py_split(s))if(x)__accu0__.append(x);return __accu0__})();
plt.show();
var df=pd.DataFrame(list(cursor));
var sizer=wx.BoxSizer(wx.VERTICAL);
export var hsv=cv2.cvtColor(img,cv2.COLOR_BGR2HSV);
self.root.after(1E3,self.circle);
export var sorted_d=OrderedDict(zip(sorted_keys,function(){var __accu0__=[];for(var k of sorted_keys)__accu0__.append(d[k]);return __accu0__}()));
obj._meta.concrete_model._meta.model_name;
var mask=np.isnan(arr);
zip_longest(...args,__kwargtrans__({fillvalue:fillvalue}));
z.close();
window.setGeometry(0,0,400,200);
print(min(function(){var __accu0__=[];for(var i of l)for(var j of l)__accu0__.append(tuple([f(i,j),i,j]));return py_iter(__accu0__)}()));
df1.info();
b.append([begin,end]);
server.shutdown();
sys.exit(app.exec_());
act.triggered.connect(self.on_triggered);
ax.plot_surface(x_surf,y_surf,z_surf,__kwargtrans__({cmap:cm.hot,alpha:.2}));
L.py_sort(function __lambda__(x,y){return cmp(x.py_name,y.py_name)||-cmp(x.year,y.year)});
arrows(0,0,1,1);
var lines=function(){var __accu0__=[];for(var line of f)if(line.strip())__accu0__.append(line);return py_iter(__accu0__)}();
(function(){var __accu0__=[];for(var x of lst)for(var y of isinstance(x,tuple)?x:tuple([x]))__accu0__.append(y);return __accu0__})();
sys.exit();
var dt=datetime.fromtimestamp(ts,tz);
X[np.ix_(np.where(mask1)[0],np.where(mask2)[0])];
ax.set_xticks(list(range(len(g))));
process.terminate();
shutil.copyfile(src,dest);
datetime.timedelta(__kwargtrans__({seconds:seconds}));
data[np.isnan(data)]=dfrand[np.isnan(data)];
c.py_sort(__kwargtrans__({axis:1}));
func2(innerfunc);
var parts=splitparts.py_split(match.group(2));
socket.inet_pton(socket.AF_INET,address);
p[pair[1]]+=1;
y.shape.eval();
var __left0__=ax1.get_legend_handles_labels();var handles=__left0__[0];var labels=__left0__[1];
self.setLayout(hbox);
df1.py_values/df2[df1.columns].py_values;
ax.plot([2,2,2]);
log.setLevel(logging.INFO);
column(A,1);
var X=np.zeros(tuple([100,100,100]));
export var setup2=dict(setup1,__kwargtrans__({param1:val10,param2:val20}));
a2.ravel().__setslice__(0,null,null,np.array(ll));
show_svg();
var lines=f.readlines();
sizer.Add(self.ultimateList,1,__kwargtrans__({flag:wx.EXPAND}));
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
var __left0__=set(function(){var __accu0__=[];for(var sl of L)__accu0__.append(sum(sl));return py_iter(__accu0__)}());var n=__left0__[0];
heapq.heappush(heap,tuple([-prod,n,n]));
var ax1=fig.add_subplot(211);
time.sleep(1);
Decimal(.5);
print(x.py_name,x.hometown.py_name,x.hometown.id);
sys.getdefaultencoding();
sum(function(){var __accu0__=[];for(var f of funcs)__accu0__.append(f(x));return py_iter(__accu0__)}());
self.modules;
a[a<0]+=1;
var __left0__=np.histogram(a,__kwargtrans__({bins:bins}));var hist=__left0__[0];export var bin_edges=__left0__[1];
timeit(hugeequal1,hugeequal2,1E4);
var output=p.communicate(input)[0];
b[i]=a[i];
solve(M*x+N*y,x);
deletemylist.__getslice__(0,2,1);
plt.show();
var csv_writer=csv.DictWriter(csv_file,headers);
var soup=BeautifulSoup(urllib.request.urlopen(url).read());
pprint.pprint(result);
df.min(1);
var resp=br.open(url);
export var pw=getpass.getpass();
root.rowconfigure(0,__kwargtrans__({weight:1}));
s.connect(tuple([HOST,PORT]));
doctest.testmod();
inspect.getgeneratorstate(gen);
locals().py_update(mydict);
var avg=tot/((data.shape[0]-1)*data.shape[0]/2);
np.dot(b,a);
df.drop(cols,__kwargtrans__({inplace:true,axis:1}));
text.py_split(a)[-1].py_split(b)[0];
pool.join();
(function(){var __accu0__=[];for(var s of maximal)__accu0__.append(tuple([s,s1.index(s),s2.index(s)]));return __accu0__})();
(function(){var __accu0__=[];for(var p of itertools.product(x,__kwargtrans__({repeat:2})))__accu0__.append(p);return __accu0__})();
pdb.Pdb.__init__(self,__kwargtrans__({nosigint:true}));
p2.communicate();
var list=function(){var __accu0__=[];for(var i of stuff)__accu0__.append(i);return __accu0__}();
sys.exit(app.exec_());
newlst.append(int(i));
fmt.format(__kwargtrans__(d));
list_one.extend(list_two);
export var ds_dt=np.sqrt(dx_dt*dx_dt+dy_dt*dy_dt);
earth.circle(150,2);
sys.stdout.write(line);
os.symlink(os.path.realpath(sys.argv[0]),exe_install_path);
output[0];
self._list[i][1];
self.set_picture(picture);
var data=bytearray(f.read());
py_metatype.__init__(cls,py_name,bases,d);
sys.stdout.flush();
var nums=list(range(1E6));
var image=image.resize(tuple([width_new,height_new]));
var result=function(){var __accu0__=[];for(var sublist of l)for(var item of sublist)__accu0__.append(item);return __accu0__}();
var new_dict=defaultdict(dict);
var b=tf.add(a,a).eval();
ax.set_ylim([-2,2]);
var s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);
var __left0__=cv2.getOptimalNewCameraMatrix(mtx,dist,tuple([w,h]),1,tuple([w,h]));export var newcameramtx=__left0__[0];export var roi=__left0__[1];
scipy.stats.hypergeom.sf(0,N,M,Q);
s.prompt();
info.setLevel(logging.INFO);
btn.grid(__kwargtrans__({column:1,row:1}));
func();
export var fake_datetime=flexmock(__kwargtrans__({now:function __lambda__(){return datetime(__kwargtrans__({year:2012,month:12,day:12}))}}));
f.seek(55);
var found=__in__(word,file.read().py_split());
isinstance(x,X);
plt.figure(i);
root.mainloop();
timer2.start();
main();
var fig=plt.figure();
print(root.winfo_geometry());
var gray=cv2.cvtColor(img,cv2.COLOR_BGR2GRAY);
ax.set_extent([4,16,47,56],ccrs.PlateCarree());
self[key].append(value);
draw.text(tuple([10,10]),unicode_text,__kwargtrans__({font:unicode_font,fill:font_color}));
os.kill(int(processId),signal.SIGTERM);
df;
tmp.append(chr(d));
var __left0__=np.meshgrid(xedges.__getslice__(0,-1,1),yedges.__getslice__(0,-1,1));export var xedges=__left0__[0];export var yedges=__left0__[1];
mylist.__setslice__(0,null,null,[]);
print(priv.private_decrypt(ctxt,RSA.pkcs1_oaep_padding));
Person.query().filter(Person.guilds==self.key);
(function(){var __accu0__=[];for(var s of function(){var __accu1__=[];for(var s of strings)__accu1__.append(s.py_split());return py_iter(__accu1__)}())__accu0__.append(tuple([s[0],s[1]]));return __accu0__})();
path_list[0]=path_list[0][0];
print(i,j,k,v);
np.ma.MaskedArray(x,mask);
plt.plot(x,y);
(function(){var __accu0__=[];for(var i of d)__accu0__.append(i.value);return __accu0__})();
var fig=plt.figure();
var b=do_something(a,b);
var x=[true,true,true,true];
self.window.py_clear();
sys.exit(app.exec_());
print(root,dirs,files);
self.f.writeframes(output);
logging.getLogger().addHandler(handler);
print(key,sum(d[key])/len(d[key]));
process.start();
export var zip_safe=false;
mean(arr.__getslice__(k+1,n-k,1));
hax2.set_position([.1,.1,.8,.8]);
plt.legend();
var a=np.array([1,2,6,2,1,7]);
do_the_stuff(key,value);
sheet1.write(i,1,e);
f.seek(-4,2);
os.setsid();
var model=model.fit(X_train,y_train);
logger.addHandler(handler);
br.load(url);
min(allowedList,__kwargtrans__({key:sortedList.index}));
var __left0__=plt.subplots(__kwargtrans__({nrows:4,sharex:true}));var fig=__left0__[0];var axes=__left0__[1];
var m=re.match(regex,line);
s.bind(tuple([host,port]));
var ax1=plt.subplot2grid(tuple([1,1]),tuple([0,0]));
var data=[];
worksheet.write(row,col+1,item);
var my_date=date.today()-timedelta(__kwargtrans__({days:days_to_substract}));
datetime.datetime(t.year,t.month,t.day);
np.arange(10).__getslice__(10,null,-1);
var soup=bs4.BeautifulSoup(YOUR_CONTENT);
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
time.sleep(1);
host.set_xlim(0,2);
plt.setp(labels,__kwargtrans__({rotation:0}));
self.root.mainloop();
var foo=bar(foo);
var browser=mechanize.Browser();
gb1.assign_to_a([1,2]);
plt.close(fig);
var df2=pd.concat([df]*1E4);
df.groupby(__kwargtrans__({level:0})).cumcount();
print(os.ttyname(sys.stdin.fileno()));
bins.append(int(df.val1.max()+1));
var y=np.concatenate(tuple([firstvals,y,lastvals]));
var __left0__=p.communicate();var output=__left0__[0];var err=__left0__[1];
plt.quiver(X,Y,Z2,__kwargtrans__({width:.01,linewidth:1}));
v.iloc[-1];
var parser=etree.XMLParser(__kwargtrans__({schema:oaischema}));
plot_events(x,y);
sys.exit();
var b=a.tolist();
export var mytext=self.textEdit.toPlainText();
info[0][0]==1;
log.setLevel(logging.ERROR);
sessionmaker(__kwargtrans__({bind:self.engine,autocommit:true}));
all(function(){var __accu0__=[];for(var c of e.getchildren())__accu0__.append(recursively_empty(c));return py_iter(__accu0__)}());
var df=pd.concat([df]*1E3,__kwargtrans__({axis:1}));
var form=MyModelForm(__kwargtrans__({instance:my_record}));

var req=urllib.request.Request(url,data);
(data.T-vector).T;
var ax=fig.add_subplot(1,1,1);
np.random.seed(0);
var ts=pd.Series(zip(...my_list));
h.funcB();
h.funcC();
distance[0][0][0]=1;
df[2].plot(__kwargtrans__({ax:axes.__getitem__([1,0])}));
export var comp=np.dstack(complist).sum(-1);
var data=self.request.recv();
print(my_string.format(__kwargtrans__(d)));
var matched=function(){var __accu0__=[];for(var c of cmds)if(c.startswith(s))__accu0__.append(c);return __accu0__}();
np.unravel_index(np.ravel_multi_index(tuple([10,52]),arr2.shape),arr1.shape);
print(hb.norm.vmin,hb.norm.vmax);
np.py_split(lst,np.cumsum(sec));
self.get_user_from_cookie();
time.sleep(.01);
ranges.append(tuple([2,10]));
var r=requests.py_get(url);
export var array1=itertools.chain(array1.__getslice__(0,-1,1),array2);
r.json();
var pool=Pool();
self.num=self.num+1;
var lines=f.readlines();
django.setup();
export var finalimage=ImageChops.lighter(finalimage,currentimage);
[tuple([5,0]),tuple([8,2])];
plt.show();
plt.subplot(2,1,2);
df_test.reindex(idx);
list(itertools.islice(fib(),10));
print(np.trapz(counts,bins));
gtk.main();
plt.show();
(function(){var __accu0__=[];for(var [k,v]of sorted(list(dct.py_items()),__kwargtrans__({key:function __lambda__(p){return p[1]},reverse:true})))__accu0__.append(k);return __accu0__})();
pd.read_json(jsonfile,__kwargtrans__({lines:true}));
main();
self.socket.sendall(image_data);
print(np.allclose(r[0],k));
print(a.__getslice__(i,j,1));
HttpResponse(something);
Doc.docimage_set.all();
df.columns=pd.to_datetime(df.columns);
var r=float(s);
var sheet=book.sheet_by_index(index);
np.py_split(a,[int(.8*len(a)),int(.9*len(a))]);
export var index2=np.array([[0,1],[0,1]]);
h5file.close();
export var socket=socket.socket(socket.AF_INET,socket.SOCK_STREAM);
export var newcols=df.apply(lambdafunc,__kwargtrans__({axis:1}));
export var array_of_list_of_tuples=array(list_of_tuples);
self.update_clock();
np.where(a<b*10,a*2,-a);
export var csv_df=csv_df.groupby(csv_df.columns,__kwargtrans__({axis:1})).mean();
var module=sys.modules[func.__module__];
self.parent_model.objects.py_get(__kwargtrans__({pk:resolved.args[0]}));
export var imgplot=plt.pcolormesh(lum_img,__kwargtrans__({cmap:cmaps.viridis}));
var a=create_matrix(8,8);
pygame.mixer.music.play();
h.Do();
file.write(line);
a.mainloop();
var args=parser.parse_args();
mydict.py_update(myitem);
np.tensordot(gggg,T,axes);
Py_INCREF(v);
send_file(file_name,__kwargtrans__({as_attachment:true}));
f.__defaults__;
var result=np.clip(arr,0,255);
true;
ax.axis([-.2,1.2,-.2,1.2]);
render_to_response(template,context);
export var my_anim=animation.ArtistAnimation(fig,myimages,__kwargtrans__({interval:100}));
ctypes.string_at(self._buffer,self.size);
-autobus;
query.filter(Cls.field.in_(terms));
print(response.url);
ax.scatter(xflat,y,z);
var z=np.array(function(){var __accu0__=[];for(var c of cells)__accu0__.append(complex(c.m_x,c.m_y));return __accu0__}());
arr.__getitem__([1,0]);
s.groupby(s.shift().notnull().cumsum()).transform(function __lambda__(g){return g[-1]/g.size});
logging.debug(line);
urllib.request.install_opener(opener);
pprint(ddiff,__kwargtrans__({indent:2}));
PLT.show();
df.query(qry);
np.random.shuffle(ones);
df.index.py_values;
self.hide();
foo.__getitem__([1,2]);
var fig=plt.figure(__kwargtrans__({figsize:tuple([4,4])}));
var a=a.__getslice__(0,null,-1);
round_down(10,10);
(function(){var __accu0__=[];for(var i of lst)for(var j of i==to_replace?replace_with:[i])__accu0__.append(j);return __accu0__})();
plt.gca().add_artist(leg2);
self.fig.canvas.draw();
print(response.url);
var root=tk.Tk();
a.__getitem__([,0]).flatten();
__mod__(a+1,2);
var df=pd.read_sql(querystring,cnxn,__kwargtrans__({params:orders}));
print(time.localtime());
print(tostring(root));
var fig=plt.figure();
self.glade.connect_signals(self);
np.linalg.norm(x-y)<np.linalg.norm(sx+sy);
ax1.plot(t,s);
var a=df.iloc.__getitem__([tuple([0,null,1]),tuple([1,null,1])]);
var ax=plt.subplot(111,__kwargtrans__({polar:true}));
var data=render_template(path,__kwargtrans__(context));
var wordcount=Counter(file.read().py_split());
var transport=ssh.get_transport();
s.py_get(url);
writer.save();
print(function(){var __accu0__=[];for(var l of re_data_fields.findall(line))__accu0__.append(l[0].strip());return __accu0__}());
export var retcode=p.wait();
ZipFile.namelist();
sys.stdout=sys.__stdout__;
var x=[0,1,0,1,0,0,0,0];
var A=csr_matrix(tuple([data,tuple([row,col])]));
self._socket.sendto(message,self._dest);
print(child.tag,child.text);
self.render_template([template],__kwargtrans__(context));
TestApp().run();
im.crop(tuple([0,0,width,l_start_y+2])).save(sys.argv[1]);
my_method_name();
msg.attach(img);
main();
Base.metadata.create_all(engine);
self.submitButton.grid();
im2.show();
temp();
export var xvals=np.arange(beginx,endx+1);
export var yvals=np.arange(beginy,endy+1);
var a=numpy.random.rand(N);
foo(a);
logger.setLevel(logging.DEBUG);
MyModel2.mymodel1;
var __left0__=tuple([min(function(){var __accu0__=[];for(var i of xs)__accu0__.append(i.min());return __accu0__}()),max(function(){var __accu0__=[];for(var i of xs)__accu0__.append(i.max());return __accu0__}())]);export var xmin=__left0__[0];export var xmax=__left0__[1];
var l=sorted(d.py_keys());
self.showMaximized();
plt.show();
var parser=argparse.ArgumentParser();
root.lift();
var index=MyModel.objects.filter(__kwargtrans__({sortField__lt:myObject.sortField})).count();
l.remove(i);
self.put();
people.groupby(mapping).sum();
var data=json.loads(response_data);
var row=cursor.fetchone();
print(x);
finder1.score_ngrams(bigram_measures.pmi);
Thread.__init__(self);
var book=xlrd.open_workbook(filename);
ranges.append(tuple([5,10]));
ax.scatter(xs,ys,zs);
frame.pack();
export var unicode_list=function(){var __accu0__=[];for(var i=0;i<sys.maxunicode;i++)__accu0__.append(chr(i));return __accu0__}();
export var dsn=cx_Oracle.makedsn(ip,port,SID);
print(user.columns.py_name.py_metatype.length);
print(numbers,sum(numbers));
df.columns.tolist();
sns.pairplot(df);
decimal.Decimal(x).to_eng_string();
json.dumps(d.isoformat());
aw2.redraw_plot();
numpy.__version__;
aapl_200ma.plot(__kwargtrans__({legend:true}));
site.close();
print(resp.read());
var fp=webdriver.FirefoxProfile();
pd.isnull(np.array([np.nan,0],__kwargtrans__({dtype:float})));
dlg.Destroy();
zip_longest(...args,__kwargtrans__({fillvalue:fillvalue}));
var __left0__=np.meshgrid(np.arange(N),np.arange(N));var i=__left0__[0];var j=__left0__[1];
accum0.append(cc0);
var num=np.sum(np.abs(diffs)<some_value);
print(pd.DataFrame(result,df.index,df.columns));
odds.append(i);
np.kron(a,np.ones(tuple([blockSize,blockSize]))).__getitem__([tuple([0,rows,1]),tuple([0,cols,1])]);
time.sleep(random.randint(1,4));
var letter_count=dict(zip(string.ascii_lowercase,[0]*26));
s.diff();
server.close();
var data=np.random.randint(25,__kwargtrans__({size:tuple([4,4])}));
a.__getitem__([tuple([0,null,1]),i]);
calendar.py_setdefault(date,[]).append(event);
var im=numpy.array(img);
f.seek(0,0);
__import__(module);
plt.set_cmap(cmaps.viridis);
my_dict[k].append(dict2[k]);
A();
var pool=multithreading.Pool(1);
plt.gca().add_patch(cir);
export var SettableRLSD=TRUE;
MKTYPE2(Stitcher);
sys.stdout.write(char);
df;
enc.transform([[0,1,1]]).toarray();
var newNums=function(){var __accu0__=[];for(var [i,x]of enumerate(nums))if(x==12)__accu0__.append(i);return py_iter(__accu0__)}();
var ssh=paramiko.SSHClient();
screen.blit(newGameButton,tuple([button_x,button_y]));
var data=f.read();
var __left0__=function __lambda__(x){return tuple([x[0],x.__getslice__(1,null,1)])}(my_func());var head=__left0__[0];var tail=__left0__[1];
datetime.datetime.fromtimestamp(100426E4);
res.append(l);
s.cookies.set_policy(BlockAll());
t.timeit(5);
gibberish(10);
np.mean(self.predictions_,__kwargtrans__({axis:0}));
nk-=1;
zipped_file.seek(0);
output[-1].append(item);
m.group();
print(result);
os.kill(-self.proc.pid,signal.SIGKILL);
var a=list(range(1E4,2E4));
print(sys.path);
the_file.close();
x.argmin(__kwargtrans__({axis:1}));
false;
var result=solve(Math.pow(x+I*y,2)-z,tuple([x,y]));
d.py_update(makedict(elem));
var fig=pylab.figure();
sum(function(){var __accu0__=[];for(var [k,v]of stats.py_items())if(k[ikey]==keyv)__accu0__.append(v[idx]);return py_iter(__accu0__)}());
export var mu=np.mean(array);
var ax=fig.add_subplot(211);
pipeB.send(20);
sp.coo_matrix(tuple([C,coords]),tuple([a.shape[0],b.shape[1]]));
redis.StrictRedis(__kwargtrans__({connection_pool:connection_pool}));
self.results=pandas.concat(frames);
ax.set_xlim(0,n_pts);
export var c_float_p=ctypes.POINTER(ctypes.c_float);
ax.set_xlim(0,255);
plt.contourf(X,Y,Z);
[1,2,0,0,0];
engine.start();
sns.despine();
export var pkt=Ether()/IP()/TCP()/payload;
self.lock.acquire();
print(df);
sys.stdin=Peeker(sys.stdin);
Clock.schedule_once(self.create_webview,0);
var __left0__=map(int,input().py_split());var m=__left0__[0];var n=__left0__[1];
db.session.add(region);
data.seek(0);
pygame.quit();
float(str);
a[i]+=1;
server.starttls();
os.kill(-self.proc.pid,signal.SIGTERM);
ssh.close();
time.sleep(4);
df_c.ix[df_b.index]=df_b;
ax[0].legend();
self.render_to_response(context);

var w=csv.DictWriter(f,list(my_dict.py_keys()));
var now_epoch=time.time();
export var coo=[tuple([0,0]),tuple([0,1]),tuple([0,2]),tuple([1,0]),tuple([1,1]),tuple([1,2]),tuple([2,0])];
notifier.loop();
var ax=fig.add_subplot(111);
export var ids_list=function(){var __accu0__=[];for(var item of cursor.fetchall())__accu0__.append(item[0]);return __accu0__}();
points.append(tuple([x,y]));
print(set(chain(...array)));
var numbers=zip(...data);
w.show();
var a=function(){var __accu0__=[];for(var i of a.index)if(sorted1[i]<sorted2[i])__accu0__.append(a.ix[i]);return __accu0__}();
z2.__getitem__([i,list(range(z2.shape[1]))]);
sorted(map(sorted,sets),__kwargtrans__({key:function __lambda__(x){return tuple([len(x),x])}}));
o.close();
smtp.quit();
self.grid();
data.rename(__kwargtrans__({columns:str.lower}));
self.hello();
time.sleep(1);
stream.flush();
my_list.append(map(int,ints));
csv_out.writerow(row);
setattr(user,key,value);
np.where(np.array([0,0]));
A[[0,1]].shape;
var response=urllib.request.urlopen(url);
p.start();
np.arange(N).reshape(shp).transpose(np.arange(len(shp)).__getslice__(0,null,-1)).ravel();
print(most_common_words);
ax.clabel(terr,__kwargtrans__({fontsize:9,inline:1}));
d1-d2.py_values;
context.driver.switch_to.alert.accept();
sys.stdout=sys.__stdout__;
earth.circle(150,1);

ax.set_xticks(ind+width);
self.fileobj.close();
db.commit();
var my_list=pickle.load(f);
(function(){var __accu0__=[];for(var x of the_list)if(the_list.count(x)==1)__accu0__.append(x);return __accu0__})();
df;
QDialog.__init__(parent);
self.Show();
var res=t.render(__kwargtrans__({py_items:py_items}));
df.py_replace(replacements,__kwargtrans__({regex:true,inplace:true}));
plt.figure();
frame.grid(__kwargtrans__({row:0,column:0,sticky:N+S+E+W}));
defaultdict.__init__(self,list);
writer.save();
chr(int(match.group(1),16));
self.children.append(obj);
tar.getmembers();
cherrypy.config.py_update(server_config);
pygame.mixer.music.play();
sum(atuple);
parent.kill();
tuple([datetime.date(2016,6,9)]);
map(int,list(bin(n).__getslice__(2,null,1)));
obj.py_update(add_obj);
export var okay_items=function(){var __accu0__=[];for(var x of all_items)if(!regex.match(x))__accu0__.append(x);return __accu0__}();
print(text_re);
logging.basicConfig(__kwargtrans__({format:FORMAT,level:logging.INFO}));
self.__add__(-other);
m.transpose(1,2,0).__getitem__([0,1]);
admin.site.register(question,QuestionAdmin);
Potato(__kwargtrans__(validated_data));
print(json.dumps(d,__kwargtrans__({indent:4})));
var t1=threading.Thread(__kwargtrans__({target:foo}));
(function(){var __accu0__=[];for(var _ of a)__accu0__.append([_]+list(itertools.takewhile(function __lambda__(x){return x!=2},a)));return __accu0__})();
fig.subplots_adjust(__kwargtrans__({right:.55}));
plt.show();
process.kill();
print(foofile.read());
root.config(__kwargtrans__({menu:menubar}));
plt.ylim(max(y)+.5,min(y)-.5);
py_typeof(1);
export var m_date=datetime.datetime(Yr,Mo,Day);
s.count(s[0])==len(s);
move_to_root_folder(root_path,os.path.join(cur_path,filename));
callee();
app.logger.addHandler(handler);
writer.writerows(data);
count_2.most_common(2);
plt.show();
var element=ElementTree.fromstring(line);
export var user_id=Column(Integer,ForeignKey(User.id),__kwargtrans__({primary_key:true}));
df[df.User_ID.isin(counts[counts>1].index)];
sns.plt.show();
ax1.xaxis.set_major_locator(mticker.MaxNLocator(10));
print(neighbors(A,1,0));
text.set_transform(fig.transFigure);
payload.set_verdict(nfqueue.NF_DROP);
answer.append(tuple([apos,bpos]));
logging.Handler.__init__(self);
dt+timedelta(__kwargtrans__({days:7-dt.weekday()}));
sympy.sympify(r);
(function(){var __accu0__=[];for(var i of range(0,len(array),4))__accu0__.append(max(islice(map(abs,array),i,i+4)));return __accu0__})();
self._on_change();
np.where(a==a.max());
plt.xlim(tuple([1E-12,1]));
list(it.starmap(op.sub,it.izip(a.__getslice__(1,null,1),a)));
len(pytz.all_timezones);
handler.setLevel(logging.DEBUG);
self[key];
(dt-epoch).total_seconds()*1E3;
export var myadd=function __lambda__(xs,ys){return tuple(function(){var __accu0__=[];for(var [x,y]of zip(xs,ys))__accu0__.append(x+y);return py_iter(__accu0__)}())};
narr;
var py_name=os.path.realpath(os.path.join(root,py_name));
var d=lisp(d[0]);
print(tuple([first_num,first_arrangement]));
self.ax.grid();
x.append(y);
self.ssh.close();
var current_time=datetime.datetime.now();
f(a,b);
df.apply(function __lambda__(S){return S.append(dm)});
export var train_op=tf.train.GradientDescentOptimizer(.01).minimize(cost);
self.comboBox_2.addItem(QIcon(pixmap),text);
export var cursorclass=MySQLdb.cursors.DictCursor;
server.starttls();
var result=list(set(function(){var __accu0__=[];for(var s of stringlist)if(len(s)==ml)__accu0__.append(s);return py_iter(__accu0__)}()));
view_func(request,...args,__kwargtrans__(kwargs));
key.get_contents_to_file(f,headers);
print(rf.predict(testdataset.__getslice__(-1,null,1)));
export var newdate=datetime.datetime(...py_values);
f(f,...args,__kwargtrans__(kwds));
pprinttable([data,data]);
(function(){var __accu0__=[];for(var row of spamreader)__accu0__.append(dict(zip(list_of_keys,row)));return __accu0__})();
array.py_pop(0);
print(paramiko.__version__);
self.conn.commit();
print(df_concat.median());
print(soup);
file.writelines(input_lines);
export var my_copy=copy.deepcopy(my_dict);

self.mplvl.setLayout(self.vLayout);
pl.show();
var x=conn.cursor();
tuple([borderseg,X,labels,Xslice]);
time.sleep(1);
row_result.append(row_separator);
sys.exit(e);
logging.Handler.__init__(self);
np.transpose(arr,[2,0,1]).shape;
tuple([-47.5,-10.4,19.1,25.9,18.9,-10.4,-2.1,-47.6,41.8,-12.1,-15.7,12.1,-11,-.6]);
window.show();
func(...args,__kwargtrans__(kwargs));
(df==0).all();
loop.run_until_complete(task);
a.__getitem__([tuple([0,null,1]),0]).max();
os.chdir(folder);
L.grid(__kwargtrans__({row:i,column:j}));
np.sqrt((q*q.T).sum());
var words=l.py_split();
str(theint);
(function(){var __accu0__=[];for(var [i,j]of takewhile(function __lambda__(i_j){return i_j[0]==i_j[1]},zip(list1,list2)))__accu0__.append(i);return __accu0__})();
window._master=tk.Frame(window);
s.add(val);
os.dup2(so.fileno(),sys.stdout.fileno());
print(driver.title);
x.__getslice__(2,null,1).py_sort();
var ch=logging.StreamHandler();
py_next(reader);
plt.colorbar(heatmap);
c.writerow(sh.row_values(r));
plt.show();
json.dump(jsonData,outfile,__kwargtrans__({sort_keys:true,indent:4,ensure_ascii:false}));
model1.py;
var now=datetime.datetime.now();
plt.clf();
fd.close();
export var urlobj=urllib.request.urlopen(url);
A.__init__(self,...a,__kwargtrans__(k));
res.append(value);
var window=pygame.display.set_mode(tuple([WIDTH,HEIGHT]));
session.add(marten);
session.add(shrew);
session.add(loris);
Newlist.append(x);
d.py_setdefault(k,[]).append(v);
base64.urlsafe_b64decode(enc);
tuple([a,b]);
export var mock_boo_obj=mock.Mock();
np.ones(10,__kwargtrans__({dtype:bool}));
print(as_list);
np.random.seed(42);
export var value_sums=np.bincount(idx,value.ravel());
yaml.load(s);
tuple([random.choice([left,right]),random.choice([top,bottom])]);
f.quit();
layout.addWidget(self.list);
plt.tight_layout();
pd.Series(date_rng.format());
var z=pd.read_csv(io.StringIO(x));
obj.__class__=newclass;
ax.set_yticks(list(range(1,5)));
self.panel.SetFocus();
sock.close();
nax.set_yticks(tcks);
dict([[1,2],[2,1]]);
func(...args,__kwargtrans__(kwargs));
df.POINTS=(df.POINTS*(df.POINTS==df.DATA)).fillna(0);
var tree=et.fromstring(xml);
var username=db.Column(db.String(20),__kwargtrans__({unique:true}));
print(sys.path);
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
np.where(np.isnan(a),ma.array(a,__kwargtrans__({mask:np.isnan(a)})).mean(__kwargtrans__({axis:1})),a);
do_something();
self.generator.__len__();
json.dump(row,jsonfile);
plt.ion();
sum(l);
dest.close();
var fig=pl.figure(__kwargtrans__({figsize:tuple([6,6])}));

hist2d(xval,yval,__kwargtrans__({bins:1E3,range:np.array([tuple([-6,6]),tuple([-4.5,4.5])])}));
py_next(function(){var __accu0__=[];for(var i=0;i<1E5;i++)if(i==1E3)__accu0__.append(i);return py_iter(__accu0__)}());
self.command();
export var evens=function(){var __accu0__=[];for(var i=0;i<limit;i++)if(__mod__(i,2)==0)__accu0__.append(i);return py_iter(__accu0__)}();
text_widget.index(Tkinter.INSERT);
nbrs.kneighbors(X);
print(tensor[0].eval());
self.frame.focus_set();
set(function(){var __accu0__=[];for(var l of a_list)__accu0__.append(l[0]);return __accu0__}());
im.seek(im.tell()+1);
my_input.ask();
p.stdout.close();
export var inverted_image=PIL.ImageOps.invert(image);

writer.writerow(row);
np.tile(a,tuple([6,1]));
var merged_dict=function(){var __accu0__=[];for(var k of py_keys)__accu0__.append([k,function(){var __accu1__=[];for(var d of all_dicts)__accu1__.append(d.py_get(k,np.nan));return __accu1__}()]);return dict(__accu0__)}();
list(takewhile(function __lambda__(i_j){return i_j[0]==i_j[1]},zip(list1,list2)));
var __except0__=argparse.ArgumentTypeError(msg);__except0__.__cause__=null;throw __except0__;
var __left0__=ttsplit(X,y,__kwargtrans__({test_size:.1,random_state:0}));var X_train=__left0__[0];var X_test=__left0__[1];export var y_train=__left0__[2];export var y_test=__left0__[3];
var out=np.dot(arr_one,arr_two.T);
msg.attach(img);
export var txttime=os.path.getmtime(os.path.join(root,txt));
f.__getslice__(0,null,-1);
urllib.request.install_opener(opener);
ioloop.IOLoop.instance().run_sync(main);
_ranks.append(dict({}));
print(list(dedupe_adjacent(data)));
deletex;
print(argparse.__dict__);
var ax=fig.add_subplot(111);
plt.subplot(121);
somethingThread.start();
item.set_rotation(45);
Client(...sys.argv.__getslice__(1,null,1)).run();
var b=np.array([2,4,6]);
export var bodytext=body.text;
Session.remove();
var screen=pygame.display.set_mode(tuple([800,800]));
print(str(a[1]));
book_author.save();
session.add(stoat);
export var startupinfo=subprocess.STARTUPINFO();
df.shift(2).iloc.__getitem__([tuple([0,null,1]),tuple([4,null,1])]);
var dt=datetime.datetime.strptime(s,fmt);
a.shape;
var s=SomeClass(__kwargtrans__({bar:1,foo:0}));
export var people=Person.objects.filter(__kwargtrans__({employee__in:employee_query}));
func(...args,__kwargtrans__(kwargs));
list(filter(pred,A));
print(f.readlines());
self.itemSelectionChanged.connect(self.print_row);
var __left0__=test();var a=__left0__[0];var b=__left0__[1];
token.get_access_token(code);
tmp.append(float(line));
df;
re.predict_proba(X_test);
var new_list=function(){var __accu0__=[];for(var fruit of a)if(!__in__(fruit,b))__accu0__.append(fruit);return __accu0__}();
var log=logging.getLogger(__name__);
var a=np.array([[1,2],[1,2]]);
df.eq(0).apply(function __lambda__(x){return list(df.columns[x])},1);
m.groups(1);
var y=random.randrange(0,maxy);
setattr(self.obj,self.property_names[item],value);
os.path.abspath(sys.modules[LocationArtifact.__module__].__file__);
tuple([p.x,p.y,p[0],p[1]]);
c.nonzero();
xs.append(x);
Math.pow(-4,2);
ax.yaxis.set_ticks(np.arange(0,100,10));
-rtest-requirements.txt;
mylist.py_sort(__kwargtrans__({key:itemgetter(1)}));
self.button.clicked.connect(self.dialog.show);
smax.on_changed(py_update);
ax.set_xticklabels(xlabels);
love_ctx.add(tuple([alice,loves,charlie]));
ax.set_yticks(np.arange(len(df.index))+.5);
sleep(1);
var x=x-int(x);
myset.add(item);
var b=p.map(func,a);
__all__;
pprint(function(){var __accu0__=[];for(var x=0;x<10;x++)__accu0__.append([x,list(range(x))]);return dict(__accu0__)}());
time.sleep(.001);
a.add_child(b);
print(ToSI(d));
x.bar();
sys.path.append(os.getcwd());
export var elevations=json.dumps(data);
plt.show();
fig.colorbar(cf,__kwargtrans__({cax:cax}));
print(dpkt.ethernet.Ethernet(packet));
var opener=urllib.request.build_opener(urllib.request.HTTPCookieProcessor(cj));
l.append(s.__getslice__(i,i+10,1));
ax2.set_xticklabels(X2tick_location);
var s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);
export var a2=np.array([[4,5,6],[7,8,9],[1,1,1]]);
var y=x.dot(w);
do_something_useful();
export var X_max=np.max(X[idx]);
var df=df.swaplevel(0,1,1);
dfile.write(sfile.read());
admin.site.unregister(User);
hermes.__loader__;
self.frame.pack();
(function(){var __accu0__=[];for(var [k,v]of ob.py_items())__accu0__.append([k,map_nested_dicts(v,func)]);return dict(__accu0__)})();
export var list_of_ints=function(){var __accu0__=[];for(var i of str(ISBN))__accu0__.append(int(i));return __accu0__}();
solve(fprime,x);
app.mainloop();
export var imarray=numpy.array(im);
time.sleep(.25);
random.shuffle(count_list);
multiprocessing.Process.__init__(self);
self.onThread(self._doSomething);
threading.Timer(10,foo).start();
cur.execute(query);
plt.show();
i_take_strings(...s.py_split());
var max_idx=l.index(max_val);
ax1.legend(__kwargtrans__({bbox_to_anchor:tuple([1.2,1])}));
export var colormap_r=ListedColormap(colormap.colors.__getslice__(0,null,-1));
var py_name=models.CharField(__kwargtrans__({max_length:50}));
self.setCentralWidget(self.central);
(function(){var __accu0__=[];for(var x of seqs[0])for(var p of[[]])__accu0__.append([x]+p);return __accu0__})();
sys.stdout.write(str(result));
dict.__setitem__(self,key,value);
sys.exit(main(sys.argv.__getslice__(1,null,1)));
export var to_search=function(){var __accu0__=[];for(var x of input)__accu0__.append([x[0],x]);return dict(__accu0__)}();
var r=requests.py_get(url,__kwargtrans__({stream:true}));
print(m.groups());
fcntl.fcntl(thePipe,fcntl.F_SETFL,os.O_NONBLOCK);
self.data=np.array([]);
smtpserver.starttls();
var draw=ImageDraw.Draw(im);
export var parsed=rdd.map(json.loads);
c.add(o);
json.dump(data,fp);
var rdd=sc.parallelize(np.random.randint(1E6,__kwargtrans__({size:7E5})));
var py_name=models.CharField(__kwargtrans__({max_length:10}));
sys.exit(0);
Foo.bar();
time.sleep(.5);
var args=parser.parse_args();
len(np.unique(array))>1;
select.select([A],[],[]);
export var connection=redis.Connection(__kwargtrans__(kwargs));
_location.gsm_location();
var root=lxml.etree.fromstring(xmlstr);
ax.ticklabel_format(__kwargtrans__({useOffset:false}));
intvals.__getslice__(i-1,i+1,1);
fh.seek(offset);
get_indices(a,b);
true;
c.set_dashes([tuple([0,tuple([2,2])])]);
sorted(dictionary.py_values())[0];
(df==0).astype(int);
get_key(d,22);
np.bincount(A,B);
var result=random.sample(coo,2);
export var legend=DraggableLegend(ax.legend());
var fig=plt.figure();
var service=get_vision_service();
print(df[column]);
process.crawl(MySpider);

self.x1+=self.speed*math.cos(self.bearing);
dict.__setitem__(d,new_key,v);
print(timedelta(__kwargtrans__({minutes:6*60})));
var l=l.__getslice__(0,1,1)+x+l.__getslice__(2,null,1);
pool.terminate();
f.seek(0,__kwargtrans__({whence:2}));
list2.append(dict2.py_get(key));
var soup=BeautifulSoup(urllib.request.urlopen(url).read());
np.bincount(ixs,__kwargtrans__({minlength:mat.shape[0]})).dot(mat);
min(function(){var __accu0__=[];for(var k of d)if(k>key)__accu0__.append(k);return py_iter(__accu0__)}());
draw();
self.add_node(destination);
list(grouper(2,my_list));
arcpy.RefreshTOC();
gb1.copy_to_a([1,2]);
add.apply_async(tuple([1,4]),__kwargtrans__({task_id:i}));
grid_sizer_1.Add(self.window_1,1,wx.EXPAND,0);
list(iterateFinitely(function __lambda__(x){return x?[x/2]:[]},20));
var __except0__=NotImplementedError;__except0__.__cause__=null;throw __except0__;
p.start();
export var yz=NNN.mean(__kwargtrans__({axis:0}));
sys.exit(0);
print(audio.info.length);
var app=QtGui.QApplication([]);
ao.__setitem__([tuple([1,null,1]),tuple([0,null,1])],ao.__getitem__([tuple([1,null,1]),tuple([0,null,1])])+ai.__getitem__([tuple([0,-1,1]),tuple([0,null,1])]));
DataFrame(dict(__kwargtrans__({s1:s1,s2:s2}))).reset_index();
numbers.append(i);
[tuple([5]),tuple([2,2,1]),tuple([2,1,1,1]),tuple([1,1,1,1,1])];
logging.basicConfig(__kwargtrans__({level:logging.INFO}));
form.save();
var fullname=os.path.join(path,filename);
export var myline=random.choice(lines);
(function(){var __accu0__=[];for(var i of range(0,len(seq),n))__accu0__.append(seq.__getslice__(i,i+n,1));return __accu0__})();
sum(function(){var __accu0__=[];for(var _ of it)__accu0__.append(1);return py_iter(__accu0__)}());
var kwargs_new=function(){var __accu0__=[];for(var [k,v]of list(d.py_items()))if(isinstance(k,str))__accu0__.append([k,v]);return dict(__accu0__)}();
print(function(){var __accu0__=[];for(var item of uniq)__accu0__.append([item.p1,item.p2]);return __accu0__}());
var im2=ax2.plot(image.__getitem__([tuple([0,time,1]),5,5]));
export var mx=pow(2,24)-1;
map(id,b);
result.extend(changecoins);
t.cancel();
sum(function(){var __accu0__=[];for(var p of datapoints.__getslice__(0,5,1))__accu0__.append(p[0]);return py_iter(__accu0__)}())/5;
abort(405);
mainwin.show_all();
self._base.all()[0];
id(x)==foo(x);
new set([new set([a])]);
tseries.order();
math.sqrt(Math.pow(point[0],2)+Math.pow(point[1],2));
var f=Math.pow(a,2)+x*Math.pow(b,2)+y*a*b*np.cos(c)+z*a*b*np.sin(c);
out.save(output_path);
L.__getslice__(0,4,1);
var b=Matrix([[2,2],[2,2]]);
var x=pd.DataFrame(np.random.randn(20,5));
axes.plot(xs,ys);
view_func(request,...args,__kwargtrans__(kwargs));
plt.scatter(x,y,__kwargtrans__({c:x,s:100,cmap:reds}));
set(l1)&set(l2);
nsmallest(4,list(range(len(py_values))),__kwargtrans__({key:function __lambda__(i){return py_values[i]}}));
container.grid_rowconfigure(0,__kwargtrans__({weight:1}));
dis.dis(func);
print(os.path.join(root,pathname));
export var file_count=len(files);
current_app.login_manager.unauthorized();
var new_list=[];
print(node.text);
var a=input();
var root=objectify.fromstring(xml_string);
export var years=function(){var __accu0__=[];for(var x of your_list)__accu0__.append(x.year);return __accu0__}();
self.configure(__kwargtrans__({width:imagesize[0],height:imagesize[1]}));
HttpResponse(__kwargtrans__({status:200}));
var ax=plt.gca();
export var df_final=pd.concat(pieces,__kwargtrans__({ignore_index:true}));
print((datetime.date(year,month,day)-datetime.timedelta(1)).isoformat());
var ssh=paramiko.SSHClient();
df;
print(file_content);
(new set([10])).issubset(chain.from_iterable(x));
self.worker.beep.connect(self.py_update);
self.clients.append(client);
np.put(arr,list(range(len(arr)+num,len(arr))),np.nan);
var A=np.array([[1,1,1],[1,1,1],[1,1,1]]);
result.fillna(df1,__kwargtrans__({inplace:true}));
var __left0__=plt.subplots(__kwargtrans__({nrows:1,ncols:1}));var fig=__left0__[0];var ax=__left0__[1];
bytes([1,65,2,255]);
var __left0__=s.accept();var conn=__left0__[0];var addr=__left0__[1];
self.SetSizer(sizer);
f.close();
var id=Column(Integer,__kwargtrans__({primary_key:true}));
var B=copy.deepcopy(A[0]);
var ax=fig.add_subplot(111);
e.pack();
widget.show();
time.sleep(2);
print(p.stdout.read());
df.loc[df.__getslice__(0,-1,1)[df.index.month.__getslice__(0,-1,1)!=df.index.month.__getslice__(1,null,1)].index];
print(zap);
plt.show();
np.random.shuffle(a.flat);
show();
export var listbox=Listbox(master,__kwargtrans__({selectmode:tk.SINGLE}));
blit_text(screen,text,tuple([20,20]),font);
export var ani=animation.FuncAnimation(fig,animate,__kwargtrans__({frames:10}));
var d=np.repeat(b,a.shape[0],__kwargtrans__({axis:0}));
proc.communicate();
print(os.getcwd());
cal_window.set_type_hint(gtk.gdk.WINDOW_TYPE_HINT_DOCK);
print(response.content);
export var bits=function(){var __accu0__=[];for(var x of bits.__getslice__(0,null,-1))__accu0__.append(int(x));return __accu0__}();
var entries=dict(function(){var __accu0__=[];for(var [x,y]of zip(out.__getslice__(0,null,2),out.__getslice__(1,null,2)))__accu0__.append(tuple([x,y]));return __accu0__}());
a.wut;
rdd1.join(rdd2);
fn(...args,__kwargtrans__(kwargs));
msg.attach(MIMEText(message));
wx.App.__init__(self,false);
result.extend(pat.findall(text));
export var maxLen=max(function(){var __accu0__=[];for(var p of props)__accu0__.append(len(p));return py_iter(__accu0__)}());
np.array([1,2]).size;
self.setLayout(layout);
sys.exit(subprocess.call(sys.argv.__getslice__(i,null,1)));
htmlDoc.close();
plt.show();
f.close();
con.close();
export var identity=function __lambda__(x){return function(){var __accu0__=[];for(var j=0;j<x;j++)__accu0__.append(function(){var __accu1__=[];for(var i=0;i<x;i++)__accu1__.append(int(i==j));return __accu1__}());return __accu0__}()};
(function(){var __accu0__=[];for(var p of deck)__accu0__.append(p[0]);return __accu0__})();
print(a.headlines.all());
sorted(list(kwargs.py_items()),__kwargtrans__({key:function __lambda__(i){return i[0]}}));
figure(1,__kwargtrans__({figsize:tuple([6,6])}));
self.appExeCB.addItems(list(self.py_items.py_keys()));
b_thread.start();
(function(){var __accu0__=[];for(var x=0;x<10;x++)__accu0__.append(x*x);return set(__accu0__)})();
punto.wkt;
var count=sum(function(){var __accu0__=[];for(var _ of emoticons)__accu0__.append(1);return py_iter(__accu0__)}());
groups.append(function(){var __accu0__=[];for(var x of g)__accu0__.append(x[1]);return __accu0__}());
var res=cv2.bitwise_and(img,img,__kwargtrans__({mask:mask}));
new set([new set([post])]);
func(...args,__kwargtrans__(kwargs));
export var new_items=function(){var __accu0__=[];for(var item of py_items)if(!item.isdigit())__accu0__.append(item);return __accu0__}();
deletedic[k];
var d=defaultdict(function __lambda__(){return 1});
app.run();
result[key]+=1;
np.datetime64(dt.isoformat());
sys.stdout.write(str(tuple[0]));
plt.scatter(...zip(...new_points));
headers.setContextMenuPolicy(Qt.CustomContextMenu);
network.draw();
zk.stop();
df;
print(!!r.search(s));
var a=defaultdict(dict);
f();
plt.figure(__kwargtrans__({figsize:tuple([8,6])}));
zip(l,l.__getslice__(1,null,1),l.__getslice__(2,null,1));
var draw=ImageDraw.Draw(image);
time.sleep(.05);
self.header=header;
ax.patch.set_visible(false);
pd.concat(function(){var __accu0__=[];for(var d of dupes)__accu0__.append(df.xs(d,__kwargtrans__({axis:1})));return py_iter(__accu0__)}()).groupby(__kwargtrans__({level:0,axis:1})).mean();
C[k]=np.dot(A[k],B[k]);
self.canvas.scan_dragto(event.x,event.y,__kwargtrans__({gain:1}));
stream.write(data);
np.fromiter(test,__kwargtrans__({dtype:np.int}));
tuple([id(lines),id(ax.lines)]);
export var facebook_graph=facebook.GraphAPI(oauth_access_token);
print(x,y);
f.seek(0);
false;
var s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);
data.columns=data.iloc[0];
var soup=BeautifulSoup(page);
var __left0__=sys.version_info.__getslice__(0,2,1);export var PY_MAJOR=__left0__[0];export var PY_MINOR=__left0__[1];
cv2.drawContours(mask,[largest_area],0,tuple([255,255,255,255]),-1);
time.sleep(.1);
pythoncom.PumpWaitingMessages();
sys.exit(2);
show();
print(index,key,value);
file.close();
df;
random.randint(0,int((stop-start)/step))*step+start;
self.x0+=self.speed*math.cos(self.bearing);
smtpserver.starttls();
sys.stdout.write(s);
(np.arange(n)>=m).astype(int);
export var cause=e.args[0];
pd.show_versions(__kwargtrans__({as_json:false}));
np.dot(copy,onevec);

self.panel.Bind(wx.EVT_KEY_UP,self.OnKeyDown);
len(list(flatten(mylist)));
pdb.Pdb(__kwargtrans__({stdout:sys.__stdout__})).set_trace();
var data=response.read();
a.add(1);
var data=line.py_split();
print(cardsdiscarded);
a+[a<0];
sock.close();
iph.show2();
QObject.__init__(self,parent);
frame.append(4);
export var contest=models.ForeignKey(Contest);
sign*Math.pow(2,expo-25)*prec;
print(tupl.a,tupl.b);
pprint(d);
table.resizeColumnsToContents();
df.loc.__getslice__(start,end,1);
var numbers=function(){var __accu0__=[];for(var x=0;x<SOMEVERYLARGENUMBER;x++)__accu0__.append(random.randint(1,1E3));return __accu0__}();
var x=Counter([-1,-1,-1,1,1,1,1,0,0,0,0,0,0,0,0]);
resulting_list.extend(function(){var __accu0__=[];for(var x of second_list)if(!__in__(x,resulting_list))__accu0__.append(x);return py_iter(__accu0__)}());
(function(){var __accu0__=[];for(var sub of result)__accu0__.append(sorted(sub));return __accu0__})();
var x=np.arange(X);
var ax2=fig.add_subplot(212);
print(unanimous(list(dd.py_values())));
model.save([spark_context],[file_path]);
var root=tk.Tk();
var app=QtGui.QApplication(sys.argv);
var db=SQLAlchemy();
urlfetch.set_default_fetch_deadline(10);
f.close();
eventLoopThread.start();
export var seen_models=connection.introspection.installed_models(tables);
print(df);
myList.append(myList);
test.py;
var r=requests.py_get(url,__kwargtrans__({stream:true}));
label.grid_remove();
print(lines[i]);
cb.ax.yaxis.set_tick_params(__kwargtrans__({pad:45}));
do_something();
__in__(a,tuple([b+c,b-c,c-b]));
var arr=np.array([nbLamps,nbDays],__kwargtrans__({dtype:np.bool}));
var py_items=function(){var __accu0__=[];for(var [key,value]of list(the_dict.py_items()))__accu0__.append(tuple([-value,key]));return __accu0__}();
__init__.py;
print(time.ctime(cdate),os.path.basename(path));
models.py;
var B=csr_matrix(tuple([data,indices,indptr]));
export var EMAIL_USE_SSL=true;
print(fdist1.most_common(10));
export var opa=pd.concat([pirmas_m,antras_m,trecias_m,ketvirtas_m],__kwargtrans__({axis:1}));
export var engine=cherrypy.engine;
plt.plot(x_new,ffit);
var ax1=fig.add_subplot(2,1,1);
print(p.match(s).groups());
input_date.astimezone(current_tz);
var attr=dict({});
[datetime.datetime(2012,1,2,0,0)];
getattr(o,py_name)();
export var pad=curses.newpad(PAD_LENGTH,curses.COLS-1);
sys.path;
(function(){var __accu0__=[];for(var n=1;n<10+1;n++)__accu0__.append(5*n);return __accu0__})();
var d=dict({});
var A=function(){var __accu0__=[];for(var i=0;i<len(A);i++)__accu0__.append(A[i]+(__mod__(i,2)==0?0:.1));return __accu0__}();
itertools.chain(py_iter(self.py_items.py_items()),py_iter(self.people.py_items()));
print(json.dumps(mydata,__kwargtrans__({indent:4})));
f.flush();
map(int,numbers.strip().py_split());
var df=pd.read_csv(csv_file);
var result=df.a.sort_values().apply(function __lambda__(x){return sorted(x)});
print(thisRDD.toDebugString());
subprocess.Popen(winCMD,__kwargtrans__({stdout:subprocess.PIPE,shell:true}));

export var desired_list=map(function __lambda__(x__){return x__[0]},tuple_list);
result.append(line);
export var cell_value=int(cell_value);
lst2.append(function(){var __accu0__=[];for(var x of lst)__accu0__.append(x[0]);return __accu0__}());
browser.close();
s.close();
min(foo,__kwargtrans__({key:float}));
deletedf.index.py_name;
bokeh.io.show(page);
var s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);
var fig=plt.figure();
client.py_get(URL);
var driver=webdriver.Firefox();
var fig=plt.figure(__kwargtrans__({figsize:tuple([10,8])}));
f.close();
np.tensordot(A,Combinations,[2,1]).transpose(2,0,1);
f.axes[2].set_position([.45,.05,.05,.4]);
export var appended_data=pd.concat(appended_data,__kwargtrans__({axis:1}));
var connection=urllib.request.urlopen(url);
Session.commit();
np.put(arr,list(range(len(arr)+num,len(arr))),np.nan);
initcaller();
rdd_malformed.flatMap(function __lambda__(x){return seq_try(json.loads,x)}).collect();
dict_writer.writerows(toCSV);
self.end_headers();
app.config.from_object(config_obj);
var __left0__=proc.communicate(open(fn).read());var out=__left0__[0];var err=__left0__[1];
plt.imshow(np.random.randn(10,10));
ax.add_patch(circ);
print(data);
document.py_update(__kwargtrans__(conv_dict_to_update(data)));
df.index=df.index.droplevel(1);
Maemo4Spec();
var fig=plt.figure(__kwargtrans__({figsize:tuple([8,4])}));
table.py_sort(__kwargtrans__({reverse:true,key:Team.getName}));
export var prob=clf.predict_proba(X_test).__getitem__([tuple([0,null,1]),1]);
time.sleep(5);
var __left0__=map(function __lambda__(x){return x/255},[r,g,b]);var r=__left0__[0];var g=__left0__[1];var b=__left0__[2];
export var average_timedelta=sum(timedeltas,datetime.timedelta(0))/len(timedeltas);
imarray.shape;
var writer=csv.writer(f);
target.py_update(request,...args,__kwargtrans__(kwargs));
cv2.rectangle(img,top_left,bottom_right,255,5);
screen.blit(my_image,another_position);
(function(){var __accu0__=[];for(var [x,y]of zip(a,b))__accu0__.append(x+y);return __accu0__})();
var lines=f.readlines();
br.show();
processes.append(Popen(command,__kwargtrans__({stdout:pipe,close_fds:true})));
var ax2=fig.add_subplot(2,1,2);
logger.setLevel(logging.NOTSET);
var a=np.random.rand(size);
self.layoutChanged.emit();
path.path(mypath).splitall()[0];
__in__(b,l.__getslice__(l.index(a)+1,null,1));
a.__getitem__([i1,i2]);
layout.addWidget(self.table);
export var chunk=np.genfromtxt(f,...args,__kwargtrans__(__mergekwargtrans__({max_rows:chunksize},kwargs)));
deletedict_[key];
server.bind(sockfile);
var fig=plt.figure();
list(map(add,[2,2]));
cls.method_two();
fs.noteoff(0,76);
p.stdin.close();
var s=requests.Session();
ax1.plot([x1,x2],[y1,y2]);
var x=np.linspace(0,20,1E3);
setup.py;
print(str(a[2]));
var now=datetime.datetime.now();
print(df);
tuple([x,y]);
np.where(a>b*10,a*2,-a);
rec.array([[40,140],[50,150],[60,160]],__kwargtrans__({dtype:float64}));
gca().get_lines()[n].get_xydata();
var app=QtGui.QApplication(sys.argv);
df;
f.flush();
var cb=fig.colorbar(im,__kwargtrans__({ticks:LogLocator(__kwargtrans__({subs:list(range(10))}))}));
my_svr.fit(x_training,y_trainr);
msg.get_payload();
plt.show();
print(ET.tostring(newroot));
root.columnconfigure(1,__kwargtrans__({weight:1}));
file.close();
print(bool(pattern.search(byte)));
sps.coo_matrix(tuple([data,tuple([rows,cols])]),__kwargtrans__({shape:tuple([x.shape[0],theta.shape[0]])}));
ax1.set_xlim(1,6);
mail.starttls();
df.idxmin(1);
export var good_html=tree.prettify();
str(unichar);
var result=function(){var __accu0__=[];for(var k of set(da.py_keys()).intersection(list(db.py_keys())))__accu0__.append([k,da[k]+db[k]]);return __accu0__}();
result.append(key);
self.panel_sizer.Add(self.tin2,0,wx.EXPAND);
threading.Thread.__init__();
frame.append(2);
griddata.addSample([X.ravel()[i],Y.ravel()[i]],[0]);
var arr=np.array([5,4,-2,1,-2,0,4,4,-6,-1]);
var __left0__=img.shape;var h=__left0__[0];var w=__left0__[1];
settings.py;
root.resizable(__kwargtrans__({width:false,height:false}));
var time=datetime.now();
(function(){var __accu0__=[];for(var i of B)if(__in__(i,A))__accu0__.append(i);return __accu0__})()+function(){var __accu0__=[];for(var i of A)if(!__in__(i,B))__accu0__.append(i);return __accu0__}();
baz2();
(function(){var __accu0__=[];for(var item of a)__accu0__.append(d[item]);return __accu0__})();
pickle.dump(dict1,fp);
str(d);
plot.append(axF);
var data=urllib.parse.urlencode(py_values);
var arr=np.array(list(it));
var list2=function(){var __accu0__=[];for(var i of list1)__accu0__.append(foo(i));return __accu0__}();
im.putalpha(256);
var line=line.strip();
p.pattern;
QGraphicsTextItem.__init__(self);
splitmaptime/parsetime;
summaptime/parsetime;
strp/parsetime;
plt.show();
sum(function(){var __accu0__=[];for(var [a,b]of zip(A,B))__accu0__.append(a*b);return py_iter(__accu0__)}());
print(get_last_non_zero_index([-2,-2,0,0,0,0,0]));
max(b);
print(random_with_N_digits(4));
IOLoop.instance().start();
int(self.opt.stdout.readline().strip());
5<[1,2];
plt.show();
msg.attach(part1);
plt.show();
self.panel.Bind(wx.EVT_LEFT_DOWN,self.OnMouseDown);
print(function(){var __accu0__=[];for(var [k,v]of list(self.py_items()))__accu0__.append(tuple([k,v]));return __accu0__}());
pickle.dump(parameters,out_file);
ax.autoscale_view();
(function(){var __accu0__=[];for(var _=0;_<length;_++)__accu0__.append(random.randrange(1E4));return __accu0__})();
fill_node(root);
var m=urllib.request.urlopen(url);
time.sleep(60);
export var oct_num=oct(dec_num);
export var Br=[x,x,x,x,0,y];
export var new_t=t+np.hstack(tuple([t.__getslice__(1,null,1),[t[0]]]));
min(collection,__kwargtrans__({key:function __lambda__(x){return abs(x-num)}}));
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
var today=datetime.datetime.now();
vobject.contents;
np.where(a==a.min());
datetime.strptime(s,f);
file.seek(0,2);
w.setPalette(p);
plt.plot(t,s);
var d2=function(){var __accu0__=[];for(var [k,v]of list(d.py_items()))for(var _=0;_<v;_++)__accu0__.append(k);return __accu0__}();
trimmed.__setitem__([k[0],k[-1]],trimmed.__getitem__([k[0],k[-1]])+v);
len(x);
var password=db.StringProperty();
export var tmpdata=dict({});
list(range(10));
sys.path.insert(1,parent_dir);
l.set_option(ldap.OPT_X_TLS,ldap.OPT_X_TLS_DEMAND);
print(function(){var __accu0__=[];for(var count=1;count<len(nums)+1;count++)__accu0__.append(sum(nums.__getslice__(0,count,1))/count);return __accu0__}());
export var D0=np.array(function(){var __accu0__=[];for(var i=0;i<len(A);i++)__accu0__.append(A[i]*B.__getitem__([i,tuple([0,null,1])]));return __accu0__}());
self.append(item);
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
var driver=webdriver.Chrome(__kwargtrans__({chrome_options:chrome_options}));
xticks(list(range(1,6)));
gca().yaxis.set_major_locator(NullLocator());
numpy.exp(numpy.sum(numpy.log(a)));
combination[r-1]+=1;
f1.write(line);
var text=json.loads(jsonurl.read());
print(function(){var __accu0__=[];for(var val of enumerate(a))if(val[0]!=i)__accu0__.append(val[1]);return __accu0__}());
var y1=(x-x0)*sin(theta)+(h-y-y0)*cos(theta);
export var shallow_copy_of_x=py_typeof(x)(x);
export var poly=Polygon([tuple([0,0]),tuple([0,2]),tuple([2,2]),tuple([2,0])]);
np.dot(X,A);
var img=ImageTk.PhotoImage(Image.open(path));
s.bind(tuple([HOST,PORT]));
self.log.write(message);
do_some_stuff(i);
pool.join();
[0,0,0];
settings.development.py;
tuple([a,b,c,d]);
Test().run();
tuple([a,b]);
b.py_sort();
pyplot.show();
e.pack();
lfilter(b,a,data);
json.loads(json_repr,__kwargtrans__({object_hook:_decode_dict}));
list.append(py_values[i]);
var connection=opener.open(request);
hl.set_ydata(numpy.append(hl.get_ydata(),new_data));
weed.save();
felix.save();
fixedser.plot(__kwargtrans__({ax:axes[0]}));
pickle.dumps(test);
self.b=a;
export var clean=function(){var __accu0__=[];for(var x of usertext)if(!__in__(x,stop_words))__accu0__.append(x);return __accu0__}();
var driver=webdriver.Firefox();
export var lastDigit=x[-1];
np.fmin(np.digitize(A,hist[1]),bin_count);
(function(){var __accu0__=[];for(var i=0;i<len(uo);i++)__accu0__.append(gu(i));return __accu0__})();
true;
print(mystring[-1]);
p.start();
menu_item.show();
plt.show();
export var XB=np.linspace(-1,1,20);
ax.set_ylim(0,Y);
(a!=b).nonzero();
self.socket.write(self.request);
psutil.virtual_memory();
a_game.run();
second_list.append(ls[1]);
self.Show();
var root=et.fromstring(text);
x.Bar();
(a*prior_reci+(1-a)*prior_reci/10).sum(__kwargtrans__({axis:1}));
var app=QtGui.QApplication(sys.argv);
np.vstack(np.triu_indices_from(a,__kwargtrans__({k:1}))).T;
bcut.label.set_visible(false);
self.s.lower()==other.s.lower();
subplot(2,2,4);
var __left0__=stats.lognorm.fit(data,__kwargtrans__({floc:0}));var s=__left0__[0];export var loc=__left0__[1];export var scale=__left0__[2];
var z=dict(list(x.py_items())+list(y.py_items()));
export var cnt1=np.concatenate(tuple([[0],np.cumsum(cnt).__getslice__(0,-1,1)]));
plt.ylim(0,2.5);
print(list(result));
wx.Frame.__init__(self,parent,-1,title,__kwargtrans__({size:tuple([600,400])}));
aList.append(function(){var __accu0__=[];for(var element of row)__accu0__.append(element.strip());return __accu0__}());
points.intersects(poly.unary_union);
var ax1=fig.add_subplot(111);
frame.pack();
self.connection.close();
export var list_2_sorted=function(){var __accu0__=[];for(var x of sorted_together)__accu0__.append(x[1]);return __accu0__}();
sum_chunk(a,2,__kwargtrans__({axis:0}));
print(lines[0][0].shape);
confusion_matrix(y_actu,y_pred);
var x=x.set_value(i,Math.pow(i,2));
var id=Column(Integer,__kwargtrans__({primary_key:true,nullable:false}));
result.append(list_to_html(item));
math.sqrt(2);
signal.signal(signal.SIGPIPE,signal.SIG_DFL);
export var sort_indices=numpy.argsort(a,__kwargtrans__({axis:0}));
cherrypy.tree.mount(Root());
frozenset(chain.from_iterable(L));
numpy.__version__;
var data=function(){var __accu0__=[];for(var line of f.readlines())__accu0__.append(line.strip().py_split());return __accu0__}();
df.T;
print(tmpl.render(__kwargtrans__({v:Myobj()})));
export var copyofL=remove_column(L,1);
parent.mainloop();
print(list(traverse(data)));
conn.commit();
export var dcounts=Counter(function(){var __accu0__=[];for(var d of defectdetails)__accu0__.append(d[0]);return py_iter(__accu0__)}());
create_user_profile(user);
np.all(A==B);
var pool=Pool(__kwargtrans__({processes:4}));
item.append(item[0]);
var d=json.loads(json_acceptable_string);
(function(){var __accu0__=[];for(var i=0;i<1E5;i++)if(i==1E3)__accu0__.append(i);return __accu0__})()[0];
print(tuple([current_item,next_item]));
f.close();
a.f();
export var pdf=pyPdf.PdfFileReader(f);
g.mean();
print(ax.lines[0]);
var __except0__=KeyboardInterrupt;__except0__.__cause__=null;throw __except0__;
os.dup2(oldstdout_fno,1);
int(random.randrange(0,255));
MyButton1.grid(__kwargtrans__({row:0,column:0}));
ax.lines[-1].set_linewidth(8);
shlex.py_split(teststring);
var user=User.objects.py_get(__kwargtrans__({pk:1}));
var z=function(){var __accu0__=[];for(var row of x.T)__accu0__.append(function(){var __accu1__=[];for(var y of row)if(y)__accu1__.append(y);return __accu1__}());return __accu0__}();
help(subprocess.list2cmdline);
var ax=fig.add_subplot(111);
time.sleep(5);
f(x,y);
my_dict[key]=1;
jsonify(d);
decorator(method);
export var both=np.hstack(tuple([img1,img2]));
sys.stdout=old_target;
export var console_handler=logging.StreamHandler();
result.append(item);
print(formatter.format(fmt,__kwargtrans__(data)));
f.write(df.to_html());
subplot(4,1,1);
self.update_status();
print(df);
eval(x);
var result=[];
[0]+list(accumulate(function(){var __accu0__=[];for(var [_,g]of groupby(bool_array))__accu0__.append(sum(function(){var __accu1__=[];for(var _ of g)__accu1__.append(1);return py_iter(__accu1__)}()));return py_iter(__accu0__)}()));
wrapper;
export var my_field=models.CharField(__kwargtrans__({max_length:100}));
var now=time.time();

regex.sub(_replacer,string);
assertion_raiser();
var res=np.array(sorted(a,__kwargtrans__({key:function __lambda__(x){return-x.tolist()}})));
self.comboBox_2.addItems(list1);
export var unicode_somedir=somedir.decode(encoding);
time.sleep(.001);
dask.set_options(__kwargtrans__({py_get:dask.multiprocessing.py_get}));
var last_name=forms.CharField(__kwargtrans__({max_length:256}));
var writer=csv.writer(csvfile);
deleteL.__getslice__(idel,null,1);
np.matrix(m);
plt.draw();
var soup=bs4.BeautifulSoup(thehtml);
var arr=arr.flatten();
s.setsockopt(socket.SOL_SOCKET,socket.SO_KEEPALIVE,1);
var hxs=HtmlXPathSelector(response);
self._timer.cancel();
var driver=ChromeDriver(options);
print(function(){var __accu0__=[];for(var x of pattern.py_split(string))if(x)__accu0__.append(x);return __accu0__}());
ax.add_artist(ab);
foo.read();
set(d[0]).intersection(...d);
unittest.main();
(np.random.rand(40,40,9,1,9,1,8)+np.random.rand(1,9,1,9,8)).shape;
upload.save(file_path);
var r=requests.py_get(url,__kwargtrans__({stream:true}));
df.Mathscore.map(d);
foo(noniterable,__kwargtrans__({isiterable:false}));
var arr=numpy.zeros(tuple([50,100,25]));
sd.SetSecurityDescriptorDacl(1,dacl,0);
f.close();
var tree=ElementTree.parse(StringIO(text));
x/y;
start_date+timedelta(__kwargtrans__({days:days_in_month}));
var app=QtGui.QApplication([]);
np.cumsum(v);
var id=Column(Integer,__kwargtrans__({primary_key:true}));
x.close();
x+=c;
moving_average(a);
cf.body[0].names[0].py_name;
collection.insert(data);
views.py;

greet();
var l=function(){var __accu0__=[];for(var sublist of l)__accu0__.append(sublist.__getslice__(0,null,1));return __accu0__}();
mytest.start();
pd.Timestamp(0);
min(S);
var value=sheet.cell(row,col).value;
var query=query.filter(~table_a.id.in_(subquery));
tuple(function(){var __accu0__=[];for(var [py_name,score]of max_scores.py_items())__accu0__.append(dict([[py_name,score]]));return py_iter(__accu0__)}());
main();
ent.put();
dis.dis(test);
export var num_overlap=sum(map(all,zip(list1,list2)));
print(Kerma());
var p=subprocess.Popen(inputcommand,__kwargtrans__({stdout:subprocess.PIPE,shell:true}));
var dy=RK4(function __lambda__(t,y){return t*sqrt(y)});
export var qstring=webapp2.request.query_string;
ax2.plot(list(range(10)));
export var point_buffer=np.array(point_list);
var user_id=db.Column(db.Integer,__kwargtrans__({primary_key:true}));
print(list(range(math.floor(min(y)),math.ceil(max(y))+1)));
df;
print(map(function __lambda__(x){return x.__getslice__(0,-1,1)},test));
ax.get_yaxis().set_visible(false);
dict.__setitem__(self,key,value);
g[1].nunique();
var q=mp.Queue();
HttpResponseRedirect(request.path);
var df1=df.ix.__getitem__([tuple([0,null,1]),tuple([0,12,1])]);
true;
os.fstat(f.fileno()).st_nlink;
logger.addHandler(handler);
var thumb=ImageOps.fit(image,size,Image.ANTIALIAS);
set(function(){var __accu0__=[];for(var ts of x)__accu0__.append(frozenset(ts));return py_iter(__accu0__)}());
(function(){var __accu0__=[];for(var a=0;a<10;a++)for(var b=a;b<10;b++)for(var c=b;c<10;c++)__accu0__.append(tuple([a,b,c]));return __accu0__})();
f.close();
print(my_list);
json.dumps(lst);
print(tuple([filename,oct(mode)]));
df.index=df.index.py_values+df.RecordID.map(str);
main();
root.remove(child);
btn_1.focus_set();
var ordered=sorted(Foo.objects.all(),__kwargtrans__({key:function __lambda__(n){return tuple([n[0],int(n.__getslice__(1,null,1))])}}));
a[a>2];
float(str(x).__getslice__(0,i,1));
plt.figure(2);
msgunfmt[path_to_file.mo]>[path_to_file.po];
export var extruded=np.zeros(tuple([N,10,10]));
cv2.convertScaleAbs(image,result,alpha,beta);
self.retrieve(request,...args,__kwargtrans__(kwargs));
ax.quiver(X,Y,Z,U,V,W);
luckynumbers.append(item);
print(unicode_row);
var y=function(){var __accu0__=[];for(var p of points)__accu0__.append(p[1]);return __accu0__}();
root.py_update();
t.close();
var fig=plt.figure(__kwargtrans__({figsize:tuple([8,8])}));
print(map(str,rr));
yourFile.write(raw_data);
tuple([tuple([a[1],b[1]])]);
f(2);
var user=models.OneToOneField(User);
tuple([array[0]]);
print(xyz.__doc__);
plt.colorbar(pc,__kwargtrans__({ax:axes}));
plt.xticks(x,labels);
d.py_setdefault(a,[]).append(b);
clf.tree_.apply(np.asfortranarray(X.astype(sklearn.tree._tree.DTYPE)));
pythoncom.CoInitialize();
form.category.data=page.category?post.category.id:0;
np.diff(np.array(s));
np.allclose(a.indices,b.indices);
var a=np.arange(10);
self.conn.close();
bp.output_notebook();
var imgplot=plt.pcolormesh(lum_img);
proc.append(p);
var a=np.arange(10);
ax.bar(dates,py_values,__kwargtrans__({width:100}));
ui.WebDriverWait(browser,10).until(waiter);
df.to_records();
show();
export var contestant=models.ForeignKey(Contestant);
print(solve(eqn));
collection.find(dict({}),__kwargtrans__({limit:10})).py_sort(py_sort);
win.setWindowFlags(win.windowFlags()&~QtCore.Qt.WindowMaximizeButtonHint);
os.makedirs(myTemp);
var opener=urllib.request.build_opener(authhandler);
print(list(Squares(20,90)));
self.ax.autoscale_view();
time.sleep(1);
var a=[1,2,7];
var y=tf.slice(x,i,[1]);
export var authorization=authorization.Authorization();
ax.legend(handles,labels,__kwargtrans__({loc:2,ncol:4}));
inset.yaxis.set_tick_params(__kwargtrans__({labelsize:INSET_TICK_FONTSIZE}));
print(s.strip(punctuation));
var P=multiprocessing.Pool();
self.draw_grid();
pygame.init();
divide(2,7,1E3);
plt.imshow(im,__kwargtrans__({cmap:cm.gray}));
run_thread.start();
var sess=tf.Session(__kwargtrans__({config:config}));
all(function(){var __accu0__=[];for(var x of s)__accu0__.append(x==s[0]);return py_iter(__accu0__)}());
np.count_nonzero(df.isnull().py_values);
var fig=plt.figure();
np.array(sorted(a,__kwargtrans__({cmp:function __lambda__(x,y){return list(x).index(1)-list(y).index(1)}})));
zip(zip(...a),zip(...b))[0];
wx.Menu.__init__(self);
var value=test[2];
var b=copy.deepcopy(a);
c.append(list(el));
__all__[tupleofnames[i]]=data[i];
f();
date+=datetime.timedelta(__kwargtrans__({days:2}));
message.send();
Py_DECREF(py_name);
rows.append(row);
print(w.cget(item));
file_list.append(tuple([os.stat(filename)[stat.ST_MTIME],filename]));
self.driver.py_get(response.url);
self.pot.Boil();
ax.update_datalim(np.column_stack([x,y]));
print(icon_info.get_filename());
export var my_rhs=[1,1,0,0,0,-1,-1,-1,0,0,0];
var content=urllib.request.urlopen(some_url).read();
window.activateWindow();
sys.stdout=stdout;
round(2.99999999999);
qmgr.connectTCPClient(queue_manager,pymqi.cd(),channel,conn_info);

np.count_nonzero(abcd<=data2a&abcd>=data2b);
response.read();
Response(body,__kwargtrans__({status:status,headers:headers}));
f.readline();
datetime.now()-datetime.combine(bday,time());
cv.fit(X,y);
export var Index=py_next(function(){var __accu0__=[];for(var [i,_]of enumerate(a))if(np.isclose(_,val,tol))__accu0__.append(i);return py_iter(__accu0__)}());
np.random.seed(1977);
ser.sum();
plt.close(fig);
max(a,b);
print(function(){var __accu0__=[];for(var x of groups)if(!__in__(a,x))__accu0__.append(x);return __accu0__}());
elements.append(q.get_nowait());

new set([new set([field])]);
var msg=email.message_from_string(data[0][1]);
p.stdin.write(input);
var app=Flask(__name__);
ctx.py_pop();
print(b.__getitem__([tuple([0,null,1]),tuple([0,null,1]),2]));
var a=a.__iand__(b);
df.A.combine_first(df.B);
df.loc[df.__getslice__(1,null,1)[df.index.month.__getslice__(0,-1,1)!=df.index.month.__getslice__(1,null,1)].index];
m.swapaxes(0,2).__getitem__([tuple([0,null,-1]),tuple([0,null,1]),tuple([0,null,1])]);
np.argsort(p);
stream_handler.setFormatter(formatter);
var words=input_string.py_split();
df.apply(function __lambda__(x){return len(set(x))==1},__kwargtrans__({axis:1}));
seq.py_sort(__kwargtrans__({key:itemgetter(1)}));
var response=requests.py_get(url,__kwargtrans__({data:data}));
false;
export var json_data_string=simplejson.dumps(your_data);
GEN_CLOSED;
_async_raise(self._get_my_tid(),exctype);
Base.metadata.create_all(engine);
pd.isnull(df).sum()>0;
os.chdir(cwd_path[0]);
var fig=plt.figure();
fillmylist(l,5);

frame.Show();
self.admin_model_path=self.model.__name__.lower();
self.video_cap.release();
var result_dict=function(){var __accu0__=[];for(var [k,g]of it.groupby(mylist,keyfunc))__accu0__.append([k,list(g)]);return dict(__accu0__)}();
dict(function(){var __accu0__=[];for(var x of list(data.py_items()))if(x[0]>5)__accu0__.append(x);return __accu0__}());
print(f(2));
aapl.sign.iloc[(aapl.sign.diff()!=0).cumsum().drop_duplicates().index];
var args=parser.parse_args();
d[x].append(foo);
f.close();
myarray[0][-1];
self.pack();
ax.set_ylim(0,np.pi);
setattr(self,field.attname,getattr(db_instance,field.attname));
var d=defaultdict(list);
plt.plot(list(range(10)));
-bottleneck.partsort(-a,10).__getslice__(0,10,1);
np.cov(np.nan_to_num(data.T));
self.filter(__kwargtrans__({id__in:ids}));
export var ridx=sorted(range(len(U)),__kwargtrans__({key:idx.__getitem__}));
var d=pd.DataFrame();
var __left0__=time.time();var current_time=__left0__;var start_time=__left0__;
f.close();
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
canvas.draw();
(function(){var __accu0__=[];for(var rect of rects)__accu0__.append(rect.set_visible(false));return __accu0__})();
export var irc=socket.socket(socket.AF_INET,socket.SOCK_STREAM);
time.sleep(5);
var __left0__=[4,5];a[0]=__left0__[0];a[1]=__left0__[1];
plt.colorbar(__kwargtrans__({cax:cax}));
datetime.datetime(2001,11,12,0,0);
signal.pause();
numpy.zeros(tuple([2,20]));
print(self.myVar);
in_file.close();
inithello();
print(data);
windowSurface.blit(s,tuple([0,0]));
tuple([GST_VERSION_MINOR]);
self._data[key];
var result=np.cumsum(np.random.uniform(__kwargtrans__({size:100})));
(function(){var __accu0__=[];for(var x of l)if(memoized(x))__accu0__.append(memoized(x));return __accu0__})();
self.d[key]=max(self.d[key],n);
ax.set_rasterization_zorder(0);
var result=eval(myString);
len(set(str_.py_split()).intersection(list(dict_1.py_values())));
var today=datetime.datetime.now();
m.click(x,y,1);
var date=dateutil.parser.parse(text);
dc.SetBackground(wx.Brush(wx.Colour(255,0,255)));
myapp.db.create_all();
tuple([[0,0,0,0,1,0,0,0,0]]);
var bar=p[0];
var data=np.random.randint(0,100,tuple([4E5,206]));
b.grab_set();
layout.addWidget(self.view);
frame.a.str.contains(pattern);
time.sleep(2);
df.applymap(atof);
var n=a.shape[1];
info[0][1]==2;
ax1.patch.set_alpha(0);
db.add_son_manipulator(Transform());
form.jobs[0].company.choices=company_list;
cameraL.SetFocalPoint(0,0,0);
ax.set_ylim(-.5,1.7);
print(res.cluster.value_counts());
print(t.astimezone(EST));
dir(settings);
A.view(__kwargtrans__({dtype:np.complex128}));
var fig=plt.figure();
export var dt_start=dt_start+datetime.timedelta(__kwargtrans__({days:21}));
var doc=ET.fromstring(content);
(function(){var __accu0__=[];for(var [x,y]of groupby(L,itemgetter(0)))__accu0__.append(tuple([x,sum(map(itemgetter(1),y))]));return __accu0__})();
df.dtypes;
var browser=webdriver.Firefox(__kwargtrans__({firefox_binary:binary}));
help(modulename);
np.issubdtype(np.uint8,np.integer);
app;
element.remove(subelement);
a.__getslice__(1,null,1).__getslice__(0,null,2);
export var bytes=bitarray(bin(my_long)).tostring();
q.all();
print(tuple([group.id,group.last_response]));
var vals=redis.zrange(key,0,-1);
var screen_width=root.winfo_screenwidth();
print(sess.run(tf.shape(parsed),__kwargtrans__({feed_dict:dict([[raw,my_data]])})));
var py_items=function(){var __accu0__=[];for(var dic of items_to_clean)__accu0__.append(dicttolatex(dic));return __accu0__}();
print(function(){var __accu0__=[];for(var x of list(__all__.py_keys()))if(isinstance(__all__[x],FunctionType))__accu0__.append(x);return __accu0__}());
sys.stdout.write(line);
local_namespace.py_clear();
arr[97][99][99];
var d=dict(zip(function(){var __accu0__=[];for(var o of object_list)__accu0__.append(o.py_name);return py_iter(__accu0__)}(),object_list));
var s=socket.socket();
grouped.size().idxmax();
export var zipfile=ZipFile(StringIO(result.read()));
(function(){var __accu0__=[];for(var i of np.argsort(a.__getitem__([tuple([0,null,1]),0])))if(a.__getitem__([i,1])==-1)__accu0__.append(i);return __accu0__})()[0];
list(merged.py_values());
parser.add_argument(...option,__kwargtrans__(config));
foo();
random.choice(list(i));
var t_points=t_image.__getitem__([t_pos.__getitem__([tuple([0,null,1]),1]),t_pos.__getitem__([tuple([0,null,1]),0])]);
ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy());
export var output_signal=scipy.signal.filtfilt(b,a,input_signal);
pg.AxisItem.__init__(self,...args,__kwargtrans__(kwargs));
os.system(command);
export var eiffel_tower_5k=Location.objects.nearby(48.8582,2.2945,5);
var filename=os.path.abspath(os.path.realpath(filename));
list(flatten(remove(l,1)));
sys.stdout=sys.__stdout__;
print(br.title());
print(m.group(1));
var dom=xml.dom.minidom.parseString(document);
main();
D.ix[idx];
print(Decimal(x));
pythoncom.PumpWaitingMessages();
dateForm.set_index(pd.DatetimeIndex(poorList),__kwargtrans__({inplace:true}));
set_trace();
df;
[1,17,1,0,2,0];
browser.select_form(__kwargtrans__({nr:0}));
chain.from_iterable(function(){var __accu0__=[];for(var x of lst)__accu0__.append(isinstance(x,str)?[x]:x);return py_iter(__accu0__)}());
plt.show();
fileconcord.close();
var b=function(){var __accu0__=[];for(var sl of a)__accu0__.append(sl+[0]*(maxlen-len(sl)));return __accu0__}();
tuple([bad,good])[__in__(x,goodvals)].append(x);
arg2value;
connection.put_record(stream_name,data,partition_key);
(function(){var __accu0__=[];for(var i of range(0,len(q),2))__accu0__.append(sum(q.__getslice__(i,i+2,1)));return __accu0__})();
export var v1=max(0,A);
webdriver.Firefox(__kwargtrans__({firefox_profile:fp}));
stats.normaltest(x);
seen_add(k);
self.on_finish();
_test();
admin.site.register(model);
_quicksort(array,left,stop);
writer.writeheader();
sys.stdin.readline();
t.start();
root.mainloop();
window.set_icon(windowicon);
print(curve_fit(func,tuple([x,y]),z,p0));
sorted(mydict);
plt.subplot(121);
tuple([4,tuple([0,5,0,0])]);
self.textLayout.addWidget(text);
o.do();
csv_writer.writerows(mylist);
print(my_dict);
export var types=function(){var __accu0__=[];for(var elem of res.cursor.description)__accu0__.append(elem[1]);return __accu0__}();

print(foo(__kwargtrans__(d)));
print(pool.map(f,list(range(10))));
a[i].append(x);
var val=val.__getslice__(0,-1,1);
self.gzfile.close();
db.Column(...args,__kwargtrans__(kwargs));
var config=configparser.ConfigParser(__kwargtrans__({defaults:myDefaults}));
export var dst=cv2.cv.CreateMat(height,width,cv2.IMREAD_COLOR);
var total=sum(marks.py_values());
sys.getsizeof(Math.pow(10,Math.pow(10,6)));
var soup=BeautifulSoup(html);
browser.set_handle_redirect(true);
msgBox.exec_();
var app=Flask(__name__);
max(set(words),__kwargtrans__({key:words.count}));
var s=[0]+function(){var __accu0__=[];for(var i=1;i<len(x);i++)if(x[i]!=x[i-1]+1)__accu0__.append(i);return __accu0__}()+[len(x)];
ax.plot(dataX,dataY,__kwargtrans__({linewidth:.5}));
var response=urllib.request.urlopen(req2);
f.write(header);
draw();
ax.set_ylim(ax.get_ylim().__getslice__(0,null,-1));
new set([new set([day])]);
p.stdout.read().strip();
draw.text(tuple([5,5]),char,tuple([0,0,0]),__kwargtrans__({font:font}));
tuple(map(itemgetter(0),G));
Process.__init__(self);
export var transsurface=pygame.display.set_mode(screen.get_size());
libfoo.dll;
var val=ast.literal_eval(val);
p.join();
var s=pd.Series([10,10,10,14,10,10,10,14,100,14,10]);
http.HttpResponseRedirect(url_with_get);
subplot(1,2,1);
db.session.add(entry);
add(...arg);
var s=input();
print(self._applecount);
(function(){var __accu0__=[];for(var [d,n]of sorted(function(){var __accu1__=[];for(var x of myList)__accu1__.append(tuple([abs(x-myNumber),x]));return py_iter(__accu1__)}()).__getslice__(0,k,1))__accu0__.append(n);return __accu0__})();
result.append(a);
(function(){var __accu0__=[];for(var dct of listA)if(dct.py_items()>=dictA.py_items())__accu0__.append(dct);return __accu0__})();
p.start();
gunicorn_django-c/path/to/website_gunicorn.conf.py;
self.py_values.add(item[1]);
np.py_split(a-b,np.cumsum(y));
max(zip(map(sum,a),a))[1];
(function(){var __accu0__=[];for(var x of l)__accu0__.append(x+1);return set(__accu0__)})();
print(foo);
Parallel(__kwargtrans__({n_jobs:2}))(function(){var __accu0__=[];for(var x=i;x<j;x++)__accu0__.append(delayed(foo)(parameters));return py_iter(__accu0__)}());
uuid.uuid4().hex;
yaml.dump(data,outfile,__kwargtrans__({default_flow_style:false}));
self.pack();
d.cards.remove(Card(1,1));
tree.xpath(expr,__kwargtrans__({namespaces:nsmap}));
form.save();
print(line);
do_something_else();
var logger=logging.getLogger(py_name);
var soup=BeautifulSoup.BeautifulSoup(htmldoc);
self.filter(__kwargtrans__({id__in:ids}));
df.combine_first(s.T);
sys.getsizeof(t1);
var result=function(){var __accu0__=[];for(var [level,group]of groups)__accu0__.append(list(map(player,group)));return __accu0__}();
x.digest();
var out=function(){var __accu0__=[];for(var [[x,y,z],c]of zip(a,h))__accu0__.append(tuple([x,y,z,c]));return __accu0__}();
export var velocity=np.array(function(){var __accu0__=[];for(var i=0;i<dx_dt.size;i++)__accu0__.append([dx_dt[i],dy_dt[i]]);return __accu0__}());
my_logger.setLevel(logging.DEBUG);
var args=sys.argv.__getslice__(2,null,1);
vv.plot(x,y,z,__kwargtrans__({lw:10}));
var df=pd.DataFrame(np.random.randint(10,__kwargtrans__({size:tuple([10,10])})));
t.daemon=true;
demand.ix[series.py_name].apply(function __lambda__(x){return x*series}).stack();
var d=defaultdict(list);
tag.insert(1,subtag2);
plt.scatter(x2,y2,__kwargtrans__({label:str(pointset2)}));
var reader=csv.reader(csvinput);
new_func_name();
py_name[0][0][-1];
var data=json.load(jsonFile);
var a=function(){var __accu0__=[];for(var x of repeat([0]*cols,rows))__accu0__.append(x.__getslice__(0,null,1));return __accu0__}();
export var lis=[];
Profile.objects.filter(__kwargtrans__({full_name__iregex:regex}));
df.astype(float).sum().astype(int).astype(str);
num_df[num_df[data_columns].notnull().all(__kwargtrans__({axis:1}))];
conn.close();
print(g.user_set.all());
export var pic=QtGui.QPixmap(imagePath);
f.close();
ax.get_children();
(function(){var __accu0__=[];for(var x of sorted(list(range(n)),__kwargtrans__({key:vector.__getitem__})))__accu0__.append(vector.index(x));return __accu0__})();
print(list(od.py_values()));
var ax=fig.add_subplot(111);
a.remove(item);
y.py_sort(__kwargtrans__({key:sort_key}));
bucket.configure_lifecycle(lifecycle);
map(cls.my_func,py_items);
instance.save();
var key=bytearray.fromhex(hexs);
ax.xaxis.set_major_formatter(ticker.NullFormatter());
export var pb=gtk.gdk.Pixbuf(gtk.gdk.COLORSPACE_RGB,false,8,sz[0],sz[1]);
export var movie_tuples=function(){var __accu0__=[];for(var d of movie_dicts)__accu0__.append(tuple(map(d.py_get,fields)));return __accu0__}();
tuple([[0,0,0,0,0,1,0,0,0]]);
export var clocknumber=models.CharField(__kwargtrans__({max_length:16}));
var L=function(){var __accu0__=[];for(var i=0;i<ndims;i++)__accu0__.append(np.arange(start[i],stop[i]));return __accu0__}();
app.debug=true;
print(file.readline());
var res=function(){var __accu0__=[];for(var f of message.DESCRIPTOR.fields)__accu0__.append(f.py_name);return __accu0__}();
sys.path.insert(0,os.path.abspath("./P2JSnippets.py").rsplit(os.sep,2)[0]);
(function(){var __accu0__=[];for(var x of py_iter)if(is_even(x))__accu0__.append(x);return __accu0__})();
result.py_get();
print(isinstance(obj,BaseClass));
ax.plot(x,y);
queryset.filter(__kwargtrans__({created_at__range:tuple([first_date,last_date])}));
arr.__getitem__([1,1]);
var win=gtk.Window();
export var background_label=tk.Label(parent,__kwargtrans__({image:background_image}));
a.reshape(sh).mean(-1).mean(1);
plt.plot(list(range(10,20)));
signal.signal(signal.SIGALRM,nothing);
print(float(2));
export var full_time=timedelta(__kwargtrans__({seconds:multiplier*passed_time.total_seconds()}));
var index=np.ogrid.__getitem__([tuple([0,z2.shape[0],1]),tuple([0,z2.shape[1],1]),tuple([0,z2.shape[2],1])]);
func(...args);
var root=tk.Tk();
l.py_sort(__kwargtrans__({cmp:lcmp}));
cherrypy.quickstart(CServer(),__kwargtrans__({config:conf}));
self.audio.terminate();
var cb=plt.colorbar();
tree.predict(iris.data);
str(self.client_address[0]);
reactor.run();
output.append([item]);
df.py_values;
y[np.isnan(y)|np.isinf(y)]=0;
log_file;
export var srcs=function(){var __accu0__=[];for(var src of list_of_all)__accu0__.append(src[2]);return __accu0__}();
var writer=csv.writer(out);
map(mydict.py_get,function(){var __accu0__=[];for(var k of list(mydict.py_keys()))if(k>=6)__accu0__.append(k);return __accu0__}());
(x-x.min())*(b-a)/(x.max()-x.min())+a;
fig.subplots_adjust();
x(os.path.join(dirpath,f));
self.y-=STEP;
scipy.sparse.coo_matrix(tuple([data,ij]),__kwargtrans__({shape:tuple([nrows,ncols])}));
curs.execute(sql);
mutate_dict(function __lambda__(x){return x+1},my_dictionary);

export var maxlength=max(function(){var __accu0__=[];for(var s of stringlist)__accu0__.append(len(s));return py_iter(__accu0__)}());
textobj.set_text(wrapped_text);
var pool=multiprocessing.Pool();
max(list(d1.py_items()),__kwargtrans__({key:operator.itemgetter(1)}))[0];
export var numsum=sum(numbers);
var result_dict=OrderedDict();
matplotlib.hatch._hatch_types.append(CustomHorizontalHatch);
plt.show();
plt.ion();
p.start();
data[s<m];
result[i]=func1d(x,y);
textwrap.fill(s,__kwargtrans__({width:10}));
sorted(list(range(len(a))),__kwargtrans__({key:function __lambda__(i){return positions[i]}}));
(function(){var __accu0__=[];for(var e of l)__accu0__.append(function(){var __accu1__=[];for(var d of l)__accu1__.append(e-d);return __accu1__}());return __accu0__})();
ax.xaxis.set_major_formatter(ticker.FixedFormatter(name_list));
list(d.py_items());
tuple([[0,0,0,0,0,0,1,0,0]]);
docx.write(os.path.join(tmp_dir,filename),filename);
wx.EndBusyCursor();
gtk.main();
var mod=importlib.import_module(py_name);
d.add(2);
print(etree.tostring(doc,__kwargtrans__({pretty_print:true})));
Tup()[0];
var n=collatz(int(n));
print(sum(function(){var __accu0__=[];for(var x=0;x<1E6;x++)if(my_condition(x))__accu0__.append(1);return py_iter(__accu0__)}()));
ctypes.memmove(self._buffer,value,size);
zbar.version();
df.iloc[[p]+function(){var __accu0__=[];for(var i=0;i<len(df);i++)if(i!=p)__accu0__.append(i);return __accu0__}()];
new set([new set([b])]);
var lst=function(){var __accu0__=[];for(var word of s.py_split())__accu0__.append(word[0].upper()+word.__getslice__(1,null,1));return __accu0__}();
HypotheticalBranch(1,2,1);
self.label=QtGui.QLabel(self);
print(hex(id(b)));
plt.setp(labels,__kwargtrans__({rotation:90}));
date_paris.astimezone(pytz.utc);
df.dot(s);
var parser=argparse.ArgumentParser();
var user=request.user;
data.py_sort(__kwargtrans__({key:function __lambda__(data){return function(){var __accu0__=[];for(var c of data[0])__accu0__.append(alphabet.index(c));return __accu0__}()}}));
var res=function(){var __accu0__=[];for(var x of res)if(x.size>1)__accu0__.append(x);return __accu0__}();
export var na_values=[];
double_to_hex(17.5);
var r=requests.py_get(url);
ax1.axis([xmin,xmax,ymin,ymax]);
plt.grid();
array([16,6,8]);
self._timer.start();
var A=np.arange(16).reshape(tuple([4,4]));
print(maskborder.shape.__getslice__(0,2,1));
f.write(xml);
np.set_printoptions(__kwargtrans__({threshold:np.inf,linewidth:np.inf}));
writer.close();
ax.grid();
print(b.dtype,b[0].dtype,b[1].dtype);
export var scat=plt.scatter(x,y,__kwargtrans__({c:c,s:100}));
var result=db.engine.execute(sql);
var a=np.array(function(){var __accu0__=[];for(var row of py_values)__accu0__.append(sum(row*weights));return __accu0__}());
var z=z.reshape(x.shape);
var cj=cookielib.CookieJar();
time.sleep(60);
np.random.seed(1145);
p.stdout.close();
var data=response.read();
self.tws.connect();
print(concatenate(tuple([tone2,tone1]),__kwargtrans__({axis:1})));
self.assertEqual(resp.status_code,200);
self.output=[];
basemetaclasses.append(metacls);
source.camlp4.ocaml;
fd.close();
fig.figimage(np.random.random(tuple([xpixels,ypixels])));
python- -version;
TRUE;
max(function(){var __accu0__=[];for(var i of l)__accu0__.append(i[j]);return py_iter(__accu0__)}());
var sess=tf.Session();
var timestamp=calendar.timegm(d.utctimetuple());
export var to_remove=function(){var __accu0__=[];for(var [i,val]of enumerate(x))if(len(val)==2)__accu0__.append(i);return __accu0__}();
var cursor=connection.cursor();
pyplot.ioff();
export var mcurr=location_re.search(currline);
set(dic1)==set(dic2);
self.assertDictEqual(input_dict,expected);
c.writerow(function(){var __accu0__=[];for(var cell of r)__accu0__.append(cell.value);return __accu0__}());
count+=1;
py_new.py_setdefault(k,[]).append(v);
(function(){var __accu0__=[];for(var [a,b]of zip(dividers+[total],[0]+dividers))__accu0__.append(a-b);return __accu0__})();
files_grabbed.extend(glob.glob(files));
ax.set_xticks(np.arange(.5,10.5,1));
ax2.plot(x,y);
new set([new set([saved_setting])]);
random.shuffle(indices);
makesymbexp(makesymbtree(T,L));
print(response.getvalue());
var list1=function(){var __accu0__=[];for(var x of list1)__accu0__.append(int(x));return __accu0__}();
f.seek(0);
export var EllShape=Affine2D(numpy.array(sqrtm(inv(A)),__kwargtrans__({dtype:np.float64})));
print(a);
(function(){var __accu0__=[];for(var k of h1.py_keys()|h2)__accu0__.append([k,min(function(){var __accu1__=[];for(var i of tuple([h1.py_get(k),h2.py_get(k)]))if(i)__accu1__.append(i);return py_iter(__accu1__)}())]);return dict(__accu0__)})();
do_something();
self.clear_button.pack();
self.func(...args+self.args,__kwargtrans__(kwargs));
zip(assignment,...grades);
export var int_docs_info=function(){var __accu0__=[];for(var [k,v]of list(docss_info.py_items()))__accu0__.append([int(k),v]);return dict(__accu0__)}();
pylab.imshow(image);
self._data=dict({});
pool.close();
var id=models.CharField(__kwargtrans__({max_length:255,py_default:create_id}));
plt.tight_layout();
len(bitArray.tobytes())/float(len(sequence));
ax.legend();
theFile.close();
var words=line.py_split();
sum(chain(...my_list));
var array=[myNumber];
!int(a);
var fig=plt.figure();
print(__main__.__file__);
export var f1=Foo.objects.py_get(__kwargtrans__({pk:f1.id}));
msg.attach(text);
np.argwhere(A>50);
Department.objects.filter(__kwargtrans__({group__exact:self.group}));
(function(){var __accu0__=[];for(var _f of map(f,string))if(_f)__accu0__.append(_f);return __accu0__})();
self.root=tk.Tk();
var s=sparse.csr_matrix(a);
df.iloc[indexers];
data.append(value);
var app=wx.PySimpleApp();
print(best2);
__getitem__;
neurons.append(neuron);
my_array.clip(0,255);
var result=list(create(10));
cosetCoding.cosetCoding(10,11,8,ctypes.byref(arr),0);
mpp.start();
callback(myargument);
np.random.seed(100);
var a=py_next(function(){var __accu0__=[];for(var i of userInput)if(__in__(i,wordsTask))__accu0__.append(i);return py_iter(__accu0__)}(),42);
lxml.html.etree.tostring(a);
foo(20,5);
var G=nx.gnp_random_graph(n,p);
var AB=function(){var __accu0__=[];for(var [a,b]of zip(A,B))__accu0__.append(a+b);return __accu0__}();
[a,b,c,d,e,f];
self.stream.stop_stream();
update_document(person,data);
os.path.normpath(os.getcwd()+os.sep+os.pardir);
output.append(lst);
plt.plot(datenums,py_values);
pdb.set_trace();
export var camera_handle=ctypes.c_ulong(0);
a+b;

var parser=argparse.ArgumentParser();
var result=dict(defaults,__kwargtrans__(request));
[];
setattr(obj,key,value);
app.exec_();
worksheet.column_dimensions[get_column_letter(i+1)].width=column_width;
export var my_server=redis.Redis(__kwargtrans__({connection_pool:POOL}));
sess.run(init_op);
isinstance(obj.method,types.MethodType);
np.add(a,b,__kwargtrans__({out:c}));
var reader=csv.reader(f);
df;
random.shuffle(a);
df;
(function(){var __accu0__=[];for(var [_,g]of groupby(numbers,function __lambda__(x){return Math.floor(x/10)}))__accu0__.append(list(g));return __accu0__})();
gethandler;
time.sleep(.1);
var result=regex.match(str);
nbrs.fit(X);
self.setLayout(layout);
var client=suds.client.Client(sys.argv[1]);
map(tuple,pairs);
f.close();
output.write(resp.content);
time.sleep(x);
binascii.unhexlify(line);
var indices=np.py_split(sidx,cut_idx).__getslice__(1,null,1);
__init__.py;
fh.write(dh.read());
plt.hold(false);
plt.figure();
var tags=ManyToManyField(Tag);
var z=np.arange(Z);
pilImage.close();
tuple(it.chain(...base_lists));
var d=dict.fromkeys(a,0);
process(line);
new set([new set([my_dollars|currency])]);
axins1.set_ylim(y1,y2);
sorted(function(){var __accu0__=[];for(var [x,y]of list(distances.py_items()))__accu0__.append([x,y]);return __accu0__}(),__kwargtrans__({key:function __lambda__(x){return x[0]}}));
export var feature_names=vectorizer.get_feature_names();
plt.xticks(__kwargtrans__({visible:false}));
_test_model();
print(r[0]+r[1]);
print(value);
socket.gethostname();
(function(){var __accu0__=[];for(var i=0;i<len(a)-1;i++)__accu0__.append(a[i]-a[i+1]);return __accu0__})();
export var lgd=ax.legend(__kwargtrans__({loc:9,bbox_to_anchor:tuple([.5,0])}));
print(hex(i).__getslice__(2,null,1).zfill(2).upper());
res.append(x);
s.apply(partial(map,function __lambda__(x){return x*2}));

d[parts[0]]+=parts.__getslice__(1,null,1);
Decimal(2).sqrt();
var r=requests.py_get(file_url);
var foo=decorator_with_args(arg)(foo);
importlib.import_module(py_name);
server.close();
print(letters.__getslice__(0,i,1)+letters.__getslice__(i,null,-1));
export var sudokupossibilities=[[[1]*9]*9]*9;
d.mean(__kwargtrans__({axis:tuple(range(1,d.ndim))}));
plt.clf();
var soup=BeautifulSoup(text);
a.func();
MyUser.friends.append(Friend(MyUser.id,MyFriend.id));
df*df2.py_values;
list(map(function __lambda__(m,n){return m-n},a,b));
np.random.seed(10);
var ns=np.linspace(-5,5,1E3);
print(extract_text(htmlDom));
var id=Column(Integer,__kwargtrans__({primary_key:true}));
logging.error(e);
export var sockobj=socket.socket(socket.AF_UNIX,socket.SOCK_STREAM);
var t=np.copy(a.__getitem__([tuple([0,null,1]),0,0]));
tz.localize(parser.parse(a_datetime));
json.dumps(my_data);
mw.dockWdg2.setWidget(mw.content2);
log.addHandler(fileh);
output.close();
root.config(__kwargtrans__({menu:menubar}));
var __except0__=Exception();__except0__.__cause__=null;throw __except0__;
f.axes[4].set_position([.55,.45,.4,.05]);
var reader=csv.reader(input,__kwargtrans__(options));
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
var pool=Pool(__kwargtrans__({processes:4}));
handler();
(function(){var __accu0__=[];for(var [x,y,z]of G)__accu0__.append(x);return __accu0__})();
print(line.rstrip().__getslice__(0,null,-1));
np.npv(.01,cashflow);
urllib.request.install_opener(opener);
var list2=list(total_and_item(list1));
var digits=int(math.log10(-n))+2;
doSomethingWith(match.group(0));
zip(l,itertools.repeat(o));
app.debug=true;
Ainv[i]=np.linalg.inv(A[i]);
ast.literal_eval(s);
s.listen(1);
var divisibleBySeven=function(){var __accu0__=[];for(var num of inputList)if(num!=0&&__mod__(num,7)==0)__accu0__.append(num);return __accu0__}();
time.sleep(1);
var id=Column(Integer,__kwargtrans__({primary_key:true}));
var fig=plt.figure();
instance.save();
observer.start();
self.response.out.write(os.stat(path).st_mtime);
print(numpy.__version__);
c.most_common()[0];
result.py_get();
u.close();
subplot(4,1,2);
C4.foo();
C5.foo();
c_array.__setslice__(0,null,null,chain(function(){var __accu0__=[];for(var p of points)__accu0__.append(p);return py_iter(__accu0__)}()));
writer.save();
df.drop(df.columns[cols],__kwargtrans__({axis:1,inplace:true}));
print(p.groupby(p.diff().cumsum()).cumcount());
pprint(dict(grouped));
app.listen(8888);
var parser=argparse.ArgumentParser(__kwargtrans__({add_help:false}));
nopreds.add(u);
np.maximum.reduceat(given_sort,first_idx);
var tree=etree.parse(StringIO(data),magical_parser);
im.set_clim([frame.min(),frame.max()]);
var app=QtGui.QApplication(sys.argv);
image/=image.max()/255;
w.tk.mainloop();
int(s);
process(0);
plt.scatter(xs[i],ys[i],__kwargtrans__({marker:m[i]}));
signal.signal(signal.SIGALRM,self.handle_timeout);
var fig=plt.figure();
print(is_perfect_cube(2146689E3));
var screen=pygame.display.set_mode(DISPLAY,FLAGS,DEPTH);
export var alphabetDict=function(){var __accu0__=[];for(var char of alphabet)__accu0__.append([char,0]);return dict(__accu0__)}();
print(x);
fig.autofmt_xdate();
export var keyName=myMember.key().py_name();
int(time.mktime(value.timetuple()));
self.Bind(wx.EVT_LEFT_DOWN,self.on_left_down);
export var m2=np.zeros(tuple([50,50]));
sum(map(function __lambda__(x){return map(function __lambda__(f){return f(x)},ListArg)},listFunc),[]);
sys.getsizeof(Bar());
var __left0__=self.proc.communicate();self.out=__left0__[0];self.err=__left0__[1];
math.ceil(f/2)*2;
print(json.dumps(categories,__kwargtrans__({indent:4})));
var m=function(){var __accu0__=[];for(var col of l)__accu0__.append(function(){var __accu1__=[];for(var row of l)__accu1__.append(row-col);return __accu1__}());return __accu0__}();
abs(1);
export var url_get=self.request.GET;
f.bar(1,2);
subprocess.call(subprocess_cmd);
transpose.py_sort(__kwargtrans__({key:itemgetter(0)}));
hash(round(6.75,1));
p.stdin.close();
var pool=multiprocessing.Pool();
loop.run_until_complete(main());
df2[cols];
dict.__setitem__(self,frozenset(idx),value);
x+y;
text[__mod__(value+step,len(text))];
gevent.joinall(jobs);
print(requests.py_get(url).text);
outfile.write(self.archive.getmember(py_name).read());
ax.set_xticklabels(mons);
f.close();
__mod__(n,2)==0;
t.join();
(function(){var __accu0__=[];for(var [k,v]of d.py_items())__accu0__.append([k,function(){var __accu1__=[];for(var k_ of common_keys)__accu1__.append([k_,v[k_]]);return dict(__accu1__)}()]);return dict(__accu0__)})();
sys.exit(0);
mylist.append(item);
list(dict.py_keys())[0];
tn.close();
var tree=ET.parse(StringIO(text),parser);
dict_writer.writerows(rows);
MyModel.objects.filter(complexQuery);
var ax=fig.add_subplot(111);
df.ix.__getslice__(start,end,1);
o.call();
export var url=Column(String);
np.random.shuffle(zeros);
a2.__getitem__([tuple([0,null,1]),1])>10;
var a=bitarray(Math.pow(2,20));
pool.join();
(function(){var __accu0__=[];for(var i=0;i<5;i++)__accu0__.append(del_zeros(L,i));return __accu0__})();
nll;
result.add(elements[0]);
df;
rconsole.spawn_server();
f(__kwargtrans__(locals()));
XXX;
func(...args,__kwargtrans__(kwargs));
now-timedelta(__kwargtrans__({seconds:15}));
os.chdir(os.path.dirname(os.path.realpath("./P2JSnippets.py")));
reload_urlconf();
var x=int(str(x).__getslice__(0,null,-1));
pylab.draw();
var b=np.matrix(np.array(a));
a[0]*b[1]-a[1]*b[0];
var writer=csv.DictWriter(csvfile,__kwargtrans__({fieldnames:fieldnames}));
wx.Frame.__init__(self,parent,id,title,pos,size,style,py_name);
__main__.py;
doctest.testmod();
print(list(igroups([0,0,0])));
var ax=fig.add_subplot(111);
var r=boxplot(data);
nx.draw(G,pos);
groups.apply(existedBefore);
var a=np.delete(a,b,0);
numpy.ma.masked;
socket.setdefaulttimeout(10);
print(list(unzipped[0]));
pyplot.show();
parent.remove(elem);
Package-2/namespace/module2/__init__.py;
var ax=fig.add_subplot(111);
entryFrame.columnconfigure(0,__kwargtrans__({weight:10}));
export var func_name=sys._getframe().f_code.co_name;
d[k]=tuple(function(){var __accu0__=[];for(var d of ds)__accu0__.append(d[k]);return py_iter(__accu0__)}());
p.join();
plt.hist2d(a,b,tuple([50,50]),__kwargtrans__({cmap:plt.cm.jet}));
var b=__in__(word,function(){var __accu0__=[];for(var [i,w]of enumerate(wordList))if(!__in__(i,ignore))__accu0__.append(w);return py_iter(__accu0__)}());
obj.load_from_filename(filename);
export var PROJECT_DIR=os.path.dirname(os.path.abspath("./P2JSnippets.py"));
all(function(){var __accu0__=[];for(var i of l)__accu0__.append(isinstance(i,int));return py_iter(__accu0__)}());
var __left0__=plt.subplots(1,1);var fig=__left0__[0];var ax=__left0__[1];
g.set(__kwargtrans__({xticklabels:[]}));
var t=np.linspace(0,T,nsamples,__kwargtrans__({endpoint:false}));
ax.scatter(x,y);
export var ast=np.lib.stride_tricks.as_strided(a,a.shape*2,a.strides*2);
random.seed(1);
var py_name=models.CharField(__kwargtrans__({max_length:100}));
var __except0__=OSError(p.stderr.read().rstrip());__except0__.__cause__=null;throw __except0__;
print(response.read());
add_keys(d[l[0]],l.__getslice__(1,null,1),c);
X.__getitem__([tuple([0,null,1]),np.where(mask1)[0]])[np.where(mask2)[0]];
df.groupby(df.columns,__kwargtrans__({axis:1})).apply(function __lambda__(x){return x.info()});
self.common1();
root.tag;
setattr(self,key,[company]);
var merged=list(joinz(1,zdf1.py_iter(),0,zdf2.py_iter()));

var bitmap=np.array(bitmap,np.uint8);
time.sleep(2);
pd.concat(function(){var __accu0__=[];for(var [_,group]of grouped)if(len(group)>1)__accu0__.append(group);return __accu0__}());
plt.draw();
print(match.groupdict());
print(string);
var df=pd.concat([df]*1E3).reset_index(__kwargtrans__({drop:true}));
toggle_btn.pack(__kwargtrans__({pady:5}));
write.writeheader();
var __left0__=np.linspace(0,1,num_t,__kwargtrans__({endpoint:false,retstep:true}));var t=__left0__[0];var dt=__left0__[1];
self.__dict__=self._dict;
var a=[1,2,1,4,1,1,1,1];
ln.set_xdata(list(range(len(data))));
x.reshape(-1,x.shape[-1]).shape;
signal.signal(signal.SIGINT,_forward_to_django_shutdown_signal);
export var pixmap5=pixmap.scaled(64,64);
self.Bind(wx.EVT_WINDOW_CREATE,self.SetWindowShape);
np.isfinite(b_0).all();
int(string.__getslice__(0,null,2),2);
xscroll.grid(__kwargtrans__({row:1,column:0,sticky:E+W}));
ax.set_xticks(x_labels_pos);
roster.append(dayroster);
tableWidget.setItem(i,j,item);
tic2();
var f=function __lambda__(x){return x*np.cos(x-4)};
export var flags=np.arange(1,n+1).reshape(1,-1);
var cursor=cnxn.cursor();
accumulationList.extend(doSomething(x));
new set([new set([item_forms.empty_form])]);
_stack.append(self.kwargs);
(function(){var __accu0__=[];for(var x of a)__accu0__.append(function(){var __accu1__=[];for(var [v,f]of zip(x,funcs))__accu1__.append(f(v));return __accu1__}());return __accu0__})();
var mod=__import__(module_name);
os.path.join(...choices);
unicodedata.category(character);
code_country.append([key,countries[key]]);
self.window.set_default_size(100,gtk.gdk.screen_height());
var w=Gtk.Window();
collections.defaultdict(recursive_dict);
ttk.Frame.__init__(self,...args,__kwargtrans__(kwargs));
parse(data);
var data=json.loads(json_content);
var result=my_range.__getslice__(0,-1,1);
self.exit(0);
max(sentence);
self(other(...args,__kwargtrans__(kwargs)));
w.writerow(list(somedict.py_values()));

time.sleep(1);
DEVNULL.close();
self.session.py_get(url);
ax.set_zlim(-100,100);
textdata.set_index(mergecols,__kwargtrans__({inplace:true,drop:false}));
User._default_manager.py_get(__kwargtrans__({username__iexact:username}));
var form=UploadForm(request.POST,request.FILES);
canvas.grid(__kwargtrans__({row:1,column:1,sticky:Tkconstants.NSEW}));
(x+y)/2;

list(map(sub,a,b));
(function(){var __accu0__=[];for(var x of b)for(var b of a)__accu0__.append(x);return __accu0__})();
Base.metadata.reflect(__kwargtrans__({bind:engine}));
var idx=np.arange(A.shape[0]);
list(product([]));
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
list(totals.py_items());
var ax=fig.add_subplot(111);
var my_list=json.load(f);
var test=defaultdict(defaultdict(list));
list(set(chain(...x)));
var fig=plt.figure();
d.py_update(extra);
f.close();
result.append(list(range(last,last+v)));
app.register_blueprint(simple_page);
tuple([[0,0,0,0,0,8,0,0,0,8,0,0,0]]);
var results=Queue.Queue();
chi2.ppf(.8,__kwargtrans__({df:2}));
var path=os.path.realpath(path);
inner(x);
print(avg(arr));
print(df.iloc.__getitem__([tuple([0,null,1]),0]).py_values.flatten());
C5.bar();
var r=requests.post(finalURL,__kwargtrans__({data:payload}));
unittest.TextTestRunner(__kwargtrans__({verbosity:1})).run(testsuite);
f.readline();
os.system(image);
len(function(){var __accu0__=[];for(var _ of takewhile(function __lambda__(x){return x==a[0]},a))__accu0__.append(1);return __accu0__}());
output_file.writelines(merge(...files));
tuple([deletenew_list[0][0],new_list[1][0]]);
export var fn=function __lambda__(x){return true?x:function __lambda__(x){return x*x}};
db.session.commit();
socket.bind(tuple([HOST,PORT]));
ax.set_xlim([-.1,1.1]);
true;
export var buf=lines[-1];
foo.foo();
parser.print_help();
now_date.py_replace(__kwargtrans__({day:1}));
all(function(){var __accu0__=[];for(var x of it)__accu0__.append(x==first);return py_iter(__accu0__)}());
var m=cv2.moments(c);
self.level(sys.stderr);
s.ioctl(socket.SIO_RCVALL,socket.RCVALL_OFF);
var reader=csv.reader(csvfile);
var a=np.array([0,0,0,0,0,0]);
var ax=fig.add_subplot(111);
self.response.out.write(template.render(template_values));
solve(Math.pow(z,2)+(1+I)*z+(6+18*I),tuple([x,y]));
hist(function(){var __accu0__=[];for(var t of ts)__accu0__.append(t.hour);return __accu0__}(),__kwargtrans__({bins:24}));
any(function(){var __accu0__=[];for(var l of lines2)for(var s of search_strings)__accu0__.append(__in__(s,l));return py_iter(__accu0__)}());
family.remove(i);
export var suffixes=set(function(){var __accu0__=[];for(var s of x)__accu0__.append(s.__getslice__(-5,null,1));return py_iter(__accu0__)}());
model.feature_importances_;
print(pool.map(f,list(range(10))));
f.close();
main();
export var sort_idx=np.argsort(a);
wx.Frame.__init__(self,parent,__kwargtrans__({title:title,size:tuple([200,100])}));
leadingzerocounts[i]+=4;
pylab.show();
var lst=json.loads(string);
np.py_split(np.concatenate(tuple([a,np.zeros(padding)])),n);
round(number*20)/20;
tar.close();
obj.save();
ser.close();
var browser=webdriver.Firefox();
signal.signal(signal.SIGINT,self._signal_handler);
max(a);
var b=Finalizable();
np.all(np.linalg.eigvals(x)>0);
cv2.circle(img,tuple([x,y]),4,tuple([0,255,0]),-1);
foo.baz();
var key=function __lambda__(x){return x[0]};
result;
df.__getslice__(0,-1,1);
self.frame.SetFocus();
np.sum(np.where(m,1/p,.1/p),__kwargtrans__({axis:1}));
res.__setitem__([i,j,tuple([0,null,1])],[C,X,0]);
shutil.rmtree(path);
df[idx];
df;
self.device.open();
math.factorial(10);
var application=django.core.handlers.wsgi.WSGIHandler();
getattr(obj,self.attr);
(function(){var __accu0__=[];for(var x of a_list)if(x[0]==1)__accu0__.append(x);return __accu0__})();
print(list(multilpy_string(l)));
panel.to_frame().unstack().T.groupby(__kwargtrans__({level:0}));
var data=requests.py_get(url).json;
json.loads(json_data);
time.sleep(.05);
zip(l,l.__getslice__(1,null,1)).__getslice__(0,null,2);
self.conditions.__setslice__(0,null,null,function(){var __accu0__=[];for(var c of self.conditions)__accu0__.append(helper(c,py_metatype,params));return __accu0__}());
print(mystring.__getslice__(0,100,1));
psutil.pid_exists(os.getpid());
var x=list(d.py_keys());
export var cmat2=scipy.sparse.csc_matrix(mat2);
print(proc.communicate());
print(repr(test),repr(is_valid_name(test)));
os.chmod(path,stat.S_IWRITE);
(function(){var __accu0__=[];for(var x of _split(s))__accu0__.append(parser.parse(x));return __accu0__})();
ax.plot(xs,ys,...args,__kwargtrans__(kwargs));
y.__getslice__(0,null,1);
var fig=plt.figure();
array([27,27,27,26,26,26,26,26,26,26]);
pandas.set_printoptions(__kwargtrans__({max_colwidth:100}));
export var palindromes=function(){var __accu0__=[];for(var x of permutations(digits,Math.floor(k/2)))__accu0__.append(x+x.__getslice__(0,null,-1));return __accu0__}();
doing_fd.seek(0);
new set([new set([value])]);
__mod__(abs(x),abs(y))*(x>0?1:-1);
config.readfp(buf);
plt.tight_layout();
dict.__init__(self,...args,__kwargtrans__(kwargs));
app.exec_();
print(interestingelts[0]);
(function(){var __accu0__=[];for(var pairs of unique)__accu0__.append(dict(pairs));return __accu0__})();
data_entry.save();
print(url_string);
self.panel.Bind(wx.EVT_PAINT,self.OnPaint);
writer.writerows(changes);
frame.Show();
d[l[0]];
serve_on_port(2222);
plt.close();
var cov=np.array([[200,100],[100,200]]);
time.tzset();
plt.contourf(Yi,Xi,Z,__kwargtrans__({alpha:.7,cmap:plt.cm.jet}));
(function __lambda__(x){return int(float(x))});
export var INSTDIR=os.path.dirname(os.path.realpath("./P2JSnippets.py"));
var ax=plt.subplot(111);
2*np.arcsin(np.minimum(1,np.sqrt(a)))*radius;
do_something();
mlb.focus_set();
plt.subplot(211);
form.is_valid();
auth_login(request,user);
DO_SOMETHING();
log();
inverse_dict[v].append(k);
br.set_cookiejar(cj);
ax.axis([0,10,0,255]);
t.colname==getattr(t,Table.colname.property.key);
ax.axis([0,max_dim,0,max_dim]);
map(joiner,sixgrams);
plt.stem(x,y);
settings.py;
print(newList);
self.frames.append(ImageTk.PhotoImage(frame));
print(tuple([a,b,c]));
plt.show();
frame.axes.get_xaxis().set_ticks([]);
var app=web.application(urls,__all__);
G.add_edge(1,2);
time.sleep(random.random()*5);
random.seed(0);
arrow.utcnow().isoformat();
os.read(sys.stdin.fileno(),4096);
len(line)==9&&sum(line)==sum(set(line));
var m=re.search(pattern,text);
export var useful=l.__getslice__(match[0]+4,match[0]+8,1);
local_p.kill();
saveglobals(savepath);
print(response.info());
print(py_typeof(my_date));
self.instream.close();
var a=function(){var __accu0__=[];for(var i=0;i<5;i++)__accu0__.append([i]);return __accu0__}();
os.chdir(directorypath);
df.index.__getslice__(0,-1,1).union([df.index[-1]+pd.offsets.MonthEnd(0)]);
ax.autoscale();
foo[index]=tuple([foo[index][0],new_value]);
setattr(c,a,getattr(cls,a));
print(value[0]);
print(row);
do_something_with_i(i);
mock_output.reset_mock;
var br=mechanize.Browser();
str(self.num);
export var hashed_password=hashlib.sha512(password+salt).hexdigest();
_style.fill.start_color.index;
(function(){var __accu0__=[];for(var [a,b]of pairwise(L))__accu0__.append(b-a);return __accu0__})();
obj.some_method();
ax.invert_yaxis();
var img=cv2.rectangle(img,tuple([x,y]),tuple([x+w,y+h]),tuple([255,0,0]),2);
var s=match.group(0);
System.out.println(str.toString());
self.x==other.x;
var df=df.append(data);
self.mock_requests.py_get.assert_called_with(url);
tuple([p.i,p.fitness]);
d[number].append(line);
screen.show();
new_dict;
str(value);
instance.delete();
export var aDict=dict(zip(string.ascii_lowercase,list(range(1,27))));
HttpResponse(folders);
(function(){var __accu0__=[];for(var _=0;_<count;_++)__accu0__.append(random.randint(low,high));return __accu0__})();
print(my_func.__doc__);
QGraphicsTextItem.mouseReleaseEvent(self,event);
var ind=function(){var __accu0__=[];for(var i of sorted(enumerate(b),__kwargtrans__({key:function __lambda__(x){return x[1]}})))__accu0__.append(i[0]);return __accu0__}();
suspect[k]=v;
db.delete(d);
req.send(data);
deactivate;
print(r.url);
filelike.seek(0);
export var my_book=Book.objects.py_get(__kwargtrans__({pk:1}));
var new_im_vec=ravel(rollaxis(im,2));
self._handle(...args,__kwargtrans__(options));
print(get_max_count(__kwargtrans__({l:l,num:7})));
list.activites.all();
a.__setslice__(0,null,2,[-1,-2]);
(function(){var __accu0__=[];for(var word of s.lower().py_split())if(word[0].isalpha())__accu0__.append(list(filter(str.isalpha,word)));return __accu0__})();
(function(){var __accu0__=[];for(var x of li)__accu0__.append(double(x));return __accu0__})();
sys.exit(app.exec_());
print(f(2));
contourf(x,y,H,levels,__kwargtrans__({cmap:cmap_lin}));
contourf(x,y,H,levels,__kwargtrans__({cmap:cmap_nonlin}));
var body=urllib.parse.urlencode(post_data);
Response(post_serializer.data);
lock.acquire();
t[0].__sizeof__();
self.connectToMUC();
var Br=[x,x,x,x,x,0];
urlparse(url).query;
im.show();
export var t5=threading.Thread(__kwargtrans__({target:task5}));
var json_string=json.dumps(d);
T2();
var parser=argparse.ArgumentParser();
p.wait();
deleteself.d[k];
plt.imshow(normalized);
var c=a.__getslice__(0,null,2);
chain.from_iterable(function(){var __accu0__=[];for(var r=0;r<len(s)+1;r++)__accu0__.append(combinations(s,r));return py_iter(__accu0__)}());
var pool=ThreadPool(__kwargtrans__({processes:1}));
compare(mylist[i],mylist[j]);
export var sp=subprocess.Popen(command,__kwargtrans__({shell:true,stdin:sys.stdin}));
var fig=plt.figure();
[0,.4,.6,0,0];
sys.stdout.flush();
FALSE;
main();
np.inner(a,b);
print(permutenew(l));
print(cv2.__version__);
fin.close();
var u=np.unique(arr);
time.localtime().tm_isdst>0;
list(it.product(x,mit.flatten(y)));
set(function(){var __accu0__=[];for(var x of hello)if(hello.count(x)==m)__accu0__.append(x);return py_iter(__accu0__)}());
plt.gca().cla();
session.commit();
var ssh=paramiko.SSHClient();
func2();
p.start();
export var toss2=toss.copy();
datetime.utcfromtimestamp(dt64.astype(int));
sleep(1);
db.create_all();
var ax=fig.add_subplot(221);
df.ix.__getitem__([tuple([0,null,1]),df.columns.isin(col_list)]);
self._lines.append(d);
var a=np.arange(11);
plt.figure();
export var binimg=np.zeros(tuple([rgbimg.shape[0],rgbimg.shape[1]]));
new set([new set([item.date|localtime])]);
o5.method;
plt.show();
time.sleep(.5);
var __left0__=os.path.py_split(path);var path=__left0__[0];var tail=__left0__[1];
var ax=fig.add_subplot(111);
var __except0__=NotImplementedError;__except0__.__cause__=null;throw __except0__;
list.__init__(self);
f1();
re.findall(p,test_str);
list(set(result));
var soup=BeautifulSoup(html);
Counter(function(){var __accu0__=[];for(var x of arr)__accu0__.append(tuple([py_typeof(x),x]));return py_iter(__accu0__)}());
wkt.dumps(point);
export var sample=[[1,[1,0]],[1,1]];
math.floor(numpy.nextafter(x,-numpy.inf));
print(error.__class__.__name__,error);
plt.scatter(x[i],y[i],__kwargtrans__({marker:mapping[m[i]]}));
var b=function(){var __accu0__=[];for(var py_name of a.dtype.names)__accu0__.append([py_name,a[py_name]]);return dict(__accu0__)}();
signal.signal(signal.SIGINT,signal_handler);
np.random.shuffle(lst);
var ret=urllib.request.urlopen(req).read();
msg.attach(part);
print(pd.get_dummies(py_values[mask]));
surface.write_to_png(ofile);
var cbar=plt.colorbar(CF,__kwargtrans__({ticks:lvls,format:l_f}));
match.group(0);
1<<np.arange(m);
sum(alist);
export var checkBox=QtGui.QCheckBox();
export var cax=fig.add_subplot(122);
df1.iloc.__getitem__([tuple([1,5,1]),tuple([2,4,1])]);
new_df.index.set_levels(group_names,__kwargtrans__({level:0,inplace:true}));
export var photoImg=ImageTk.PhotoImage(img);
var n=function(){var __accu0__=[];for(var x of n)if(__in__(x,string.whitespace)||!__in__(x,string.printable))__accu0__.append(x);return __accu0__}();
[];
send_from_directory(__kwargtrans__({cache_timeout:0}));
var __left0__=dict.py_popitem();var key=__left0__[0];var value=__left0__[1];
var __left0__=p.communicate();export var preprocessed=__left0__[0];var _=__left0__[1];
log_file.close();
export var dfm_summary=pd.concat(dfs,__kwargtrans__({axis:1}));
var opener=urllib.request.build_opener(urllib.request.HTTPCookieProcessor(cj));
var B=np.py_split(A,np.argwhere(A.__getitem__([tuple([0,null,1]),0])==0).flatten().__getslice__(1,null,1));
slice_coords_by_x(arr,__kwargtrans__({xmin:1,xmax:5}));
(function(){var __accu0__=[];for(var w of word_list)__accu0__.append(counts[w]);return __accu0__})();
unittest.main();
popen.wait();
f(...args);
AC_SUBST([PYTHON_LIBS]);
[6.49,48.9995];
sorted(matches,__kwargtrans__({key:len,reverse:true}))[0];
print(line);
gtk.main();
table[table.column_name==some_value];
var graph=nx.Graph();
Test(somevalue);
os.chdir(curdir);
(function(){var __accu0__=[];for(var e of l)if(__mod__(e,2)==0)__accu0__.append(e);return __accu0__})();
var pool=multiprocessing.Pool(processes);
export var valves=CheckValve.objects.all();
export var myusers=db.session.query(User).all();
export var WINEVENT_OUTOFCONTEXT=0;
export var href_tags=soup.find_all(__kwargtrans__({href:true}));
img.show();
img.execute_transforms(__kwargtrans__({output_encoding:images.JPEG,quality:1}));
Clojure;
Response();
s.bind(tuple([ADDR,PORT]));
print(G.neighbors(1));
print(sess.run(output));
(function(){var __accu0__=[];for(var [x,y]of list(collections.Counter(l).py_items()))if(y>1)__accu0__.append(x);return __accu0__})();
func(__kwargtrans__(literal_eval(params)));
export var possibles=__all__.copy();
var d=dirname(dirname(abspath("./P2JSnippets.py")));
any(function(){var __accu0__=[];for(var i of fruits)__accu0__.append(__in__(i,fruit_dict1));return __accu0__}());
var output=function(){var __accu0__=[];for(var [x,y,label]of L)__accu0__.append(tuple([x,y]));return __accu0__}();
psycopg2.connect(__kwargtrans__({database:database_name}));
os.chdir(WORKDIR);
sys.getsizeof(x);
df;
print(r.read());
print(deco2.__name__);
var model=Sequential();
var lst=lst[0].py_split();
var s=pygame.Surface(tuple([1E3,750]));
print(time.mktime(t1));
fill_between(x,0,l[0],__kwargtrans__({color:colors[0],alpha:alpha}));
var parser=argparse.ArgumentParser();
(function(){var __accu0__=[];for(var item of x)__accu0__.append(item*2);return __accu0__})();
var fig=plt.figure();
self.queue.py_pop();
self.log_window.Show();
im.show();
f.seek(0);
list(od.py_values());
pprint.pprint(recur_dictify(df));
help(x);
map(sum,zip(a,b,c,d,e));
print(ord(sys.stdin.read(1)));
result;
sorted(set().union(...list(results[env].py_values())),__kwargtrans__({key:str.lower}));
f.seek(0);
self.queue.put(item,__kwargtrans__({block:true}));
var df=df.reindex(pd.DatetimeIndex(df.index),__kwargtrans__({fill_value:py_NaN}));
print(e.message);
var user=User.objects.py_get(__kwargtrans__({pk:1}));
var data=json.loads(response.read());
print(mechanize.urlopen(form.click()).read());
self.assertEqual(obj.val,2);
im.seek(im.tell()+1);
var abc=function __lambda__(){var args=tuple([].slice.apply(arguments).slice(0));return myFunction(...args,__kwargtrans__(kwargs))};
plt.show();
parallelismPool.close();
ax.cla();
export var big_np_array=np.array(big_array);
var ax1=fig1.add_subplot(111);
writer.writerow(record);
-javascript;
pl.ylim(0,1);
cp/usr/bin/pdb/path/to/virtual/env/bin;
print(sys.path);
var pool=multiprocessing.Pool();

export var src_dt=src_tz.localize(dt);
b.extend([i,i]);
var mask=np.in1d(A,B);
cv2.circle(mask,tuple([i[0],i[1]]),i[2],tuple([255,255,255]),-1);
img.ConvertToBitmap();
var line=f.stdout.readline();
print(bisect(b,a));
fb.append(str(n));
os.write(1,a.tostring());
var model=Sequential();
plot_confusion_matrix(df_conf_norm);
new_list.index(to_find.lower());
pcap_lookupnet(dev,ctypes.byref(net),ctypes.byref(mask),errbuf);
export var new2=np.array(function(){var __accu0__=[];for(var block of blocks)__accu0__.append(block.T);return __accu0__}()).T;
button.pack();
py_typeof(a);
var r=sqrt(2*random.uniform(0,1)/A+r_min*r_min);
py_typeof(img_str);
signal.signal(signal.SIGALRM,old_handler);
worksheet.write(row,col,text);
var s=socket.socket(socket.AF_INET,socket.SOCK_RAW,socket.IPPROTO_IP);
print(settings.SIMPLE_CONF);
print(x);
gen_move(list(range(10)).__getslice__(0,null,-1));

var d=dict({});
self.sizer.Add(self.inner_sizer,1,wx.ALL|wx.EXPAND,20);
var browser=webdriver.Firefox();
im.show();
time.sleep(10);
label.set_fontproperties(ticks_font);
g.kill();
export var mapping=dict(zip(a,b));
var data=ctypes.POINTER(ctypes.c_char)();
save_file.write(str(tweet));

nil;
var ii=df[pd.notnull(df.C)].index;
self.timeout=timeout;
np.setdiff1d(a1_rows,a2_rows).view(a1.dtype).reshape(-1,a1.shape[1]);
var pos=f.tell();
time.sleep(1);
var res=py_next(function(){var __accu0__=[];for(var [idx,[x,y]]of coupled_idx)if(x!=y)__accu0__.append(idx);return py_iter(__accu0__)}());
export var parentdir=os.path.dirname(os.path.dirname(os.path.abspath("./P2JSnippets.py")));
var y_pred=[0,0,2,1,0,2,1,0,2,0,2,2];
export var sum2=sum((row1*row2.T).data);
fork();
file2.close();
plt.show();
test();
plt.plot(x,y);
ax.plot(dates,data);
f(u(n-1));
new_stdout.seek(0);
logging.getLoggerClass().root.handlers[0].baseFilename;
var cols=df.columns.py_values.tolist();
var vals=function(){var __accu0__=[];for(var i=0;i<100;i++)__accu0__.append(g(i));return __accu0__}();
a.index(a.lstrip()[0]);
string.__getslice__(i,i+len(keyword)+5+1,1);
ax.pbaspect=[2,.6,.25];
c.setopt(c.HEADERFUNCTION,retrieved_headers.store);
var app=flask.Flask(__name__);
var ssh=paramiko.SSHClient();
both.reset_index(__kwargtrans__({inplace:true}));
output.close();
d.py_setdefault(a,dict({})).py_setdefault(b,dict({})).py_setdefault(c,[]).append(value);
self.response.set_status(404);
vt.__getitem__([tuple([0,null,1]),0]);
hey();
group.save();
ds.addSample(tuple([1,1]),tuple([0]));
np.linalg.solve(a,b);
var result=collections.defaultdict(list);
var total=sum(c.py_values());
threading.Thread(__kwargtrans__({target:listen_to_audio})).start();
var console=logging.StreamHandler();
plt.plot(list(range(10)),__kwargtrans__({rasterized:true}));
var numbers=function(){var __accu0__=[];for(var x of row)__accu0__.append(aux[x]);return __accu0__}();
plt.yticks(positions,labels);
ax.xaxis.set_minor_locator(hours);
substrings.py_sort(__kwargtrans__({key:len}));
python-i;
qPlg.append(QPointF(...p));
var today=datetime.date.today();
np.asarray(function(){var __accu0__=[];for(var i=0;i<10;i++)__accu0__.append(0);return py_iter(__accu0__)}());
plt.subplots_adjust(__kwargtrans__({hspace:.5,wspace:.001}));
a[-1].append(5);
print(df);
out.write(largedata);
round(VALUE*2,1)/2;
os.close(wpipe);
main();
t.start();
deleteself.__dict__[key];
conn.close();
var s=a.sum(__kwargtrans__({axis:tuple([0,1,2])}));
msg.attach(part);
(function(){var __accu0__=[];for(var sublist of ls)__accu0__.append(function(){var __accu1__=[];for(var i of sublist)if(i<n)__accu1__.append(i);return __accu1__}().__getslice__(0,5,1));return __accu0__})();
var fig=plt.figure();
numpy.sin(x);
var df=df.astype(object);
window.show_all();
var app=wx.PySimpleApp();
scipy.sparse.linalg.spsolve(coeff_mat,np.ones(2*(n-1))*n);
dictonary[k].append(file);
var f=function __lambda__(x){return 2*x};
np.arange(10).__getslice__(10,-1,-1);
s.add(x);
substrings.py_sort(__kwargtrans__({key:function __lambda__(s){return len(s)}}));
export var first_record=py_next(all_records);
sh.write(n,1,v);
d[a][b]=c;
contents.py_sort(__kwargtrans__({key:itemgetter(2)}));
var date=datetime.datetime.fromtimestamp(seconds+sub_seconds);
func(cpy);
handler.setFormatter(formatter);
f.write(imgdata);
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
len(df[~pd.to_datetime(df.index).isin(dropThis)]);
pylab.plot(t);
peasant.badly_hurt();
ax.plot(list1);
var serializer=UserSerializer(request.user);
deleteordered_dict[k];
var BASE_DIR=os.path.dirname(os.path.dirname("./P2JSnippets.py"));
(function(){var __accu0__=[];for(var c of cls.__subclasses__())__accu0__.append(c.__name__);return __accu0__})();
var __except0__=Exception();__except0__.__cause__=null;throw __except0__;
print(a.__getslice__(0,10,1));
zip(a,b);
d[i]=np.sum(a.__getitem__([i,tuple([b[i],c[i],1])]));
sys.exit(0);
glVertex2i(10,110);
result.append(list[index]);
max(result,__kwargtrans__({key:len}));
list(map(ord,list(L)));
sorted(s)==sorted(t);
mlab.pipeline.iso_surface(src,__kwargtrans__({contours:[s.max()-.1*s.ptp()]}));
plot(x,y);
tk.Frame.__init__(self,parent,...args,__kwargtrans__(kwargs));
gevent.sleep(r);
wrapper1;
x+=a*np.cos(2*np.pi*f0*t+.11);
var img=img.resize(tuple([160,240]),Image.ANTIALIAS);
conn.accept();
pprint(function(){var __accu0__=[];for(var k of dir(creator.__code__))__accu0__.append([k,getattr(creator.__code__,k)]);return dict(__accu0__)}());
counter.save();
(function(){var __accu0__=[];for(var i of k)__accu0__.append(d[i]);return py_iter(__accu0__)})();
download_ftp_tree(ftp,remote_dir,local_dir);
shutil.rmtree(target);
var df=df.append(r);
os.unlink(f_path);
list(map(pow,list(range(10)),repeat(2)));
mylist[Math.floor(n/10)].append(n);
df.convert_objects(__kwargtrans__({convert_numeric:true}));
var df=pd.Panel.from_dict(d).to_frame();
cv.Circle(color_image,center_point,20,cv.CV_RGB(255,255,255),1);
print(countOccurencesAtTheEndOfTheList([1,2,1,1,1,1,1,1]));
plt.clf();
auth.login(request,user);
export var lda=gensim.models.ldamodel.LdaModel(__kwargtrans__({corpus:mm,num_topics:100}));
new set([new set([form.as_p])]);
project.some_func();
(function(){var __accu0__=[];for(var t of zip(a,py_reversed(a)))for(var x of t)__accu0__.append(x);return __accu0__})().__getslice__(0,len(a),1);
event.Skip();
OrderedDict.__init__(self,...a,__kwargtrans__(kw));
df.iloc.__setitem__([tuple([7,9,1]),5],np.nan);
export var chardet_detector=UniversalDetector();
var lines=ax.plot(np.arange(1E3));
session.commit();
chardet_detector.reset();
set.intersection(...sets);
np.where(Math.pow(x,2)+Math.pow(y,2)>1E-10,x*y/(Math.pow(x,2)+Math.pow(y,2)),.5);
sys.path.append(egg_path);
hzfile.printdir();
print(words==sorted(words,__kwargtrans__({key:str.lower})));
dict(CharCounter(text));
(function(){var __accu0__=[];for(var i of range(start,end,step))__accu0__.append(Convert(i,base));return py_iter(__accu0__)})();

Doc.save();
help(cherrypy.engine.exit);
picture.getpixel(tuple([x,y]));
stoppool.start();
mpmath.besseli(0,1714);
self.traceback=traceback.extract_stack()[-2];
os.remove(str(filename));
insert_sort(ascend_list,i,function __lambda__(x,y){return x.__getslice__(1,null,1)>=y.__getslice__(1,null,1)});
rpy2.robjects.numpy2ri.activate();
var df=pd.concat([s1,s2],__kwargtrans__({axis:1})).ffill().dropna();
self.value+=1;
out.__setitem__([tuple([0,null,1]),tuple([0,null,1]),mask],B.__getitem__([tuple([0,null,1]),tuple([0,null,1]),tuple([0,null,1]),tuple([0,null,-1])]).__getitem__([tuple([0,null,1]),tuple([0,null,1]),mask.__getitem__([tuple([0,null,1]),tuple([0,null,-1])])]));
dict(function(){var __accu0__=[];for(var [k,v]of compat.iteritems(data))__accu0__.append(tuple([k,v[v<0].to_dict()]));return py_iter(__accu0__)}());
Frame.__init__(self,master);
self._window.show();
f(1,2);
export var parent_dir=os.path.dirname(os.path.dirname(os.path.abspath("./P2JSnippets.py")));
panel.SetSizer(sizer);
time.sleep(1);
print(etree.tostring(child));
run(__kwargtrans__({reloader:true}));
var f=urllib.request.urlopen(req);
cbar.set_clim(-2,2);
current.append(item);
nonzero(t==8)[0][0];
print(f.py_split(d)[0]+d[0]);
print(stealth_check[key]);
s.close();
form.save();
df;
horoscope.check_all();
figure();
show();
var cursor=db.execute(__mod__(sql,params));
q.write(str);
session.rollback();
ax.imshow(field1,__kwargtrans__({cmap:plt.cm.YlGn,vmin:_min,vmax:_max}));
export var fields=list(addresses_table.columns.py_keys());
var words=string1.py_split();
print(submission.url);
nsmallest(4,list(range(len(py_values))),__kwargtrans__({key:py_values.__getitem__}));
tuple([.08400000000000002,.9999999882280098]);
shapesMatch([tuple([0,0]),tuple([1,1]),tuple([0,2]),tuple([-1,1])],rectangle);
unittest.main();
ged.close();
var r=requests.py_get(my_url,__kwargtrans__({cookies:cookies}));
var ax1=fig.add_subplot(111);
var out=np.mod(c,2);
var cursor=db.cursor();
getattr(self.base,py_name);
var newList=np.clip(oldList,0,255);
sys.stdout.write(c);
exit.__str__();
var __left0__=np.gradient(Z,.05,.05);export var gy=__left0__[0];export var gx=__left0__[1];
ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy());
export var DD=datetime.timedelta(__kwargtrans__({days:90}));
self.edges.py_setdefault(n2,[]).append(tuple([n1,w]));
a[numpy.where(a>2)];
s.unique();
var a=np.array([0,.1,.5,1]);
var d=defaultdict(list);
var r=Ribbon(root);
myOjbect.doStuf().doMoreStuf().goRed().goBlue().die();
plt.grid();
np.diag(d-4)+4;
response;
var mapping=map(chr,list(range(256)));
(function(){var __accu0__=[];for(var x0 of x)for(var y0 of y)__accu0__.append([x0,y0]);return __accu0__})();
export var forms=function(){var __accu0__=[];for(var f of br.forms())__accu0__.append(f);return __accu0__}();
isinstance([],tuple([tuple,list,set]));
export var evensList=function(){var __accu0__=[];for(var x of myList)if(__mod__(x,2)==0)__accu0__.append(x);return __accu0__}();
fig.canvas.mpl_disconnect(cid);
plt.figure(__kwargtrans__({figsize:tuple([20,8])}));
ax.add_artist(bbox_image);
time.sleep(1);
foo.bar();
var __left0__=list(range(5));export var CTS=__left0__[0];export var DSR=__left0__[1];export var XXX=__left0__[2];export var YYY=__left0__[3];export var ZZZ=__left0__[4];
text(x,y,s,__kwargtrans__({fontsize:12}));
s.close();
queries&=Q(__kwargtrans__(dict([[key,options[key]]])));
G2.add_nodes_from(nodes);
self.paths=[];
var distances=numpy.linalg.norm(np_cell[1]-srcPos);
[];
export var compiler=msvc;
metadata.create_all();
string.ascii_lowercase;
list(filter(os.path.isfile,os.listdir(os.curdir)));
dis.dis(myfunc);
var ax=plt.gca();
f(...args,__kwargtrans__(kwargs));
print(sum(function(){var __accu0__=[];for(var mystr of strings)__accu0__.append(len(mystr));return py_iter(__accu0__)}()));
list(d.py_keys());
ax.figure.canvas.draw();
fh.seek(0);
export var ll=list(itertools.chain.from_iterable(function(){var __accu0__=[];for(var e of l)__accu0__.append(tuple([e,e]));return py_iter(__accu0__)}()));
var screen=pygame.display.set_mode(tuple([500,500]),HWSURFACE|DOUBLEBUF|RESIZABLE);
var queryset=Town.objects.all();
var y=myodeint(function __lambda__(y,t){return func(y,t,alpha)},[1,0,0],t);
var title=models.CharField(__kwargtrans__({max_length:100}));
ax[1].add_collection(collection);
randint(100,999);
dictpsl[key].append(pslrc);
var li=list(filter(condition,li));
var my_array=list(filter(function __lambda__(x){return x!=value_to_remove},my_array));
matrix[0][2];
initial_array+=increments.__getslice__(0,null,-1).cumsum().__getslice__(0,null,-1);
s2.reset_index(__kwargtrans__({inplace:true,drop:true}));
var t=np.linspace(0,1,6);
var entry_list=function(){var __accu0__=[];for(var entry of feed.entry)__accu0__.append(entry.title.text);return __accu0__}();
print(__in__([1,0],chain(...sample)));
module.workflow_set.filter(__kwargtrans__({trigger_roles__id__exact:self.role.id,allowed:true}));
df;
sorted(data)==sorted(data2);
self.lbl.after(1E3,self.updateGUI);
sorted(list(range(len(vals))),__kwargtrans__({key:vals.__getitem__}));
self.py_values.append(value);
session.put();
var fig=plt.figure(1);
eval(strab);
simplejson.load(f);
var __left0__=singlet_list;var item=__left0__[0];
self.rfile.close();
[[11,12],[21,21]];
things.filter(__kwargtrans__({category:category}));
plt.imshow(x,__kwargtrans__({cmap:mpl.cm.bone}));
s.remove(1);
win.idlok(true);
win.leaveok(true);
app.run();
var __left0__=process.communicate();var output=__left0__[0];var err=__left0__[1];
var a=1;
reactor.connectTCP(host,port,factory);
pdf.getNumPages();
plt.draw();
termios.tcsetattr(fd,termios.TCSADRAIN,old_settings);
item.save();
var cur=conn.cursor();
print(np.random.dirichlet(np.ones(10)*1E3,__kwargtrans__({size:1})));
var ax=fig.add_subplot(111);
symmetric_dec(body,session_key);
print(df.head());
screen.refresh();
random.shuffle(tmp);
child1();
child2();
sess.run(outputs,__kwargtrans__({feed_dict:feed}));
var Y=Y+Z.__getslice__(0,null,-1)-Z[-1];
self.crawler.stop();
np.roll(a,2);
sorted(list(totals));
var g=function(){var __accu0__=[];for(var i of a+b)__accu0__.append(i);return py_iter(__accu0__)}();
new_df;
var s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);
my_array[i]=el;
self.glade.add_from_file(self.gladefile);
list(function(){var __accu0__=[];for(var [pos,val]of enumerate(py_reversed(test)))__accu0__.append(Math.pow(10,pos)*val);return py_iter(__accu0__)}());
var app=Flask(__name__);
new_file.write(line.py_replace(pattern,subst));
app.yaml;
part.get_payload();
result.append(row);
Wire.write(number);
ax.figure.canvas.draw();
tree.delete(i);
pl.xlim(0,100);
print(form.is_valid());
feeder_lock_object.release();
ao.__setitem__([tuple([0,-1,1]),tuple([1,null,1])],ao.__getitem__([tuple([0,-1,1]),tuple([1,null,1])])+ai.__getitem__([tuple([1,null,1]),tuple([0,-1,1])]));
self.dictset=dict({});
(A!=0).cumsum(1).argmax(1);
list(results);
print(s.query(A).filter(A.boolean).all());
self._callfunc(self,...args,__kwargtrans__(kwargs));
print(ET.tostring(dict_to_etree(d)));
slice1.append(a,b);
var ws=wb.active;
outdict[k.lower()]=v.lower();
g.add_edge(2,4);
np.in1d(test,states);
list(res);
export var wordCount=Counter(words);
var ax=plt.gca();
var lgd=ax.legend(__kwargtrans__({loc:9,bbox_to_anchor:tuple([.5,-.02])}));
tty.tcsetattr(stdin_fileno,tty.TCSANOW,old_ttyattr);
test.main();
C.reshape([4,2,2]);
qjup;
self.py_popitem(__kwargtrans__({last:false}));
setattr(cls,py_name,decorator(fn));
print(r.json());
signal.alarm(0);
var d=function(){var __accu0__=[];for(var k=0;k<10;k++)__accu0__.append([k,[]]);return dict(__accu0__)}();
result.append(L.py_pop());
a.remove(e);
plt.show(f);
ax.add_artist(p);
proc.join();
var ts=(dt_with_tz-datetime(1970,1,1,__kwargtrans__({tzinfo:pytz.utc}))).total_seconds();
self.columnconfigure(0,__kwargtrans__({weight:1}));
ShowAppsView.as_view()(self.request);
random.shuffle(keysShuffled);
chr(97);
list1.append(word);
os.getcwd();
export var unconverged=np.ones(__kwargtrans__({shape:arr.shape,dtype:bool}));
self.data[k];
log.setLevel(logging.DEBUG);
var A=A[0];
var c=function(){var __accu0__=[];for(var [k,v]of list(a.py_items()))__accu0__.append([v,k]);return dict(__accu0__)}();
console.setLevel(logging.INFO);
all(function(){var __accu0__=[];for(var k of dic1)__accu0__.append(__in__(k,dic2));return py_iter(__accu0__)}())&&all(function(){var __accu0__=[];for(var k of dic2)__accu0__.append(__in__(k,dic1));return py_iter(__accu0__)}());
py_typeof(f);
var df=df.mul(df.columns.to_series(),__kwargtrans__({axis:1}));
self.finished.emit();
plt.figure(__kwargtrans__({figsize:tuple([width,height])}));
IedConnection_getServerDirectory.restype=c_void_p;
print(fib(i));
time.sleep(poll_seconds);
var df=pd.DataFrame(array,__kwargtrans__({columns:columns}));
nums.append(tuple([item,n-item]));
export var line_list=function(){var __accu0__=[];for(var line of filtered_soup)__accu0__.append(line);return __accu0__}();
i+=1;
df[subset[subset.isin(myList)].stack().duplicated().unstack().any(1)];
platform.release();
test.main();
print(res.queryString());
(function(){var __accu0__=[];for(var d of MyArray)__accu0__.append(d.__getslice__(0,4,1));return __accu0__})();
json.loads(page_detail_string);
(function(){var __accu0__=[];for(var a of lst)__accu0__.append([a[d],todict(function(){var __accu1__=[];for(var x of X)if(x[d]==a[d])__accu1__.append(x);return __accu1__}(),d+1)]);return dict(__accu0__)})();
print(self.recv(8192));
sorted(s,__kwargtrans__({key:function __lambda__(c){return tuple([-s.count(c),s.index(c)])}}))[0];
request.FILES.py_update(files);
export var surf2=pygame.Surface(tuple([200,200]));
xticks[-1].label1.set_visible(false);
list(pkgutil.iter_modules());
export var groups=itertools.groupby(a,__kwargtrans__({key:function __lambda__(x){return x[1]}}));
S.__setitem__([int(line[0]),int(line[1])],true);
df.B.plot(__kwargtrans__({ax:plt.gca()}));
var fig=plt.figure();
sys.exit(1);
imgfile.close();
var __left0__=plt.subplots(__kwargtrans__({nrows:2,ncols:4,figsize:tuple([12,5])}));var fig=__left0__[0];var axes=__left0__[1];
db.session.add(g);
var now=datetime.now();
ssh.connect(hostname,__kwargtrans__({username:username,password:password}));
time.sleep(.2);
var m=scipy.sparse.coo_matrix(tuple([data,tuple([r,c])]),__kwargtrans__({shape:tuple([1E5,4E4])}));
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
sys.path.insert(0,root_path);
server.ping();
test_maybe_recursive();
fl.close();
export var pilImage=Image.open(StringIO(rawImage));
export var sorted_data=sorted(list(data.py_items()),__kwargtrans__({key:operator.itemgetter(1)}));
os.getcwd();
var fig=plt.figure();
(function(){var __accu0__=[];for(var c of foo)if(!__in__(c,temp)&&(temp.add(c)||true))__accu0__.append(c);return __accu0__})();
sys.stdout.write(line);
out.putpixel(tuple([x,y]),color);
export var INSTALLED_APPS=tuple([]);
numpy.array(imc);
print(resp.status_code,resp.text,resp.headers);
var response=requests.py_get(url);
sys.path.insert(0,virtual_site);
export var polycube=numpy.transpose(polycube,tuple([1,2,0]));
instance.save();
var opener=urllib.request.build_opener(urllib.request.HTTPCookieProcessor(cj));
sys.exit(9009);
pylab.scatter(function(){var __accu0__=[];for(var p of pp)__accu0__.append(p[0]);return __accu0__}(),function(){var __accu0__=[];for(var p of pp)__accu0__.append(p[1]);return __accu0__}());
time.sleep(1);
np.histogram(sampling,__kwargtrans__({bins:np.arange(len(A)+1)}))[0];
ao.__setitem__([tuple([0,-1,1]),tuple([0,null,1])],ao.__getitem__([tuple([0,-1,1]),tuple([0,null,1])])+ai.__getitem__([tuple([1,null,1]),tuple([0,null,1])]));
server_sock.listen(1);
float(MyClass());
p.kill();
print(json.dumps(doc.identity.addr.reprJSON(),__kwargtrans__({cls:ComplexEncoder})));
export var flat_index=coo.__getitem__([tuple([0,null,1]),0])*np.max(coo.__getitem__([tuple([0,null,1]),1]))+coo.__getitem__([tuple([0,null,1]),1]);
export var triplets=function(){var __accu0__=[];for(var x of triplets)__accu0__.append(set(x));return __accu0__}();
npi.group_by(a.__getitem__([tuple([0,null,1]),tuple([0,2,1])])).py_split(a);
temp.py_sort();
print(np.ma.masked_invalid(a));
time.sleep(1);
var Z=np.array(mean_data).__getitem__([tuple([0,null,1]),2]);
export var e1=np.array([1,0,0]);

var Z=f(np.dstack(np.meshgrid(x,y)));
print(e.gmm());
var x=np.random.rand(10);
flatten(Cards);
self.edges.py_setdefault(n1,[]).append(tuple([n2,w]));
var content=browser.page_source;
gca().set_autoscale_on(false);
(function(){var __accu0__=[];for(var [i,ltr]of enumerate(s))if(ltr==ch)__accu0__.append(i);return __accu0__})();
ax.add_patch(patches.Rectangle(pos,w,h,__kwargtrans__({color:c})));
b.grab_release();
export var opencvImage=cv2.cvtColor(numpy.array(pil_image),cv2.COLOR_RGB2BGR);
dict(MyDict.lists());
conn.close();
sys.getsizeof(b);
var writer=csv.writer(output);
(abs(arr_f-a)<t).any();
sum_over_n[Math.pow(-1,n)*Math.pow(x,2*n)/math.factorial(2*n)];
dataFrame.pow(timeSeries,__kwargtrans__({axis:0}));
var args=parser.parse_args();
var writer=csv.writer(outfile);
show(0);
var f=urllib.request.urlopen(req);
turtle.Screen().exitonclick();
Resources.objects.filter(__kwargtrans__({user:self.request.user.username}));
self.finished.emit();
sys.exit();
var data=np.array(imc);
deletea.__getslice__(0,null,1);
reactor.run();
dc.SetFont(self.GetFont());
signal.signal(signal.SIGINT,self.exit_gracefully);
com.convert_robj(rdf);
InitializeComponent();
max(groups,__kwargtrans__({key:_auxfun}))[0];
var df=pd.DataFrame(data_as_2d_ndarray);
block_reduce(arr*area_cell,__kwargtrans__({block_size:tuple([2,2]),func:np.ma.mean}));
var t=np.random.randint(0,50,500);
rel_path.py_split(os.path.sep);
print(match);
var a=Finalizable();
(function(){var __accu0__=[];for(var x of s)if(!__in__(x,rm))__accu0__.append(x);return __accu0__})();
a[subset_a]+=1;
print(delta.total_seconds());
export var ei=np.where(em.flat)[0];
wx.Panel.__init__(self,parent);
plt.close();
var __except0__=NotImplementedError;__except0__.__cause__=null;throw __except0__;
random.shuffle(py_keys);
env.forward_agent=true;
os.path.splitext(f);
plt.close();
checkIP.__file__;
df.sort_index();
hash(tuple([self.i,self.k,self.j]));
self.cardsdiscarded+=1;
- -nologcapture;
leg.set_zorder(1);
var img=Image.open(file);
outfile.write(text);
var df=pd.DataFrame(dict(function(){var __accu0__=[];for(var [k,v]of list(sample.py_items()))__accu0__.append(tuple([k,pd.Series(v)]));return __accu0__}()));
setattr(s,py_name,value);
plt.xticks(list(xMap.py_values()),list(xMap.py_keys()));
var df=df1.append(df2);
[[my_sum]];
var split_list=function(){var __accu0__=[];for(var i of range(0,len(listo),n))__accu0__.append(listo.__getslice__(i,i+n,1));return __accu0__}();
t.start();
example.py_split();
var layout=QtGui.QHBoxLayout();

export var stream_index=numpy.array(stream_index).repeat(repeat_count);
app.run(true,false);
print(df.loc[py_name]);
data;
foo();
print(matchobj.group(1));
button.Bind(wx.EVT_BUTTON,on_button);
l.setLevel(logging.INFO);
numpy.linalg.matrix_rank(A);
np.random.seed();
export var mythread=threading.Thread(__kwargtrans__({target:get_user_input,args:tuple([user_input])}));
var line=f.readline();
var id=Column(Integer,__kwargtrans__({primary_key:true}));
export var my_subprocess=subprocess.Popen(args);
var B=np.array([2,4,6,8]);
list(range(0,len(list1),2));
areas.apply(multiply_by_demand);
curses.echo();
con.close();
tk.Frame.__init__(self,master);
decorator;
df.Stake[i]=2*df.Stake[i-1];
X.sum(__kwargtrans__({axis:1})).sum(__kwargtrans__({axis:0}));
repr(test.make_fptr());
self.assertEqual(1,1);
var ax=fig.add_subplot(111);
word[0].isupper();
func();
layout2.addWidget(frame2);
final_ensemble.estimators_=[];
plt.scatter(a,b);
var args=parser.parse_args();
plt.show();
map(list,combinations(A,2));
socket.inet_pton(socket.AF_INET6,address);
export var x_normed=(x-x.min(0))/x.ptp(0);
var root=tkinter.Tk();
photo.close();
var id=Column(Integer,__kwargtrans__({primary_key:true}));
min(min(l_one),min(l_two));
self.fail(msg);
lines.append(inf.readline());
main();
dict();
np.ones(4,__kwargtrans__({dtype:int}));
handler.setFormatter(formatter);
c.most_common();
sol[0][0]+sol[0][1]*I;
print(np.all(insample==insample_mp));
export var tagger=nltk.tag.UnigramTagger(__kwargtrans__({model:model,backoff:default_tagger}));
print(sum(takewhile(function __lambda__(x){return x<p90},a)));
ax.yaxis.set_major_formatter(matplotlib.ticker.FormatStrFormatter(format));
matches.extend(function(){var __accu0__=[];for(var x of dirnames+filenames)__accu0__.append(os.path.join(dirpath,x));return py_iter(__accu0__)}());
var x=sum(function(){var __accu0__=[];for(var i of a)for(var j of b)__accu0__.append(similarity(i,j));return py_iter(__accu0__)}());
var df=df.apply(function __lambda__(x){return np.random.shuffle(x)||x},__kwargtrans__({axis:1}));
l.extend(t2);
var A=np.array([[0,1,0,0,1],[0,0,1,1,1],[1,1,0,1,0]]);
self.lock.acquire();
len(list_of_ids);
pool.join();
list(flatten(lis));
var s=s.lower();
var a=array(your_list);
[];
var queryset=MyModel.objects.all();
ax.add_artist(a);
list(zip(a,b,grouper(c,2),d));
startfile(os.getcwd());
print(url);
var form=ContactForm();
var fig=plt.figure();
var text=file.read();
math.sqrt(Math.pow(self.x-x,2)+Math.pow(self.y-y,2)+Math.pow(self.z-z,2));
np.flatnonzero(goal);
rollaxis(im,2);
np.fill_diagonal(coocc.py_values,0);
print(tuple([subject.text,subject.head.text,numbers[0].text]));
self.raise_();
Bar.objects.filter(__kwargtrans__({pk:foo.id})).py_update(__kwargtrans__({a_id:bar.id}));
set(second_list)-set(function(){var __accu0__=[];for(var x of first_list)__accu0__.append(x[0]);return py_iter(__accu0__)}());
map(ord,letters);
time.time()-startTime;
list(set(x)-set(y));
execlist[index][4]=mydelay;
export var mlen=ctypes.c_ulonglong(len(message));
10*np.cos(np.hypot(x,y)/np.sqrt(2)*2*np.pi*cycle);
[e]*4;
np.rot90(m,1);
model.add(Dropout(.2,__kwargtrans__({input_shape:tuple([60])})));
var a=function(){var __accu0__=[];for(var item of a)__accu0__.append(list(item));return __accu0__}();
array.__setslice__(0,null,null,t);
self.agg_log.setLevel(logging.DEBUG);
self.setPixmap(image);
xl.Visible=true;
ax.set_xlim(xlim);
var G=nx.MultiGraph();
p.some_method();
var p=subprocess.Popen(my_cmd,__kwargtrans__({shell:true}));
self._stop.set();
pat.findall(s);
sizer.Add(self.panel,1,wx.EXPAND);
len(x)*(len(x)-1)*2;
time.sleep(.2);
var new_list=[];
time.sleep(2);
export var mock_sgc_obj=mock.Mock();
time.sleep(interval);
my_lib.py;
var y=[1,2,0,1,1,2];
print(paths[min_index],path_distances[min_index]);
is_linear(eq1,[a,c]);
self.__setattr__(attr,value);
psutil.cpu_count();
parser.print_help();
py_typeof(Foo.__init__);
ax.xaxis_date();
fig.show();
pool.terminate();
intvals[bisect.bisect(intvals,42E3)];
parser.parse_args([]);
array([[0,1.206,1.58]]);
print(xy_to_index(x,y));
var length=len(list(g));
var browser=webdriver.Firefox();
export var aware_utc_dt=utc_dt.py_replace(__kwargtrans__({tzinfo:pytz.utc}));
np.py_split(lst,np.where(np.diff(lst)<0)[0]+1);
export var path_names=function(){var __accu0__=[];for(var path of paths)__accu0__.append(os.path.basename(path));return __accu0__}();
np.array(function(){var __accu0__=[];for(var row of arr.__getslice__(0,num_rows,1))__accu0__.append(row.__getslice__(0,num_cols,1));return __accu0__}());
ssh_client.connect(host);
user.save();
new_class._ordered_items.py_sort(__kwargtrans__({key:function __lambda__(item){return item[1].creation_counter}}));
br.select_form(__kwargtrans__({nr:0}));
plt.figure(1);
f1.close();
any(function(){var __accu0__=[];for(var k of df[self.target])__accu0__.append(__in__(t,k));return py_iter(__accu0__)}());
var root=tk.Tk();
map(str.lower,l);
a[0]+a[1]+a[2];
self.show();
ContentType.objects.get_for_model(obj);
np.shape(x);
settings.py;
bubble_sort_2nd_value(tuples_list);
print(hash(frozenset(lines)));
export var YS=np.asarray(YS);
export var ZS=np.asarray(ZS);
min(mywords,__kwargtrans__({key:len}));
var new_list=[];
json.load(f);
numpy.set_printoptions(__kwargtrans__({precision:16}));
var app=QtGui.QApplication(sys.argv);
print(0<=x&&x<=.5);
array([[106,140],[178,220]]);
elem.py_clear();
tag.attrs.append(tuple([attr,val]));
a2.append(decimal.Decimal(s));
s.close();
print(tuple([a,b,c,d,e]));
outF.close();
var suite=unittest.TestSuite();
var conn=psycopg2.connect(conn_string);
var xml=ET.fromstring(xmlData);
var r=function(){var __accu0__=[];for(var [a,b]of zip(l,l.__getslice__(1,null,1)+l.__getslice__(0,1,1)))__accu0__.append(tuple([a,b]));return __accu0__}();
any(function(){var __accu0__=[];for(var x of[a,b,c,d])__accu0__.append(x===false);return py_iter(__accu0__)}());
newSingle.getHeader().setField(fix.SendingTime(1));
map(function __lambda__(a){return a[0]},takewhile(len,iterate(function __lambda__(y){return f(y[0])},[x])));
self.redraw(event.x,event.y);
all(function(){var __accu0__=[];for(var e of[1,0,1])__accu0__.append(isinstance(e,int)&&e>0);return py_iter(__accu0__)}());
ax2.xaxis.set_major_locator(MultipleLocator(2));
var dicts=function(){var __accu0__=[];for(var d of messages)__accu0__.append(function(){var __accu1__=[];for(var [k,v]of list(d.py_items()))__accu1__.append([k,v.lower()]);return dict(__accu1__)}());return __accu0__}();
(function(){var __accu0__=[];for(var k of dict1[0])__accu0__.append([k,sum(function(){var __accu1__=[];for(var d of dict1)__accu1__.append(d[k]);return py_iter(__accu1__)}())]);return dict(__accu0__)})();
print(args.benchmark);
ax2.set_xticks(new_tick_locations);
export var bla=__all__[py_name];
a.append(k);
export var file_name=file_name+1;
sys.path.append(plugin_path);
deletea.__getslice__(100,99999,1);
scipy.stats.norm(0,1).cdf(0);
plt.show();
export var aView=np.ascontiguousarray(arr).flatten().view(mydtype);
var regex=re.compile(pat);
print(df.groupby(df.index).applyParallel(tmpFunc));
print(function(){var __accu0__=[];for(var [k,v]of list(dic.py_items()))__accu0__.append([k]+v);return __accu0__}());
var args=parser.parse_args();
print(map(f,[100,50,1E3,150]));
ax.set_xticklabels(tuple([]));
new_d.append(x);
export var zratings=bcolz.ctable.fromdataframe(ratings);
var app=Flask(__name__);
foo_list.append(function __lambda__(){return bar.func1(100)});
a.__getitem__([[0,1],1,2]);
x.__exit__();
print(zip(rlist1,rlist2));
new set([new set([adminform.form.non_field_errors])]);
f(...args,__kwargtrans__(kargs));
print(str(q.statement.compile(__kwargtrans__({dialect:postgresql.dialect()}))));
export var keyname=int(keyname);
print(np.random.rand());
f.close();
w.writeheader();

result.append(a);
export var dates_dict=collections.defaultdict(list);
A().my_dir();
os.path.isdir(d);
l.set_option(ldap.OPT_REFERRALS,0);
MyKlass().func1();
var instance=form.save(__kwargtrans__({commit:false}));
db.session.add(user);
var today=date.today();
self.context.leave();
print(sum(li.__getslice__(0,i+1,1)));
x.__getslice__(-1,0,-1);
print(s.recvfrom(65565));
code.interact();
var req=urllib.request.Request(url,urllib.parse.urlencode(params),http_header);
var d=OrderedDict(sorted(list(data.py_items()),__kwargtrans__({key:itemgetter(1)})));
var bytes=function(){var __accu0__=[];for(var b of f.read())__accu0__.append(ord(b));return py_iter(__accu0__)}();
var __except0__=KeyError(key);__except0__.__cause__=null;throw __except0__;
var x=df.ix.__getitem__([tuple([0,null,1]),tuple([5,null,1])]).sort_values(__kwargtrans__({by:0,ascending:false,axis:1}));
var frame=pd.concat(list_);
print(list(grp));
ax1.xaxis.set_major_formatter(xticks);
print(loc_dt.strftime(fmt));
var array=numpy.array(tuple([tuple([2,2]),tuple([2,-2])]));
1/sqrt(2*pi)*exp(-Math.pow(x,2)/2);
pool.close();
plt.plot(x,y);
np.arange(10).__getslice__(10,-5,-1);
print(py_next(second_it));
inner_func;
df.isin([1,2]);
zip(...[py_iter(iterable)]*n);
obj.foo.__func__;
(function(){var __accu0__=[];for(var scores of combos)__accu0__.append(tuple([scores,sum(scores)]));return __accu0__})();
print(doc.getvalue());
print(bookmark.text);
Aggregator._output();
export var content_type=models.ForeignKey(ContentType);
d[k].append(v);
user.save();
var ax=fig.add_subplot(1,1,1);
print(dur.total_seconds());
round(number/roundto)*roundto;
n>1&&all(function(){var __accu0__=[];for(var i of islice(count(2),int(sqrt(n)-1)))__accu0__.append(__mod__(n,i));return py_iter(__accu0__)}());
export var arrays=function(){var __accu0__=[];for(var item of arrays)if(len(item)>1)__accu0__.append(item.__getslice__(1,null,1));return __accu0__}();
local_tz.normalize(local_dt);
Py_DECREF(n_ptr);
glutInitDisplayMode(GLUT_RGBA|GLUT_DOUBLE);
print(hello());
var fig=plt.figure();
np.nextafter(0,1);
export var f_set=f[f.year.between(2002,2009)];
print(function(){var __accu0__=[];for(var i of range(0,len(mylist),4))__accu0__.append(mylist.__getslice__(i,i+4,1));return __accu0__}());
print(CAT.number_of_legs);
var __left0__=colorsys.hsv_to_rgb(hue,1,1);var r=__left0__[0];var g=__left0__[1];var b=__left0__[2];
markdown_below();
cls.__new__(cls);
log.setLevel(logging.INFO);
print(tuple([day_of_year,julian_day]));
dict_x[key].append(value);
self.saved=tuple([sys.stdin,sys.stderr,sys.stdout]);
(function(){var __accu0__=[];for(var [i,j,k]of product(a,b,c))__accu0__.append(i*j*k);return __accu0__})();
df;
conn.close();
os.abort();
logging.disable(logging.CRITICAL);
export var utc_offset=datetime.fromtimestamp(ts)-datetime.utcfromtimestamp(ts);
b2.insert(END,item);
datetime.fromtimestamp(unix_timestamp);
s.bind(tuple([host,port]));
[development];
(function(){var __accu0__=[];for(var pair of zip_longest(x,y,py_default))for(var item of pair)__accu0__.append(item);return py_iter(__accu0__)})();
var root=ET.fromstring(xml_string);
cv.SetData(foo_cv,foo_np_view.data,foo_np_view.strides[0]);
Person.__init__(self,py_name,phone);
var writer=csv.writer(out_file);
(function(){var __accu0__=[];for(var combo of combinations(list_of_coords,2))__accu0__.append(distance(...combo));return __accu0__})();
export var duration=models.DurationField();
var b=np.zeros_like(a);
var layout=QtGui.QVBoxLayout(self);
IOLoop.instance().run_sync(test_it);
Foo().__getslice__(0,42,1);
threading.Thread.__init__(self);
export var imgStr=base64.b64encode(jpeg_image_buffer.getvalue());
model.add(Reshape(tuple([6,2])));
index[count][1].append(url);
self.cl.autosetmode();
con.close();
value.append(function(){var __accu0__=[];for(var x of getdatas)__accu0__.append(x);return __accu0__}());
export var artifact=Artifact.objects.select_related().py_get(__kwargtrans__({pk:pk}));
df;
output.write(resp.content);
self._s=dict(function(){var __accu0__=[];for(var k of d)__accu0__.append(tuple([k.lower(),k]));return py_iter(__accu0__)}());
export var suba=a[indeces];
var x=[1,2];
export var aux=copy.deepcopy(matriz);
var result=lengths.nonzero()[0][0]+1;
someList.py_sort(__kwargtrans__({key:mixed_order}));
var y=np.zeros(tuple([10,10]));
export var C0=np.array(function(){var __accu0__=[];for(var i=0;i<len(A);i++)__accu0__.append(A[i]*B.__getitem__([i,tuple([0,null,1]),tuple([0,null,1])]));return __accu0__}());
self.file.write(msg);
dict(function(){var __accu0__=[];for(var word of lexer)__accu0__.append(word.py_split(value_sep,__kwargtrans__({maxsplit:1})));return py_iter(__accu0__)}());
a.repeat(2).reshape(2,2*len(a[0]));
var __left0__=plt.subplots(__kwargtrans__({nrows:2,ncols:2}));var fig=__left0__[0];var axes=__left0__[1];
conn.close();
APIResponse(__kwargtrans__({status:status.HTTP_200_OK,data:data}));
export var a_id=Column(Integer,__kwargtrans__({primary_key:true}));
s.isdigit();
answer.append(function(){var __accu0__=[];for(var x of l)__accu0__.append(each-x);return __accu0__}());
print(in_nested_list(x,2));
print(a);
print(response.status_code,response.url);
var property_asel=list(itertools.compress(good_objects,property_a));
export var final_vector=(start_matrix.T*weights).sum(__kwargtrans__({axis:1}));
print(len(args)+len(kwargs));
df.c_contofficeID.str.__getslice__(-4,null,1);
axes.__getitem__([0,0]).legend(__kwargtrans__({bbox_to_anchor:tuple([0,.5])}));
plt.show();
fpid.write(str(pid));
tuple([datetime.datetime(2012,1,1,1,0,0)]);
var c=a[b[np.searchsorted(b,a.__getitem__([tuple([0,null,1]),0]))-len(b)]==a.__getitem__([tuple([0,null,1]),0])];
a[numpy.lexsort(a.T)];
self.x+other.x;
np.random.shuffle(indices);
json.JSONEncoder.py_default(self,o);
table.insert(chunksize);
var result=function(){var __accu0__=[];for(var [x,y]of product(mylist,mysuffixes))__accu0__.append(x+y);return __accu0__}();
a.shape[0]==a.shape[1]&&np.linalg.matrix_rank(a)==a.shape[0];
deleteelem.getparent()[0];
x.tobytes();
i+=1;
sleep(.05);
export var Js=np.random.randint(0,n-1,4);
export var indptr=np.where(mask.ravel())[0];
self.Show();
pylab.show();
int(x,0);
var r=requests.py_get(__mod__(url,params_json));
self.n;
subprocess.Popen([command]+args,__kwargtrans__({startupinfo:startupinfo})).wait();
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
var engine=create_engine(dsn,__kwargtrans__({listeners:[SearchPathSetter()]}));
p.run();
export var sortedLetters=sorted(py_iter(d.py_items()),__kwargtrans__({key:function __lambda__(k_v){return tuple([k_v[1],k_v[0]])}}));
np.hstack([a,lookup.__getitem__([a.__getitem__([tuple([0,null,1]),0])-1,tuple([0,null,1])])]);
ax.grid(true);
ax.set_yticks(np.arange(AUC.shape[0])+.5,__kwargtrans__({minor:false}));
numpy.linspace(10,20,5);
var screen_height=root.winfo_screenheight();
riak_bucket.delete(key);
py_typeof(d);
list(filter(f,list(range(2,25))));
a[4].append(10);

width+=(len(string)-1)*charspace;
export var jvm=sc._jvm;
json.dumps(data);
BaseDocTemplate.__init__(self,...args,__kwargtrans__(kwargs));
alt.close();
upgrade(obj);
sys.exit(0);
list(self.__dict__.py_items());
print(delta.seconds);
var parser=argparse.ArgumentParser();
self.device.close();
main.quit();
tree.add(4);
self.assertEqual(self.nums,self.nu_nums);
sys.exit(app.exec_());
gb.get_group(your_key);
var __except0__=error;__except0__.__cause__=null;throw __except0__;
var data=json.load(contactFile);
list(itertools.chain(...function(){var __accu0__=[];for(var s of slices)__accu0__.append(list_.__getslice__(s[0],s[1],1));return __accu0__}()));
self._choices.append(tuple([index,val]));
(function(){var __accu0__=[];for(var y=0;y<n;y++)__accu0__.append(function(){var __accu1__=[];for(var x=0;x<n;x++)__accu1__.append(int(x==y));return __accu1__}());return __accu0__})();
print(key,value);
var fig=plt.figure();
export var probability=quad(function __lambda__(x){return np.exp(kd.score_samples(x))},start,end)[0];
tup[0]=x;
np.random.seed(2);
print(unit.objects.all());
df;
print(locals());
virEventLoopNativeStart();
np.reshape(df.py_values,tuple([1,df.shape[0]*df.shape[1]]));
var pairs=IT.combinations(idx,2);
var b=np.array([[5,6],[7,8]]);
instance.save();
self.stdin_sock.close();
main();
moduleY.py;
p.close();
out[mask]=A[mask];
plt.show();
print(collections.Counter(function(){var __accu0__=[];for(var x of listOfLists)for(var y of set(x))__accu0__.append(y);return py_iter(__accu0__)}()));
var b=map(list,b_set);
self.delete(self.position,Tkinter.END);
(function(){var __accu0__=[];for(var row of spamreader)__accu0__.append(OrderedDict(zip(list_of_keys,row)));return __accu0__})();
hash(frozenset(py_iter(self.py_items())));

random.choice(tuple(bigset));
deletesys.modules[mtr];
build_tree_recursive(tree[child.py_name],child,nodes);
np.arange(10).__getslice__(10,-2,-1);
[function(){var __accu0__=[];for(var _=0;_<length;_++)__accu0__.append(0);return __accu0__}()];
a.__getslice__(1,2,1);

cv2.waitKey(0);
var py_name=models.CharField(__kwargtrans__({max_length:50}));
server.login(gmail_user,gmail_pwd);
var idx=np.argsort(a[1]);
np.sqrt(sqrDiff.sum(__kwargtrans__({axis:1})));
locale.getdefaultlocale();
var app=create_app();
export var b_logits=tf.Variable(tf.zeros([2]));
var __left0__=np.meshgrid(X,Y);var X=__left0__[0];var Y=__left0__[1];
var df=df[df.date>=df.beg_date&df.date<=df.end_date];
result.append(tuple([a,b]));
modList.append(len(self._myList));
var dict1=function(){var __accu0__=[];for(var x of list1)__accu0__.append([x.py_split()[0],x.py_split()[1]]);return dict(__accu0__)}();
diff(sin(x(t)),t,2).subs(f,sin(x(t)));
sys.exit(p.wait());
ET.tostring(root);
process.join();
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
B.__getitem__([0,0,0]);
pylab.plot(data);
print(re.match(regex,line).groups());
plt.setp(ax1.get_yticklines().__getslice__(1,null,2),__kwargtrans__({visible:false}));
task();
var dict2=dict(function(){var __accu0__=[];for(var item of table2)__accu0__.append(tuple([item[0],item.__getslice__(1,null,1)]));return py_iter(__accu0__)}());
psycopg2.__version__;
var nodes=function(){var __accu0__=[];for(var _=0;_<100;_++)__accu0__.append(node());return __accu0__}();
decorator_maker;
var rows=np.random.random(tuple([1E5,8]));
print(etree.tostring(tree,__kwargtrans__({xml_declaration:true,encoding:docinfo.encoding})));
_trace;
print(a.__getitem__([tuple([0,null,1]),tuple([0,null,1]),np.newaxis]).shape);
worksheet.set_column(0,len(data),15,formater);
plt.colorbar();
var end_date=date.today().toordinal();
s[-7];
do_sth();
sample_object.users.add(1,2);
var users=db.session.query(User).filter(User.numLogins==max_logins).all();
in_file.seek(0,os.SEEK_END);
var args=parser.parse_args();
enc.transform([[0,1,1]]).toarray();
match.group(1).lower();
find_max(d);
req.add_data(urllib.parse.urlencode(data));
sum(function(){var __accu0__=[];for(var [x,c]of list(Counter(args).py_items()))if(c==1)__accu0__.append(x);return py_iter(__accu0__)}());
var d=dict(function(){var __accu0__=[];for(var [k,v]of list(d.py_items()))if(v>=10)__accu0__.append(tuple([k,v]));return py_iter(__accu0__)}());
l.py_sort(__kwargtrans__({key:function __lambda__(t){return t[0]}}));
var html=urllib.request.urlopen(url).read();
me.save();
export var sorted_arr2=arr2[arr1inds.__getslice__(0,null,-1)];
x[1][2];
process.start();
print([key]+map(sum,zip(...value).__getslice__(1,null,1)));
p.start();
export var ban_status=models.BooleanField(__kwargtrans__({py_default:false}));
user.set_password(password);
t.close();
var x=dict(function(){var __accu0__=[];for(var k=0;k<1E3;k++)__accu0__.append(tuple([k,list(l)]));return __accu0__}());
var ax=plt.gca();
len(l);
var s=socket.socket();
list1.py_pop(2);
im.thumbnail(size);
plot(ar);
export var metadata=MetaData();
f(1);
plt.xlim([start-width,end+width]);
handler.setFormatter(fmt);
OrderedDict();
export var p_regression=my_svr.predict(x_test);
l[1];
var s=s.__getslice__(0,-1,1);
x.__getslice__(0,5,1)+x.__getslice__(5,null,1).strip();
fig.subplots_adjust(__kwargtrans__({bottom:.1*df.index.nlevels}));
imshow(wally);
var reader=csv.DictReader(f,__kwargtrans__({fieldnames:h}));
2*x+6;
var counts=collections.Counter(function(){var __accu0__=[];for(var l of a)__accu0__.append(l[1]);return py_iter(__accu0__)}());
str(self.__dict__);
set(second_list)-set(map(f,first_list));
var p1=np.power(np.power(np.pi*2,k),-.5);
sum(some_counter.py_values());
xor_(b.begin(),b.end(),a.begin(),b.begin());
main();
foolist.hml;
var xml=ET.fromstring(xmlData);
print(function(){var __accu0__=[];for(var string of strings)__accu0__.append(r.match(string).groups());return __accu0__}());
2*A*sin(distance/(2*B));
self.canvas.delete(self.img_id);
var axes=plt.gca();
var im=Image.open(file_path);
orm.YourModel.objects.py_update(__kwargtrans__({field_name:DEFAULT_VALUE}));
Category.query.all();
plot_selected.yaxis.set_ticks(np.arange(.2,1.1,.2));
ax.set_xlim([0,2]);
p.start();
worker.start();
groups.union_set(a,b);
setattr(self,key,value);
os.chdir(cd);
a_test.__class__;
var now=datetime.datetime.utcnow().py_replace(__kwargtrans__({tzinfo:utc}));
var x=numpy.arange(0,2*numpy.pi,numpy.pi/1E3);
matplotlib.__version__;
foo();
df.ix[rows];
n+=1;
d[k].append(v);
round(x,-int(floor(log10(abs(x)))));

app.MainLoop();
solve([5,10],[1,5]);
main(list(range(1,10)));
np.identity(2)[Ellipsis];
var app=Flask(__name__);
d+=datetime.timedelta(__kwargtrans__({days:1}));
pi.source_image.save(image_name,ContentFile(image_file.read()));
main();
new_nums.append(nums[-1]);
itertools.dropwhile(it,makepred(5));
tuple([min(alist)[0],max(alist)[0]]);
print(solve(eqs,x,y,__kwargtrans__({dict:true})));
plt.subplot(121);
var result=img.copy();
plt.show();
get_color(0);
pygame.init();
sys.stdout=flushfile(sys.stdout);
a.__getitem__([np.arange(a.shape[0]),I]);
min(l_one+l_two);
test.print_array(a);
(function(){var __accu0__=[];for(var date of dates)if(dates.count(date)>1)__accu0__.append(date);return __accu0__})();
_st+=timedelta(__kwargtrans__({days:7}));
export var friday=today+datetime.timedelta(__mod__(4-today.weekday(),7));
zip(a,a);
(function(){var __accu0__=[];for(var i of data)__accu0__.append((np.bincount(i)>0).sum());return __accu0__})();
var __left0__=zip(...sorted(zip(x,y),__kwargtrans__({key:function __lambda__(a){return a[0]}})));export var x_sorted=__left0__[0];export var y_sorted=__left0__[1];
sys.stdout.flush();
hash(self.normalized);
tuple([x,y]);
res.append(tuple([toktype,tokval]));
print(function(){var __accu0__=[];for(var [_,v]of itertools.groupby(l,function __lambda__(x){return x[0]}))__accu0__.append(max(v));return __accu0__}());
w.setWindowFlags(QtCore.Qt.FramelessWindowHint);
flag.groupby(__kwargtrans__({level:[0,1]})).max().reset_index();
print(df.join(s));
datfiles[0].seek(0);
export var canvas=numpy.zeros(tuple([n,n]),__kwargtrans__({dtype:int}));
plt.show();
mock_last_transaction.assert_called_once_with();
ImageDraw.Draw(blurred_halo).text(position,text,__kwargtrans__({font:font,fill:col}));
self.__dict[py_name];
plt.show();
d.f();
sess.commit();
find_intersection(lst);
new_list.append(my_array+[e]);
export var lmn=long_module_name;
newR.mean();
var doc=xml.dom.minidom.Document();
self.assertEqual(mocked_handler.call_count,1);
var response=urllib.request.urlopen(req);
(function(){var __accu0__=[];for(var [i,x]of enumerate(L1))__accu0__.append(x+L2[i]);return __accu0__})();
var users=Users.objects.filter(__kwargtrans__({pk__in:[1,2]}));
var a=k+a;
print(function(){var __accu0__=[];for(var sublist of out)for(var item of sublist)__accu0__.append(item);return __accu0__}());
func();
socket.setdefaulttimeout(.5);
print(request.headers);
gtk.CellRendererPixbuf.__init__(self);
var __left0__=read_gzip_info(gzipfileobj);var filename=__left0__[0];var size=__left0__[1];
ax.add_patch(circle);
export var list_of_arrays=map(function __lambda__(x){return x*np.ones(M)},list(range(k)));
axcltwo.set_xlim(0,binimg.shape[1]-1);
var df2=df.iloc[[0,-1]];
tuple(function(){var __accu0__=[];for(var sublist of base_lists)for(var x of sublist)__accu0__.append(x);return py_iter(__accu0__)}());
Atomic.register(str);
var soup=BeautifulSoup(test_html);
traceback.print_tb(tb);
new set([new set([form.content()])]);
(function(){var __accu0__=[];for(var item of l)__accu0__.append(!isinstance(item,list)?[item]:item);return __accu0__})();
var my_dict=request.query.decode();
print((k+1)*lcm);
root.withdraw();
listener.setsockopt(SOL_SOCKET,SO_REUSEADDR,1);
arr.__getitem__([2,1])==arr.__getitem__([2,1]);
var sess=tf.Session(__kwargtrans__({config:config}));
window.add(entry);
var mask=np.concatenate(tuple([[false],np.isnan(a),[false]]));
tar.extractall();
np.random.seed(seed);
var arr=np.arange(729);
zip_longest(...args,__kwargtrans__({fillvalue:fillvalue}));
logger.setLevel(logging.DEBUG);
any(function(){var __accu0__=[];for(var d1 of my_list)if(d1!=d)__accu0__.append(is_subset(d,d1));return py_iter(__accu0__)}());
result.py_get();
builder.connect_signals(self);
var __left0__=p.communicate();self.stdout=__left0__[0];self.stderr=__left0__[1];
var driver=webdriver.Firefox();
self._global_wealth;
session.commit();
var c=pycurl.Curl();
Foo.run_static_method();
new set([new set([your_python_data])]);
self.logger.removeHandler(ch);
l.__getslice__(0,n,1);
var app=flask.Flask(__name__);
isinstance(result,collections.Iterable);
cv.pack();
widget1.grid(__kwargtrans__({row:0,column:0}));
var df=pd.read_csv(path,__kwargtrans__({skiprows:rest}));
pygame.init();
export var english_words=set(function(){var __accu0__=[];for(var word of word_file)__accu0__.append(word.strip().lower());return py_iter(__accu0__)}());
client.service.method(string_array);
print(tuple([current_item,next_item]));
.5*ceil(2*x);

out.py_clear();
fig.canvas.draw();
epoll.register(p.stdout.fileno(),select.EPOLLHUP);
var data2=data2.groupby(data2.index).sum();
now.astimezone(tz).dst()!=timedelta(0);
ax.add_patch(rect);
var PROJECT_ROOT=os.path.abspath(os.path.dirname(settings_dir));
followers_df.reindex(__kwargtrans__({index:list(range(0,20))}));
connection.send_command(command,...args);
callable_method(__kwargtrans__(__mergekwargtrans__({user:user},dict([[option_name,user_defaults[option_name]]]))));
list.__getslice__(0,10,1);
json.dump(lst,f);
self._applecount+=1;
writer.writerow(row);
buffer(self).__getslice__(0,null,1);
network.draw();
t1.start();
self.worker.moveToThread(self.mthread);
List.append(Item);
f.write(pat.sub(jojo,content));
print(tempfile.gettempdir());
var groups=np.array([0,0,1,2,2,1]);
var line=py_next(f);
users.get_current_user();
var all_data=np.append(my_data,new_col,1);
var a=2;
p.wait();
print(ip);
var app=QtGui.QApplication(sys.argv);
etree.tostring(nodes[0]);
self.connectButton.clicked.connect(self.connectToServer);
export var xfiltered=np.interp(xi,xi[mask],x[mask]);
var contents=f.read();
var app=QtGui.QApplication(sys.argv);
plt.scatter(X,Y);
ax.hold(true);
var py_name=models.CharField(__kwargtrans__({max_length:20}));
(function(){var __accu0__=[];for(var comment of comments)__accu0__.append(comment.extract());return __accu0__})();
np.issubdtype(float,np.inexact);
var new_dict=function(){var __accu0__=[];for(var k of list(d1.py_keys())&wanted_keys)__accu0__.append([k,d1[k]]);return dict(__accu0__)}();
(function(){var __accu0__=[];for(var [k,v]of list(mydict.py_items()))if(k>=6)__accu0__.append(v);return __accu0__})();
plt.plot(list1);
self.root.overrideredirect(1);
var m=re.search(regex,text);
plt.gca().xaxis.set_major_locator(dates.HourLocator());
var x=[0]*10;
plt.show();
var m=matrix([[1,1],[1,2]]);
cv2.waitKey();
export var Y_pred=model.predict_on_batch(X_test);
smtp.starttls();
var dt=datetime.datetime.now();
ax.set_xticks([]);
df;
print(function(){var __accu0__=[];for(var b of repo.heads)__accu0__.append(str(b));return __accu0__}());
self.NEWTAGS.append(tag);
a.__getitem__([tuple([1,null,1]),tuple([1,null,1])]);
var s=socket(AF_NETLINK,SOCK_DGRAM);
var fig=plt.figure();
var repo=Repo(repo_dir);
list(dic1.py_keys())==list(dic2.py_keys());
tuple([X_train,y_train,X_val,y_val]);
chr(97);
var object_list=Content.objects.filter(__kwargtrans__({subset__lte:no_of_subsets}));
os.dup2(self._oldstdout_fno,1);
print();
list(itertools.chain(...lst));
pylab.plot(abs(fft));
dbkind[db_type](rest);
var last=len(s)-i-1;
a[a==1]+=-epsilon;
a[np.where(~a.__getitem__([tuple([0,null,1]),-1]).astype(bool))];
var dfrand=pd.DataFrame(__kwargtrans__({data:np.random.randn(rows,cols)}));
(function(){var __accu0__=[];for(var l of zip(e,e.__getslice__(1,null,1)))__accu0__.append(a.__getslice__(l[0]+1,l[1]+1,1));return __accu0__})();
time.tzset();
foo(__kwargtrans__(d));
threading.Timer(1.25,function __lambda__(){return webbrowser.open(url)}).start();
self.hide();
im.show();
var y=flatten(x);
var user=authenticate(__kwargtrans__({username:username,password:password}));
m2[m2.__getitem__([tuple([0,null,1]),1])>10];
min(function(){var __accu0__=[];for(var n of a)if(n>.7)__accu0__.append(n);return py_iter(__accu0__)}());
hfile.seek(0,os.SEEK_END);
X.__setitem__([tuple([0,null,1]),n],X.__getitem__([tuple([0,null,1]),n])+np.dot(A,colb));
sc.close();
var myDict=dict().reduceto(function __lambda__(t){return t[1]},function __lambda__(o,t){return o+t},myTupleList,0);
max(function(){var __accu0__=[];for(var a of yourlist)if(a[2]>=100)__accu0__.append(a);return __accu0__}(),__kwargtrans__({key:itemgetter(1)}));
var points=np.array(list(product(x_p,y_p,z_p)));
self[key].extend(value);
nn.activate([1,1]);
Spam().foo();
max(min(maxn,n),minn);
var df=pd.DataFrame();
client.server_info();
object.__new__(cls);
var __left0__=tuple([b,a]);var a=__left0__[0];var b=__left0__[1];
export var columns=dict(function(){var __accu0__=[];for(var x of zip(...allrows))__accu0__.append(tuple([x[0],x.__getslice__(1,null,1)]));return __accu0__}());
python-virtualenv;
count+=1;
print(self.cursor.fetchall());
var result=yaml.load(fin.read());
np.array(function(){var __accu0__=[];for(var [i,j]of zip([0,1,2],[0,1,0]))__accu0__.append(A2.__getitem__([i,slices[j]]));return __accu0__}());
sorted(somelist,__kwargtrans__({key:key}));
len(result[0]);
t.start();
export var Password=db.Column(db.String(40));
export var toolbox=base.Toolbox();
g.add_edge(4,5);
w.setLayout(lay);
var doc=BeautifulSoup(xml);
r.cookies.get_dict();
var label=tk.Label(__kwargtrans__({image:image}));
frames.append(numpy.fromstring(data,__kwargtrans__({dtype:numpy.int16})));
np.max(x,__kwargtrans__({axis:axis}))-np.min(x,__kwargtrans__({axis:axis}));
min(_,__kwargtrans__({key:function __lambda__(pair){return pair[0]/pair[1]}}));
new_list;
main();
(function(){var __accu0__=[];for(var item of sequence)if(!__in__(item,unique))__accu0__.append(unique.append(item));return __accu0__})();
server.ehlo();
pd.DataFrame(df.py_values[a],df.index.py_values[a],df.columns);
sandwich();
print(a.base);
(function __lambda__(x){return x==i||__mod__(x,i)!=0});
heapq._siftdown(h,0,i);
export var ixs=np.array([2,1,1]);
draw.line(tuple([tuple([x1,y1]),tuple([x2,y2])]),__kwargtrans__({fill:color,width:1}));
df;
var z=np.array([1,2]);
plt.show();
pd.DataFrame(d);
var fig=PLT.figure();
r[numpy.isreal(r)];
export var newcmap=matplotlib.colors.LinearSegmentedColormap(py_name,cdict);
print(json.dumps(dict(rh)));
cherrypy.config.py_update(config);
self.assertEqual(r.status_code,200);
hello.ff(x,y);
self.process=subprocess.Popen(args,__kwargtrans__({shell:true}));
unittest.main();
addition.extend(array);
func(...a,__kwargtrans__(kwargs));
var fig=plt.figure();
device.close();
dict(function(){var __accu0__=[];for(var [i,k]of rank_b)__accu0__.append(tuple([k,rank_a[k]-i]));return py_iter(__accu0__)}());
nx.draw(G,pos);
CV_rfc.fit(X,y);
export var exitstatus=(status&65280)>>8;
x.reset_index();
fig.colorbar(surf,__kwargtrans__({shrink:.5,aspect:5}));
a.__getslice__(-4,null,1);

newPic.save();
unittest.main();
(function(){var __accu0__=[];for(var item of list)__accu0__.append(c?a:b);return __accu0__})();
sys.exit(0);
file.seek(4);
ftp.cwd(directory);
self.data.append(item);
list.__getitem__(self,__mod__(index,len(self)));
var soup=BeautifulSoup(html);
res.ready();
button.clicked.connect(self.onStart);
sys.exit(app.exec_());
neuron.draw();
ax1.plot(list(range(10)));
hash(1);
w.writerows(list(somedict.py_items()));
sc.stop();
print(row[0],row[1]);
print(metrics.accuracy_score(y.__getslice__(100,null,1),clf.predict(X.__getslice__(100,null,1))));

db.session.add_all(users);
__init__.py;
var data=urllib.request.urlopen(url).read();
pow2(a,__kwargtrans__({out:a,num_threads:4}));
datetime.timedelta(__kwargtrans__({seconds:result}));
b.__setitem__([tuple([0,null,1]),tuple([0,-1,1])],a);
var norm=mpl.colors.Normalize(__kwargtrans__({vmin:0,vmax:1}));
matrix([[0,-1,-1,0],[0,0,1,1]]);
do_stuff();
self.buf.write(contents);
df.iloc[np.random.permutation(len(df))];
plt.figure();
[1,1,0,0,0,0,0];
export var keys_to_delete=function(){var __accu0__=[];for(var [k,v]of d.py_items())if(v==val_to_delete)__accu0__.append(k);return __accu0__}();
count+=1;
self.socket.shutdown(SHUT_WR);
var order=models.PositiveIntegerField(__kwargtrans__({blank:true,null:true}));
process(line);
myFunction(...args,__kwargtrans__(kwargs));
help(bytes);
any(function(){var __accu0__=[];for(var c of yourString)__accu0__.append(__in__(c,badChars));return py_iter(__accu0__)}());
field.get_attname_column();
export var reason=json.loads(e.content).reason;
var soup=BeautifulSoup(urllib.request.urlopen(address).read());

py_typeof(_);
entry1.grid(__kwargtrans__({row:1,column:1}));
DirectClass.__init__(self);
var x=function(){var __accu0__=[];for(var i of x)__accu0__.append(function(){var __accu1__=[];for(var j of i)__accu1__.append(int(float(j)));return __accu1__}());return __accu0__}();
isinstance(d,tuple([dict,collections.MutableMapping]));
list(set(newIntersections));
print(sys.path);
writer.writerow([subject,itemID,bias1Answer]);
export var sh=wb.sheet_by_index(0);
var now=datetime.utcnow();
list(islice(py_iter(preresult.py_items()),100)).__getslice__(-10,null,1);

conn.send(data);
file_handler.setLevel(logging.DEBUG);
self.frame.pack();
cherrypy.config.py_update(config);
print(C[np.searchsorted(C.__getitem__([tuple([0,null,1]),0]),I)]);
t.daemon=true;
map(functools.partial(myFunc,__kwargtrans__({some_arg:additionalArgument})),pages);
plt.figure();
tuple([seq.__getslice__(0,null,2),seq.__getslice__(1,null,2)]);
os.remove(thefifo);
self.redraw();
json.dumps(fb._asdict());
pool.close();
nx.draw(G,__kwargtrans__({edgelist:edges,edge_color:colors,width:10}));
var train_op=tf.group(train_op1,train_op2);
self.redraw();
timeit.Timer(timewrapper);
process.start();
setattr(A,py_name,_method);
c.max();
frame.ix[frame.index[i]];
var dt=datetime.datetime.now();
df.columns=pd.MultiIndex.from_tuples(df.columns);
self.assertEqual(auth_result,attempted_auth_result);
var soup=BeautifulSoup(html);
self.tree.pack();
shutil.rmtree(dir);
var s=socket.socket(socket.AF_INET,socket.SOCK_RAW,socket.IPPROTO_IP);
export var protocol=TBinaryProtocol.TBinaryProtocol(transport);
ser.hist(__kwargtrans__({cumulative:true,normed:1,bins:100}));
var df=pd.DataFrame(df,__kwargtrans__({columns:sorted(custom_dict,__kwargtrans__({key:custom_dict.py_get}))}));
print(res.json());
clf.fit(np_training,np_labels);
export var file_content=gzf.read();
var pool=multiprocessing.Pool(4,__kwargtrans__({maxtasksperchild:1}));
wave_file.writeframes(frame_data);
root.update_idletasks();
print(function(){var __accu0__=[];for(var [key,words]of itertools.groupby(data,init))__accu0__.append(list(words));return __accu0__}());
print(response.body);
var f=function __lambda__(){return i};
sizer.Add(hsizer,0,wx.EXPAND);
self.crawler.engine.crawl(self.create_request(),self);
datetime.combine(d,datetime.min.time());
some_func(...params);
tuple([str(lst[0]),lst.__getslice__(1,null,1)]);
my_dictionary.len();
var app=QtGui.QApplication(sys.argv);
new set([new set([label])]);
h2.setLevel(logging.WARNING);
print(function(){var __accu0__=[];for(var sublist of function(){var __accu1__=[];for(var i of a)__accu1__.append(rep*[i]);return __accu1__}())for(var item of sublist)__accu0__.append(item);return __accu0__}());
var test=set(numpy.random.randint(0,10,5));
m.start();
delfile.seek(0);
deletestr;
var author=models.ForeignKey(User);
HypotheticalBranch(1,4,2);
bop.pack(__kwargtrans__({side:tk.LEFT}));
(function(){var __accu0__=[];for(var i of list(d.py_items()))__accu0__.append(tuple(function(){var __accu1__=[];for(var y of i)for(var x of y)__accu1__.append(x);return py_iter(__accu1__)}()));return __accu0__})();
ax.set_xticklabels([]);
l.append(i);
var app=Flask(__name__);
var data=urllib.parse.urlencode(params);
workbook.close();
var b=df.iloc.__getitem__([tuple([0,null,1]),tuple([1,null,1])]).py_values;
py_next(value);
s.readline();
K[np.ix_(np.arange(K.shape[0]),train,train)];
container.grid_columnconfigure(0,__kwargtrans__({weight:1}));
export var y_interp=scipy.interpolate.interp1d(x,y);
_myql.__version__;
logging.basicConfig(__kwargtrans__({filename:log_name}));
stdout.flush();
B.IMC=IMC;
export var isBlank=all(function(){var __accu0__=[];for(var band of bands)__accu0__.append(band.getextrema()==tuple([255,255]));return py_iter(__accu0__)}());
ax.set_xticks([.15,.68,.97]);
sys.setrecursionlimit(1E4);
gp2.append(float(i));
var soup=BeautifulSoup(response.text);
print(function(){var __accu0__=[];for(var i=0;i<5;i++)__accu0__.append(d.b[i]);return __accu0__}());
PLT.show();
i+1;
(function __lambda__(num){return __mod__(num,2)!=0});
els[-1];
var author=models.ForeignKey(Author);
export var avg_array=(data_array.__getslice__(0,null,2)+data_array.__getslice__(1,null,2))/2;
print(tuple([ss.py_name(),ss.lemma_names()]));
sns.regplot(x,y,__kwargtrans__({ax:ax1}));
axes.set_yticks([]);
var scatter=ax.scatter(np.random.randn(100),np.random.randn(100));
!sum(function(){var __accu0__=[];for(var i of C)__accu0__.append(!__in__(i,A));return __accu0__}());
self.updater.start();
np.mean(arr.reshape(-1,stride),__kwargtrans__({axis:1}));
ziph.write(os.path.join(root,file));
export var PATH=os.path.abspath(os.path.dirname("./P2JSnippets.py"));
db.delete(results);
h5file.close();
new_strs.py_split();
classifier.fit(X_train,Y);
df;
__init__.py;
somecell.fill.start_color.index;
screen.refresh();
time.sleep(.1);
setattr(self,py_name,attr);
var A=scipy.sparse.csc_matrix(tuple([size,size]));
m.p;
self.Bind(wx.EVT_LEFT_DCLICK,self.on_left_dclick);
win1.destroy();
var parser=etree.XMLParser(__kwargtrans__({schema:schema}));
plt.draw();
var d=set();
main();
var id=db.Column(db.Integer,__kwargtrans__({primary_key:true}));
b.shape;
list.__init__(self,...args,__kwargtrans__(kwargs));
button.pack();
var image_data=im.load();
html.title.text;
data[data>upper_threshold|data<lower_threshold]=default_value;
text.set_color(line.get_color());
time.sleep(10);
var data=urlfetch.fetch(feedUrl);
plt.close(fig);
msg.set_payload(zf.read());
print(function(){var __accu0__=[];for(var [_,py_name,_]of pkgutil.iter_modules([pkgpath]))__accu0__.append(py_name);return __accu0__}());
sum(l.__getslice__(-n,null,1))/float(observations);
var cursor=conn.cursor();
export var inv=pygame.Surface(img.get_rect().size,pygame.SRCALPHA);
print(d[7]);
export var profs=session.query(UserProfile).all();
a+=b;
df.convert_objects(__kwargtrans__({convert_numeric:true})).dtypes;
dict();
legline.set_linewidth(10);
export var is_staff=true;
var fig=plt.figure();
self.connect();
var args=parser.parse_args();
sel_cur.close();
root.wait_window();
os.write(fd,data);
var d=dict();
export var desks=Desk.objects.filter(__kwargtrans__({room__in:rooms}));
widget2.grid(__kwargtrans__({row:1}));
var audio=models.FileField(__kwargtrans__({upload_to:aud_get_file_path}));
curl.perform();
print(pd.factorize(pd.lib.fast_zip([df.x,df.y]))[0]);
print(tag.py_name);
var date=parser.parse(ds);
var parser=argparse.ArgumentParser();
tuple([2,0,0,0,0,0,1,1,20160224,20160226]);
var df=df.join(split_names);
var a=[0]*K;
self.client.close();
nbsumeq(A,B);
plot_data[0].append(1);
driver.quit();
cv.Circle(color_image,center_point,40,cv.CV_RGB(255,255,255),1);
self.stream.close();
self.count+=1;
var H=sps.coo_matrix(tuple([data,tuple([rows,cols])]),__kwargtrans__({shape:tuple([num,num])})).tolil();
self.setCentralWidget(_widget);
var mask=np.isfinite(x);
conn.send(data);
list(set(theList).intersection(set(theDict.py_keys())));
var f=np.poly1d([1,0,0,-1]);
session.close();
p.start();
module;
hex(buffer.rd(1));
var rows=(a!=0).sum(1);
var lines=function(){var __accu0__=[];for(var l of f.readlines())__accu0__.append(l.py_split());return __accu0__}();
var names=names.append(frame,__kwargtrans__({ignore_index:true}));
np.set_printoptions(__kwargtrans__({precision:5}));
var path=path.strip();
export var nowdt=datetime.datetime.now();
var combs=function(){var __accu0__=[];for(var mask of masks)__accu0__.append(function(){var __accu1__=[];for(var [i,x]of enumerate(data))if(mask[i])__accu1__.append(x);return __accu1__}());return __accu0__}();
self.application.exec_();
plt.plot(dates,py_values);
gtk_dlls.append(os.path.join(include_dll_path,dll));
var df=df.set_index(cols).apply(f,__kwargtrans__({axis:1})).reset_index();
second_largest([1,1,1,1,1,1]);
self.matrix.append([0]*len(list(adjacencyList.py_keys())));
var points=function(){var __accu0__=[];for(var _=0;_<1E3*2;_++)__accu0__.append(random());return __accu0__}();
set_trace();
cv2.waitKey(5);
(function(){var __accu0__=[];for(var x of lst)if(__mod__(x,2)==0)__accu0__.append(x);return __accu0__})()[0];
np.apply_along_axis(v.dot,2,A);
server_sock.listen(1);
cv2.drawContours(filledI,cs,i,__kwargtrans__({color:255,thickness:-1}));
os.close(fd);
pylab.legend();
pool.join();
time.sleep(1);
systemtest_n.py;
reduce(dict.__getitem__,path,aDict).py_update(aSecondDict);
var id=Column(Integer,__kwargtrans__({primary_key:true}));
QWidget.__init__(self,...args,__kwargtrans__(kwargs));
var user=Session.query(User).first();
var browser=webdriver.Firefox();
print(np.sum(data,__kwargtrans__({axis:0})));
export var Quota=celltext(columns[1]);
arr.__setitem__([tuple([rs,re,1]),tuple([cs,ce,1])],np.rot90(np.copy(arr.__getitem__([tuple([rs,re,1]),tuple([cs,ce,1])]))));
ccb();
self.panel=wx.Panel(self);
writer.writerows(zip(bins,frequencies));
data[row][set_col]=val;
r.close();
unittest.main();
var new_df=old_df.loc.__getitem__([tuple([0,null,1]),list_of_columns_names]);
s.__getslice__(4,10,1);
export var fd=sys.stdin.fileno();
list(py_items.py_keys());
print(tuple([key,value]));
var out=a[sidx[idx]];
timezone.localize(localdt).astimezone(utc);
dialog.ui.setupUi(dialog);
sqlContext.sql(query);
var __left0__=tuple([lst[1],lst[4],lst[10]]);var one=__left0__[0];var four=__left0__[1];var ten=__left0__[2];
print(repr(vocab));
plt.yticks(np.arange(0));
add(__kwargtrans__(x));
zip(...A);
crawler.crawl(spider);
var df2=pd.DataFrame(np.random.rand(4,2));
self.opn[op](op1,op2);
obj.__dict__[attr];
var a=np.array([0,0,15,17,16,17,16,12,18,18]);
print(html2text(html));
dir(modulename);
Base.prepare(engine);
G.edges(__kwargtrans__({data:true,py_keys:true}));
do_stuff();
var server_socket=socket.socket(socket.AF_INET,socket.SOCK_STREAM);
w.start();
var cur=conn.cursor();
self.instance.olddrivers=instance.drivers.all();
ax.xaxis.set_minor_formatter(ticker.FuncFormatter(ticks_format));
humansize(58812);
humansize(68819826);
df.index[1];
export var listx=function(){var __accu0__=[];for(var item of data)__accu0__.append(item[0]);return __accu0__}();
do_foo(obj);
print(list[i][j]);
(function(){var __accu0__=[];for(var elem of most_common)__accu0__.append(elem[0]);return __accu0__})();
time.sleep(.1);
os.rename(pathAndFilename,os.path.join(dir,__mod__(titlePattern,title)+ext));
var __left0__=np.histogram2d(x,y,__kwargtrans__({bins:4}));var hist=__left0__[0];var xedges=__left0__[1];var yedges=__left0__[2];
fig.tight_layout();
merged[item[key]].py_update(item);
any(function(){var __accu0__=[];for(var str1 of set1)for(var str2 of set2)__accu0__.append(match(str1,str2));return py_iter(__accu0__)}());
print(py_next(first_it));
data.py_sort(__kwargtrans__({key:getitems}));
totaldict[tuple(x.__getslice__(0,2,1))].append(x);
con.close();
ax.legend(__kwargtrans__({loc:1}));
print(match.group(0));
var password=models.CharField(__kwargtrans__({max_length:50}));
var process=multiprocessing.Process(__kwargtrans__({target:do_expat,args:tuple([q])}));
p.join();
export var series1=function(){var __accu0__=[];for(var i=0;i<10;i++)__accu0__.append(float(i));return __accu0__}();
self.assertEqual(target.str(),b62);
ax.xaxis.set_major_formatter(copy.copy(Formatter));
self.flush();
np.arccos(np.clip(np.dot(v1_u,v2_u),-1,1));
np.allclose(m[slc],target);
int(b.__getslice__(0,-1,1))+unicodedata.numeric(b[-1]);
pythons_tasklist.append(p);
1/0;
myset.add(x);
df.ix[List];
M.__setitem__([tuple([0,null,1]),colnumber],M.__getitem__([tuple([0,null,1]),colnumber])*scalar);
self.scrollbar.pack(__kwargtrans__({side:RIGHT,fill:Y}));
self._stack=[];
heapq.heappush(heap,Neg(item));
plt.draw();
ax.get_xaxis().set_major_formatter(mf);
urllib.request.urlopen(r);
s.send(q);
os.fstat(f.fileno()).st_size;
cv2.destroyAllWindows();
export var visited=function(){var __accu0__=[];for(var p of l)__accu0__.append([p,false]);return dict(__accu0__)}();
var df=pd.DataFrame([]);
nodes.mlab_source.dataset.point_data.scalars=np.random.random(tuple([5E3]));
self.layout.addWidget(self.button2);
print(the_table.properties());
var __left0__=tuple([hsv.__getitem__([tuple([0,null,1]),tuple([0,null,1]),0]),hsv.__getitem__([tuple([0,null,1]),tuple([0,null,1]),1]),hsv.__getitem__([tuple([0,null,1]),tuple([0,null,1]),2])]);var h=__left0__[0];var s=__left0__[1];var v=__left0__[2];
var app=Flask(__name__);
print(str(py_name).lower());
var sess=tf.Session();
ax.grid();
var A=np.diag(1/np.arange(1,1E4));
self._stream.write(text);
r.join(df);
os.path.normpath(path1);
var d2=function(){var __accu0__=[];for(var [i,[key,value]]of enumerate(d.py_items()))if(__mod__(i,2)==1)__accu0__.append([key,value]);return dict(__accu0__)}();
dest.blit(tmp,destpos,dest.get_rect().clip(maskrect));
t1.start();
var arr=np.array([4,4,1,np.nan,np.nan,np.nan,-5,-4]);
entry.set_text(new_text);
caketaste();
set(box(df.genres.tolist()).ravel().tolist());
self.result.SetLabel(self.editname.GetValue());
new set([new set([title])]);
main();
get_type_hints(Starship);
record2.put();
PETSc.Mat().createAIJ(__kwargtrans__({size:tuple([nrows,ncols]),csr:tuple([ai,aj,aa])}));
l.append(float(t));
export var document_first_row=function(){var __accu0__=[];for(var doc of documents)__accu0__.append(doc[0]);return __accu0__}();
s.apply(enumerate);
print(coc.x);
print(json.dumps(test_json,__kwargtrans__({cls:MyEncoder})));
fcntl.fcntl(fd,fcntl.F_SETFL,fl|os.O_NONBLOCK);
main();
tuple([[0,0,0,0]]);
np.dot(np.array(L1).sum(0),np.array(L2).sum(0));
t.join();
pickle.dumps(self._cookies);
var form=MyModelForm(__kwargtrans__({hide_condition:true}));
var opener=urllib.request.build_opener();
zf.close();
model.train(sentences);
var columns=function(){var __accu0__=[];for(var column of cursor.description)__accu0__.append(column[0]);return __accu0__}();
var G=bipartite.projected_graph(B,inmates);
(function(){var __accu0__=[];for(var [i,j]of zip(zeros,zeros.__getslice__(1,null,1)))if(len(a.__getslice__(i+1,j,1))>0)__accu0__.append(a.__getslice__(i+1,j,1));return __accu0__})();
timer_thread.start();
var pool=multiprocessing.Pool();
ax.figure.show();
tuple([datetime.datetime(2012,1,1,0,0,0)]);
ax1.set_xticks(numpy.arange(x1-1,x2+1,.5));
var id=Column(Integer,__kwargtrans__({primary_key:true}));
var l2=list(zip(...l1));
export var output_rs=tf.transpose(output,[1,0,2]);
WebDriverWait(self,timeout).until(staleness_of(old_page));
x.append([4,5]);
my_list[i]=item;
time.sleep(refreshrate);
self.mthread.finished.connect(self.worker.deleteLater);
f.write(fileobj.read());
QtCore.QObject.__init__(self);
logging.set_up_done=false;
(function(){var __accu0__=[];for(var j of tuple([list(range(10)),list(range(15,20))]))for(var i of j)__accu0__.append(i);return __accu0__})();
self.goButton.clicked.connect(self.simulThread.start);
var s=s.__getslice__(0,begin,1)+s.__getslice__(end+1,null,1);
export var this_module=sys.modules[__name__];
app.MainLoop();
time.sleep(1);
var out=np.zeros_like(array);
os.uname();
stdin.flush();
plt.xlim(-20,60);
var length=len(data);
traceback.print_stack();
new_rows.append(new_row);
plt.ion();
var rows=input.filter(function __lambda__(line){return line!=header});
var data=cursor.fetchall();
export var corpus=nltk.Text(corpus0.words());
int(revbin,2);
polA.set_transform(tA);
export var index_of_maximum=scipy.argmax(R.getrow(i).data);
coo_matrix(tuple([vals,tuple([i,j])]),__kwargtrans__({shape:tuple([m,n])})).asformat(format);
hi();
self.release();
f.close();
fcntl.ioctl(sock,SIOCSIFADDR,ifreq);
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
[seq[0]]+noVow(seq.__getslice__(1,null,1));
print(tz_to_timedelta(tz));
clf2.fit(X,y);
ax.xaxis.tick_top();
print(list(product(list(range(2)),__kwargtrans__({repeat:k}))));
getattr(self.wrapee,attr);
var dist=numpy.sqrt(numpy.dot(temp,temp));
np.linalg.inv(a);
print(testmodule.__doc__);
var total=sum(function(){var __accu0__=[];for(var i of line)__accu0__.append(int(i));return py_iter(__accu0__)}());
f2(__kwargtrans__(d));
var newstr=str.__getslice__(-4,null,1);
plt.plot(t,s);
ax.xaxis_date();
set(a.py_items())-set(b.py_items());
br.set_cookiejar(cj);
dep_list.append(opcodes[i]);
var layout=QtGui.QVBoxLayout(self);
print(map(str,EmployeeList));
(function __lambda__(d){if(typeof d=="undefined"||d!=null&&d.hasOwnProperty("__kwargtrans__"))var d=d;return self.root.change_directory(d)});
print(fn(10));
var d=datetime.date(__kwargtrans__({year:1940,month:1,day:1}));
a.__getitem__([tuple([0,2,1]),tuple([0,2,1])]);

print(i.text);
getattr(foo,string1+string2)();
list(get_stuff(d));
!any(function(){var __accu0__=[];for(var i of x)__accu0__.append(__in__(i,seen)||seen.add(i));return py_iter(__accu0__)}());
var request=requests.py_get(image_url,__kwargtrans__({stream:true}));
print(solve(array1,1,5));
var ax=plt.subplot(111);
p.search(s).group(1);
any(map(eval,my_list));
atexit.register(report);
ld.append(function(){var __accu0__=[];for(var l of ll)__accu0__.append([l[0],int(l[col])]);return dict(__accu0__)}());
export var stopwaitsecs=10;
x.wrong;
request.user.pretty_username();
lists.append([]);
childobject.parprint();
print(titlenode[0].firstChild.nodeValue);
(function(){var __accu0__=[];for(var [_,x]of zip(list(range(n)),generator))__accu0__.append(x);return __accu0__})();
print(line);
ax.set_aspect(1);
var id=Column(Integer,__kwargtrans__({primary_key:true}));
fn(...args,__kwargtrans__(kwargs));
console_handler.setLevel(logging.DEBUG);
var __left0__=tuple([c.imag,c.real]);var a=__left0__[0];var b=__left0__[1];
var startupinfo=subprocess.STARTUPINFO();
first_mask[first_mask]=second_mask;
export var backward=function __lambda__(t){return t?t[-1]+backward(t.__getslice__(0,-1,1)):t};
export var courses=dict({});
self.archive=py7zlib.Archive7z(fp);
xticks[0].label1.set_visible(false);
conn.close();
var parser=argparse.ArgumentParser();
calendar.timegm(d.timetuple());
irn+=repr(num);
var client=paramiko.SSHClient();
fig.set_size_inches(10,15);
plt.tight_layout();
[2,4];
ax.xaxis_date();
screen.refresh();
c.__getitem__([tuple([5,6,1]),7]);
print(stdout.read());
ax.add_patch(polygon);
print(model.predict(np.array([[1,0]])));
export var serializer_class=TownSerializer;
_quicksort(array,0,len(array)-1);
var x=np.linspace(-1,1,201);
var c=Counter(function(){var __accu0__=[];for(var py_values of d.py_values())__accu0__.append(py_values[1]);return __accu0__}());
a1.destroyCallback.add(b);
pygame.mixer.music.play();
tk.Frame.__init__(self,master);
var __left0__=np.meshgrid(x,y);var X=__left0__[0];var Y=__left0__[1];
print(ops[op](true,false));
time.sleep(timeout);
f.__code__.co_name;
add(__kwargtrans__(arg));
print(traceback.format_exception_only(e.__class__,e));
G.add_edge(1,2);
export var dice=function(){var __accu0__=[];for(var x=0;x<4;x++)__accu0__.append(random.randint(1,6));return __accu0__}();
np.digitize(date_bins_i8,date_bins_i8);
print(tcpdump);
stateB();
stateC();
export var days=(a-b).days;
sum([x]*10);
pl.plot(pl.randn(100));
Foo.bar.__func__===foo;
np.concatenate(tuple([x.__getitem__([tuple([0,null,1]),i,i]),x.__getitem__([tuple([0,null,1]),i,j])]),__kwargtrans__({axis:1}));
export var canv=Canvas(root,__kwargtrans__({width:100,height:100}));
urllib.request.install_opener(opener);
self.extracting(random.uniform(0,self.weight));
self.sampling(random.uniform(0,self.weight));
export var bm=b.reshape(tuple([10,10,2]));
matches.append(item);
var __left0__=numpy.meshgrid(x,y);var X=__left0__[0];var Y=__left0__[1];
df.groupby(group_hours).apply(insert_missing_hours).reset_index(__kwargtrans__({drop:1}));
export var phone=models.CharField(__kwargtrans__({max_length:250,blank:true,null:true}));
A.shape;
admin.site.register(Log,LogAdmin);
var pdf=df.toPandas();
spinbox.grid(__kwargtrans__({row:2,column:0}));
__in__([42,1],a.tolist());
var df=df.dropna().reset_index(__kwargtrans__({drop:true}));
f.read();
ax.plot(plotlist[tracenum]);
set(q).intersection(w);

os.makedirs(target_path);
sock.sendto(dns.pack(),tuple([MCAST_GRP,UDP_PORT]));
traceback.print_exc();
var data=data.ix[data[cols]>0];
var my_dict=json.loads(input);
stats.norm.interval(.68,__kwargtrans__({loc:mu,scale:sigma}));
self.browser.quit();
self.transport.loseConnection();
var new_a=a.reshape(new_shape);
var root=tk.Tk();
var ax=plt.gca();
msg.attach(att);
var diff=difflib.ndiff(file1.readlines(),file2.readlines());
compressed_table.append(tuple([istart,iend,table[i-1]]));
var sample=lognorm.rvs(sigma,0,scale,__kwargtrans__({size:1E6}));
export var py_metatype=models.CharField(__kwargtrans__({max_length:5,choices:MEDIA_TYPES}));
var l=np.asarray(l);
var d=array([0,1]);
p();
__init__.py;
random.shuffle(list_of_questions);
plt.imshow(image,__kwargtrans__({extent:[x.min(),x.max(),y.min(),y.max()]}));
var id=Column(Integer,__kwargtrans__({primary_key:true}));
self.window.setLayout(self.layout);
colorbar.set_ticks(np.linspace(0,ncolors,ncolors));
Process(__kwargtrans__({target:worker,args:tuple([task_queue,done_queue])})).start();
tuple([[true,true,false,true,true,false,true]]);
export var mycounter=Counter(txt.py_split());
cv2.waitKey(1);
m.save();
export var ingredients=IngredientSerializer(__kwargtrans__({many:true}));
cythonize(...args,__kwargtrans__(kwargs));
var response=urllib.request.urlopen(req);
var value=myVariant.toString();
cmp(len(a),len(b));
export var xvalues=np.tile(np.arange(im.shape[1]),tuple([1,2]));
prev.append(line);
var subject=forms.CharField(__kwargtrans__({max_length:100,required:true}));
temp[mask2]=2;
l.py_sort(__kwargtrans__({key:function __lambda__(t){return t[1]},reverse:true}));
export var equals=function(){var __accu0__=[];for(var x of transposed)__accu0__.append(x.__getslice__(1,null,1)==x.__getslice__(0,-1,1));return __accu0__}();
print(a[np.py_sort(idx)]);
w.set_linewidth(2);
var df2=pd.DataFrame(df1);
main();
t.start();
data.plot();
logging.getLogger(__name__).setFormatter(log_format);
sess.run(embedding_init,__kwargtrans__({feed_dict:dict([[embedding_placeholder,embedding]])}));
var layout=QVBoxLayout();
sum(function(){var __accu0__=[];for(var i=0;i<len(conf_matrix);i++)__accu0__.append(conf_matrix[i][i]);return py_iter(__accu0__)}())/t;
print(a.__getitem__([1,5]));
Data.__getitem__([,0])+complex(0,1)*Data.__getitem__([,1]);
print(4*math.atan(1));
var index=function(){var __accu0__=[];for(var i=0;i<10;i++)__accu0__.append(i+1);return __accu0__}();
array([1,1,1,1]);
self._stop=threading.Event();
var pool=multiprocessing.Pool();
export var predicted=classifier.predict(X_test);
export var students=Students.objects.py_get.all();
export var in_memory_file=file.read();
var f=input();
sock.setsockopt(socket.IPPROTO_IP,socket.IP_ADD_MEMBERSHIP,mreq);
var x=.1*np.sin(2*np.pi*1.2*np.sqrt(t));
var ax=fig.add_subplot(111);
np.mean(arr,__kwargtrans__({axis:1}));
plt.xticks(new_xticks,new_xticks);
print(soup.title.string);
urllib.parse.urlencode(params);
var s=pxssh.pxssh();
lis[0]();
set(item)-set(z);
p.join();
y.append(sublist[1]);
var input=sys.stdin.readline();
frame.grid(__kwargtrans__({column:0,row:0,sticky:tuple([N,S,E,W])}));
tuple([0,42,-1,0,45,1]);
var fig=plt.figure();
var app=QApplication(sys.argv);
do_something_6();
var jmag=np.array(jmah);
np.interp(np.linspace(0,npt,nbin+1),np.arange(npt),np.py_sort(x));
sys.stdout.write(term.BOL+term.CLEAR_EOL);
count+=1;
os.utime(path_to_file,tuple([access_time,modification_time]));
np.vstack(tuple([a,b,c])).T;
df;
var y=np.random.rand(n);
print(Counter(n1)-Counter(n2));
plt.legend();
print(response.headers);
ax0b.get_yaxis().get_offset_text().set_x(-.075);
ax0c.get_yaxis().get_offset_text().set_x(-.075);
var a=np.arange(100);
var ax=plt.gca();
self.__add__(other);
repr(s);
numpy.where(a>2);
batch.add(service.farmers().list(),__kwargtrans__({callback:list_farmers}));
var delta=timedelta(__kwargtrans__({hours:t.hour,minutes:t.minute,seconds:t.second}));
self.assertAlmostEqual(tr(2,1),.0718,4);
(function(){var __accu0__=[];for(var x of np.py_split(a,np.where(a==0)[0]))if(len(x[x!=0]))__accu0__.append(x[x!=0]);return __accu0__})();
var A=(C*mask).sum(__kwargtrans__({axis:-1}));
plt.ion();
var reader=csv.reader(fin);
self.view.setColumnWidth(0,800);
a.__getitem__([[[0],[1]],i]);
x+=tuple([tuple([0,0])]);
len(net.params);
ser.dropna().plot(__kwargtrans__({ax:axes[1]}));
[0,0,0,0];
plt.xlim(0,10);
display.popen.terminate();
print(df.iloc[new_index]);
print(sline);
n+=1;
app.run(__kwargtrans__(__mergekwargtrans__({port:7080},kwargs)));
var d2=function(){var __accu0__=[];for(var [k,v]of list(d.py_items()))__accu0__.append([k,f(v)]);return dict(__accu0__)}();
tuple(zip(MONTHS,MONTHS));
plt.show();
parity(function(){var __accu0__=[];for(var i of perm1)__accu0__.append(perm0[i]);return __accu0__}());
sys.stdout=progA.stdin;
df.loc[g.groups.py_get(2,[])];
time.sleep(5);
plt.tight_layout();
mylist.py_sort();
var page=urllib.request.urlopen(req).read();
s.set_debuglevel(1);
urllib.request.Request(url,data,header);
console.setLevel(logging.INFO);
f.close();
var new_list=function(){var __accu0__=[];for(var dd of my_list)if(!(dd===new_dict))__accu0__.append(dd);return __accu0__}();
print(k,Dictionary[k]);
ax.scatter(x,yflat,z);
img_temp.write(opener.open(url).read());
(function(){var __accu0__=[];for(var i of l1)if(!any(function(){var __accu1__=[];for(var j of l2)__accu1__.append(__in__(j,i));return py_iter(__accu1__)}()))__accu0__.append(i);return __accu0__})();
var ax=plt.axes();
var line=f.readlines()[7];
self.result_queue.put(answer);
np.take(arr,inds);
var t=np.arctan2(y,x);
current_line+=1;
tuple([py_name,age]);
self.__dict__.py_update(locals());
ax.add_patch(patch);
var soup=BeautifulSoup.BeautifulSoup(html);
res.py_get();
print(model.predict(np.array([[0,0]])));
var data=client.get_spot_price();
(function(){var __accu0__=[];for(var i of v)__accu0__.append(i+i*weight);return __accu0__})()+[n];
im.wcs.__getitem__([tuple([0,null,1/128]),tuple([0,null,1/128])]);
hasattr(self,py_name);
self.listbox.select_set(0);
var ax=fig.add_axes([0,0,1,1],__kwargtrans__({frameon:false}));
ip.close();
d.py_setdefault(i,set()).add(j);
a.save();
response.close();
decorator2(f);
var s=sys.stdin.read();
var response=request.get_response(main.app);
plt.show();
(function(){var __accu0__=[];for(var param of params)__accu0__.append(os.getpid(param));return __accu0__})();
self.SetSizer(s);
self._window.destroy();
export var cdict=function(){var __accu0__=[];for(var c of cj)__accu0__.append([c.py_name,c.value]);return dict(__accu0__)}();
func(...args,__kwargtrans__(kwargs));
var parser=argparse.ArgumentParser();
a==a;
worksheet.set_column(i,i,width);
var d=dict(d);
var root=Tk();
L[i]=L[i].__getslice__(0,null,-1);
time.gmtime(ts/1E3);
var f=pd.DataFrame(dict(__kwargtrans__({year:list(range(2E3,2011)),A:np.random.rand(11)})));
print(!any(dict2.py_values()));
writer.writerows(grouped);
print(df[df.Name.isin(val)]);
my_thread.start();
self.layout.addWidget(self.statusBar);
df1.py_update(df2);
thread.start();
proxy.ProxyClient.__init__(self,...args,__kwargtrans__(kwargs));
elem_list.append(i);
var fig=plt.figure(__kwargtrans__({figsize:tuple([10,5])}));
ast.literal_eval(raw);
print(a.__getslice__(-9,null,1));
fig.subplots_adjust(__kwargtrans__({left:0,right:1,top:1,bottom:0,hspace:0,wspace:0}));
db.engine.execute(schema);
r.destroy();
CORBA.__file__;
d.py_setdefault(j,[]).append(i);
group(5,list(range(5)));
int(round(n[0]));
len(s);
plt.show();
M.diagonal();
root.quit();
var a=np.arange(24).reshape(tuple([4,6]));
var ax2=ax1.twinx();
os.setpgrp();
var start=time.time();
layout.addWidget(self.table);
var wait=WebDriverWait(driver,5);
pylab.figure();
response;
X[np.ix_(a,b)];
tk.Frame.__init__(self,master);
print(avg);
tqdm_pandas(tqdm_notebook,...args,__kwargtrans__(kwargs));
var b=dict(zip(i,i));
zip(s,s.__getslice__(1,null,1));
self.pic=QtGui.QPixmap(imagePath);
var data=output.getvalue().__getslice__(14,null,1);
changecolor(rect);
var instance=ModelClass.objects.create(__kwargtrans__(validated_data));
matches.append(m.group(0));
var __left0__=select_choice();var a=__left0__[0];var b=__left0__[1];
a.__getslice__(0,null,2);
var reader=csv.reader(fin);
var array=np.random.random(10);
dict.__setitem__(self,key,value);
self._result_handler.start();
count+=1;

plt.ylim(0-.5,data.shape[0]-.5);
lst.py_sort(__kwargtrans__({key:function __lambda__(x){return x[1]}}));
int(base*round(float(x)/base));
ax1.yaxis.tick_left();
main();
var A=numpy.concatenate(tuple([A,newrow]));
g.user.is_authenticated();
var app=wx.PySimpleApp();
plt.hold(true);
self.expunge(record);
print(df.sub(a,__kwargtrans__({axis:0})));
signal.signal(signal.SIGUSR1,signal_handler);
export var kernel=np.ones(tuple([10,10]),np.uint8);
ax.set_ylim(0,255);
var br=mechanize.Browser();
np.putmask(a,a>=m,m-1);
export var g_list=list(filter(not_subtle_condition,g_list));
doc.appendChild(el);
time.sleep(5);
var py_name=models.CharField(__kwargtrans__({max_length:128}));
client.close();
os.makedirs(os.path.dirname(dst));
window2.destroy();
timer2.stop();
var serializer=VenueSerializer(venues,__kwargtrans__({many:true}));
gleason.setParseAction(diceGleasonParseAction);
numpy.dot(c,a);
var end=string.index(end_marker,start+1);
tex_data[tex_data==0]=np.nan;
var hxs=HtmlXPathSelector(response);
os.write(fh,zf.read(py_name));
var e=function(){var __accu0__=[];for(var [k,v]of a.py_items())__accu0__.append([v,k]);return dict(__accu0__)}();
py_reversed(it.islice(it.chain.from_iterable(py_reversed(a)),5));
dict.py_update(dict([[item[0],item[1]]]));
random.shuffle(l);
cv.Circle(color_image,center_point,10,cv.CV_RGB(255,100,0),1);
var result=db.table.filter(db.table.column.ilike(looking_for));
e.extract();
dict(zip(l2,map(len,list(function(){var __accu0__=[];for(var g of groups)__accu0__.append(list(g[1]));return py_iter(__accu0__)}()))));
export var dayDict=function(){var __accu0__=[];for(var d of weekList)__accu0__.append([d,[]]);return dict(__accu0__)}();
current_date+=datetime.timedelta(__kwargtrans__({days:1}));
classifier.fit(train_features,train_labels);
k.py_sort();
client.create_video(__kwargtrans__(kwargs));

tuple([[1,1,1,2,2,2]]);
ax.set_yticks([]);
Serial.println(number);
self.build_response_from_file(request);
bytes(key);
time.sleep(1);
export var mymatrix=[[1,2,9],[4,9,6],[7,8,9]];
do_stuff();
urlopen(req).read();
exit();
p.terminate();
hash(frozenset(self.__dict__.py_items()));
theother();
N+=1;
writer.writerow(line);
driver.py_get(url);
logging.root.addHandler(file_handler);
excel.Application.Quit();
py_next(b);
var app=Flask(__name__);
export var seconds=int(cur.fetchone()[0]);
a.insert(0,x);
workbook.close();
matplotlib.pyplot.scatter(n.predict(nfeatures).tolist(),targets.tolist());
numpy.bincount(x,__kwargtrans__({weights:w}));
var id=Column(Integer,__kwargtrans__({primary_key:true}));
sum(c.py_values());
b.comments[0].content;
draw_networkx_edges(G,pos);
painter.setBrush(QBrush(Qt.white));
pdb.set_trace();
os.rename(infilename,newname);
[1,1,1,1];
var __left0__=plt.subplots();var fig=__left0__[0];var ax1=__left0__[1];
sys._getframe().f_back.f_code.co_name;
var text=msg.as_string();
df.iloc[pd.np.r_.__getitem__([tuple([10,12,1]),tuple([25,28,1])])];
session.add(model);
ax4.set_ylim(0,1.2);
self.clear_canvas();
new_dict[length]=dict([[mykey,name_num[mykey]]]);
self.Show();
var dir=os.path.join(root,i);
main();
lst.py_sort(__kwargtrans__({key:function __lambda__(x){return x[0]}}));
merged[k].add(d2[k]);
binary_search([1,5,8,10],15);
var f=function __lambda__(r){return r*Math.pow(sp.j1(r)/r,2)};
var l=[tuple([0,1,0]),tuple([1,1,0])];
var reader=csv.reader(f);
self.add_node(origin);
pylab.show();

self.layout.addWidget(self.spinBox);
subset[subset.isin(myList)].stack().duplicated().unstack().any(1);
print(str(a[0]));
lbl.pack();

(function(){var __accu0__=[];for(var m of pattern.finditer(sentence))__accu0__.append(m.start());return __accu0__})();
print(my_list);
var ax=fig.add_subplot(111);
any(map(function __lambda__(c){return c.isdigit()},value));
print(mylist);
traceback.print_exception(type_,value,tb);
df.applymap(onlynumbers);
var app=flask.Flask(__name__);
export var df_array=np.array(list(upsample(person)));
print(CreateTable(Model.__table__));
var parser=argparse.ArgumentParser();
export var ebar=plt.errorbar(x,y,__kwargtrans__({yerr:err}));
pylab.plot(data.__getitem__([tuple([0,null,1]),0]),data.__getitem__([tuple([0,null,1]),1]),__kwargtrans__({label:label}));
minheap.add(maxheap.poll());
plt.autoscale();
list(itertools.chain(...list_));
painter.save();
plt.plot(x,y,fmt,__kwargtrans__({label:label}));
result.append([k,ms[k]+mb[k]]);
ax.plot();
main();
plt.show();
plt.subplot(2,2,n+1);
var row=function(){var __accu0__=[];for(var [py_name,val]of list(row.py_items()))__accu0__.append([name_map[py_name],val]);return dict(__accu0__)}();
export var bounds=np.repeat([tuple([0,1])],D,__kwargtrans__({axis:0}));
yolk;
var __left0__=tuple([[],[]]);var xs=__left0__[0];var ys=__left0__[1];
(function(){var __accu0__=[];for(var i=0;i<len(iterable)-length+1;i++)__accu0__.append(iterable.__getslice__(i,i+length,1));return __accu0__})();
sys.exit(1);
json.JSONEncoder.py_default(self,obj);
sorted(list1).__getslice__(0,2,1);
var app=Flask(__name__);
(function(){var __accu0__=[];for(var i=1;i<len(x);i++)if(x[i]!=x[i-1])__accu0__.append(i);return __accu0__})();
var B=np.interp(xx,x,A);
var s=df.ix.__getitem__([tuple([0,null,1]),0]);
b.a.filter(__kwargtrans__({a:a1}));
[0,1,0,0,1,29];
frame.grid(__kwargtrans__({column:1,row:1,sticky:Tkconstants.NSEW}));
var polycube=numpy.rot90(polycube);
time.sleep(.5);
var cursor=connection.cursor();
(0<x&x<1).any();
mywidget.pack();
var a=np.array(literal_eval(a));
sum(map(len,list(d.py_values())));
d[v].append(i);
image.save(b.image.path,__kwargtrans__({quality:20,optimize:true}));
export var inds=np.cumsum(tmp_range.__getslice__(1,null,1).__getslice__(0,null,-1)+1);
stream_handler.setLevel(logging.INFO);
act.pyqtConfigure(__kwargtrans__({triggered:self.on_triggered}));
calendar.day_name[dayoftheweek];
MyUser.objects.filter(__kwargtrans__({tags__in:id_list}));
sys.exit(0);
var browser=webdriver.Firefox();
var df=DataFrame(data);
self.assertAlmostEqual(tr(2,2),.865,4);
print(info.group(1));
sys.exit(unittest.main());
is_separately_linear(eq1,[a,c]);
var new_df=old_df[list_of_columns_names].copy();
var sc=ax.scatter(x,y,z);
self.fcall=fcall;
w.writerow([row[0],colname,colval]);
print(soup);
print(function(){var __accu0__=[];for(var [pos,char]of enumerate(s))if(char==c)__accu0__.append(pos);return __accu0__}());
export var unique_id=models.ForeignKey(MyUUIDModel,__kwargtrans__({unique:true}));
np.random.uniform(0,1,tuple([500,2E3]));
print(y.round(2));
self._compile_rules();
MySQLdb.escape_string(SQL);
self.result.append(word.__getslice__(0,-1,1));
o.A(1);
plt.show();
var idx=np.where(~mask,np.arange(mask.shape[1]),0);
(function(){var __accu0__=[];for(var b of a)for(var x of b)__accu0__.append(x);return __accu0__})();
var fig=plt.figure();
print(m.group(2));
f1.close();
var __left0__=tuple([top.get_line(),bottom.get_line()]);export var top_line=__left0__[0];export var bottom_line=__left0__[1];
time.sleep(1);
self.timer=Timer(self.timeout,self.handler);
copy_a-=copy_a[0].copy();
self.__dict__.py_update(__kwargtrans__(attrs));
file.close();
f.write(etree.tostring(root,__kwargtrans__({pretty_print:true})));
print(pd.concat([df.iloc.__getitem__([0,tuple([0,null,1])]),df.iloc.__getitem__([-1,tuple([0,null,1])])],__kwargtrans__({axis:1})));
os.rename(outfilename,in_filename);
f.seek(0);
platform.system();
mail.ehlo();
urllib.request.install_opener(opener);
pickle.dumps(value);
var data=sys.stdin.readline();
self.crawler.start();
result.insert(1,row_separator);
var dt=datetime.datetime.now();
app.mainloop();
export var enemies=[];
var cj=cookielib.CookieJar();
pd.options.display.max_colwidth;
somelist.__setslice__(0,null,null,function(){var __accu0__=[];for(var tup of somelist)if(determine(tup))__accu0__.append(tup);return __accu0__}());
time.sleep(.5);
plt.plot([pc[i][0],pc[i+1][0]],[pc[i][1],pc[i+1][1]],__kwargtrans__({color:c}));
var page=resp.read();
var data=sin(2*pi*1E3*t);
var app=Flask(__name__);
event.set();
plt.show();
circular.append(p);
p4.readarray(x);
self.lb2.yview(...args);
TrueXor(true,false,false);
solve(a*Math.pow(x,2)+b*x+c,x);
(function(){var __accu0__=[];for(var s of lst)__accu0__.append(max(s.index(max(s))-s.index(min(s)),0));return __accu0__})();
merged[k].append(d1[k]);
var out=sys.stdout.getvalue();
print(ET.tostring(root));
var f=plt.figure(__kwargtrans__({figsize:tuple([10,6])}));
getattr(self.myobj,attr);
np.vstack(l);
func.__code__.co_argcount;
deletes[i];
urllib.request.HTTPSHandler.__init__(self);
plt.show();
self.entry.pack(__kwargtrans__({pady:4}));
print(tuple([a,b]));
random.choice(my_list)();
var p=np.array([tuple([0,0]),tuple([1,0]),tuple([0,1]),tuple([1,1]),tuple([2,2])],__kwargtrans__({dtype:np.float}));
var fig=plt.figure();
main();
plt.ylim(-1.1,1.1);
fh.close();
print(random.choice(value),key);
p2.start();
br.set_handle_robots(false);
print(data);
var ch=logging.StreamHandler();
soup.prettify();
var df2=df2.reset_index();
var labels=ax.get_xticklabels();
plt.setp(ax2.get_yticklabels(),__kwargtrans__({visible:false}));
cDC.DeleteDC();
cur.fetchone();
self.mainframe.columnconfigure(0,__kwargtrans__({weight:1}));
do_something_with(obj);
hist(date2num(list_of_dates),__kwargtrans__({cumulative:true}));
a*exp(-Math.pow(x-x0,2)/(2*Math.pow(sigma,2)));
var reader=csv.DictReader(fp);
sys.exit(main());
sys.exit(application.exec_());
logging.basicConfig(__kwargtrans__({level:logging.DEBUG}));
var pw=rps();
df.set_index(date_col_name,__kwargtrans__({drop:true,inplace:true}));
pygame.init();
self.task.cancel();
main();
print(pd.merge(df_subset,df).equals(df_subset));
math.sqrt(-1)/0;
list(solve(5));
my_list.append(item);
json.dumps(obj,__kwargtrans__({py_default:method_name}));
s.getvalue();
self.data=np.zeros(tuple([100]));
var ax=fig.gca();
var app=QApplication(sys.argv);
sys.modules[py_name]=mod;
win.set_size_request(100,100);
ax.py_clear();
cv2.circle(img,corner,7,tuple([255,255,0]),-1);
export var old_stdout=sys.stdout;
numpy.finfo(float).max;
kurt;
var image=Image.open(image_string);
export var seed2=df[~msk].mean();
self.panel.SetSizer(sizer);
var queryset=Workout.objects.none();
plt.figure(__kwargtrans__({figsize:tuple([10,10])}));
var __except0__=StopIteration();__except0__.__cause__=null;throw __except0__;
export var reply=socket.recv();
var response=requests.py_get(url,__kwargtrans__({stream:true}));
do_something_in_mechanize();
my_logger.addHandler(handler);
pylab.plot(list(range(11)),list(range(11)));
var reader=csv.reader(open(filename));
print(myhtml.text_content());
print(json.dumps(test_json,__kwargtrans__({py_default:json_debug_handler})));
var s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);
sys.exit(1);
driver.close();
sieve.primerange(a,b);
axes.append(ax.twinx());
main();
var df=pd.concat([df]*1E3).reset_index(__kwargtrans__({drop:true}));
len(line);
var color=[tuple([255,0,0]),tuple([0,255,0]),tuple([0,0,255])];
oFid.close();
sys.stdout=stdout;
comp+=numpy.min(first+second,__kwargtrans__({axis:2}));
print(i,j);
plt.plot(Time,signal);
mywidget.update_idletasks();
logger.setLevel(logging.DEBUG);
self.sizer.Add(self.list,__kwargtrans__({proportion:1,flag:wx.EXPAND|wx.ALL,border:5}));
QtGui.QWidget.__init__(self,...args,__kwargtrans__(kwargs));
export var payload=msg.get_payload();
export var zdf1=bcolz.ctable.fromdataframe(df1);
s.close();
export var addopts=- -pylint;
np.count_nonzero((a&r)!=(b&r));
np.array(function(){var __accu0__=[];for(var x of u)__accu0__.append(d[x]);return __accu0__}())[inv].reshape(a.shape);
export var current_file=os.path.abspath(os.path.dirname("./P2JSnippets.py"));
var result=function(){var __accu0__=[];for(var s of data)if(len(s)==maxlen)__accu0__.append(s);return __accu0__}();
process(line);
self._stream.flush();
var r=requests.post(url,__kwargtrans__({data:py_values}));
result.append(tuple([int(k),c]));
curses.noecho();
var cols=df.columns.tolist();
ax4.plot(data,data,data,Math.pow(data,2)/10,data,np.sin(data));
(function(){var __accu0__=[];for(var b of range(9,-1,-1))__accu0__.append(A[b]);return __accu0__})();
export var beta2=np.linalg.solve(a,b.T);
print(df);
(function(){var __accu0__=[];for(var x of py_selector)__accu0__.append(x?B.py_pop(0):A.py_pop(0));return __accu0__})();
var C=np.swapaxes(B,1,2);
all.append(row);
self.write(login_response);
r.reduceByKey(function __lambda__(x,y){return x+y}).collect();
var x=list(sum(list(dict.py_items()),tuple([])));
shutil.copy2(path,temp_path);
lst[i]=lst[i]*2;
add_patch(axes[1],__kwargtrans__({alpha:.2,rasterized:true}));
axcltwo.set_ylim(binimg.shape[0],-1);
self.seek(0,2);
f.seek(findex[n]+1);
print(max(function(){var __accu0__=[];for(var i of x)__accu0__.append(len(i[j]));return py_iter(__accu0__)}()));
var fig=pyplot.figure();
func();
fp.close();
user.user_permissions.add(perm);
new set([NULL,NULL,0,NULL]);
sio.getvalue();
pipe_lrSVC.fit(X_train,y_train);
var indices=sp_matrix.nonzero();
export var res2=pd.Series(res_arr,__kwargtrans__({index:express_df.index}));
var p=sns.regplot(__kwargtrans__({x:dat.x,y:ydat,data:dat,ax:ax}));
var form=UserprofileForm(request.POST);
pygame.quit();
export var o4=O4();
export var o5=O5();
Child().on_start();
plt.show();
var user=models.ForeignKey(User);
var __except0__=WindowsError();__except0__.__cause__=null;throw __except0__;
export var A01=A.__getitem__([tuple([0,null,1]),tuple([0,2,1])]).astype(int);
self.Show(true);
plt.show();
ax.set_xticklabels(columns_my_order);
Fraction(.185);
peaker(Y);
print(BASE_DIR);
export var logits=faultnet.inference(images);
X.__getitem__([tuple([0,null,1]),0])-a;
time.sleep(2);
var __left0__=tuple([int(x),x-int(x)]);var x=__left0__[0];export var chopped=__left0__[1];
df;
ax.w_xaxis.set_pane_color(tuple([1,1,1,1]));
print(cur.fetchone());
l.append(v);
print(line);
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
re.compile(RE,re.UNICODE);
sum(function(){var __accu0__=[];for(var i of a.flat)if(i)__accu0__.append(1);return py_iter(__accu0__)}());
plt.plot(list(range(10)),function(){var __accu0__=[];for(var x=0;x<10;x++)__accu0__.append(math.sin(x));return __accu0__}());
multiples.py_update(list(range(i*i,n+1,i)));
date.py_replace(__kwargtrans__({tzinfo:timezone.utc}));
print(x);
fapp(request.environ,self.start_response);
list(islice(gen(),n));
ax.patch.set_visible(false);
var mean=all.mean(__kwargtrans__({axis:-1}));
print(df.TIMESTAMP.dt.hour);
button.pack();
plt.plot(x,y);
print(np.unravel_index(np.argmax(x),x.shape));
array([[py_NaN,py_NaN,py_NaN,py_NaN],[py_NaN,py_NaN,py_NaN,py_NaN],[py_NaN,py_NaN,py_NaN,py_NaN]]);
var ax=fig.add_subplot(111);
var newdate=datetime.datetime(...map(int,py_values));
var __left0__=max(data,__kwargtrans__({key:function __lambda__(item){return item[1]}}));var index=__left0__[0];var value=__left0__[1];
var df2=pd.DataFrame(__kwargtrans__({columns:cols,index:list(range(2))}));
map.drawcoastlines();
f.readline();
var ast=compiler.parse(eq);
outfile.close();
annotation(py_name,value);
deletesublist[index];
System.out.println(answer.toString());
numpy.dstack(tuple([x,y]));
var mydict=function(){var __accu0__=[];for(var [key,value]of zip(x,y))__accu0__.append([key,value]);return dict(__accu0__)}();
var __left0__=win.get_size();var width=__left0__[0];var height=__left0__[1];
pd.concat([df.iloc.__getslice__(-shift,null,1),df.iloc.__getslice__(0,-shift,1)]);
models.Model.save(self,force_insert,force_update);
print(tuple([a,b,c]));
app.mainloop();
map(np.random.shuffle,arr2d);
df.pivot(__kwargtrans__({index:0,columns:1,py_values:2}));
print(float(line));
var d=dict(zip(list(range(1,10)),list(range(50,61))));
print(function(){var __accu0__=[];for(var [x,y]of p.findall(s))__accu0__.append(x?x:y);return __accu0__}());
[.001,.25,.5,.75,.99,.999];
var f=foo();
var app=Flask(__name__);
export var hets=[];
canvas.Canvas.__init__(self,...args,__kwargtrans__(kwargs));
export var b_id=Column(Integer,__kwargtrans__({primary_key:true}));
var conn=urllib.request.urlopen(url);
json.dumps(recursive_asdict(data));
os.path.join(os.path.normpath(directory),filename);
f.__closure__[0].cell_contents;
file_list.py_sort(__kwargtrans__({key:function __lambda__(a){return a[0]}}));
export var wordorder=dict(zip(list2,list(range(len(list2)))));
var s=pd.Series(l);

print(tuple([x,py_next(it)]));
x.__getitem__([1,2]);
np.random.shuffle(arr);
export var float_arr=np.vstack(arr.__getitem__([tuple([0,null,1]),1])).astype(np.float);
sys.path.append(vendor_dir);
df.col=df.col.dropna().apply(function __lambda__(x){return str(int(x))});
os.chmod(path,current_permissions&NO_WRITING);
var score=sum(function(){var __accu0__=[];for(var i of x)if(__in__(i,y))__accu0__.append(i*w(i));return py_iter(__accu0__)}())/sum(function(){var __accu0__=[];for(var i of x)__accu0__.append(i*w(i));return py_iter(__accu0__)}());
answer1[i]+=1;
self.meth();
print(matches[1]);
dict.__init__(self,...args,__kwargtrans__(kwargs));
export var mtime=os.path.getmtime(file_name);
var key=parts[-1];
self.obtainingparams(df,tau_1,tau_2,residuals).called;
categories.py_setdefault(i[1],[]).append(i[0]);
export var dc=wx.PaintDC(self);
var L=function(){var __accu0__=[];for(var l of L)__accu0__.append(OrderedDict(function(){var __accu1__=[];for(var [k,v]of l.py_items())__accu1__.append(tuple([k,d[k](v)]));return py_iter(__accu1__)}()));return __accu0__}();
column_header.set_focus_on_click(false);
(function(){var __accu0__=[];for(var x of seqs[0])for(var p of product(...seqs.__getslice__(1,null,1)))__accu0__.append([x]+p);return __accu0__})();
min(x);
megawarc.main();
Grandparent.my_method(self);
zip(...ntup);
var soup=BeautifulSoup(html);
print(a,b);
a.show();
server_socket.listen(10);
self.frame.Show(true);
var ax=fig.add_subplot(gs[n]);
print(r.url);
im.seek(i);
thread.start();
var __left0__=min(list(dict.py_items()),__kwargtrans__({key:function __lambda__(__v){return abs(__v[1]-target)}}));var key=__left0__[0];var value=__left0__[1];
f.save();
NP.insert(T,2,r,__kwargtrans__({axis:0}));
export var directory=os.path.realpath(directory);
i+=1;
b.py_sort(__kwargtrans__({reverse:true}));
var dir=os.path.dirname("./P2JSnippets.py");
main();
var __left0__=im.getpixel(tuple([0,0]));var r=__left0__[0];var g=__left0__[1];var b=__left0__[2];
s.close();
(function(){var __accu0__=[];for(var [k,g]of groupby(arr,function __lambda__(x){return x[0]}))__accu0__.append([k,function(){var __accu1__=[];for(var [_,v]of g)__accu1__.append(v);return __accu1__}()]);return dict(__accu0__)})();
make_unicorns_from(f);
a_pet.say();
var d1=datetime.datetime.now();
zip_longest(...args,__kwargtrans__({fillvalue:fillvalue}));
form.fieldname.choices=choice_list;
var p2=subprocess.Popen(args,__kwargtrans__({stdout:subprocess.PIPE}));
var server=Process(__kwargtrans__({target:app.run}));
var c=sys.stdin.read(1);
itertools.product(...[list(C.py_items())]*2);
logging.exception(e);
print(x);
main();
var ax=fig.add_subplot(111);
sys.exit();
sys.exit(0);
np.random.shuffle(arr);
print(prettyformat(obj));
frw.seek(seekpoint,0);
df.columns=function(){var __accu0__=[];for(var x of df.columns)__accu0__.append(col_dict.py_get(x,x));return __accu0__}();
var q=Queue.Queue(__kwargtrans__({maxsize:0}));
list.remove(s);
self.text.config(__kwargtrans__({yscrollcommand:self.scroller.set}));
export var maxrep=reduce(f,l,tuple([0,0,0]))[2];
df.append(df2);
definitions.py;
main();
export var open_cv_image=open_cv_image.__getitem__([tuple([0,null,1]),tuple([0,null,1]),tuple([0,null,-1])]).copy();
print(ElementTree.tostring(tree));
l.set_option(ldap.OPT_REFERRALS,0);
is_palindrome(letters);
df.stack().py_values;
new_contact.save();
ax1.yaxis.label.set_color(plot_ax1.get_color());
var a=A();
logging.Formatter.format(self,record);
br.set_handle_redirect(true);
var soup=BeautifulSoup(xml_string);
var B=A;
var __left0__=plt.subplots(1,1);var fig=__left0__[0];var ax=__left0__[1];
np.dot(rot_matrices,p);
pycharm[path_to_your_file];
f2.write(data);
logging.root.addHandler(console_handler);
print(sys.version);
export var my_django_file=ContentFile(f.read());
orig(repo,remote,...args,__kwargtrans__(kwargs));
var names=list(a.dtype.names);
ind.append(arr.index(list(df.iloc[i])));
totuple(array);
var app=Flask(__name__);
print(format(tree));
logging.error(e,__kwargtrans__({exc_info:true}));
a[0](1);
main();
list();
p.join();
msg.attach(MIMEText(text));
lst.py_sort();
var form=EditEventForm(__kwargtrans__({instance:event}));
min(function(){var __accu0__=[];for(var i of[i1,i2])__accu0__.append(tuple([angular_distance(theta,L[i],mod),i,L[i]]));return py_iter(__accu0__)}());
results.py_sort(__kwargtrans__({key:function __lambda__(x){return tuple([int(x[0]),x[1]])},reverse:true}));
var data=urllib.request.urlopen(url).read();
export var data_list=function(){var __accu0__=[];for(var [key,value]of list(data.py_items()))__accu0__.append([key]+value);return __accu0__}();
pickle.dump(data1,output);
l.set_option(ldap.OPT_X_TLS_DEMAND,true);
setup();
f(...args);
Guild.query().filter(Guild.members==self.key);
ax.set_xlim(-51,51);
export var results_list=pool_results.py_get();
sorted(sentence)[-1];

print(np.allclose(dets(M),dets_fast(M.copy())));
export var block_start=np.concatenate(tuple([[0],np.cumsum(block_count).__getslice__(0,-1,1)]));
data+=np.random.normal(__kwargtrans__({size:data.shape}))*.4;
sys.exit(app.exec_());
MyClass(arg1,arg2);
var bitmap=wx.Bitmap(path);
setattr(self,attr,value);
var item=row.__getslice__(1,null,1);
plt.axvline(__kwargtrans__({x:.2}));
var obj=memcache_client.gets(key);
d[l[0]]=l[1];
do_another_thing(object_list[-1]);
l.extend(v);
opt.add_argument(...args,__kwargtrans__(kwargs));
groups.py_setdefault(y,[]).append(x);
var temp=pd.concat([temp,temp2],__kwargtrans__({axis:1}));
d[key]=value;
df.apply(LabelEncoder().fit_transform);
print(l2set);
var fig=plt.figure();
print(i,is_square(i));
admin.site.register(Class,ClassAdmin);
browser.add_cookie(cookie);
print(x.date());
l.append(elt);
f.read();
export var on=models.ForeignKey(Member,__kwargtrans__({blank:true}));
time.sleep(0);
var X=sc.transform(X);
[c,d,e,f];
var ax2=plt.subplot(212);
var comments=soup.find_all(__kwargtrans__({string:function __lambda__(text){return isinstance(text,Comment)}}));
var parser=argparse.ArgumentParser();
export var here=os.path.dirname(os.path.abspath("./P2JSnippets.py"));
var line=line.rstrip();
ax.add_patch(circ);
print(int(math.sqrt(5)));
im.getbbox();
fig.tight_layout();
var p=subprocess.Popen(cmd,__kwargtrans__({stdout:subprocess.PIPE,stderr:subprocess.STDOUT}));
sleep(snooziness);
parser.parse_args();
print(foo.bar._decorators);
os._exit(1);
(function(){var __accu0__=[];for(var i=0;i<length-k+1;i++)__accu0__.append(string.__getslice__(i,i+k,1));return __accu0__})();
a[ind];
process.wait();
list(range(0,len(given)-len(sublist)+1));
window.add(widget);
var __left0__=tuple([l[i],l[i+1]]);l[i+1]=__left0__[0];l[i]=__left0__[1];
export var dftot=pd.concat(tuple([df1,df2]));
print(np.py_split(x,np.where(np.diff(x)>.5)[0]+1));
var timestamp=(utc_dt-datetime(1970,1,1)).total_seconds();
SomeClass.some_static_method();
print(foo);
var B=numpy.py_split(A,split_at);
f();
var app=Flask(__name__);
!any(function(){var __accu0__=[];for(var i of x)__accu0__.append(__in__(i,seen)||seen.append(i));return py_iter(__accu0__)}());
(np.corrcoef(M)==1).sum()==M.shape[0];
var num_words=sum(function(){var __accu0__=[];for(var sentence of text)__accu0__.append(len(sentence.py_split()));return py_iter(__accu0__)}());
ipshell();
var ax=fig.add_subplot(111);
earth+=1E5;
time.sleep(1);
response;
s+=A[k]*B[k];
time.sleep(.2);
sys.path.append(str(top));
var lst=[1,2];
export var scaled_data=function(){var __accu0__=[];for(var x of data_list)__accu0__.append(scaler(x));return __accu0__}();
make_square(2);
local.py;
ax.plot_surface(X,Y,Z);
var split_list=function __lambda__(lst){return tuple([lst[0],lst.__getslice__(1,null,1)])};
var root=tk.Tk();
print(mimetypes.guess_type(url));
self.loop.run_forever();
setattr(model,py_name,request.py_get(py_name));
time.sleep(0);
fig.canvas.draw();
var a=[1,2];
links[1].click();
var p=multiprocessing.Pool(__kwargtrans__({processes:1}));
var a=list(range(10));
[1,2];
response.write(p.body);
foo_list.append(function __lambda__(){return bar.func2([7,7,7,9])});
var p=Pool(__kwargtrans__({processes:10}));
sum(Math.pow(x,2));
patcher.start();
ax.xaxis.set_visible(false);
print(len(itemlist));
root.after(500,add_letter);
foo();

export var new_bs=BeautifulSoup(target_html);
self.deauthorize();
Story.append(table);
session1.commit();
datetime.datetime.now();
dir(f);
print(image.shape);
server2.handle_request();
export var photo=ImageTk.PhotoImage(image);
self.pubsub=self.client.pubsub();
getattr(object,attrname);
str([]);
self.my_text.splitlines();
self.comboBox_2.py_clear();
pysvn.__file__;
ax1.legend(__kwargtrans__({loc:2}));
shuffle(word);
self.py_name=py_name;
pool.map(processMdb,mdblist);
print(formatdate(timestamp,true));
self.client.connect();
pylab.figure();
ax.xaxis.set_minor_formatter(FixedFormatter(bin_labels));
time.tzset();
seen.add(line);
print(difft2(time(20,40,0),time(18,41,0)));
wb.close();
extend_array(data,10);
export var len2=function __lambda__(l){return sum(function(){var __accu0__=[];for(var x of l)__accu0__.append(len(x));return __accu0__}())};
var root=Tk();
df[~bad_df];
print(k,v);
np.array(rdd.collect()).nbytes;
start+=1;
var id=Column(Integer,__kwargtrans__({primary_key:true}));
list(chain.from_iterable(function(){var __accu0__=[];for(var t of[tuple([4,7]),tuple([12,18])])__accu0__.append(islice(theList,...t));return py_iter(__accu0__)}()));
var parser=argparse.ArgumentParser();
__init__.py;
os.fdopen(fd,access);
ax1.set_xlim(...np.log10(olim));
G.edges(__kwargtrans__({data:true}));
ipdb.runcall(foo,1,2);
print(num.contents[0]);
print(np.all(B[b_to_a]==A));
p.map(Copier(target_dir),file_list);
var file=forms.FileField();
map(function __lambda__(x_y){return x_y[0]+x_y[1]},zip(repeat(x),y));
a.__setslice__(0,null,null,function(){var __accu0__=[];for(var x of b)__accu0__.append(tuple([x])+mapping[x]);return __accu0__}());
var ab=np.hstack(tuple([a,b]));
var nums=function(){var __accu0__=[];for(var n of x.py_split())__accu0__.append(int(n));return __accu0__}();
c.__bases__;
options+[false][current_option==options[0]];
window.set_border_width(10);
ax.set_yticks(z);
self.y2+=self.speed*math.sin(self.bearing);
list.append(i);
var out=np.where(~a_extm.__getslice__(1,-1,1)&mask.__getslice__(1,-1,1),np.nan,a);
df.iloc[approach1(df.A.py_values,df.B.py_values)];
count+=1;
self.bar();
print(set(regx.py_split(string))&set(search));
scons;
stdscr.refresh();
b.load();
var __left0__=train_set;export var train_x=__left0__[0];export var train_y=__left0__[1];
ax.set_xticks([]);
sb.plt.show();
p.map(mp_worker,tuple([task1,task2]));
print(repr(str(row[0])));
var X=vectorizer.fit_transform(documents);
deletel.__getslice__(n,null,1);
f.write(buffer(array));
(function(){var __accu0__=[];for(var element of input)__accu0__.append(convert(element));return __accu0__})();
func(...args,__kwargtrans__(kwargs));
self.webview.pauseTimers();
print(np.where(df.index==5)[0]);
export var mock_stuff_obj=mock.Mock();
5*f(f,4);
(function(){var __accu0__=[];for(var x=0;x<Math.pow(2,K*N);x++)__accu0__.append(__mod__(x>>shifter,2));return __accu0__})();
zip(fields,row);
var ax1=fig.add_subplot(111);
say_boo_twice();
rows.append(row);
unittest.main(__kwargtrans__({failfast:true,testRunner:unittest.TextTestRunner}));
var ax1=fig.add_subplot(1,1,1);
print(sys.getsizeof(myint));
var num=int(s);
df.groupby(df.date.dt.month).apply(f);
dsp.write(data);
myTurtle.left(90);
var base=datetime.datetime.today();
var data_tuple=Item(...raw_data);
ax1.bar(x,y,.2);
os.mkdir(self.cache_location);
var f=etree.fromstring(data);
86400*self.days+self.seconds+1E-6*self.microseconds;

blog.save();
data.shape;
print(soup.prettify());

paw_number.__setslice__(1,null,null,paw_number.__getslice__(1,null,1)+1);
main();
print(a,b);
list(self.py_items())[-1];
print(func());
sinks.append(sys.stderr);
main();
window.wm_withdraw();
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
sys.stdout.write(line);
console.interact();
Base.metadata.create_all(engine);
(function(){var __accu0__=[];for(var p of perm(l.__getslice__(1,null,1)))for(var i=0;i<sz;i++)__accu0__.append(p.__getslice__(0,i,1)+[l[0]]+p.__getslice__(i,null,1));return __accu0__})();
var __except0__=web.notfound();__except0__.__cause__=null;throw __except0__;
f.seek(0);
venus.speed(0);
numpy.array(list(range(25))).reshape(tuple([5,5]));
self.button.pack(__kwargtrans__({side:TOP}));
var q=Question.objects.filter(criterion1&criterion2);
export var max_arity=max(s,__kwargtrans__({key:function __lambda__(i){return i.arity()}}));
main();
os.kill(p.pid,signal.SIGKILL);
self.y=[];
grouped.cumcount();
plt.show();
(function(){var __accu0__=[];for(var S of s)if(a[S]>0)__accu0__.append(a[S]);return __accu0__})();
(function(){var __accu0__=[];for(var t of tasks)__accu0__.append(t.py_get());return __accu0__})();
list(range(100)).__getslice__(0,10,1);
show();
print(value_set.__getslice__(1,-1,1));
print(tuple([x,y]));
adic[i]+=1;
br.submit();
export var indcs=function(){var __accu0__=[];for(var i=0;i<len(py_items);i++)if(py_items[i]==item)__accu0__.append(i);return __accu0__}();
fsum([.1,.1,.1,.1,.1,.1,.1,.1,.1,.1]);
print(tuple([x[idx],y[idx]]));
var q=q.with_entities(User.id);
b.grid();
target.close();
var logger=logging.getLogger(__name__);
setup_mock();
int(math.pow(10,int(math.log(b,10))+1)*a+b);
var result=Model.objects.filter(__kwargtrans__({id__in:object_ids}));
var end_date=datetime.datetime(pub.year,pub.month,pub.day);
main();
collections.Counter(window(x));
ui.syn();
print(soup.prettify());
tuple([co.co_nlocals,co.co_stacksize,co.co_flags]);
axes[1].legend().set_visible(false);
to_delete.append(tuple([corpus.index(match),len(match)]));
(function(){var __accu0__=[];for(var s of input)__accu0__.append(function __lambda__(splt){return tuple([splt[0],splt[1]])}(s.py_split()));return __accu0__})();
ax.w_zaxis.set_major_formatter(niceMathTextForm);
var df=pd.DataFrame();
var d1=dict([[1,1],[2,2]]);
g.add_edge(1,7);
var x=Decimal(2606.895);
var id=Column(Integer,__kwargtrans__({primary_key:true}));
var a=1;
obj.save();
self.ax.imshow(im);
l.py_sort(__kwargtrans__({key:function __lambda__(t){return tuple([t[0],-ord(t[1])])}}));
var results=Orchard.objects.filter(__kwargtrans__(options));
d[x][y]=z;
time.sleep(.25);
self.listofrecords[listnum][record];
nil;
do_something_with_results(resuls);
var soup=BeautifulSoup.BeautifulSoup(txt);
sys.stdout.flush();
gtk.main_quit();
db.init_app(app);
random.shuffle(lst);
fh.seek(0);
(function(){var __accu0__=[];for(var x of A)__accu0__.append(function(){var __accu1__=[];for(var y of x)__accu1__.append(d.py_get(str(y)));return __accu1__}());return __accu0__})();
newmethod(obj,node,__kwargtrans__(kwargs));
current_date+=datetime.timedelta(__kwargtrans__({days:1}));
set(b.py_items())-set(a.py_items());
var a=function(){var __accu0__=[];for(var item of a)__accu0__.append(item+1);return __accu0__}();
set(word_list).intersection(a_string.py_split());
time_list[np.arange(5,6)];
export var Surname=Dinh;
export var dataf=dataf.append(new_row,__kwargtrans__({ignore_index:true}));
var table=Orange.data.Table(df.as_matrix());
var form=StopAdminForm;
paralell_notifications(new_rss);
[0,0,1,1,0,0,0];
np.percentile(S,np.array([0,100]));
followers_df.index=list(range(len(followers_df)));
var __left0__=tuple([py_items[index],py_items[pos]]);py_items[pos]=__left0__[0];py_items[index]=__left0__[1];
print(g(1));

print(now.year);
var ax=fig.add_subplot(111);
print(list(seach_replace(message,codes)));
var __left0__=tuple([b,a+b]);var a=__left0__[0];var b=__left0__[1];
plt.show(__kwargtrans__({block:false}));
export var raw_img=urllib.request.urlopen(req).read();
export var zf=zipfile.ZipFile(src);
sftp.py_get(log_file,local_name);
fig.canvas.draw();
np.zeros_like(x,__kwargtrans__({dtype:bool}))|initial;
export var sheet1=book.sheet_by_index(0);
request.json;
export var bpfilename=sys.argv[0];
var e=Example(10);
out_file.close();
print(set(better_d));
shutil.copy2(pathname,dstdir);
ln.set_ydata(data);
var __left0__=a;var a=__left0__[0];var b=__left0__[1];var c=__left0__[2];var d=__left0__[3];var e=__left0__[4];
py_next.click();
export var strings=function(){var __accu0__=[];for(var s of x)__accu0__.append([s.__getslice__(0,5,1),s.__getslice__(5,null,1)]);return dict(__accu0__)}();
var driver=webdriver.Firefox();
var grayimg=cv2.equalizeHist(grayimg);
sqrt(res);
f();
export var mvv_count=function(){var __accu0__=[];for(var i of mvv_list.collect())__accu0__.append(int(i._count));return __accu0__}();
sum(function(){var __accu0__=[];for(var letter of valid_letters)__accu0__.append(count[letter]);return py_iter(__accu0__)}());
export var nextelem=li[__mod__(idx+1,len(li))];
var a=np.array([[0,1,1,0],[1,1,1,1],[1,1,1,1],[0,1,1,0]]);
fib(n-1)+fib(n-2);
export var ndx=numpy.searchsorted(xs,ys);
self.file.write(data);
export var value_index=my_list.index(value);
export var wood=py_next(itertools.count());
export var finfo=np.finfo(f);
sys.exit(a.exec_());
v[0]+=1;
plt.show();
export var indices_to_add=np.array([2,0]);
__in__(set([1,2]),a);
plt.figure(1);
plt.show();
var sess=tf.Session();
burroughs_wheeler.test(1E4);
pickle.dump(dict([[1,2]]),f);
print(cls.foo_string);
gc.get_referrers(obj);
print(yaml.dump(doc,__kwargtrans__({indent:4})));
self.__getitem__(key);
export var nxn=np.arange(Math.pow(n,2)).reshape(n,-1);
print(line);
app.exec_();
time.sleep(1);
plt.xticks(list(range(len(D))),list(D.py_keys()));
s.close();
pickle.dump(foo,f);
yourmodel.objects.filter(__kwargtrans__({location__dwithin:tuple([geom,.02])}));
all(function(){var __accu0__=[];for(var c of s.__getslice__(1,null,1))__accu0__.append(c==s0);return py_iter(__accu0__)}());
export var temp_array=np.arange(10,129,10);
hov.perform();
print(getpass.getuser());
open(fname.lower());
py_next(alternator);
export var json_str=json.dumps(status._json);
scipy.misc.imshow(img);
(x+y)*z;
print(map(sum,zip(flattend1,flattend2)));
d.stack().groupby(arange(4));
np.may_share_memory(get_sliding_window(df,2),df.py_values);
var a=b;
thread.start();
ax1.plot(list(range(10)));
self.city_set.filter(__kwargtrans__({is_capital:true}));
datetime.datetime.combine(dt.date(),midnight);
var x=mungesomedict(dict(adict,__kwargtrans__(anotherdict)));
a.py_name;
export var Xs=numpy.vstack(tuple([Xs,EMOV_n]));
counter_list.__setslice__(0,null,null,function(){var __accu0__=[];for(var c of counter_list)if(c)__accu0__.append(c);return py_iter(__accu0__)}());
print(query.explain());
df.index=df.index.map(str);
py_items.append(py_values);
var ax=plt.subplot(111);
plt.plot(x,x);
print(Duck().speak());
replacer_regex.sub(function __lambda__(m){return dict[m.group(1)]},regex);
self._data_unoccupied.wait(5);
tuple([datetime.date(2016,8,26)]);
max(frequencies,__kwargtrans__({key:counts.py_get()}));
var reader=csv.reader(f,__kwargtrans__({skipinitialspace:true}));
parser.feed(data);
f.write(c);
var pool=mp.Pool(8);
r.content;
var __left0__=function(){var __accu0__=[];for(var i of line.py_split())__accu0__.append(int(i));return __accu0__}();var a=__left0__[0];var b=__left0__[1];var c=__left0__[2];
py_next(function(){var __accu0__=[];for(var [i,d]of enumerate(lod))if(__in__(1,d))__accu0__.append(d);return py_iter(__accu0__)}());
log.append(tuple([py_name,attr]));
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
var dt=datetime.now();
model.docvecs[1];
var p=multiprocessing.Process(__kwargtrans__({target:worker,args:tuple([q,nameStr])}));
run-the-app;
var ax=fig.add_subplot(111);
print(args);
info[2][0]==5;
(function(){var __accu0__=[];for(var [i,j]of zip(inds,inds.__getslice__(1,null,1)))__accu0__.append(li.__getslice__(i,j,1));return __accu0__})();
self.stdout_sock.close();
data.__setitem__([int(i),int(j)],data.__getitem__([int(i),int(j)])+1);
print(tree.text_content().strip());
temp.iloc[[0,1,4]].index;
self.window.add(self.box);
var A=[6,7,8,9,10,11,12];
var gx=np.zeros_like(f);
linearmodel(X,Y,Z);
true;
app;
test();
var w=QtGui.QMainWindow();
_quicksort(array,begin,end);
np.random.seed(seed);
requests_log.setLevel(logging.DEBUG);
var d2=datetime.datetime.now();
export var sortedList=function(){var __accu0__=[];for(var i of b)__accu0__.append(dictFromList[i]);return __accu0__}();
Gallery.objects.filter(__kwargtrans__({pk__in:valid_ids}));
label.master.overrideredirect(true);
foo.__name__;
set(A)-set(B);
var result=collections.defaultdict(list);
zip(...[py_iter(iterable)]*n);
my_array[pos];
var id=models.UUIDField(__kwargtrans__({primary_key:true,py_default:uuid.uuid4,editable:false}));
array([[1,1],[1,1],[1,1]]);
print(Foo().bar.arity());
actor.save();
var df=pd.DataFrame(__kwargtrans__({data:np.random.randn(1,8)}));
sys.exit(app.exec_());
var dir=os.path.dirname(module.__file__);
profile.save();
var fig=plt.figure();
var a=numpy.array([10,7,2,0]);
mylist.append(x);
C();
list(unique);
tk.Frame.__init__(self,parent,...args,__kwargtrans__(kwargs));
export var x_y_coords=zip(indices[0],indices[1]);
len(df);
var users=[userA,userB,userC];
export var THETA=np.random.random(15)*2*np.pi;
var m=a.shape[0];
plot.plot(x,y);
self.canvas.draw();
setattr(self,py_name,value);
export var reverse_m2ms=my_model._meta.get_all_related_many_to_many_objects();
np.dot(ZCAMatrix,inputs);
self.Bind(wx.EVT_BUTTON,self.OnOkayCanButton,okayButton);
var content_type=models.ForeignKey(ContentType);
export var sorted_arr1=arr1[arr1inds.__getslice__(0,null,-1)];
var app=Flask(__name__);
l[get_index(l,find_min(l))];
print(x);
ax.set_yticks(list(range(nb_names)));
sys.stdout.write(data);
file.readline();
open_file.write(upload.file.read());
(function(){var __accu0__=[];for(var i of maybeLst)__accu0__.append(intify(i));return __accu0__})();
NULL;
(function(){var __accu0__=[];for(var x of gb.groups)__accu0__.append(gb.get_group(x));return __accu0__})();
zip(l,l.__getslice__(1,null,1));
r.json();
list(chain(repeat(0,len(a)-len(c)),c));
lst[0].py_pop(0);
irenR.Start();
loop.close();
var s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);
string.ascii_uppercase[5];
tempDF[mask];
func.restype=ctypes.c_void_p;
(function(){var __accu0__=[];for(var f of User._meta.get_fields())if(f.auto_created&&!f.concrete)__accu0__.append(f);return __accu0__})();
find_lyrics();
searchB.pack();
x.py_sort();
smtpserver.quit();
export var hour_ago=datetime.datetime.now()-datetime.timedelta(__kwargtrans__({hours:1}));
p.start();
apsched.add_interval_job(checkThirdAPI,__kwargtrans__({seconds:5}));
var start=cols[1].get_text();
conn.commit();
process.stdout.readline();
draw.rectangle(tuple([rect_start,rect_end]),__kwargtrans__({outline:color}));
print(tuple([np.average(b),np.mean(b),np.ma.average(b),np.ma.mean(b)]));
f.tell();
plt.show();
c.decompose();
xlApp.Workbooks.Add();
print(parmap(function __lambda__(x){return Math.pow(x,x)},list(range(1,5))));
br.set_cookiejar(cj);
var locations=Locations.objects.filter(__kwargtrans__(params));
random.seed(4555);
export var credentials=tools.run_flow(flow,storage,flags);
var arr=np.arange(10).reshape(5,2);
win.run();
print(Base.getSubclasses());
true;
__all__[py_name]=val;
B.__init__(self,4);
self.hack_mro();
np.where(k,2,5);
np.random.seed(0);
plt.contourf(np.random.randn(10,10));
elevate();
setattr(obj,self.func.__name__,value);
print(a);
export var bpp=mode_to_bpp[data.mode];
matplotlib.pyplot.close();
conn.endheaders();
var wordlist=function(){var __accu0__=[];for(var ch of s)__accu0__.append(ch);return __accu0__}();
select.select([process.stdout,process.stderr],[],[]);
var count=sum(function(){var __accu0__=[];for(var i of l)if(my_condition(i))__accu0__.append(1);return py_iter(__accu0__)}());
x+=1;
zip(...df.py_values);
self.currentStack.py_pop();
zip(...lis);
print(postcodes);
self.datadex[x]+1;
self.stream.write(data);
t.start();
export var rndseries=pd.Series(np.random.randn(len(rndrange)),__kwargtrans__({index:rndrange}));
var f=plt.figure(__kwargtrans__({figsize:tuple([size,size])}));
random.shuffle(x);
dlg.exec_();
plot(x,y);
d[j].append(i);
(function(){var __accu0__=[];for(var [i,x]of enumerate(y))if(i!=0&&i!=1)__accu0__.append(x);return __accu0__})();
-(17.5).hex();
print(sorted(list(globalHotItems.py_items()),__kwargtrans__({key:function __lambda__(x){return x[1]}}))[-1]);
shutil.rmtree(tdir);
df;
var output=function(){var __accu0__=[];for(var [x,y,label]of L)if(x>10)__accu0__.append(tuple([x,y]));return __accu0__}();
ax.set_yticks(y_pos);
print(scipy.ndimage.zoom(x,2,__kwargtrans__({order:0})));
var tree=ET.parse(filename);
export var xmldoc=minidom.parseString(document);
time.sleep(.1);
sys.stderr.write(line);
ax1.set_color_cycle(function(){var __accu0__=[];for(var i=0;i<NPOINTS-1;i++)__accu0__.append(cm(1*i/(NPOINTS-1)));return __accu0__}());
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
var dict1=dict2[key];
grouped.loc.__getitem__([1,2]);
plt.bar(bins.__getslice__(0,-1,1)[i],n_x[i],__kwargtrans__({width:10}));
self.levelno=levelno;
time.sleep(1.1);
app.run();
defaultdict(function __lambda__(){return nested_dict(n-1,py_metatype)});
tuple(sorted(x));
hash1.py_update(text1);
plt.hexbin(x,y,__kwargtrans__({gridsize:20,cmap:cmaps.py_pop(),mincnt:1}));
main.mainloop();
export var ancestors_descendents=set();
self.__init__();
pd.DatetimeIndex(df.date)+pd.offsets.Hour(1);
var b=a;
print(GetWindowText(GetForegroundWindow()));
newk.append(i);
tuple([p.x,p.y]);
json.loads(s);
cmp(len(A),len(B));
models.DateTimeField(__kwargtrans__({null:true}));
copy.deepcopy(d);
var py_name=models.CharField(__kwargtrans__({max_length:255}));
var b=numpy.vstack(tuple([a,a]));
var pool=Pool();
var client=s.getsockname()[0];
stream.write(chunkout);
np.random.seed(1010);
f.write(doc.toxml());
time.sleep(.1);
df.head();
self.close();
var parser=argparse.ArgumentParser();
var py_new=a+tuple([b]);
export var jar=cookielib.CookieJar();
df.tail(1).T.assign(__kwargtrans__({passes:function __lambda__(x){return x.gt(1)}}));
time.sleep(delay);
var ax=pl.subplot(111,__kwargtrans__({polar:true}));
plt.colorbar();
export var target_time=time.clock()+.025;
stringbuilder.py;
var process=subprocess.Popen(your_command,__kwargtrans__({stdout:subprocess.PIPE}));
setattr(self,d[py_name],value);
itemgetter(2,5)(L);
print(floor(log(1E3,10)));
var sort_indices=np.argsort(brr).__getslice__(0,null,-1);
m.__getitem__([tuple([0,null,1]),0]).shape;
ax.set_xticklabels(a);
self.set_val(self.valinit);
(function(){var __accu0__=[];for(var x of lst)if(__mod__(x,2)==0)__accu0__.append(x);return __accu0__})().__getslice__(0,1,1);
np.array(xlist,__kwargtrans__({dtype:dt}));
self.insert(len(self._list),val);
var app=wx.PySimpleApp();
var instance=SomeModel.objects.py_get(__kwargtrans__({id:id}));
export var _start=time.time();
text.strip();
client.close();
var fig=plt.figure();
a.__setslice__(0,null,null,b);
float(value);
pickle.dump(clf,f);
var b=1;
destination.close();
d[k];
time.sleep(10);
self.button.clicked.connect(self.start_download);
functools.partial(func,p);
a.remove(10);
export var eroded=cv2.erode(img,kern,1);
tuple([NULL,NULL]);
export var query_result=DBSession.query(Article).order_by(Article.created).all();
df;
stdout.close();
var pi=square(a+b)/4*t;
bitarray.bitarray(l).tostring();
conn.login(usernm,passwd);
writer.save();
b.__getitem__([tuple([0,null,1]),[1,2,0]])*c.__getitem__([tuple([0,null,1]),[2,0,1]])-b.__getitem__([tuple([0,null,1]),[2,0,1]])*c.__getitem__([tuple([0,null,1]),[1,2,0]]);
chain.from_iterable(function(){var __accu0__=[];for(var n=0;n<len(xs)+1;n++)__accu0__.append(permutations(xs,n));return py_iter(__accu0__)}());
self.altitude*=-1;
len(s);
coc.x.append(2);
sys.exit();
deleteself.__dict__[field.get_cache_name()];
draw.ellipse(bbox,__kwargtrans__({fill:128}));
print(tuple([self.x,self.y,self.z]));
export var statemap=dict([[tuple([1,0]),tuple([0,1])],[tuple([0,1]),tuple([-1,0])],[tuple([-1,0]),tuple([0,-1])],[tuple([0,-1]),tuple([1,0])]]);
A.__init__(self);

export var exp=(a+b)*40-(c-a)/.5;
print(convert(1692));
plt.ion();
print(bisect.bisect_left(L,tuple([2])));
map(sum,zip(a,b,c));
new_im.paste(im);
models.signals.post_save.connect(create_api_key,__kwargtrans__({sender:User}));
(function(){var __accu0__=[];for(var col of zip(...second))__accu0__.append(sum(starmap(mul,zip(first,col))));return __accu0__})();
X.copy();
print(scipy.ndimage.zoom(x,2,__kwargtrans__({order:1})));
result[-1].append(temp);
self.socket=socket(AF_INET,SOCK_STREAM);
var r=s.post(url,data);
mydog.findall(s);
mngr.window.setGeometry(50,100,640,545);
obj.isoformat();
tmp.append(map(int,line.py_split().__getslice__(0,w,1)));
self.stop();
var a=list(a);
module2.py;
call_fn(...args,__kwargtrans__(kwargs));
node_schema.load(json_data,__kwargtrans__({instance:Node().quey.py_get(node_id)}));
var __left0__=map(int,input().py_split());var x=__left0__[0];var y=__left0__[1];var z=__left0__[2];var w=__left0__[3];
export var vis2=cv2.cvtColor(vis,cv2.COLOR_GRAY2BGR);
tup[0]+=tuple([4,5,6]);
var kernel=np.array([[0,1,0],[1,1,1],[0,1,0]]);
export var word_list=sentence.py_split();
np.linalg.norm(xs);
var form=MyForm(request.POST);
print(urllib.request.urlopen(request).read());
par2.set_ylim(1,65);

var dt=datetime.datetime.now();
self.write_cell(sheet_name,cell,existing_value,updated_format);
subprocess.call(cmd,__kwargtrans__({shell:false}));
G.add_edges_from(tuples);
deleteyour_dict[unwanted_key];
get_supported_types();
print(local_tz.localize(datetime(2E3,6,15)));
list(chain(a));
mem.Blit(0,0,size[0],size[1],screen,0,0);
app.listen(8888);
temp_file.write(bytes);
do_something();
var tree=et.fromstring(data);
self.edit2=QLineEdit();
conn.login(user,password);
var app=create_app();
widget.Bind(wx.EVT_COMBOBOX,self.onSelect);
pprint(table);
end+=datetime.timedelta(1);
var w=np.fft.fft(x);
fo.write(content);
setattr(obj.a,p,value);
print(etree.tostring(element));
markov(arr);
Base.metadata.create_all();
(function(){var __accu0__=[];for(var l of list_dirs)if(!__in__(os.path.basename(l),unwanted_files))__accu0__.append(l);return __accu0__})();
df.mul(vector,__kwargtrans__({axis:0}));
wx.Frame.__init__(self,...args,__kwargtrans__(kwargs));
ith_diag.eliminate_zeros();
test.__getitem__([tuple([0,null,1]),[0,2]]);
gui.root.mainloop();
ax.quiver(x,y,u,v);
export var sts=os.waitpid(p.pid,0)[1];
audio.add_tags();
self._treeView.get_cursor()[0][0];
var db=SQLAlchemy(app);
writer.writerows(function(){var __accu0__=[];for(var obj of list_of_objects)__accu0__.append(object2list(obj,attr_list));return __accu0__}());
var __left0__=tuple([a[2],a[0]]);a[0]=__left0__[0];a[2]=__left0__[1];
(function __lambda__(seq){return function(){var __accu0__=[];for(var el of seq)__accu0__.append(function __lambda__(){return el});return __accu0__}()});
-r72;
df.dtypes;
loop.run_forever();
strcpy(buffer,path);
var text=function(){var __accu0__=[];for(var x of text.lower())if(__in__(x,string.letters))__accu0__.append(x);return __accu0__}();
plt.show();
csX.n=X.shape[1];
pool.join();
outf.write(ser.read());
list(d.py_items());
versioned_session(session);
var w=distanceM();
print_hello_world();
cv2.namedWindow(winName,cv2.CV_WINDOW_AUTOSIZE);
NULL;
sorted(set(li),__kwargtrans__({reverse:true}))[n];
app.mainloop();
GPIO.setmode(GPIO.BOARD);
ax2.plot([x1,x2],[y1,y2]);
f.close();
export var updated_at=models.DateTimeField(__kwargtrans__({auto_now:true}));
var app=Flask(__name__);
print(combs(sampleip2));

res[k].append(v);
df_r.show();
data.insert(bslindex,newcol);
tk.Frame.__init__(self,master,__kwargtrans__({height:42,width:42}));
a.py_sort(__kwargtrans__({axis:1}));
print(tuple(list(a)));
(function(){var __accu0__=[];for(var i=1;i<n;i++)if(__mod__(n,i)==0)__accu0__.append(i);return __accu0__})();
os.uname();
list(tokenize(stream));
s.sendmail(me,you,msg.as_string());
X-=X.mean();
json.dump(json.load(ifile),ofile,__kwargtrans__({indent:4,ensure_ascii:false}));
cursor.execute(...sql_and_params);
var form=ContactForm(request.POST);
var json_obj=json.load(metros_file);
plt.cm.coolwarm(t);
plt.show();
print(repr(Fraction(f)),Fraction(f));
print(m.shape);
var foo=np.array([1,2]);
Base.objects.instance_of(ModelX)|Base.objects.instance_of(ModelY);
var __except0__=AssertionError;__except0__.__cause__=null;throw __except0__;
self._logger.setLevel(logging.INFO);
p.relative_to(...p.parts.__getslice__(0,2,1));
indices.py_sort(__kwargtrans__({key:lol[1].__getitem__}));
draw();
user.save();
print(match.group(2));
o.x+=5;
print(line);
time.mktime(datetime.date(year,1,1).timetuple());
var a=list(range(1,size+1));
eval(strs);
embed();
result.py_sort(__kwargtrans__({key:function __lambda__(x){return-x[1]}}));
f(...args,__kwargtrans__(kargs));
print(my_new_list);
gs.fit(X,y);
var pool=mp.Pool();
var result=v.cumsum();
any(function(){var __accu0__=[];for(var x of some_list)if(x>5)__accu0__.append(some_func(x)&&false);return py_iter(__accu0__)}());
var cb=plt.colorbar();
var br=mechanize.Browser();
User.query.all();
file.write(old_lines);
print(list(myDict.py_values())[i][j]);
logging.basicConfig(__kwargtrans__({format:format,level:logging.INFO}));
tuple(map(operator.add,a,b));
print(line);
collections.Counter(lst);
Session.query(FooClass).filter(FooClass.somevalue==8).all();
x.transpose(1,2,0).reshape(2,4);
plt.figure();
axis.plot(x_data,y_data);
fig.subplots_adjust(__kwargtrans__({hspace:.5,wspace:.001}));
(function(){var __accu0__=[];for(var a of args)__accu0__.append(fact(a));return __accu0__})();
list(gb.py_keys());
export var random_state=random.choice(states.py_split());
sys.path.append(PATH);
transaction.rollback();
views.py;
list(B.intersection(A))+list(set(A)-B);
all(function(){var __accu0__=[];for(var s of obj)__accu0__.append(isinstance(s,str));return py_iter(__accu0__)}());
print(dir(foo));
var out=np.zeros([n,len(arrays)],__kwargtrans__({dtype:dtype}));
var x=x.__getitem__([0,tuple([0,null,1]),tuple([0,null,1])]);
var c=list(itertools.product(a,b));
var parser=argparse.ArgumentParser();
a.insert(randint(0,len(a)),x);
var c=function(){var __accu0__=[];for(var i of a)if(__in__(i,b))__accu0__.append(i);return __accu0__}();
my_string.py_split().__getslice__(0,4,1);
var d=dict(function(){var __accu0__=[];for(var _=0;_<n;_++)__accu0__.append(input().py_split());return py_iter(__accu0__)}());
var ax=fig.add_subplot(111);
df;
_stack.py_pop();
sys.path.append(here);
var fig=plt.figure();
doctest.testmod();
print(np.array(result));
opener.open(req);
var __left0__=sorted(tuple([a,b]),__kwargtrans__({key:len}));var b=__left0__[0];var a=__left0__[1];
Response(__kwargtrans__({status:200,data:data}));
self.__dict__.py_update(kwargs);
var data=json.load(data_file);
len(list(filter(str.islower,string)));
var dayDict=dict.fromkeys(weekList,0);
output+=np.sum(integrand(a),__kwargtrans__({axis:1}));
login(request,user);
export var label_idx=np.searchsorted(all_labels,labels);
(1-1/Decimal(7E6)).ln();
win.update_idletasks();
obj.__class__.__dict__[1];
session1.commit();
export var qW=np.convolve(sPSF,sQ);
all(function(){var __accu0__=[];for(var [x,y]of zip(locs,locs.__getslice__(1,null,1)))__accu0__.append(y-x>=2);return py_iter(__accu0__)}());
var b=db.ReferenceProperty();
new set([new set([py_name])]);
saved.append(element);
var args=parser.parse_args();
var data=data[keep_mask];
Base.metadata.create_all(engine);
(function(){var __accu0__=[];for(var [k,g]of groupby(nums,__kwargtrans__({key:function __lambda__(n,c){if(typeof c=="undefined"||c!=null&&c.hasOwnProperty("__kwargtrans__"))var c=count();return n-py_next(c)}})))__accu0__.append(list(g));return __accu0__})();
post2.delete();
request.session=dict({});
p.stdin.close();
var x=np.arange(-10,10,.1);
py_typeof(s);
self.assertEqual(reference,test);
main();
os.setsid();
x[1];
nx.draw_networkx(G,__kwargtrans__({pos:pos}));
np.dot(arr_pairs,xy);
export var dline=dline.strip();
list(range(x,x+10*y,y));
var ax=fig.add_subplot(111);
DF.dtypes;
export var dedup=function(){var __accu0__=[];for(var i=0;i<len(k);i++)if(i==0||k[i]!=k[i-1])__accu0__.append(k[i]);return __accu0__}();
plt.xticks(xx,ll);
count+=1;
fig.show();
var dt=tz.localize(dt);
export var myiterator=py_iter(mylist);
book.save(filename);
var date=models.DateField();
temp.flush();
sum(function(){var __accu0__=[];for(var [p,q]of zip(vector1,vector2))__accu0__.append(p*q);return py_iter(__accu0__)}());
var d=defaultdict(int);
p.wait();
zipstream.seek(0);
df;
do_something();
sys.path.insert(0,PROJECT_ROOT);
models.CharField(__kwargtrans__({null:true}));
var writer=csv.DictWriter(csvfile,__kwargtrans__({fieldnames:fieldnames}));
var __left0__=plt.subplots();self.fig=__left0__[0];self.ax=__left0__[1];
json.dump(jsonDict,f,__kwargtrans__({indent:4}));
a.writerows(data);
jez(df1);
var ret=func(...args,__kwargtrans__(kwargs));
print(list(result));
var k=k.__getitem__([,np.newaxis]);
var user=models.ForeignKey(User);
var ax=plt.subplot(111);
seq.append(line);
add_chain.apply_async();
var b=sum(a);
np.hsplit(a,2);
var img=Image.open(image_path);
render(request,template,context);
export var substrings=data.read().py_split();
var cur=conn.cursor();
dbapi_conn.commit();
print(etree.tostring(cityModel,__kwargtrans__({pretty_print:true})));
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
df.apply(zscore);
var first_name=forms.CharField(__kwargtrans__({max_length:256}));
pickle.dump(data,output);
plt.subplot(211);
self.handler.close();
z.append(y);
math.factorial(10);
os.path.exists(destination);
export var key2=models.IntegerField();
self.master.columnconfigure(5,__kwargtrans__({weight:1}));
self.buffer.seek(0);
print(a_list);
a2.set_xticks([]);
print(df);
MyMacro(indirect);
print(str(delta));
sum(map(function __lambda__(i){return bool(i&&i.py_pop(0)&&i)+len(i)},x));
MyButton2.grid(__kwargtrans__({row:1,column:0}));
list_of_dict.append(mydict);
var s=np.sum(a);
output.close();
export var sum=foo();
var test=df.head(1);
inst1.i=4;
float_to_str(5E-8);
Py_Finalize();
f(...a);
f2.write(Lines[i+1]);
var cursor=cnx.cursor();
plt.figure(__kwargtrans__({figsize:tuple([12,6])}));
x+=1;
time.sleep(1);
var a=b?1:0;
randprime(a,b);
wsgi_handler.run(wsgi_app);
print(a[i]-a[i-1]);
dict(function(){var __accu0__=[];for(var x=0;x<10;x++)__accu0__.append(tuple([x,x*x]));return py_iter(__accu0__)}());
rule_list.append(value());
__authentication_required;
plt.show();
export var tfidf_matrix=tfidf.fit_transform(corpus);
export var doc_topic_distrib=lda.transform(tf);
list(set().union(...x));
print(is_arr_in_list(mylistarr[2],mylistarr));
var S=function(){var __accu0__=[];for(var c=0;c<5;c++)__accu0__.append(fnx());return __accu0__}();
self.Show(true);
ax.set_xlim([0,x.max()+1]);
ob.stackoverflow();
plt.plot([1,2,6,4]);
a180.__getitem__([0,0,0]);
[0,2,4,6,8,10,12,14,16,18];
var y=np.array([2,1,5,2]);
urllib.parse.urlencode(query_pairs);
out.write(f.read());
var t=list(set(q)&set(w));
print(exit);
self._socket.close();
var s=pygame.Surface(tuple([16,16]),__kwargtrans__({flags:pygame.SRCALPHA}));
G.remove_edges_from(G.selfloop_edges());
export var timetup=time.gmtime();
var gray=cv2.imread(image_path,cv2.CV_LOAD_IMAGE_GRAYSCALE);
print(interleave(a,b));
stdin.flush();
pyplot.locator_params(__kwargtrans__({nticks:4}));
var L=[1,1,1,-1,-1,1,-1,1,1,-1,-1,-1,1,-1];
date.py_replace(__kwargtrans__({tzinfo:pytz.utc}));
var now=datetime.datetime.now();
self.window.add(self.image);
float(value);
mtransforms.Transform.__init__(self);
newlist.append(totalcount>1?v+str(count+1):v);
apply_labels(h,labels);
var df2=pd.read_csv(StringIO(txt2));
plt.imshow(flip_ud_lena,__kwargtrans__({cmap:plt.cm.gray}));
show();
canvas.Canvas.__init__(self,...args,__kwargtrans__(kwargs));
print(dog.lemma_names());
foo.save();
tk.Canvas.move(self,...args,__kwargtrans__(kwargs));
var c=b;
print(s.groupby([s.index.weekday_name,s.index.hour]).sum());
var __left0__=plt.subplots(__kwargtrans__({nrows:2}));var fig=__left0__[0];var axes=__left0__[1];
datetime.strptime(value,format);
print(parser.parse_args());
urllib.request.install_opener(urllib.request.build_opener(LowLevelHTTPHandler));
export var client_socket=socket.socket(socket.AF_INET,socket.SOCK_STREAM);
export var yshape=list(data.shape);
list(function(){var __accu0__=[];for(var x=0;x<10;x++)__accu0__.append(x*x);return py_iter(__accu0__)}());
Test.static_init();
oldperson.hello();
func(__kwargtrans__({one:1,two:2}));
var a=np.arange(1,7);

export var diffs=dict(function(){var __accu0__=[];for(var k of dict1)__accu0__.append(tuple([k,ranks2[k]-ranks1[k]]));return py_iter(__accu0__)}());
var kernel=np.uint8([[1,1,1],[1,10,1],[1,1,1]]);
numpy.atleast_2d(x[x.__getitem__([tuple([0,null,1]),2])==0]);
var indices=np.empty(tuple([m*n,8]),__kwargtrans__({dtype:int}));
heapq.heapify(h);
json.loads(dictString);
fp.write(part.get_payload(__kwargtrans__({decode:true})));
open(filename,...args,__kwargtrans__(kwargs));
e.click();
export var decoded_text=cipher_suite.decrypt(encoded_text);
ax.get_xaxis().get_major_formatter().set_useOffset(false);
dict(function(){var __accu0__=[];for(var _=0;_<i;_++)__accu0__.append(tuple([j,locals()]));return py_iter(__accu0__)}());
var G=nx.DiGraph();
print(tuple([a,b,c,d]));
s.readline();
increments.append(onediff[i]);
msg.attach(part1);
math.sqrt(dotproduct(v,v));
ax.yaxis.set_major_formatter(matplotlib.ticker.ScalarFormatter());
var ssh=paramiko.SSHClient();
r.status_code;
var data=np.random.uniform(-1,1,44100);
combo.set_active(0);
C4.bar();
a.py_sort(__kwargtrans__({key:w.__getitem__}));
abort(404);
canvas.tag_lower(secondRect);
c.f();
self.figure.subplots_adjust(__kwargtrans__({right:.9}));
obj_list.append(obj);
var lst=ast.literal_eval(strab);
np.zeros(s);
w.show();
var cur=con.cursor();
HELLO;
export var __repr__=__str__;
export var Bbins=np.linspace(B.min(),B.max(),10);
event.save();
view(request,...args,__kwargtrans__(kwargs));
pygame.display.flip();
browser.show();
var response=urllib.request.urlopen(url);
cache.commit();
plt.plot(x,y);
np.all(function(){var __accu0__=[];for(var i=0;i<10;i++)__accu0__.append(i);return py_iter(__accu0__)}());
column_widths+=[len(cell)];
(function(){var __accu0__=[];for(var py_items of product(...args.__getslice__(0,-1,1)))for(var item of args[-1])__accu0__.append(py_items+tuple([item]));return py_iter(__accu0__)})();
quat_multiply(a1.__getitem__([1,2]),b1.__getitem__([1,2]));
var f=os.path.join(path,filename);
np.median([0,2,6,5,4]);
export var clean_data=pd.concat([x,y],1).dropna(0);
self.x1=self.x0+self.width/2;
var wb=excel.Workbooks.Open(fname);
df.drop(rows);
y[x.argsort()]=np.arange(x.size);
(function(){var __accu0__=[];for(var _=0;_<randint(50,200);_++)__accu0__.append(randint(1,9999));return __accu0__})();
print(Counter(zip(words,words.__getslice__(1,null,1))));
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
optionmenu.configure(__kwargtrans__({width:yourwidthhere}));
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
var __left0__=plt.hist(x,histedges_equalN(x,10));var n=__left0__[0];var bins=__left0__[1];var patches=__left0__[2];
var app=Flask(__name__);
(function(){var __accu0__=[];for(var [i,x]of enumerate(lst))if(x==item)__accu0__.append(i);return __accu0__})();
var sess=tf.Session();
self.assertEqual(expresults,results);
plt.show();
var cursor=conn.cursor();
var __left0__=tuple([record[0],record[1],record.__getslice__(2,null,1)]);var py_name=__left0__[0];var email=__left0__[1];export var phone_numbers=__left0__[2];
var df=pd.DataFrame(np.random.random(tuple([N,M])),__kwargtrans__({index:dates}));
ax.set_yticks([-1.25,-.75,-.25,.24,.75,1.25],__kwargtrans__({minor:true}));
var id=Column(Integer,__kwargtrans__({primary_key:true}));
print(repr(ordliste));
main();
ax.set_ylim(__kwargtrans__({ymax:100}));
var B=[0,0,1,1,1,1];
print(sorted(words)==words);
writer.writerow(row);
G.nodes();
self.treeview.set_search_column(0);
var ax1=fig1.add_subplot(111);
number+=1;
foo();
s.play();
sys.modules[__name__].__dict__.py_clear();
fig.canvas.draw();
x*(x>0);
loop.run_until_complete(do_work(q));
linesamples.add(int(4*i+2));
var fig=plt.figure();
var df=df.reset_index(__kwargtrans__({level:[0,1]}));
export var my_RDD_dictionaries=my_RDD_strings.map(json.loads);
var fig=plt.figure();
print(os.path.join(root,file));
print(args);
print(match.groups());
self.setLayout(layout);
c.py;
export var endDate=models.DateField();
A.ravel()[np.random.choice(A.size,c,__kwargtrans__({py_replace:false}))]=np.nan;
export var myFunction=function __lambda__(x,y){return x*y};
var _=list(map(function __lambda__(x){return result.extend(x)},res));
__in__(b,l.__getslice__(l.index(a),null,1));
var text=models.CharField(__kwargtrans__({max_length:200}));
var b=a.__getslice__(0,null,1);
signal.signal(signal.SIGCLD,signal.SIG_DFL);
var days=(roundedA-roundedB).days;
list(product(...function(){var __accu0__=[];for(var x of stuff)__accu0__.append([0,x]);return py_iter(__accu0__)}()));
client.connect(myhostname,theport,myuser,thepass);
print(boop);
func.argtypes=[ctypes.c_char_p,ctypes.c_char_p];
logger.addHandler(fh);
var ax=fig.add_subplot(111);
min(function(){var __accu0__=[];for(var i=0;i<len(L);i++)if(L.__getslice__(i,i+len(key),1)==key)__accu0__.append(i);return py_iter(__accu0__)}());
Py_Finalize();
file.write(capitalised);
print(b.most_common(1));
print(demo.multiply(2,4));
axes[1].plot(x,i*np.cos(x));
datetime.combine(d,datetime.min.time());
palette.append(tuple([255,255,255]));
ax.bar(theta,counts,__kwargtrans__({width:np.pi/6,color:colors,alpha:.5}));
25.4/10*(1/2.54);
var t=threading.Thread(__kwargtrans__({target:worker,args:[data]}));
print(sort_dict_by_list(a,b));
np.random.seed(42);
conf.py;
ax.set_yticklabels(people);
web.load(QUrl(url));
var y=random.randint(0,walnut.size[1]-1);
var weekly=map(sum,grouper(7,visitors,0));
cardsdiscarded+=1;
var id=db.Column(db.Integer,__kwargtrans__({primary_key:true}));
dict([[b.py_pop(0),function(){var __accu0__=[];for(var _=0;_<1;_++)__accu0__.append(b.py_pop(0));return set(__accu0__)}()]]);
var driver=webdriver.Firefox();
app.MainLoop();
signal.signal(signal.SIGINT,signal.SIG_DFL);
var form=cgi.FieldStorage();
app.logger.addHandler(handler);
my_screenmanager.add_widget(screen2);
print(xcoord);
new_df[df.isnull()]=np.py_NaN;
lxml.etree.Comment;
time.sleep(poll_period);
var a=dict(function(){var __accu0__=[];for(var x=0;x<10;x++)__accu0__.append(tuple([hash_counting_int(x),[]]));return py_iter(__accu0__)}());
results.append(make_comp_func(i,j));
array([false,true,true,true,true,true,false],__kwargtrans__({dtype:bool}));
conn.connect();
do_something_with_a_and_b;
pyglet.app.run();
main();
var ax1=fig.add_subplot(111);
export var resolved_url=resolve_url(login_url||settings.LOGIN_URL);
a.withdraw();
s.quit();
tuple([498,410]);
sys.exit(app.exec_());
export var py_iter=function(){var __accu0__=[];for(var i=0;i<50;i++)__accu0__.append(i);return py_iter(__accu0__)}();
httpd.serve_forever();
numpy.linspace(10,20,5,__kwargtrans__({endpoint:false}));
views.py;
zip_longest(...args,__kwargtrans__({fillvalue:fillvalue}));
s.get_data();
httpd.shutdown();
var result=[];
match.group(1);
HttpAuthenticated.__init__(self,...args,__kwargtrans__(kwargs));
self.get_paginated_response(serializer.data);
a.a().method();
export var ipixel=im.getpixel(tuple([x,y]));
var x=collections.deque(5*[0],5);
Following.objects.filter(__kwargtrans__({follows:self})).count();
print(a,b,c,d,e,f);
waitress.serve(demo_app);
var root=Tkinter.Tk();
plt.show();
pool.close();
textbuffer.select_range(match_start,match_end);
G.add_node(1);
self.process=subprocess.Popen(self.cmd,__kwargtrans__({shell:true,preexec_fn:os.setsid}));
entry.py_clear();
fs.start();

var result=json.loads(output);
result_dict[x.key].append(x.value);
var xi=np.arange(len(x));
print(s1,len(s1));
wx.EvtHandler.__init__(self);
keep.add(onemorevalue);
smtp.sendmail(sender,recipients,themsg);
df.apply(outer_product);
node.py_update(value);
result.appendlist(key,value);
var opener=urllib.request.build_opener(urllib.request.HTTPCookieProcessor(cookie_jar));
tornado.ioloop.IOLoop.instance().start();
df.dtypes;
processHeader(f.readline());
var now=dt.datetime.now();
X/=X.std();
ax.xaxis.set_major_formatter(FuncFormatter(function __lambda__(tick,_){return get_day(tick)}));
var b=np.array([2,1,1,1,1]);
print(img.size);
print(repr(line));
b.__getitem__([tuple([0,null,1]),tuple([0,null,1]),some_mask==1]);
file.write(part.get_payload(__kwargtrans__({decode:true})));
var job=Job.objects.py_get(__kwargtrans__({pk:1}));
var driver=webdriver.Chrome();
conn.perform();
var sizer=wx.BoxSizer(wx.VERTICAL);
tuple([df.index[0],v.iloc[-1]]);
var driver=webdriver.Firefox(firefox_profile);
__init__.py;
[tuple([5,6]),tuple([6,7])];
var soup=BeautifulSoup(html);
np.array(x.tolist());
self.l.append(dict({}));
dateutil.parser.parse(node.value);
self.f=args[0];
logging.Logger.__init__(self,py_name);
var p=Process(__kwargtrans__({target:f,args:tuple([q])}));
self.sizer=wx.BoxSizer(wx.VERTICAL);
QtCore.QModelIndex();
df.dtypes;
var pool=Pool(5);
plt.plot(A,B);
app.run();
__main__.py;
var a=np.random.rand(n,m);
export var entity1_id=Column(Integer,__kwargtrans__({primary_key:true}));
export var diff_as_html=ghdiff.diff(md1,md2);
p(i-1)/2+p(i+2)/2;
help(module);
Pdb().set_trace();
time.sleep(2);
tex.pack(__kwargtrans__({side:tk.RIGHT}));
cettime.isoformat();
var content=response.content;
self._is_running=false;
var mask=cv2.bitwise_or(mask1,mask2);
http_server.listen(8080);
len(data)==0;
turtle.forward(size);
py_new.py_setdefault(key,[]).append(temp);
do_something();
var __left0__=sock.recv(1024);var data=__left0__[0];var addr=__left0__[1];
var item=list[2][2];
true;
contains_vectorized(geo_polygons,geo_points.__getitem__([tuple([0,null,1]),np.newaxis]));
func(x,y,z,a,b,c);
print(list(keep_n_dupes(lst,2)));
myobj[5]=1;
var py_values=np.array([4,4,4,4,4,4,4,4,4,4]);
myParent.__init__(self);
G.add_edge(1,2);
im.py_update();
s.read();
var ans=math.factorial(N);
ssh.close();
var lines=function(){var __accu0__=[];for(var line of file)__accu0__.append(line.strip());return __accu0__}();
Py_Initialize();
var db=mongo.db;
show();
queue.append(clientsocket.recv(1024));
export var test_writer=tf.train.SummaryWriter(this_test);
main();
plt.imshow(frames[k],__kwargtrans__({cmap:plt.cm.gray}));
a_cursor.execute(sql,tuple([val1,val2]));
var __left0__=np.meshgrid(ti,xi);var ti=__left0__[0];var xi=__left0__[1];
f.close();
sleep(20);
self.stack.append(len(self.get_item())-1);
py_typeof(a.tolist());
print(str(uuid.uuid4()).__getslice__(0,8,1));
results.append(a_dict[id]);
bin((1<<7)-1);
psutil.get_pid_list();
HTMLParser.__init__(self);
print(para_group_demo.sum(df.a,df.b));
var DateR=date.compile();
np.random.shuffle(idx);
var fig=pyplot.figure();
(function(){var __accu0__=[];for(var k of py_keys)__accu0__.append([k,dict_[k]]);return dict(__accu0__)})();
self.entry.pack();
imscatter(x,y,image_path,__kwargtrans__({zoom:.1,ax:ax}));
plot(tmp.min(__kwargtrans__({axis:0})));
export var ucontent=str(content,encoding);
var val=int(input,16);
f_out_intkeys.write(line);
f_out_quot.write(line);
f_out_frb.write(line);
f_out_dtwrld.write(line);
var driver=webdriver.Chrome();
foo();
print(sum(map(d.py_get,itertools.takewhile(function __lambda__(key){return key!=5},d))));
var s=sys.stdout.getvalue();
var __left0__=np.meshgrid(x,y);var X=__left0__[0];var Y=__left0__[1];
signal.alarm(seconds);
do_stuff_with_two_lines(previous_line,current_line);
print(json.dumps(doc,__kwargtrans__({py_default:ComplexHandler})));
var x=x+c;
dict_setitem(dct,key,value);
z.py_update(y);
self.listbox.insert(0,option);
py_next(itertools.islice(cpy,index,index+1));
var sock=socket.socket(socket.AF_INET,socket.SOCK_DGRAM,socket.IPPROTO_UDP);
var py_values=np.random.rand(len(indices));
self.ProgressBar.SetRange(event.total);
plt.xlim(0,1);
ui.show();
export var X_plot=np.linspace(0,1,100);
main();
export var img_io=StringIO();
new set([new set([form.errors])]);
sns.set(__kwargtrans__(kwargs));
output.write(line);
(function(){var __accu0__=[];for(var i=0;i<len(s)-width+1;i++)__accu0__.append(s.__getslice__(i,i+width,1));return __accu0__})();
plt.clf();
logger.addHandler(progress);
self.result_queue.put(result);
logging.Handler.__init__(self);
var out=process.stdout.read(1);
plt.tight_layout();
var b=int(a);
sys.path.append(YOUR_PATH);
browser.load(QtCore.QUrl(url));
var row=np.random.randn(100);
tuple_list[i]=tuple([a,new_b]);
var object_id=models.PositiveIntegerField();
var data2=np.asarray(data2);
isinstance(os,types.ModuleType);
var df=pd.DataFrame(d);
word.__getslice__(len(word),-len(word)-1,-1);
box.focus_set();
plt.show();
sum(map(int,item));
len(x);
print(string.__getslice__(i,j,1));
var tree=ElementTree.fromstring(xml,parser);
export var dt_aware=localtz.localize(dt_unware);
background_label.image=background_image;

print(every6(example_string));
Goodbye;
do_stuff();
plt.axhline(i,__kwargtrans__({color:color}));
self.nout+=1;
widget2.update_idletasks();
print(cv.GetCaptureProperty(stream,cv.CV_CAP_PROP_FRAME_COUNT));
self.py_update(dict(...args,__kwargtrans__(kwargs)));
Pool();
var a=np.vstack(tuple([a,np.array([[1,1,0,0,0,0,0,1]])]));
var ssh=paramiko.SSHClient();
a+b;
var driver=webdriver.Firefox();
cur.close();
ax.set_xlim(0,1.4);
export var srcname=os.path.join(src,py_name);
var x=random.randint(0,walnut.size[0]-1);
bar.buzz();
xl.Quit();
export var list_size_2=numpy.array(list_size_2);
response;

var fd=sys.stdin.fileno();
l.set_option(ldap.OPT_X_TLS_DEMAND,true);
var fig=plt.figure();
dict.py_clear();
events[-1].append(line);
exec(open(filename).read());
sorted(x,__kwargtrans__({key:functools.cmp_to_key(customsort)}));
plt.show();
draw.line(tuple([x1,y1,x2,y2]),__kwargtrans__({fill:col,width:1}));
testsite_array.append(line);
isinstance(bar,types.UnboundMethodType);
var new_list=list(generate_items);
time.sleep(5);
a-b;
print(form.instance.id);
print(f2.readline());
print(count_rec(0,0));
auth.set_access_token(access_key,access_secret);
var text=row[1];
python-mfoo.bar;
self.thread.start();
form.fileName.file.save(file_path);
handle.flush();
np.repeat(uniques,np.clip(count,0,2));
sys.stderr=sys.__stderr__;
1/0;
wx.StaticBitmap(panel,-1,png,tuple([10,pos]),tuple([png.GetWidth(),png.GetHeight()]));
ax.set_axis_off();
py_values(np.arange(len(A)));
(function(){var __accu0__=[];for(var i of strings)for(var j of listSubstrings)if(i.find(j)>-1)__accu0__.append(j+i);return __accu0__})();
layout.addWidget(self.splitter);
do_something(line);
var parser=argparse.ArgumentParser();
x.reshape(zt,-1).__getitem__([idx.ravel(),np.arange(yt*xt)]).reshape(-1,xt);
df.mask(np.triu(np.ones(df.shape)).astype(np.bool));
objectA.delete();
sys.modules[py_name]=module;
json.loads(list_dump);
var b=bytes([x]);
var id=Column(Integer,__kwargtrans__({primary_key:true}));
brr.py_sort();
defaults.py_update(kwargs);
datetime.combine(date.today(),exit)-datetime.combine(date.today(),enter);
var app=Flask(__name__);
var s=map(str,numList);
var app=QtGui.QApplication(sys.argv);
deleteL.__getslice__(0,null,L[0]);
var a=numpy.ones(tuple([2,4]));
df.gdp.drop(df.gdp.shape[0]-1,__kwargtrans__({inplace:true}));
(function(){var __accu0__=[];for(var i of sorted(indices))__accu0__.append(myList[i]);return __accu0__})();
self.SetDiagram(self.diagram);
turtle.right(angle);
fh.write(output_from_parsed_template);
dict.__init__(self,...args,__kwargtrans__(kwargs));
str(1056)===str(1056);
t.start();
plt.legend();
var __left0__=tuple([b.__getitem__([arange(2),0,0]),a.__getitem__([arange(2),0,0])]);a.__setitem__([arange(2),0,0],__left0__[0]);b.__setitem__([arange(2),0,0],__left0__[1]);
ws.close();
pprint(sorted_dict);
buffer1.__setslice__(pos,pos+len(buffer2),null,buffer2);
self.data[key];
np.any(a==2,__kwargtrans__({axis:0}));
self.layout=QtGui.QHBoxLayout();
A.shape;
ax.set_theta_offset(np.radians(90));
app.register_blueprint(bp);
export var conacatData=function(){var __accu0__=[];for(var x of testdata)__accu0__.append(x[0]+x[1]);return __accu0__}();
web.load(QUrl(url));
self.write(figdata.getvalue());
var pool=mp.Pool(__kwargtrans__({processes:1}));
var __left0__=parser.parse_args();var options=__left0__[0];var args=__left0__[1];
logger.addHandler(file_handler);
[b,c,d,e,f];
print(instance.ip_address);
[1,0,1,1,0];
cls(wfd,bfd,wildfd,tfd,ffd);
p.start();
var it=py_iter(the_list);
f(6);
t.render(c);
[2,2,5,7,7];
plt.plot(x_new,ffit(x_new));
im.size;
msg.attach(part1);
setattr(cls,key,wrapper(value));
var myList=[];
print(df);
admin.site.unregister(User);
self.testButton.clicked.connect(self.change_text);
drand48();
var s=socket.socket();
time.sleep(1);
var list=list+function(){var __accu0__=[];for(var _=0;_<4-len(list);_++)__accu0__.append(0);return __accu0__}();
export var list_of_unique_dicts=list(np.unique(np.array(list_of_dicts)));
self.view.setEditTriggers(QtGui.QAbstractItemView.NoEditTriggers);
mlab.show();
var image=image.astype(np.uint8);
print(my_list[0]);
help(foo.bar);
var response=urllib.request.urlopen(url);
heapq.heappush(heap,tuple([row[1],row]));
urllib.request.install_opener(opener);
var x=list(range(1,10));
self.assertEqual(forty_two,42);
ser.close();
ax.errorbar(theta,r,__kwargtrans__({yerr:1,xerr:.1,capsize:0}));
suite.addTest(unittest.defaultTestLoader.loadTestsFromName(t));
df;
s.strip();
table.horizontalHeader().setStretchLastSection(true);
self.master.destroy();
a.foo=2;
os.write(fd,data);
var idx=where(abs(A.__getitem__([tuple([0,null,1]),newaxis,tuple([0,null,1])])-B).sum(__kwargtrans__({axis:2}))==0);
var screen=pygame.display.set_mode(tuple([100,100]));
var start_date=timezone.now().date();
var __left0__=np.nonzero((diffs<tol).all(2));var x1=__left0__[0];var x2=__left0__[1];
(function(){var __accu0__=[];for(var _=0;_<sample_size;_++)__accu0__.append(random.choice(xs));return __accu0__})();
export var second_column=function(){var __accu0__=[];for(var row of a)__accu0__.append(row[1]);return __accu0__}();
serializer.save(__kwargtrans__({user_id:15}));
Response(serializer.data);
list(self.__dict__.py_keys());
var result=np.empty_like(arr);
(A!=0).cumsum(1);
models.DateTimeField.to_python(self,value);
export var dialect=csv.Sniffer().sniff(f1.read());
print(regx.findall(content));
self.frame.pack_propagate(false);
var a=numpy.array(list(range(10)));
A_from_python();
var id=Column(Integer,__kwargtrans__({primary_key:true}));
fp.close();
self._socket.send(bytes);
np.allclose(a.data,b.data);
print(str(x));
c.save();
self.log_message(format,...args);

len(obj);
export var InfoDF=pd.concat([InfoDF,tempDF]);
var line=proc.stderr.readline();
var rgb=np.empty_like(hsv);
self.cj=cookielib.CookieJar();
export var img2=img.copy();
ngrams(string1,n)&ngrams(string2,n);
var offset=cet.utcoffset(dt,__kwargtrans__({is_dst:true}));
(function(){var __accu0__=[];for(var i=0;i<len(cumlist)-1;i++)__accu0__.append(mylist.__getslice__(cumlist[i],cumlist[i+1],1));return __accu0__})();
export var streams=function(){var __accu0__=[];for(var i=0;i<k;i++)__accu0__.append(data.__getitem__([tuple([0,null,1]),stream_index==i]).ravel());return __accu0__}();
len(L)==len(E);
app.db=db;
app.processEvents();
self.py_get();
[1,2];
var dt=datetime.datetime(2012,1,1,0,0);
var ax1=fig.add_subplot(111);
pprint(data,__kwargtrans__({indent:4}));
sum(array[mask]);
x+1;
var extension=guess_extension(guess_type(url)[0]);
var data=data[tuple(ind)];
parser.feed(your_html_string);
print(now+dateutil.relativedelta.relativedelta(__kwargtrans__({months:-1})));
ax.set_xticklabels(xlabels);
nanargmax(a);
var data=f.read();
(function(){var __accu0__=[];for(var i of l)if(re.search(s,i))__accu0__.append(i);return __accu0__})();
num>0?num*X(X,b-1):1;
export var INF=_Infinity();
print(kmeans.cluster_centers_);
print(function(){var __accu0__=[];for(var [k,v]of list(counts.py_items()))if(v>=2)__accu0__.append(k);return set(__accu0__)}());
msg.attach(plain_text);
var driver=webdriver.PhantomJS();
print(my_string);
main();
Response(serializer.data);
row.py_pop();
time.sleep(2);
var img=c.getImage();
string.printable;
operator.itemgetter(...b)(a);
os.makedirs(whatever);
img.write(artwork);
data[key];
export var widget=widget.get_parent();
picture.putpixel(tuple([x,y]),new_color);
file.seek(0,2);
var result=function(){var __accu0__=[];for(var p1 of people)for(var p2 of people)__accu0__.append(foo(p1,p2));return __accu0__}();
np.transpose(np.nonzero(b));
factor.P();
whos;
print(function(){var __accu0__=[];for(var k of set(x)&set(y))__accu0__.append([k,x.py_get(k,0)+y.py_get(k,0)]);return dict(__accu0__)}());
var app=Eve(__kwargtrans__({auth:globalauth.TokenAuth}));
time.sleep(1);
var y=tuple(x);
array([[1,1],[1,1]]);
getattr(obj,py_name);
plt.plot([1,2]);
var engine=innodb;
app.logger.addHandler(file_handler);
var proc=subprocess.call(command,__kwargtrans__({stderr:subprocess.OUTPUT}));
ax.set_xticks(ind+width/2);
f();
lines.append(line);
dates.year;
widget.show();
len(bin(10))-2;
plt.yticks(list(range(y.max()+1)),labels);
list(self.py_keys());
var r=requests.post(url,__kwargtrans__({data:json.dumps(payload),headers:headers}));
var response=requests.py_get(url,__kwargtrans__({params:query}));
var tree=tree.getroottree();
var app=Flask(__name__);
os.rename(original,output);
export var orderdict=dict(function(){var __accu0__=[];for(var [x,y]of enumerate(wantedorder))__accu0__.append(tuple([y,x]));return py_iter(__accu0__)}());
var a=np.random.random(20).reshape(4,5);
d.py_setdefault(key,[]).append(val);
pool.join();
new set([new set([tag])]);
NULL;
t.total_seconds();
int();
QtCore.QCoreApplication.instance().quit();
var mask=np.ones(len(data),np.bool);
var slices=function(){var __accu0__=[];for(var sli of function(){var __accu1__=[];for(var i of seclist)__accu1__.append(list(islice(it,0,i)));return py_iter(__accu1__)}())if(sli)__accu0__.append(sli);return __accu0__}();
print(function(){var __accu0__=[];for(var k of set(x))__accu0__.append([k,x.py_get(k,0)+y.py_get(k,0)]);return dict(__accu0__)}());
string_to_expand*(length/len(string_to_expand)+1).__getslice__(0,length,1);
var my_string=my_string.lower().py_split();
var s=s.__getslice__(0,null,-1);
df1.columns=pd.MultiIndex.from_tuples(new_cols);
Base.metadata.create_all(e);
client.Resolver.__init__(self,__kwargtrans__({servers:servers}));
print(is_summer_time(aware));
var b=sorted(sorted(a,__kwargtrans__({key:function __lambda__(x){return x[0]}})),__kwargtrans__({key:function __lambda__(x){return x[1]},reverse:true}));
t.cancel();
map(add,a,itertools.repeat(2,len(a)));
finder1.apply_freq_filter(2);
var data=np.arange(100,__kwargtrans__({dtype:np.int}));
var diff=set(zip(df2.Buyer,df2.Quantity))-set(zip(df1.Buyer,df1.Quantity));
export var datesDF=pd.DataFrame(dates);
threading.Timer(1,foo).start();
n[1];
print(kwlist);
a.py_name();
sleep(1);
p.stdout.readline();
Parent.__init__(self,x);
list(d.py_items());
export var subtraction=int(start_big)-int(start_small);
pcolor(my_array,__kwargtrans__({cmap:cmap,norm:NoNorm()}));
r.clipboard_clear();
var b=[1,2,5];
var x=np.lib.stride_tricks.as_strided(y,__kwargtrans__({shape:tuple([A,B]),strides:tuple([n,n])}));
os.makedirs(f);
plt.bar(x[i],y[i],__kwargtrans__({color:cm.jet(1*i/len(x))}));
dict(function(){var __accu0__=[];for(var [k,v]of d1.py_items())__accu0__.append(tuple([v,k]));return py_iter(__accu0__)}())[55];
button.setVisible(false);
print(tailq.py_get());
var app=Flask(__name__);
var ordered=list(function(){var __accu0__=[];for(var x of ordered)if(!__in__(x,unordered))__accu0__.append(x);return __accu0__}());
py_next(c);
var app=Flask(__name__);
self.assertEqual(e.args[0],42);
var result=pool.map_async(task,function(){var __accu0__=[];for(var x=0;x<10;x++)__accu0__.append(tuple([x,q]));return __accu0__}());
length?some_queryset.__getslice__(0,length,1):some_queryset.__getslice__(0,null,1);
listmatrixMap(add,a,b);
var session=requests.session(__kwargtrans__({cookies:cookies}));
new_list.append(v);
list(calendar.day_abbr);
compare_lists(a.__getslice__(1,null,1),b.__getslice__(1,null,1));
msvcrt.getch();
5();
np.arange(10).__getslice__(10,-10,-1);
f.close();
var cleaned_list=list(filter(is_not_thing,some_list));
pylab.xlim(__kwargtrans__({xmin:0}));
fh.close();
help(f);
export var money=Column(Integer,__kwargtrans__({py_default:100}));
sp.stdin.close();
p.communicate(__kwargtrans__({input:str}));
print(x);
df.iloc[idx];
MyClass.call_me();
some_value;
export var imgtk=ImageTk.PhotoImage(__kwargtrans__({image:im}));
var zeroMatrix=function(){var __accu0__=[];for(var i=0;i<Np;i++)__accu0__.append(zeroArray.__getslice__(0,null,1));return __accu0__}();
utc_dt+timedelta(__kwargtrans__({hours:longitude/math.pi*12}));
np.sqrt(val/2/a.shape[0]);
transaction.commit();
self._fp.close();
re.sub(r,replacer,string);
bundle.obj==bundle.request.user;
var soup=BeautifulSoup(html_doc);
ax.yaxis.set_major_formatter(matplotlib.ticker.ScalarFormatter());
lock.release();
var a=np.array([1,2,1,1,2]);
wait();
self.pressed.connect(self.py_update);
df.index=pd.MultiIndex.from_tuples(df.index);
print(spectra_list[0]);

print(t.timeit(5));
var fig=plt.figure(__kwargtrans__({figsize:tuple([10,8])}));
imp.get_suffixes();
self.seek(0);
views.py;
plt.draw();
(function(){var __accu0__=[];for(var i=2;i<25;i++)if(f(i))__accu0__.append(i);return __accu0__})();
print(numpy.array(function(){var __accu0__=[];for(var [x,_]of d)__accu0__.append(n.activate(x));return __accu0__}()));
var b=ma.masked_array([0,1,2,4],[true,true,false,false]);
export var letterGoodness=dict(zip(string.ascii_uppercase,letterGoodness));
dict(d);
np.add.reduceat(a,w.__getslice__(0,-1,1)).astype(float)/np.diff(w);
a.symmetric_difference(b);
atexit.register(whatever);
enternum.pack();
var config=ConfigParser.ConfigParser();
map(function __lambda__(x){return x[0]==1},a_list);
export var closest_date=min(later,__kwargtrans__({key:function __lambda__(d){return get_datetime(d[0])}}));
process(line);
time.sleep(SPINUP_WAIT_TIME);
self.master.destroy();
session.commit();
self.button.setContextMenuPolicy(QtCore.Qt.CustomContextMenu);
print(sum(Math.pow(a-i,2),1).argmin());
print(mywrap(s,10));
sorted(versions,__kwargtrans__({key:LooseVersion}));
a[0]*b[0]+a[1]*b[1]+a[2]*b[2];
c.setopt(c.WRITEFUNCTION,storage.write);
var extension=guess_extension(guess_type(url));
show(layout);
var temp=temp.reshape(1,-1);
np.delete(myarray,np.r_[tuple(mylist)]);
sockOutfile.write(readRequest);
pd.DataFrame((d2-sums2/n)/stds2/n,df.columns,df.columns.__getslice__(k,l,1));
time.sleep(5);
sys.exit(1);
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
self.setFixedSize(pic.size());
var screen=win.get_screen();
print(tuple([i[0]+1,i[1]]));
_epoch+timedelta(__kwargtrans__({days:ordinal-1}));
print(a.__getitem__([150001,2]));
A.__init__(self,...args,__kwargtrans__(kwargs));
var data=cur.fetchone()[0];
tuple([1,1,1,1,1,1,0,0,20160224,20160226]);
datetime.datetime.fromordinal(t.toordinal());
var D=np.random.random_integers(0,1,tuple([5,5]));
combs.append(tuple([x,y]));
print(soup);
(new set([2,4,10])).issubset(chain.from_iterable(x));
result.append(s);
var a=np.arange(10);
var mylist=[];
sys.__repr__();
var photo=models.ImageField(__kwargtrans__({upload_to:photo_path,blank:true}));
print(new_data.shape);
img_file.save(new_image_name);
text.set_text(s);
out.__setitem__([idx,idx],A.__getitem__([idx,idx]));
var n_grams=CountVectorizer(__kwargtrans__({ngram_range:tuple([1,5])}));
QWebPage.__init__(self);
[0,1,0,1,0,0,1,0,0,1,1,1];
var ax=fig.add_axes([.1,.1,.8,.8]);
(function(){var __accu0__=[];for(var i of indexes)__accu0__.append(word.__getslice__(0,i,1)+word.__getslice__(i+1,null,1));return __accu0__})();
locale.currency(1.8851898218E8);
print(sys.executable);
(function __lambda__(x){return sum(function(){var __accu0__=[];for(var f of terms)__accu0__.append(f(x));return py_iter(__accu0__)}())});
sys.__stdout__.write(data);
var points=function(){var __accu0__=[];for(var [i,j]of zip(x,y))__accu0__.append(tuple([i,j]));return __accu0__}();
inprogress.append(taskindex);
export var icon_theme=gtk.icon_theme_get_default();
ax.set_yticks(majorticks,__kwargtrans__({minor:false}));
ssc.start();
datetime.date(year,month,day);
print(function(){var __accu0__=[];for(var cls of X.mro())__accu0__.append(cls.__name__);return __accu0__}());
export var blah=models.IntegerField(__kwargtrans__({choices:BLAH_CHOICES}));
export var sanitised_filename=sanitise_filesystem_name(filename);
var X=function(){var __accu0__=[];for(var i of Counter(df.X).most_common())__accu0__.append(i[0]);return __accu0__}();
var data=function(){var __accu0__=[];for(var y of data)__accu0__.append(function(){var __accu1__=[];for(var x of y)__accu1__.append(float(x));return __accu1__}());return __accu0__}();
print(flatten(list));
export var fronts=np.empty(len(M),int);
var py_name=models.CharField(__kwargtrans__({max_length:128}));
sio.readlines();
plt.loglog(list(range(100)));
ax.xaxis.set_tick_params(__kwargtrans__({size:0}));
var out=idx[mask].argsort()[unqID];
export var token=token_handler.create_token(request,self.refresh_token);
time.sleep(.1);
print(sys.path);
heapq.heappush(self.heap,tuple([pri,d]));
print(strings.group(0));
views.py;
t.to_pydatetime();
fcntl.fcntl(fd,fcntl.F_SETFL,fcntl.fcntl(fd,fcntl.F_GETFL)|os.O_NONBLOCK);
a[idx];
locals()===__all__;
var window=NSApp.mainWindow();
var tuples=function(){var __accu0__=[];for(var x of L1)for(var y of L1)if(x!=y)__accu0__.append(tuple([x,y]));return __accu0__}();
export var emissions=function(){var __accu0__=[];for(var i=0;i<n;i++)__accu0__.append(function(){var __accu1__=[];for(var x of nextline().py_split())__accu1__.append(float(x));return __accu1__}());return __accu0__}();
ImageDraw.Draw(halo).text(position,text,__kwargtrans__({font:font,fill:halo_col}));
bit_array[25]=1;
self.fd.seek(offset);
var foo=Foo();
self.html_file.close();
widget.show();
abs(g(a+b*f(c))+g(a-b*f(c))-1)<1E-10;
min(s.__getslice__(max(0,i-1),i+2,1),__kwargtrans__({key:function __lambda__(t){return abs(ts-t)}}));
crustFrame.Show();
asyncore.dispatcher.__init__(self);
(function(){var __accu0__=[];for(var x_y_z of a)if(x_y_z[0]+x_y_z[1]+x_y_z[2]>6)__accu0__.append(x_y_z);return __accu0__})();
statement.parseString(text);
var A=np.arange(10);
var layout=QtGui.QVBoxLayout();
export var firsttwo=words.__getslice__(0,2,1);
f1.close();
var a=np.array(ulysses.py_split());
self.model.fetchMore();
demandimport.__file__;
var a=numpy.random.randn(100,200);
df[df<1]=0;
var cookies=cookielib.LWPCookieJar();
__init__.py;
var text=models.TextField();
User[1]==dict({});
var r=requests.py_get(url);
self.assertAlmostEqual(em(1,2),.2188,4);
var b=tf.square(tf.matrix_determinant(a));
var counts=np.bincount(id[mask1]-1);
b.has_usable_password();
export var wjdata=json.loads(wjson);
elem.py_clear();
var root=tree.getroot();
widget.deleteLater();
parent.remove(elem);
img.resize(__kwargtrans__({width:scaled_width,height:scaled_hight}));
var id=Column(Integer,__kwargtrans__({primary_key:true}));
print(x);
var py_new=socket.socket(socket.AF_INET,socket.SOCK_STREAM);
setp(a,__kwargtrans__({xticks:[],yticks:[]}));
f.py_name;
data.py_setdefault(k,[]);
ssh.connect(server,__kwargtrans__({username:username,password:password}));
print(py_typeof(tuple([1])));
copy.deepcopy(self);
self.window.addstr(1+index,1,msg,mode);
list.py_sort();
psutil.virtual_memory();
partials.append([]);
BlogComment.save();
var url=opener.open(request);
int(self);
export var new_foo=filter_divisible_by_three(foo);
instance.py_new();
var args=parser.parse_args();
export var ecef_cities=function(){var __accu0__=[];for(var [lat,lon]of cities)__accu0__.append(geodetic2ecef(lat,lon));return __accu0__}();
new_pressures[-1]+=p[index];
script.extract();
accum&=np.abs(a.__getitem__([tuple([0,null,1]),i])-b.__getitem__([tuple([0,null,1]),i]).ravel())<tol[i];
handler.setLevel(logging.CRITICAL);
df;
__in__(u,G.neighbors(v));
cvtColor(im,imgrey,CV_RGB2GRAY);
self.cam.release();
words.append(random.sample(novel,100));
(function(){var __accu0__=[];for(var key of common_keys)__accu0__.append([key,tuple(function(){var __accu1__=[];for(var d of dicts)__accu1__.append(d[key]);return py_iter(__accu1__)}())]);return dict(__accu0__)})();
dict([[key,obj.__dict__]]);
export var output_set=set(itertools.chain(first_list,second_list));
a==b;
hist(x);
si.imgdata=im.tostring();
new set([dict([[game.description|safe|truncatewords,65]])]);
(date(2015,10,7)-date(1,1,1)).days;
time.sleep(self.delay);
print(daily_prices[2]);
print(resp.status_code);
var parser=etree.XMLParser(__kwargtrans__({remove_blank_text:true}));
plt.colorbar(im,__kwargtrans__({fraction:.046,pad:.04}));
osa.communicate(ascript)[0];
velcro.right(90);
print(len(S1),len(S2));
var x=json2obj(data);
out.__setitem__([idx.__getitem__([tuple([0,null,1]),0]),idx.__getitem__([tuple([0,null,1]),1])],vals);
QtGui.QWidget.eventFilter(self,source,event);
sys.path.insert(0,os.path.abspath(os.path.dirname("./P2JSnippets.py")));
list(self.__graph_dict.py_keys());
var py_values=np.sum(weights*features+bias);
frame.pack();
f_output.write(file_bytes.read());
A.__setitem__([tuple([0,null,1]),1],A.__getitem__([tuple([0,null,1]),1])*5.2);
unittest.main();
var fig=plt.figure();
pd.rolling_mean(pivot,90,__kwargtrans__({center:true,min_periods:1}));
np.vstack(tuple([dst[idx],rows[idx],cols[idx]])).T;
session.add(h);
export var audio_array=audio_array.reshape(tuple([len(audio_array)/2,2]));
self.data.config(__kwargtrans__({yscrollcommand:self.scrollbar.set}));
var ax=plt.gca();
plt.colorbar(sm);
var script=sys.argv[0];
var py_values=function(){var __accu0__=[];for(var x of PRIMES)__accu0__.append(is_prime(x));return __accu0__}();
print(df);
var distance=function(){var __accu0__=[];for(var i=0;i<n;i++)__accu0__.append(function(){var __accu1__=[];for(var j=0;j<n;j++)__accu1__.append(function(){var __accu2__=[];for(var k=0;k<n;k++)__accu2__.append(0);return __accu2__}());return __accu1__}());return __accu0__}();
callable(fn);
sys.exit(0);
var browser=webdriver.Firefox();
func(...args);
pprint.pprint(list(collection.aggregate(__kwargtrans__({pipeline:pipeline}))));
list(x);
print(readline.get_history_item(i+1));
self.frame.Show(true);
self.queue.append(data);
print(a,b);
chars.extend(line);
var file=jpgs[-1];
sleep(1);
column_label.show();
res0.remove(element);
var x=session.query(Foo).all();
Employee.__init__(self,py_name,salary);
list(filter(filterfunc,l1));
recursion(0,0);
dict(zip(student_names,average_of_all_assignments));
t.start();
var args=parser.parse_args();
sum([true,true,false],false);
tuple([705,690,705,680,715,705,670,705,705,650]);
var afield=forms.ChoiceField(__kwargtrans__({choices:INITIAL_CHOICES}));
screen.fill(tuple([255,0,0]),tuple([self.x,self.y,10,10]));
var draw=ImageDraw.Draw(image);
list(py_reversed(function(){var __accu0__=[];for(var i of l.__getslice__(1,-1,1))__accu0__.append(i[0]);return __accu0__}()));
f(a,b).A;
list.append(map(itemgetter(1),g));
self.label.pack(__kwargtrans__({padx:10,pady:10}));
cursor.execute(SQL);
print(df.reindex(idx));
np.allclose(B.todense(),B2.T);
response;
deleteelem.getparent()[0];
(function(){var __accu0__=[];for(var i of zip(...theArray))__accu0__.append(list(i));return __accu0__})();
var fig=pl.figure();
G.add_path([0,2,5]);
plt.show();

var dt=datetime.datetime.fromtimestamp(float(datestring));
func(xy[0],xy[1],data);
print(str(i));
export var module_name=inspect.getmodule(s[1][0]).__name__;
sorted_files.append(f);
json.loads(value);
var __left0__=np.meshgrid(a,b);var c=__left0__[0];var d=__left0__[1];
collections.defaultdict(nested_dict);
var args=parser.parse_args();
var leg=ax.legend();
hash_md5.py_update(chunk);
pyplot.ylim(__kwargtrans__({ymin:0}));

pool.join();
var response=urllib.request.urlopen(req);
server.set_debuglevel(1);
self.fn(...args,__kwargtrans__(kwargs));
x.loc[x.A>=2&x.A<=4];
np.all(a==a.T);
!a||a.isspace()?-1:a.index(a.lstrip()[0]);
count[letter]=1;
var ax=fig.add_subplot(111);
var opener=urllib.request.build_opener(handler);
var cursor=db.cursor();
foo[somestuff];
dict1.py_items()^dict2.py_items();
stdv.reset();
var key=models.PositiveIntegerField();
export var grey_image=cv.CreateImage(cv.GetSize(frame),cv.IPL_DEPTH_8U,1);
shutil.rmtree(dir);
export var utc_seconds=time.mktime(t.timetuple());
lst[(len(lst)+1)/2-1];
plt.figure();
a[x]+a[y];
self.cleaned_data;
parser.parse_args(args);
df.describe();
integrate.quad(func,a,b,__kwargtrans__({args:tuple([y])}))[0];
var fig=plt.gcf();
a+(b-a)*self.random();
df;
ax.scatter(xs,ys,zs,__kwargtrans__({c:c,marker:m}));
var m=ctypes.c_int(x.shape[0]);
plt.show();
self.window.add(self.image);
ioctl(fd,USBDEVFS_RESET,0);
zipf.close();
np.random.choice(make_sampling_arr(n_k),m);
s.send(tmsg);
a.__setslice__(20,null,null,zip(...zip(a.__getslice__(20,null,1),itertools.repeat(0)))[1]);
instance.topping_set.py_clear();
ww.writeframes(new_frames);
ET.dump(root);
[c,d,f];
new set([new set([mywidget.css()])]);
export var form_data=urllib.parse.urlencode(form_fields,__kwargtrans__({doseq:true}));
ConstantFunction(constant);
sum(function(){var __accu0__=[];for(var [k,b]of enumerate(bytes))__accu0__.append(b<<k*8);return py_iter(__accu0__)}());
plt.clf();
x.append(Foo());
var app=QtGui.QApplication(sys.argv);
app.listen(8888);
suffix_array.py_sort(__kwargtrans__({key:function __lambda__(a){return content.__getslice__(a,null,1)}}));
Maybe(val);
var matrix=matrix.__getitem__([tuple([0,100,1]),tuple([0,80,1])]);
print(new_url);
found_extensions.add(os.path.splitext(f)[-1]);
var a=numpy.linspace(-1,1,20);
var u=np.sin(np.pi*x)*np.cos(np.pi*y)*np.cos(np.pi*z);
chart.Copy();
var x=theano.shared(numpy.arange(10));
now+=timedelta(__kwargtrans__({minutes:1}));
ranges.append(tuple([last_start,offset-1,current_set]));
my_dict[key]=indices;
xmlOutput+=self.dirToXML(os.path.join(root,subdir));
var ax=pl.subplot(111);
self.__dict__.py_update(name_value_dict);
win.setWindowFlags(win.windowFlags()|QtCore.Qt.CustomizeWindowHint);
export var ndata=np.frombuffer(data,np.int8);
py_typeof(int(s));
tuple([[0,0,0,17,0,0,0,40,0,0,0,0,0]]);
__init__.py;
var app=QtGui.QApplication(sys.argv);
listWidget.setItemWidget(item,w);
result.py_update(dictionary);
corpus.py_sort(__kwargtrans__({cmp:locale.strcoll}));
info[1][1]==4;
np.random.seed(22);
var df1=df.iloc.__getitem__([tuple([0,null,1]),tuple([0,-1,1])]);
session.expunge(item);
list(unique_everseen(a,__kwargtrans__({key:set})));
hash(dumps(data));
self.__dict__.py_update(kwds);
(function(){var __accu0__=[];for(var py_name of names)__accu0__.append(tmp.py_setdefault(py_name,len(tmp)));return __accu0__})();
var new_points=list(function(){var __accu0__=[];for(var [x,y,z]of surface.points)__accu0__.append(do_something_with(x,y,z));return py_iter(__accu0__)}());
self.assertAlmostEqual(em(2,2),.4251,4);
list(b);
z.append(matchobj.group(1));
(function(){var __accu0__=[];for(var x=0;x<10;x++)__accu0__.append(foo());return __accu0__})();
time.sleep(4);
plt.bar(list(range(0,100)),x);
var fig=pylab.figure(__kwargtrans__({figsize:tuple([12,9])}));
var mask=np.ones(len(a),__kwargtrans__({dtype:bool}));
var lst=function(){var __accu0__=[];for(var s of lst)__accu0__.append(s.isdigit()?int(s):s);return __accu0__}();
sys.stdout=sys.__stdout__;
print(numpy.__path__);
random.shuffle(some_list_of_stuff);
py_typeof(n)===int;
var arr=np.dstack(tuple([r,g,b,a]));
x.py_update([i]);
numpy.arange(a.shape[0])[numpy.in1d(a,b)];
sock.bind(tuple([HOST,PORT]));
export var tck=scipy.interpolate.splrep(x,y);
export var datenow=datenow.py_replace(__kwargtrans__({hour:16,minute:0,second:0,microsecond:0}));
var data=pickle.load(fp);
axes[0].legend().set_visible(false);
export var playlists=function(){var __accu0__=[];for(var i of list(radio.py_items()))__accu0__.append(i[1]);return __accu0__}();
.5*(1+tsr.erf((x-mu)/(sd*tsr.sqrt(2))));
a.extend(map(add,lst));
print(function(){var __accu0__=[];for(var x of bodylist)__accu0__.append(set(x));return __accu0__}());
-__init__.py;
new_db.executescript(query);
var b=a.__getslice__(0,null,1);
zip_longest(...args,__kwargtrans__({fillvalue:fillvalue}));
a.__getitem__([labels.view(np.ndarray).ravel()==1,tuple([0,null,1])]);
print(sys._getframe().f_code.co_name);
var soup=BeautifulSoup(data);
p.wait();
export var MyObj2=MyModel.objects.all()[index2];
plt.plot(X,Y1,__kwargtrans__({lw:0}));
var __left0__=scipy.io.wavfile.read(filename);export var samp_rate=__left0__[0];var data=__left0__[1];
test_module2.py;
plt.pause(1E-9);
var draw=ImageDraw.Draw(circle);
timeit(function __lambda__(){return list(assignments(12,5))},__kwargtrans__({number:1}));
var serversocket=socket.socket(socket.AF_INET,socket.SOCK_STREAM);
file_handler.setLevel(logging.DEBUG);
foo(__kwargtrans__({nonsene:true,blather:false}));
var __left0__=tuple([byminute,bysecond]);export var byweekday=__left0__;var byweekday=__left0__[0];export var byhour=__left0__[1];var byhour=__left0__[0];export var byminute=__left0__[1];
ax.set_xlim(0,5);
os.path.splitext(fn)[1]!=ext;
a.__getitem__([i,j]);
var dfs=pd.concat(df_list);
np.random.seed(0);
var user=User.objects.py_get(__kwargtrans__({pk:uid}));
cv2.waitKey(1E3);
delete_keys_from_dict(v,lst_keys);
tk.Tk.__init__(self);
export var statuses=[a.wait(),b.wait()];
export var search=np.array([1,2],__kwargtrans__({dtype:e.dtype})).view(dt);
(function(){var __accu0__=[];for(var y of x.py_split())if(len(y)>2)__accu0__.append(y);return __accu0__})();
time.sleep(1);

a.take(tuple([1]),__kwargtrans__({axis:1}));
os.startfile(filepath);
self._tunnel();
var writer=csv.writer(f);
BeautifulSoup(badString,__kwargtrans__({markupMassage:myNewMassage}));
result.append(elem);
var fig=plt.figure();
print(p.match(input).groups());
dummy_event.wait();
tuple([datetime.datetime(2012,1,2,0,0,0)]);
var zeroMatrix=numpy.zeros(tuple([Np,Np]));
points.append(tuple([x,y]));
pickle.loads(encoded);
jsonify(x.serialize());
export var rd=dateutil.relativedelta.relativedelta(dt2,dt1);
Widget.__init__(self,parent);
var s=set(fus_d.py_keys());
torfile.set_priv(torinfo.priv());
var b=function(){var __accu0__=[];for(var i of a)__accu0__.append(i?1:0);return __accu0__}();
print(sum(function(){var __accu0__=[];for(var _ of takewhile(function __lambda__(x){return x==l[0]},l))__accu0__.append(1);return py_iter(__accu0__)}()));
var q=multiprocessing.Queue();
df/=df.max();
form.show();
tk.Tk.__init__(self,...args,__kwargtrans__(kwargs));
(function(){var __accu0__=[];for(var combination of itertools.product(...outer))__accu0__.append(sum(combination,[]));return __accu0__})();
node;
article.author=self.request.user;
article.headline_set.all();
data[tuple(ind)];
isinteger(1);
itertools.combinations(py_items,2);
export var dfasamplefive=dfa.sample(__kwargtrans__({n:5}));
server();
L[-1];
np.array(function(){var __accu0__=[];for(var r of a.T)__accu0__.append(np.bincount(ii,r));return __accu0__}()).T;
export var result_queue=multiprocessing.Queue();
L.__setslice__(0,null,null,function(){var __accu0__=[];for(var x of L)if(d[x]==1)__accu0__.append(x);return __accu0__}());
years_dict[line[0]]=[line[1]];
var w=Gtk.Window();
var __left0__=tuple([nextelem,py_next(licycle)]);export var thiselem=__left0__[0];var nextelem=__left0__[1];
os.play();
print(form.username);
var req=urllib.request.Request(url);
var B=numpy.array(A);
Time.insert(0,time);
print(y,len(y));
print(conn.sock.getpeercert());
py_typeof(d);
s.seek(0);
pylab.plot(x);
self.d[index]=[value];
d+datetime.timedelta(days_ahead);
var id=models.IntegerField(__kwargtrans__({primary_key:true}));
var max_value=np.iinfo(im.dtype).max;
self.close();
var f=open(filename);
d.py_setdefault(m,[]).append(k);
m.getch();
max(L[0],0);
var opener=urllib.request.build_opener(urllib.request.HTTPRedirectHandler);
print(function __lambda__(b){return Y}(num));
var t=xml.fromstring(s);
np.ma.array(x,__kwargtrans__({mask:~bool_arr})).argmax();
ax.add_patch(patch);
print(__mod__(tavnit,tuple(columns)));
show();
export var shape=np.array(a.shape);
(function(){var __accu0__=[];for(var [i,j]of pairs)__accu0__.append(alist.__getslice__(i,j,1));return py_iter(__accu0__)})();
pathqueue.join();
PyMODINIT_FUNC;
var root=tree.getroot();
var request=requests.py_get(url,__kwargtrans__({stream:true}));
set(c).issubset(set(a));
var numbers=function(){var __accu0__=[];for(var line of lines)for(var w of line.py_split())__accu0__.append(int(w));return __accu0__}();

var __left0__=p.communicate();var stdout=__left0__[0];var stderr=__left0__[1];
export var new_col=sc.parallelize(np.array([20,20,20,20]),n).map(int);
pythoncom.CoInitialize();
export var archive_path=os.path.abspath(sys.argv[0]);
painter.rotate(90);
frozenset(function(){var __accu0__=[];for(var some_set of some_sets)for(var some_item of some_set)__accu0__.append(some_item);return py_iter(__accu0__)}());
myDict[key]=20;
seen.add(item);
print(py_values.__getitem__([tuple([0,null,1]),1]).sum());
self.handle_request();
var width=win.winfo_width();
option.NPV();
export var key_name=lipis.key().py_name();
var l2=[0,2,5,6,8,9];
print(statlib.__version__);
var cs=axs[1].contourf(X,Y,zdata,__kwargtrans__({levels:[-1,0,1]}));
divmod(c.days*86400+c.seconds,60);
QApplication.restoreOverrideCursor();
myarray[x.group(1)]=[x.group(2)];
do_case0();
self.socket.sendall(length);
peewee.create_model_tables(models);
queue.start();
var __left0__=tuple([np.zeros_like(xi),np.zeros_like(xi)]);var yi=__left0__[0];export var zi=__left0__[1];
help(CM);
ynew;
(function(){var __accu0__=[];for(var key of mydict)__accu0__.append(tuple([key,mydict[key]]));return py_iter(__accu0__)})();
profile.options.filter(__kwargtrans__({id:option_id})).count();
stack.py_pop();
np.choose(m,p_vec).sum(__kwargtrans__({axis:1}));
transsurface.set_colorkey(tuple([255,0,255]));
B.__setitem__([tuple([0,null,1]),tuple([0,null,1])],v.dot(A));
var a=A.__getitem__([tuple([0,null,1]),j]);
smtp.login(username,password);
plt.tight_layout();
!bool(condition);
np.diff(np.r_.__getitem__([0,np.where(np.diff(data)!=1)[0]+1,data.size]));
pl.show();
ax.set_yticks([-.5,.5]);
var cur=con.cursor();
req.add_data(urllib.parse.urlencode(kwargs));
len(cn)>1&&cn[0][1]==cn[1][1]?0:py_next(py_iter(cn),[0])[0];
list1.__getslice__(0,null,1);
a1Note.play();
array[np.abs(array)<eps]=0;
false;
d.get_state();
root.mainloop();
var ax=fig.add_subplot(111);
file_handler.setLevel(logging.DEBUG);
thrs.append(threading.Thread(__kwargtrans__({target:targ})));
export var new_v=(this_array[indices[0]-1]+this_array[indices[-1]+1])/2;
var row_ind=function(){var __accu0__=[];for(var [k,v]of d.py_items())for(var _=0;_<len(v);_++)__accu0__.append(k);return __accu0__}();
self.py_values.remove(item[1]);
print(file_type(filename));
export var workers=function(){var __accu0__=[];for(var row of reader)__accu0__.append(ageName(row[0],row[1]));return __accu0__}();
tty.setraw(sys.stdin.fileno());
User.__unicode__=User.get_full_name();
self.blocks.py_clear();
pool.apply_async(func,__kwargtrans__({callback:callback}));
main();
frame.Show();
var table=list(itertools.product([false,true],__kwargtrans__({repeat:n})));
var out=pcorr.__getitem__([np.nanargmax(np.abs(pcorr),__kwargtrans__({axis:0})),np.arange(pcorr.shape[1])]);
process.start();
len(l);
sys.exit(0);
source.yaml;
out.__setitem__([tuple([0,null,1]),mask],B.__getitem__([tuple([0,null,1]),tuple([0,null,1]),tuple([0,null,-1])]).__getitem__([tuple([0,null,1]),mask.__getitem__([tuple([0,null,1]),tuple([0,null,-1])])]));
root.focus_force();
bool(urlparse(url).netloc);
self.wfile.write(f.read());
Py_Finalize();
var id=models.UUIDField(__kwargtrans__({primary_key:true,py_default:uuid.uuid4,editable:false}));
platform.version();
var data=f.read();
print(binascii.b2a_hex(os.urandom(15)));
fn_globals.py_update(__all__);
f();
pycallgraph.start_trace(__kwargtrans__({filter_func:filtercalls}));
var uniques=npi.intersection(x,y);
print(s.__getslice__(0,117,1));
ifr.ifr_flags|=IFF_PROMISC;
pickle.dump(_object,self.transport);
var im=cv2.imread(sample);
var email=db.Column(db.String(45),__kwargtrans__({unique:true}));
len(y[b]);
len(result.index.names)>1;
njit(simulator);
box.show();
os.setsid();
export var end_time=time.time();
var cursor=collection.find(dict({}));
make_xml().write(sys.stdout);
new set([new set([form.py_name()])]);
var s=input();
socket.listen(1);
do_something();
show(p);
var id=Column(Integer,__kwargtrans__({primary_key:true}));
np.where(np.eye(A.shape[0],__kwargtrans__({dtype:bool})),A,A.T+A);
tuple([[0,0,0,0,0,0,0,17,0,0,0,17,0]]);
window.show();
lst[out.sum(__kwargtrans__({axis:1}))==1];
var res2=numpy.array(list(zip_longest(...a,__kwargtrans__({fillvalue:0})))).transpose();
arr.reshape(-1,la);
sys.exit(-1);
var df=pd.concat([df]*1E4).reset_index(__kwargtrans__({drop:true}));
print(e.message);
self.__dict__=self;
export var editAdForm=AdForm(__kwargtrans__({obj:ad}));
var l=numpy.array(l,__kwargtrans__({dtype:int}))*2;
self._is_owned();
a.extend(list(range(0,1E6)));
obj.do_something();
var app=QtGui.QApplication([]);
process(f);
tuple([np.linalg.det(individual.reshape(self.N,self.N))]);
var title=models.CharField(__kwargtrans__({max_length:128,blank:true}));
print(len(line));
int(value);
sns.barplot(__kwargtrans__({x:data.index,y:data,palette:np.array(pal.__getslice__(0,null,-1))[rank]}));
np.ascontiguousarray(c);
myFunc();
client.login(user,passwd);
var dist=math.sqrt(Math.pow(x2-x1,2)+Math.pow(y2-y1,2));
var yests=[];
MyModel.BLAH_GOO_GOO_GAA_GAA;
var thread=threading.Thread(__kwargtrans__({target:target}));
self._server.show();
range_start+int(drand48()*range_size);
text_file.write(contents);
g.__code__===f.__code__&&f.__code__===creator.__code__.co_consts[1];
len(net.layers[1].blobs);
plt.figure();
export var current_milli_time=function __lambda__(){return int(round(time.time()*1E3))};
button.grid(__kwargtrans__({row:1,column:4}));
shutil.copyfileobj(source,target);
print(arr[10]);
self.user.delete();
datetime.datetime(2010,5,17,0,0);
export var xticks=ax.xaxis.get_major_ticks();
max(function(){var __accu0__=[];for(var s of findees)__accu0__.append(string.rfind(s));return py_iter(__accu0__)}());
self.panel.SetFocus();
print(list(map(tuple,list(od.py_values()))));
self.features=function(){var __accu0__=[];for(var [k,v]of list(kwargs.py_items()))__accu0__.append([k,v]);return dict(__accu0__)}();
var py_values=np.array([1,1,1,1,1]);
pd.DataFrame(df.py_values[slc],df.index[slc]);
var id=Column(Integer,__kwargtrans__({primary_key:true}));
self.py_name=py_name;
var __left0__=proc.communicate();var stdout=__left0__[0];var stderr=__left0__[1];
df.ix.__getitem__([0,0]);
dict(function(){var __accu0__=[];for(var [k,v]of compat.iteritems(data))__accu0__.append(tuple([k,v.dropna().to_dict()]));return py_iter(__accu0__)}());
(a>1).all()&&(a<5).all();
print(get_last_non_zero_index([0,0,0]));
tk.Tk.__init__(self,...args,__kwargtrans__(kwargs));
list(set(a).difference(b)).__getslice__(0,100,1);
array([[0,2,6],[9,4,8],[7,5,1]]);
print(s.to_string(__kwargtrans__({index:false})));
print(score_sum_py(pd.factorize(df.page_id)[0],df.score));
buffer+=ser.read(1);
f(...args,__kwargtrans__(kwargs));
Base.prepare();
f.write(tempfile.read());
plt.show();
var a=TestC();

os.rename(renamee,pre+new_extension);
var max_index=max_sub[0];
var __except0__=ValidationError(self.errors);__except0__.__cause__=null;throw __except0__;
setup.py;
lst.append(x);
[true,false];
t.show();
ax.set_yticks(np.arange(nba_sort.shape[0])+.5,__kwargtrans__({minor:false}));
f.readinto(data);
var root=Tkinter.Tk();
(function(){var __accu0__=[];for(var x of groupby(L))__accu0__.append(x[0]);return __accu0__})();
obj.__dict__;
var fig=plt.figure(__kwargtrans__({figsize:tuple([1,1]),dpi:400}));
module_a.py;
export var topbottom=np.empty(tuple([1,2*im.shape[1]]),__kwargtrans__({dtype:np.uint16}));
fake_restaurant.delete();
var user=request.user;
mpl.rcParams.py_update(saved_state);
var process=subprocess.Popen(cmd,__kwargtrans__({shell:true}));
self.b.pack();
sum(map(str.islower,string));
p.cpu_percent(__kwargtrans__({interval:1}));
np.bincount(diag_idx.ravel(),__kwargtrans__({weights:a.ravel()}));
plt.clf();
var data=function(){var __accu0__=[];for(var x of data)__accu0__.append(str(round(float(fractions.Fraction(x)),2)));return __accu0__}();
bokeh.io.show(p);
var my_string=my_string.translate(trans);
var d=dict({});
Potion.all_potions.append(self);
plt.subplot(122);
sum(data)/n;
var result=list(chain.from_iterable(function(){var __accu0__=[];for(var w of input_list)__accu0__.append(pattern.py_split(w));return py_iter(__accu0__)}()));
Py_Finalize();
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
np.full(tuple([10,5]),list(vals));
(function(){var __accu0__=[];for(var x of k)if(__in__(x,kDash))__accu0__.append(x);return __accu0__})();
cv2.waitKey(0);
var temp=temp.__getslice__(1,null,1);
print(os.__file__);
print(np.squeeze(a));
print(s.format(...x));
np.random.shuffle(ages);
file.close();
plt.ylim(.5,4);
candlestick(plt.gca(),quotes);
grid.flat[np.flatnonzero(mask)[second_mask]]=100;
leadingzerocounts[0]+=4;
var new_df=old_df[list_of_columns_names];
var data=data.astype(dt);
export var rdd2=sc.parallelize([4,5,6]);
export var oldstdout=sys.stdout;
response.url;
var x=np.arange(10);
export var gender=models.BooleanField(__kwargtrans__({choices:BOOL_CHOICES}));
server.start();
self.obj=obj;
int(Decimal(2));
print(tuple([f.__name__,timeit.timeit(f,__kwargtrans__({number:1E3}))]));
k[v.index(max(v))];

var x=[k]*len(v);
var ax=fig.add_subplot(2,1,1);
f.truncate();
msg.attach(part2);
shutil.copyfileobj(source,target);
time.localtime(time.time())[2];
web.input(__kwargtrans__(my_args));
var id=db.Column(db.Integer,__kwargtrans__({primary_key:true}));
export var html_decoded_string=parser.unescape(html_encoded_string);
print(response.read());
[1,2]==sorted([2,1]);
f(0,1,0);
print(current_credentials.access_key);
getattr(mod,class_name);
line(res,vertices[0][0],vertices[1][0],color,5);
Y[X==X.max(__kwargtrans__({axis:0}))].reshape(X.max(__kwargtrans__({axis:0})).shape);
pdb.set_trace();
[2.29,47.77];
[2.01,57.28];
[2.61,66.82];
[2.49,85.85];
[2.55,104.9];
[2.65,114.47];
var sess=tf.Session();
QtGui.QMainWindow.__init__(self,parent);
var df=pd.read_csv(data,__kwargtrans__({delim_whitespace:true}));
root.mainloop();
export var rand_numbers=np.random.random(5);
!bool;
ch.flush();
encapsulated();
deletemylist.__getslice__(0,n,1);
sys.stdout=capturer;
procs[-1].start();
p.stdout.close();
np.testing.assert_allclose(res1,res2);
print(i,d[i]);
ax.autoscale(false);
self.statusitem.setHighlightMode_(1);
self.table=QtGui.QTableView(self);
os.path.join(directory,filename);
var A=np.delete(A,2,1);
os._exit(1);
export var rivers=np.ma.masked_where(rivers==0,rivers);
event.Skip();
self.func=func;

var new_index=random.randrange(0,len(data));
socketIO.wait(__kwargtrans__({seconds:1}));
var ssh=paramiko.SSHClient();
var ax1=fig.add_subplot(121);
self.client.connect(self.host,self.port);
Py_DECREF(mylist);
HiddenFormMixin.__init__(self,...args,__kwargtrans__(kwargs));
self._request=urllib.request.urlopen(url);
plt.show();
student.courses[c.title]=form[c.title].data;
proc.kill();
mylist.append(tuple([pair[0],pair[1]]));
print(start.date());
r.wait();
pd.DataFrame(a).fillna(0);
d[key]=value/2;
self.__dict__.py_update(...args,__kwargtrans__(kwargs));
print(repr(p.value));
min(function(){var __accu0__=[];for(var p of PlayerList)__accu0__.append(min(p.__getslice__(1,null,1)));return py_iter(__accu0__)}());
solve([sigma*(y-x),x*(rho-z)-y,x*y-beta*z],[x,y,z]);
export var td2=datetime.timedelta(__kwargtrans__({hours:t.hour,minutes:t.minute,seconds:t.second}));
var b=function(){var __accu0__=[];for(var [i,[x,y]]of enumerate(zip(s,s.__getslice__(1,null,1))))if(y>x+2)__accu0__.append(i+1);return __accu0__}();
subplot(4,1,4);
f.seek(max(fsize-1024,0),0);
tile_frame.pack();
time.sleep(.5);
time.sleep(1);
print(py_typeof(img_ipl));
x+=1;
repr(self.dictify());
print(json.dumps(data,__kwargtrans__({sort_keys:true,indent:4})));
a.seek(0);
var a=[1,2];
itemgetter(...wanted_keys)(my_dict);
np.random.seed(0);
print(map(itemgetter(1),g));
get_key(d,2);
do_something_else();
print(p.stdout.read());
x.__getitem__([tuple([1,4,2]),tuple([1,4,2])]);
self.show();
st.norm.cdf(1.64);
ax.set_xticks(np.arange(n)-.5);
map(itemgetter(0),sorted(list(dct.py_items()),__kwargtrans__({key:itemgetter(1),reverse:true})));
pprint(combine(l));
var opener=urllib.request.build_opener(urllib.request.HTTPHandler);
var s=fp.read();
client.server_receive_file(binary_data);
func(__kwargtrans__(args));
var result=db.engine.execute(sql);
r.raw.read(10);
self.py_items=set(py_items);
var L=[0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,2,2,2];
export var definition=CharField(__kwargtrans__({max_length:100}));
biglist1.py_sort(__kwargtrans__({key:tuple([operator.itemgetter(2),operator.itemgetter(0)])}));
all(function(){var __accu0__=[];for(var x of py_items)__accu0__.append(x==py_items[0]);return py_iter(__accu0__)}());
np.where(A>50);
ax.cla();
pl.show();
s.listen(5);
self.dialog.setFocusPolicy(QtCore.Qt.StrongFocus);
var graph=facebook.GraphAPI(ACCESS_TOKEN);
var dist=math.sqrt(Math.pow(x2-x1,2)+Math.pow(y2-y1,2));
outputStream.close();
var response=requests.py_get(url,__kwargtrans__({stream:true}));
time.sleep(.1);
time.sleep(1);
hashlib.sha1(s).hexdigest();
biglist.__setslice__(0,null,null,newlist);
c.f(2);
plt.xticks([.4,.14,.2,.2],__kwargtrans__({fontsize:50}));
proc.communicate();
export var treeview=gtk.TreeView();
(function(){var __accu0__=[];for(var i of ind)__accu0__.append([i,l.__getslice__(sum(ind.__getslice__(0,i-1,1)),sum(ind.__getslice__(0,i-1,1))+i,1)]);return dict(__accu0__)})();
c.bin;
(function(){var __accu0__=[];for(var tag of BeautifulSoup(doc,__kwargtrans__({parseOnlyThese:links})))__accu0__.append(tag);return __accu0__})();
self.typename=typename;

time.sleep(.05);
print(url);
loop2();
fig.colorbar(surf,__kwargtrans__({shrink:.5,aspect:5}));
plt.imshow(np.dstack([im,im,im]));
sys.stdout.flush();
new_extpost.save();
self.__dict__[key]=value;
export var Lv=np.array(Lv);
var fig=pyplot.figure();
a.tostring();
self.i=1;
L.py_sort(__kwargtrans__({key:function __lambda__(x){return map(lower_if_possible,x)}}));
time.sleep(5);
turtle.getscreen()._root.mainloop();
wdiplay(img);
your_dict[x];
goodrows.append(row);
int(time.mktime(d.timetuple()))*1E3;
parser.add_option_group(group);
uniq.view(data.dtype).reshape(-1,data.shape[1]);
sys.exit(0);
self.get_full_name();
var logger=logging.getLogger(__name__);
some_module.classinstance=MyClass();
run();
self.client.disconnect();
self._x=value;
var int_list=function(){var __accu0__=[];for(var i of line.py_split())__accu0__.append(int(i));return __accu0__}();
print(filecmp(sys.argv[1],sys.argv[2]));
self.particles.extend(py_next(f));
tuple([str(lst[0]),lst.__getslice__(1,null,1)]);
auth.set_access_token(access_token,access_secret);
var __left0__=tuple([t.ix[1],t.ix[0]]);t.ix[0]=__left0__[0];t.ix[1]=__left0__[1];
var cj=cookielib.LWPCookieJar();
log(msg,__kwargtrans__({x:5,y:6}));
d[k]=v;
tfidf.__getslice__(0,1,1);
ax4.xaxis.set_visible(false);
logging.basicConfig(__kwargtrans__({level:log_level}));
(function(){var __accu0__=[];for(var t of timesteps)__accu0__.append(np.mean(model.trace(t).gettrace()));return __accu0__})();
list[i]+=2;
show_log_button.Bind(wx.EVT_BUTTON,self._show_log);
conn.close();
plt.yticks(x,x);
var xs=np.arange(512);
inner_lst.append(item);
var app=web.application(urls,__all__);
dc.DrawBitmap(self.bmp,0,0,true);
print(line_intersection(tuple([A,B]),tuple([C,D])));
dill.dumps(lambdified_expr);
print(function(){var __accu0__=[];for(var [i,val]of enumerate(A,1))__accu0__.append(val+[i]);return __accu0__}());
export var INTP=ctypes.POINTER(ctypes.c_int);
clf.fit(X[outer_train],Z[outer_train]);
listy[2].append(1);
ifaces;
var root=Tk();
doSomething(x);
var data=f.read();
out.writelines(lines);
self._thread.close();
export var timestamp1=calendar.timegm(d.timetuple());
var driver=webdriver.Firefox(__kwargtrans__({firefox_profile:profile}));
sys.path.insert(0,basePath);
listNew.extend([element,element]);
list(set(neighbors));
export var newarr=function(){var __accu0__=[];for(var a of arr)__accu0__.append(splitfirst(a));return __accu0__}();
export var f2=np.exp(-copper.__getitem__([tuple([0,null,1]),1])*.08128*8.96);
self.filter(__kwargtrans__({is_vegetarian:true}));
var L=function(){var __accu0__=[];for(var i=0;i<10;i++)__accu0__.append([0]*10);return __accu0__}();
student.save();
export var autorestart=py_true;
var client=paramiko.SSHClient();
var app=QtGui.QApplication(sys.argv);
np.piecewise(x,conds,funcs);
plt.figure(2);
print(pop_list(nodes,5,node_list));
sorted(list(s2));
print(list(d.py_values()));
var __except0__=UnwindStack(function __lambda__(){return _addup(n)});__except0__.__cause__=null;throw __except0__;

os.stat(path);
self.response.write(template.render());
df[df.columns.__getslice__(5,null,1)[ridx]];
os.rename(oldname,newname);
var tree=et.fromstring(sxml);
var data=[tuple([1,2]),tuple([40,2]),tuple([9,80])];
cv2.circle(mask,tuple([100,70]),25,0,-1);
var writer=csv.writer(fout);
export var correct_prediction=tf.equal(tf.round(tf.nn.sigmoid(pred)),tf.round(y_));
f.close();
sum(zip(a,a.__getslice__(0,null,-1)),tuple([])).__getslice__(0,len(a),1);
var __except0__=MyCustomException(str(e));__except0__.__cause__=null;throw __except0__;
time.sleep(10);
aDict[key]=value;
list(map(func,itertools.zip_longest(...sequences)));
print(b.shape);
newList.append(tuple([oldList[i+1][0],oldList[i][1]]));
self.table.setModel(model);
(function(){var __accu0__=[];for(var x of list(a.py_keys()))__accu0__.append(x.count);return __accu0__})();
var connection=pika.BlockingConnection();
(function(){var __accu0__=[];for(var x of L)__accu0__.append(x*2);return __accu0__})();
hex(chars[0]);
np.abs(a-b)<=atol+rtol*np.abs(b);
logger.setLevel(logging.DEBUG);
time.sleep(1);
var fig=plt.figure();
l.save();
export var u1=function(){var __accu0__=[];for(var _=0;_<len(part);_++)__accu0__.append(random.uniform(0,phi1));return py_iter(__accu0__)}();
itertools.chain(do_something(),do_something_else());
mlab.show();
canvas.PrepareDC(dc);
form.save();
self.allClasses.append(instance);
p.stdin.close();
var data=sys.stdin.readlines();
v[value].append(key);
platform.release();
var data=infile.read();
list[idx]=item;

tuple([[0,0,0,17,0,0,0,0,0,0,0,40,0]]);
sum(map(operator.mul,topo.__getslice__(0,-1,1),topo.__getslice__(1,null,1)));
os.remove(small);
var mask=data_with_zeros.a==0&data_with_zeros.b==0;
export var ids=list(itertools.islice(unique_sequence,1E3));
self.orange_button.Bind(wx.EVT_BUTTON,self.orange_button_click);
export var notNan=sliding_window(np.logical_not(np.isnan(a)),tuple([2,2]));
var soup=BeautifulSoup(html_to_parse);
plot_graph1();
lst[-1]+=st.__getslice__(0,left,1);
export var dstname=os.path.join(dst,py_name);
var line=p.stdout.readline();
print(mystring[0]);
export var myVariable=testVariable||myVariable;
var db=SQLAlchemy(app);
n*s+m*s==(n+m)*s;
export var new_cols=list(zip(df1.columns.get_level_values(0)));
tuple([id(a[0]),id(a[1])]);
set(sample_generator(1E4))^set(range(1E4));
np.array(map(function __lambda__(x){return round(x)-1},result),__kwargtrans__({dtype:np.uint64}));
var result=function(){var __accu0__=[];for(var [i,j]of zip(list1,list2))__accu0__.append(function(){var __accu1__=[];for(var [a,b]of zip(i,j))__accu1__.append(a*b);return __accu1__}());return __accu0__}();
self.numbers.append(self);
thrd2.start();
nx.draw(G);
zip_ref.close();
var result=base64.b64decode(body);
expense.tags.add(...self.tags.all());
len(l);
sys.stdin.readline();
var __left0__=result;var a=__left0__[0];var b=__left0__[1];
scipy.__version__;
dict(function(){var __accu0__=[];for(var [k,v]of x.py_items())__accu0__.append(tuple([k.lower(),lower_keys(v)]));return py_iter(__accu0__)}());
df.where(m,n,__kwargtrans__({axis:1}));
var a=np.arange(1,1E5,__kwargtrans__({dtype:float}));
var fig=plt.figure(__kwargtrans__({figsize:plt.figaspect(1)}));
im2.set_data([],[]);
new_list.append(x+y);
G.add_edges_from(function(){var __accu0__=[];for(var x of L1)for(var y of L2)__accu0__.append(tuple([x,y]));return __accu0__}());
os.makedirs(tmp);
f();
win.show_all();
var df=df[cols];
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
ax.plot(list(range(1024)));
export var soda=a+b;
t.start();
pprint(data);
var soup=BeautifulSoup(text);
fh.close();
response.close();
lst.__setslice__(i,i+2,null,[nxt,cur]);
var k=function(){var __accu0__=[];for(var x of l)__accu0__.append(ord(x.upper())-64);return __accu0__}();
outfile.write(line);
var key=models.CharField(__kwargtrans__({max_length:240,db_index:true}));
var im=np.array(first_subreg*255,__kwargtrans__({dtype:np.uint8}));
usleep(100);
(y!=y.shift()).cumsum();
list(int_filter(py_items));
ax1.set_ylim(...np.log10(olim));
img.show();
export var csv_f=csv.reader(f);
PLT.axis([x.min(),x.max(),y.min(),y.max()]);
t.seek(0);
self.frame.Show(true);
menu.show_all();
a+b.__getslice__(i,null,1);
self.image=ImageTk.PhotoImage(self.photo);
new_list.append(intermediate_dict[i]);
var count=len(total)-np.count_nonzero(sum);
os.remove(filename4);
export var lengths=function(){var __accu0__=[];for(var x of lst)__accu0__.append(len(x));return __accu0__}();
f.seek(0);
shutil.rmtree(tmpdir);
var dist=np.abs(X.__getitem__([tuple([0,null,1]),np.newaxis])-Y);
print(function(){var __accu0__=[];for(var x of a.__getslice__(1,null,1))__accu0__.append(int(x));return __accu0__}());
var data=cgi.FieldStorage();

var results=cursor.fetchone();
var d=datetime.date(__kwargtrans__({year:1940,month:1,day:1})).year;
a2b_hex();
self.assertAlmostEqual(em(1,1),.6765,4);
var x=df.reset_index();
foo.__getslice__(1,2,1);
print(tokenize.untokenize([tuple([toktype,tokval])]));
axes.set_xticks([]);
show();
bob4.save();
bob5.save();
bob6.save();
new set([dict([[object|getattribute,field]])]);
var words=line.py_split();
p.start();
plt.subplot(2,1,1);
c.save();
var A=array([[0,1,2],[0,2,0]]);
ax0a.plot(x,y);
tuple([new set([new set([record.c])]),new set([new set([record.e])])]);
var s=random.randint(0,n-1)+1;
py_get();
decorated.py_sort(__kwargtrans__({key:function __lambda__(v){return tuple([v[1],-v[2]])}}));
s.order();
var X_train=np.random.randn(6,2,2);
var x=np.cumsum(np.random.random(1E3)-.5);
dict(function(){var __accu0__=[];for(var [k,vs]of self.O.py_items())__accu0__.append(tuple([k,vs[x]]));return py_iter(__accu0__)}());
var pool=Pool();
readfile.close();
var nzsum=mat[ixs[nzmask]].sum(__kwargtrans__({axis:0}));
self.gzfile=gzip.open(filename);
datetime.strptime(time1,format);
ax.autoscale_view();
parser.close();
f.close();
df[col]=X.__getitem__([tuple([0,null,1]),i]);
scipy.stats.norm(0,1);
psycopg2.extensions.register_type(psycopg2.extensions.UNICODEARRAY);
print(x.__getslice__(0,n,1));
var instance=getattr(modul,class_name)();
__in__([1,20],a.tolist());
lst.append(arg);
np.random.seed(1977);
cur.execute(query);
ans.append(list(cur_set));
msg.attach(body);
[[[2,4,6],[1,4,7]]];
export var unique_list=list(map(itemgetter(0),groupby(yourList)));
cursor.execute(query,data);
out.reshape(np.asarray(shp)*N);
screen.fill(pygame.Color(255,255,255));
py_typeof(_);
[2,2.0017];
self.view.setModel(self.model);
out_queue.put(test);
root.columnconfigure(0,__kwargtrans__({weight:1}));
dff.dropna(__kwargtrans__({thresh:len(dff)-2,axis:1}));
set(a).intersection(b);
pd.Series(a1).isin(a2).any();

output.write(line);
var __except0__=Exception();__except0__.__cause__=null;throw __except0__;
pp(list(zip(...grid)));
var days=function(){var __accu0__=[];for(var i=0;i<(end-start).days+1;i++)__accu0__.append(start+timedelta(__kwargtrans__({days:i})));return py_iter(__accu0__)}();
time.sleep(10);
value.py_update(function(){var __accu0__=[];for(var key of all_second_keys)if(!__in__(key,value))__accu0__.append(tuple([key,0]));return py_iter(__accu0__)}());
self.text=tk.Text(self);
indices[i]+=1;
ax2.imshow(field2,__kwargtrans__({cmap:plt.cm.YlGn,vmin:_min,vmax:_max}));
sys.settrace(self.oldtrace);
export var my_struct=np.array([tuple([1,2])],__kwargtrans__({dtype:my_struct_type}));
ax.set_ylim([-.1,1.1]);
allnames().visit(t);
(function(){var __accu0__=[];for(var _=0;_<1;_++)__accu0__.append([b.py_pop(0),b.py_pop(0)]);return dict(__accu0__)})();
string.__getslice__(0,idx!=-1?idx:len(string),1);
pylab.show();
stopButton.pack();
output.setparams(data[0][0]);
df;
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
(function(){var __accu0__=[];for(var x of zip(...myTuples))__accu0__.append(sum(x));return __accu0__})();
YarnLogger.setup_logger();
plt.plot(X,Y,__kwargtrans__({lw:0}));
print(a,b,c,d);
s.listen(1);
np.column_stack(tuple([unq_x,avg_y,std_y]));
df.iloc[df.index.get_loc(window_stop_row.py_name)];
var c=np.ones(tuple([2,6]));
sorted(set(a))[-2];
list(range(5))+list(range(10,20));
contourf(x,y,H1,levels1,__kwargtrans__({cmap:cmap_nonlin1}));
export var new_dict_deepcopy=deepcopy(my_dict);
grad*C*tf.transpose(Ainv);
plt.colorbar();
print(x);
var resp=requests.py_get(__kwargtrans__({url:url,params:params}));
var results=pbex.run();
var df=pd.concat(valid(chunks));
var model=models.Progress;
1*sum(function(){var __accu0__=[];for(var i of xx&yy)__accu0__.append(i*w[i]);return py_iter(__accu0__)}())/sum(function(){var __accu0__=[];for(var i of x)__accu0__.append(i*w[i]);return py_iter(__accu0__)}());
od.py_setdefault(a,[]).append(b);
export var urlParams=urlparse.parse_qs(urlparse.urlparse(url).query);
object()==object();
cv2.imwrite(face_file_name,sub_face);
export var ip_list=[];
x+2;
var array=function(){var __accu0__=[];for(var [i,j]of product(list(range(...r)),list(range(...s))))__accu0__.append(LoL[i][j]);return __accu0__}();
datalisten_thread.start();
abs((d2-d1).days);
os.makedirs(dir);
self._value;
tk.Tk.__init__(self);
patch_jedi();
source._get_numeric_data();
list(map(function __lambda__(x){return x==0||x==1?false:true},map(int,lst)));
var s=socket.socket();
var b=function(){var __accu0__=[];for(var x of a)__accu0__.append(ctr[frozenset(x)]==1);return __accu0__}();
dt.fit(df.ix.__getitem__([tuple([0,null,1]),tuple([0,2,1])]),df.dv);
x.g(2);
B.__setitem__([tuple([0,null,1]),tuple([0,null,1]),1],1);
(function(){var __accu0__=[];for(var file of files)__accu0__.append([file,any(function(){var __accu1__=[];for(var ext of extensions)__accu1__.append(file.endswith(ext));return py_iter(__accu1__)}())]);return dict(__accu0__)})();
token.get_access_token(uri.query);
plt.suptitle(date);
raise_exception();
var pool=multiprocessing.Pool(__kwargtrans__({processes:count}));
print(dict(d));
plt.cm.RdYlGn._segmentdata;
var out=np.py_split(sidx,np.nonzero(sorted_ids.__getslice__(1,null,1)>sorted_ids.__getslice__(0,-1,1))[0]+1);
myseries_one.iloc.__getslice__(0,2,1);
var fig=plt.figure();
var delta=datetime.timedelta(__kwargtrans__({days:1}));
yaml.dump(data,stream,OrderedDumper,__kwargtrans__(kwds));
list(range(...args));
var resp=client.service.Execute(req);
wav_file.close();
p.communicate();
var mask=mahotas.dilate(mask,np.ones(tuple([48,24])));
export var abs_file_path=os.path.join(script_dir,rel_path);
sleep(1);
var hmag=np.array(hmag);
python-v;
os.remove(path);
sys.path.remove(rundir);
conn.sendall(error);
df1.fillna(1).py_sort(__kwargtrans__({axis:1})).eq(df2.fillna(1).py_sort(__kwargtrans__({axis:1}))).all().all();
fig.colorbar(coll);
[snip];
print(x[y][i][z]);
n.getme();
export var fastest=ranked[0][1];
uo_fclose(hFile);
var x=[6,7,8,9,10,11,12];
float(n)/(1<<int(log(n,2)));
pylab.ylim(__kwargtrans__({ymin:0}));
time.sleep(1);
var x=np.array([0,0,1,1,2,2]);
print(settings.myList[0]);
tk.Tk.__init__(self);
f();
ax2.set_ylim([np.amin(image.__getitem__([tuple([0,null,1]),5,5])),np.amax(image.__getitem__([tuple([0,null,1]),5,5]))]);
plt.imshow(skel);
len(get_file_contents(filename));
true;
list(chain(...zip(l,map(partial(add,1),l))));
data.__dict__.py_update(json.parse(data));
cursor.close();
f(a,b);
G.add_path([2,4,0,5]);
attr(...args,__kwargtrans__(kwargs));
reactor.do(thing2);
var new_data=new_data.reshape(tuple([4,5,10]));
test();
msg.send();
ax.set_xticklabels(lab);
var series=series.astype(float);
print(X[0],Y[0],calc_fast(X[0],Y[0]));
self.transitions=transitions;
tornado.ioloop.IOLoop.instance().add_callback(self.loop);
sys.stdout.flush();
tuple([l[0],l[-1]]);
fig.autofmt_xdate();
var ax=plt.gca();
export var buildings=get_hospital_buildings(hospital_obj);
export var finished=cv2.warpPerspective(img,transform,img.shape.__getslice__(1,null,-1));
df.iloc.__getitem__([tuple([0,null,1]),tuple([1,null,1])]).idxmax(__kwargtrans__({axis:1}));
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
var str_list=list(filter(len,str_list));
print(objfunc([1,0]));
var df=pd.DataFrame(__kwargtrans__({data:d}));
bool(dict({}))==false;
var __left0__=tuple([b,a+b]);var a=__left0__[0];var b=__left0__[1];
var __except0__=unittest.SkipTest(message);__except0__.__cause__=null;throw __except0__;
platform.python_compiler();
export var ax4=fig.add_subplot(2,2,4);
numpy.linalg.norm(a-b);
print(tuple([len(al),al.get_alignment_length()]));
getattr(obj,self.py_name);
main();
zip(list(range(len(l)-1,-1,-1)),l);
f(...args,__kwargtrans__(kwargs));
print(ruamel.yaml.dump(data,__kwargtrans__({allow_unicode:true})));
sleep(1);
aList.append([xc,yc]);
true;
plt.plot(t,f(t));
var output=PdfFileWriter();
var r=random.sample(list(range(len(x))),10);
export var X_train_1=X_train[y_train!=0];
msg.attach(image);
self._list.append(o);
sys.stdout.flush();
sherr.py_pop(0);
_api_client.ExecuteBatch(batch_request,cells.GetBatchLink().href);
step4.communicate()[0];
new set([GOOGLE_APP_ENGINE])/dev_appserver.py;
print(is_true(x)||is_false(x));
var session=Session(__kwargtrans__({key:seshKey}));
var result=function(){var __accu0__=[];for(var row of cursor.fetchall())__accu0__.append(dict(zip(fields,row)));return __accu0__}();
(function(){var __accu0__=[];for(var x of srclist)__accu0__.append(f(x,fixed));return __accu0__})();
print(link.text);
df.columns;
var fig=plt.figure();
(function(){var __accu0__=[];for(var [i,x]of enumerate(Lx))__accu0__.append(x+Ly[i]);return __accu0__})();
stuff();
var n=n+1;
export var pInt=POINTER(c_int)();
atexit.register(__terminate);
self.browserHandle=webdriver.Firefox(firefoxProfile);
pylab.show();
sys.exit(!result.wasSuccessful());
binascii.unhexlify(x);
export var image_pixels=image.load();
var id=Column(Integer,__kwargtrans__({primary_key:true}));
nodes.CallBlock(call,[],[],[]);
export var resultcode=proc.wait();
output.append(char);
df.sample(__kwargtrans__({frac:1}));
var x1=np.linspace(0,.4,100);
shutil.copyfile(source,destination);
__in__(word,wordList);
var fig=plt.figure();
self.ax.relim();
y[0];
elem.py_clear();
s.login(login,password);
app.exec_();
var d=a.__getslice__(1,null,2);
var df1=pd.DataFrame(function(){var __accu0__=[];for(var x of df.word_prob_pair)__accu0__.append(dict(x));return __accu0__}());
app.register_blueprint(feed);
print(py_typeof(element));
s.loc[~np.isfinite(s)&s.notnull()]=np.nan;
myFunc(false,false,true);

canvas.setPageSize(width,height);
chimpchat.shutdown();
var ssh_client=paramiko.SSHClient();
print(tuple([i,key,value]));
session.flush();
var app=Flask(__name__);
(function(){var __accu0__=[];for(var d of dicts)for(var [k,v]of list(d.py_items()))__accu0__.append([k,v]);return dict(__accu0__)})();
var layout=QtGui.QVBoxLayout();
fun(ctypes.byref(indata),5,6,ctypes.byref(outdata));
self.picture=QtGui.QPixmap(imagePath);
var s=pd.Series(Math.pow(np.arange(4),2),__kwargtrans__({index:np.arange(4)}));
var tree=Tree();
var __left0__=plt.subplots(__kwargtrans__({nrows:4,ncols:4}));var fig=__left0__[0];var axes=__left0__[1];
list(itertools.accumulate(nums));
data.append(function(){var __accu0__=[];for(var c of row.getchildren())__accu0__.append(c.text);return __accu0__}());
child.show();
print(calendar.timegm(utc_dt.timetuple()));
self.panel=wx.Panel(self,wx.ID_ANY);
var user=models.OneToOneField(User);
first_list.append(ls[0]);
var app=Flask(__name__);
print(function(){var __accu0__=[];for(var x of list_num)__accu0__.append(myround(x));return __accu0__}());
pool.join();
scipy.nanmean(b_padded.reshape(-1,R),__kwargtrans__({axis:1}));
var text=in_file.read();
cnxn.close();
print(Bar().x);
classifier.fit(X_train,y_train);
var new_list=[];
py_typeof(dates[0])==pandas.tslib.Timestamp;
var df=df.append(new_rows).sort_index().reset_index(__kwargtrans__({drop:true}));
window.show();

var a=Counter(your_list);
axs[0].xaxis.set_major_locator(x_major_lct);
line(src,Q4,Q1,Scalar(0,0,255),1,CV_AA,0);
wn.synsets(word);
var reader=csv.DictReader(fh,__kwargtrans__({fieldnames:header}));
bar();
os.symlink(target,link_name);
var queryset=Simple.objects.all();
var fig=plt.figure(__kwargtrans__({figsize:tuple([10,10])}));
print(sys.path);
self.data=numpy.delete(self.data,i,0);
Process(__kwargtrans__({target:loop_b})).start();
np.testing.assert_allclose([1],[[1]]);
data+=np.random.normal(__kwargtrans__({size:data.shape}));
call_quack();
var a=np.frombuffer(ArrayType.from_address(addr));
var df=df.dropna();
export var browswer_proc=subprocess.Popen(cmd,__kwargtrans__({shell:true}));
var dist=np.sqrt(dist);
np.median([0,1,np.inf]);
vdisplay.start();
myqserver.delete_current();
var frame=cv2.flip(frame,0);
leng(s);
multiprocessing.freeze_support();
[i-1,i+1];
var G=nx.Graph();
plt.register_cmap(__kwargtrans__({cmap:newcmap}));
var b=fig2.add_subplot(2,2,i);
var int_list=models.CommaSeparatedIntegerField(__kwargtrans__({max_length:200}));
Py_DECREF(newobj);
sum(100*Math.pow(x.__getslice__(1,null,1)-Math.pow(x.__getslice__(0,-1,1),2),2)+Math.pow(1-x.__getslice__(0,-1,1),2));
tornado.ioloop.IOLoop.instance().start();
var parser=argparse.ArgumentParser();
plt.plot(x,y);
print(df);
output_notebook();
models.IntegerField.__init__(self,verbose_name,py_name,__kwargtrans__(kwargs));
print(tab[i]);
permutations(string_copy,step+1);
self.delta=wx.Point(0,0);
Matrix.map(function __lambda__(a,b){return a-b},self,other);
app.config.from_pyfile(config,__kwargtrans__({silent:true}));
self.username;
np.triu(out);
os.makedirs(dir);
var draw=ImageDraw.Draw(image);
glLoadIdentity();
1/2;
var ax2=ax1.twinx();
result[i]=func1d(x);
var df=pd.Dataframe(dict);
self.mthread=QThread();
self.py_get(__kwargtrans__({timeout:1E3}));
cursor.execute(sql,[this_year]);
reactor.run();
time.sleep(1);
var fig=plt.figure();
max(lo,min(hi,x));
list(grpname.py_values());
foo();
self.file.close();
allkey.append(key);
l.append(hash(tuple([x,y])));
hash(self.a)^hash(self.b);
print(myForm.__dict__);
fig.canvas.blit(ax.bbox);
export var other_data=data[mask];
cls.static_method_to_call();
wb.Save();
var temp=function(){var __accu0__=[];for(var i=1;i<5;i++)__accu0__.append(t.count(str(i))/len(x));return __accu0__}();
var df=pd.DataFrame(np.random.randn(10,6));
app.register_blueprint(mod);
export var html_content=urllib.request.urlopen(req).read();
response;
var __left0__=plt.subplots();var fig=__left0__[0];var ax1=__left0__[1];
var a=np.random.rand(size,size);
d+=timedelta(__kwargtrans__({weeks:4}));
isinstance(true,int);
root.mainloop();
array(ranked);
transport.accept();
print(df1.head());

df[1][df[1]==4];
ax.plot(data1);
any(function(){var __accu0__=[];for(var x of a)__accu0__.append(__in__(x,sb));return py_iter(__accu0__)}());
self._lock.__enter__();
f();
plt.xlim(tuple([0,AUC.shape[1]]));
ax2.set_xticks(numpy.arange(x1-1,x2+1,.5));
deleted[id];
var df=pd.DataFrame(dict(__kwargtrans__({A:np.arange(70)})),tidx);
var ax=plt.axes(__kwargtrans__({xlim:tuple([0,2]),ylim:tuple([-2,2])}));
smtp.starttls();
lexobj;
var r=requests.post(url,__kwargtrans__({files:files}));
do_something();
foo();
t.render(__kwargtrans__({form:MyForm()}));
l.append(element);
ax.set_axis_off();
export var the_string=input();
export var register=models.DateField(__kwargtrans__({auto_now_add:true}));
var squared=function __lambda__(li){return map(function __lambda__(x){return x*x},li)};
var diff=function(){var __accu0__=[];for(var v of zip(a.__getslice__(0,-1,1),a.__getslice__(1,null,1)))__accu0__.append(v[0]-v[1]);return __accu0__}();
m.group(2);
test(100,500,11);
df.describe();
worker.work();
p.start();
parser.parse_args();
f(...args,__kwargtrans__(kwargs));
sys.exit(1);
platform();
f.close();
NULL;
pool.join();
c.showPage();
sheet1.cell(__kwargtrans__({row:row,column:col})).value=sheet.cell_value(row,col);
a.transpose(0,2,1);
self.driver.py_get(response.url);
print(indent(text,4));
var avg=avg.py_replace(__kwargtrans__({microsecond:0}));
os.remove(fl);
self.axes.py_clear();
var l=literal_eval(s);
[1,1,0,0];
np.hstack(np.where(a==a.max()));
time.sleep(1);
worksheet1.set_column(1,1,25);
var PROJECT_ROOT=os.path.dirname(os.path.abspath("./P2JSnippets.py"));
a.bar;
var data=np.fromfile(file,__kwargtrans__({dtype:dt}));
list(league.py_items())[0];
var __except0__=SystemExit(0);__except0__.__cause__=null;throw __except0__;
QtCore.QAbstractTableModel.__init__(self,parent);
str(bar);
time.sleep(.1);
logging.Formatter.converter=time.localtime;
print(firstLine[0],firstline[1],sum(function(){var __accu0__=[];for(var x of lines)__accu0__.append(int(x[2]));return py_iter(__accu0__)}()));
print(function(){var __accu0__=[];for(var x of reader)__accu0__.append(dict(zip(reader[0],x)));return __accu0__}());
self.lock.release();
df.ix[dates];
form.populate_obj(student_courses);
plt.show();
result.append(line.upper());
var y=np.zeros(tuple([yt,xt]));
var x=np.random.random(tuple([100,100,100]));
np.array(function(){var __accu0__=[];for(var row of array1.tolist())__accu0__.append(function(){var __accu1__=[];for(var _ of row)__accu1__.append(array2);return __accu1__}());return __accu0__}());
targetFile.write(contents);
time.sleep(5);
fib(n-2)+fib(n-1);
plt.subplot(212);
bool(6);
plt.clabel(CS,__kwargtrans__({inline:1,fontsize:10,manual:manual_locations}));
var __left0__=max(enumerate(l),__kwargtrans__({key:operator.itemgetter(1)}));var max_idx=__left0__[0];var max_val=__left0__[1];
plt.show();
float_in.__setslice__(0,16,null,list(arr_in.__getslice__(0,16,1)));
plt.show();
b[-1];
mp.scatter(xvals[i],yvals[i],__kwargtrans__({s:rvals[i]}));
plt.xlim(xmin,xmax);
writer.writerow(row);
s.indices(0);
__init__.py;
print(tuple([i,el]));
self.run();
dosomething();
var d=defaultdict(list);
HttpResponseRedirect(redirect_to);
export var barycoords=barycoords.__getitem__([tuple([0,null,1]),np.all(barycoords>=0,__kwargtrans__({axis:0}))]);
f.__qualname__;
stats.f_oneway(a,b);
root.mainloop();
op.outputs[0]*tf.transpose(tf.matrix_inverse(op.inputs[0]));
mail.quit();
print(d[p]);
a.set_xticklabels([]);
self.e.pack();
screen.keypad(1);
cv2.drawContours(imgBWcopy,contours,idx,tuple([0,0,0]),-1);
db.close();
f(v,w);
export var friendlies=[];
driver.maximize_window();
plt.show();
groups[tuple(function(){var __accu0__=[];for(var c of key_columns)__accu0__.append(row[c]);return py_iter(__accu0__)}())].append(i);
dbx.files_upload(f.read(),file_to);
print(tuple([repr(group[0]),len(group)]));
df.columns[pd.isnull(df).sum()>0].tolist();
foo();
dict_writer.writeheader();
var r=tk.Tk();
sys.exit(app.exec_());
pl.hist(h,__kwargtrans__({normed:true}));
np.cumsum(cols,__kwargtrans__({out:cols}));
numpy.zeros(height,width);
export var listb=function(){var __accu0__=[];for(var x of listb)if(x[2]!=0)__accu0__.append(x);return __accu0__}();
any(function(){var __accu0__=[];for(var c of value)__accu0__.append(c.isdigit());return py_iter(__accu0__)}());
var logger=logging.getLogger(__name__);
pygame.display.py_update();
print(MyClass.bar);
os.makedirs(mydir);
Math.pow(p0[0]-p1[0],2)+Math.pow(p0[1]-p1[1],2);
newData.append(tuple([255,255,255,0]));
tuple([1,1,1]);
export var link_model=models.ForeignKey(settings.LINK_MODEL);
new_list.append(obj);
print(repr(tokzr_WORD(inp1)));
links.append(tuple([url,rule.endpoint]));
print(delta.days);
(function(){var __accu0__=[];for(var x of data)if(func(x))__accu0__.append(x);return py_iter(__accu0__)})();
var py_name=models.CharField(__kwargtrans__({max_length:50}));
sample_object.save();
var lines=random.sample(all_lines,40);
(function(){var __accu0__=[];for(var i=0;i<n;i++)__accu0__.append(Math.pow(2,i));return __accu0__})();
var result=client.service.methodName(Inputs);
true;
print(df);
ax.set_ylim(50,0);
os.path.walk(your_dir,print_it,0);
var y=np.zeros(data.shape.__getslice__(1,null,1),data.dtype);
var b=np.array([1,1]);
export var unmanhattan_patch=descartes.PolygonPatch(unmanhattan);
plt.show(__kwargtrans__({block:true}));
ax2.set_xbound(ax1.get_xbound());
var ax2=plt.subplot2grid(tuple([6,1]),tuple([1,0]));
pool.close();
np.argwhere(np.diff(bool_array)).squeeze();
urllib.request.install_opener(opener);
setup(__kwargtrans__({ext_modules:[module]}));
numpy.roots([2,-6]);
atexit.register(interrupt);
var b=np.in1d(np.arange(n),np.random.randint(0,n,n));
plt.plot(t,y[0]);
sns.set(__kwargtrans__({font_scale:5}));
response.iter_lines(__kwargtrans__({chunk_size:1}));
time.sleep(self.interval);
a.shape;
print(app_info.get_name(),app_info.get_executable(),app_info.get_icon());
sys.exit(11);
d[sku]=price[0];
redirect(rp.__getslice__(0,-1,1));
__mod__(x+y,12);
dynmodule.load(module_code);
(function(){var __accu0__=[];for(var r of L)__accu0__.append(r.py_pop(1));return __accu0__})();
py_next(function(){var __accu0__=[];for(var [i,d]of enumerate(lod))if(__in__(1,d))__accu0__.append(i);return py_iter(__accu0__)}());
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
plt.figure();
(function(){var __accu0__=[];for(var l of lst)for(var e of l)__accu0__.append(e);return set(__accu0__)})();
ax.imshow(gray_data,__kwargtrans__({cmap:cm.gray}));
self._foo;
export var unq_idx=np.py_split(sort_idx,np.cumsum(unq_count.__getslice__(0,-1,1)));
attrs.py_update(dict([[1,1]]));
(function(){var __accu0__=[];for(var item of map(function __lambda__(x){return function(){var __accu1__=[];for(var g of listFunc)__accu1__.append(g(x));return __accu1__}()},ListArg))for(var k of item)__accu0__.append(k);return __accu0__})();
b2.pack();
help(property);
print(os.getcwd());
(s-np.mean(s))/np.std(s);
export var already_inserted=all(function(){var __accu0__=[];for(var i of indexes)__accu0__.append(bitfield[i]);return py_iter(__accu0__)}());
m.drawcoastlines();
(function(){var __accu0__=[];for(var a of res)for(var b of B)if(a.search(b))__accu0__.append(tuple([a,b]));return __accu0__})();
dis.dis(method2);
var user=models.ForeignKey(User);
sub_df.columns=list(range(12));
-(x+a)+b/(1+np.exp(-(x+c)));
writer.writerow(headers);
isinstance(object,py_metatype);
var s=socket.socket(socket.AF_UNIX,socket.SOCK_STREAM);
A[~np.isnan(A)];
Py_Initialize();
gtk.Entry.do_key_press_event(self,event);
fd.close();
second_largest([1,1,1,1,1,2]);
s.plot(__kwargtrans__({ax:ax}));
var app=QApplication(sys.argv);
self.setGeometry(800,400,250,80);
(function(){var __accu0__=[];for(var t of tuples)if(all(function(){var __accu1__=[];for(var f of filters)__accu1__.append(f(t));return py_iter(__accu1__)}()))__accu0__.append(t);return py_iter(__accu0__)})();
var ax2=plt.subplot(gs[1]);
main();
df.stack().idxmax();
b.__setitem__([tuple([0,null,1]),0,0],t);
print(pd.DataFrame(com.convert_robj(r_DF)));
df.C=a;
out[mask]=B.__getitem__([tuple([0,null,1]),tuple([0,null,-1])])[mask.__getitem__([tuple([0,null,1]),tuple([0,null,-1])])];
main();
df.mask(outliers_low,down_quantiles,__kwargtrans__({axis:1}));
obj.__class__.__dict__[2];
var r=requests.py_get(url,__kwargtrans__({cookies:cookies}));
[NOSE_XUNIT_FILE];
np.isnan(a[2]);
d1+timedelta(__kwargtrans__({days:-1}));
NULL;
s.py_update(list(fus_s.py_keys()));
var newList=list(convert(oldList));
l1.append(function(){var __accu0__=[];for(var x of zip(pattern,facs))if(x[0])__accu0__.append(x[1]);return __accu0__}());
jobs.apply_async();
11;
self.edit1=QLineEdit();
date(year,month,day);
testFunc();
monkey.patch_all();
var data=function(){var __accu0__=[];for(var [k,v]of list(reader.py_next().py_items()))__accu0__.append([k.strip(),[fitem(v)]]);return dict(__accu0__)}();
var m=np.ones(len(a),__kwargtrans__({dtype:bool}));
var ax=plt.gca();
export var out_queue=mp.Queue();
pygame.init();
objects.py_sort(__kwargtrans__({key:getScore}));
observer.start();
export var start_urls=function(){var __accu0__=[];for(var url of f.readlines())__accu0__.append(url.strip());return __accu0__}();
print(cell.text_content());
app.debug=true;
sorted(student_tuples,__kwargtrans__({key:student_key}));
self.panel.SetBackgroundColour(wx.Colour(250,250,250));
var log=logging.getLogger();
auth.load_session();
np.matlib.identity(n);
df;
s.iloc.__getslice__(s.first_valid_index(),null,1);
VAR1;
export var byrempcs=sorted(promotion_items,__kwargtrans__({key:bypcs}));
quicksort(array,i+1,end);
export var char=chr(ord(char)+1);
print(m.group(0));
result.append(int(item));
var py_name=models.CharField(__kwargtrans__({max_length:1024,blank:true}));
var b=list(a);
export var IGNORE_TESTS=tuple([]);
var cj=cookielib.CookieJar();
[syndication];
ax2.yaxis.set_major_formatter(ticks_y);
var __left0__=tuple([sys.stdout,sys.stderr]);export var oldout=__left0__[0];export var olderr=__left0__[1];
turtle.forward(200);
var output=popen.stdout.read();
var t=datetime.datetime.now();
shutil.get_terminal_size(tuple([80,20]));
f.close();
df.dtypes;
driver.set_page_load_timeout(10);
var ax=pylab.gca();
zip.extractall();
self.SetSizer(grid_sizer_1);
app.MainLoop();
(function(){var __accu0__=[];for(var item of full_list)if(!(omit&set(item)))__accu0__.append(item);return __accu0__})();
f();
a.__dict__;
pprint.pprint(data);
var product=models.ForeignKey(Product);
var my_list=list(range(10));
urllib.request.install_opener(opener);
var found=any(function(){var __accu0__=[];for(var line of file)__accu0__.append(matched(line));return py_iter(__accu0__)}());
var reader=csv.reader(in_file);
sys.stdout=sys.__stdout__;
sock.setsockopt(socket.IPPROTO_TCP,socket.TCP_KEEPIDLE,after_idle_sec);
__init__.py;
signals.pre_save.connect(User.pre_save,__kwargtrans__({sender:User}));
c.__setslice__(0,len(b),null,c.__getslice__(0,len(b),1)+b);
(function(){var __accu0__=[];for(var [i,thing]of enumerate(mylist))__accu0__.append(mylist.__setitem__(i,thing));return __accu0__})();
var args=parser.parse_args();
PyArray_ENABLEFLAGS(arr,np.NPY_OWNDATA);
self.layout.addWidget(self.progressBar);
var out=np.empty(len(a),__kwargtrans__({dtype:object}));
XXXX;
var df=pd.concat([df.iloc.__getitem__([tuple([0,null,1]),tuple([0,4,1])]),df.iloc.__getitem__([tuple([0,null,1]),tuple([4,null,1])])]).reset_index();
ax.set_ylim(-2,2);
run.py;
var content=pdf.getPage(1).extractText();
func(...args,__kwargtrans__(kwargs));
self.tk.config(__kwargtrans__({menu:self.blank_menu}));
var b=a.ravel();
print(df.columns.__getslice__(2,5,1));
time.sleep(1);
args._get_kwargs();
L.__setslice__(i,i+2,null,L.__getslice__(i+1,i-1,-1));
frame.Show();
export var fig1=plt.figure(__kwargtrans__({figsize:tuple([8,5])}));
p.wait();
print(item);
(function(){var __accu0__=[];for(var match of sentence.finditer(text))__accu0__.append(match.group(0));return py_iter(__accu0__)})();
var data=[rndseries,rndseries,rndseries,rndseries,rndseries,rndseries];
main();
termios.tcsetattr(fd,termios.TCSANOW,attrs);
sq_sum.append(Math.pow(A,2).sum(__kwargtrans__({axis:1})).mean());
print(line);
np.random.shuffle(arr);
(function(){var __accu0__=[];for(var x of string_list)if(x.isdigit())__accu0__.append(x);return __accu0__})();
var a=np.ones(2);
self.new_names[py_name]=value;
p.get_lines()[0].get_ydata();
export var parent=psutil.Process(pid);
print(u.__dict__);
var b=array([1,4,5]);
list(range(0,.4,.1));
var data=np.fromfile(f,__kwargtrans__({dtype:dtype}));
Parent.__init__(self,x,y,z);
set(itertools.chain(l1,l2));
export var str_object2=zlib.decompress(str_object1);
entry.focus();
result;
Thread(__kwargtrans__({target:receiving,args:tuple([ser])})).start();
f.seek(-pos,2);
db.session.commit();
cur.execute(query,my_dict);
self.things.append(0);

client.set_options(__kwargtrans__({headers:headers}));
sorted(set(xyz).difference(a));
graph.set_xticks(x);
var app=Flask(__name__);
self.columnconfigure(1,__kwargtrans__({weight:0}));


plt.plot(np.sin(theta),np.cos(theta));
export var xmlstring=re.sub(pattern,function __lambda__(m){return substitutions[m.group(1)]},xmlstring);
tk.Tk.__init__(self);
f.write(data);
var a=[[0,0],[0,0]];
genre_count.py_sort(__kwargtrans__({ascending:false}));
var __except0__=ValueError(ret);__except0__.__cause__=null;throw __except0__;
processes.append(tuple([p,f]));
print(ipath[i]);
plt.plot(x,i*x+5*i);
df.delta.apply(function __lambda__(x){return x.microseconds});
plot(f,p);
ax2.xaxis.set_major_formatter(ticks_x);
export var datareader=csv.reader(io.TextIOWrapper(webpage));
model.add(Dropout(.5));
var m=re.search(pat,t);
im.putpalette(mypalette);
self.sleep(1);
count+=1;
sys.stderr=sys.stdout;
self.functor(...args,__kwargtrans__(kwargs));
view_pyc_file(sys.argv[1]);
ax4.plot(np.linspace(0,len(xp),len(xp)),xp);
os.path.basename(f);
var x=dict.fromkeys(list(range(0,10)),0);
do_stuff();
math.cos(_/2);
my_array.__setitem__([tuple([0,null,1]),0],my_array.__getitem__([tuple([0,null,1]),1]));
conn.close();
var s=s.strip();
root.grid_rowconfigure(1,__kwargtrans__({weight:1}));
var __except0__=Exception();__except0__.__cause__=null;throw __except0__;
list(function(){var __accu0__=[];for(var tup of data)__accu0__.append([frozenset(list(Counter(tup).py_items())),tup]);return dict(__accu0__)}().py_values());
bisect.bisect_left(dates,datetime.datetime(2007,1,6));
print(row);
tuple([days,hours,minutes,seconds]);
set(list1)&set(compSet);
logger.addHandler(fileHandler);
manager.start();
export var file_path=os.path.join(root,filename);
total+=1;
ax.set_yticks(np.arange(-.5,height,1),__kwargtrans__({minor:true}));
self.append([]);
var gray=cv2.cvtColor(image_src,cv2.COLOR_BGR2GRAY);
print(line_count);
combine([9,8],[2,1]);
myLists.append([122284.8,111161.8,106581.1,141419.9]);
self.Show();
pfile.truncate();
var req=urllib.request.Request(url,data);
s.py_sort();
sock.close();
cursor.execute(qry);
self.timeout=timeout;
interpreter.process_page(page);
tf.logging.set_verbosity(tf.logging.ERROR);
sum(c,[]);
array([0,1,1,2]);
self.ax=self.fig.add_subplot(111);
fh.write(text);
f();
self.origstream.flush();
float(Math.pow(2,_random_decimal(min_exp,max_exp,64)));
dict(Counter(A).most_common(5));
var s=requests.Session();
print(request.error_message);
a_n82_remember_4ever();
len(self._data);
var b=random.choice(range(0,a));
var body=resp.read();
context_for_rendering_inclusion_tag;
bre.close();
var c=pymongo.MongoClient();
remote.close();
export var timestamp2=time.mktime(d.timetuple());
QtCore.QThread.__init__(self,parent);
datetime.datetime(...t.timetuple().__getslice__(0,-4,1));
print(hex(i).__getslice__(2,null,1).zfill(2));
os.path.dirname(os.path.abspath(file));
tf.reduce_sum(x)<100;
collections.deque(itertools.islice(iterator,n));
export var zipDocument=zipfile.ZipFile(StringIO.StringIO(response.content));
turtle.left(90);
(function(){var __accu0__=[];for(var x of it)__accu0__.append(isinstance(x,tuple)?recursive_map(f,x):f(x));return py_iter(__accu0__)})();
cur.execute(sql,tuple([lite.Binary(data)]));
tuple(function(){var __accu0__=[];for(var entry of s)__accu0__.append(int(entry));return py_iter(__accu0__)}());
print(G.edge[0][1]);
var __left0__=generate_arrangements(data);var first_num=__left0__[0][0];var first_arr=__left0__[0][1];var second_num=__left0__[1][0];var second_arr=__left0__[1][1];
os.dup2(0,2);
dict.__getitem__(self,py_keys);
py_typeof(f);
tuple([datetime.datetime(2012,1,5,0,0,0)]);
stats.norm.interval(.68,__kwargtrans__({loc:mu,scale:sigma/sqrt(N)}));
stats.normaltest(y);
PyArray_ENABLEFLAGS(arr,np.NPY_OWNDATA);
tf.nn.relu(x+c);
var per_column=zip(...per_row);
anotherfunc();
self.left=FibTree(n-1);
np.array_equal(org_approach(data,reference),vect_approach(data,reference));
var __left0__=plt.subplots(1,2);var fig=__left0__[0];var axs=__left0__[1];
var b=collections.OrderedDict(sorted(list(a.py_items()),__kwargtrans__({key:function __lambda__(t){return get_key(t[0])}})));
s.py_update(list(fus_s.py_keys()));
sum(function(){var __accu0__=[];for(var [a,b]of zip(a,b))__accu0__.append(Math.pow(a-b,2));return py_iter(__accu0__)}());
df;
func2();
np.column_stack(tuple([slope,intercept]));
plt.subplot(212);
var draw=ImageDraw.Draw(img);
lst.extend(list(range(11,14)));
ws.run_forever();
sys.exit(0);
var token=token_handler.create_token(request,__kwargtrans__({refresh_token:false}));
ui.syn();
json.dumps(o);
self.log.removeHandler(self.handler);
self.successors.append(other);
help(math.sin);
root.py_update();
events.py_sort(__kwargtrans__({key:function __lambda__(x){return x[0]}}));
export var froms=collections.defaultdict(list);
py_next(function(){var __accu0__=[];for(var [key,py_values]of list(d.py_items()))if(__in__(search_value,py_values))__accu0__.append(key);return py_iter(__accu0__)}());
self.wrapee=wrapee;
var rows=py_iter(csv.reader(file));
np.array(list_).sum(0).prod();
false;
f1.close();
driver.switch_to.window(handle);
G.add_edge(1,2);
listening_socket.listen(backlog);
var author=models.CharField(__kwargtrans__({max_length:20}));
makeArchive(dirEntries(folder,true),zipname,folder);
print(b.shape);
(function(){var __accu0__=[];for(var i of range(0,chunks,chunk_size))__accu0__.append(x.__getslice__(i,i+chunk_size,1));return __accu0__})();
show();
foo.__setitem__(something,bar);
result.reset_index();
var data=get_data();
print(df.col.str.py_split(__kwargtrans__({expand:true})));
server.sendmail(fromaddr,toaddrs,message);
lognorm.cdf(x,sigma,0,mean);
(function(){var __accu0__=[];for(var row of zip(...mat))__accu0__.append(list(row));return __accu0__})();
print(foo.__getslice__(0,5,1));
var content=f.read();
df;
self.auth.username;
cluster.py_setdefault(label,[]).append(word);
self.search_list(request,...args,__kwargtrans__(kwargs));
var c=initval;
var key=function __lambda__(x){return customlist.index(x)};
var idx=npi.indices(b,a);
crawler.start();
sys.stdout.write(inp_data);
self.tweet_list.append(json.loads(data));
app.MainLoop();
var key=np.array([0,10]);
client.add_credentials(instaaccount,instapassword);
pygame.init();
var G=nx.Graph();
var df=pd.concat([df1,df2]);
print(i);
var data=list(image.getdata());
tuple([cym.year,cym.month]);
print(F.__code__.co_stacksize);
column_widget.show();
print(arr[np.ix_(rows,cols)]);
print(matplotlib.colors.rgb2hex(rgb));
KERNEL.__setitem__([1,1],0);
app.exec_();
var parser=argparse.ArgumentParser();
ax.quiver(x,y,z,u,v,w,__kwargtrans__({length:.1}));
self.b2.pack();
signal.signal(signal.SIGINT,signal.SIG_IGN);
export var y_train_1=y_train[y_train!=0];
var df=pd.DataFrame();
var root=tk.Tk();
export var slug=defaultfilters.slugify(unidecode(input_text));
var fig=plt.figure(__kwargtrans__({figsize:tuple([8,2])}));
self.assertAlmostEqual(em(2,1),.0584,4);
c.py_update(d);
ndata.append([(start+end)/2,np.mean(np.array(within))]);
byvalue[x].append(i);
m.indices=__mod__(indices-1,m.shape[1]);
print(filename);
python/path/to/script.py;
print(df);
np.issubdtype(float,np.floating);
export var interleaved=pd.concat([s1,s2]).sort_index();
var logger=logging.getLogger(__name__);
time.sleep(.001);
var b=np.array([[4],[5],[6]]);
data.append(row);
label_group_bar(ax,data);
var r=requests.py_get(QUERY_URL);
export var qs=self.get_query_set().filter(...args,__kwargtrans__(kwargs));
var wb=load_workbook(StringIO.StringIO(xlsx));
var line=process.stdout.readline();
var df=df[df[c].isin(df[c].value_counts()[df[c].value_counts()>m].index)];
c.__getitem__([1,2]);
self.sizer.Add(self.log,1,wx.EXPAND);
print(func.locals);
regex_compiled.pattern;
reducefn(dic1);
pprint(l);
plt.show();
self.file.close();
export var next_line=lines[i+1];
var params=urllib.parse.urlencode(params);
Baz().foo();
l.append(float(rec[col]));
ax.set_xticks(np.arange(nba_sort.shape[1])+.5,__kwargtrans__({minor:false}));
var p=argparse.ArgumentParser();
var b=a+b;
new set([new set([thing])]);
Decimal(1.5).quantize(0,ROUND_HALF_UP);
int(toks[0]);
export var friend_id=Column(Integer,ForeignKey(User.id),__kwargtrans__({primary_key:true}));
var start=urllib.request.urlopen(image_url).read(24);
[0,-1];
var result=a||b||c||py_default;
var line=line.strip();
plt.colorbar(p);
list(l);
pylab.hist(A[~np.isnan(A)]);
print(p.stdout.read());
var soup=BeautifulSoup(urllib.open(url).read());
var pool=Pool(__kwargtrans__({processes:4}));
plt.show();
(function(){var __accu0__=[];for(var s of strings)__accu0__.append(s.py_split().__getslice__(0,2,1));return __accu0__})();
dict.__setitem__(self,key,value);
var x=random.random();
pInt[0];
tuple(lst);
f.readline();
var x=np.empty(tuple([]),__kwargtrans__({dtype:object}));
var py_name=models.CharField(__kwargtrans__({max_length:200}));
app;
c.setopt(c.NOBODY,1);
s.loc.__setslice__(0,null,null,[7,8]);
list(individual(nest));
-24.784805-.927448;
print(result.read());
np.cumsum(hist);
output.write(line);
var ax=fig.add_subplot(111);
ax.add_patch(arc);
p.join();
(function(){var __accu0__=[];for(var dct of listA)if(dictA.py_items()<=dct.py_items())__accu0__.append(dct);return __accu0__})();
var B=np.random.randint(0,1E3,1E4);
print(G.__code__.co_names);

var fig=plt.figure();
var fig=plt.figure();
var f=open(mkstemp()[0]);
print(function(){var __accu0__=[];for(var b of bases)__accu0__.append(b(5));return __accu0__}());
cursor.execute(query,params);
df[df.Group.map(df.Group.value_counts().ge(4))];
fig.canvas.draw();
sys.stdout.write(str(time));
sys.stdin.read(1);
(function(){var __accu0__=[];for(var i of index)__accu0__.append(self[i]);return __accu0__})();
s.send(query);
print(response.read());
self.d[index].append(value);
float(c[a])/len(x);
func();
sys.exit(2);
print(indented);
sock.send(data);
s.setDTR(true);
self.ham=dict();
var __except0__=ArgumentError(action,msg);__except0__.__cause__=null;throw __except0__;
root.overrideredirect(true);
var a=[[0,1],[0,1]];
print(sys.exc_info()[0]);
var fig=plt.figure();
var fig1=plt.figure();
var result=list(join_unescaped(list_1));
(function(){var __accu0__=[];for(var x of df.to_records())__accu0__.append(tuple(function(){var __accu1__=[];for(var y of x)if(y!=false)__accu1__.append(y);return py_iter(__accu1__)}()));return __accu0__})();
nums.insert(index,mean(nums[index-1],nums[index]));

var ax=fig.add_subplot(111);
print(i,line);
var conn=listener.accept();
fuse(x,y);
get_nested_list(a[0]);
article.save();
var grid=[[a,b,c],[d,e,f],[g,h,i]];
painter.drawText(QtCore.QPoint(0,-pen.width()),QtCore.QString(hw[i]));
os.chdir(sys.argv[1]);
var roi=gray.__getitem__([tuple([y1,y2,1]),tuple([x1,x2,1])]);
var array=[];
pd.Series(c,u);
pl.plot(x,y);
export var choice=forms.ChoiceField(__kwargtrans__({widget:RadioSelect,choices:choices}));
print(guyGenerator([2,2,2,2,2],[1,1,1,1,1]));
y.__setslice__(REPLACE_EVERY_Nth-1,null,REPLACE_EVERY_Nth,REPLACE_WITH);
(function(){var __accu0__=[];for(var x of a)__accu0__.append(d[x]);return __accu0__})();
signal.alarm(0);
decorator;
count[letter]+=1;
periodic_task.save();
(function(){var __accu0__=[];for(var x of crucial)if(__in__(x,dishes))__accu0__.append(dishes[x]);return __accu0__})();
(function(){var __accu0__=[];for(var _=0;_<size;_++)__accu0__.append(random.uniform(low,high));return __accu0__})();
mylist1.py_sort(__kwargtrans__({key:sort_order.index}));
var l=[1,5,7];
output.close();
self.cb=self.figure.colorbar(hb);
var G=nx.Graph();
l.append(Test(0));
var index_list=[];
app.add_url_rule(url,__kwargtrans__({view_func:view}));
p.stdin.write(data);
gc.get_objects();
print(line);
numpy.set_printoptions(__kwargtrans__({linewidth:160}));
self.queue.py_clear();
sys.exit(ret);
app.exec_();
export var vect=CountVectorizer(__kwargtrans__({ngram_range:tuple([1,4])}));
tuple([1,0,1,0,0,0,0,0,1]);
cursor.close();
self.connect(tuple([host,80]));
self.start();
var t0=time.time();
var x=4;
print(tuple([x,y,z]));
urllib.request.urlretrieve(link,file_name);
intercepting_func;
var c=cv2.VideoCapture(0);
export var ru=dict({});
(function(){var __accu0__=[];for(var _f of l)if(_f)__accu0__.append(_f);return __accu0__})();
var c=pycurl.Curl();
StoppableThread.__init__(self);
layout.addWidget(self.button);
np.add(...np.indices(tuple([nrow,ncol])));
print(df);
(datetime.date.today()-date_cand).days;
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
var DEBUG=false;
pylot.draw();
var newImage=Image.py_new(mode,tuple([newWidth,newHeight]));
wr.writerow(sheet.row_values(0));
export var data_y=[5,6,15,20,21,22,26,42,45,60,55,58,55,50,49];
os.unlink(fname);
print(find_eulerian_tour(graph));
w.writerow(a);
server.NOT_DONE_YET;
map(list1.__setitem__,indices,list2);
export var img_bgr=cv2.merge([b,g,r]);
os.remove(f);
compare(a,b);
tag.py_update();
row_dict[col]=row[i];
df.show();
self.browser.quit();
X.mean(__kwargtrans__({axis:1}));
print(repr(object));
print(xml2json.xml2json(s));
export var hiddenimports=tuple([[]]);
print(line);
tuple([f(x,tuple([a[x],a[y]])),f(y,a[x][0]),f(x,a[x][1])]);
export var top_names=dict(heapq.nlargest(5,list(names_dict.py_items()),__kwargtrans__({key:itemgetter(1)})));
print(fpp[0]);
self.lineedit.selectAll();
script1.py;
shout.start();
iso8601(datetime.timedelta(0,18,179651));
dumper.represent_dict(py_iter(data.py_items()));
export var getitem_rlist=function __lambda__(s,i){return i>0?getitem_rlist(s.__getslice__(1,null,1)[0],i-1):s[0]};
var b=[[7,9],[1,2],[2,9]];
uchar*uimg;
pdb.set_trace();
head[0].__getslice__(0,null,1);
var c=Counter(a);
dict(enumerate(df.five.cat.categories));
debuild-us-uc;
main();
var ts=pd.Series(np.random.randn(6),__kwargtrans__({index:dates}));
export var accuracy=gold?(true_pos+true_neg)/float(len(gold)):0;
math.factorial(170);
Category.add(row[1]);
py_next(a);
var result=[];
var ax=f.add_subplot(111,__kwargtrans__({polar:true}));
ax.set_xlim(min(x),max(x));
outfile.write(filedata.file.read());
string.ascii_uppercase;
mercury.speed(0);
subprocess.popen(command,__kwargtrans__({shell:true}));
export var selected=dict(zip(selected,selected));
export var vbdref1=session.xenapi.VBD.create(vbdconnectcd);
df.index=list(range(1,n))+[0]+list(range(n,df.index[-1]+1));
py.test;
parser.parse_args();
self.realnames[py_name];
NULL;
d1.py_update(b1);
self.line.set_color(self.get_color());
true;
export var sq=function(){var __accu0__=[];for(var item of py_items)__accu0__.append(Math.pow(np.subtract.outer(item,item),2).sum());return __accu0__}();
c();
b.__getitem__([,[2,2]]);
var ax=df.plot();
unittest.TextTestRunner(__kwargtrans__({verbosity:2})).run(fullSuite);
var ts=time.time();
m.fit(X/np.std(X,0),y);
plt.figure();
export var sample_weight=np.array(function(){var __accu0__=[];for(var i of y)__accu0__.append(i==0?5:1);return __accu0__}());
self.coconut=coconut;
sum(islice(count(1,__kwargtrans__({step:4})),101,200));
print(d[4]);
plt.xlim(0,20+i);
dc.SetPen(wx.Pen(self.GetForegroundColour()));
layout.addWidget(self.listview);
var x=np.random.random(tuple([5E3,5E3]))-.5;
(datetime.date.today()-date_cand.date()).days;
process.join();
g.add_edge(6,7);
self.move(global_point-QtCore.QPoint(self.width(),0));
var pos=pygame.mouse.get_pos();
var a=np.zeros(tuple([5,10]));
P.figure();
curses.setsyx(-1,-1);
plt.ylim(0,1);
var a1=np.arange(1,11);
res.py_update(function(){var __accu0__=[];for(var [k,v]of list(b.py_items()))if(!__in__(k,a))__accu0__.append([k,v]);return dict(__accu0__)}());
plt.tricontourf(x,y,T.triangles,v);
export var new_string=str(string,enc);
self.lc=wx.ListCtrl(self,__kwargtrans__({style:wx.LC_REPORT}));
var now=datetime.now(mytz);
fh.seek(0,os.SEEK_END);
var start=end+1;
print(n);
(function(){var __accu0__=[];for(var x of input_array)__accu0__.append(processed(x));return __accu0__})();
base.py;
export var lrg=np.arange(2).reshape(tuple([2,-1])).repeat(1E6,-1).flatten();
logmod.fit(x,y);
export var doms=doms.py_split();
add(...x);
df;
var mylist=[true,true,false];
print(df);
B.__init__(self);
plot_bars(x_bar,y_bar,angle,ax);
var fig1=plt.figure();
conn.execute(penguin);
abort(401);
export var word=word.__getslice__(0,index,1)+char+word.__getslice__(index+1,null,1);
sys.stdout=self.stdout;
ab[s][np.concatenate(tuple([[true],t.__getslice__(1,null,1)!=t.__getslice__(0,-1,1)]))];
var ax=fig.add_subplot(111);
self.strategies=strategies;
User.objects.bulk_create(py_iter(users_iterator()));
doctest.testmod();
var y=np.cumsum(x,__kwargtrans__({dtype:np.intp}));
np.sin(n*np.pi*x)*g(x);
var sock=socket.socket(socket.AF_INET,socket.SOCK_STREAM);
plt.subplot(2,1,2);
self.y2+=mh;
self.parser.parse_args(__kwargtrans__({namespace:self}));
print(xmlFile.toprettyxml());
var logger=logging.getLogger(__name__);
proc.wait();
s.mean(__kwargtrans__({level:1}));

email.send();
Tup()[1];
itemDict.append(r);
startupinfo.dwFlags|=subprocess.STARTF_USESHOWWINDOW;
log.close();
print(nltk.tokenize.WordPunctTokenizer().tokenize(german));
win.add(notebook);
orig.py_update(extra);
var result=np.reshape(result,tuple([frames_per_buffer,2]));
var now=datetime.now();
(function(){var __accu0__=[];for(var x of v)__accu0__.append(function(){var __accu1__=[];for(var y of x)__accu1__.append([py_next(cyc),y]);return dict(__accu1__)}());return __accu0__})();
df.applymap(list).sum(1).apply(set);
var conn=boto.connect_ec2();
export var face_cascade=cv2.CascadeClassifier();
var serializer=AvatarSerializer(__kwargtrans__({data:request.DATA,files:request.FILES}));
new set([new set([form.as_p])]);
pandas2ri.activate();
spawn();
someClass.start();
ss.expon.fit(data,__kwargtrans__({floc:0}));
var m=np.zeros(size,__kwargtrans__({dtype:np.uint8}));
min(timeit.repeat(function __lambda__(){return function(){var __accu0__=[];for(var [k,v]of zip(py_keys,py_values))__accu0__.append([k,v]);return dict(__accu0__)}()}));
doubles[x]=x*2;
export var latest_date=B.select(B.date).order_by(B.date.desc()).limit(1).scalar();
df.reindex(np.roll(df.index,shift));
Counter.objects.get_or_create(__kwargtrans__({py_name:py_name}));
p.join();
plt.figure();
tuple([IM20010809,IM75550511,CL0700100U]);
var out=vec.cumsum();
plt.gcf().autofmt_xdate();
listbox.insert(0,option);
var app=QtGui.QApplication(sys.argv);
var __except0__=ValueError;__except0__.__cause__=null;throw __except0__;
plt.plot(list(range(10)));
plt.imshow(frames[k],__kwargtrans__({cmap:plt.cm.gray}));
str(a);
var __left0__=plt.subplots(1,1);var fig=__left0__[0];var ax=__left0__[1];
print(list(itertools.product(...combs)));
tuple([chambersinreactor,cardsdiscarded]);
(function(){var __accu0__=[];for(var i=0;i<n;i++)__accu0__.append(a.__getslice__(i*k+min(i,m),(i+1)*k+min(i+1,m),1));return py_iter(__accu0__)})();
cmd.wait();
len(f.readlines());
var fig=plt.figure();
export var dirname=os.path.splitext(f)[0];
export var xnew=np.linspace(0,1,Newx);
new_dataset.py_sort(__kwargtrans__({key:function __lambda__(item){return item[group_by_key]}}));
x*x;
main();
asarray(all_data);
writer.save();
export var post=db.session.query(Post).py_get(1);
var parser=argparse.ArgumentParser();
np.dot(np.array(n0),np.array(p)-np.array(p0));
var a=dict.fromkeys(py_iter(a.py_keys()),0);
test_list+=function(){var __accu0__=[];for(var x of itertools.product(...args))__accu0__.append([0]+list(x));return __accu0__}();
print(newcorpus.words(newcorpus.fileids()[0]));
new set([new set([form.id])]);
c.mymethod1();
session1.close();
var matrix=sparse.lil_matrix(tuple([rows,columns]));
list(set(raises));
out.write(b);
sample_object.users.through.objects.create(__kwargtrans__({user_id:2,sample_id:sample_id}));
var app=QtGui.QApplication(sys.argv);
f.seek(pos);
sys.exit(2);
table.rename(__kwargtrans__({index:str})).index[0];
export var language=form.language.data;
workbook.add_format(dict(list(new_dict.py_items())+list(dict_of_properties.py_items())));
skel_coords.append(tuple([r,c]));
print(status._json);
my_file.write(a);
export var init_p=numpy.array(init_a);

var b=dict(a);
var a=json.loads(s,__kwargtrans__({object_hook:registry.object_hook}));
tuple([path.__getslice__(0,-len(ext),1),path.__getslice__(-len(ext),null,1)]);
print(Timetable(function(){var __accu0__=[];for(var _=0;_<15;_++)__accu0__.append(random_row(50));return __accu0__}()));
file_handler.setLevel(logging.INFO);
module.stuff();
var row=py_next(reader);
(function(){var __accu0__=[];for(var x of set(crucial)&set(dishes))__accu0__.append(dishes[x]);return __accu0__})();
result.append(current.py_pop());
var content=f.read();
self.w.setGeometry(QRect(100,100,400,200));
print(regexp.search(s).group(1));
ax.xaxis.set_ticks([0,tick_limit]);
mlab.axes(__kwargtrans__({extent:tuple([0,1,0,1,0,1])}));
(function(){var __accu0__=[];for(var item of my_iterable)if(my_filter(item))__accu0__.append(item);return py_iter(__accu0__)})();
var A=[0,0,0,1,0,1];
tuple([[1,0,1,0,1]]);
var results=dict(function(){var __accu0__=[];for(var i of inputs)__accu0__.append(tuple([i,[]]));return __accu0__}());
export var lastHourDateTime=datetime.today()-timedelta(__kwargtrans__({hours:1}));
db.session.add(p);
xy[-2];
list(df);
using_clump(x);
out.reshape(N,-1).__setitem__([tuple([0,null,1]),7],sinv);
var draw=ImageDraw.Draw(image1);
y.append(row[1]);
var parser=argparse.ArgumentParser();
self.fc1.draw();
rows.nonzero();
cnt==cnt.max();
bokeh.io.show(layout);
(function(){var __accu0__=[];for(var [x,y]of zip(a,b))__accu0__.append(tuple(map(sum,zip(x,y))));return __accu0__})();
print(last_lines.py_pop(0));
form.fields[DELETION_FIELD_NAME].widget=forms.HiddenInput();
var q=np.frombuffer(r,__kwargtrans__({dtype:np.float64}));
sorted(a,__kwargtrans__({key:a.count}));
export var numStreak=(function(){var __accu0__=[];for(var n of a)__accu0__.append(a[0]==n);return __accu0__}()+[false]).index(false);
array([1,1,-1,0,0,-1,1,0,-1,-1]);
all(function(){var __accu0__=[];for(var [i,c]of enumerate(indices.__getslice__(0,-1,1)))__accu0__.append(c<=indices[i+1]);return py_iter(__accu0__)}());
t.print_exc();
scipy.stats.poisson(9.2*25).cdf(254-50);
Foo().ham;
var ii=np.where(py_values==searchval)[0];
hypot(x2-x1,y2-y1);
self.wfile.write(chunk);
object.__setattr__(self,py_name,value);
__in__(k.lower(),self._s);
run.py;
var soup=BeautifulSoup.BeautifulSoup(html);
lines.reverse();
ax.legend(handles,labels);
func(__kwargtrans__(filter_dict(kwargs,get_input_names(func))));
list(map(deep_reverse,to_reverse.__getslice__(0,null,-1)));
export var file_size=file_size+len(buf);
var app=Flask(__name__);
export var BOMLEN=len(codecs.BOM_UTF8);
var t=pd.to_datetime(t);
var end=min(len(list1),len(list2));
master.minsize(__kwargtrans__({width:666,height:666}));
ranges[-1].append(oldidx);
listening_socket.close();
var nzsum=np.bincount(ixs[nzmask]-1,__kwargtrans__({minlength:mat.shape[0]-1})).dot(mat.__getslice__(1,null,1));
total+=int(string.__getslice__(0,j,1))+sum_string(string.__getslice__(j,null,1));
setup.py;
timeit(function __lambda__(){return list(fulldict.py_keys())});
self.log.write(data);
var x=np.random.rand(n);
plt.fill(x,y);
var a=[1,1,5,1,1];
myseries_two.iloc.__getslice__(0,2,1);
pkg_resources.require(dependencies);
var flat=function(){var __accu0__=[];for(var sublist of nested)for(var x of sublist)__accu0__.append(x);return __accu0__}();
export var random_array=np.random.randint(0,16,tuple([4,4]));
pdb.Pdb.postloop(self);
var Z=np.random.normal(__kwargtrans__({size:N}));
my_df.reset_index(__kwargtrans__({inplace:true}));
var b=pd.Series(__kwargtrans__({data:[4,5,6]}));
pencil.py;
var value=sa.Column(sa.String,__kwargtrans__({nullable:false}));
eventLoopThread.setDaemon(true);
!any(function(){var __accu0__=[];for(var [a,b]of zip(it1,it2))__accu0__.append(bool(a)^bool(b));return py_iter(__accu0__)}());
var browser=mechanize.Browser();
remove_if_not_substring(l1,l2);
print(extmodule.makeBalls(1,2));
var parser=argparse.ArgumentParser();
var soup=BeautifulSoup(html);
list(range(1,n+1));
b.append(item);
a[i<0];
self.nodes.append(node);
any(function(){var __accu0__=[];for(var i of L2)__accu0__.append(__in__(i,L1));return py_iter(__accu0__)}());
export var firstNlines=myfile.readlines().__getslice__(0,5,1);
show(p);
var df=pd.concat([ars,che],__kwargtrans__({axis:1}));
var soup=BeautifulSoup(html);
rows.append(row);
sys.stdout=StringIO();
var __left0__=proc.communicate();var stdout=__left0__[0];var stderr=__left0__[1];
ax.set_zticks([]);
export var toss=pd.Series(toss);
sum(function(){var __accu0__=[];for(var x of a)__accu0__.append(asum(x));return py_iter(__accu0__)}());
var id=Column(Integer,__kwargtrans__({primary_key:true}));
var __except0__=TimeoutError();__except0__.__cause__=null;throw __except0__;
zip(l.__getslice__(0,null,2),l.__getslice__(1,null,2));
export var checksum=hashlib.md5(open(path).read());
(1E6*delta.seconds+delta.microseconds)/1E6;
print(format_float(1.5E-6));
keyword2func[word]();
testclass().testmethod();
var image=Image.open(image);

f.close();
var start_date=date.today().py_replace(__kwargtrans__({day:1,month:1})).toordinal();
li.append(x+y);
print(k,od[k]);
export var scores=[];
fig.tight_layout();
print(ndimage.zoom(data,tuple([1,2,2])));
send_file(io.BytesIO(image_binary));
var ax=plt.axes([0,0,1,1],__kwargtrans__({frameon:false,xticks:[],yticks:[]}));
my_list.insert(index,insert_string);
var tree=ET.ElementTree(root);
d[key][k]=v;
combined_meta_data._add_table(table_name,table.schema,table);
r[~numpy.iscomplex(r)];
b.__setitem__([1,1],100);
var fig=plt.figure();
var time=datetime.strftime(time,DATETIME_FORMAT);
self.factories=[];
self.platforms=[];
self.emitter=[];
print(foo());
[tuple([1,2]),tuple([2,4])];
var new_list=sorted(mylist,__kwargtrans__({key:function __lambda__(x){return x[1]}}));
sys.stderr.write(msg);
export var cimage=Image.open(cimage);
print(bigmat.__getitem__([tuple([0,null,1]),x,y]));
var results=self.clickcursor.fetchall();
Test(__kwargtrans__(fields));
df_crawls.dtypes;
send_from_directory(MEDIA_FOLDER,filename,__kwargtrans__({as_attachment:true}));
print(py_typeof(df.iloc.__getitem__([0,0])));
export var angleInDegrees=arctan(deltaY/deltaX)*180/PI;
var id=Column(Integer,__kwargtrans__({primary_key:true}));
var c=a+b;
reactor.listenUDP(Protocol(timeout));
startButton.pack();
self.Bind(wx.EVT_CHAR_HOOK,self.OnKeyUP);
sys.exit(main());
export var Dbins=np.linspace(D.min(),D.max(),24);
plt.bar(ind,data[0],__kwargtrans__({color:colors[0]}));
dict[entry[0]]=entry.__getslice__(1,null,1);
zip(...a);
var flags=tools.argparser.parse_args(__kwargtrans__({args:[]}));
var timestamp=(utc_date-date(1970,1,1)).days*DAY;
(function(){var __accu0__=[];for(var x of ls)if(isinstance(x,dict))__accu0__.append(x);return __accu0__})();
all(a+b==c);
export var blist=[0,1,0,1,0,1,1,1,1,0,0,0,0];
self.addItem(item);
mydict[s.__getslice__(0,1,1)]+s.__getslice__(1,null,1);
mmc.serial.close();
self.bottom=0;
print(repr(a));
pd.read_csv(io.StringIO(df.to_csv()));
sys.exit(0);
var b=numpy.random.rand(N);
conn.close();
Image.open(buff);
math.atan2(0,-0)==math.atan2(-0,-0);
print(k,v);
new set([new set([encoded])]);
os.chdir(search_dir);
subprocess.call;
var m=re.search(self.BASE_RE,elem.text);
print(d[key]);
false;
var root=Tk();
var result=function(){var __accu0__=[];for(var t of l)__accu0__.append(list(t));return __accu0__}();
df;
buffer.__setslice__(0,null,null,bytearray(size));
hfile.seek(0,os.SEEK_SET);
my_list.extend(sorted(my_dict.py_get(k)));
var pos=nx.spring_layout(G);

bar();
df2.mul(np.log(df2)).sum(1);
remove_from.__getslice__(0,index+1,1)+remove_from.__getslice__(endIndex,null,1);
send_file(image_file);
var ax=fig.add_subplot(2,1,1);
f.close();
threading.Thread(__kwargtrans__({target:foo})).start();
dall.py_update(d1);
h5file.close();
var b=np.array([99999,99997,99999]);
contour_info.append(tuple([c,cv2.isContourConvex(c),cv2.contourArea(c)]));
STACKADJ(-oparg);
list1.__getslice__(0,py_next(compress(count(),map(ne,list1,list2)),0),1);
var fig=plt.figure();
export var CS=plt.contour(X,Y,Z);
digits.extend([0]*(sigfig-len(digits)));
insert_into_homefeed.delay(photo_id,user_id,range_limit+1);
var m=__import__(module_name,__all__,locals(),func_names,-1);
json_data[key]=value.strip();
list(filter(partial(foo,1,__kwargtrans__({c:4})),myTuple));
ax.set_xticks([.5,1.5,2.5]);
brlxusd.py_split()[0];
graph[a].append(b);
print(is_arr_in_list(myarr0,mylistarr));
var im=Image.fromstdin();
var fig=plt.figure();
var py_name=models.CharField(__kwargtrans__({max_length:100}));
zip(...rows);
sys.stderr=f;
export var line_split=list(line.py_split()[0]);
var b=np.array([1,760]);
[1];
time.mktime(obj.updated_at.timetuple())*1E3;
np.dot(A.T,B);
d87f7e0c;
d2d10e28;
print(min(resolutions,__kwargtrans__({key:keyfunc})));
final.append(s.__getslice__(x,i+1,1));
np.in1d(a,b,assume_unique);
result.extend(function(){var __accu0__=[];for(var b of bits)__accu0__.append(int(b));return __accu0__}());
__init__.py;
str(int(matchObject.group())+10);
ftp.connect(host,port);
var __left0__=plt.subplots(__kwargtrans__({figsize:tuple([11,4])}));var fig=__left0__[0];var ax=__left0__[1];
var first=function(){var __accu0__=[];for(var [x,y]of data)__accu0__.append(x);return __accu0__}();
td.total_seconds();
window.stick();
self.page();
run_wsgi_app(application);
time.sleep(waittime);
json.loads(urllib.request.urlopen(req).read());
df.T.apply(function __lambda__(x){return x.dropna().__getslice__(n-1,null,1).index[0]});
w.set_foreground();
var root=tree.getroot();
x+y*z;
s.index=pd.MultiIndex.from_tuples(s.index);
plt.legend();
p.wait();
bv[i]=1;
self.fn(...args);
var parser=argparse.ArgumentParser();
var rdd=list(sc.wholeTextFiles(input_dir).py_values());
process.start();
all(function(){var __accu0__=[];for(var i=0;i<len(l)-1;i++)__accu0__.append(ord(l[i+1])-ord(l[i])==1);return py_iter(__accu0__)}());
s.decode(encoding);
tuple([time.time(),int(in_bytes),int(out_bytes)]);
turtle.begin_fill();
pickle.load(f);
print(canvas.find_closest(x,y));
var myList=map(gen_rand,myList);
xs.min(__kwargtrans__({axis:0}));
do_case1();
do_case2();
httplib.HTTPConnection.__init__(self,...args,__kwargtrans__(kwargs));
deltas[deltas<0|deltas>100]=0;
var f=function __lambda__(x,y){return x+y};
var output=data[2]+data[2];
np.where(m.any(1),idx0,np.nan);
zf.close();
var lines=tuple(function(){var __accu0__=[];for(var l of text_file.readlines())__accu0__.append(l.rstrip());return py_iter(__accu0__)}());
var fig=plt.figure();
print(dict(regex.findall(r,z)));
ax.plot(new_series,your_pandas_dataframe);
var fig=plt.figure();
print(tag.string);
os.kill(2405,15);
var c=[true,true,false];
tuple([tuple([0,[0,0,0],[0,0]])]);
zerolistmaker(15);
ax.plot(x1,np.sin(x1));
dev.off();
tuple([0,1,0,1,0,1,0,0,0]);
image.thumbnail(size,Image.ANTIALIAS);
pathqueue.put(path);
var im=Image.open(image_path);
all(function(){var __accu0__=[];for(var v of pairs.py_values())__accu0__.append(v>0);return py_iter(__accu0__)}());
export var tokens=nltk.word_tokenize(sentence);
print(function(){var __accu0__=[];for(var [x,c]of list(Counter(chain(...lists)).py_items()))if(c!=len(lists))__accu0__.append(x);return __accu0__}());
var vals=np.array(list(d.py_values()));
export var gain=(1-Math.pow(R,2))*sqrt(1-Math.pow(c,2));
var data=os.read(self.pipe_out,1);
pandas2ri.activate();
time.sleep(1);
tuple([self.i,self.k,self.j])==tuple([other.i,other.k,other.j]);
var x=np.arange(5);
soup.b.contents[0];
channel.basic_consume(on_message,queue_name);
select.select([],[],[]);
print(np.all(A[idx_a]==B[idx_b]));
os.fsync(file.fileno());
c.append(random.choice(tmp).py_pop(0));
re.findall(re1,text);
size+=os.path.getsize(os.path.join(path,f));
var hxs=HtmlXPathSelector(response);
image.file.seek(0);
var img=numpy.zeros_like(img,__kwargtrans__({dtype:numpy.uint8}));
new_col.shape;
sys.stdout.close();
print(in_nested_list(x,5));
var t=np.arange(0,.001,dt);
time.sleep(2);
main();
np.interp(np.linspace(0,tmp.max(),nbin+1),tmp,np.py_sort(x));
self.running=true;
var __left0__=Point(0,1);var x=__left0__[0];var y=__left0__[1];
print(sum(odd));
my_list;
export var json=urllib.request.urlopen(url).read();
method(__kwargtrans__(options));
_grow;
var py_name=Column(String(20),__kwargtrans__({primary_key:true}));
opt.text.py_clear();
D[key].py_update(item);
var today=datetime.datetime.today();
var doc=tree.getroot();
wr.writerow([py_date]+sheet.row_values(rownum).__getslice__(1,null,1));
print(function(){var __accu0__=[];for(var byte of bytes)__accu0__.append(hex(ord(byte)));return __accu0__}());
turtle.fillcolor(color);
self.stream.start_stream();
file.write(file_data);
print(dict(parse_key_value_list(text)));
pprint(etree_to_dict(e));
print(dishes[key]);
self._callbacks.append(callback_ref);
self.create_socket(socket.AF_INET,socket.SOCK_STREAM);
settings.MY_SETTING;
var id=Column(Integer,__kwargtrans__({primary_key:true}));
logger.addHandler(my_handler);
out.append(tuple([a,b]));
var handler=logging.StreamHandler();
random.random()*6+1;
arr.__getitem__([tuple([offs_x,offs_x+shape[0],1]),tuple([offs_y,offs_y+shape[1],1])]);
df.ix[[0,-1]];
export var to=models.EmailField(__kwargtrans__({null:false,blank:false}));
export var csv_output=csv.writer(f_output);
ax.yaxis.tick_right();
print(winner.flatten().tolist());
libvirt.virEventRegisterDefaultImpl();
python/path/to/filename.py;
var t=threading.Thread(__kwargtrans__({target:run_one,args:tuple([source])}));
d.append(line);
export var _g=__all__;
var a=numpy.zeros(tuple([6,6]),__kwargtrans__({dtype:numpy.int}));
self.user_id==other.user_id;
var ax=fig.add_subplot(1,1,1);
result1.add(j+1);
outputStream.close();
print(df);
var process=Popen(command,__kwargtrans__({stdout:PIPE,stderr:PIPE,bufsize:1}));
var rank=dict.py_get(key,1);
var c=list(itertools.product(a,b));
var log=logging.getLogger();
exec(code,module.__dict__);
hbox.addWidget(self.view);
f.seek(0);
requests.post(url,__kwargtrans__({data:data,headers:json.loads(headers)}));
var df=DataFrame(flattened_records);
d.set_state(gst.STATE_NULL);
subprocess.call(shlex.py_split(command));
var ax=fig.add_subplot(1,1,1,__kwargtrans__({polar:true}));
var x=np.random.rand(25,4);
var output=function(){var __accu0__=[];for(var [k,v]of list(input.py_items()))if(key_satifies_condition(k))__accu0__.append([k,v]);return dict(__accu0__)}();
fn(...args,__kwargtrans__(kwargs));
var X=np.arange(100).reshape(10,10).astype(float);
plt.colorbar(sc);
var data=urllib.parse.urlencode(data);
visited_nodes.py_update(path);
axicon.set_yticks([]);
np.delete(p_a_colors,indices,__kwargtrans__({axis:0}));
v[0]=10;
plt.show();
n>1&&all(function(){var __accu0__=[];for(var i=2;i<n;i++)__accu0__.append(__mod__(n,i));return py_iter(__accu0__)}());
turtle.left(90);
self.__dict__=self;
print(tuple([py_name,add,num]));
nosetests;
word.__getslice__(len(word),-(len(word)+1),-1);
print(x);
QSize(200,200);
export var c_long_p=ctypes.POINTER(ctypes.c_long);
print_decimal(b,prec);
var counter=db.IntegerProperty(__kwargtrans__({py_default:0}));
f.read(1024);
self.func(...args,__kwargtrans__(kwargs));
self.openBtn.clicked.disconnect();
bytes([255]);
df2.index=pd.MultiIndex.from_arrays(df1.py_values.T);
self.parse_request();
self.user=current_user();
var user=models.OneToOneField(User);
self.hbox.pack_start(self.poles,false,false,0);
plt.figure();
target.add_edge(1,2);
var result=zip(a,b,c);
driver.py_get(url);
accept.start();
foo(lcl);
var app=QtGui.QApplication(sys.argv);
var l1=function(){var __accu0__=[];for(var x=0;x<n;x++)for(var y=0;y<n;y++)__accu0__.append(tuple([x,y]));return __accu0__}();
User.objects.filter(__kwargtrans__({active:false}));
print(repr(e));
s.close();
index+=1;
var reader=csv.DictReader(f);
sum(results)/len(results);
metadata.create_all(engine);
fff(train_set_x.__getslice__(index,index+1,1));
func();
var file=cStringIO.StringIO(urllib.request.urlopen(URL).read());
var res=argparse.ArgumentParser.parse_args(self,...args,__kwargtrans__(kw));
str(lst[0]);
nll;

send(packet1);
var d=dict(function(){var __accu0__=[];for(var [k,v]of list(adict.py_items()))__accu0__.append(tuple([v,k]));return py_iter(__accu0__)}());
var user=models.OneToOneField(User);
draw.line([0,center,width,center],green);
Py_Finalize();
var fig=plt.figure();
map(float,mystr.py_split().__getslice__(0,2,1));
request.session[SESSION_KEY]=user.id;
self._printTree(self.root);
b.insert(index,a);
dict_writer.writerows(groupdata);
print(tuple([d.py_get(20),d.py_get(60),d.py_get(200)]));
Super.__init__;
f.seek(0);
curses.noecho();
var d=dict(regex.findall(r));
var lines=text_file.readlines();
D.py_update([1,2]);
var title=models.CharField(__kwargtrans__({max_length:100,unique:true}));
self.wrong_values.py_clear();
export var main_dir=os.path.dirname(os.path.realpath(sys.argv[0]));
canvas.pack();
logging.root.setLevel(logging.DEBUG);
cv.Flip(frame,__kwargtrans__({flipMode:-1}));
py_new.show();
random.shuffle(l);
var d1=datetime.date.today();
plt.show();
sys.exit(1);
subprocess.Popen(command);
sys.stdout.flush();
os.urandom(10);
im.point(lut*im.layers);
export var cr=func(...args,__kwargtrans__(kwargs));
var __except0__=IOError;__except0__.__cause__=null;throw __except0__;
session.expunge(obj1);
var ax=plt.axes([0,0,1,.8],__kwargtrans__({frameon:false,xticks:[],yticks:[]}));
var cursor=conn.cursor(MySQLdb.cursors.DictCursor);
[[-4,-4,-4,-4],[-7,2,2,2],[-1,-1,-1,-1,-1]];
print(child.tag,child.text);
var title=models.CharFiled(__kwargtrans__({max_length:1E3,blank:true}));
str(thing);
export var inst=session.query(Model).first();
result.append(new_t);
df.sort_index(__kwargtrans__({inplace:true}));
var M=np.random.random(tuple([5,8]));
thread.start_new_thread(self.Run,tuple([]));
zip(a,b);
export var t2=function(){var __accu0__=[];for(var [a,b]of zip_longest(t,t.__getslice__(1,null,1),__kwargtrans__({fillvalue:t[0]})))__accu0__.append(a+b);return __accu0__}();
plt.show();
self._s.close();
var data=data.__getslice__(0,75,1);
b.append(str(z));
process[-1].start();
f.write(chunk);
var matches=function(){var __accu0__=[];for(var value of a1)if(__in__(value,mapping))__accu0__.append(mapping[value]);return __accu0__}();
plt.show();
var key=Column(Integer,__kwargtrans__({primary_key:true}));
ax.imshow(data.sum(__kwargtrans__({axis:2})).T);
sys.exit(1);
plt.show();
var __left0__=plt.subplots(1);var fig=__left0__[0];var ax=__left0__[1];
df[df.columns.intersection(col_list)];
float(item);
object.__getattribute__(self,x);
pcap_lookupnet(dev,ctypes.pointer(net),ctypes.pointer(mask),errbuf);
(function(){var __accu0__=[];for(var x of function(){var __accu1__=[];for(var e of a)__accu1__.append(tuple(e));return set(__accu1__)}())__accu0__.append(list(x));return __accu0__})();
var timestamp=(aware_dt-datetime(1970,1,1,__kwargtrans__({tzinfo:pytz.utc}))).total_seconds();
var ax=fig.add_subplot(111);
time.sleep(.25);
var ws=root.winfo_screenwidth();
var __left0__=np.meshgrid(np.arange(N),np.arange(N));var X=__left0__[0];var Y=__left0__[1];
print(df2);
var row=cursor.fetchone();
print(L[i]);
b.append(c);
var ranges=np.vstack(tuple([a,b]));

self.mylist[i];
var cur=conn.cursor();
export var http_server=tornado.httpserver.HTTPServer(application);
a.remove(item);
var l=function(){var __accu0__=[];for(var _f of l)if(_f)__accu0__.append(_f);return __accu0__}();
py_typeof(z[0]);
print(function(){var __accu0__=[];for(var [i,v]of enumerate(a))__accu0__.append(format_string.format(v,i));return __accu0__}());

self.right[i-len(self.left)];
print(counts[1]);
numpy.nextafter(0,1);
var groups=Group.objects.filter(__kwargtrans__({member:p1})).filter(__kwargtrans__({member:p2}));
var filename=socket.recv(1024);
new set([new set([p.first_name])]);
var arr=numpy.empty([0,1],__kwargtrans__({dtype:type1}));
self.setContentsMargins(0,0,0,0);
export var texts=list(chain.from_iterable(function(){var __accu0__=[];for(var x of posts)__accu0__.append(x[1]);return py_iter(__accu0__)}()));
list(data);
result.append(i);
urllib.request.install_opener(opener);
var B=np.array([2,4,6]);
set(fruits).intersection(fruit_dict1);
time.sleep(1);
print(df.Symbol1==df.Symbol2&df.BB==df.CC);
var browser=mechanize.Browser();
json.load(io);
c.extend(combinations(x,i+1));
indices[i]+=1;
sons.append(son);
urllib.request.urlretrieve(dirpath+file,localfilelocation);
var a=np.ma.array(a,__kwargtrans__({mask:false}));
print(function(){var __accu0__=[];for(var y of function(){var __accu1__=[];for(var x of q)__accu1__.append(x.giveMyNum());return py_iter(__accu1__)}())if(y>1)__accu0__.append(y);return __accu0__}());
os.kill(os.getpid(),signal.SIGTERM);
admin.add_view(PaidOrderView(Order,db.session));
var result=bar(...args,__kwargtrans__(kwargs));
conn.logout();
redirect(url,__kwargtrans__({code:code}));
func(cpy);
xsheet.write_row(0,0,a);
urlparse.urljoin(url1,url2);
var __left0__=points;var x1=__left0__[0][0];var y1=__left0__[0][1];export var q11=__left0__[0][2];export var _x1=__left0__[1][0];var y2=__left0__[1][1];export var q12=__left0__[1][2];var x2=__left0__[2][0];export var _y1=__left0__[2][1];export var q21=__left0__[2][2];export var _x2=__left0__[3][0];export var _y2=__left0__[3][1];export var q22=__left0__[3][2];
(function(){var __accu0__=[];for(var t of targets)if(t.startswith(prefixes))__accu0__.append(t);return __accu0__})();
fig.subplots_adjust(__kwargtrans__({left:.1}));
var mask=foo<40|foo>60;
geocalc(55.071,-6.508,51.622,-8.886);
export var strprime=str(prime);
getattr(obj,attr_name)[index];
var gy=np.zeros_like(f);
var opener=urllib.request.build_opener(urllib.request.HTTPCookieProcessor(jar));
sorted(value,__kwargtrans__({key:function __lambda__(k){return k[0]}}));
bar();
print(json.dumps(dict(__kwargtrans__({data:x.tostring(),shape:x.shape,dtype:str(x.dtype)}))));
msg.attach(MIMEText(text));
zip(x[0],x[1]);
data.append(int(el.text));
p.create_time();
code.interact(__kwargtrans__({local:locals()}));
dict(function(){var __accu0__=[];for(var [i,e]of enumerate(d.py_items()))if(begin<=i&&i<=end)__accu0__.append(e);return py_iter(__accu0__)}());
HttpResponse();
var __left0__=out;sys.stdout=__left0__[0];sys.stderr=__left0__[1];
datetime.datetime.today();
print(df.head());
max(g(sorted(L)),__kwargtrans__({key:function __lambda__(x_v){return tuple([len(list(x_v[1])),-L.index(x_v[0])])}}))[0];
var pool=mp.Pool(__kwargtrans__({processes:10}));
plt.plot(x,L.T);
fig.tight_layout();
get_localizer(request);
sleep(.1);
export var zfile=zipfile.ZipFile(path);
self.pack();
var app=Flask(__name__);
Cls.foo.__func__===obj.foo.__func__;
deletesys.argv[0];
tuple([forms.CharField(__kwargtrans__({required:0}))]);
self.Bind(wx.EVT_PAINT,self.OnPaint);
handlers.append(urllib.request.HTTPCookieProcessor(cookiejar));
result();
(function(){var __accu0__=[];for(var [i,j]of mylist)__accu0__.append(j);return __accu0__})();
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
c.callback();
var __left0__=map(list,zip(...l));var a=__left0__[0];var b=__left0__[1];
HttpResponse();
export var curr_points=function(){var __accu0__=[];for(var p of paired_points)__accu0__.append(Point(p[0],p[1]));return __accu0__}();
print(my_list.__getslice__(0,null,2));
self.send_response(200);
var rgb=scipy.misc.toimage(np_array);
self.transport.write(message);
item;
len(net.layers[0].blobs);
foo();
var a=list(filter(partial(ne,[1,1]),a));
gzf.read();
obj.save(__kwargtrans__(kwargs));
m.mask=i==j;
controlset.a.plot(self.dummyx,self.dummyy,self.dummyz);
var app=flask.Flask(__name__);
cap.set(cv.CV_CAP_PROP_FRAME_WIDTH,int(x));
export var docs=[[0,1],[0,0],[1,0,1]];
column+=1;
initial_list.remove(item1);
df2;
cust_dict[row[0]]=row.__getslice__(1,null,1);
var py_name=models.CharField(__kwargtrans__({max_length:50}));
var files=function(){var __accu0__=[];for(var f of sorted(os.listdir(FileDirectoryPath)))__accu0__.append(f);return __accu0__}();
list1.remove(item);
metadata.create_all(db);
dict();
commatoze(input_str);
event.wait();
var idx=np.linspace(0,2*np.pi,100);
print(function(){var __accu0__=[];for(var k=0;k<4;k++)__accu0__.append(g.subs(x,k));return __accu0__}());
sys.stdin.readlines();
print(output);
export var competitors=Competitors.objects.all();
var fig=plt.figure();
var sa=np.py_sort(a).__getslice__(0,null,-1);
export var number_of_rows=sheet.nrows;
var seen=set();
np.clip(im.__getitem__([,0]),0,threshold,__kwargtrans__({out:im.__getitem__([,0])}));
plt.margins(.1,.1);
print(a,b,c);
self.assertEqual(cm.exception.code,1);
plt.figure();
auth.set_access_token(access_token,access_token_secret);
var template=env.from_string(template_string);
app.MainLoop();
process.wait();
[4,5,6,7,8];
any(function(){var __accu0__=[];for(var line of some_file)__accu0__.append(check_string(line,word_list));return py_iter(__accu0__)}());
var __left0__=plt.subplots(2,2,__kwargtrans__({figsize:tuple([8,8])}));var fig=__left0__[0];var axs=__left0__[1];
var cursor=cx_Oracle.Cursor(connection);
export var records=Record.objects.all();
export var local_path=os.path.join(root,filename);
-1*np.arange(20);
sleep(.1);
var b=np.array([1,5,20,25]);
writer.writerow(dict(function(){var __accu0__=[];for(var h of headers)__accu0__.append(tuple([h,h]));return py_iter(__accu0__)}()));
var duration=models.PositiveIntegerField();
inspect.signature(io.BytesIO.read);
np.logical_or.reduce(xyz);
patlist.append(idx);
axins.boxplot(data);
s.sendmail(sender,recipients,msg.as_string());
var foo=Foo();
x.most_common(1);
var fig=plt.figure();
print(tone2);
__setitem__;
pylab.plot(x,psi);
p.terminate();
lines.add(line);
var driver=webdriver.Firefox();
Response(__kwargtrans__({status:404}));
num2words(1E25);
print(data);
var data=f.read();
np.maximum.reduceat(a,[0,4,7]);
nested_class();
var hxs=HtmlXPathSelector(self.br.page_source);
print(datetime.datetime.now());
export var a_t=np.vstack(tuple([a,np.zeros_like(a)]));
var __left0__=octave.eig(A);var X=__left0__[0];var L=__left0__[1];
var data=[];
say_hello();
group.to_excel(writer,py_name);
var M=M.__getitem__([tuple([0,null,1]),M.getnnz(0)>0]);
self.a=[];
export var blah_name=function(){var __accu0__=[];for(var [k,v]of locals().py_items())if(v===blah)__accu0__.append(k);return __accu0__}()[0];
var line=line.py_split();
var py_name=models.CharField(__kwargtrans__({max_length:255}));
var ts=(midnight-datetime(1970,1,1,__kwargtrans__({tzinfo:pytz.utc}))).total_seconds();
export var diagmat=np.diag(d);
zerolistmaker(5);
export var sh2=sct_subscript();
Users().save();
true;
var data=JSONField(__kwargtrans__({db_index:true}));
var port=sock.getsockname()[1];
var array=list(accumulate(rand(100)));
bv.setall(0);
var out=coo_matrix(tuple([vals,tuple([idx.__getitem__([tuple([0,null,1]),0]),idx.__getitem__([tuple([0,null,1]),1])])]),dims).toarray();
var fact=function __lambda__(x){return x==0&&1||x*fact(x-1)};
print(list(counter.py_values()));
print(r.text);
print(function(){var __accu0__=[];for(var x of pat.finditer(mystr))__accu0__.append(x.group());return __accu0__}());
random.shuffle(list1);
export var CELERY_STORE_ERRORS_EVEN_IF_IGNORED=true;
time.sleep(20);
print(my_class.__name__);
sorted(lists,__kwargtrans__({key:function __lambda__(x){return sorted(x,__kwargtrans__({reverse:true}))},reverse:true}));
giveupthefunc();
turtle.end_fill();
self.server=xmlrpclib.ServerProxy(self.url);
export var dollars=decimal.Decimal(cents)/100;
bool(a);
random_sample_output.writelines(random_sample_input);
logger.setLevel(logging.DEBUG);
rtc.BeginTextColour(tuple([255,0,0]));
var cb=fig.colorbar(im,__kwargtrans__({cax:cax}));
l.py_pop(0);
ring+=1;
imshow(im);
var x=self.get_subclass_name();
print(subprocess.list2cmdline(params));
output+=np.sum(integrand(b),__kwargtrans__({axis:1}));
__import__(module_name);
var root=tk.Tk();
setattr(obj,py_name,value);
var driver=webdriver.Firefox();
print(repr(astr));
var today=datetime.datetime.today();
export var record=dict(grouper(2,fields));
true;
var soup=BeautifulSoup(html_text);
new_array;
compare_listcomp(a,b);
print(names_of1(x,locals()));
f.subs(x,0);
listen_thread.start();
var c=55.6;
Book.objects.filter(__kwargtrans__(filters));
var b=np.array([2,4,6]);
bpy.utils.register_class(customToolshelfPanel);
l.__setslice__(1,null,2,l.__getslice__(1,null,2)+1);
var x=np.linspace(xmin,xmax,100);
cursor.execute(query);
var new_list=[];
print(list(m));
export var smoothedData=dataSeries.rolling(10,__kwargtrans__({center:true})).median();
pdf.savefig(fig);
(function(){var __accu0__=[];for(var item of ll[0])__accu0__.append([item]);return __accu0__})();
export var closey=close.copy();
l1.remove(item);
str(obj);
var py_keys=function(){var __accu0__=[];for(var [k,v]of list(my_dict.py_items()))if(v<threshold_value)__accu0__.append(k);return __accu0__}();
self.emitter.daemon=true;
Image.objects.all().portraits().small();
buf.__setslice__(i,i+2,null,foo);
var lines=f1.readlines();
settings.py;
time.sleep(10);
wr.writerows(list(Counter(textSorted).py_items()));
export var one_day=datetime.timedelta(__kwargtrans__({days:1}));
conn.rollback();
request.form;
my_file.write(c);
f.write(s);
var parser=argparse.ArgumentParser();
ax.add_collection(lines);
var result=storage.save(djangofile.py_name,djangofile);
plot_chart(df,fig,ax);
export var mcastsock=socket.socket(socket.AF_INET,socket.SOCK_DGRAM);
surface.get_npimage();
var df=pd.concat([df]*1E3).reset_index(__kwargtrans__({drop:true}));
var user=session.query(User).one();
modul.func();
export var smtp=smtplib.SMTP(server);
var G=nx.DiGraph();
deletelist_of_g.__getslice__(to_idx,null,1);
print(key);
list(itertools.combinations(l,2));
dosomething();
print(py_next(t));
var angle=atan((neuron2.x-neuron1.x)/float(neuron2.y-neuron1.y));
cur_set.py_pop();
var root=Tk();
method();
print(err.lineno);
solve(sin(z)-2,z);
new set([1,0,1,1,1,1,1,0,0,0,1,1,0,1,0,1,1,0,0,1,1,0,1,1,1,0]);
result[0];
export var p2out=f.read();
f(...args,__kwargtrans__(kw));
counts[x]+=1;
sys.stdout.write(processed_line);
zinfo.file_size=file_size;
get_object_or_404(queryset,__kwargtrans__(filter));
plt.show();
iconfile.close();
sys.exit=new_sys_exit;
gr1.py_switch();
console._run();
var f=signal.filtfilt(b,a,f);
export var jsondata=json.load(urllib.request.urlopen(url));
var x=numpy.arange(0,10);
signal.signal(signal.SIGALRM,signal_handler);
print(myre.group(1));
var cur=con.cursor();
z.__getitem__([np.arange(k-i),np.arange(k-i)+i]);
self.finish();
sys.exit(app.exec_());
x.py_pop(0);
var fig=plt.figure();
export var query_pairs=function(){var __accu0__=[];for(var [k,vlist]of d.py_items())for(var v of vlist)__accu0__.append(tuple([k,v]));return __accu0__}();
getattr(inst,self.py_name);
var x=numpy.asarray(x);
var body=response.read();
var app=QtGui.QApplication(sys.argv);
Employee.__init__(self,py_name,salary);
pygame.display.py_update();
sorted(names,__kwargtrans__({key:splittedname}));
z.__getitem__([np.arange(k-i)+i,np.arange(k-i)]);
var img=(np.random.rand(200,200)*256).astype(np.uint8);
Base.metadata.create_all(e);
print(covered_list);
list(map(function __lambda__(x){return x*2},[2,2]));
var cells=function(){var __accu0__=[];for(var i=1;i<10;i++)__accu0__.append(str(i));return __accu0__}();
setattr(p,s,new_value);
var AB=map(sum,itertools.zip_longest(A,B,__kwargtrans__({fillvalue:0})));
m.tolist();
export var bbox=x.get_window_extent();
var py_new=function(){var __accu0__=[];for(var [k,g]of groupby(data))if(len(list(islice(g,2)))==1)__accu0__.append(k);return __accu0__}();
print(function(){var __accu0__=[];for(var _=0;_<4;_++)__accu0__.append(py_next(c));return __accu0__}());
var m1=(pt1.getY()-pt1.getY())/1;
map_nested_dicts(x,function __lambda__(v){return v+7});
sys.path.append(os.getcwd());
obj[py_name];
export var description=models.CharField(__kwargtrans__({max_length:100,blank:true}));
list(range(1,n+1,2));
sum(function(){var __accu0__=[];for(var f of phi)__accu0__.append(f(x));return py_iter(__accu0__)}());
np.correlate(a,[0,0]+v+[0,0]);
local_minima.append([i,A[i]]);
sorted(list(dct.py_items()),__kwargtrans__({key:itemgetter(1),reverse:true}));
decorator;
plt.show();
dict({});
var b=np.vstack(tuple([a,a]));
app.listen(settings.TORNADO_PORT);
ee.connexion.add(...e.connexion.all());
canvas.tag_raise(firstRect);
layout.addWidget(self.button);
file_.close();
np.add.at(a,b,1);
df;
ax1.plot(pd.Series(np.random.uniform(0,1,__kwargtrans__({size:10}))));
screen.fill(white);
export var pixel=walnut.getpixel(tuple([x,y]));
self.linenumbers.redraw();
sys.stdout.write(line);
export var rowMean=a.sum(1)/(a!=0).sum(1);
print(avg_positive_speed([0,0]));
doing_fd.truncate();
var user=Column(String);
var __left0__=filterer(list1,list2);var list1=__left0__[0];var list2=__left0__[1];
plt.plot(t,s);
count(s,li);
dis.dis(f);
print(line);
cv.SetCaptureProperty(video1,cv.CV_CAP_PROP_FRAME_WIDTH,800);
etree.tostring(tree);
self.f(obj,...args,__kwargtrans__(kw));
var data=json.load(fp);
lower.append(word);
line(src,Q1,Q2,Scalar(0,0,255),1,CV_AA,0);
t.pack();
pattern.search(html).group();
export var logdet=np.add.reduce(absd,__kwargtrans__({axis:-1}));
list[0]+=1;
print(interleave(a,b));
var A=np.random.randint(0,10,100);
item.setExpanded(true);
reactor.connectTCP(HOST,PORT,factory);
csv_output.writerow(fieldnames);
shmctl(shmid,IPC_RMID,NULL);
display.stop();
var p=argparse.ArgumentParser();
distance[0][1];
conn.set_debuglevel(false);
var queryset=Profile.objects.all();
new set([new set([formset.management_form])]);
tree_selection.set_mode(gtk.SELECTION_MULTIPLE);
recurse_matches_py(a,b,alo,blo,ahi,bhi,answer,maxrecursion-1);
new_nums.append(mean(nums[index-1],nums[index]));
var last_name=models.CharField(__kwargtrans__({max_length:50}));
self.ax.figure.canvas.draw();
G.add_nodes_from(function(){var __accu0__=[];for(var n of nodes)__accu0__.append(tuple([n,B.node[n]]));return py_iter(__accu0__)}());
self.queue.put(message);
(function(){var __accu0__=[];for(var item=ord(s[0]);item<ord(s[-1])+1;item++)__accu0__.append(chr(item));return __accu0__})();
grview.setScene(scene);
send_from_directory(app.static_folder,filename);
conn.rollback();
zip(...theArray);
print(a,b,c,d);
pl.plot(x,dist.cdf(x));
result.reverse();
print(thelog);
session.add(user);
export var fsizer=wx.BoxSizer(wx.HORIZONTAL);
print(max(map(len,inverse_regex.ipermute(data))));
var value=random.choice(mylist);
response.set_status(exception.status_int);
ax2.set_navigate(false);
result.fillna(0,__kwargtrans__({inplace:true}));
s.say_hello();
RSI2.plot();
wb.Close();
print(m.group(1));
pickle.dumps(ThreadPoolExecutor(1));
random.shuffle(list2);
var b=a.copy();
print(item);
i+=1;
export var pBuf=ctypes.create_string_buffer(init_size);
random.randrange(5,60,5);
foo();
root_logger.setLevel(logging.DEBUG);
sqs._endpoint.http_session.close();
unittest.main();
var data=json.loads(api_data);
var h=HTMLParser.HTMLParser();
dir();
print(get_numbers_from_filename(filename));
print(py_new.timestamp());
print(e.subs([tuple([a,c]),tuple([b,d])]));
var df=pd.DataFrame(dict(zip(headers,foo)));
z.append(x[i]+y[i]);
print(list(groups.py_values()));
ax.imshow(A,__kwargtrans__(kwargs));
sys.stdout.flush();
export var shift_idx=np.flatnonzero(sorted_a.__getitem__([tuple([1,null,1]),1])>sorted_a.__getitem__([tuple([0,-1,1]),1]))+1;
print(r[0]);
sleep(1);
var res=function(){var __accu0__=[];for(var k of arr.tolist())__accu0__.append(lookupdict[k]);return __accu0__}();
a.__setitem__([tuple([0,2,1]),tuple([0,2,1])],np.arange(4).reshape(tuple([2,2])));
t.start();
strided.reshape(dim);
print(args);
var df=pd.concat([num_df,enum_df],__kwargtrans__({axis:1}));
print(function(){var __accu0__=[];for(var a of arr)__accu0__.append(a.value);return __accu0__}());
np.divide(sumA,sumB);
op(x,y);
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
G.add_edge(tuple([q,r]),tuple([q+1,r-1]));
export var composite_list=function(){var __accu0__=[];for(var x of range(0,len(my_list),5))__accu0__.append(my_list.__getslice__(x,x+5,1));return __accu0__}();
var idx=np.array([0,0,0]);
model.add(act);
sys.exit(a);
tuple([tuple([1,[1,1,1],[0,0]])]);
export var ID=db.Column(db.Integer,__kwargtrans__({primary_key:true}));
dd[key].append(value);
a2Note.play();
submodule1.py;
template.format(...x);
export var signal=signal.sum(-1);
var df=pd.DataFrame(list(zip(...foo)),__kwargtrans__({columns:headers}));
f2.close();
all(function(){var __accu0__=[];for(var item of list(d1.py_items()))__accu0__.append(__in__(item,list(d2.py_items())));return py_iter(__accu0__)}());
var __left0__=proc.communicate();var stdout=__left0__[0];var stderr=__left0__[1];
madata;
print(model.intercept_,model.coef_);
var R=np.array([.5,.5,.5]);
export var thing=getattr(obj,py_name);
x+y;
(function(){var __accu0__=[];for(var item of list)if(conditional)__accu0__.append(expression);return __accu0__})();
comm.Recv([data,MPI.CHARACTER],__kwargtrans__({source:0,tag:22}));
foo.bar(1,2);
p.terminate();
root.iconify();
var list_list=[];
list(self._sa_instance_state.attrs.py_items());
diff.extend(function(){var __accu0__=[];for(var i=len(small);i<len(big);i++)if(!__in__(i,ignore))__accu0__.append(i);return __accu0__}());
var gy=np.array([[1,2,1],[0,0,0],[-1,-2,-1]]);
py_typeof(x[0]);
add_subdirectory(name_of_python_app);
var df=pandas.DataFrame(x_scaled);
sleep(5);
print(combs(sampleip));
var response=br.response();
tests.test_001_func();
hash(b);
mock_sgc_obj.assert_called_once_with(mock_mail_obj);
self.mocks;
list(it);
export var __c=ctypes.c_void_p(0);
print(pool.map(worker,list(range(5))));
timezone.make_aware(datetime.now(),timezone.get_current_timezone());
var metadata=MetaData();
screen.keypad(0);
arr.__getitem__([tuple([0,n,1]),tuple([0,n,1])]);

plt.ioff();
var cursor=conn.cursor();
print(line);
np.all(s==s2);
tour.append(current_vertex);
var holes=np.logical_and(cskel,noholes);
print(convert_excel_time(1.4006944444444));
print(function(){var __accu0__=[];for(var group of np.py_split(x,np.where(np.diff(x)>th)[0]+1))__accu0__.append(group.mean());return __accu0__}());
sum(p);
var root=Tkinter.Tk();
Response(serialized_student_detail.data);
data.py_sort(__kwargtrans__({key:function __lambda__(r){return r[1]}}));
self.argspec=inspect.getargspec(src_func);
q[p]=np.arange(len(p));
self.fptr=fptr;
recursiveBinaryChop(value,elementList,min,max);
var ranges=zip(cuts,cuts.__getslice__(1,null,1));
self.screen.blit(self.img,tuple([0,0]));
print(line);
self.fig=plt.figure();
new set([new set([form.title])]);
elem.py_clear();
self.__dict__.py_update(self._defaults);
(function(){var __accu0__=[];for(var k of d)__accu0__.append(k[0]);return __accu0__})();
isinstance(sys.stdin,file);
list(set(theList).intersection(theDict));
matrix[2][0]=5;
print(line.py_split()[1]);
label.master.lift();
var page=str(BeautifulSoup(response.content));
zf.extract(member,path);
my_cmd.cmdloop();
var in_memory_file=s.getvalue();
encodings.insert(0,denc);
new set([new set([animal.p])]);
row_count+=chunk.shape[0];
export var tweettext=f.read();
p.join();
a.foo();
srf.blit(f.render(unistr,true,tuple([255,0,0])),tuple([0,0]));
self.py_name=py_name;
print(list(df.py_keys()));
var parser=argparse.ArgumentParser();
var numbers_float=function(){var __accu0__=[];for(var x of numbers_str)__accu0__.append(float(x));return __accu0__}();
print(image.get_rect().size);
var ax2=fig.add_subplot(122);
sw.pack(__kwargtrans__({side:LEFT,fill:Tix.BOTH,expand:1}));
export var lasts=[];
dict(function(){var __accu0__=[];for(var [i,j]of enumerate(x))__accu0__.append([i,j[0]]);return __accu0__}());
image.show();
var bins=bins.__getslice__(0,-1,1)+(bins[1]-bins[0])/2;
var serializer_class=SpeakerSerializer;
var i=np.argmin(np.abs(df.index.to_pydatetime()-image_time));
word[0].isupper();
crawler.crawl(spider);
array([[0,1,0],[1,1,1],[0,1,0]]);
plt.show();
q.try_run();
var b=a.__getitem__([tuple([0,null,1]),np.arange(a.shape[1])!=50]);
(function(){var __accu0__=[];for(var [_,item]of zip(list(range(py_items)),list(self.py_items())))__accu0__.append(item);return __accu0__})();
self.tristate_parent(parent);
ser.write(theinput);
var data=f.read();
arr.shape;
export var theta=np.linspace(0,2*np.pi,40);
list(set(first)|set(second));
self.buttonPanel1.Show(false);
print(py_typeof(a));
isinstance(s,str);
var reader=csv.DictReader(f);
m.hexdigest();
__mod__(abs(hash(s)),Math.pow(10,8));
db.init_app(app);
tk.Frame.__init__(self,...args,__kwargtrans__(kwargs));
wx.Panel.__init__(self,parent);
it.dropwhile(function __lambda__(x){return x!=4},it.cycle(l));
data.append(el.text);
var parser=HTMLParser();
self.count+=1;
export var searchlines=f.readlines();
threadB.run();
a.__getitem__([np.arange(len(a)),lst]);
var py_name=models.CharField(__kwargtrans__({max_length:128}));
a===np.asarray(a);
var browser=webdriver.Firefox();

np.sqrt(np.sum(Math.pow(v1-v2,2)));
time.sleep(.1);
var d=dict([[part,d]]);
random.shuffle(listOfItems);
var L=L[ndx];
var column_names=function(){var __accu0__=[];for(var row of cursor)__accu0__.append(row[0]);return __accu0__}();
print(c.most_common(5));
print(line);
export var bool_arr=np.array(function(){var __accu0__=[];for(var row of x)__accu0__.append(myfunc(row));return __accu0__}());
self.children.append(child);
var fig=plt.figure();
b();
e.set_alpha(1);
np.where(pd.Index(pd.unique(B)).get_indexer(A)>=0)[0];
pyfoo;
getattr(item[1],item[0])();
var soup=BeautifulSoup(htmlSource);
np.array(x);
deletelist;
f_out_blg.write(line);
f_out_extkeys.write(line);
export var partition=function __lambda__(p,xs){return tuple([list(filter(p,xs)),function(){var __accu0__=[];for(var f of xs)if(!p(f))__accu0__.append(f);return __accu0__}()])};
f(...args,__kwargtrans__(kwds));
self.py_name=py_name;
ax.xaxis.label.set_rotation(90);
parser.add_argument();
export var block=a.__getitem__([y_coords.__getitem__([row,col]).__getitem__([tuple([0,null,1]),np.newaxis]),x_coords.__getitem__([row,col])]);
plt.ylim(np.log10(ilim));
main();
axis.set_major_locator(MaxNLocator());
plt.gca().add_artist(leg1);

myarray[0].__getslice__(0,1,1);
b-b.multiply(a);
self.ax.xaxis.set_major_locator(month);
sys.stdout.write(c);
plt.plot(t,2*s,__kwargtrans__({c:seaborn.color_palette()[2]}));
surface.blit(word_surface,tuple([x,y]));
print(fmt.format(...x));
json.dumps(value);
functools.reduce(add,list(range(1,11)));
var data=numpy.zeros(tuple([200,200,4]),__kwargtrans__({dtype:numpy.uint8}));
export var yidx=(raw.__getitem__([tuple([0,null,1]),1])-yrange[0]).astype(int);
var ax=plt.subplot(211);
choices.py_pop(0);
self.client_tcp_timeout.cancel();
ax.autoscale_view();
export var last_digit=__mod__(n,10);
var r=congruent.index.to_series().map(lkp).py_values;
A();
var __left0__=tuple([b,a]);var a=__left0__[0];var b=__left0__[1];
pickle.dump(results,f);
requests.py_get(queryurl,__kwargtrans__({auth:headeroauth}));
var b=list(set(a));
run();
export var idx_max=max(enumerate(x),__kwargtrans__({key:function __lambda__(x){return x[1]}}))[0];
a.index(f(a));
sys.path.append(egg_path);
print(string.ascii_lowercase);
export var cl=HierarchicalClustering(L,function __lambda__(x,y){return abs(x-y)});
file.write(response.text);
df_slcd;
var d=np.diff(x1.astype(int));
print(tuple([lst,sum(lst)]));
ax.add_patch(rect);
print(c.most_common(1));
fig.tight_layout();
b.build_platlib;
conn.connect(tuple([ip,port]));
np.add.at(out_count,np.where(mask2)[0],b.__getitem__([tuple([0,null,1]),1]));
s.__getslice__(n,null,1);
var m=np.ma.masked_where(y>2,y);
var new_list=function(){var __accu0__=[];for(var y of the_list)__accu0__.append(function(){var __accu1__=[];for(var x of y)__accu1__.append(x[1]);return __accu1__}());return __accu0__}();
gprun();
new set([url.current()]);
text.see(tk.END);
var cursor=conn.cursor();
count+=countit(target,key,count)+1;
var new_dict=deepcopy(orig_dict);
var c=numpy.repeat(b,a);
self.my_stuff=my_stuff;
draw.rectangle(tuple([67,0,100,100]),__kwargtrans__({fill:tuple([255,0,0,0])}));
sum(function(){var __accu0__=[];for(var c of word)__accu0__.append(char==c);return py_iter(__accu0__)}());
var fig=plt.figure();
df;
a.py;
list(fun(d));
d[item]+=1;
plt.draw();
var fig=plt.figure();
Response(up_file.py_name,status.HTTP_201_CREATED);
var c=np.arange(10).reshape(5,2);
np.repeat(np.repeat(A,2).reshape(2,4),2,0);
c.setopt(c.HEADERFUNCTION,headers.write);
export var ndates=function(){var __accu0__=[];for(var date of dates)__accu0__.append(reobj.match(date).groups());return py_iter(__accu0__)}();
plt.show();
pygame.draw.circle(screen,tuple([200,0,0]),pos,10,2);
self.signal.connect(self.receiver,__kwargtrans__(self.kwargs));
export var leerdammer=Cheese.slightly_holey();
print(formatdate(__kwargtrans__({timeval:stamp,localtime:false,usegmt:true})));
self.image.show();
var df=pd.DataFrame(np.random.rand(480,4E3),dates,stoks);
self.rect=self.image.get_rect();
a.append(i);
print(tuple([choice_data.i,choice_data.card]));
self.damp=damp;
var counts=Counter(function(){var __accu0__=[];for(var [k,v]of dictA.py_items())__accu0__.append(tuple([k[1],v]));return py_iter(__accu0__)}());
reverseCom([4,5,6],2);
var lines=f.readlines();
tick.set_markersize(6);
dict([[valid,py_true],[data,whatyouwanttostore]]);
print(list(my_splitter));
disable();
key_func();
g.close();
action.click();
(function(){var __accu0__=[];for(var item of theList)if(__in__(item,theDict))__accu0__.append(theDict[item]);return __accu0__})();
var r=function(){var __accu0__=[];for(var [a,b]of itertools.zip_longest(l,l.__getslice__(1,null,1),__kwargtrans__({fillvalue:l[0]})))__accu0__.append(tuple([a,b]));return __accu0__}();
var data=json.load(sys.stdin);
new_nums.append(nums[index-1]);
plt.mlab_source.set(__kwargtrans__({x:x,y:y,z:z}));
print(tuple(chain(...base_lists)));
today+relativedelta.relativedelta(__kwargtrans__({weeks:1,weekday:1}));
signal.pause();
export var counters=counters.reshape(len(peptides),16,5);
draw.rectangle(tuple([0,67,100,100]),__kwargtrans__({fill:tuple([0,255,0,0])}));
test1.foo();
self.remove(value);
export var fmax=np.maximum(f1,f2);
fout.write(fin.read());
a.foo();
print(m.__class__.__name__);
tuple(function(){var __accu0__=[];for(var x of t)__accu0__.append(isinstance(x,self.__class__)?x.fptr:x);return __accu0__}());
var legend=ax.legend();
export var fame=models.PositiveIntegerField(__kwargtrans__({py_default:1}));
ctypes.cast(a.ctypes.data,ctypes.POINTER(ctypes.c_float))[0];
var b=random.choice(range(a,len(xs)));
ax1.set_xticks(list(range(len(data.columns))));
var new_df=pd.DataFrame();
QtDBus.QDBusConnection.sessionBus().send(msg);
server.shutdown();
var p1=subprocess.Popen(args,__kwargtrans__({stdout:subprocess.PIPE}));
print(df);
py_typeof(self)==py_typeof(other)&&self.value==other.value;
Request(__kwargtrans__({url:self.login_page,callback:self.login}));
print(generate(client,sys.argv[1]));
self.queue.add(item);
print(line);
var t=Text(root);
glOrtho(0,w,h,0,0,1);
self.assertTrue(wrn);
var parser=argparse.ArgumentParser();
print(list(headers.py_keys()));
self.bttn.grid();
repr(f.__closure__[0]);
var driver=selenium.webdriver.PhantomJS();
dostufF();
ax.set_yticks(arange(df.shape[0]));
f(__kwargtrans__({test:1}));
[4,5,10];
var app=Flask(__name__);
signal.signal(signum,_kronos);
b.pack();
b_thread.join();
var Z=np.zeros(tuple([2,2]),__kwargtrans__({dtype:int}));
p.append(e);
var app=QtGui.QApplication(sys.argv);
var ax=fig.add_subplot(111);
export var mean_vals=np.bincount(out,__kwargtrans__({weights:A}))/np.bincount(out);
myfunc();
d[k]=frozenset(v);
var rows=cursor.fetchall().__getslice__(-10,null,1);
zip_longest(...args,__kwargtrans__({fillvalue:fillvalue}));
var lines=f.readlines();
sys.stdout.flush();
print(t.timeit(__kwargtrans__({number:1})));
print(f(2));
self.scrollbar.config(__kwargtrans__({command:self.text.yview}));

app.exec_();
var writer=csv.writer(f);
var lst=tuple([[0,1],[0,4],[1,0],[1,4],[4,0],[4,1]]);
d+=timedelta(__kwargtrans__({days:1}));
self.response.out.write(json.dumps(response));
var __left0__=tuple([[],[]]);var x=__left0__[0];var y=__left0__[1];
self.button.setIconSize(QtCore.QSize(128,128));
f.close();
self.__dict__.py_update(kwargs);
log.start(__kwargtrans__({loglevel:log.DEBUG}));
print(stdout);
rd.fit(X,y);
var df2=pd.DataFrame(randn(5,10));
var new_df=new_df.append(view);
export var num_int=int(num_str);
cancel(-a*b*exp(a*b*x)/(1+exp(a*b*x)));
new set([new set([comment.comment])]);
file_date_tuple_list.py_sort(__kwargtrans__({key:function __lambda__(x){return x[1]}}));
f.close();
var gray=cv2.cvtColor(im,cv2.COLOR_BGR2GRAY);
var wait=WebDriverWait(driver,10);
all(some_list);
count(i+1,j)+(seq[i]==sub[j]?count(i+1,j+1):0);
succs[u].add(v);
print(!any(dict1.py_values()));
(function(){var __accu0__=[];for(var [x,y]of zip_longest(it1,it2))__accu0__.append(tuple([x,y]));return __accu0__})();
self[something];
var root=Tk();
var i=int(i);
animate/path/to/animated.gif;
self.py_clear();
view.sel().add(sublime.Region(0,0));
frozenset(x).intersection(y);
jobs.append(task2());
var d=dict(map(py_reversed,list(a.py_items())));
random_sample_output.close();
n-=1;
results.put(simulation_result);
self.a.b.c;
var sum2=data1[np.in1d(idx1,idx2)].dot(data2[np.in1d(idx2,idx1)]);
var py_keys=function(){var __accu0__=[];for(var r of data)__accu0__.append(r[1]);return __accu0__}();
var response=requests.py_get(url);
pyplot.subplot(2,1,1);
m.get_server().serve_forever();
var it=chain(a,b);
gevent.sleep(1);
dc.SetBrush(wx.Brush(self.GetForegroundColour()));
var a=np.arange(2,10);
fmt.format(msg,lineno,colno,endlineno,endcolno,pos,end);
match.group(1).upper();
file_write.write(r.read());
export var gridy=np.linspace(-1,1,5);
fp.truncate();
df.loc[~(trans_neg|trans_neg.shift(-1))];
print(df.iloc.__getslice__(i-N,i,1));
socket.inet_pton(socket.AF_INET6,domain);
file.close();
var parsed=json.load(handle);
response;
print(py_typeof(foo));
acceptable;
libvirt.virEventRunDefaultImpl();
pl.show();
QtCore.QCoreApplication.quit();
print(tuple([a,b,c,d]));
self.uncheck_descendant(item);
sqrt(Math.pow(a.x-b.x,2)+Math.pow(a.y-b.y,2));
logger.setLevel(logging.DEBUG);
plt.imshow(np.mod(data,42));
print(dict(__kwargtrans__(f)));
ExampleModel.objects.py_update(__kwargtrans__({string_field:f}));
print(tuple([address,networka,networkb]));
im.set_data(frame);
var fd=os.open(filename,os.O_RDWR|os.O_CREAT);
print(json.dumps(get_classes_from_text(text),__kwargtrans__({indent:4})));
var res=urllib.request.urlopen(url);
plt.setp(xtickNames,__kwargtrans__({rotation:0,fontsize:40}));
var data=json.load(open(filename));
recursion(index+1,result+ls[index]);
var a=np.py_sort(a);
len(temp)>1?function(){var __accu0__=[];for(var x of temp.__getslice__(1,null,1))__accu0__.append(temp[0]+x);return __accu0__}():input;
var srf=pygame.display.set_mode(tuple([500,500]));
self.agg_log.addHandler(logging.StreamHandler());
gens.append(gen());
export var mapf=mmap.mmap(f.fileno(),0,__kwargtrans__({access:mmap.ACCESS_WRITE}));
print(round.__doc__);
dict();
print(buff.__getslice__(0,-1,1));
test.cvec()[0]=0;
var rs=func(...args,__kwargtrans__(kwargs));
pygame.init();
print(pd.concat([df.iloc.__getitem__([0,tuple([0,null,1])]),df.iloc.__getitem__([-1,tuple([0,null,1])])],__kwargtrans__({axis:1})).T);
sip.delete(self.widget_name);
var a=np.zeros(tuple([4,4]));
primerange(a,b);
var fig=plt.figure(__kwargtrans__({figsize:tuple([8,6]),dpi:100}));
plt.xticks(xvals,xnames);
say_captcha_is_invalid();
numSeq(1,0,0);
var file_content=f.read();
var f=function __lambda__(a,b,c){return function __lambda__(x){return a+b*c-x}}(__kwargtrans__(locals()));
export var container=models.ForeignKey(Dicty,__kwargtrans__({db_index:true}));
py_iter(foo.splitlines());
self.root.setLevel(logging.DEBUG);
ax.set_xticks(arange(df.shape[1]));
export var my_path=module_locator.module_path();
self.testbed.deactivate();
var pb=gtk.gdk.Pixbuf(gtk.gdk.COLORSPACE_RGB,false,8,sz[0],sz[1]);
sys.stdout.write(frame.tostring());
all_same([]);
(function(){var __accu0__=[];for(var [b,v]of self._choices)if(b&selection)__accu0__.append(v);return __accu0__})();
var db=SQLAlchemy(app);
self.companion.stdin.write(datum);
py_metatype.__new__(self,py_name,bases,classdict);
controllers/py_default.py;
var img=Image.open(sys.argv[1]);
draw();
var ret=numpy.zeros(data.shape.__getslice__(0,2,1),__kwargtrans__({dtype:numpy.bool}));
WSGIPythonExecutable/path/to/python/2.5/exe;
plt.clf();
var d=os.path.abspath(startPath);
fp.close();
var poly=PolyCollection(verts,__kwargtrans__({facecolors:tuple([1,1,1,1]),edgecolors:tuple([0,0,1,1])}));
m.groupdict();
self.Bind(wx.EVT_CHECKBOX,self.EvtCheckBox,self.checkbox[i]);
ui.syn();
new set([new set([animal])]);
var saved=locale.setlocale(locale.LC_ALL);
example2(x,a,b,D);
s.setsockopt(socket.SOL_TCP,socket.TCP_KEEPINTVL,1);
deletesys.modules[__name__];
data.py_sort();
plot(x,y1);
MagicMock.__init__(self,...args,__kwargtrans__(kwargs));
G.add_node(1,__kwargtrans__({pos:tuple([1,1])}));
var user=models.OneToOneField(User);
unittest.TextTestRunner(__kwargtrans__({verbosity:2})).run(suite());
var a=itertools.chain.from_iterable(x);
self.node=Node();
tup[1]<<8|tup[0];

frame.grid_rowconfigure(0,__kwargtrans__({weight:1}));
zip_longest(...args,__kwargtrans__({fillvalue:fillvalue}));
self.lock=threading.Lock();
shared_queue_list.append(shared_queue.py_get());
var __left0__=plt.subplots(__kwargtrans__({figsize:tuple([8,6])}));var fig=__left0__[0];var ax=__left0__[1];
var logger=logging.getLogger(__name__);
digs[0];
confused_array[mask]=1;
child.kill();
c.execute(query,flattened_values);
(function(){var __accu0__=[];for(var i of set(map(tuple,function(){var __accu1__=[];for(var i of a)__accu1__.append(sorted(i));return py_iter(__accu1__)}())))__accu0__.append(list(i));return __accu0__})();
person.guilds.append(self.key);
self.master.rowconfigure(5,__kwargtrans__({weight:1}));
np.isnan(A);
(function(){var __accu0__=[];for(var i of range(0,len(l),n))__accu0__.append(l.__getslice__(i,i+n,1));return __accu0__})();
var fig1=plt.figure();
var cj=cookielib.CookieJar();
python-pip;
list(islice(missing,0,count));
PyparsingGrammar.parseString(line);
var counts=Counter(a);
os.rename(out_fname,fname);
subprocess.call(cmd);
results.predict(start,end);
(function(){var __accu0__=[];for(var an_object of object_list)__accu0__.append([an_object.py_name,an_object]);return dict(__accu0__)})();
var b=models.ForeignKey(B);
self.buf.read()+self.fileobj.read();
var x=SimpleClass();
self.__dict__=json.loads(j);
export var uncompressed=zippy.read();
plt.xlim(-1,1);
df.columns=df.columns.droplevel();
export var median=df.impwealth[cumsum>=cutoff].iloc[0];
time.sleep(timeout);
help(my_list.append);
array.__setitem__([i,j],array.__getitem__([i,j])+10);
var output=p2.communicate()[0];
next_file.write(row);
a.add(1);
dosomethingelse;
fobj.seek(0);
int(math.floor(math.log10(self.n)+1));
br.set_handle_robots(false);
ax1.xaxis.tick_top();
time.sleep(5);
os.chown(path,_user,_group);
stage.py;
var result=list(create(20,dict));
var arrays=function(){var __accu0__=[];for(var x of arrays)__accu0__.append(np.asarray(x));return __accu0__}();
axes_1.axis([-5,5,-5,5]);
var X=np.linalg.solve(A,np.ones(tuple([2*(n-1)])));
list(db.collection.aggregate(pipeline));
[pypitest];
bpos+=blo;
loader.write(response.read());
np.prod(c.shape)==np.prod(a.shape)*np.prod(b.shape);
var dict2=dict(dict1);
var __left0__=zip(...ans).__getslice__(0,2,1);var id=__left0__[0];var value=__left0__[1];
max(mywords,__kwargtrans__({key:len}));
socket.inet_aton(addr);
(function(){var __accu0__=[];for(var row of matrix)__accu0__.append(row.__getslice__(0,column,1)+row.__getslice__(column+1,null,1));return __accu0__})();
sorted(set(it.chain(...ranks)),__kwargtrans__({key:c.__getitem__,reverse:true}));
a[b].mean();
plt.figimage(a,__kwargtrans__({cmap:plt.gray()}));
spam_list.py_sort(__kwargtrans__({key:order.py_get}));
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
apply_labels(p1,labels);
browser.close();
cu.save();
print(item.unique());
var coo=numpy.random.randint(0,N,__kwargtrans__({size:tuple([M,2])}));
export var normY=np.sqrt(ssY);
export var RSAkey=RSA.generate(1024,rng);
self.children.append(node);
print(py_next(line));
var c=conn.cursor();
export var control=wx.StaticBitmap(self,-1,bitmap);
var x=np.linspace(0,2*np.pi,100);
mailServer.close();
project.save();
list();
map(itemgetter(1),sorted(m.groupdict().py_items()));
win.add(scroll_win);
pylab.gca().add_patch(patches.Polygon(pp,__kwargtrans__({closed:false,fill:false})));
(function(){var __accu0__=[];for(var e of l)if(__mod__(e,2))__accu0__.append(e);return __accu0__})();
plt.show();
outlist[-1].append(json.dumps(dict([[k,d[k]]])));
var fig=plt.figure();
result_queue.put(res);
var pdf=pyPdf.PdfFileReader(p);

matplotlib.__version__;
export var tfc=tf.Variable(npc);
export var word_counter=Counter(words);
var result=function(){var __accu0__=[];for(var item of list_y)if(!__in__(item.__getslice__(0,2,1),list_x_set))__accu0__.append(item);return __accu0__}();
res.show();
ax.contour(X,Y,Z);
print(l[i]);
self.send_blob(blob_info,__kwargtrans__({save_as:false}));
self.__dict__.py_update(kwargs);
self.doc.getroot();
l[i]=l[i]*2;
print(mydict[alias1]);
i+=1;
var data=np.random.random(tuple([N,7]));
ax.set_aspect(1);
export var neurons=function(){var __accu0__=[];for(var n=0;n<5;n++)__accu0__.append(Neuron());return __accu0__}();
getattr(self.obj,self.property_names[item]);
res.append(1);
foo(iterable);
joinable.append(mpp);
self.pool=multiprocessing.Pool(__kwargtrans__({processes:N_PROC}));
df;
var c=b.flat;
gluOrtho2D(0,1,0,1);
plt.show();
ax.figure();
(function(){var __accu0__=[];for(var letter of dicts[0])__accu0__.append([letter,max(function(){var __accu1__=[];for(var d of dicts)__accu1__.append(d[letter]);return py_iter(__accu1__)}())]);return dict(__accu0__)})();
ax.legend();
var result=requests.py_get(url);
rlcn.method2();
resident.ssa_set.all();
i.py_split();
var user=session.query(User).py_get(someid);
responses.py_pop();
var ax=plt.gca();
print(i);
y[words[0]].append(words[2]);
myModule.printY();
fo.close();
(function(){var __accu0__=[];for(var e of foo(bar))__accu0__.append(e);return __accu0__})();
nbr_edgeobjects+=1;
foo.bar=bar;
target.send(tuple([key,n*10]));
__init__.py;
var handler=logging.StreamHandler();
str.__new__(cls,content.upper());
var opener=urllib.request.build_opener(urllib.request.HTTPCookieProcessor(cj));
var response=requests.py_get(url);
var conn=imaplib.IMAP4_SSL(servername);
Queue._put(self,item);
ax.set_zlim([-1,8]);
pdb.set_trace();
2;
argsdict.py_update(dict([[argname,argvalue]]));
plt.plot(list(range(10)));
requests_log.setLevel(logging.WARNING);
var html=f.read();
1.5<a&a<2.5;
print(list(cm.datad.py_keys()));
json.dumps(dict(__kwargtrans__({nodes:graph.nodes(),edges:graph.edges()})));
var c=np.r_.__getitem__([a,b]);
var __left0__=wavfile.read(filename);export var fs=__left0__[0];var data=__left0__[1];
tuple([tuple([0,1]),tuple([5,4])]);
self.window.move(gtk.gdk.screen_width()-100,0);
(xdiff.dot(Sigma_inv)*xdiff).sum(__kwargtrans__({axis:-1}));
tuple([[0,0,0,0,0]]);
mat[0]*(len(ixs)-np.count_nonzero(nzmask))+nzsum;
partition(list(range(105)),10);
export var serverSocket=socket.socket(socket.AF_INET,socket.SOCK_STREAM);
var opener=urllib.request.build_opener(authhandler);
app.exec_();
self.outstream.write(self.theA);
plt.clf();
cgi.test();
var fig=PLT.figure();
tuple([1,0,0,0,1,0,1,0,0]);
ranges.append(tuple([group[0],group[-1]]));
var arr=input();
a.insert(2,x);
shutil.rmtree(tmp_dir);
self.SetTopWindow(self.frame);
self._d[self._s[k.lower()]];
print(model.score(X,y));
var B=[4,5,6];
all(list_of_bools);
var root=ET.fromstring(xml_str);
deleted.__getitem__([k,j]);
some_value;
p.exists();
fig.canvas.draw();
row_ind.extend([k]*len(v));
gcf().canvas.draw();
dicto[ele[0][0]].append(ele);
Fruit.__init__(self,__kwargtrans__(kwargs));
var width=t.winfo_width();
task.retry(__kwargtrans__({queue:task.request.hostname}));
var hsv=cv2.cvtColor(img,cv2.COLOR_BGR2HSV);
export var mdls_output=pat.sub(myfn,mdls_output);
print(obj.__class__.__name__);
tuple([0,0,0,0,0,1,1,0,1,1,1,1,1,1]);
pprint.pprint(value);
tuple([tuple([a[0],b[0]])]);
var data=numpy.where(selected_indices,[4,5,6],data);
pd.DataFrame(function(){var __accu0__=[];for(var [n,row]of enumerate(df.T))__accu0__.append([n,foo(df.T[row].nlargest(k))]);return dict(__accu0__)}()).T;
pickle.dump(i,sys.stdout);
df.drop_duplicates().A.value_counts();

self.l.append(Tree(i-1));
var result=urllib.request.urlopen(request).read();
foo(...py_values);
driver.close();
var b=numpy.random.randn(20,20);
var parser=argparse.ArgumentParser();
var tree=ET.parse(filename,__kwargtrans__({parser:LineNumberingParser()}));
print(root.tk.splitlist(filez));
grouped.last();
var __left0__=np.array([np.arange(10),np.arange(10)]);export var c1=__left0__[0];export var r1=__left0__[1];
var im=im.resize(tuple([int(width/rat),int(height/rat)]));
df.groupby(date.py_values).mean();
var ax=plt.subplot(gs.__getitem__([tuple([0,2,1]),tuple([0,null,1])]));
self.nesting+=1;
logging.setLoggerClass(Logger);
number+=1;
sys.stdout.flush();
imagelist.extend(glob.glob(os.path.join(image_directory,ext)));
deletesys.path[-1];
var reader=csv.reader(f);
data.mode;
var server=smtplib.SMTP();
export var angle2=abs(math.degrees(math.atan(slope2)));
df[list_of_cols].dropna(__kwargtrans__({thresh:1})).head();
sys.modules[__name__]=Wrapper(sys.modules[__name__]);
export var probs=[.1,.2,.5,.2];
sys.excepthook=debugexcept;
(function(){var __accu0__=[];for(var i of list(ret))__accu0__.append(strs[i]);return __accu0__})();
draw.ellipse([left,top,right,bottom],__kwargtrans__({fill:fill}));
a.some.__self__===a;
x+=np.random.random(__kwargtrans__({size:12}));
toc2(false);
print(django.get_version());
print(str(item));
worksheet.py_update();
var pattern=eval(input());
export var source=inspect.getsource(func);
tot+=Math.pow(Math.pow(data.__getslice__(i+1,null,1)-data[i],2).sum(1),.5).sum();
export var my_set=set(my_list);
var x=np.arange(100,1,-1);
h.digest();
var sock=socket.socket(socket.AF_INET,socket.SOCK_STREAM);
fig.canvas.draw();
export var angle1=abs(math.degrees(math.atan(slope1)));
slither/slither/__init__.py;
var columns=function(){var __accu0__=[];for(var i of cursor.description)__accu0__.append(i[0]);return __accu0__}();
var c=function(){var __accu0__=[];for(var [x,y]of zip(a,b))__accu0__.append(x+y);return __accu0__}();
mail.inbox();
pydevd.settrace(__kwargtrans__({suspend:false}));
print(f.read());
driver.set_window_size(1024,768);
var url=s.get_location();
self.close();

var ax=subplot(111);
setattr(theclass,x,logging(getattr(theclass,x)));
var i=Image.open(sys.argv[1]);
var a=qt.QApplication(sys.argv);
var ax=fig.add_subplot(111);
sys.exit();
export var my_opener=urllib.request.build_opener(MyHTTPHandler);
datetime.datetime(...t.__getslice__(0,6,1));
cv2.line(vis,tuple([x1,y1]),tuple([x2,y2]),green);
(function(){var __accu0__=[];for(var row of reader)__accu0__.append(function(){var __accu1__=[];for(var x of row)__accu1__.append(x.strip());return __accu1__}());return __accu0__})();
var fn=true?function __lambda__(x){return x}:function __lambda__(x){return x*x};
ax.add_patch(p1);
var __left0__=t.py_pop(0);var k=__left0__[0];var v=__left0__[1];
blih();
bluh();
sys.stdin.readline();
shutil.rmtree(to_path);
export var repeated=function(){var __accu0__=[];for(var i of lst)if(lst.count(i)>1)__accu0__.append(i);return __accu0__}();
ax.plot(list2);
var response=urllib.request.urlopen(req);
logging.info(str(item));
var fig=pl.figure();
var result=function(){var __accu0__=[];for(var s of S)__accu0__.append(function(){var __accu1__=[];for(var [i,row]of enumerate(X))if((s==row).all())__accu1__.append(i);return __accu1__}());return __accu0__}();
var mask=np.ones(a.shape,__kwargtrans__({dtype:bool}));
print(new_str);
var __left0__=np.histogram(np.random.rand(100),__kwargtrans__({bins:cdf}));var counts=__left0__[0];export var edges=__left0__[1];
export var Ig=arange(t1.min(),t1.max(),1);
sys.stdout.write(c);
nx.simple_cycles(G);
print(str(d));
np.maximum(x,0);
self.timer=QtCore.QTimer();
final.append(compound[x-1]);
var __left0__=map(int,f.readline().py_split());var w=__left0__[0];var h=__left0__[1];
re.findall(RE,string);
df[cols].sum(__kwargtrans__({axis:1}));
dc.SetBackground(wx.Brush(self.GetBackgroundColour()));
pd.DataFrame(Dict);
var module=sys.modules[__name__];
export var GinvVV=np.asarray(GinvVV);
var data=urllib.request.urlopen(url).read();
c.release();
export var jsonObj=json.dumps(data);
var __left0__=line.py_split();var key=__left0__[0];var value=__left0__[1];
var parser=argparse.ArgumentParser();
100*np.round(dfrm,2);
[2];
var result=dict({});
self.response.write(rv);
self.schedule.cancel(self.event);
win.SetPosition(tuple([x,y]));
__hello();
word_freq.py_update(line.py_split());
foo(a);
self.cursor.close();
cr.set_source_rgba(0,0,0,0);
py_next(func);
s.__getslice__(0,i,1)+s.__getslice__(i,null,1).capitalize();
sys.path.append(os.path.dirname(fullpath));
var ax=fig.add_subplot(111);
temp.__setitem__(0,1);
fig.colorbar(im);
np.lib.stride_tricks.as_strided(a,__kwargtrans__({shape:shape,strides:strides}));
myset.py_pop();
self.__dict__.py_update(...args,__kwargtrans__(kwargs));
print(key,value);
MyModel2.mymodel1.through.objects;
p.open_files();
self.mtx.lock();

test[-1]+=1;
ax.yaxis.set_tick_params(__kwargtrans__({size:0}));
self.lock=multiprocessing.Lock();
ode15s.set_initial_value(u0,t0);
print(input[indices[indices<5]]);
export var gen=function(){var __accu0__=[];for(var n=0;n<11;n++)__accu0__.append(n);return py_iter(__accu0__)}();
pwd.getpwuid(os.getuid())[0];
db.collection.find(condition).limit(1).skip(Math.floor(Math.random()*N));
py_iter([self.instanceA,self.instanceB,self.instanceC]);
export var new_body_text=re.sub(pattern,FootnoteNumbers(),text);
args.func(__kwargtrans__(args_for_func));
foo();
myPopy.wait();
SPN[0].shape;
QtCore.QObject.__init__(self,parent);
var indices=range(len(li)-1,0,-1);
self.move(frameGm.topLeft());
var nDigits=1+floor(log(nmb,base));
print(etree.tostring(root));
p.py_name();
new_password;
f(...args,__kwargtrans__(kwargs));
print(repr(s.getvalue()));
df;
var Z=inner1d(X,Y);
print(df.columns[np.argsort(-df.py_values,__kwargtrans__({axis:1})).__getitem__([tuple([0,null,1]),tuple([0,2,1])])]);
var a=np.arange(50).__getslice__(0,null,-1);
var ax1=fig.add_subplot(2,1,1);
list(range(Math.pow(10,14),Math.pow(10,15),Math.pow(10,14)));
var form=ModelForm(request.POST,request.FILES);
print(s.rhyme());
export var pytime=os.path.getmtime(os.path.join(root,sc));
self.cumweights.append(cumsum);
copytree(srcname,dstname,symlinks,ignore);
var line=input();
var pool=multiprocessing.Pool();
var df=df.py_sort();
mylist.py_pop(0);
f.seek(0);
var db=SQLAlchemy(app);
id(np.nan)==id(np.nan);
x[i]=y-1;
sys.exit();
var tree=et.fromstring(xml);
var user=models.ForeignKey(User,__kwargtrans__({unique:true}));
self.tags.add(tag);
var data=np.array(im);
c2.setopt(pycurl.PROXYTYPE,pycurl.PROXYTYPE_SOCKS5);
print(e.tag,e.text,repr(e.tail));
G.add_edge(1,2);
start_thread();
out.write(txt);
self.SetSizer(sizer);
tuple([len(answer)-star_len,star_len,len(prediction)-star_len]);
G.add_edge(4,5);
plt.figure();
export var cmat1=scipy.sparse.csc_matrix(mat1);
new set([1,1,0,1,0,0,0,1,1,0,1,1,1,1,1,0,1,0,1,0,0,1,1,0,0,0]);
f.set_axis_off();
print(s);
var obj=json.loads(s,__kwargtrans__({object_hook:_decode_dict}));
zip_longest(...[py_iter(iterable)]*n,__kwargtrans__({fillvalue:padvalue}));
canvas.show();
print(df1.div(len(df.index)));
np.sum(a.dot(b),__kwargtrans__({axis:0}));
client.set_missing_key_policy(paramiko.AutoAddPolicy());
df1.py_update(df1_updater);
sfile.close();
export var npage=pdf_im.getNumPages();
virtualenv-p/path/to/python-anaconda-version;
var __left0__=np.meshgrid(np.linspace(0,1,Nx),np.linspace(0,1,Ny));export var Xmesh=__left0__[0];export var Ymesh=__left0__[1];
self.run();
var __left0__=plt.subplots(__kwargtrans__({nrows:2,ncols:2}));var fig=__left0__[0];var axes=__left0__[1];
tf.pack(states);
s.quit();
var args=parser.parse_args();
(a.__getslice__(i,null,1)>a[i]).nonzero()[0][0]+i;
tar.close();
cr.rectangle(tuple([0,0])+size);
export var nanoseconds=int(time.time()*1E9);
var xs=np.random.choice(arr,n-1);
screen.getch();
export var page_source=browser.page_source;
opener.open(url).read();
var __left0__=ax.get_legend_handles_labels();var handles=__left0__[0];var labels=__left0__[1];
open(path,mode);
wPM.restype=wintypes.BOOL;
var tokens=function(){var __accu0__=[];for(var t of tokens)__accu0__.append(t.lower());return __accu0__}();
var i=i+1;
var __left0__=process.communicate();var out=__left0__[0];var err=__left0__[1];
d.py_setdefault(k,set());
window.mainloop();
var line=proc.stdout.readline();
plt.show();
plt.plot(x,s(x));
var df=(df1-df2).dropna().copy();
array.__getitem__([x,y]);
print(tuple([date_cand,(datetime.date.today()-date_cand.date()).days]));
var b=[4,5,6];
base64.b64encode(dig).decode();
plt.imshow(image);
pygame.init();
export var local_p=subprocess.Popen(local_command,__kwargtrans__({shell:true,stdout:subprocess.PIPE}));
x;
export var mail=outlook.CreateItem(0);
self.updateimage(0);
x.bit_length()-1;
var result=float(literal_eval(float_str));
d_out.py_update(d);
self.server_activate();
mvaddch(y,x,ch);
export var updated_dict=dict(old_dict,__kwargtrans__(extra_dict));
get_func.__func__===Client.py_get.__func__;
pix.__setitem__([x,y],value);
getattr(self,py_name);
__in__(key,self.data);
move_set.add(random.randrange(0,10));
conn.starttls();
self.table.verticalHeader().setTextElideMode(QtCore.Qt.ElideRight);
self.figure=Figure();
now.date();
var browser=mechanize.Browser();
export var popularity=sorted(d,__kwargtrans__({key:d.py_get,reverse:true}));
c.__getitem__([tuple([0,null,1]),tuple([1,null,1])])==c.__getitem__([tuple([0,null,1]),tuple([0,-1,1])]);
var user=User.objects.py_get(__kwargtrans__({pk:profile.user_id}));
set_columns(widget.columnCount(),0);
plt.yticks([]);
print(platform.mac_ver()[0]);
self.cdfunc._func(self.obj,...args,__kwargtrans__(kwargs));
tuple([a,b,c,d,e]);
plt.plot(X,Y);
defaultdict(partial(numpy.ndarray,0));
var f=urllib.request.urlopen(self.url);
nosetests-s;
cv2.LUT(image,table);
var driver=webdriver.Firefox();
export var test_column=Column(Unicode(2),__kwargtrans__({primary_key:true}));
(a-b).days;
date+=timedelta(__kwargtrans__({days:10}));

print(time.time()-start);
csv.writer(fw).writerows(data);
export var position=models.CharField(__kwargtrans__({max_length:128}));
monthrange(2011,2);
np.random.choice(np.arange(len(b)),5,__kwargtrans__({p:b/len(a),py_replace:false}));
output.append(line);
var myset=set(mylist);
pool.map(process_image,data_inputs);
export var bs=BeautifulSoup.BeautifulSoup(data);
var form=CostForm(request.POST);
print(matches.group(1));
var l1=list(set(l1).difference(l2));
self.left.append(v);
self.entry=tk.Entry(self);
sys.exit(-1);
len(set(tuple([t0,t1])));
plt.subplots_adjust(__kwargtrans__({wspace:0}));
len(d.stack());
grouped.JobNos.sum().idxmax();
ax.set_xticks(his[1].__getslice__(1,null,1)+offset);
s.close();
__mod__(transCount,2)==0;
y.__getitem__([0,tuple([0,null,1]),0,tuple([0,null,1])]);
var nums=function(){var __accu0__=[];for(var i=0;i<digit_count;i++)__accu0__.append(random.randrange(1,10));return __accu0__}();
(function(){var __accu0__=[];for(var [k,g]of itertools.groupby(words_sorted,__kwargtrans__({key:len})))__accu0__.append([k,set(g)]);return dict(__accu0__)})();
var lock=threading.Lock();
curs.fetchone();
export var diff_unique=list(set(diff_list)-set(source_list));
d.div(d.abs()).fillna(0);
var tree=ET.ElementTree(root);
tmp_arr.append(float(j)/float(a));

var ch=os.read(sys.stdin.fileno(),1);
export var first_it=py_iter(my_list);
printbob.py;
list(zip(s,s.__getslice__(1,null,1)+s.__getslice__(0,1,1)));
self.cam.read();
export var choices=function(){var __accu0__=[];for(var [k,v]of list(your_dict.py_items()))__accu0__.append(random.choice(v));return __accu0__}();
fig.tight_layout();
output.close();
sum(g);
dbs;
var dx=0;
var df=pd.DataFrame(d);
seen.add(item);
self.crawler.install();
plt.xlim(0,X.shape[1]);
loglogmod.fit(x,y);
data.append(function(){var __accu0__=[];for(var c of row.getchildren())__accu0__.append(c.text_content());return __accu0__}());
os.system;
self.board[x];
tuple(function(){var __accu0__=[];for(var [x,y,z]of G)__accu0__.append(x);return __accu0__}());
export var ourSocket=socket.socket(socket.AF_INET6,socket.SOCK_STREAM,0);
var args=parser.parse_args();
print(py_values.__getitem__([tuple([0,null,1]),0]).sum());
getattr(self,attr_name);
max(map(len,stringlist));
g.nth(1).dropna();
wx.EVT_UPDATE_UI(self,self.GetId(),self.onUpdateUI);
var b=np.zeros(tuple([M.shape[0],M.shape[1],M.shape[1]]));
df;
var names=dir(self.__class__);
df.apply(pd.Series.value_counts);
task_postrun.connect(self.task_done);
self.browser.select_form(__kwargtrans__({nr:0}));
result.append(key_result);
dis.dis(test6);
df.loc.__setitem__([tuple([0,null,1]),cols],df[cols].where(df[cols].where.ge(0),np.nan));
tuple([z.min(),z.argmin()[0],z.argmin()[1]]);
self.ser.write(packet);
doc.firstChild.appendChild(elem);
export var zip_list=len(A)>len(B)?zip(A,cycle(B)):zip(cycle(A),B);
sns.plt.show();
var d=defaultdict(dict);
modify_legend(__kwargtrans__({numpoints:1}));
plt.legend();
sum(bits*u.__getslice__(0,null,-1),1);
dis.dis(bar);
df;
var __left0__=hsv_to_rgb(h,s,v);var r=__left0__[0];var g=__left0__[1];var b=__left0__[2];
var d=dict({});
np.ma.MaskedArray(a,__kwargtrans__({mask:(np.ones_like(a)*(a.__getitem__([tuple([0,null,1]),0])==1)).T}));
main();
f(d);
self.date=d.astimezone(pytz.utc);
var result=sorted(tuple([min_value,result,max_value]))[1];
export var list_req=function(){var __accu0__=[];for(var x of l)__accu0__.append(my_replace(seq,...x));return __accu0__}();
print(element.text);
tmp[i][j]=src.__getitem__([i,j]);
print(str(b));
export var n_items=take(n,py_iter(d.py_items()));
array(function(){var __accu0__=[];for(var a of A)__accu0__.append(lapack_inverse(a));return __accu0__}());
var p2=interpolate.PiecewisePolynomial(x2,y2.__getitem__([tuple([0,null,1]),np.newaxis]));
array([[true,false],[false,false]],__kwargtrans__({dtype:bool}));
G.add_edge(1,2);
memcache_client.set(key,obj);
s.send(line);
var line=input.readline().strip();
time.sleep(.5);
numpy.sqrt(numpy.sum(Math.pow(x-y,2)));
ax.scatter(x,y,z);
logging.Handler.__init__(self);
item.setToolTip(item.text());
sleep(0);
export var structured_dictionary=json.loads(string_received);
simplejson.dumps(userJSON);
axins.set_xlim(x1,x2);
self._data;
print(files.py_sort(__kwargtrans__({reverse:true})));
dominated.append(candidate);
f.write(template.format(df.to_latex()));
lines.__getitem__([tuple([0,null,1]),-offset]);
foo();
self.layout=QtGui.QVBoxLayout(self);
print(list(squares(20,90)));
result.resize(tuple([64,64]),Image.ANTIALIAS).save(sys.argv[2]);
self.data[i];
f.readlines()[line_number-1];
plt.scatter(x,y,__kwargtrans__({c:z}));
export var Base=declarative_base();
(function(){var __accu0__=[];for(var i=0;i<numrows;i++)__accu0__.append(alist.__getslice__(i,null,sublen));return __accu0__})();
map(str.upper,strs);
print(t[1][0]);
var lines=function(){var __accu0__=[];for(var line of file)if(line.strip())__accu0__.append(line.strip());return __accu0__}();
taskbar.SetProgressValue(self.winId(),40,100);
export var potentialClosest=dist.argmin(__kwargtrans__({axis:1}));
myseries_three.iloc.__getslice__(0,2,1);
writer.writerow(row);
print(yaml.dump(o1));
pd.DataFrame(arr).groupby([0,1,2]).max().reset_index();
root.destroy();
print(response.read());
export var absx=np.abs(X[-np.isnan(X)]);
f(...full_args,__kwargtrans__(kwargs));
export var mn=s.index(t.lower());
(function(){var __accu0__=[];for(var y of input)__accu0__.append(function(){var __accu1__=[];for(var x of y)__accu1__.append(map[x]);return __accu1__}());return __accu0__})();
var my_list=[1,2,4,6,7];
export var context=self.get_context_data(__kwargtrans__(kwargs));
var counts=map(Counter,zipped);
mults.append(1);
g.__name__;
subprocess.check_call(cmd,__kwargtrans__({stdout:outputfile,stderr:subprocess.STDOUT}));
ax.set_aspect(1);
count+=1;
pygame.font.init();
wmctrl-l;
worksheet.write(r,c,col);
app.run(__kwargtrans__({debug:true}));
var df1=df[~mask].copy();
count+=1;
export var accumulationList=[];
plt.plot(list(range(5)));
print(df);
A.print_x(b);
var data=db.query(sql).store_result();
activate(settings.TIME_ZONE);
sorted_li.py_sort(__kwargtrans__({key:itemgetter(0)}));
print(sess.run(y,__kwargtrans__({feed_dict:dict([[x,data]])})));
tuple([u,array(function(){var __accu0__=[];for(var x of u)__accu0__.append(len(input[all(input==x,__kwargtrans__({axis:1}))]));return __accu0__}(),__kwargtrans__({dtype:int}))]);
var c=Counter(function(){var __accu0__=[];for(var x of py_iter(list1))__accu0__.append(tuple(x));return py_iter(__accu0__)}());
start+=step;
export var ssq1=Math.pow(yfit1-ydata,2).sum();
conn.commit();
print(df.index.py_name);
os.seteuid(0);
signal.signal(signal.SIGINT,signal_handler);
print(function(){var __accu0__=[];for(var val of data[0])__accu0__.append(T(val,[.29,4.5]));return __accu0__}());
isinstance(bar,types.FunctionType);
tws.connect();
canvas.setPageSize(11*inch,8.5*inch);
sorted(function(){var __accu0__=[];for(var x=0;x<10;x++)__accu0__.append(x*x);return py_iter(__accu0__)}());
var q=Queue();
OrderedDict(function(){var __accu0__=[];for(var [k,v]of _.py_items())__accu0__.append(tuple([k==oldkey?newkey:k,v]));return py_iter(__accu0__)}());
self.some_text.SetLabel(mysql_data);
export var final_sorted=function(){var __accu0__=[];for(var [x,y,z]of sorted_stuff)__accu0__.append(tuple([y,z]));return __accu0__}();
draw.ellipse(tuple([0,0])+bigsize,__kwargtrans__({fill:255}));
var a=function(){var __accu0__=[];for(var i of a)__accu0__.append(sorted(i));return __accu0__}();
var root=tree.getroot();
app.exec_();
result.append(x);
wordorder.index(word);
var choice=input();
py_items.append(x);
view.show();
var tree=ET.parse(pathToFile,OrderedXMLTreeBuilder());
t.start();
var width=img.get_width();
start.focus_set();
random.shuffle(lst);
p.xs(0);
unittest.main();
var b=copy.deepcopy(a);
export var BW=2E4;
fig.get_size_inches();
ax.legend(__kwargtrans__({bbox_to_anchor:tuple([1.1,1.05])}));
var root=Tk();
var __left0__=np.ogrid.__getitem__([tuple([0,sx,1]),tuple([0,sy,1])]);var X=__left0__[0];var Y=__left0__[1];
var pool=multiprocessing.Pool(__kwargtrans__({processes:6}));
var ax=plt.subplot(111);
map(function __lambda__(e){return tuple([e,key])},elements);
wrapper;
list(data_set.itertuples(__kwargtrans__({index:false})));
var a=np.ascontiguousarray(a);
new set([new set([mywidget.body()])]);
self.write(self.request.path);
print(p.findall(s));
var args=parser.parse_args();
var cols=np.ones(rows.shape[0],__kwargtrans__({dtype:np.int}));
r.append(random.choice(a));
pl.show();
export var trans=ssh.get_transport();
self._window.show_all();
sys.stdout=F();
var df=sqlContext.createDataFrame(pdf);
var height=win.winfo_height();
a.append(1);
var j=b.index(p[1]);
var a=numpy.array([1,2,inf,inf,42]);
plot(x,y2);
var sheet=book.sheet_by_name(py_name);
self.lock=threading.Lock();
g.map_dataframe(function __lambda__(data,color){return sns.heatmap(data.corr(),__kwargtrans__({linewidths:0}))});
c.hello();
ax.plot(theta,mapr(r));
lists.append(lst);
random.randint(1,100);
var array=np.array(list(result.py_items()),__kwargtrans__({dtype:dtype}));
br.select_form(__kwargtrans__({nr:1}));
var __left0__=random.sample(list1,2);export var item1=__left0__[0];export var item2=__left0__[1];
float.hex(6.6);
exit();
a.quantize(b)==b;
self.scrollbar.config(__kwargtrans__({command:self.text.yview}));
func();
(function(){var __accu0__=[];for(var k of list(mydict.py_keys()))if(k>=6)__accu0__.append(k);return __accu0__})();
self.text.configure(__kwargtrans__({yscrollcommand:self.vsb.set}));
layout.addWidget(self.le);
export var mocked=MockAnything();
random.shuffle(s);
s.translate(table,string.punctuation);
file.close();
array([.09,.1,.1,.08,.08,.14,.1,.12,.09,.1]);
var __except0__=ValueError;__except0__.__cause__=null;throw __except0__;
df[new_col]+=function(){var __accu0__=[];for(var a of df[col])__accu0__.append(int(a!=0));return __accu0__}();
_.reshape(-1,ncols);
print(current_credentials.token);
process.start();
var s=socket.socket();
print(date.fromtimestamp(d));
self.Layout();
var M=np.matrix([[1,0],[.5,.5]]);
(function(){var __accu0__=[];for(var f of fs)__accu0__.append(f(0));return __accu0__})();
var mask=Math.pow(x,2)+Math.pow(y,2)<=Math.pow(r,2);
input_thread.start();
p.hello();
print(child.tag,child.text);
os.setsid();
var new_list=old_list.__getslice__(0,null,1);
print(line);
out.append(s);
f2.write(line);
c.call(1);
repr(tst);
var __left0__=tee(iterable);var a=__left0__[0];var b=__left0__[1];
(function(){var __accu0__=[];for(var s of students)if(s[1]==value||s[2]==value)__accu0__.append(s);return __accu0__})();
sys.stdout.buffer.flush();
ax.add_artist(circle2);
ax.add_artist(circle1);
numpy.around(arr,10,arr);
exec(my_code,mymodule.__dict__);
print(fn(5,7));
[4];
send_from_directory(app.static_folder,request.path.__getslice__(1,null,1));
bf.close();
object.__cmp__(self,other);
(function(){var __accu0__=[];for(var s of strs)if(s.isalpha())__accu0__.append(s);return __accu0__})();
var app=Flask(__name__);
var b=[a]*5;
self._socket=socket.socket();
eggs.parent.bar();
r.connection.close();
event.Skip();
conf.write();
tf.reset_default_graph();
2-1.0585;
var form=YourForm();
button.pack(__kwargtrans__({side:RIGHT}));
fpout.write(jsonform);
plt.grid(true);
export var pipe=sp.Popen(command,__kwargtrans__({stdout:sp.PIPE,stderr:sp.STDOUT}));
f(...list(newdict.py_values()));
print(args.foo);
[0,8,8,8,8,8,8,8,8,8];
Pool(processes,initializer,initargs,maxtasksperchild);
df.index=pd.MultiIndex.from_tuples([tup]);
var count=count+1;
var results=multiprocessing.Queue();
l.remove(x);
export var set_to_string=dict(zip(function(){var __accu0__=[];for(var s of strings)__accu0__.append(frozenset(s.py_split()));return __accu0__}(),strings));
fcntl.fcntl(fd,fcntl.F_SETFL,fl|os.O_NONBLOCK);
export var y_train_0=y_train[y_train==0];
var soup=BeautifulSoup(data);
fo.write(fi.read());
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
C[i][j]+=A[i][k]*B[k][j];
var new_dict=dict({});
setattr(cls,py_name,decorator(m));
b.py_update(function(){var __accu0__=[];for(var key of set(a.py_keys())&set(b.py_keys()))__accu0__.append([key,tuple([a[key],b[key]])]);return dict(__accu0__)}());
var __left0__=plt.subplots(1,1);var fig=__left0__[0];var ax=__left0__[1];
r.supplier.py_name;
favicon.ico;
results[el]=function(){var __accu0__=[];for(var ii of[0,1,2])__accu0__.append(select(ls2,ii));return __accu0__}();
current_user.append(line.__getslice__(9,null,1).strip());
print(wts[1]);
var img=cam.get_image();
print(someclass());
export var list_size_1=numpy.array(list_size_1);
layout.addWidget(frame);
source.applescript;
net.layers[1].blobs[1].data.shape;
var app=flask.Flask(__name__);
export var rss=psutil.Process(os.getpid()).get_memory_info().rss;
row[0]+row[1];
self.delays[py_metatype].py_setdefault(key,0);
var req=urllib.request.urlopen(url);
var strings=function(){var __accu0__=[];for(var s of strings)__accu0__.append(frozenset(s.py_split()));return __accu0__}();
plt.clf();
var ax=plt.gca();
len(function(){var __accu0__=[];for(var c of word)if(c==char)__accu0__.append(c);return __accu0__}());
decorator1(decorator2(func));
time.sleep(0);
tuple([[0,0,0,0,0,0,0,0,162,2]]);
var df=pd.DataFrame(np.random.randint(4,__kwargtrans__({size:tuple([5,1])})));
export var bar1=Bar.objects.py_get(__kwargtrans__({pk:1}));
var now=datetime.datetime.now();
r.append(etree.tostring(item,__kwargtrans__({with_tail:false})));
wx.StaticBitmap(panel,-1,gif,tuple([10,pos]),tuple([gif.GetWidth(),gif.GetHeight()]));
var parser=etree.XMLParser(__kwargtrans__({remove_comments:true}));
var results=function(){var __accu0__=[];for(var [r]of results)__accu0__.append(r);return __accu0__}();
plt.plot(pd.Series(__kwargtrans__({data:np.random.randn(100),index:i})));
os.fchmod(fd.fileno(),stat.S_IMODE(mode));
tuple([a])+(bret?tuple([b]):tuple([]))+(cret?tuple([c]):tuple([]));
res[0]+=val;
sympy.diff(f,x);
display(yourobject);
Thread(__kwargtrans__({target:print_output,args:tuple([p.stdout])})).start();
var df=pd.DataFrame(lst);
export var xadf=np.diff(xa1);
ax.plot(data2);
var match=re.search(pattern,s);
export var anniversary=models.ForeignKey(Anniversary);
self.numbers=list(range(1,10));
var B=np.array([0,0,0]);
pyplot.show();
var p=multiprocessing.Pool(__kwargtrans__({processes:4}));
export var all_gt10=function(){var __accu0__=[];for(var i of mylist)if(i>10)__accu0__.append(i);return __accu0__}();
u.set_password(password1);
export var offsets=itertools.product([-1,0,1],[-1,0,1]);
csvfile.truncate();
list.__getitem__(self,item);
action();
(function(){var __accu0__=[];for(var x of tuple([0,0,complex(0,0),decimal.Decimal(0)]))__accu0__.append(isinstance(x,numbers.Number));return __accu0__})();
var parser=argparse.ArgumentParser();
underscoreize(data);
ax.plot(x,np.sin(x)+i);
Planet.VENUS.radius;
app.send_static_file(filename);
var handler=logging.StreamHandler();
grdevices.dev_off();
export var own_fhd=true;
var df=pd.DataFrame(np.random.rand(15,5),__kwargtrans__({index:[0]*15}));
AC_PROG_LIBTOOL;
plt.legend();
in_tree.__getslice__(0,1,1)+in_tree.__getslice__(1,null,1).__getslice__(0,null,-1);
print(add(__kwargtrans__(kwargs)));
dir(e.args[0]);
[foo];
client_socket.send(strng);
p.kill();
self.py_items.append(item);
export var b_to_a=np.argsort(a_to_b);
print(stopword_pattern);
self.view.setModel(self.model);
export var dropped=df.drop(list(range(5)),__kwargtrans__({inplace:true}));
var instance=class_();
var new_data=ndi.map_coordinates(data,idx);
var driver=webdriver.Chrome();
var func=function __lambda__(x,y){return tuple([x,y])};
print(f.__defaults__);
print(x.eval());
(function(){var __accu0__=[];for(var rect of rects)__accu0__.append(ax.add_patch(rect));return __accu0__})();
int(argv[2]);
Counter(function(){var __accu0__=[];for(var x of a)__accu0__.append(tuple(x));return py_iter(__accu0__)}());
print(df1.combine_first(df2));
logging.Handler.__init__(self);
(function(){var __accu0__=[];for(var path of paths)__accu0__.append(py_next(function(){var __accu1__=[];for(var part of path.py_split(os.path.sep))if(part)__accu1__.append(part);return py_iter(__accu1__)}()));return __accu0__})();
plt.plot(h,pdf);
self.ax.set_xlim(xmin,xmax);
var k=literal_eval(s);
var b_set=set(map(tuple,a));
list(od.py_keys());
tuple([2,[true,false,true,false]]);
termios.tcsetattr(fd,termios.TCSADRAIN,old_settings);
interpreter.process_page(page);
print(input());
list(__all__.py_keys());
var ax=self.figure.add_subplot(111);
plt.show();
do_something(current_file);
dict(function(){var __accu0__=[];for(var i of g)__accu0__.append(py_next(py_iter(i.py_items())));return py_iter(__accu0__)}());

it.operands[-1];
is_const(x)&&is_datatype_constructor(x);
var num=int(s);
py_next(zip(...G));
td.seconds/60;
print(line,count);
unattachedvolumes();
export var evts=poller.poll(1E3);
newfunc;
G.add_edge(tuple([q,r]),tuple([q-1,r+1]));
session.query(entity).filter_by(__kwargtrans__({py_name:py_name})).one();
print(df);
list1.__getslice__(0,i,1);
var __left0__=screen.get_size();var x=__left0__[0];var y=__left0__[1];
var cur=conn.cursor();
export var Q0=e1sq*math.pow(math.cos(phi1),2);
df6[col]=df6[col].astype(dtype);
sorted(set(li))[-(n+1)];
p2.join();
pattern.findall(data);
var output=int(process.stdout.readline());
(function(){var __accu0__=[];for(var r of x)if(!yy.search(r))__accu0__.append(r);return __accu0__})();
export var traces=traces.__getslice__(0,null,-1);
var r=function(){var __accu0__=[];for(var i of range(0,len(s),2))__accu0__.append(s.__getslice__(i,i+2,1));return __accu0__}();
export var oggi=datetime.now(IT).date();
sublist(a.__getslice__(1,null,1),b.__getslice__(k+1,null,1));
dt;
nat!=nat;
var fig=plt.figure();
thread.start();
np.put(arr,list(range(num)),np.nan);
list(range(item.start,item.stop,item.step));
print(hash.hexdigest());
export var dict_words=map(str.lower,list(dict_1.py_values()));
var fig=plt.figure();

var x=[true,false,false,true];
f(my_list);
print(len(set(hashes)));
self.window.show();
list(sympy.sieve.primerange(0,100));
self.urole;
var b=np.where(a.all(__kwargtrans__({axis:1})).any(__kwargtrans__({axis:1})))[0];
start_server();
testVar.append(2);
var b=models.ForeignKey(B);
df.columns.__getslice__(1,null,1);
append(result,i,j);
df2.py_name.str.strip().str.upper();
var CoverageACol=arange(10).reshape(2,5);
var result=np.vstack(tuple([ranges.__getitem__([starts,0]),ranges.__getitem__([ends,1])])).T;
var s=function(){var __accu0__=[];for(var v of list(my_dict.py_values()))for(var n of v)__accu0__.append(n);return set(__accu0__)}();
print(unique_list);
self.__dict__[attr]=value;
ax.yaxis.set_major_locator(MaxNLocator(__kwargtrans__({integer:true})));
monkey.patch_all();
[1,2,6,7,8,9,10,11];

start_of_week;
temp_data.remove(word);
cv2.drawContours(img,[cnt],0,tuple([255,0,0]),2);
ctypes.pythonapi.Py_DecRef(pyobj);
random.shuffle(lines);
var soup=BeautifulSoup(data);
parser.parse_args();
plt.subplot(121);
imshow(mycmap(Z2),__kwargtrans__({extent:extent}));
session.cookies.get_dict();
termf.pack(__kwargtrans__({fill:BOTH,expand:YES}));
fig.canvas.draw();
timezone.localtime(value);
ldap.set_option(ldap.OPT_X_TLS_REQUIRE_CERT,ldap.OPT_X_TLS_NEVER);
export var numpy_dict=np.array(py_values,__kwargtrans__({dtype:dtype}));
round_to_1(4);
nms[nms.py_name.notnull()];
var a=np.random.rand(500,500);
parser.parse(strtime);
option.impliedVolatility(11.1,process);
print(k,v);
var c=wmi.WMI();
SUDO_UID;
self.value<other.value;
a.__getitem__([0,2]);
sum(random.permutation(x));
[df.__getslice__(1,null,1)];
set(l1);
A*numpy.exp(-Math.pow(x-mu,2)/(2*Math.pow(sigma,2)));
logger.addHandler(handler1);
text(np.mean(s.__getitem__([tuple([0,null,1]),0])),np.mean(s.__getitem__([tuple([0,null,1]),1])),str(i),__kwargtrans__({fontsize:14}));
self.commitData.emit(self.sender());
export var user1=User.query.filter_by(__kwargtrans__({id:1})).first();
var client=gspread.authorize(credentials);
list(chain.from_iterable(listOfLists));
print(result);
f.write(file_content);
var s=paramiko.SSHClient();
tree.write(datafile);
to_product.append(function(){var __accu0__=[];for(var i of v)__accu0__.append(tuple([k,i]));return __accu0__}());
ConvertToString(HexString);
app.exec_();
sb.set_palette(cmap,__kwargtrans__({n_colors:8}));
HTMLParser.__init__(self);
print(is_int(x));
do_stuff();
main();
self.main_container.grid_columnconfigure(0,__kwargtrans__({weight:1}));
var sess=tf.Session(__kwargtrans__({config:session_config,graph:graph}));

var ax2=pyplot.axes([0,0,1,1],__kwargtrans__({axisbg:tuple([1,1,1,0])}));
var __left0__=zip(...z);var a=__left0__[0];var b=__left0__[1];
config.VAR1;
var layout=QtGui.QVBoxLayout(self);
file.seek(0,os.SEEK_END);
bool(ImageChops.difference(...imgs).getbbox());
plt.semilogy(xf,2/N*np.abs(yf.__getslice__(0,N/2,1)));
time.sleep(self.interval);
var fig=plt.figure(__kwargtrans__({figsize:tuple([10,6])}));
Gtk.main_quit();
export var s2=my_df.fillna(0).to_sparse(__kwargtrans__({fill_value:0}));
max_water_heldover([9,8,7,8,9,5,6]);
var pool=multiprocessing.Pool();
x[ind]=y[ind];
f(l);
pd.DataFrame(function(){var __accu0__=[];for(var d of df.columns)if(!__in__(d,dupes))__accu0__.append([d,df[d]]);return dict(__accu0__)}());
re.findall(pattern,clause);
export var cimg=cv2.cvtColor(img,cv2.COLOR_GRAY2BGR);
self.fmt.format(...self.args,__kwargtrans__(self.kwargs));
var z=zipfile.ZipFile(filename);
df.shift(1);
os.remove(f);
sys.exit(1);
var salt=bcrypt.gensalt();
export var yest=np.array(yests);
coo_matrix(c.multiply(np.dot(a,b)));
plt.ylim(0,X.shape[0]);
cls(wfd,bfd,wildfd,tfd);
tostring(element);
sys.path[0]=os.path.dirname(mainpyfile);
update_handler_level(mylogger,logging.StreamHandler);
Books.objects.all();
plt.imshow(result);
f_in.seek(0);
var rank=Model.objects.filter(__kwargtrans__({score__gt:obj.score})).count();
var d=date(year,1,1);
var soup=BeautifulSoup(page);
str(self.year);
var __left0__=0;var x1=__left0__;var y1=__left0__;var x2=__left0__;var y2=__left0__;
lst.remove(x);
timedelta(__kwargtrans__({microseconds:1E3}));
wr.writerow(sh.row_values(rownum));
plt.show();
var parser=argparse.ArgumentParser();
var hxs=HtmlXPathSelector(response);
var parent_dir=os.path.abspath(os.path.dirname("./P2JSnippets.py"));
print(topological_sort(connections));
plt.figure();
export var df_norm=(df-df.mean())/(df.max()-df.min());
var app=recording.appstats_wsgi_middleware(app);

matrices.__setitem__([tuple([0,null,1]),2,2],c);
Polygon(function(){var __accu0__=[];for(var i=0;i<600;i++)__accu0__.append(tuple([points_x[i],points_y[i]]));return __accu0__}());
true;
var soup=BeautifulSoup(page);
sorted(string);
export var lst2=function(){var __accu0__=[];for(var item of lst)__accu0__.append(item[0]);return __accu0__}();
var idx=np.nonzero(mask.__getslice__(1,null,1)!=mask.__getslice__(0,-1,1))[0];
dict(d1,__kwargtrans__(d2));
grammar.load();
logging.config.dictConfig(D);
data[school].append(datum);
plt.show();

lines_seen.add(line);
axis.set_major_formatter(ScalarFormatter());
sleep(1);
-libpng-dev;
var __left0__=ssh.exec_command(cmd);export var stdin=__left0__[0];var stdout=__left0__[1];var stderr=__left0__[2];
tgt.write(uglybuf);
var now=time.time();
var ax=fig.add_subplot(111);
text_img.drawText(py_name,0,0);
int(argv[2]);
Base.metadata;
node.render(context);
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
var response=FileResponse(os.path.abspath(f.py_name));
a+b+c;
root2.py_update();
q.task_done();
sys.exit(0);
fig.circle(x,y,__kwargtrans__(__mergekwargtrans__({color:color},point_kwargs)));
NULL;
np.set_printoptions(...args,__kwargtrans__(kwargs));
z.append(matchobj.group(2));
cursor.execute(insert,tuple([my_point_list]));
print(generate_list(10));
print(my_object.contents);
current.append(x);
print(np.dot(eigenvector.T,np.dot(cov_matrix,eigenvector)));
print(df.index.dtype);
a[0];
print(foo());
var lst=list(range(1,10));
mlab.view(__kwargtrans__({azimuth:45,elevation:60,distance:.01,focalpoint:tuple([0,0,0])}));
x==n*(n+1)/2;
asyncio.set_event_loop(loop);
var path=os.path.normpath(os.path.expanduser(path));
var a=np.arange(125).reshape(5,5,5);
(function(){var __accu0__=[];for(var x of xs)__accu0__.append(self.classify(x));return __accu0__})();
threads.append(MyThread(q,__kwargtrans__({args:tuple([__mod__(t,2)==0])})));
true;
s.shape;
b.sum(__kwargtrans__({axis:2}));
var new_dict=json.loads(json.dumps(my_dict));
self.connected=true;
print(element.firstChild.nodeValue);
p.stdout.close();
print(types[bisect.bisect(points,Point(.6,.6))-1]);
var H=np.meshgrid(np.arange(5),np.arange(5))[0];
var y=np.zeros_like(x);
var a=NP.empty(__kwargtrans__({shape:tuple([0,0])}));
np.sum(a.dot(b),__kwargtrans__({axis:1}));
export var revchoice=arr[~mask];
np.put(arr,list(range(num)),np.nan);
print(line);
(function(){var __accu0__=[];for(var i of h)__accu0__.append(str(chr(i)));return __accu0__})();


var u=random.random()+random.random();
redirect(self.get_success_url());
Py_Finalize();
[10,12,14];
print(df[mask]);
(function(){var __accu0__=[];for(var row of data)__accu0__.append(map(first,row));return __accu0__})();
print(resp.status_code,resp.url);
inspect.ismodule(os);
str(x);
ipdb.set_trace();
np.random.seed(1);
print(corn.get_next());
cv2.waitKey(0);
var input=sys.stdin.read(1);
print(result[0][4]);
var out=sidx[np.searchsorted(X1D,searched_valuesID,__kwargtrans__({sorter:sidx}))];
self.socket.bind(self.server_address);
some_func(foo,bar,baz,quux);
var text=ndb.TextProperty();
var g=copy_func(f);
logger.setLevel(logging.DEBUG);
e.submit(slow_work,...args,__kwargtrans__(kwargs));
fn(...args,__kwargtrans__(kwargs));
plugged();
f.write(tmplines);
foo();
dates_dict[key].append(date);
self.__dict__[key];
var words=input.py_split();
ax.text(...angle_text);
rect.set_xy(tuple([dx.start,dy.start]));
export var channel=client.invoke_shell();
time.sleep(2);
plt.setp(ax.get_xmajorticklabels(),__kwargtrans__({visible:false}));
py_next(iterator);
ml.run();
var reader=csv.reader(f,__kwargtrans__({skipinitialspace:true}));
var p=multiprocessing.Process(__kwargtrans__({target:func}));
do_something_with(key,value);
print(match.span());
cal_vbox.pack_start(gtk.Calendar(),true,false,0);
arrayList.append(copy.copy(wM));
var driver=webdriver.Firefox();
(function(){var __accu0__=[];for(var k of list(mydict.py_keys()))if(k>=6)__accu0__.append(mydict[k]);return __accu0__})();
plt.plot(X,Y1,__kwargtrans__({lw:4}));
var t1=linspace(-50,50,100);
ast.literal_eval(d);
Image(path,__kwargtrans__({width:width,height:width*aspect}));
print(columns[1]);
layout.addWidget(self.button);
export var packet=packet.__class__(str(packet));
var id=Column(Integer,__kwargtrans__({primary_key:true}));
export var numC=random.randint(1,100);
var line=line_data[k];
df.py_values;
var result=function(){var __accu0__=[];for(var _=0;_<d;_++)__accu0__.append(copy.deepcopy(result));return __accu0__}();
os.execv(sys.argv[0],sys.argv);
export var loop=asyncio.get_event_loop();
print(sys.path);
var p2=np.power(np.linalg.det(cov),-.5);
var l2=[5,6,7,8];
var y=np.arange(-5,5,.2);
int(round(n[0]));
line(res,vertices[1][0],vertices[2][0],color,5);
export var my_regex=re.compile(my_pattern,re.DOTALL|re.IGNORECASE);
(condition(item)?a:b).append(item);
client.close();
var soup=BeautifulSoup(html);
set(short_list).intersection(long_list);
print(repr(l[0]),repr(int(l[1])));
var result=session.query(cls);
conn.setopt(pycurl.DEBUGFUNCTION,test);
plt.show();
t.join();
btn.Bind(wx.EVT_BUTTON,self.changeCursor);
var fig=plt.figure();
ret.append(np.zeros(len(tmp)));
export var __all__=list(import_submodules(__name__).py_keys());
plt.gca().invert_yaxis();
set_column(first_col,last_col,width,cell_format,options);
var answer=np.linalg.solve(A,b);
var startupinfo=subprocess.STARTUPINFO();
solve([0,10],[12,20]);
var a=np.arange(18).reshape(9,2);
var process=Popen(command,__kwargtrans__({stdout:PIPE,stderr:STDOUT,bufsize:1}));
var line=line.strip();
time.sleep(1);
self.edit=QtGui.QLineEdit(self);
crawler.start();
export var true_x=np.linspace(0,10,N);
df_new;
main();
export var familiesNew=function(){var __accu0__=[];for(var [i,j]of enumerate(families))__accu0__.append(function(){var __accu1__=[];for(var x of j)if(x!=i)__accu1__.append(x);return __accu1__}());return __accu0__}();
self.b2.pack();
colorbar.set_ticklabels(np.unique(data));
axs[1].xaxis.set_major_locator(x_major_lct);
print(s.__getslice__(match.start(),match.end(),1));
all(function(){var __accu0__=[];for(var [earlier,later]of zip(seq,seq.__getslice__(1,null,1)))__accu0__.append(earlier>=later);return py_iter(__accu0__)}());
msg.append(500);
export var bootfile=subprocess.check_output(cmd,__kwargtrans__({shell:true}));
int(hours)*60+int(minutes);
mlab.draw();
var d2=dict(list(d.py_items()).__getslice__(0,len(d)/2,1));
var ax=fig.add_subplot(111);
numpy.percentile(df.a,95);
var out=a+val*np.identity(a.size).reshape(np.append(-1,shp));
f.close();
self.send_response(200);
deleteself.cobj;
print(map(function __lambda__(x){return!x},a));
field.widget=forms.RadioSelect();
glVertex2i(110,10);
entity_manager.query(Result).filter_by(__kwargtrans__({job_id:job_id})).delete();
new_arr.shape;
var soup=BeautifulSoup(html);
list(product(...function(){var __accu0__=[];for(var i of[x,y,z])__accu0__.append(list(range(i+1)));return __accu0__}()));
var a=a.__iadd__(da);
soup_original_1.body.append(element);
var data=socket.gethostbyname_ex(x);
plt.grid(true);
var canvas=np.zeros(tuple([10,10]));
out.close();
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
m.py_update(f.__class__.__name__);
a.close();
self.root=tk.Tk();
self.transport.loseConnection();
str(self.value);
Py_Initialize();
var srf=pygame.display.set_mode(tuple([640,480]));
self.video_cap=cv2.VideoCapture(self.device_index);
new set([y,x,0]);
export var norm1=x/np.linalg.norm(x);
session.merge(row_data);
var root=tk.Tk();
var fig=plt.figure();
match.group(1);
gmpy.divm(1,0,5);
td.text;
var root=lxml.html.fromstring(doc);
str(self._list);
math.ldexp(m,e);
var ax1=fig1.add_subplot(111);
self.py_name=py_name;
np.mgrid.__getitem__([tuple([0,6,1]),tuple([1,10,1]),tuple([0,20,1])])[1];
mod.doSomething();
export var outshift=numbits-obits;
max(list(c.py_items()),__kwargtrans__({key:itemgetter(1)}));
list(find_creators(f,list(__all__.py_values())));
lens.__getslice__(0,-1,1).cumsum();
ax1.set_yticks(list(range(len(data.index))));
export var deriv=np.diff(wei.cdf(x))/dx;
np.bincount(Math.floor(np.arange(mask.size)/20),mask);
true;
plt.colorbar(surf,__kwargtrans__({shrink:.75,aspect:5}));
list.__init__(self,...args);
print(ordered_dict);
var instance=forms.ModelForm.save(self);
var d=dict.fromkeys(list(range(100)));
command.run(__kwargtrans__({timeout:1}));
var im=np.array(second_subreg*255,__kwargtrans__({dtype:np.uint8}));
thread.start();
gtk.gdk.threads_init();
datetime.fromtimestamp(ts,__kwargtrans__({tz:pytz.utc}));
file.close();
(function(){var __accu0__=[];for(var row of inputVals)for(var x of row)__accu0__.append(int(x));return __accu0__})();
ax.hold(true);
db.execute(ddl);
axes.__getitem__([-1,-1]).set_ylim(ylimits);
var s=map(int,s.py_split());
var result=sm.WLS(y,exog,__kwargtrans__({weight:w})).fit();
var __left0__=tuple([np.linspace(x0,x1,num),np.linspace(y0,y1,num)]);var x=__left0__[0];var y=__left0__[1];
yaml.add_representer(anydict,_represent_dictorder);
ax.set_xticks(centers);
var obj=MyClass();
var p=subprocess.Popen(command,__kwargtrans__({stdout:subprocess.PIPE,stderr:subprocess.PIPE}));
print(df.sort_index());
np.allclose(a.__getitem__([tuple([0,null,1]),tuple([0,null,1]),tuple([0,null,1]),2]),collapse_dims(a).__getitem__([tuple([0,null,1]),tuple([0,null,1]),tuple([4,6,1])]));
shutil.copyfileobj(f,sys.stdout);
print(gaussian_filter());
NULL;
var s=MLStripper();
json.dumps(json.JSONDecoder().decode(str_w_quotes));
map(print_node,ts.cursor.get_children());
print(line);
log_message_button.Bind(wx.EVT_BUTTON,self._log_message);
var Session=scoped_session(sessionmaker());
help(re.sub);
export var LIST=[1,2,2,2,2,1,1,1,2,2,1,1];
t.start();
traceback.print_stack();
gdal.ReprojectImage(src,dst,src_proj,match_proj,gdalconst.GRA_Bilinear);

var script_dir=os.path.dirname(os.path.abspath("./P2JSnippets.py"));
plt.ylim(0,2.1);
var x=10*np.random.random(100);
var mylist=literal_eval(fsock.read());
var root=etree.parse(urllib.request.urlopen(url));
axs[i].set_title(str(250+i));
doc.setHtml(label.text());
tuple([a_list.__getslice__(0,half,1),a_list.__getslice__(half,null,1)]);
irenL.Initialize();
deletea[1];
np.bitwise_or.reduce(c)==c[0];
m_close.Bind(wx.EVT_BUTTON,self.OnClose);
(function(){var __accu0__=[];for(var i_j_k of a)if(i_j_k[0]+i_j_k[1]+i_j_k[2]>N)__accu0__.append(i_j_k);return __accu0__})();
sys.stdout.write(line.lower());
(function(){var __accu0__=[];for(var [valid,g]of groupby(init,__kwargtrans__({key:function __lambda__(x){return len(x)!=0}})))if(valid)__accu0__.append(tuple(g));return __accu0__})();
A.py_sort(__kwargtrans__({axis:1}));
root.withdraw();
sum(function(){var __accu0__=[];for(var [a,b]of zip(v1,v2))__accu0__.append(a*b);return py_iter(__accu0__)}());
window.show_all();
export var htmlSource=driver.page_source;
gtk.timeout_add(60*1E3,my_timer);
var root=Tk();
l.append(x);
var proc=subprocess.call(command,__kwargtrans__({stdout:out,stderr:subprocess.OUTPUT}));
self.lift();
var driver=webdriver.Firefox(__kwargtrans__({proxy:proxy}));
locale.setlocale(locale.LC_ALL,l);
var py_keys=pygame.key.get_pressed();
reactor.run();
var reader=csv.reader(f);
d.py_sort(__kwargtrans__({key:sorting}));
plt.bar(ind,data[1],__kwargtrans__({color:colors[j],bottom:bottom[i-1]}));
cr.set_line_width(brush.width);
sys.stdout=Logger();
export var nll=-1*numpy.sum(lg);
self._age=value;
allUuids.append(x.id);
var parser=argparse.ArgumentParser();
p.__dict__.py_update(d);
var ax=plt.gca();
excel.Visible=true;
y.__getitem__([tuple([0,null,1]),newaxis])-x;
var title=models.CharField(__kwargtrans__({max_length:100}));
net.layers[1].blobs[1].diff.shape;
cap.release();
metrics.roc_auc_score(y,scores);
var r=requests.py_get(url);
instance.username=username;
s.method();
print(numpy.lib.format.open_memmap.__doc__);
var ax=plt.subplot(111);
export var squaredlengthba=(b.x-a.x)*(b.x-a.x)+(b.y-a.y)*(b.y-a.y);
var ax=plt.gca();
export var unicode_text=r.read().decode(encoding);
session.add(object);
var data=np.recarray(data.shape,data.dtype,__kwargtrans__({buf:data}));
self.y1+=self.speed*math.sin(self.bearing);
foo();
var soup=BeautifulSoup(page.read());
var line=py_next(islice(f,line_number-1,line_number));
pickle.loads(pickled_value);
var T=np.zeros(tuple([len(x),len(y),len(z)]));
q.put(tuple([i,url]));
var filename=models.CharField(__kwargtrans__({max_length:128}));
crawler.signals.connect(add_item,signals.item_passed);
var __left0__=ax.get_legend_handles_labels();var handles=__left0__[0];var labels=__left0__[1];
ax.lines;

ax2.plot(list(range(10)));
d[x]+=1;
Z+=np.random.normal(0,noise,Z.shape);
var a=np.random.randint(0,100,10);
html.document_fromstring(doc);
platform.mac_ver();
pygame.init();
fig.canvas.draw();
var n=np.prod(function(){var __accu0__=[];for(var x of arrays)__accu0__.append(x.size);return __accu0__}());
self.response.write(template.render(template_values));
print(self.request.id);
max_water_heldover([8,8,4,5]);
copy_with_prog(src,dest,function __lambda__(pos,total){return prog.py_update(pos,total)});
print(request.__dict__);
self.__c=value;
tuple([s.__getslice__(0,n,1),s.__getslice__(n,null,1)]);
res[selfpow+valpow]+=selfco*valco;
var d=datetime.datetime.today().py_replace(__kwargtrans__({microsecond:0}));
get_something(a);
var G=nx.DiGraph();
np.apply_along_axis(wrapper,axis,F);
disassemble(x);
export var grad_vals=sess.run(function(){var __accu0__=[];for(var grad of grads)__accu0__.append(grad[0]);return __accu0__}());
proc.start();
tab.add_row(list(row.py_values()));
wr.writerow(mylist);
var fig=plt.figure(__kwargtrans__({figsize:tuple([8,8])}));
logger.addHandler(handler);
timeit(easydiff1,easydiff2,1E6);

a[0]();
ax.set_yticks(np.arange(data.shape[0])+.5,__kwargtrans__({minor:false}));
(function(){var __accu0__=[];for(var k of function(){var __accu1__=[];for(var k of workers)__accu1__.append(IPKey(k));return set(__accu1__)}())__accu0__.append(k.key);return __accu0__})();
var soup=BeautifulSoup(urllib.request.urlopen(url).read());
os.chdir(dir);
rChannel.py_items.append(item);
[1,8,8];
print(herp.derp.foo);
M.append(1);
self.list(request,...args,__kwargtrans__(kwargs));
gca().xaxis.set_major_locator(NullLocator());
pylab.imshow(arr,__kwargtrans__({cmap:cm.Greys_r}));
var colors=function(){var __accu0__=[];for(var x of linspace(start,stop,number_of_lines))__accu0__.append(cm.jet(x));return __accu0__}();
main_str.startswith(check_str)&&main_str.endswith(check_str);
var s=str(x);
stdscr.getch();
print(H.__getitem__([-1,-1]));
pool.close();
print(paramiko.__version__);
outfile.write(line);
var root=tree.getroot();
export var TOA14=Ta-Td;
newList.append(oldList[-1]);
list.append(sentence.lower());
var total=xtabs.stack().sum(1);
self.send(msg.body);
dframe[gindex];
mymodule.MyClass.getImg();
line(res,vertices[2][0],vertices[0][0],color,5);
g.write(header(delimiter,fields));
var output=list(seq.__getslice__(0,null,-1));
f2(1);
int(Math.pow(a,b));
var lol=LoL(function(){var __accu0__=[];for(var i=0;i<10;i++)__accu0__.append(list(range(10)));return __accu0__}());
screen.nodelay(1);
a[0].value;
send_post(server,data,files);
Hyphenator.run();
df.agg(...exprs).show();
print(someclass.__name__);
str(2.999999999999999);
var id=db.Column(db.Integer,__kwargtrans__({primary_key:true,nullable:false}));
var idx=np.array(list(d.py_keys()));
x.append(1);
sys.stderr=sys.__stderr__;
var list2=[5,6,7,8,9];
new_data.apply(directionDescribe);
a.goodbye();
result.append(item);
var index=np.arange(len(a));
plt.pause(.001);
total+=int(match.group());
curses.echo();
dis.dis(function __lambda__(){return a<b&&b<c});
var lock=threading.Lock();
var picture=pygame.image.load(filename);
xml.etree.ElementTree.dump(group);
bytes([a[0]&b[0]]);
self.turnnow;
fh.seek(file_size-offset);
ser.read(1);
self._x=x;
var tmp=tmp.apply(function __lambda__(x){return str(x[0])});
do_something_1();
var ax2=ax1.twinx();
var html=urllib.request.urlopen(url).read();
server.sendmail(username,to,msg.as_string());
cherrypy.quickstart(HelloWorld());
var x=np.empty([n,2]);
df[df<pd.Timedelta(0)]=0;
sum(l.__getslice__(0,null,2))-sum(l.__getslice__(1,null,2));
print(x.toprettyxml());
var db=current_app.db;
tocrawl.add(link);
var a=np.array([0,1,0,1,1]);
pylab.show();
ser.open();
main.show();
var logger=logging.getLogger(__name__);
row*(row+1)/2+1;
client.describe_cache_engine_versions();
reversed_dict[value].append(key);
ax.set_zlim(-1.01,1.01);
os.ftruncate(fd,0);
len(frozenset(objs))==len(objs);
print(x);
export var retval=prof.runcall(self.method_actual,...args,__kwargtrans__(kwargs));
plt.gca().add_patch(plt.Circle(tuple([posx,posy]),__kwargtrans__({radius:.05,fc:color})));
df.loc[mask];
plt.yticks(list(range(0,max(yvals),yinterval)));
g.add_edge(5,6);
export var YBL007C=ribosome;
(function(){var __accu0__=[];for(var x of l)__accu0__.append([x+1,0]);return dict(__accu0__)})();
deletelist[index];
print(n);
[20,40,60,80,100];
inspect.getmembers(parser,__kwargtrans__({predicate:inspect.ismethod}));
sns.heatmap(data,__kwargtrans__({linewidth:0,yticklabels:yticks,xticklabels:xticks}));
sympy.exp(x);
cmp(adiff,bdiff);
export var sim=gensim.matutils.cossim(vec_lda1,vec_lda2);
sys.exit(0);
var here=os.path.dirname("./P2JSnippets.py");
n.append(c);
stats.exponweib.fit(data,__kwargtrans__({floc:0,f0:1}));
Euler5(start+1,end,x);
T.append(df);
self.builder.add_from_file(self.glade_file);
merp[j].append(i);
export var cpus=multiprocessing.cpu_count();
reactor.run();

logging.shutdown();
ax1.set_title(title);
widget.insertRow(widget.rowCount());
var py_values=heapq.nlargest(2,my_list);
l1.grid(__kwargtrans__({row:0,column:0,padx:tuple([100,10])}));
ax.yaxis.set_major_formatter(y_format);
self.setCentralWidget(self.edit);
self.__storage.py_pop();
print(str.__doc__);
mpl.get_cachedir();
G.data[G.data!=0]=1;
-1-value;
sb.set_palette(cmap);
var comment=sh.Cells(1,1).Comment.Text();
f();
create_table(my_test_db,_create_sql);
cls(reader1,reader2);
var ws=wb.get_active_sheet();
r[k][v]+=1;
df.join(newFactor.reindex(df.index,__kwargtrans__({level:0})));
var user2=User.query.filter_by(__kwargtrans__({id:2})).first();
a.start();
hello_world.py;
[1.0001];
display.start();
var b=function(){var __accu0__=[];for(var i=1;i<10;i++)__accu0__.append(i*2);return __accu0__}();
self.ToggleTool(self._NTB2_ZOOM,false);
print(hex(intNum));
r.text;
print(A.B.__name__);
main();
print(window.get_name());
df[2].py_replace(4,17);
print(s);
plt.show();
g.apply_async();
time.sleep(5);
match.group();
sizer.Add(anotherWidget,__kwargtrans__({proportion:0,style:wx.ALL,border:5}));
timeComboBox.currentIndexChanged.connect(self.test);
ax.scatter(x,y);
choose_from_axis(x,1,1,2);

session.login(user,password);
message.pack(__kwargtrans__({padx:8,pady:8}));
a[a<.7].max();
datetime.timedelta(int(deltatuple));
var s=slice(start,stop,step);
ewh.clicked();
session.prepare();
print(pformat(x,formatfloat));
getattr(instance,attr);
df1.foo.isnull().sum()*100/len(df1);
print(o_form.producetype());
var foo=function(){var __accu0__=[];for(var x=0;x<10;x++)__accu0__.append(x*x);return py_iter(__accu0__)}();
self.my_dict[key]=frozenset(value);
df;
(function(){var __accu0__=[];for(var x of EmployeeList)__accu0__.append(str(x));return __accu0__})();
view.set_overwrite_status(true);
export var date_joined=datetime.now();
display(str(num));
print(list(gen(a)));
var id=Column(Integer,__kwargtrans__({primary_key:true}));
var __left0__=tuple([min(function(){var __accu0__=[];for(var i of ys)__accu0__.append(i.min());return __accu0__}()),max(function(){var __accu0__=[];for(var i of ys)__accu0__.append(i.max());return __accu0__}())]);var ymin=__left0__[0];var ymax=__left0__[1];
csvfile.seek(0);
plt.show();
response;
process.stdin.write(modified_line);
export var dropbox_folder=os.path.join(dirname,subdirname);
multiply_anything(0,8);
ctypes.addressof(some_long);
len(solns8);
var app=QtGui.QApplication(sys.argv);
ax.plot(x,y,__kwargtrans__({lw:2}));
test.__getslice__(0,null,-1);
df.apply(function __lambda__(s){return s[np.isfinite(s)].dropna()}).sum();
var f2=f2*np.max(f1)-np.min(f1)*(f2-1);
list(self.__dict__.py_values());
(df.isnull()|df)>=threshold;
print(df.head());

var metadata=MetaData(engine);
Gtk.main_quit();
var p=subprocess.Popen([fn],__kwargtrans__({shell:false}));
print(l);
self.resize(640,480);
print(q.cancel());
all(function(){var __accu0__=[];for(var i of lst)__accu0__.append(py_typeof(i)===int);return py_iter(__accu0__)}());
root.mainloop();
var start=time.time();
classifier.fit(X_train,y_train);
ch.setFormatter(formatter);
container.grid_rowconfigure(0,__kwargtrans__({weight:1}));
results[i]=urlopen(url).read();
sys.excepthook=my_excepthook;
var c=cv2.cvtColor(c,cv2.COLOR_BGR2RGB);
array([1,0]);
s.reverse();
GL.glClearColor(.5,.5,.5,1);
pp(list(find_days(start,end,1,2)));
csvwriter.writeheader();
print(list(accumulate(L)));
self.discard(item);
print(self.correct_response);
var data=json.loads(request.raw_post_data);
c.append(solve(new_matrix,size-1)*matrix[j]*Math.pow(-1,j+2));
p.resume();
self.crawler=CrawlerProcess(settings.SCRAPY_SETTINGS);
decisions.complete_workflow_execution();
sys.path.insert(0,cmd_folder);
result.append(offset);
pythoncom.PumpWaitingMessages();
args.value=py_values.py_get(args.py_values);
a.__setslice__(0,null,null,a.__getslice__(0,null,1)+da.__getslice__(0,null,1));
print(a.__getitem__([1,1]));
x.reshape(x.shape[0]/5,5).__getitem__([tuple([0,null,1]),tuple([0,2,1])]).flatten();
export var link=Field();
a[0][1]=10;
node.orth_;
d.join(s.py_split(d).__getslice__(0,n,1));
__in__(dict([[1,2]]),new set([1,2]));
textdata.columns-csvdata.columns;
result.append(i+j);
print(a,b,c);
export var transactions=Transaction.objects.for_account(account_id);
export var pgs=pdf.getNumPages();
random.shuffle(results);
s<t.isoformat();
df.max(1);
var value=myDict[key];
session.expunge(inst);
!np.any((a==b).mask)&&np.alltrue((a==b).compressed());
var array1=[[0,0],[0,0]];
set_value(dict_nested,list_address.__getslice__(0,-2,1),...list_address.__getslice__(-2,null,1));
var df=pd.DataFrame(d);
json.loads(dict_str);
var soup=BeautifulSoup(html);
a.py_sort(object_compare);
cleared.append(candidate);
export var ker=1/4*np.array([1,1,0,0,0,1,1],__kwargtrans__({dtype:np.float}));
self.get_name();
unfold(function __lambda__(y){return tuple([y,f(y)])},x);
var __left0__=mylist;var singleitem=__left0__[0];
yourThread.start();
encoder.encodefile(corpusfile_plaintext,corpusfile);
repr(c);
var id=Column(Integer,__kwargtrans__({primary_key:true}));
interactive(set_cursor,__kwargtrans__({x:ax.get_xlim(),y:ax.get_ylim()}));
print(word);
var bool_list=function(){var __accu0__=[];for(var item of bool_list)__accu0__.append(false);return __accu0__}();
(function(){var __accu0__=[];for(var d of rrule(MONTHLY,__kwargtrans__({dtstart:start,until:end})))__accu0__.append(tuple([d.month,d.year]));return __accu0__})();
layout.addWidget(self.table,1,0);
var form=RecipeForm(request.form);
L.append(L[i]);
signal.signal(signal.SIGALRM,handler);
export var master=tk.Tk();
rootApp.run(__kwargtrans__({debug:true}));
print(newcorpus.paras(newcorpus.fileids()[0]));
export var parsed_url=urlparse.urlparse(url);
file.close();
model.load_weights(weights_path);
self.video_out.write(video_frame);
random.shuffle(iters);
groupedby(enumerate(s),__kwargtrans__({key:itemgetter(1),keep:itemgetter(0)}));
export var x_train=np.random.normal(0,1,[50,10]);
pdb.set_trace();
foo.__annotations__;
df.index.get_loc(window_stop_row.py_name);
var csv_reader=csv.DictReader(utf8_data,__kwargtrans__(kwargs));
var tree=ET.parse(source);
amp*np.exp(-Math.pow(x-cen,2)/(2*Math.pow(sigma,2)));
export var coop=task.Cooperator();
py_typeof(df1);
export var pdf_reader=PdfFileReader(f);
var m=mp.Manager();
tm.assert_frame_equal(df,df);
var output=p2.communicate()[0];
var parts=line.py_split();
expm1(1E-5);
self.pack(__kwargtrans__({side:BOTTOM}));
self.view.setModel(self.proxy);
var a=[[0,1,0],[1,0,0],[1,1,1]];
var s=pd.Series([true,true,false,true]);
df2.set_index(np.arange(len(df2.index)));
wr.writerow(sheet.row_values(rownum));
false;
var doc=lh.parse(urllib.request.urlopen(url));
var n=find_words_in_image(open(sys.argv[1]).read());
print(str_list);
self.num=num;
var out=collections.defaultdict(list);
s.quit();
s.bind(tuple([HOST,0]));
result.append(str(s));
(function(){var __accu0__=[];for(var x of copies[i])__accu0__.append(x[i]);return py_iter(__accu0__)})();
mylist.py_sort(__kwargtrans__({key:function __lambda__(x){return x[1]}}));
sio.reset();
export var df6=pd.DataFrame(values2,__kwargtrans__({index:index,columns:columns}));
_list.extend(list(range(r[0],r[1])));
self.lom.append(py_name);
g(1E3,__kwargtrans__({y:2E3,z:500}));
reversed_dict[value].append(key);
d[i].append(x[j]);
print(timedelta(__kwargtrans__({hours:time.timezone/60/60})));
var x=random.choice([left,right]);
plt.scatter(delta[idx],vf[idx],__kwargtrans__({c:dS[idx],alpha:.7,cmap:cm.Paired}));
deletesys.modules[py_name];

pd.concat(frames,__kwargtrans__({py_keys:dates,axis:1}));
getattr(self._instance,attr);
var a=[[],[],[]];
update_wrapper(result,func);
urlpatterns.append(url(main_view_re,MainView.as_view()));
var w=np.fft.fft(data);
self.data[k]=v;
print(max(list));
var cols=df.columns.py_values.tolist();
var response=urllib.request.urlopen(req);
my_list;
var data=f.read(1);
inf.seek(0);
np.arange(10).__getslice__(10,0,-1);
app.debug=true;
internet.TCPServer(1025,factory).setServiceParent(application);
var a=2;
print(data);
shutil.rmtree(dir);
eval(input());
plt.colorbar(sm,__kwargtrans__({ticks:list(range(4))}));
export var dict_result=function(){var __accu0__=[];for(var item of root)__accu0__.append(item.get_dict());return __accu0__}();
MyClass().id;

self.selectedFiles;
pdb.Pdb(__kwargtrans__({stdout:sys.__stdout__})).set_trace();
cur.execute(query);
gc.collect();
i.py_update(7);
f.truncate();
my_dict[list[0]]=list.__getslice__(0,null,1);
print(f());
duck.quack();
fractExpr.setParseAction(function __lambda__(t){return sum(t)});
h.append(function(){var __accu0__=[];for(var k of get_keys)__accu0__.append([k,td.py_get(k)]);return dict(__accu0__)}());
plt.clf();
QWebPage.__init__(self);

os.makedirs(outdir);
plt.close();
self.close();
self.assertTrue(parser.long);
pygame.event.wait();
len(x)!=len(y)&&max([x,y],__kwargtrans__({key:len}))||min(x,y);
new set([new set([pform.as_p])]);
(xdiff.T*lu_solve(Sigma_inv,xdiff.T)).sum(__kwargtrans__({axis:0}));
t.refresh();
var df=df.astype(int);
(function(){var __accu0__=[];for(var key of a)__accu0__.append([key,function(){var __accu1__=[];for(var s of a[key])if(!__in__(s,b.py_get(key,[])))__accu1__.append(s);return __accu1__}()]);return dict(__accu0__)})();
GEN_RUNNING;
a.shape;
export var denom_ACGT=list(d1[0].py_values())+list(d1[1].py_values());
test();
a*c==b*d;
sherr.py_pop();
MULTI();
any(function(){var __accu0__=[];for(var x of myList)__accu0__.append(__in__(x,myDict));return py_iter(__accu0__)}());
var users=User.query.all();
parent.wait(5);
(function(){var __accu0__=[];for(var c of a)__accu0__.append(unicodedata.category(c));return __accu0__})();
var __left0__=os.path.py_split(module_path);var path=__left0__[0];var module_name=__left0__[1];
file.seek(2);
p.start();
Response(serializer.data);
var args=parser.parse_args();
ordered[k]=mydict[k];
bar.py;
res.append(total_sum-2*sum_smaller+x*(2*num_smaller-i));
export var answer2=function(){var __accu0__=[];for(var [i,v]of enumerate(answer1))if(v)__accu0__.append(tuple([i,v]));return __accu0__}();
tuple(function(){var __accu0__=[];for(var [x,y,z]of G)__accu0__.append(x);return py_iter(__accu0__)}());
plt.matshow(df_confusion,__kwargtrans__({cmap:cmap}));
5<tuple([1,2]);
var s=[[0]*4]*4;
curs.execute(sql_command);
arr.__getslice__(i,null,1)+arr.__getslice__(0,size-(len(arr)-i),1);
K.set_value(self.model.optimizer.lr,lr-1E4*self.losses[-1]);
s.sendmail(me,you,msg.as_string());
py_typeof(b).mro();
var logger=logging.getLogger();
kclass.append(min(data_list));
var directory=os.path.realpath(directory);
var x=np.hstack(tuple([x,x.__getslice__(0,null,-1)]));
timings.py_sort();
print(Xc.todense());
datetime.date(first.year,first.month,lastday);
doSomething(line.strip());
p(sys.path);
self.wfile.write(np.array(buf).tostring());
np.isnan(b);
test2(...args,__kwargtrans__(kwargs));
var pairs=function(){var __accu0__=[];for(var x of primes)if(__in__(x+2,primes))__accu0__.append(tuple([x,x+2]));return set(__accu0__)}();
export var fftf=numpy.fft.fftn(f);
ser.close();
walk_dict(d);
var Y=X.reshape(9,4,1).repeat(4096,2);
var df=df.stack()[[1,0]].reset_index(__kwargtrans__({level:2,drop:true})).reset_index();
self.table.installEventFilter(self);
t.daemon=true;
print(result);
var __left0__=zip(...result);export var kalman_x=__left0__[0];export var kalman_y=__left0__[1];
tuple([1125,1125,1125,1125,1125,1250,1062,1250]);
qq.close();
var rest=list(i);
var app=QtGui.QApplication(sys.argv);
var bigram_measures=nltk.collocations.BigramAssocMeasures();
var df1=df.unstack(0);
export var sector_el=function(){var __accu0__=[];for(var item of remaining)__accu0__.append(item[1]);return __accu0__}();
ax1.plot(xvals,yvals,__kwargtrans__({linewidth:4}));
start_response(status,headers);
ax.add_patch(clip_path);
var c=np.concatenate(tuple([a,b]));
var gray=cv.CreateMat(img.height,img.width,cv.CV_8UC1);
print(hashlib.sha1(str(a_sorted_list)).hexdigest());
list(dict(py_reversed(py_items)).py_items());
tuple([__all__,pickle.loads(pickled_name),pickle.loads(pickled_arguments)]);
var L=L.__getslice__(0,null,-1);
export var MAIL_USE_SSL=true;
var result=np.zeros_like(b);
var y=x;
export var threads=function(){var __accu0__=[];for(var i=0;i<5;i++)__accu0__.append(threading.Thread(__kwargtrans__({target:func,args:tuple([i,q])})));return __accu0__}();
var __left0__=ax2.plot([],[],__kwargtrans__({color:tuple([0,0,1])}));var im2=__left0__[0];
var r=requests.post(url,__kwargtrans__({files:files}));
py_keys;
do_something_with_update(MsUpdate);
var df=pd.concat(df_list);
var a=np.arange(1,n*m+1).reshape(n,m);
Repo.clone_from(git_url,repo_dir);
plt.show();
print(urls);
print(delta.total_seconds());
p.print_stats();
results.append(tag);
plt.close(fig);
ax.legend(proxies,descriptions,__kwargtrans__({numpoints:1,markerscale:2}));
var y=[4,5,6];
ax.xaxis.set_ticks(df.index);
df.index;
var __left0__=np.meshgrid(x,y);var xx=__left0__[0];var yy=__left0__[1];
var cur=conn.cursor();
show();
np.column_stack(np.nonzero(result));
var Base=declarative_base();
parking_rows.append(ParkingLotRow(tuple([1,20]),tuple([496,41]),25));
export var expiry_date=models.DateField();
sublist.append(i);
y.set_color(label_colors[y.get_text()]);
out.flush();
plt.show();
print(repr(combined_astr));
var c=a.__getitem__([ii,tuple([0,null,1])]);
ax.add_patch(ellip);
var __left0__=tuple([bymonthday]);export var bysetpos=__left0__;var bysetpos=__left0__[0];export var bymonth=__left0__[1];var bymonth=__left0__[0];export var bymonthday=__left0__[1];
var X_train=clf.fit_transform(X_train);
iT+=1;
var ar=function(){var __accu0__=[];for(var i of input().strip().py_split())__accu0__.append(int(i));return __accu0__}();
gibberish(4);
print(char2,len(char2),len(char2[0]));
textbox.pack();
layout.addWidget(picture);
var x=np.isnan(A).ravel().nonzero()[0];
response;
var contents=output.getvalue();
export var dh=urllib.request.urlopen(url);
var result=mysql_cursor.fetchone();
set(a)<set(b);
list(query_set);
export var rgba=numpy.concatenate(tuple([rgb,numpy.zeros(tuple([205,54,1]))]),__kwargtrans__({axis:2}));
mark_safe(form_as_div);
help(str.join);
df;
self._get_frame_nos();
print_tree(child,__kwargtrans__({indent:next_indent,last:next_last}));
dfile.flush();
B();
var py_name=models.CharField(__kwargtrans__({max_length:255}));
bullet.DISABLE_SIMULATION;
ax.yaxis.set_label_coords(labelx,.5);
xs.py_sort(__kwargtrans__({key:len}));
text[-1]+backward(text.__getslice__(0,-1,1));
M.ix.__setitem__([tuple([0,1]),tuple([0,1])],1);
ax.set_axis_off();
var df2=pd.DataFrame(d1);
var my_path=os.path.abspath("./P2JSnippets.py");
var session=Session.objects.py_get(__kwargtrans__({session_key:session_key}));
l.__setslice__(n,null,null,[0]*(n-len(l)));
toplevel.update_idletasks();
var img=filedescriptor.read();
var root=tk.Tk();
do_pre_install_stuff();
export var old_filename=file_path[-1];
var ax=plt.gca();
Base.metadata.create_all(engine);
getattr(self.obj,key);
soup.root.contents[0].py_name;
result.append(tuple([k,length,index]));
serv.start();
print(df.to_csv());
G.add_edges_from(function(){var __accu0__=[];for(var [i,j,sim]of edges)if(sim>=THRESHOLD)__accu0__.append(tuple([i,j]));return py_iter(__accu0__)}());
var pipe=Popen(command_2,__kwargtrans__({shell:true,stdin:PIPE,stdout:PIPE}));
var lines=set(f);
var model=Sequential();
my_dict[key[-1]]=value;
bc.as_datetime();
print(cell.text_content());
s.cookies.save();
var ax=plt.subplot(111);
var data=[np.arange(8).reshape(2,4),np.arange(10).reshape(2,5)];
f.write(line);
print(len(s));
proc.start();
print(np.exp(-(A+B)));
export var counts_counter=Counter(list(counter.py_values()));
var now=datetime.now();
admin.site.register(Author,AuthorAdmin);
var pos=nx.spring_layout(G);
plt.figure(4);
var idx=np.clip(idx,1,len(A)-1);
export var tabfile=StringIO(contents);
my_map.etopo();
pd.notnull(np.nan);
print(random_list);
self.assertEqual(target.int(),b10);
gevent.spawn(test);
export var lineno=traceback.tb_lineno;
setattr(self,attr_name,fn(self));
start<num&&num<end?num:num<=start?start:end;
var app=QtGui.QApplication(sys.argv);
plt.imshow(imgmap,__kwargtrans__({zorder:4}));
vline.set_xdata(tuple([x,x]));
var ax1=fig.add_subplot(221);
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
var c=p.stdout.read(1);
cap1.set(4,120);

var __left0__=np.histogram(series,__kwargtrans__({bins:[-201,-149,949,1001]}));var count=__left0__[0];export var division=__left0__[1];

df;
cursor.close();
var groups=Group.objects.filter(__kwargtrans__({player:p1})).filter(__kwargtrans__({player:p2}));
myArray.__len__();
gevent.joinall(jobs);
var result_queue=Queue();
parser.parse_args();
convert_dict(v);
theList.__getslice__(4,7,1)+theList.__getslice__(12,18,1);
A[1]=previous_A[1];
plt.colorbar();
print(list(dd.py_keys()));
manager.start();
var im=Image.open(filename);
msmdsrvini.close();
array_c.append(x);
ogl.CGLSetParameter.argtypes=[ctypes.c_void_p,ctypes.c_int,ctypes.c_void_p];
sess.run(init_op);
csv2.readline();
pool.close();
setattr(self,k,v);
np.take(x,lin_idx);
time.sleep(1);
var data=f.read(BUF_SIZE);
logger.removeHandler(logger.handlers[0]);
img.save(filename);
itineraryArray.itinerary.append(itinerary0);
np.complex(0,1);
print(len(your_list));
pylab.xticks(list(range(len(allinterests))),allinterests);
var db=SQLAlchemy(app);
var f=f.simplify();
ax2.set_ylim(0,ax2.get_yticks()[-1]);
sorted_KP.remove(item);
var mask=array1==array2;
layout.addWidget(self.button);
var g=gevent.spawn(urllib.request.urlopen,url);
var d=(1+math.sqrt(1+8*len(condensed_matrix)))/2;
example.__setslice__(4,1,null,[122]);
t.start();
self._db=db;
print(line);
operator.add(1,2);
xml.sax.xmlreader;
self.serve_forever();
self.txt=ScrolledText(self.root,__kwargtrans__({undo:true}));
initdelorean();
initfoo();
print(data);
time.sleep(.1);
time.sleep(.5);
var c=t[2];
worksheet.set_column(i,i,column_len);
max(0,-n.as_tuple().exponent);
var args=parser.parse_args();
tuple([co.co_code,co.co_consts,co.co_names]);
ax.barh(ind,vals,width,__kwargtrans__({color:colors}));
var first_name=models.CharField(__kwargtrans__({max_length:50}));
itertools.combinations(stuff,4);
file.close();
[10,4,1];
print(resp.read());
clusters.py_setdefault(v,[]).append(k);
df1.apply(assign_metric_vals,1);
ax.plot(x,y);
var y_train=np.random.randint(0,10,[50]);
random.uniform(float(start),float(start+width));
s.sendmail(me,you,msg.as_string());
var __left0__=plt.subplots(__kwargtrans__({nrows:2,ncols:2,sharey:true,sharex:true}));var fig=__left0__[0];var axes=__left0__[1];
var fig=plt.figure(__kwargtrans__({figsize:tuple([9,9])}));
pprint.pprint(gc.get_referrers(l));
x+y;
export var first_day=today.py_replace(__kwargtrans__({day:1}));
A.__setitem__([tuple([0,null,1]),0],A.__getitem__([tuple([0,null,1]),D2-1]));
s.recv_info(q);
self._bar;
var diff=np.empty_like(img1);
time.sleep(.5);
b.max();
x[1].__getslice__(0,2,1)[2];
ser.close();
asyncore.dispatcher.__init__(self);
var L=[0]*10;
var fig=plt.figure();
ax.xaxis_date();
(function(){var __accu0__=[];for(var i=0;i<n;i++)__accu0__.append(Math.pow(2,i));return py_iter(__accu0__)})();
timer.start();
model1.objects.create();
var colors=np.linspace(0,1,N);
var result=Image.fromarray((visual*255).astype(numpy.uint8));
f2.write(Lines[i]);
gram_matrix;
pd.read_clipboard();
print(res.first_name,res.last_name);
myDict[key]+=value;
timediff.total_seconds();
eval.__text_signature__;
np.allclose(diam,dam_out);
ax.set_yticks(np.arange(.5,10.5,1));

var ax2=plt.subplot(1,2,2);
var engine=create_engine(dbconninfo);
var value=__in__(key,cache)?cache[key]:cache.py_setdefault(cache,func(key));
B.objects.create(__kwargtrans__({a:some_a}));
tuple(sum(base_lists,[]));
var df1=pd.DataFrame(function(){var __accu0__=[];for(var x of df2.teams)__accu0__.append(x);return __accu0__}());
export var figure=pylab.figure(__kwargtrans__({figsize:figsize}));
asyncore.loop();
min(list(res.py_items()),__kwargtrans__({key:itemgetter(0)}))[1];
Image.composite(img,blurred_halo,ImageChops.invert(blurred_halo));
var __left0__=tuple([z,x,y]);var x=__left0__[0];var y=__left0__[1];var z=__left0__[2];
sum_digits(1969);
t.start();
out.close();
main();
var p=webdriver.FirefoxProfile();
genn(igap,igap+1);

toolsmodule.printdatabase();
buffer.append(line.strip());
figure.show();
plt.plot(list(range(10)),x,py_next(linecycler));
print(py_typeof(f));
self.harmstat=harmstat;
map(function __lambda__(t){return t.start()},tlist);
print(df.py_values);
var c=nprect(1,x);
gmpy.divm(1,4,8);
self.particles=[];
var __left0__=plt.subplots();var fig=__left0__[0];var ax1=__left0__[1];
var app=QtGui.QApplication(sys.argv);
(function(){var __accu0__=[];for(var [x,y]of groupby(mylist,get_field_sub))__accu0__.append(tuple([x,list(y)]));return __accu0__})();
selobj.path;
out.append(int(n));
print(A.__getitem__([i,j,B]));
var __left0__=tuple([np.asarray(a),np.asarray(x),np.asarray(b)]);var a=__left0__[0];var x=__left0__[1];var b=__left0__[2];
var results=map(process_file,function(){var __accu0__=[];for(var py_name of names)__accu0__.append(os.path.join(dirname,py_name));return __accu0__}());
var doc=etree.parse(f_source,parser);
curses.noecho();
s.connect(tuple([host,port]));
plt.figure();
ax.coastlines();
export var newgrid=function(){var __accu0__=[];for(var i=0;i<len(grid[0]);i++)__accu0__.append(function(){var __accu1__=[];for(var x of grid)__accu1__.append(x[i]);return __accu1__}());return __accu0__}();
var ax1=fig.add_subplot(111);
print(response.status_code);
lst.py_sort(__kwargtrans__({key:MyStrOrder}));
list(sum(tupleOfTuples,tuple([])));
export var file_writer=csv.writer(test_file);
pet.say();
thread.start();
util.log_to_stderr(__kwargtrans__({level:logging.DEBUG}));

arr[mask]=np.nan;
var c=db.cursor();
httpdkenlogger.addHandler(fh);
print(str.isdigit.__doc__);
var c=array([a,b]);
pilimg.show();
var r=requests.py_get(url);
sys.exit(0);
self.finish();
pyl.clabel(CS,__kwargtrans__({inline:1,fontsize:10}));
print(A.func1.__doc__);
var words=my_string.py_split();
binary_f(function __lambda__(x){return f(x)!=val0},list);
export var view_menu=tk.Menu(menubar);
export var dict=function(){var __accu0__=[];for(var p=1;p<n;p++)__accu0__.append([Math.pow(x,p),expr.collect(x).coeff(Math.pow(x,p))]);return dict(__accu0__)}();
c.setopt(c.WRITEFUNCTION,data.write);
GPS_EPOCH+datetime.timedelta(__kwargtrans__({seconds:t1_seconds,microseconds:t1_us}));
myThread.join();
var D=sorted(C,__kwargtrans__({key:function __lambda__(x){return x[1]}}));
(function(){var __accu0__=[];for(var e of set(lst).difference(dups))__accu0__.append(dict(e));return __accu0__})();
tuple([[0,0,0,0,0,0,0,162,1,164]]);
dict(__kwargtrans__({form:form}));
root.mycontainer.myattr;
a.start();
var channel=connection.channel();
np.cross(a,b,__kwargtrans__({axisa:0,axisb:0}));
setp(ax.get_xticklabels(),__kwargtrans__({fontsize:8}));
t.start();
json.dump(row,sys.stdout);
self.output_logger;
var boundaries=function(){var __accu0__=[];for(var i=1;i<len(x);i++)if(x[i]!=x[i-1]+1)__accu0__.append(i);return __accu0__}();
temp[0]=1;
export var WLAN_AVAILABLE_NETWORK_CONNECTED=1;
var p=subprocess.Popen(args,__kwargtrans__({stderr:sys.stdout.fileno(),stdout:subprocess.PIPE}));
export var pem=ssl.get_server_certificate(tuple([host,port]));
self.initial_parameternameX=self.parameternameX;
var x=f.readline();
export var ff=webdriver.Firefox();
hash_md5.hexdigest();
export var store=Gtk.ListStore(str,GdkPixbuf.Pixbuf,bool);
print(tuple([a]));
var a=np.asarray(a);
timerthread[0].start();
bisect_right(a,x);
sys.stderr.write(highlight(tbtext,lexer,formatter));
result.addFailure(self,sys.exc_info());
(function(){var __accu0__=[];for(var i=0;i<5;i++)__accu0__.append(i*i);return __accu0__})();
var im=Image.open(StringIO(fd.read()));
a.py_replace(b,c);
var __left0__=tuple([[],[],[]]);export var XS=__left0__[0];var YS=__left0__[1];var ZS=__left0__[2];
Base.metadata.create_all(self._conn);
pool.close();
self.transport.write(data);
a.py_sort(__kwargtrans__({key:function __lambda__(x){return x[1]},reverse:true}));
print(channel.recv(1024));
ax.legend_.remove();
self.deletecommand(funcid);
var C=np.searchsorted(A,B);
df.iloc.__getslice__(-6,-1,1);
ssh.load_system_host_keys();
var x=np.arange(20);
isect.append([event[0],0]);
deletedictionary[oldkey];
print(a-b);
print(x.most_common());
export var finalurl=res.geturl();
print(function(){var __accu0__=[];for(var row of r)if(row)__accu0__.append(row);return __accu0__}());
print(args);
root.config(__kwargtrans__({menu:menu_bar}));
print(list(solve(x)));
result_s.casefold()==result_s.casefold().__getslice__(0,null,-1);
var df=pd.concat(df);
pdb.Pdb.setup(self,f,t);
sum(function(){var __accu0__=[];for(var i of x)if(__in__(i,y))__accu0__.append(i);return py_iter(__accu0__)}())*w[i]/sum(function(){var __accu0__=[];for(var i of x)__accu0__.append(i);return py_iter(__accu0__)}())*w[i];
print(sys.path[0]);
buffer+=ser.read(ser.inWaiting());
self.request.user;
var test2=pd.concat(data,__kwargtrans__({ignore_index:true}));
print(key,my_dict[key]);
ax1.set_xticklabels(data.columns);
self.driver=webdriver.Firefox();
db_crsr.close();
p.start();
export var abcd=ABCD();
inotify.close();
zipfile.ZipFile(memory_zip);
min(cluster,__kwargtrans__({key:function __lambda__(t){return abs(ts-t)}}));
var window=MainWindow();
f.seek(0);
pprint.pprint(data);
plt.show();
var here=os.path.dirname(os.path.realpath("./P2JSnippets.py"));
s.setsockopt(socket.IPPROTO_IP,socket.IP_HDRINCL,1);
a.to_frame().join(b.to_frame());
q.shape;
dict.__init__(self,...args,__kwargtrans__(kwargs));
output.addPage(page);
table.insertRow(rowPosition);
piechart[0][i].set_hatch(patterns[__mod__(i,len(patterns))]);
print(repr(y));
server.starttls();
func(...params);
print(count);
var f=function(){var __accu0__=[];for(var x=0;x<10;x++)__accu0__.append([x,make_func(x)]);return dict(__accu0__)}();
var now=datetime.now();
bcut.ax.patch.set_visible(false);
var data=sys.argv[1];
export var ndarray=np.PyArray_SimpleNewFromData(1,shape,np.NPY_DOUBLE,self.data_ptr);
print(function(){var __accu0__=[];for(var p of product)__accu0__.append(dict(zip(list(options.py_keys()),p)));return __accu0__}());
image.set_from_pixbuf(handle.get_pixbuf());
result();
sympy_exp.evalf(__kwargtrans__({subs:dict([[a,6],[b,5],[c,2]])}));
var foo=function __lambda__(x,y,z){return x+y+z};
[[1,1],[1,2],[2,2]];
var __left0__=tuple([A[k],A[j]]);A[j]=__left0__[0];A[k]=__left0__[1];
get_current_fig_manager().window.raise_();
plt.subplot(211);
A.resize(tuple([D1,D2-1]),__kwargtrans__({refcheck:false}));
self._current_browser();
var result=[];
app.register_blueprint(chat);
[1,4,7,10];
dic[py_keys[-1]]=value;
var matchingVals=function(){var __accu0__=[];for(var x of a)if(x>2)__accu0__.append(x);return __accu0__}();
ax1.get_xaxis().set_major_formatter(ticker.FuncFormatter(my_formatter_fun));
pylab.setp(ax.get_xticklabels(),__kwargtrans__({visible:true}));
file.seek(line_offset[n]);
(function(){var __accu0__=[];for(var i of np.unique(z))if(i)__accu0__.append([i,zip(...np.where(z==i))]);return dict(__accu0__)})();
var p=Process(__kwargtrans__({target:f,args:tuple([d])}));
print(ned);
setattr(inst,self.py_name,value);
export var prop1=db.String;
true;
columns.append(cd[0]);
[foo,bar];
var A=np.random.randint(0,1E3,1E4);
var x=random.randrange(0,maxx);
print(x);
set(l1)|set(l2);
logging.Formatter.converter=time.gmtime;
var __left0__=line.py_split();var id=__left0__[0];export var nm=__left0__[1];export var lat=__left0__[2];export var lon=__left0__[3];export var code=__left0__[4];
decimal.Decimal(-1200).exp();
sum(function(){var __accu0__=[];for(var i=0;i<5;i++)__accu0__.append(i*i);return py_iter(__accu0__)}());
ax.plot(x,y);
ng.append(history[_id]);
var fig=plt.figure();
export var this_year=DT.date(DT.date.today().year,1,1);
help(math);
cat.head(15);
pool.join();
var df=pandas.DataFrame(dfdict);
var today=date.today();
help(Assignment);
sys.modules[py_name]=module;
var b=a.__getslice__(0,null,1);
print(func(x));
var lines=function(){var __accu0__=[];for(var l of r)__accu0__.append(l);return __accu0__}();
var a=np.empty(tuple([1]),__kwargtrans__({dtype:np.object}));
a.__setslice__(1,1,null,[6,7]);
os.path.join([conf.TEMPLATES_UPLOAD_DIR,filename]);
print(C.b.__doc__);
self.axis=self.figure.add_subplot(111);
var testsite_array=f.readlines();
print(reverse_cumsum(array));
max(files,__kwargtrans__({key:filetimestamp}));
print(vc[vc>2].index[0]);
var instance=Child.do_something(instance);
f.write(br.response().read());
top.after(1E3,start,false);
sock.setsockopt(socket.SOL_SOCKET,socket.SO_REUSEADDR,1);
var img=Image.open(image);
deletev.__getslice__(0,-1,1);
client.service.GetWeatherInformation();
show();
var page=f.read();
pvt.apply(function __lambda__(x){return x/pvt.sum(1)});
var norm=matplotlib.colors.Normalize(__kwargtrans__({vmin:10,vmax:20}));
self.value.increment();
f();
print(x);
export var check=a.__getitem__([tuple([0,null,1]),1])==4|a.__getitem__([tuple([0,null,1]),1])==6;
df.append(row);
var ax=fig.add_subplot(111);
var res=f(...args,__kwargtrans__(kwargs));
4/float(100);
var timestamp=d-datetime(1970,1,1,__kwargtrans__({tzinfo:pytz.utc}));
gtksink.props.widget.show();
print(mail.unread());

ax.get_yaxis().set_major_formatter(ticker.FuncFormatter(comma_format));
var b=a+b;
api/__init__.py;
var df=pd.concat([df]*1E4).reset_index(__kwargtrans__({drop:true}));
var output=f.read();
map(np.max,np.py_split(v,np.where(mask)[0]+1));
var arr=np.empty(shape,__kwargtrans__({dtype:object}));
var result=[];
local_filename;
- -startas/tmp/testdaemon.py;
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
draw.line(tuple([0,0])+im.size,__kwargtrans__({fill:128}));
plt.gca().add_patch(plt.Circle(tuple([posx,-posy]),__kwargtrans__({radius:.1,fc:color})));
fliers[i].set_data([fdata[0][id],fdata[1][id]]);
b.clicked.connect(self.processButton);
linesamples.add(int(4*i+0));
719529;
var a=np.arange(10);
transaction.rollback();
K[K.argsort().__getslice__(-5,null,1)];
var writer=csv.writer(outfile);
(function(){var __accu0__=[];for(var item of d1.py_items())if(item[1]==55)__accu0__.append(item[0]);return __accu0__})()[0];
get_value(dic,70);
Math.pow(Math.pow(2,52),log(b,2)-log(a,2));
print(list(flatten_group(a)));
ylim(ax1.get_ylim());
export var cache=self.get_cache();
print_matrix(matrix,size);
B.nbytes;
__in__(g,df.index.py_values);
pandas.concat(df_l);
t.start();
result;
show_url.allow_tags=true;
print(string);
(function(){var __accu0__=[];for(var row of self[rows])__accu0__.append(row[cols]);return __accu0__})();
export var site=SiteData.objects.filter(query);
var m=(1<<bits)-1;
funcs.append(func);
print(np.unpackbits(xp));
[2,2,2];
imouto.py_name;
numpy.column_stack(tuple([a,b]));
print(item);
X[0]-a;
sum([.1,.1,.1,.1,.1,.1,.1,.1,.1,.1]);
plt.pcolor(X,Y,f(data),__kwargtrans__({cmap:cm,vmin:-4,vmax:4}));
pygame.camera.init();
export var bow_length=perimeter/(desired_number_of_full_bows+.5);
sock.connect(tuple([host,port]));
a_set;
(np.expand_dims(a,-1)==np.expand_dims(b,1)).sum(__kwargtrans__({axis:-1})).sum(__kwargtrans__({axis:-1}));
sched.start();
map(functools.partial(add,__kwargtrans__({y:2})),a);
(function(){var __accu0__=[];for(var item of theList)if(tdin(item))__accu0__.append(tdgi(item));return __accu0__})();
a.set_yticklabels([]);
pool.close();
os.getcwd();
print(better_uc);
deleteself._x;
var ax=fig.add_axes([0,0,1,1]);
var message=email.message_from_string(email_data);
yaml.add_representer(collections.OrderedDict,dict_representer);
a.py_pop(2);
consumer.start();
curses.initscr();
export var multi_line_word=ZeroOrMore(split_word)+word;
self.manager.start();
dlclose(handle);
export var testRunner=unittest.TextTestRunner(__kwargtrans__({verbosity:0}));
ws.send(msg);
comprehended.repeat();
list(reorder(a));
var soup=BeautifulSoup(html,__kwargtrans__({convertEntities:BeautifulSoup.HTML_ENTITIES}));
var len2=math.hypot(x2,y2);
metadata.append(row);
ax1.set_title(title);
var doc=html.fromstring(content,__kwargtrans__({base_url:url}));
plt.draw();
warnings.showwarning=customwarn;
print(D[key]);
self.pw.pic=ImageTk.PhotoImage(image);
fig.subplots_adjust(__kwargtrans__({left:.25,bottom:.25}));
var img=image.resize(tuple([188,45]),Image.ANTIALIAS);
current.start();
sorted(structure,__kwargtrans__({key:keyfunc}));
df_s.groupby(cols).apply(Full_coverage_nosort);
os.mkdir(dirname);
export var a_new=function(){var __accu0__=[];for(var e of a)__accu0__.append(d.py_get(e,e));return __accu0__}();
tuple([1,2]);
ssh.close();
pp(function(){var __accu0__=[];for(var el of et.fromstring(xs))__accu0__.append(dict(function(){var __accu1__=[];for(var attr of el)__accu1__.append(tuple([attr.tag,attr.text]));return py_iter(__accu1__)}()));return __accu0__}());
x|y;
x*np.sqrt(y);
app.MainLoop();
self.model=QtGui.QStandardItemModel();
self.__key__()<other.__key__();
print(A[np.searchsorted(A.__getitem__([tuple([0,null,1]),0]),I)]);
self.sizer.Add(self.button,__kwargtrans__({flag:wx.EXPAND|wx.ALL,border:5}));
RenderJSON(your_json);
getattr(object,f);
export var a_sorted_list=function(){var __accu0__=[];for(var key of sorted(a.py_keys()))__accu0__.append(tuple([key,a[key]]));return __accu0__}();
a.read();
tuple([]);
var c=function(){var __accu0__=[];for(var i=0;i<len(a);i++)__accu0__.append(a[i]+b[i]);return __accu0__}();
var columns=function(){var __accu0__=[];for(var m of model.__table__.columns)__accu0__.append(m.key);return __accu0__}();
var root=tk.Tk();
pickle.dumps(picklable);
(function(){var __accu0__=[];for(var n of zip(...l))__accu0__.append(average(n));return __accu0__})();
var thread=threading.Thread(__kwargtrans__({target:server.serve_forever}));
self.deletecommand(funcid);
var ax=plt.gca();
UPPER[LOWER.index(s)];
tup.__getslice__(0,ix,1)+tuple([val])+tup.__getslice__(ix+1,null,1);
bokeh.io.save(layout);
house_list.append(House(str(new_house)));
db.session.query(Vehicle).filter(str(Car.id)==Vehicle.value);
print(textwrap.fill(str(collections.Counter(chars)),__kwargtrans__({width:79})));
var key=operator.itemgetter(0);
time.sleep(polling_interval-work_duration);
sys.exit(app.exec_());
HttpResponse(simplejson.dumps(user.toJSON()));
t1.save();
sess.query(Tag).distinct(Tag.py_name);
export var subparsers=parser.add_subparsers();
var dc=wx.ClientDC(self);
var sess=tf.InteractiveSession();
self._classes=dict({});
net._setParameters(new_params);
var fig=plt.figure(1);
var __except0__=Http404();__except0__.__cause__=null;throw __except0__;
axes_2.axis([-5,5,-5,5]);
var x=2;
display.popen.kill();
print(cell.text);
df;
pd.read_csv(io.StringIO(t),__kwargtrans__({header:0}));
process2.wait();
f.write(data);
plt.plot(X,Y2,__kwargtrans__({lw:4}));
pandas.get_dummies(input_df);
print(check_for_triangle(tri2,lines));
self.mainframe.columnconfigure(column,__kwargtrans__({weight:1}));
var b=TestC();
cm.print_stats();
var result=function(){var __accu0__=[];for(var p1 of people)for(var p2 of people)if(p1!=p2)__accu0__.append(foo(p1,p2));return __accu0__}();
var z=np.array([false,false,false,false]);
isdefarg();
max(sum(tableData,[]),__kwargtrans__({key:len}));
self.cowButton.grid(__kwargtrans__({row:0,column:0}));
br.form.fixup();
var x=list(df1.columns.py_values);
plt.show();
self.close();
dbconn.commit();
var a=[];
word[0].isupper()?uppers.append(word):lowers.append(word);
urllib.request.urlopen(req);
var t=tuple(reader);
self.image.set_from_pixbuf(self.loader.get_pixbuf());
var id=Column(Integer,__kwargtrans__({primary_key:true}));
self.lineedit.py_clear();

var out=np.asarray(out).reshape(tuple([xsize,ysize]));
export var datelist=pd.date_range(pd.datetime.today(),__kwargtrans__({periods:100})).tolist();
export var pycurl_connect=pycurl.Curl();
var connection=engine.connect();
c1.setopt(pycurl.PROXYTYPE,pycurl.PROXYTYPE_SOCKS5);
print(list(py_iter(root)));
var img=Image.open(FILENAME);
print(ned);
wx.Panel.__init__(self,__kwargtrans__({parent:parent}));
a[1].value;
file.close();
export var summt=tf.Summary();
export var difs=numpy.diff(bounded);
print(df.types);
var cb=fig.colorbar(surf);
inspect.isclass(o)&&issubclass(o,A);
d.close();
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
curl.setopt(pycurl.WRITEFUNCTION,buff.write);
var user1=forms.ChoiceField(__kwargtrans__({choices:[]}));
t.play();
deleteL[i];
pprint.pprint(l);
print(a.__getitem__([tuple([0,null,1]),2]));
win.refresh();
var layout=QtGui.QVBoxLayout(self);
count+=1;
time.sleep(1);
df1;
np.exp(-z)*np.sin(t-z);
export var weight=tf.Variable(tf.truncated_normal([data_size,target_size]));
self.timeout=timeout;
var body=models.TextField(__kwargtrans__({null:false,max_length:1024}));
var s=s.lower();
self.i+=1;
isinstance(obj,tuple);
export var subq=session.query(User.id).filter(User.is_admin==true).subquery();
foo.close();
export var numcount=dict(function(){var __accu0__=[];for(var num of set(numlist))__accu0__.append(tuple([num,numlist.count(num)]));return py_iter(__accu0__)}());
result.append(tuple([g[0][0],g[-1][-1],k]));
listWidget.insertItem(item);
G.add_node(2,__kwargtrans__({pos:tuple([2,2])}));
list(Counter(words).py_keys());
self.handle_read_callback(self);
sess.run(init_op);
var fig=plt.figure();
var count=(sums.reshape(-1,s1.shape[1])==0).all(1).sum();
var p1=Thread(__kwargtrans__({target:process_output,args:tuple([dcmpid])}));
export var grouped=grouped.reset_index();
export var pizzas_bought=models.ManyToManyField(Pizza);
var html=urllib.request.urlopen(url).read();
p.start();
var x=copy.copy(x);
parse_qs(parsed_url.query);
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
array([2,0,1]);
regex.match(data.getvalue());
perms.append(map(list,zip(...tables)));
desks;
all(function(){var __accu0__=[];for(var x of some_list)if(x>5)__accu0__.append(some_func(x)||true);return py_iter(__accu0__)}());
var window=tk.Tk();
[1,0,2,1];
ws.column_dimensions[col].width=value;
print(data);

self.assertEqual(2,2);
glEnd();
var b=random.randint(0,20-a);
u.save();
cal.save();
var count=(array_1d==row_scalar).sum();
any(function(){var __accu0__=[];for(var l of lines1)for(var s of search_strings)__accu0__.append(__in__(s,l));return py_iter(__accu0__)}());
var fig=plt.figure();
b>0?b*X(X,b-1):1;
instance.save();
np.isnan([nan,nan]);
var __left0__=np.histogram(d,mybins);export var htemp=__left0__[0];export var jnk=__left0__[1];
var y=np.concatenate(y);
accept.stop();
var line=line.rstrip();
celery.init_app(app);
A(1,2).asdict();
len(a)<len(b)?a:b;
plt.show();
sys.__excepthook__(py_metatype,value,tb);
var filename=os.path.basename(path);
print(i);
df.py_replace(eq,1,__kwargtrans__({inplace:true}));
self.running=false;
getattr(os,s)();
print(x);
Thread(__kwargtrans__({target:process_output,args:[process]})).start();
prices.__getslice__(0,-1,1)/prices.__getslice__(1,null,1).py_values-1;
math.ceil(4500/1E3);
var img=cv2.cvtColor(img,cv2.COLOR_BGR2RGB);
a+b;
list(kw.py_values())[0];
x+y;
clf.fit(X,y);
export var bools=[true,true,false,true,true,false,true];
help(__future__);
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
reactor.stop();
export var entity=query.py_get();
var df=df.stack().reset_index();
print(str(some_delta));
imgaxes.set_xlim(tuple([x1,x2]));
np.sin(theta,__kwargtrans__({out:x.__getitem__([tuple([0,null,1]),1])}));
socket.setdefaulttimeout(60);
text.set_color(color);
self.worker.flag=true;
row.append(np.array(list(range(0,num_rows))));
self.select_range(self.position,Tkinter.END);
a.count(item)==1;
print(hello());
(function(){var __accu0__=[];for(var _f of pattern.py_split(s))if(_f)__accu0__.append(_f);return __accu0__})();
np.place(dat,np.in1d(dat,old_val),new_val);
os.killpg(os.getpgid(pro.pid),signal.SIGTERM);
patcher.start();
var data=np.arange(1,7);
print(b.z);
export var arr2d=np.zeros(tuple([10,10]));
var person=find_person(people_list,py_name);
f(n);
print(line);
ax.invert_yaxis();
export var min_value=min(d.py_values());
var indices=tf.constant([0,2]);
dict(function(){var __accu0__=[];for(var c of columns)__accu0__.append(tuple([c,getattr(model,c)]));return py_iter(__accu0__)}());
var s=f.getvalue();
isinstance(0,collections.Sequence);
self.neighbours=0;
var app=QApplication(sys.argv);
vol+=function(){var __accu0__=[];for(var key of sorted(volume))__accu0__.append(volume[key]);return __accu0__}();
var soup=BeautifulSoup(page);
tuple([tuple([a,rec[a]]),tuple([b,rec[b]])]);
w.maximize();
var __left0__=np.meshgrid(X,Y);var x=__left0__[0];var y=__left0__[1];
obj.user.save();
current_user.append(line.__getslice__(6,null,1).strip());
export var plt2=fig.add_subplot(2,1,2);
var doc=BeautifulSoup.BeautifulSoup(req.content);
group.delete();
var cursor=con.cursor();
var max_index=np.argmax(a[inds][mask]);
obj.starts+=timedelta(__kwargtrans__({days:1,hours:2}));
a+b+c;
df.columns;
tcp_send(pickle.dumps(dict));
export var gs=gridspec.GridSpec(2,1,__kwargtrans__({height_ratios:[1,4]}));
var output=os.rename(infilename,newname);
f.read();
html.format(__kwargtrans__({model:model,content:data,theaders:theaders}));
(function(){var __accu0__=[];for(var i of obj)__accu0__.append(convert(i));return __accu0__})();
max(map(len,line.py_split()));
f.close();
plt.legend(recs,classes,__kwargtrans__({loc:4}));
var opener=urllib.request.build_opener();
py_next(f);
export var colr1=getRGBfromI(i1);
print(sum(function(){var __accu0__=[];for(var x of l)if(my_condition(x))__accu0__.append(1);return py_iter(__accu0__)}()));
DBSession.commit();
ax2.set_yticklabels(new_labels);
set(chain(...list(obj.py_values())));
M.__getitem__([row,col]);
list(d.py_values());
m.drawcoastlines();
random.choice(self.py_items);
[1,2,1];
os.makedirs(save_path);
export var devnull=os.open(os.devnull,os.O_WRONLY);
print(len(f.read()));
arr.reshape(arr.size/2,2);
rev_multidict.py_setdefault(value,set()).add(key);
self.lock=threading.Lock();
glViewport(0,0,width,height);
var diff=function(){var __accu0__=[];for(var [x,y]of pairwise(your_iterable))__accu0__.append(round(abs(x/float(y)),1));return __accu0__}();
self.conn=MySQLdb.connect();
d[item[0]].append(item);
a[0]=c;
df;
ax.set_xticks(np.arange(data.shape[1])+.5,__kwargtrans__({minor:false}));
pyplot.plot(x,y);
p.start();
__mod__(n,k)==0;
setattr(self,k,v);
Example().run();
interned;
_odbcinst_UserINI(szFileName,FALSE);
request.finish();
plt.figure();
pl.plot_surface(X,Y,Z,__kwargtrans__({alpha:.4}));
p.join();
var a=np.zeros(tuple([2,2]));
process(line);
var df=pd.DataFrame(function(){var __accu0__=[];for(var v of vals)__accu0__.append(dict(zip(...v)));return py_iter(__accu0__)}());
print(data);
pprint(stiff.subs(dict([[-nuxy-2*Math.pow(nuxz,2)+1,m]])));
self.setGeometry(100,100,500,190);
any(function(){var __accu0__=[];for(var i of rng)__accu0__.append(__in__(i,setA));return py_iter(__accu0__)}());
prefixes[key.__getslice__(0,-1,1)].append(key);
plt.tight_layout();
self.tree.configure(__kwargtrans__({yscrollcommand:vsb.set,xscrollcommand:hsb.set}));
tuple([math.sqrt(x*x+y*y),math.atan2(y,x)]);
self.currentStack.append(obj);
ax.plot(x,y);
var a=[];
time.sleep(.01);
isinstance(Ham2(),Ham1);
c.setopt(c.URL,url);
security_adapter.set_enable_user_folders(true);
print(list(a));
divisors.append(i);
X.__setitem__([tuple([0,null,1]),tuple([start,end,1])],x);
export var A_init=pd.DataFrame(np.random.binomial(1,.5,tuple([1E3,500])));
py_next(tuesdays_of_february);
var result=[];
interruptable_get(q);
print(nextmatch);
newroot.insert(0,root);
df.diffs[idx]=df.value[idx].diff();
HTMLParser.__init__(self,...args,__kwargtrans__(kwargs));
var writer=csv.writer(f);
tool.stdout.close();
dists.dot([1,1,1,1]);
var ax=plt.subplot(111);
plt.show();
print(resp.read());
var soup=BeautifulSoup(html);
m.load();
plt.show(false);
result.add(tuple(sorted(factors)));
instance.save();
pythons_psutil[0].memory_info();
var mask=np.isnan(arr);
var cur=con.cursor();

new_dict[k]=filmswiththisname;

export var names_and_jobs=function(){var __accu0__=[];for(var id of names)__accu0__.append([id,names[id]+tuple([jobs[id]])]);return dict(__accu0__)}();
tkinter.createfilehandler(file,mask,callback);
np.fromiter(function(){var __accu0__=[];for(var v of data)__accu0__.append(v[0]);return py_iter(__accu0__)}());
funcs[0]();
prev.py_next=tmp.__next__;
print(df1);
plt.hist(numpy.log2(data),__kwargtrans__({log:true,bins:bins}));
time.sleep(60);
os.getcwd();
ax.loglog(x,y);
sys.stderr.write(s);
ax.add_patch(patch);
var content=wiki2plain.text;
print(a.shape,b.shape);
(x<255*p).reshape(shape);
collection.save(res);
var user_pass=dict(cursor);
tmp.write(line);
main();
var __left0__=max(data,__kwargtrans__({key:function __lambda__(item){return item[1]}}));var _=__left0__[0];var max_value=__left0__[1];
reactor.run();
Gtk.main();
ax.set_yticks(k);
i.active();
main();
locals().py_update(main());
var B=function(){var __accu0__=[];for(var [_,b]of sorted(zip(order,sorted(B))))__accu0__.append(b);return __accu0__}();
var client=Client(url);
img_temp.write(urllib.request.urlopen(url).read());
var a=np.arange(27);
self.ax.xaxis.set_minor_locator(day);
self.stop();
ax2.yaxis.tick_right();
export var J1d=I1d.any(__kwargtrans__({axis:-1})).reshape(pairs.shape.__getslice__(0,2,1)).sum(__kwargtrans__({axis:-1}));
B.T.__setitem__([r,c],B.T.__getitem__([c-r,c]));
m.start();
re.findall(pattern,string,__kwargtrans__({flags:0}));
var __left0__=np.meshgrid(x,y);var X=__left0__[0];var Y=__left0__[1];
os.setsid();
df.ix.__setitem__([row,key],val);
tuple([[0,0,1,1,1]]);
link.pack();
(function(){var __accu0__=[];for(var k of dict1[0])__accu0__.append([k,sum(map(itemgetter(k),dict1))]);return dict(__accu0__)})();
new_queue[key]=queue[key];
main();
ax.legend();
bpy.ops.transform.translate(__kwargtrans__({value:tuple([0,0,v.length/2])}));
var parser=argparse.ArgumentParser();
var db=SQLAlchemy();
self.noisycount+=1;
self.quietcount+=1;
content;
text+=elem.strip();

os.chdir(directory);
json.loads(data);
print(m.group(2));
var __left0__=tuple([function(){var __accu0__=[];for(var x of my_list)__accu0__.append(x[0]);return __accu0__}(),function(){var __accu0__=[];for(var x of my_list)__accu0__.append(x[1]);return __accu0__}()]);export var lis1=__left0__[0];export var lis2=__left0__[1];
__init__.py;
any(function(){var __accu0__=[];for(var string of c_lst)for(var keyword of k_out)__accu0__.append(__in__(keyword,string));return py_iter(__accu0__)}());
export var clock=pygame.time.Clock();
export var newtest=function(){var __accu0__=[];for(var x of test)__accu0__.append(x.__getslice__(0,-1,1));return __accu0__}();
df.columns.levels[0];
self.status.configure(__kwargtrans__({text:message}));
self.scrollbar.config(__kwargtrans__({command:self.data.yview}));
all(function(){var __accu0__=[];for(var x of lst)__accu0__.append(x.count(value)==number);return py_iter(__accu0__)}());
net.stop();
self.Bind(wx.EVT_LEFT_UP,self.on_left_up);
dir(__builtins__);
self.suggestions=[];
var opener=urllib.request.build_opener(auth_handler);
out.write(f.read());
self.text=tk.Text(root);
plt.xticks(__kwargtrans__({rotation:90}));
x.normalize().to_eng_string();
list(a);
self.treeview.collapse_row(row.path);
otherfoo.bar();
df.index=[np.arange(len(df.index)),df.index];
var data=[];
ghostscript.Ghostscript(...args);
a+b;
print(py_typeof(b));
X.__setitem__([k,k],exp_diag[k]);
export var num_of_weeks=math.ceil((end_date-start_date_monday).days/7);
self.__dict__.copy();
e.foo();
p.data;
self.cache[key]=self.func(...args,__kwargtrans__(kwargs));
plt.bar(idx,c[0],__kwargtrans__({color:hexencode(c[1])}));
var conn=cx_Oracle.connect(conn_str);
sock.close();
fig.colorbar(im,__kwargtrans__({ax:axes.ravel().tolist(),shrink:.5}));
print(a,b);
PyObject_HEAD_INIT(NULL);
var reader=csv.reader(ifile);
time.sleep(.5*random.random());
var my_copy=function(){var __accu0__=[];for(var [key,value]of list(my_dict.py_items()))__accu0__.append([key,value.__getslice__(0,null,1)]);return dict(__accu0__)}();
var app=QApplication(sys.argv);
print(list(d(myset)));
btn2.pack();
var __left0__=new_values;A[i]=__left0__[0];A[j]=__left0__[1];A[k]=__left0__[2];
emp.save();
get_stuff(d,get_value,get_subitems);
d[0];
l.extend(tuple([21,22]));
np.exp(a*np.log(x)+np.log(b));
d.py_pop();
print(function(){var __accu0__=[];for(var x of thing)__accu0__.append(x);return __accu0__}());
var out=np.hstack([xyzcols,eyecols]);
[1,2];
plt.show();
var stream=cStringIO.StringIO();
print(Counter(data).most_common());
writer.writerows(enumerate(word_features,1));
var y=np.zeros(yshape,data.dtype);

var x=np.linspace(-5,9,1E4);
f2.write(f1.read());
self.root.clipboard_append(self.msg);
abs(a-b)<=chosen_value;
(.25).as_integer_ratio();
var alist=[tuple([1,6]),tuple([2,5]),tuple([2,4]),tuple([7,5])];
self.logger.info(data);
ssl._create_default_https_context=_create_unverified_https_context;
var x=np.linspace(0,1,50);
float_array.tofile(output_file);
sys.modules[__name__]=MyReprModule(sys.modules[__name__]);
val^1;
df.some_property;
colors.extend(mpl.cm.jet(np.linspace(0,1,N-1)));
etree.tostring(root);
var form=EditProfile(__kwargtrans__({obj:user}));
var partition=function __lambda__(p,xs){return tuple([list(filter(p,xs)),function(){var __accu0__=[];for(var z of xs)if(!p(z))__accu0__.append(z);return __accu0__}()])};
var parser=argparse.ArgumentParser();
print(string.format(__kwargtrans__(dictionary)));
tuple([isgenerator(),istraceback(),isframe(),iscode(),isbuiltin()]);
print(get_extension_id(sys.argv[1]));
self.obj[py_name]=value;
_list.extend(list(range(r[0],r[1],r[2])));
func(...args,__kwargtrans__(kwargs));
data.__getslice__(0,i,1);
py_next(function(){var __accu0__=[];for(var obj of objs)if(obj.val==5)__accu0__.append(obj);return py_iter(__accu0__)}());
export var command=os.path.basename(sys.argv[0]);
exec(f.read());
cv2.drawContours(convexI,[ConvexHull],-1,__kwargtrans__({color:255,thickness:-1}));
var out=np.column_stack(tuple([out_id,out_count]));
export var cm=sns.clustermap(data);
[];
output[token.lower()][line[t+1].lower()]+=1;
var rgb=hsv_to_rgb(hsv);
print(match.start(),match.end());
var writer=csv.writer(outfile);
self.doc.build(pdf);
tot.append(get_count(data,binmin,binmax,inclusive));
var A=numpy.array([tuple([a,0,0]),tuple([c,d,0]),tuple([0,0,1])],__kwargtrans__({dtype:np.float64}));
pd.Series(dic);
var cap=cv.CaptureFromCAM(0);
var fig=plt.figure(__kwargtrans__({figsize:tuple([xinch,yinch/.8])}));
plt.boxplot(x+i*2,__kwargtrans__({vert:0}));
1;
setattr(obj,field_name,sub_object);
app.add_url_rule(url,url,redirect_url);
py_keys.py_sort();
fileHandler.setLevel(logging.FATAL);
ent.delete(0,END);
l1.extend(l2);
df;
list(json_object[0].py_items());
var writer=csv.writer(g);
export var quality=models.CharField(__kwargtrans__({max_length:100,choices:CHOICES_QUALITY}));
c[key]=list(set(a[key]).difference(b.py_get(key,[])));
execlist[i][1]=myctype;
time.time.__name__;
var df=pd.DataFrame();
print((df[0]==0).idxmax());
document.openProtection(spm);
self.model=QtGui.QStandardItemModel(self);
tuple([]);
Example().run();
json.dumps(function(){var __accu0__=[];for(var i=0;i<10;i++)__accu0__.append(i*i);return py_iter(__accu0__)}(),__kwargtrans__({iterable_as_array:true}));
dfy.apply(function __lambda__(x){return x.between(df.FIRST.dt.year,df.LAST.dt.year)}).astype(int);
Bar.bar();
print(colorful_json);
all(it1)||!any(it2);
form.instance.author=self.request.user;
var driver=webdriver.Firefox();
data[0](...data.__getslice__(1,null,1));
var L=len(L)==1?list(L[0]):L;
pi.save();
img.paste(source,__kwargtrans__({mask:border}));
var startupinfo=subprocess.STARTUPINFO();
interact(set_cursor,__kwargtrans__({x:ax.get_xlim(),y:ax.get_ylim()}));
export var all_cookies=self.driver.get_cookies();
int(list(filter(str.isdigit,repr(nums))));
soup.body.py_clear();
var i=len(s);
var ax=fig.add_axes([.1,.1,.7,.85]);
var x=x+1;
export var crossproduct=(c.y-a.y)*(b.x-a.x)-(c.x-a.x)*(b.y-a.y);
dialog.setFileMode(QtGui.QFileDialog.ExistingFile);
py_typeof(d);
A.__init__(self,x,y);
var res=func(...args,__kwargtrans__(kwargs));
var z=np.sqrt(Math.pow(x,2)+Math.pow(y,2))+np.sin(Math.pow(x,2)+Math.pow(y,2));
true;
var c=function(){var __accu0__=[];for(var i of b)__accu0__.append(a[i]);return __accu0__}();
root.grab_set();
self.textLayout.addWidget(text);
t.start();
im.draw(__kwargtrans__({x:0,y:0,z:0,width:fig.width,height:fig.height}));
var t=np.linspace(0,4*np.pi,N);
f();
cr.set_operator(cairo.OPERATOR_OVER);
var divisibleBySeven=function(){var __accu0__=[];for(var num of inputList)if(num&&__mod__(num,7))__accu0__.append(num);return __accu0__}();
app.register_blueprint(my_view);
is_equal(df,using_precomputation,using_apply);
print(t.render(c));
writer.writerow(Digi_Results);
[2,499];
np.eye(1,size,index);
var fig=pl.figure();
d[9].append(100);
var browser=mechanize.Browser();
var cap=cv2.VideoCapture(0);
var t=np.hstack(tuple([np.zeros_like(a),np.ones_like(b)]))[s];
var img=Image.open(filename);
export var publication_year=models.IntegerField();
ax.margins(.05);
var fig=pylab.figure();
parts[i]=re.escape(parts[i]);
zip(...args);
a.append(1);
p.close();
var t1=threading.Thread(__kwargtrans__({target:task1}));
var background=pygame.Display.set_mode();
var L=[15,16,57,59,14];
ylim(0,10);
get_monotonic_nums(2,__kwargtrans__({reverse:true}));
0;
settings.init();
self.qa.save();
fileSet.add(os.path.join(root.__getslice__(len(myFolder),null,1),fileName));
d.shape;
self.label.installEventFilter(self);
self.root.mainloop();
t.start();
main();
export var xsorted=np.argsort(x);
self.caddr=caddr;
Person.first_name;
s.value_counts();
fp.close();
out_im.putdata(list(image2cga(inp_im)));
export var missingItems=function(){var __accu0__=[];for(var x of complete_list)if(!__in__(x,L))__accu0__.append(x);return __accu0__}();
pygame.init();
var __left0__=kde.get_xlim();var xmin=__left0__[0];var xmax=__left0__[1];
export var average=float(total)/len(marks);
py_metatype.__init__(cls,py_name,bases,dct);
py_typeof(a);
p.map(f,range(m1.shape[0]));
unique_combs(A,4);
var date=parse_date(date_str);
axes.set_yticks(list(range(10)));
part.get_payload(__kwargtrans__({decode:1}));
ax.set_xlim(__kwargtrans__({xmax:100}));
main();
var g=partial(f,1,2);
isinstance(P,tuple([collections.Sequence,np.ndarray]));
print(i,Counter(clf.predict(X.__getslice__(50,null,1))));
(function(){var __accu0__=[];for(var [k,v]of list(locals().py_items()))if(__in__(k,args))__accu0__.append([k,v]);return dict(__accu0__)})();
os.dup2(test.fileno(),1);
all_pixels.append(cpixel);
pygame.draw.circle(screen,tuple([50,0,0]),p,10,2);
export var busnum=1;
var b=B();
export var query_ob=query_ob.filter(or_(...options));
var d=dict(function(){var __accu0__=[];for(var [[k,j],v]of list(d.py_items()))__accu0__.append(tuple([tuple([k.lower(),j]),v]));return py_iter(__accu0__)}());
var sorted_df=df.T.py_sort(__kwargtrans__({columns:last_row_name})).T;
df;
var files=function(){var __accu0__=[];for(var f of files)__accu0__.append(os.path.join(search_dir,f));return __accu0__}();
b.myfun();
var j=np.random.randint(0,5);
Py_DECREF(array);
redemption_date.month;
myFunction();
im.thumbnail(thumbnail_size,Image.ANTIALIAS);
var m=np.array([7,6,5,4]);
var img=Image.open(filename);
var _=sock.recv_into(mview,AMOUNT);
var sess=tf.Session();
var opener=urllib.request.build_opener(cookie);
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
add_patch(axes[2],__kwargtrans__({rasterized:false}));
print(line);
a2[a2.__getitem__([tuple([0,null,1]),1])>10];
time.sleep(.1);
print(df);

var result=a[indices];
QtGui.QSystemTrayIcon.__init__(self,icon,parent);
var seconds=__mod__(seconds,60);
var fig=plt.figure();
var df=pd.DataFrame(testdict);
var d1=dict(list(d.py_items()).__getslice__(len(d)/2,null,1));
1/np.linalg.det(a);
client.sd[0].service.setlocation(new_url);
var fig=plt.figure();
handle.set_visible(false);
G[1][2];
log.setLevel(logging.DEBUG);
print(docopt(__doc__));
var py_values=np.random.rand(1E4);
export var style=ttk.Style();
print(count);
print(m.group());
var grid=dask.array.zeros(tuple([100,100]),__kwargtrans__({chunks:tuple([50,50])}));
export var arg=booleanize(arg);
(function(){var __accu0__=[];for(var x of user_list)__accu0__.append(x);return __accu0__})();
map(sum,l)==[n]*len(l);
wdb.set_trace();
var a=pickle.loads(s);
var df=df.reset_index();
PLT.show();
column_view.set_widget(column_widget);
random.shuffle(lists);
var obj=model_class.objects.py_get(__kwargtrans__({product:model.product,comment:model.comment}));
(function(){var __accu0__=[];for(var i of h)__accu0__.append(str(chr(i)));return __accu0__})();
obj.__reduce__();
entry2.grid(__kwargtrans__({row:1,column:2}));
var x=np.array([[1,0],[0,1]]);
py_next(itertools.islice(self.it,index,index+1));
print(datetime.now()-startTime);
export var full_arr=full_arr[full_arr.__getitem__([tuple([0,null,1]),idx]).argsort()];
tuple([id(ax),id(fig.axes[0])]);
var c=list(zip(a,b));
button.pack();
var parser=argparse.ArgumentParser();
var title=models.CharField(__kwargtrans__({max_length:256}));
NotImplemented;
self.orig_method(...args,__kwargtrans__(kwargs));
fig.savefig(buf);
var sorter=np.argsort(b);
export var config_path=os.path.join(application_path,config_name);
df.iloc[0];
var average=session.query(func.avg(sums.subquery().columns.a1)).scalar();
var driver=webdriver.PhantomJS();
[6,15,24];
var my_array=numpy.empty(length);
print(datetime.datetime(1970,1,1)+datetime.timedelta(__kwargtrans__({seconds:tt})));
var ax=fig.add_subplot(111);
parser.print_help();
list(zip(word_list,itemgetter(...word_list)(cnts)));

tuple([a,__in__(b,x)]);
var t=np.linspace(0,1,n);
var parser=argparse.ArgumentParser();
print(lines[i+7]);
print(a,b,c);
export var second_driver=webdriver.Firefox();
false;
var clf=linear_model.LogisticRegression();
var p=argparse.ArgumentParser();
chunkfile.close();
var cursor=cnxn.cursor();
f1();
var f=np.vectorize(f);
var rows=cur.fetchall();
var py_name=models.CharField(__kwargtrans__({max_length:50}));
Py_XDECREF(cls);
var q=session.query(Post).join(s,Post.id==s.c.key).order_by(s.c.sort_order);
player.play();
var wordslist=line.py_split();
export var my_series=pd.Series(my_dict);
nonRepetitive_x.append(x[-1]+1);
self.pigButton.grid(__kwargtrans__({row:0,column:1}));
(function(){var __accu0__=[];for(var [key,data]of groups)__accu0__.append(function(){var __accu1__=[];for(var item of data)__accu1__.append(item[0]);return __accu1__}());return __accu0__})();
self.response.out.write(data);
client.close();
dict_writer.writerow(dict(zip(fieldnames,fieldnames)));
print(parts[1]);
var __left0__=tuple([indices[0]-1,indices[-1]+1]);export var prev_i=__left0__[0];export var next_i=__left0__[1];
export var newR=np.percentile(S,(100*u).tolist());
fn(self,...args,__kwargtrans__(dict(self.gen_args,__kwargtrans__(kwargs))));
print(line);
df2.combine_first(df1);
var data=fp.read();
var parser=argparse.ArgumentParser();
print(a.shape);
tuple([a,b,c]);
s.close();
server.ehlo();
my_c_func(py_object(my_list));
ax4.set_xlim(x1[0],x1[-1]);
Tk.__init__(self);
L.py_sort(__kwargtrans__({key:f}));
var app=QApplication(sys.argv);
h.request(req.get_method(),req.get_selector(),req.data,headers);
random.shuffle(a_list);
tuple(z);
export var data_mem=data.__getslice__(0,null,1);
all_data.dtype.names;
ax.yaxis.set_visible(false);
var max_val=max(l);
p.start();
br.set_handle_equiv(true);
export var choles=np.logical_not(noholes);
export var subset2=data[data.__getitem__([tuple([0,null,1]),0])==10002];
var fig=plt.figure();
help(gdal.ReprojectImage);
event.SetInt(0);
(function(){var __accu0__=[];for(var d of rrule(MONTHLY,__kwargtrans__({dtstart:start,until:end})))__accu0__.append(tuple([d.month,d.year]));return py_iter(__accu0__)})();
sys.path.insert(0,mypath);
logger.setLevel(logging.DEBUG);
myList.append(1);
print(df);
print(b.calculate(1));
plt.subplot(122);
var X=numpy.random.random(tuple([N,n]));
json.dumps(xmljson.badgerfish.data(xml));
task2.start();
task1.start();
+bcolors.ENDC;
self.photo=Image.open(file);
cache.init_app(app);
var reader=csv.reader(f);
export var divider=make_axes_locatable(ax1);
os.rename(tmppath,filepath);
merge_dicts(d1,d2);
var im=img.__getitem__([tuple([0,null,1]),tuple([0,50,1]),0]);
s.unstack();
self.im.seek(0);
var n=int(x);
var gx=np.array([[1,0,-1],[2,0,-2],[1,0,-1]]);
urlparse.parse_qs(o.query);
var reader=list(csv.reader(f));
(function __lambda__(realf){return f(realf,...args,__kwargtrans__(kwargs))});
export var new_matrix=a/row_sums.__getitem__([tuple([0,null,1]),numpy.newaxis]);
var objects=UserManager();
self.children.append(node);
var p=argparse.ArgumentParser();
self.Bind(wx.EVT_LEAVE_WINDOW,self.on_leave_window);
group.append([year,0]);
self.recipe.py_name;
var ax2=fig.add_subplot(2,1,2);
Gtk.CellRenderer.__init__(self);
main();
foo();

thread1.start();
doi_file.close();
f();
func(self,...args,__kwargtrans__(kwargs));
(function(){var __accu0__=[];for(var [k,g]of groupby(a))if(len(list(islice(g,0,2)))==2)__accu0__.append(k);return __accu0__})();
cv.py_update();
2142;
func2b();
var x=r*np.cos(t);
var dx=1;
print(v.key,v.py_values[0].value);
print(elem.text);
y.py_sort();
np.hstack(tuple([vector1,matrix2]));
plt.xlabel(ax.get_xlabel(),__kwargtrans__({rotation:90}));
var c=np.linalg.solve(a,b);
alist2.append(alist[x].__getslice__(0,null,1));
var item=item.strip();
br.open(url);
var end_date=start_date+timedelta(__kwargtrans__({days:1}));
run(__kwargtrans__({host:aserver,port:aport,debug:true}));
var p=subprocess.Popen(cmd,__kwargtrans__({stdout:subprocess.PIPE}));
print(B[np.searchsorted(B.__getitem__([tuple([0,null,1]),0]),I)]);
sys.getsizeof(test_dict);
pprint(d);
sys.exit(app.exec_());
__all__[c]=Variable(c);
var app=QApplication(sys.argv);
result.append(tree.py_pop());
df.loc[~(__mod__(lengths,2)==1&grouped.cumcount()==lengths-1)];
var draw=ImageDraw.Draw(image);
df.loc.__setitem__([criteria,ser.index],ser.__getitem__([np.newaxis,tuple([0,null,1])]));
print(cross_val_score(clf,X,y,__kwargtrans__({cv:skf})));
traceback.print_tb(err.__traceback__);
var fig=matplotlib.pyplot.figure();
var mask=np.random.randint(2,__kwargtrans__({size:tuple([500,500])}));
i.append(0);
print(x);
plt.show();

plt.ioff();
myA.myattribute=9;
(c==loop(x)).all();
new set([new set([form.as_p])]);
var leg=ax.legend();
print(function(){var __accu0__=[];for(var k of ordering)__accu0__.append(tuple([k,mydict[k]]));return __accu0__}());
var fig=plt.figure();
var driver=webdriver.Firefox();
NULL;
pool.close();
var s=pygame.Surface(tuple([1E3,750]),pygame.SRCALPHA);
tuple(np.hstack(np.where(a==a.max())));
cursor.execute(query,tuple([AsIs(c)]));
order_array.shape;
set(permutations(x*2));
var arr=list(arr);
print(list(func()));
print(test[selected(test.__getitem__([tuple([0,null,1]),1]))]);
f.close();
var a=A();
print(max(function(){var __accu0__=[];for(var node of path.nodes)__accu0__.append(node.y);return py_iter(__accu0__)}()));
var a=np.linspace(-2,2,5);
love_ctx.add(tuple([charlie,loves,bob]));
wrapped_func(...args,__kwargtrans__(kwargs));
df2.index=df2.index.map(function __lambda__(x){return difflib.get_close_matches(x,df1.index)[0]});
var ssh=paramiko.SSHClient();
sys.exit(1);
var s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);
export var similarity=sum(Math.pow(laplacian1.__getslice__(0,k,1)-laplacian2.__getslice__(0,k,1),2));
result[cols]=result[cols].div(result[cols].sum(__kwargtrans__({axis:1})),__kwargtrans__({axis:0}));
ax.relim();
(function(){var __accu0__=[];for(var [key,value]of list(d.py_items()))__accu0__.append([key,foo(value)]);return dict(__accu0__)})();
self.frame.pack();
self.SetAcceleratorTable(tbl);
random.sample(bigset,1)[0];
var chunk=function(){var __accu0__=[];for(var i=0;i<lines_required;i++)__accu0__.append(py_next(gen));return __accu0__}();
var u=function(){var __accu0__=[];for(var [x,y]of valCount(lst).py_items())if(y>1)__accu0__.append(x);return __accu0__}();
var dict=dict([[x,2*a+1],[Math.pow(x,2),1]]);
solve(set(range(Math.pow(2,N))),set());
var im=Image.fromarray(img);
axes[0].title.set_size(40);
self.stream.close();
pprint.pprint(parse_message_to_tree(s));
self.addHandler(console);
export var idf=np.log(float(n_samples)/df)+1;
np.set_printoptions(__kwargtrans__({suppress:true}));
funcs.append(function __lambda__(i){return function __lambda__(x){return f(i,x)}}(i));
f.seek(-4,2);
var im=Image.open(im);
sorted(data,__kwargtrans__({cmp:cmpnan}));
pylab.show();
self.inner_test=inner_test;
self.observer.start();
appengine.monkeypatch();
boom(x,y);
foo();
image.seek(0);
export var current_process=psutil.Process();
int(v);
export var nnz=indptr[-1];
df1.join(df2);
deletesys.modules[key];
var z=np.polyfit(x,y,1);
print(max(abs(clf.coef_-w)));
var fig=plt.figure();
gif.seek(1);
export var my_bytes=bytearray(data);
self.cformat=cformat;
var index=bisect.bisect(a,value);
var ssh=paramiko.SSHClient();
f.close();
run_func();
var line=doSomething(line,py_next(infile));
(function(){var __accu0__=[];for(var word of words_seq)if(pat.match(word))__accu0__.append(word);return __accu0__})();
a.__getslice__(0,null,2);
var G=nx.Graph();
var lastHourDateTime=datetime.datetime.now()-datetime.timedelta(__kwargtrans__({hours:1}));
var data=cursor.fetchone();
self.py_name=py_name;
len(s);
Base.metadata.drop_all(__kwargtrans__({bind:db.engine}));
filtered_word_list.remove(word);
ax.plot(grouped.get_group(key));
var a=numpy.empty(tuple([1,10]),__kwargtrans__({dtype:object}));
print(data[1]);
PREDICT(FOR_ITER);
export var deltaX=P2_x-P1_x;
time.sleep((.1+random.random()/10)/float(speed));
var Z=np.exp(-(Math.pow(X,2)+Math.pow(Y,2)));
QNetworkAccessManager.__init__(self);
var c=np.core.defchararray.equal(a,b);
log.addHandler(JournalHandler());
var all_data=pd.concat(dfs,__kwargtrans__({ignore_index:true}));
SOAPpy.__path__;
var __left0__=tuple([t.ix[2],t.ix[1]]);t.ix[1]=__left0__[0];t.ix[2]=__left0__[1];
cv.SetData(cv_img,img.rotate(180).tostring().__getslice__(0,null,-1));
var x_sorted=function(){var __accu0__=[];for(var [y,x]of yx)__accu0__.append(x);return __accu0__}();
listbox.autowidth(250);
var dx=[size1,-size1,-size1,size1,size1];
pool.join();
var cb=plt.colorbar(im);
wx.Frame.__init__(self,parent,id,title,__kwargtrans__({size:wx.DisplaySize()}));
pd.rolling_std(s,__kwargtrans__({window:5})).head(10);
browser.open(url);
yticks(linspace(ylim()[0],ylim()[1],numSteps));
user.save();
var root=tree.getroot();
zip(...l);
var opener=urllib.request.build_opener(urllib.request.HTTPHandler(),cp);
plt.close();
true;
self._reader1=reader1;
response.status=falcon.HTTP_200;
a*c+b*~c;
d[i].extend(j);
df2.Date=pd.to_datetime(df2.Date);
pprint.pprint(ll);
var counter=collections.Counter(a);
isitIn(char,aStr.__getslice__(Math.floor(len(aStr)/2),null,1));
dict.__setitem__(self,key,value);
var model=Whatever;
false;
ax.set_ylim(0,5);
ax.xaxis.set_minor_formatter(plt.FuncFormatter(show_only_some));
closedir(dir_p);
Frame.__init__(self);
var msg=MIMEMultipart();
print(s1.__getslice__(s1.index(s2)+len(s2),null,1));
print(line);
do_something_with(node.value);
var df=pd.DataFrame(np.random.randn(100,2));
self.before.append(descendent);
Frame.__init__(self,master);
print(groups.aggregate(function __lambda__(x){return np.mean(x[x>.5])}));
os._exit(0);
admin.site.register(SomeModel,SomeModelAdmin);
outdict[tmp[0]].append(tuple([tmp[1],float(tmp[2])]));
dt.datetime.fromtimestamp(timestamp);
py_next(b);
export var central=utc.astimezone(to_zone);
Base.prepare();
log();
a.append(d);
var d=dict(function(){var __accu0__=[];for(var [i,a,b,c]of zip(df.ID,df.A,df.B,df.C))__accu0__.append(tuple([i,[a,b,c]]));return __accu0__}());
repo.index.add(file_list);
gc.collect();
root.py_update();
difflib.SequenceMatcher(__kwargtrans__({a:c,b:d})).ratio();
var length=a.shape[0];
var n=len(s);
[0,0]/np.float64(0);
sorted(personArray,__kwargtrans__({key:function __lambda__(a){return a.age}}));
datenow-=timedelta(__kwargtrans__({days:datenow.isoweekday()-5}));
has_permission(permission,resource,request);
self.serial=serial.Serial(self.inport);
sys.exit(0);
Thread.currentThread().interrupt();
var df=pd.DataFrame(__kwargtrans__({columns:list(range(8))}));
(function(){var __accu0__=[];for(var [k,g]of evens_odds_grouped)__accu0__.append(tuple([k,list(g)]));return __accu0__})();
job.start();
export var csv_content=requests.py_get(DOC_URL).text;
np.eye(2,__kwargtrans__({dtype:int}));
out.reshape(len(arrays),-1);
print(f.read());
export var Zij=np.arange(N);
fout.write(lines);
g.py_get().read();
row_dict[col]=row[columns.index(col)];
client_sock.send(response_body_raw);
p.close();
lpr.stdin.write(data_to_send_to_printer);
export var common_chars=char_list.intersection(test_set);
json.loads(json_data,__kwargtrans__({object_hook:ascii_encode_dict}));
p12.get_certificate();
var top5=array.__getslice__(0,5,1);
self.__dict__==other.__dict__;
[LOGGING];
logger.addHandler(sh);
print(match.group(1));
var reader=csv.reader(f);
self.session.add(entity);
print(team([1,1,1,1,1,1,1,1,1,9]));
export var signers=p7.get0_signers(sk);
setups.append(comb);
objectify.deannotate(root,__kwargtrans__({cleanup_namespaces:true,xsi_nil:true}));
f.read(1854);
export var a_sum=a.sum(__kwargtrans__({axis:0}));
ax2.contour(theta_edges,r_edges,H);
process.start();
export var ax22=fig1.add_subplot(212);
var d=collections.defaultdict(list);
var dt=datetime.datetime.fromtimestamp(secs);
var soup=BeautifulSoup(html_doc);
result.write(line);
label1.pack();
my_new_list.close();
self.ax.xaxis.set_major_formatter(timeFmt);
view.overwrite_status();
print(max(function(){var __accu0__=[];for(var p of lst1)if(p<0)__accu0__.append(p);return py_iter(__accu0__)}()));
circle1.remove();
var res=[];
zip_file.close();
baz();
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
axs[i].contourf(np.random.rand(10,10),5,__kwargtrans__({cmap:plt.cm.Oranges}));
humansize(18754875155724);
export var descendents_ancestors=set();
var offset=datetime.timedelta(__kwargtrans__({days:0}));
window.configure(__kwargtrans__({stack_mode:X.Above}));
var py_values=np.sum(weights*features)+bias*weights.size;
export var Z2=np.array(function(){var __accu0__=[];for(var k=0;k<10;k++)__accu0__.append(np.dot(X[k],Y[k]));return __accu0__}());
export var duplicate_dict=dict(function(){var __accu0__=[];for(var [v,ks]of by_val)for(var k of ks.__getslice__(1,null,1))__accu0__.append(tuple([k,v]));return py_iter(__accu0__)}());
var indata=ctypes.POINTER(ctypes.c_double)*5();
print(sys.argv[2]);
filter.uniform_filter(a,__kwargtrans__({size:5}));
var g=rdflib.Graph();
print(df);
dreload(module);
export var indicies=random.sample(range(len(data)),k);
dict.__init__(self);
var M=np.random.rand(N*10*10).reshape(N,10,10);
show();
prof.dump_stats(datafn);
setpath(d[p[0]],p.__getslice__(1,null,1),k);
display.start();
redis.set(key,pickle.dumps(value));
print(_get_column_letter(1));
i+=1;
arr[x]=x*np.ones(M);
var df=pd.DataFrame(data);


nextprime(n);
django.db.transaction.commit();
PyErr_Print();
arr[i]=-arr[i];
cPickle.dump(root.sclX.config(),f,-1);
var response=urllib.request.urlopen(request);
session.run(trainer,new set([feed_dict]));
self.left[-(i+1)];
p.join();
(function(){var __accu0__=[];for(var [x,_]of sorted(enumerate(a),__kwargtrans__({key:function __lambda__(i){return i[1]}})))__accu0__.append(x);return __accu0__})();
df;
text.get_window_extent().width;
response.render();
linecache.clearcache();
os.dup2(self.streamfd,self.origstreamfd);
print(list1.__getslice__(0,5,1));
var L=L.__getslice__(n,null,1)+L.__getslice__(0,n,1);
fp.close();
Fraction(58,int(X));
export var Jmask=mask.sum(__kwargtrans__({axis:-1}));
var df=df.reset_index();
hex(_);
np.rollaxis(a,-1,2).reshape(a.shape[0],a.shape[1],-1);
var G=nx.Graph();
ax.grid(true);
self.reset();
generate_random_data();
export var dynos=int(sys.argv[1]);
a_shared_task(self,...args,__kwargtrans__(kwargs));
f();
im.show();
var ax1=ax0.twinx();
export var fit_result=scipy.stats.expon.fit(data,__kwargtrans__({floc:0}));
var end_date=date(2015,6,2);
file.seek(os.stat(filepath).st_size-1);
self.lst=[];
print(count);
export var std_1=numpy.std(list_size_1,__kwargtrans__({axis:1}));
var a=numpy.arange(25).reshape(tuple([5,5]));
var pool=ProcessPoolExecutor(__kwargtrans__({max_workers:1}));
export var cal=Calendar.objects.py_get(__kwargtrans__({pk:1}));
var res=s.translate(remove_digits);
setattr(K,py_name,eval(py_name));
Foo().bar.__get__;
self.lock.release();
pylab.yticks(list(range(len(names))),names);
a.__getitem__([,[true,true]]);
plt.show();
b.py_update(function(){var __accu0__=[];for(var key of set(a.py_keys())-set(b.py_keys()))__accu0__.append([key,a[key]]);return dict(__accu0__)}());
print(py_typeof(folder));
tuple([[0,0,0,1,0]]);
var obj=MyModel.objects.py_get(__kwargtrans__({pk:id}));
ax.set_title(str(d));
var app=QtGui.QApplication(sys.argv);
var start_time=time.time();
var arr=np.array(function(){var __accu0__=[];for(var line of f)__accu0__.append(list(map(int,line.strip())));return __accu0__}());

export var root_path=get_root_path();
export var farmer=models.ForeignKey(Person);
var weights=np.ones_like(x)*mass;
var client=paramiko.SSHClient();
server_ssl.sendmail(FROM,TO,message);
inner1d(A,B);
d1.py_split()[0];
col.set_expand(true);
sorted(result.py_items());
var total=sum(get_numbers(input_string));
var data=[2,2,2,2,2];
topsublist[i]=list(L);
dct[p[0]].append(p[1]);
dis.dis(test2);
py_typeof(logging.INFO);
plt.show();
export var u2=function(){var __accu0__=[];for(var _=0;_<len(part);_++)__accu0__.append(random.uniform(0,phi2));return py_iter(__accu0__)}();
var client=mqtt.Client();

var py_keys=list(Digit.py_keys());
self.setLayout(layout);
plt.figure();
var C=np.where(cond,A,B);
var combined=defaultdict(function __lambda__(){return defaultdict(function __lambda__(){return defaultdict(int)})});
var image=np.zeros(tuple([height,width,4]),__kwargtrans__({dtype:np.uint8}));
export var output_string=json.dumps(o);
server_sock.close();
var fd=sys.stdout.fileno();
all_ids.py_sort();
output.write(line);
file.truncate();
f.write(s);
f.close();
self[key];
var x=np.linspace(start,end,N).__getitem__([tuple([0,null,1]),np.newaxis]);
int(round(scipy.optimize.fmin(f,100,__kwargtrans__({args:tuple([4,100]),xtol:.5,ftol:.5}))[0]));
django.VERSION;
strc_view.__setitem__([0,[0,1]],x);
var sess=tf.Session();
var results=pool.map(convert,images.__getslice__(i,i+chunk_size,1));
var index=random.randint(0,len(a)-1);
export var X_train_0=X_train[y_train==0];
list(d.py_values());
scipy.version.version;
(function(){var __accu0__=[];for(var [k,v]of list(a.py_items())+list(b.py_items()))if(__in__(k,symm_diff))__accu0__.append([k,v]);return dict(__accu0__)})();
Session.add(user);
main();
self.lbl.pack();
map(function __lambda__(x){return __mod__(x,2)==0},l);
G.add_weighted_edges_from(cur);
var d=np.arange(1,21,__kwargtrans__({dtype:np.float}));
list(map(d.py_update,extras));
im.set_data(py_next(rw));
var coords=np.stack(np.meshgrid(x,y),__kwargtrans__({axis:-1}));
var startupinfo=subprocess.STARTUPINFO();
self.py_items.append(item);
export var test_data=data.__getslice__(50,null,1);
var c=function(){var __accu0__=[];for(var x=0;x<len(b);x++)__accu0__.append(a[x]+[b[x]]);return __accu0__}();
check(sys.stdin);
ax.set_xticks(x_ticks.__getslice__(0,null,2));
tuple([[0,0,0,0,11,12,0,0]]);
var lineno=i+1;
export var lons=np.array([5.5,102.5,116.2,5.5,102.5,116.2,5.5,102.5,116.2]);
self.server_close();
flush();
int(max(solve(a*Math.pow(x,2)+b*x+c,x)));
-.5*(x-mean).dot(inv(C)).dot(x-mean);
self.irenR.Render();
var app=QtGui.QApplication(sys.argv);
np.array([a.tolist(),b.tolist()]);
image.set_data(self.image_data);
var args=parser.parse_args();
ax2.plot(xvals,yvals,__kwargtrans__({linewidth:4}));
var EMAIL_USE_TLS=true;
ax.plot(x1,np.sin(x1/2));
cumsum([.2,.2,.2,.2,.2]);
print(b(a,10));
processBody(line);
foo.stop();
var path=db.Key(opaque_id).to_path();
newlist.extend(l);
all_potions[self.py_name]=self;
map(id,b);
pdb.set_trace();
var __left0__=rgb_to_hsv(r,g,b);var h=__left0__[0];var s=__left0__[1];var v=__left0__[2];
flask_login.login_user(user);
ref_to_func();
do_something_else(object_list[0]);
sorted(py_items,__kwargtrans__({key:key()}));
export var number_of_lines=len(f.readlines());
self.clear_widgets();
export var dfa=df.ix.__getitem__([tuple([0,null,1]),[1,0]]);
y[0][1]=4;
time.sleep(2);
offs-=1;
var myset=set();
df;
var results=defaultdict(list);
b.append(foo());
export var LoPRIOpoller=zmq.Poller();
flipped[value].append(key);
export var relaxng_doc=etree.parse(f);
var serializer=TaskSerializer(tasks,__kwargtrans__({many:true}));
dt.datetime(1970,1,1)+dt.timedelta(__kwargtrans__({seconds:int(timestamp)}));
random.random()<p;
hug(a);
cgitb.enable();
parking_rows.append(ParkingLotRow(tuple([1,222]),tuple([462,240]),22));
ax.add_artist(pol2);
var lst=[10,10,20,15,10,20];
app.run();
var client=pymongo.MongoClient();
f.close();
ch.start();
var fig=plt.figure();
parsed_url.geturl();
tuple([a,b,c]);
export var src=Image.open(src);
Counter(string1)==Counter(string2);
t.join();
var application=QtGui.QApplication(sys.argv);
self.runButton.clicked.connect(self.callProgram);
var x=np.linspace(0,1,1E3);
parser.parse_args(extra_args,namespace);
var __left0__=np.meshgrid(x,x);var X=__left0__[0];var Y=__left0__[1];
self.groups.py_clear();
export var replacements=[0,0,0,0];
export var relaxng=etree.RelaxNG(relaxng_doc);
var process=subprocess.Popen(cmd,__kwargtrans__({shell:true}));
sympy.solve(exp);
os.chdir(dir_of_your_choice);
re.findall(re2,text);
var x=np.asarray(x);
idcord.append(x1);
s.listen(0);
client.service.SomeMethod();
child.sendline(mypassword);
print(p.sub(repl,s));
print(len(argspec.args));
var ndates=function(){var __accu0__=[];for(var date of dates)__accu0__.append(regx.py_split(date.strip()));return py_iter(__accu0__)}();
defaultdict(function __lambda__(){return 1});
gencache.Rebuild();
var frame=cv.QueryFrame(capture);
var root=tk.Tk();
(function(){var __accu0__=[];for(var n of dir(f))if(isinstance(getattr(f.__class__,n),property))__accu0__.append(n);return __accu0__})();
data[my_list].mean(__kwargtrans__({axis:1}));
var cell=xl.ActiveSheet.Cells(1,2).Text;
snake.py_update();
l.append(num);
d.py_setdefault(parts[0],[]).append(parts[1]);
metafunc.addcall();
var app=Flask(__name__);
export var a_f=os.path.abspath("./P2JSnippets.py");
export var ynoisy=y+np.random.normal(0,.2,__kwargtrans__({size:len(x)}));

a.writerows(data);
html+=str(tag);
jsonpickle.decode(jsonpickle.encode(Goal(),__kwargtrans__({unpicklable:false})));
numpy.arange(25).reshape(tuple([5,5]));
root.mainloop();
var args=parser.parse_args();
export var bus=ibus.Bus();
var link=soup.find_all(__kwargtrans__(kwargs))[0];
var __left0__=plt.subplots(__kwargtrans__({ncols:2,sharey:true}));var fig=__left0__[0];var ax1=__left0__[1][0];var ax2=__left0__[1][1];
__all__.append(module_name);
source/opt/python/current/env;
plt.show();
itertools.combinations_with_replacement(list(range(min,max)),num);
model.fit(X,y,__kwargtrans__({nb_epoch:1,batch_size:data.batch_size,verbose:0}));
var solution=driver.find_element_by_css_selector(css);
print(line);
answer.append([new_list[0][0],new_list[1][0]]);
QtGui.QWidget.__init__(self,parent);
narray[i]=NULL;
np.array([tuple(py_values)],dtype);
new set([dict([[blog_date|timesince,comment_date]])]);
a.py_sort(__kwargtrans__({key:id,reverse:true}));
bundle.obj=self._meta.object_class();
foo.bars.add(1,2);
mux_fn(a,b);
py_typeof(value);
var df=pd.read_csv(StringIO(text),__kwargtrans__({delim_whitespace:true,dtype:str}));
main();
reactor.stop();
decorator(arg);
app.mainloop();
var matrix=[];
var A=np.array([0,1,2]);
OrderedDumper.add_representer(OrderedDict,_dict_representer);
the_canvas.save();
var sig1=sin(t1/2)+np.random.normal(__kwargtrans__({scale:.1,size:len(t1)}));
var end_date=time.strptime(end_date,fmt);
print(nuc.__getslice__(frame,null,1).translate(table));
self.mock_requests=Mock();
row.append(a[i][j]+b[i][j]);
print(df[col_list.__getslice__(2,5,1)]);
var b=np.array(zip(a.T,a.T));
var soup=BeautifulSoup(new_text);
CornerHarris(gray,harris,5,5,.1);
readline.set_completer(tab_completer);
Qapp.exec_();
print(__mod__(s,tuple(x)));
unpackbits(arange(2,__kwargtrans__({dtype:uint16})).view(uint8));
var d=function(){var __accu0__=[];for(var x of a)__accu0__.append([x,a.count(x)]);return dict(__accu0__)}();
fig.subplots_adjust(__kwargtrans__({hspace:.75}));
setup();
ascii_lowercase.find(letters)!=-1;
l.__setslice__(0,null,null,first_found(l));
ax.gridlines();
export var functor=arity.__class__;
foo.__getitem__(something);
background.paste(overlay,overlay.size,overlay);
self.a+self.b;
var res=function(){var __accu0__=[];for(var k of list(arr))__accu0__.append(lookupdict[k]);return __accu0__}();
print(str(100).zfill(2));
f.write(text);
some_long_task.delay(x,y);
var myDict=defaultdict(int);
Foo().bar;
norm.ppf(.95);
pprint(function(){var __accu0__=[];for(var [k,g]of groupby(strs))__accu0__.append(tuple([k,list(g)]));return __accu0__}());
plt.show();
Maybe(func(self.val));
export var lastvals=y[-1]+np.abs(y.__getslice__(-half_window-1,-1,1).__getslice__(0,null,-1)-y[-1]);
var a=np.random.rand(4,4);
particle.kill();
ax.zaxis.set_rotate_label(false);
result_dict[str(len(word))].add(word);
var r=Image.fromarray(numpy.uint8(r_array*255.999));
same_structure(a.__getslice__(1,null,1),b.__getslice__(1,null,1));
Watchdog(1);
var user=User();
var __except0__=NotImplementedError;__except0__.__cause__=null;throw __except0__;
d.py_setdefault(i,[]);
export var nmask=function(){var __accu0__=[];for(var c of mask)__accu0__.append(ord(c));return __accu0__}();
ax.grid();
var application=get_wsgi_application();
export var cts=datetime.fromtimestamp(ts);
var curr_points=function(){var __accu0__=[];for(var [x,y]of zip(first_points,second_points))__accu0__.append(tuple([x,y]));return __accu0__}();
main();
(function(){var __accu0__=[];for(var y of x)__accu0__.append(!y);return __accu0__})();
time.sleep(sleep_time);
export var key1=models.IntegerField(__kwargtrans__({primary_key:true}));
export var ended=time.time();
var a=np.array([0,47,48,49,50,97,98,99]);
A.print_x.__func__(b);
rand_x_digit_num(10,false);
f.seek(0);
.1*randint(int(min_time*10),int(m_time*10));
logging.Handler.close(self);
print(longest_sum([1,1,1,1,1,1,4],0,0,6));
print(calculateDistance(2,4,6,8));
df.reindex(df.b.abs().py_sort(__kwargtrans__({inplace:false})).index);
(function(){var __accu0__=[];for(var _=0;_<1;_++)__accu0__.append([b.py_pop(0),b.py_pop(0)]);return __accu0__})();
(1+erf(x/sqrt(2)))/2;
var im=scipy.misc.imread(filename);
var z=np.arange(-5,5,.2);
masked_diff.argmin();
myA[(myA>5).nonzero()[0].__getslice__(0,2,1)]=0;
self.clientSocket.send(data);
[tuple([1,2]),tuple([2,0])];
remove_odd([4,5,4,7,9,11]);
fd.write(request.content.read());
self.next_chunk=self.next_chunk.__getslice__(n,null,1);
Py_Finalize();
browser.open(login_url);
evt.Skip();
var ssh=paramiko.SSHClient();
contribution.filter();
handle_last_line(remaining);
zip(x,y);
p.start();
hscrollbar.config(__kwargtrans__({command:canvas.xview}));
np.random.seed(100);
var ret=f(...args,__kwargtrans__(kwargs));
print(label.get_text());
var result=[];
session.flush();
df.apply(function __lambda__(x){return d[x.py_name].transform(x)});
foo(bar);
time.sleep(sleeping_time);
Question.objects.filter(__kwargtrans__({test_id:fr})).py_update(__kwargtrans__({test:test_obj}));
t.py_sort();
mlab.figure(__kwargtrans__({size:tuple([1024,768]),bgcolor:tuple([1,1,1]),fgcolor:tuple([.5,.5,.5])}));
print(res.getheaders());
second.nonzero();
newlist.append([a,numlist[key]]);
pygame.quit();
offset+=len(line);
np.amax(a[mask]);
var msg=queue.py_get();
print(entry.title);
testclassa().testmethod1();
var foo=function __lambda__(x,y){if(typeof y=="undefined"||y!=null&&y.hasOwnProperty("__kwargtrans__"))var y=2;return x+y};
sys.exit();
sock.connect(tuple([self.host,self.port]));
export var bar2=Bar.objects.py_get(__kwargtrans__({pk:2}));
var options=webdriver.ChromeOptions();
export var identifier=CharField(__kwargtrans__({primary_key:true}));
fcntl.fcntl(w,fcntl.F_SETFL,old_flags|os.O_NONBLOCK);
item1.setBackground(QtGui.QColor(255,128,128));
var a=MyModel.objects.py_get(__kwargtrans__({id:1}));
var thread=threading.Thread(__kwargtrans__({target:target}));
var file=forms.FileField();
var v=-np.cos(np.pi*x)*np.sin(np.pi*y)*np.cos(np.pi*z);
var start=time.time();
export var read=f.read();
primepi(n);
var timestamp=time.mktime(ntuple);

var t=Thread(__kwargtrans__({target:print_updates,args:tuple([q])}));
export var MAIL_USE_TLS=false;
self.panel_sizer=wx.BoxSizer(wx.HORIZONTAL);
var json_string=json.dumps(data,__kwargtrans__({ensure_ascii:false}));
plt.imshow(np.random.random(tuple([10,10])));
t.start();
plt.figure(__kwargtrans__({figsize:tuple([6,5])}));
np.testing.assert_almost_equal([x,x,x],[y,y,y],5);
p.remove(c);
emitted.append(py_name);
pygame.init();
export var AFMT_S16_NE=ossaudiodev.AFMT_S16_BE;
var sizer=wx.BoxSizer(wx.VERTICAL);
plt.show();
var now=dt.datetime.now(timezone);
var root=dict();
(function(){var __accu0__=[];for(var [idx,el]of enumerate(foo))if(py_typeof(el)==py_typeof(arr))__accu0__.append(idx);return __accu0__})();
export var p4=ctypes.c_int(0);
max(map(int,MyCount));
words.append(ipta);
var client=oauth2.Client(consumer);
self._server.running=true;
export var constant_dic=dict(function(){var __accu0__=[];for(var [i,c]of enumerate(constants))__accu0__.append(tuple([c,i]));return __accu0__}());
a.__setitem__([tuple([0,null,1]),1],a.__getitem__([tuple([0,null,1]),1])*5.2);
utf8_fh.readlines();
my_answer.append(my_array[i]);
Counter(get_all_k_mer(s,__kwargtrans__({k:2})));
var output=PdfFileWriter();
MainWin().main();
sqlContext.createDataFrame(rdd,schema);
var __except0__=OSError(e);__except0__.__cause__=null;throw __except0__;
t.start();
NP.cumsum(A.__getitem__([tuple([0,null,1]),1]));
p.start();
var ts=(utc_date-date(1970,1,1)).days*86400;
quad(integrand,0,1E3,__kwargtrans__({points:[750]}));
export var arr2=arr.reshape(20,500);
l.set_rotation(0);
s.unstack();
ax.grid(false);
df.set_value(i,j,Math.pow(value,2));
sys.exit(main(sys.argv.__getslice__(1,null,1)));
np.where(y==0,0,x/y);
var title=models.CharField();
threading.Thread.__init__(self);
L.__setslice__(0,py_next(n)+1,null,[]);
ax.xaxis.tick_top();
pool.apply_async(worker,tuple([item]));
export var y_val=function(){var __accu0__=[];for(var x of data)__accu0__.append(x[1]);return __accu0__}();
Pear;
datetime.datetime.now();
G.add_edge(tuple([q,r]),tuple([q,r+1]));
print(instance[0].instances[0].start());
var sizer=wx.BoxSizer(wx.VERTICAL);
var corpus=Corpus(__kwargtrans__({documents:function(){var __accu0__=[];for(var x of lst)__accu0__.append(Document(x));return __accu0__}()}));
words.remove(word);
export var listB=[[1,20],[21,17]];
pool.terminate();
random.shuffle(indices);
sock.setsockopt(socket.IPPROTO_IP,socket.IP_MULTICAST_TTL,2);
display.set(ast.literal_eval(display.py_get()));
isinstance(instance,User);
Food._meta.get_all_related_objects();
var dist=hamdist(trans[i].__getslice__(0,-1,1),trans[j].__getslice__(0,-1,1));
obj.get_object();
var root=Tkinter.Tk();
Frame.__init__(self,root);
var soup=parser.parse(text);
plt.contour(X,Y,T.__getitem__([tuple([0,null,1]),tuple([0,null,1]),round(len(z)/2)]),64);

var data=numpy.random.normal(__kwargtrans__({size:1E4}));
iterator.__iter__();
var word=match.group(0);
var numbers=function(){var __accu0__=[];for(var x=0;x<length;x++)__accu0__.append(x);return __accu0__}();
a[~mask];
top_matrix.nullspace();
self.treeview.append_column(self.tvcolumn1);
export var cv_img=adaptors.PIL2Ipl(pil_img);
export var swin=ScrolledWindow(frame,__kwargtrans__({width:500,height:500}));
math.exp(-x);
export var phases=phases.reshape(tuple([10,1]));
tox- -tests/test_loader.py;
partial(_update_filename,__kwargtrans__({path:path}));
sympy.solve(d);
var X=sparse.lil_matrix(tuple([100,100]));
signal.alarm(seconds);
plt.scatter(x,y);
self.func_count+=1;
var cols=df.columns.tolist();
var a=np.ones(y[-1],__kwargtrans__({dtype:np.intp}));
var app=Flask(__name__);
(function __lambda__(x){return function __lambda__(){return x}})(value).__closure__[0];
max.append(-1*q.py_get());
p.get_children()[1].get_paths();
var A=function(){var __accu0__=[];for(var j=0;j<Math.pow(2,n);j++)__accu0__.append(function(){var __accu1__=[];for(var i=0;i<n;i++)__accu1__.append(INFINITY);return __accu1__}());return __accu0__}();
do_something_awesome(lines_of_interest);
self.master.rowconfigure(r,__kwargtrans__({weight:1}));
var request=QNetworkRequest(QUrl(url));

writer.commit();
print(function(){var __accu0__=[];for(var t of Formatter().parse(s))if(t[1])__accu0__.append(t[1]);return __accu0__}());
s.login(user,password);
var n=int(input());
py_next(it);
sleep(5);
base_start+=timedelta(__kwargtrans__({days:1}));
_cell.style.fill.start_color.index=Color.DARKGREEN;
max(left_depth,right_depth)+1;
self.queries=[];
(function __lambda__(x){return exp(x)});
heapq.nlargest(5,A,__kwargtrans__({key:A.py_get}));
var root=Tk();
var d=d.reshape(partitions.shape[1],-1);
x[0].append(1);
var line=f.readline();
(function(){var __accu0__=[];for(var item of list(set(L)))if(L.count(item)>1)__accu0__.append(item);return __accu0__})();
var sess=tf.InteractiveSession();
export var inFile=sys.argv[1];
ax.set_yticklabels(df.index,__kwargtrans__({size:20}));
csvfile.close();
var y=np.asarray(y,__kwargtrans__({dtype:np.uint8}));
export var mycsv=csv.reader(open(myfilepath));
inverted_dictionary[new_key]=[key];
(function(){var __accu0__=[];for(var x of List1)if(__in__(x,Set2))__accu0__.append(x);return __accu0__})();
time.sleep(2);
self.add(button);
var app=webapp.WSGIApplication(url_map,__kwargtrans__({debug:false}));
var ax1=plt.subplot2grid(tuple([6,1]),tuple([0,0]));
var line=line.rstrip();
ax.legend(__kwargtrans__({handles:handles,labels:labels}));
y.append(contour[0][1]);
var __left0__=plt.subplots(__kwargtrans__({ncols:2,sharey:true}));var fig=__left0__[0];var axes=__left0__[1];
db.session.add(post);
export var test_runner=unittest.TextTestRunner().run(test_suite);
wd.implicitly_wait(10);
[false,true];
self.args[i];
self.crawler.configure();
(function(){var __accu0__=[];for(var i of l)__accu0__.append(i[1]);return __accu0__})();
a+b;
table.horizontalHeader().setResizeMode(0,QHeaderView.Stretch);
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
child.close();
self.f.flush();
pprint(list(all_doublet_tuples(n)));
len(df.index)==0;
c[0]+=1;
var app=Flask(__name__);

var model=gensim.models.Word2Vec(sentences);
loop.close();

var res=numpy.empty_like(a);
p.start();
var d=function(){var __accu0__=[];for(var [k,v]of d.py_items())__accu0__.append([k,default_to_regular(v)]);return dict(__accu0__)}();
rfc822.parsedate_tz(date);
f.seek(i*line_len);
var __left0__=tuple([x.min(),x.max(),y.min(),y.max()]);var xmin=__left0__[0];var xmax=__left0__[1];var ymin=__left0__[2];var ymax=__left0__[3];
var queryset=Question.objects.all();
var response=urllib.request.urlopen(req);
var p=subprocess.Popen(cmd,__kwargtrans__({stdout:subprocess.PIPE}));
log.setLevel(logging.DEBUG);
time.sleep(seconds_till_future);
post[0].tags.py_clear();
print(calculateDistance(2,4,6,8));
parameter_setting.save();
print(x);
self.py_name=py_name;
srf.blit(f.render(unistr,true,tuple([255,255,255])),tuple([0,0]));
var labels=np.array([1,2,0,0,2]);
Tk().withdraw();
print(f.read());
answer.extend(function(){var __accu0__=[];for(var _=0;_<counts[k];_++)__accu0__.append(k);return __accu0__}());
self.timer.Start(8E3);
plt.hist(results,__kwargtrans__({bins:bins}));
HTML(style+df.to_html(__kwargtrans__({formatters:frmt})));
np.vstack(function(){var __accu0__=[];for(var i=0;i<len(A)-width;i++)__accu0__.append(A.__getslice__(i,i-len(A)+width,1));return __accu0__}());
inset.set_yticks([y_min,y_min+(y_max-y_min)/2,y_max]);
false;
match.group(2);
tuple([s.getId(),s.getName(),s.getCustomer().getId()]);
wrapper;
G.add_edge(tuple([q,r]),tuple([q,r-1]));
var a=ndimage.interpolation.zoom(a,.5);
pyplot.show();
colorama.init();
print(sys.argv);
G.add_edge(tuple([q,r]),tuple([q-1,r]));
print(b[0]);
np.set_printoptions(2,__kwargtrans__({threshold:100,edgeitems:10,suppress:true}));
export var image_file=io.BytesIO(fd.read());
var driver=webdriver.Firefox(__kwargtrans__({capabilities:caps}));
datastream.read(2);
print(calendar.month(2011,9));
var aList=function(){var __accu0__=[];for(var vals of py_values)__accu0__.append(Entry(__kwargtrans__(vals)));return __accu0__}();
var __left0__=hashlittle2(data,initval,0);var c=__left0__[0];var b=__left0__[1];
export var vocab_tage=dict(function(){var __accu0__=[];for(var [key,value]of list(tag_vocab.py_items()))__accu0__.append(tuple([value,key]));return py_iter(__accu0__)}());
var ax=plt.figure().gca();
i+=1;
var foo=Foo();
int(time.mktime(value.timetuple())*1E3);
export var field_name=file_name;
p.wait();
var pool=Pool(2);
var PROJECT_PATH=os.path.dirname(os.path.abspath("./P2JSnippets.py"));
var results=multiprocessing.Queue();
var ax=fig.add_subplot(1,1,1);
export var lineResult=libLAPFF.parseLine(line);
plt.gca().add_collection(lc);
display(fig);
worksheet.write(row,col,key);
var __left0__=tuple([b,a+b]);var a=__left0__[0];var b=__left0__[1];
outdict;
self.set=set();
m.append(function(){var __accu0__=[];for(var x of input().py_split())__accu0__.append(int(x));return __accu0__}());
root.mainloop();
contrived.foo();
py_keys.py_sort();
print();
numpy.power(x,a+1)-b;
var arr=function(){var __accu0__=[];for(var i=0;i<5;i++)__accu0__.append([0,0,0,0]);return __accu0__}();
time.sleep(.2);
var stdout=sys.stdout;
var b=numpy.array([100,100,100]);
print(f);
logging.Handler.__init__(self);
new_dic[1]=dict([[2,5]]);
var A=np.arange(100).reshape(25,4);
print(parser.parse_args());
export var Data=NP.random.randint(-5,5,1E3).reshape(500,2);
plt.tight_layout();
tuple([evens,odds])[__mod__(i,2)].append(i);
print(mmc.serial);
fig.tight_layout();
threading.Thread(__kwargtrans__({target:show_progress_A,args:tuple([win])})).start();
var a=list();
var d=dict(function(){var __accu0__=[];for(var [k,v]of r.py_items())__accu0__.append(tuple([v,k]));return py_iter(__accu0__)}());
var df=pd.DataFrame(dict(__kwargtrans__({time:tidx,value:np.random.rand(smp_n)})));
var res=dict(sorted(function(){var __accu0__=[];for(var [k,v]of list(L.py_items()))__accu0__.append(tuple([k,v]));return __accu0__}(),__kwargtrans__({key:function __lambda__(x){return x[1]}})).__getslice__(-2,null,1));
G.add_edge(tuple([q,r]),tuple([q+1,r]));
math.atan2(-0,-0);
var array=ctypes.c_double*100();
print(tuple(f));
var ax1=fig.add_subplot(111);
df;
surface.fill(tuple([255,255,255]));
file.delete();
X.__getitem__([tuple([0,null,1]),idx0]);
var __except0__=KeyError(key);__except0__.__cause__=null;throw __except0__;
print(A[ind]);
csv_writer.writerow(function(){var __accu0__=[];for(var x of hello)__accu0__.append(x[y]);return __accu0__}());
var imgplot=plt.imshow(img);
sorted(a);
abort(404);
l.index(a)<l.index(b);
layout.addWidget(self.DataPlot,1);
irenL.Start();
var index=[0,2];
export var S1=set(L1);
var cj=cookielib.LWPCookieJar();
get_greenlet_status(greenlets);
db.create_all();
var result=func(...args,__kwargtrans__(kwargs));
export var inner=result[outerKey].copy();
self.pipeline.send(self);
cnx.close();
sound.play();
self.documents.append(QTextDocument(self));
var m=len(list);
self.c=cv2.VideoCapture(0);
var client=Client(__kwargtrans__({wsdl:wsdl}));
var result=collections.Counter(sixgrams);
export var screen_name=models.CharField(__kwargtrans__({max_length:50,blank:true,null:true}));
M.set_value(index,column,new_value);
Two().f();
ast.iter_child_nodes(node);
f.write(inp);
thread.join();
self.drain();
print(tag.nextSibling.__class__);
manager.run();
years_dict[line[0]].append(line[1]);
l.add(1);
main.py;
len(s);
rex.match(my_string);
self.setCentralWidget(self.window);
print(list(itertools.chain([peek],gen)));
print(np.random.dirichlet(np.ones(10),__kwargtrans__({size:1})));
var url=opener.open(request);
export var linspace_y=np.linspace(min(y_range),max(y_range),100);
var fig=plt.figure();
points.py_sort();
ax.grid();
y.append(b.py_pop(0));
format_to_year_to_value_dict[format_str][year].append(value);
min(function(){var __accu0__=[];for(var c of s)if(c.isalpha())__accu0__.append(c);return py_iter(__accu0__)}());
A.py_sort();
var y=[];
export var http=httplib2.Http();
float(s);
var arr=np.array(img);
setattr(obj,self.py_name,types.MethodType(f,obj,obj.__class__));
pickle.load(f);
help(a.assign);
main();
var parser=argparse.ArgumentParser();
A.combineAdd(-B);
zf.close();
var d=locals();
ct.iloc.__getitem__([tuple([0,10,1]),tuple([0,10,1])]);
(function(){var __accu0__=[];for(var [x,y]of data)__accu0__.append(tuple([x+y,x-y]));return py_iter(__accu0__)})();
canvas.setLineWidth(.5);
print(m.groups());
Counter(h.py_split())[n];
var diff=filter(function __lambda__(x){return!__in__(x,b)},a);
web.show();
var draw=ImageDraw.Draw(mask);
ax[1]=data.boxplot();
export var eline=process.stderr.readline();
zip.extractall(path,get_members(zip));
var x=np.linspace(0,16,1E3).__getitem__([tuple([0,null,1]),np.newaxis]);
export var status=process.wait();
var bar=relationship(Bar,__kwargtrans__({uselist:false}));
var b=np.random.randint(0,size_a,size_b);
var x=[0]*1E8;
json.loads(json_str);
random.shuffle(my_list);
indices[val].append(i);

var df=pd.DataFrame(existing_data,__kwargtrans__({columns:cols}));
count;
map(function __lambda__(t){return t.start()},threads);
var c=nprect(a,np.deg2rad(b));

var res=cv2.bitwise_and(res,mask);
m.group();
export var dist1=Math.pow(x.__getslice__(0,-2,1)-x.__getslice__(1,-1,1),2)+Math.pow(y.__getslice__(0,-2,1)-y.__getslice__(1,-1,1),2);
f.close();
print(html);
self.window.show();
tuple([TP,FP,FN,TN]);
var html=urllib.request.urlopen(req).read();
random.seed();
x.py_sort();
var d=datetime.datetime.now();
vc.release();
np.set_printoptions(__kwargtrans__({threshold:np.inf}));
test_func(...args,__kwargtrans__(kwargs));
print(np.nanargmax(a));
var app=wx.PySimpleApp();
str(jinja2.escape(a));
var df1=func(df);
seen.add(x);
export var imgray=cv2.cvtColor(im,cv2.COLOR_BGR2GRAY);
_foobar.argtypes=[ctypes.c_int,ctypes.c_int,_doublepp,_doublepp];
pd.concat(los,__kwargtrans__({axis:1}));
self.queue.py_get(__kwargtrans__({block:true}));
self.fig=plt.figure();
fn(...args,__kwargtrans__(kwargs));
self.mysignal.connect(self.mySignalHandler);
os.__file__;
plt.pie(py_values,__kwargtrans__({labels:labels,autopct:make_autopct(py_values)}));
child.expect(pexpect.EOF);
export var set_of_150kwords=set(list_of_150kwords);
plt.imshow(sample_images.__getitem__([i]));
session.commit();
plt.gcf().gca().add_artist(circle1);
plt.clf();
logging.basicConfig(__kwargtrans__({level:0}));
module.py;
loop.run_forever();
output[line[1].strip()]=line[2].strip();
var sess=tf.Session();
self.browser.py_get(self.live_server_url);
self.pack();
a.a=a.a;
print(key,myNames[key]);
do_something();
export var xl_file=pd.ExcelFile(file_name);
var data=dict({});
ana(function __lambda__(x){return tuple([x,f(x)])},function __lambda__(_){return false})(x);
print(line);
Parallel(__kwargtrans__({n_jobs:2}))(function(){var __accu0__=[];for(var i=0;i<10;i++)__accu0__.append(delayed(foo)(Math.pow(i,2)));return py_iter(__accu0__)}());
output.seek(0);
str(tst);
var py_name=models.CharField(__kwargtrans__({max_length:255}));
var lines=f.readlines();
self.canvas.draw_idle();
self.assertEqual(request.responseCode,200);
df1;
var d2=function(){var __accu0__=[];for(var x of list(d1.py_keys()))__accu0__.append([x,sorted(d1[x])]);return dict(__accu0__)}();
tk.Frame.__init__(self,...args,__kwargtrans__(kwargs));
export var rep=dict(function(){var __accu0__=[];for(var [k,v]of rep.py_items())__accu0__.append(tuple([re.escape(k),v]));return py_iter(__accu0__)}());
df.mask(criteria).fillna(ser);
print(pattern.search(input,start).span());
export var curdir=os.path.dirname("./P2JSnippets.py");
main();
var __except0__=GracefulExit();__except0__.__cause__=null;throw __except0__;
export var imdata=py_iter(imdata);
var soup=BeautifulSoup(html);
C.u4_sort(begin,arr.size);
var job=Job.objects.filter(__kwargtrans__({client_id:pk}));
ax.bar(list(range(5)),rand(5),__kwargtrans__({color:my_cmap(my_norm(my_data))}));
var result=json.loads(s);
f.writelines(data);
var content=fd.getvalue();
self._callback(self._value);
(listScore==[2,0]).all(1).sum();
value+=sum(function(){var __accu0__=[];for(var i of str(value))__accu0__.append(int(i));return __accu0__}());
ny.append(y[-1]);
_nonbmp.sub(_surrogatepair,text);
print(temp_re.findall(data));
var rdd2=sc.parallelize(range(5));
self.txt.see(END);
yaml_parse.py;
var response=urllib.request.urlopen(request);
export var field=models.CharField(__kwargtrans__({max_length:255}));
entity.before_put();
start_response(status,headers,exc_info);
np.hstack(function(){var __accu0__=[];for(var k of x)__accu0__.append(a.__getslice__(0,k,1));return __accu0__}());
print(calendar.isleap(1900));
sys.executable;
print(k,v);
var tuples=tuple(function(){var __accu0__=[];for(var d of dicts)__accu0__.append(set(d.py_items()));return py_iter(__accu0__)}());
print(tuple(a));
var wb=Workbook();
deletemylist.__getslice__(0,17,1);
linprog(c,A_ub,b_ub,A_eq,b_eq,__kwargtrans__({options:dict(__kwargtrans__({bland:true}))}));
ax.scatter(xData,yData);
var new_array=np.array(means).reshape(new_shape);
assert_frame_equal(csvdata,csvdata_old);
Parent.__init__(self,list(args));
var f=open(filename);
print(m.group(2));
d[key]=d.py_get(key,[])+[value];
var sock=urllib.request.urlopen(url);
pool.close();
self.sock.connect(tuple([host,port]));
blocks[-1].append(line);
var counts=collections.Counter(patterns);
var dt=datetime.datetime.fromtimestamp(nanos/1E9);
sum_max(L.__getslice__(1,null,1),accum,max(max_value,accum));
var ax=fig.add_subplot(111);
print("./P2JSnippets.py");
var session=create_session(__kwargtrans__({bind:e,autocommit:false,autoflush:true}));
true;
len(_);
str(self.mylist);
export var OTHER_THING=true;
export var big_stokes=np.vstack(stokes_list);
print(len(inspect.getargspec(sum)[0]));
run_benchmark();
p.py_sort();
ax1.plot(x,y);
s.listen(1);
myapp.models;
f(...args,__kwargtrans__(kwargs));
np.square(df);
y_rev[x.argsort()]=np.arange(x.size).__getslice__(0,null,-1);
tuple([x,y,z]);
console.setLevel(logging.ERROR);
sys.path.insert(0,dirname);
(function(){var __accu0__=[];for(var [k,v]of list(g.py_items()))__accu0__.append([k.py_name,v]);return dict(__accu0__)})();
urllib.request.urlopen(req);
export var may_b=numpy.array([false,true,true,false]);
var app=Flask(__name__);
m.span();
var Z=append([function(){var __accu0__=[];for(var _=0;_<len(Z);_++)__accu0__.append(1);return __accu0__}()],Z.T,0).T;
print(tf.__version__);
np.dot(a,b).__getitem__([[0,0,1999,1999],[0,4999,0,4999]]);
var matrix=[];
linecache.checkcache(filename);
var key=ndb.Key(__kwargtrans__({urlsafe:string_key}));
export var cmyk=gcr(im,0);
xml.display();
print(filename);
message[i]=__mod__((digest[i]^message[i-1])*129,256);
a.upper()==b.upper();
self.latest(__kwargtrans__({limit:1,public:true}));
os.dup2(si.fileno(),sys.stdin.fileno());
foobar.foo();
self.view_items.py_sort(__kwargtrans__({key:key_func}));
Y.append(y);
export var mydata=yaml.load(stream);
var __left0__=np.meshgrid(np.arange(10),np.arange(10));var x=__left0__[0];var y=__left0__[1];
scipy.argmin(function(){var __accu0__=[];for(var x of X)__accu0__.append(scipy.inner(q-x,q-x));return __accu0__}());
[tuple([2,4]),tuple([4,5])];
m.scatter(data.Lon,data.Lat,__kwargtrans__({c:data.Z,s:100,vmin:zi.min(),vmax:zi.max()}));
self.foo.fset(5);
yip();
allocate(temp(dsize));
admin.site.unregister(Site);
a+b;
plt.imshow(img);
process_directory(__kwargtrans__({dirName:os.path.join(dirName,f)}));
export var df_cov=corr.multiply(df_std.multiply(df_std.T.py_values));
d.weekday()==4&&(14<d.day&&d.day<22);
export var scp=SCPClient(ssh.get_transport());
var list_a=[tuple([1,2]),tuple([1,2]),tuple([1,2])];
plt.show();
job.delete();
var app=QtGui.QApplication(sys.argv);
list(chain(...function(){var __accu0__=[];for(var [k,g]of groupby(sorted(lis,__kwargtrans__({key:len})),__kwargtrans__({key:len})))__accu0__.append(sorted(g));return __accu0__}()));
reverseCom([4,5,6],1);
os.dup2(devnull,1);
var df=df.reset_index(__kwargtrans__({level:0,drop:true}));
self.assertTrue(result);
var idx=b.reshape(a.shape[0]);
id(b[0]);
gransons.append(grandson);
ax.set_ylim(0,1);
architecture/techstack;
deployment/installation;
deployment/licensing;
check_for_duplicates(sys.argv.__getslice__(1,null,1));
var data=function(){var __accu0__=[];for(var [h,v]of zip(str(range(number_of_columns)),zip(...py_values)))__accu0__.append([h,v]);return dict(__accu0__)}();
export var sidx=arr.argsort();
test_debug_json();
datetime.datetime.now(pytz.utc).isoformat();
tuple([opcode,dest,src]);
ax.boxplot(df[column],__kwargtrans__({positions:[position]}));
print_time_range(train_likes_df.time.dt.time);
os.chdir(command[raw_input][0]);
Decimal(1)._isinteger();
lint.py- -generate-rcfile>standard.rc;
conn.close();
var fig=plt.figure();
print(f.bar.__name__);
var app=Flask(__name__);
Thread.__init__(self);
(function(){var __accu0__=[];for(var [_,g]of groupby(numbers,grouper))__accu0__.append(list(g));return __accu0__})();
export var delay=(run_at-now).total_seconds();
0;
outf.seek(0);
var pool=Pool(4);
var driver=webdriver.Chrome();
export var table_data=h5read(file_input,table_name);
self.opn[op](op1,op2);
logging.getLogger(py_name);
clf.fit(train_features,train_labels);
df;
dict(map(py_reversed,t));
(self.arr==other.arr).all();
self.f_(obj);
export var input_img=Image.open(input_image);
ax.yaxis.label.set_rotation(0);
var a=np.py_sort(arr,__kwargtrans__({axis:1}));
var output=function __lambda__(x){return x+x}(data[2]);
var capture=cv.CaptureFromCAM(0);
Cl.__init__.__defaults__;
list(d.py_items());
export var movements=set();
print(is_shifted_copy([1,2,1],[2,1,1]));
export var keys_b=set(dict_b.py_keys());
fum.bar;
chr(int(x.__getslice__(2,-1,1)));
var module_name=os.path.splitext(os.path.basename("./P2JSnippets.py"))[0];
lgnd.legendHandles[0]._legmarker.set_markersize(6);
fd.seek(0);
geturl();
var db=SQLAlchemy(app);
var sock=socket.socket(socket.AF_INET,socket.SOCK_STREAM);
print(r.content);
export var weatherData=json.loads(jsonFile);
using_mapper_options(__kwargtrans__({save_on_init:false}));
var fig=plt.figure();
export var busiest_start=max(rsum,__kwargtrans__({key:function __lambda__(x){return x[1]}}));
deletesomelist[i];
show();
pprint.pprint(root);
print(a.__getitem__([1,tuple([0,null,1])]).toarray());
Example.foo(self);
xmlrunner.XMLTestRunner().run(suite);
parser.add_argument(...args,__kwargtrans__(kwargs));
print(sys.version_info);
x.astype(int);
export var db_data=json.loads(db_col_data);
layout.addWidget(self.tab);
var tree=ElementTree();
var bid=int(bid);
plt.show();
var pdf=distr.pdf(abscissas,...param);
sum([48*.1,1*.2,0*.5,0*1,0*2,0*5]);
plt.plot(x,y);
patches[i].set_facecolor(jet(i));
var ax=fig.add_subplot(111);
print(df.columns.str[0].unique());
plt.show();
print(my_array);
names.remove(py_name);
var c=boto.connect_ec2(ec2_key,ec2_secret);
var doc=lxml.html.fromstring(s);
var image=image.resize(tuple([250,250]),Image.ANTIALIAS);
x.__setslice__(0,null,null,np.ones(tuple([2,2])));
print(tuple([e,L[i-1],L[__mod__(i+1,len(L))]]));
self.f.flush();
var data=function(){var __accu0__=[];for(var p of image.read().py_split())__accu0__.append(int(p));return __accu0__}();
var py_items=function(){var __accu0__=[];for(var line of infile)__accu0__.append(parse_item(line.strip()));return __accu0__}();
gems.sprites();
zip(...lis);
screen.fill(BGCOL);
self.value=value;
mail.get_payload();
print(x);

self.__name__;
self.layout().removeWidget(self.child);
main();
int(log(n,256))+1;
thing.put();
export var XmaxY=coo_matrix(tuple([XmaxY,zip(...py_keys)]));
list(range(item.start,item.stop,item.step));
export var __version__=1;
set(myList);
list(find(l));
processor.terminate();
test.py;
app.MainLoop();
var text=file.read().lower();
py_typeof(test.make_fptr());
server.join();
G.add_edge(x[0],x[1],__kwargtrans__({weight:x[2]}));
remainder.append(group[0]);
export var x_val=function(){var __accu0__=[];for(var x of data)__accu0__.append(x[0]);return __accu0__}();
var driver=webdriver.Firefox();

plt.xlim([-4,4]);
self.response.write(pic.read());
var d=collections.Counter(dict(your_list));
s.feed(html);
var lines=f.readlines();
fh.stream.py_name;
var b=np.ones(5);
p.start();
plt.subplot(122);
pd.read_csv(io.StringIO(df.to_csv()),__kwargtrans__({index_col:0}));
export var ranked=sorted(timings,__kwargtrans__({key:function __lambda__(t){return t[1]}}));
var writer=csv.writer(f);
print(current_credentials.secret_key);
df[~mask];
export var epoch=int(time.mktime(time.strptime(date_time,pattern)));
var x=np.array([1,2,1,0,1,2,1,0]);
datetime.date(...datetuple);
plt.show();
f.close();
var h=np.array(hamiltonian);
t.render(c);
docs.append(yaml.load(raw_doc));
self.after(100,self.read_bytes);
var d=np.diagonal(np.tensordot(a,b,__kwargtrans__({axes:tuple([])})),__kwargtrans__({axis1:0,axis2:2}));
ds.addSample(myList.__getslice__(ind-n,ind,1),myList[ind+1]);
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
s.close();
locals()[choice]();
var parser=argparse.ArgumentParser();
var theta=2*np.pi*np.random.random_sample(n);
export var allkitties=kitties.get_data();
x.subs([tuple([x,y]),tuple([y,z])]);
toast();
opener.open(login_url);
list(d.py_items());
tuple([data1.shape,masks1.shape]);
var ax=fig.add_subplot(111);
var ax=fig.add_subplot(gs[1]);
sum(function(){var __accu0__=[];for(var [l1,l2]of zip(x1,x2))__accu0__.append(calc_matrix(l1,l2));return py_iter(__accu0__)}());
cv2.line(img,tuple([x1,y1]),tuple([x2,y2]),tuple([0,255,0]),2);
pprint(data_copy);
pl.show();
self.__block.wait();
print(self.__hidden);
sys.exit(py_update(opts));
pygame.mixer.music.load(file);
var result=np.apply_along_axis(mahalanobis_sqdist,1,d1,mean1,Sig1);
Rect(l,t,w,h);
var c=random.randint(10,25);
print(list(csv_reader));
list(intersection.elements());
plt.setp(ax2.get_yticklabels(),__kwargtrans__({visible:false}));
client.connect(host,port,username);
diff(n[i],n[j]);
var app=QtGui.QApplication(sys.argv);
platform.platform();
[1,2,10];
tuple([[0,8,0,0,0,8,0,0,0,8,0,0,0]]);
new_list;
tuple([child.tag,child.attrib]);
var dt=datetime.datetime.now();
deletedata[key];
var out=np.py_split(df1.index[c],np.flatnonzero(r.__getslice__(1,null,1)>r.__getslice__(0,-1,1))+1);
pygame.time.Clock().tick(10);
session.add(a);
pd.DataFrame(MM,__kwargtrans__({dtype:int,columns:Col}));
export var intersec=function(){var __accu0__=[];for(var item of a)if(__in__(item,b))__accu0__.append(item);return __accu0__}();
var mydict=dict(function(){var __accu0__=[];for(var [k,v]of list(mydict.py_items()))__accu0__.append(tuple([k[1],v]));return py_iter(__accu0__)}());
var fig=plt.figure();
int(mktime(dt.timetuple()));
var __left0__=plt.subplots(__kwargtrans__({ncols:2,sharey:true,sharex:true}));var fig=__left0__[0];var axes=__left0__[1];
bar.baz();
child.grid_configure(__kwargtrans__({padx:5,pady:5}));
listen.stop();
plt.subplot(212);
frame.pack(__kwargtrans__({padx:10,pady:10}));
var w=wfloat.mean(2);
f.__code__.co_names;
sys.exit(app.exec_());
var b=np.matrix([[2,2],[2,2]]);
export var genre=models.CharField(__kwargtrans__({max_length:100}));
list(zip(py_keys,py_values));
export var owner=models.ForeignKey(User);
image_list.append(im);
var input_list=string_input.py_split();
a.__getitem__([tuple([0,-1,1]),tuple([0,-1,1])]);
panel.configure(__kwargtrans__({image:img2}));
line.rstrip();
self.transaction.append(tuple([py_name,self.database.py_get(py_name)]));
var df2=df1.copy();
np.dot(np.arange(len(x)),np.power(x,10))/np.sum(np.power(x,10));
paranoid.__getslice__(0,null,1);
export var where=tf.not_equal(A,zero);
export var title_label=gtk.Label();
print(opts.some_option.decode(sys.stdin.encoding));
vbar.config(__kwargtrans__({command:canvas.yview}));
tk.Tk.__init__(self);
var data=f.read(4);

var data=conn.recv(1024);
a.T;
var df=df.reset_index();
window.show();
res.append(0);
self.ui.dragDataEdit.close();
logger.addHandler(hdlr);
print(k,v);
session.execute(u);
rle(np.array([5,4,4,4,4,0,0]));
psutil.net_connections();
print(i);
var aList=function(){var __accu0__=[];for(var i=0;i<100;i++)__accu0__.append(random.randint(1,11));return __accu0__}();
export var myclass=MyClass();
var __path__=extend_path(__path__,__name__);
var C=A.__getitem__([tuple([0,null,1]),[1,2]]);
form.save();
var pool=multiprocessing.Pool(2);
l.__code__.co_argcount;
conn.select();
my_randoms.append(random.randrange(1,101,1));
var array=np.zeros(tuple([8,8]));
UserSerializer;
df.apply(using_mstats,__kwargtrans__({axis:0}));
var suite=unittest.TestSuite();
TrueXor(1,0,0);
var app=Flask(__name__);
buttons[-1].pack();
print(f.getvalue());
plt.show();
Category.append(row[1]);
dill.detect.badobjects(f,__kwargtrans__({depth:1}));
foo.method1();
var soup=BeautifulSoup(html);
var tree=lxml.html.fromstring(html);
export var asample=random.sample(bigset,Samplesize);
t.start();
self.clients.append(client);
var parent=Parent();
getattr(obj,py_name);
- - - -APP2;
- - - -APPX;
foo();
var df2=df.ix.__getitem__([tuple([0,null,1]),tuple([12,24,1])]);
x.extend([4,5]);
lst.py_sort(__kwargtrans__({key:operator.itemgetter(1)}));
getFromDict(dataDict,mapList.__getslice__(0,-1,1))[mapList[-1]]=value;
plt.close(fig);
x*x;
SecondBase.__init__(self,...args,__kwargtrans__(kargs));
print(time.ctime());
var b=np.array([2,4,6]);
(function(){var __accu0__=[];for(var i of set(map(tuple,a)))__accu0__.append(list(i));return __accu0__})();
mat2.append(temp);
var filtered_numbers=function(){var __accu0__=[];for(var n of numbers)if(predicate(n))__accu0__.append(n);return __accu0__}();
var x=object();
l.__getslice__(start,end,step);
var myList=[0,0,0,2,2];
var q=Queue.Queue();
self.setInitialBreakpoints();
X.__rmul__(2);
list(_f(s,n));
plt.plot(x.__getitem__([i,tuple([0,null,1])]),y.__getitem__([i,tuple([0,null,1])]));
tuple.__new__(cls,tuple([x,y]));
var date=dateutil.parser.parse(date);
choice([4,5,6]);
export var uncompressed_data=zippy.read();
export var evaled_value=ast.literal_eval(value);
self.created_at=datetime.now();
expected.difference(found);
var df=pd.read_csv(StringIO(txt),__kwargtrans__({index_col:0}));
var msg=email.message_from_string(msg_string);
print(list(dd.py_items()));
rgb_values+=[tuple([r,g,b])];
ax.scatter(x,y,__kwargtrans__({marker:m,c:c,s:SIZE,vmin:VMIN,vmax:VMAX}));
dataframe.to_excel(writer,__kwargtrans__({sheet_name:sheet,startrow:0,startcol:0}));
children[child]+=np.ones(len(children[child]));
hist(b.ravel(),__kwargtrans__({bins:255}));
list(enumerate(s));
var output=function(){var __accu0__=[];for(var i=0;i<len(a);i++)if(i<len(a)-1)__accu0__.append(a[i]+a[i+1]);return __accu0__}();
clf.fit(X_train.__getitem__([tuple([0,null,1]),tuple([0,-num_feats_to_remove,1])]),y_train);
var f=imageFile.read();
time.sleep(.1);
var result=cv2.matchTemplate(image,template,cv2.TM_CCOEFF_NORMED);
sprite.set_position(sprite.body.position.x,sprite.body.position.y);
render_template_string(name_template,__kwargtrans__({py_name:py_name}));
var __left0__=starmap(operator.isub,zip(tuple([x,y]),tuple([1,2])));var x=__left0__[0];var y=__left0__[1];
var fig=plt.figure();
print(status.author,status.user);
df.index.isin(df.index[df.index.slice_indexer(start_remove,end_remove)]);
foo(iterable,__kwargtrans__({isiterable:false}));
var x=f(x);
export var document=lxml.html.document_fromstring(html_string);
print(r.content);
var content=render_to_string(template_name,dictionary,context_instance);
transport.close();
print(function(){var __accu0__=[];for(var n of node.fullPath())__accu0__.append(n.ID());return __accu0__}());
server_socket.close();
-2*Math.pow(x,2)+4*x;
export var llist=line.py_split();
df[col]=pd.get_dummies(df[col]);
tuple(recursive_map(complex_list,function __lambda__(x){return x.__class__.__name__}));
self.names.add(node.id);
self.setFileMode(self.ExistingFiles);
cursor.execute(sql);
var driver=selenium.webdriver.Firefox();
ax.cla();
cursor.close();
var ax2=fig.add_subplot(2,1,2);
job.join();
self.py_items.__getslice__(-1,null,1)[0];
var hash=hashlib.sha1();
db.myCollection.insert(records);
self.__getitem__(slice(i,j));
print(string);
var listbox=tk.Listbox(master,__kwargtrans__({selectmode:tk.SINGLE}));
new_points.append(tuple([x,y,z]));
effectslist.append(mod);
plt.grid();
var writer=csv.writer(self.response.out);
HttpResponseServerError();
var d=datetime.date(1970,1,1);
sys.getsizeof(0);
DNS.DiscoverNameServers();
export var ipl_t=np.linspace(0,len(points)-1,100);
df;
!(Counter([1,2,2])-Counter([1,2]));
f.write(line);
A.dtype;
test.close();
ax2.set_ylim(tuple([0,2.7]));
(datetime.strptime(x[0],fmt)-d).total_seconds()>0;
yertle.hideturtle();
log_file.write(__mod__(fmt_str,tup));
py_next(blah);
0;
plt.fill_between(x,y_old,y_new,__kwargtrans__({color:color}));
theA.methB(params);
print(md.myfx(arg2));
self.Bind(wx.EVT_KEY_DOWN,self.KeyDown);
var p=psutil.Process(os.getpid());
datetime(...timetup.__getslice__(0,6,1)).isoformat();
pylab.show();
df.iloc[np.roll(np.arange(df.shape[0]),shift)];
copyStruct(inputList,py_iter(flattenedResults));
var root=etree.fromstring(xml_str);
var pairs=zip(it,it,nons);
new set([new set([another])]);
pform2.as_table();
var writer=csv.DictWriter(outfile,__kwargtrans__({fieldnames:fieldnames}));
numpy.interp(quantiles,weighted_quantiles,py_values);
min(timeit.repeat(function __lambda__(){return function(){var __accu0__=[];for(var i=0;i<len(py_keys);i++)__accu0__.append([py_keys[i],py_values[i]]);return dict(__accu0__)}()}));
invoker(test);
results.append(tuple([i,j,ret,vol]));
getpwuid(stat(filename).st_uid).pw_name;
G.add_edge(x[0],x[1],__kwargtrans__({weight:x[2]}));
var app=QtGui.QApplication(sys.argv);
f.write(data);
var b=np.array([1,0,2,1]);
print(line);
var p=multiprocessing.Pool();
lol[i]=function(){var __accu0__=[];for(var j of indices)__accu0__.append(sublist[j]);return __accu0__}();
sum(lists,[]);
time.sleep(1);
var cb=function __lambda__(){return self.resp(py_items,iteration)};
print(py_name.__getslice__(i,null,1)+py_name.__getslice__(0,i,1));
divtdi(td1,td2);
t.test();
plt.plot(x,function(){var __accu0__=[];for(var i=0;i<len(x);i++)__accu0__.append(offset+math.sin(float(i)/10));return __accu0__}());
pool.close();
export var maybemodel=model.fit(maybeinliers);
mark_safe(json.dumps(list(object)));
sys.stderr=self.sys_stderr;
response;
tuple([]);

data;
df1.join(df2);
con.close();
dct[id(lst)]=lst;
print(is_all_true(a,b,c));
gona.__getitem__([tuple([0,null,1]),1]);
export var module_dict=my_module.__dict__;
comp.remove(x);
print(timeit.timeit(function __lambda__(){return function(){var __accu0__=[];for(var s of rsplit(TEST))__accu0__.append(s.strip());return __accu0__}()}));
var __left0__=plt.subplots(__kwargtrans__({nrows:2,ncols:2}));var fig=__left0__[0];var axes=__left0__[1];
main();
time.sleep(.1);
export var file_info_instance=file_info_class(f);
var id=Column(Integer,__kwargtrans__({primary_key:true}));
export var list_of_ids=list(itertools.chain.from_iterable(cursor));
var __left0__=s.accept();var conn=__left0__[0];var addr=__left0__[1];
self.conn.close();
var C=p1[0]*p2[1]-p2[0]*p1[1];
X.tocsr().nonzero();
var payload=json.loads(message,__kwargtrans__({object_hook:as_payload}));
var __except0__=ValidationError();__except0__.__cause__=null;throw __except0__;
nosetests;
key_name;
print(repr(c));
export var dS=np.random.normal(__kwargtrans__({size:N}));
export var coefs_with_fns=sorted(zip(clf.coef_[0],feature_names));
var value=float(value);
gradient.setColorAt(1,QColor(255,255,255,0));
tuple([dt.astimezone(pytz.utc).time(),dt.utcoffset().total_seconds()]);
var py_name=db.StringProperty();
py_next(gen);
ax.loglog();
a[k]=b[k];
out.reshape(6*N,6*N);
yest;
export var dtime=datetime.datetime.now();
var result=[];
lst[i]=func(item);
initializer(...args);
walk(tree.getChild(0),ast);
db.session.add_all(list(my_new_posts.py_values()));
funcs.append(functools.partial(f,i));
var b=np.array(b);
var words=nltk.Text(coded);
var result=pool.apply_async(f);
list1.append(int(digit));
np.allclose(out_ein,out_dot);
var NUMBER_OF_EXCEPTIONS=0;
myList.append(2);
var d=datetime.datetime.fromtimestamp(ts);
var app=Flask(__name__);
var l=[[0]]*4;
outfile.write(line);
var result=pd.concat([a,b]);
self.button.setMinimumSize(QtCore.QSize(128,128));
self.parser.parseString(s);
grid.addWidget(button,row,col);
var a2=np.arange(10).reshape(2,5);
var my_new_list=function(){var __accu0__=[];for(var x of my_list)__accu0__.append(x+string);return __accu0__}();
np.s_.__getitem__([tuple([0,null,1]),tuple([0,2,1]),tuple([0,null,1]),tuple([0,540,1])]);
ftp.login();
results.append(tuple([letter,1]));
var x=np.linalg.solve(a,b);
OrderedDict.__init__(self,...args);
self.data=data;
var seconds=duration.total_seconds();
print(f(1));
export var x0=random.choice(range(0,L));
line.py_split();
(function(){var __accu0__=[];for(var arg of args[0])__accu0__.append([arg,multi(...args.__getslice__(1,null,1))]);return dict(__accu0__)})();
mf.grid(__kwargtrans__({column:0,row:0,sticky:tuple([N,W,E,S])}));
item.setTextAlignment(QtCore.Qt.AlignCenter);
adapt(proxy._get_current_object());
var x=np.linspace(0,1,100);
loop.run_until_complete(do_request());
export var sequence1=[1,4,8];
p.interact();
var cur=connection.cursor(__kwargtrans__({dictionary:true}));
print(df.apply(function __lambda__(x){return sorted(x,__kwargtrans__({key:function __lambda__(y){return y==0}}))},__kwargtrans__({axis:1})));
d[c]+=1;
var ax=fig.add_subplot(111);
var __except0__=StopIteration();__except0__.__cause__=null;throw __except0__;
n.increment();
pathlib.Path(...p.parts.__getslice__(2,null,1));
seen.add(x);
print(response.content,response.status_code);
var reader=csv.reader(f);
layout.addWidget(button);
var __left0__=plt.subplots(2,1,__kwargtrans__({figsize:tuple([12,6])}));var f=__left0__[0];var ax=__left0__[1];
sess.run(init);
plt.scatter(x[mask],y[mask],__kwargtrans__({marker:um}));
var today=datetime.date.today();
signal.alarm(0);
self.view_items.py_sort(__kwargtrans__({key:attrgetter(...fields)}));
dfnew.join(dfnew.apply(func,__kwargtrans__({axis:1}))).dropna();
render_to_response(template_name,c);
id(sys.modules[foo.__module__])==id(sys.modules[foobar.foo.__module__]);
self._setter(obj,value);
self.sa_grid.removeWidget(widget);
array[idx];
py_metatype.__new__(mcls,cls,bases,d);
glfw.Init();
p.start();
print(IPython.sys_info());
var r=[a,b,c];
print(moneyx);
print(tuple([val,k]));
import_submodules(__name__);
ax.yaxis.set_major_formatter(mtick.FuncFormatter(ticks));
app.exec_();
var token=models.CharField(__kwargtrans__({max_length:100,blank:true}));
export var im_width=im.size[0];
path.reverse();
(function(){var __accu0__=[];for(var key of self)__accu0__.append(tuple([key,OrderedDict.__getitem__(self,key)]));return __accu0__})();
np.array(l,__kwargtrans__({dtype:pd.Series}));
var __left0__=statemap.__getitem__([dx,dy]);var dx=__left0__[0];var dy=__left0__[1];
repr(soup);
var result=wx.BitmapFromImage(image);
self.setCentralWidget(self.centralwidget);
var myset=set(mylist);
var angle=np.linspace(0,6*np.pi,1E3);
var req=urllib.request.Request(url,data);
var key=bucket.get_key(key_name);
x.append(a.py_pop(0));
export var greenlets=function(){var __accu0__=[];for(var each=0;each<100;each++)__accu0__.append(gevent.spawn(crawl,each));return __accu0__}();
print(o.hostname);
data_frame.iloc.__getslice__(0,100,1);
jsonify(__kwargtrans__({username:g.user.username,email:g.user.email,id:g.user.id}));
self.__class__(...args,__kwargtrans__(kwargs));
var a=np.array([[1,5,np.nan,6],[10,6,6,np.nan]]).transpose();
dd_process.stdout.close();
var cursor=conn.cursor();
connection.connection.ping();
fig.canvas.draw();
parser.feed(res.read());
foo();
lut.append(n/step);
sanitised_path;
var instance=Example();
threading.Thread.__init__(self);
add_element_to_database(record);
ax.set_xticks(ax.get_xticks().__getslice__(1,null,1));
scopes.add(s.strip());
ax.scatter(x,y,z,__kwargtrans__({c:scalarMap.to_rgba(cs)}));
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
var x=0;
var G=matrix([[2,1,-1,0],[1,2,0,-1]]);
QtCore.QCoreApplication.exit();
var output=PdfFileWriter();
export var object_class=models.CharField(__kwargtrans__({max_length:20}));
y*(y.groupby((y!=y.shift()).cumsum()).cumcount()+1);
print(hex(id(x)));
time.sleep(2);
var conn=socket.socket(socket.AF_INET,socket.SOCK_STREAM);
self.buttonPanel1=wx.Panel(self);
export var last_modified=db.DateTimeProperty(__kwargtrans__({required:true,auto_now:true}));
deletetest[5];
module_name;
canvas.grid(__kwargtrans__({row:1,column:0,columnspan:100}));
var index=np.unravel_index(arr.argmin(),arr.shape);
timeout.start();
plt.colorbar(img,__kwargtrans__({cmap:cmap,norm:norm,boundaries:bounds,ticks:[0,5,10]}));
process.wait();
var page=urllib.request.urlopen(url);
(function(){var __accu0__=[];for(var py_values of zip(a,b,c))__accu0__.append(sum(py_values));return __accu0__})();
matcher(l1.__getslice__(1,null,1),l2.__getslice__(1,null,1));
x.reshape(r*b1,c*b2);
o5.magic;
log.startLogging(sys.stdout);
axes.__getitem__([1,0]).hist2d(x,y,__kwargtrans__({bins:nbins}));
my_stdout_file.write(line);
initlibwrap();
pylab.subplot(122);
stderr_thread.start();
list1.__setslice__(1,null,2,function(){var __accu0__=[];for(var x of list1.__getslice__(1,null,2))__accu0__.append(x+1);return __accu0__}());
var x_new=x[bool_arr];
plt.autoscale(false);
np.random.seed(0);
var __left0__=zip(...data);var x=__left0__[0];var y=__left0__[1];
export var decompressed=gzip.GzipFile(StringIO(compressed)).read();
py_next(nextword);
self.dictset.py_update(iterable);
print(line);
var my_list=[1,2];
var first_line=py_next(csv_reader);
unittest.TestCase.__init__(self,...args,__kwargtrans__(kwargs));
os._exit(0);
export var killasgroup=py_true;
var root=tk.Tk();
var id=db.Column(db.Integer,__kwargtrans__({primary_key:true}));
(function(){var __accu0__=[];for(var py_items of zip(...iters))__accu0__.append(apply(op,...py_items));return __accu0__})();
export var cudnn=1;
[a,int(b),int(c)];
export var dist_=np.array([0,1,0,1,1,0,0,1,1,0]);
FancyArrowPatch.__init__(self,tuple([0,0]),tuple([0,0]),...args,__kwargtrans__(kwargs));
Chainable(list(self.method(args[0],self.data,__kwargtrans__(kwargs))));
(a==b).sum();
var result=process.wait();
pygame.mixer.init();
var opener=urllib.request.build_opener();
plt.show();
[true,true];
var c=b.__getslice__(1,null,1);
self.mainLayout.addWidget(self.scroll);
plt.plot(sub_data);
var src_dt=dt.py_replace(__kwargtrans__({tzinfo:src_tz}));
a.__setitem__([tuple([0,null,1]),0,0],b.__getitem__([tuple([0,null,1]),0,0]));
job.join();
var a=np.append(a,x);
var now=datetime.datetime.now();
var screen=Xlib.display.Display().screen();
var c=conn.cursor();
var a=1;
newList.append(temp);
var browser=webdriver.Firefox();
session.starttls();
var e=Egg();
self.x+other;
axHistx.hist(x_vals[i],__kwargtrans__({bins:bins,histtype:histtype,color:colors[i]}));
var y=y.A.squeeze();
df.loc[2]=a;
fp.close();
f.close();
var query=query.filter(condition);
var im=Image.open(infile);
var contents=fp.read();
singular;
ax2.set_xlim([x[1],x[2]]);
export var y0s=imsize*np.random.random(ng);
lgnd.legendHandles[1]._legmarker.set_markersize(6);
export var current_credentials=credentials.get_frozen_credentials();
foo.write(os.path.join(root,f));
var df=pd.read_csv(fn);
unittest.TestLoader.sortTestMethodsUsing=function __lambda__(_,x,y){return cmp(y,x)};
self.num_terms=1+max([-1]+list(self.id2word.py_keys()));
var parts=line.py_split();
ax.set_xlim(-100,100);
var form=ContactForm();
(function(){var __accu0__=[];for(var [k,g]of groups)for(var [i,j]of enumerate(g))__accu0__.append(j[i]);return __accu0__})();
export var dict_col=df.py_pop(1);
plt.show();
var data=json.load(f);
copy+copy_to_depth(item,depth-1);
pygame.mixer.init();
export var node_id=Column(Integer,__kwargtrans__({primary_key:true}));
print(t.timeit());
dict(results);
var parser=argparse.ArgumentParser();
np.array([0,0]).any();
export var task=task._get_current_object();
df;
count[key]=len(py_values);
var ax=fig.add_subplot(gs[0]);
print(datetime.datetime.now(tz));
var p=multiprocessing.Process(__kwargtrans__({target:parallel}));
-your_code.py;
isinstance(x,numbers.Integral);
NULL;
db.session.commit();
pprint(lod,__kwargtrans__({width:40}));
word.istitle()?titled.append(word):lower.append(word);
wb.Save();
print(to_s(dt.astimezone(pytz.utc)));
var x=np.random.randn(100);
main();
var x=np.zeros(tuple([n,n]));
locals().py_update(obj.__dict__);
new_text.append(text[i]);
a.clip(__kwargtrans__({max:2}));
plot(draw,img,xpxl2,ypxl2,rfpart(yend)*xgap,col,steep,dash_interval);
export var RES=SPMAT.dot(G);
peers.append(dict());
self.clients.add(client);
print(inspect.currentframe().f_code.co_name);
window.show_all();
var G=nx.Graph();
var x=etree.parse(f);
l.append(1);
export var given_q=db.session.query(Thank).filter_by(__kwargtrans__({giver_id:user_id}));
b.pack();
(d<0).sum();
export var extent=[xedges[0],xedges[-1],yedges[0],yedges[-1]];
export var wr=csv.writer(myfile,__kwargtrans__({quoting:csv.QUOTE_ALL}));
connection.send_command(...args);
result.py_update(dict([[j,result[j]+[i]]]));
print(args);
itertools.product(range(self.numrows),range(self.numcols));
map(ingredients.delete,ingredients.get_children());
tailq.put(line);
var __left0__=plt.subplots(__kwargtrans__({ncols:2,nrows:2,sharex:true,sharey:true}));var fig=__left0__[0];var axes=__left0__[1];
var b=[[0,0,0],[0,0,0],[0,0,0]];
var p=random.randint(0,j);
sum(function(){var __accu0__=[];for(var i=0;i<n;i++)__accu0__.append(max(function(){var __accu1__=[];for(var i=0;i<5;i++)__accu1__.append(die().roll_until(6));return py_iter(__accu1__)}()));return py_iter(__accu0__)}())/float(n);
df.addCallback(results,__kwargtrans__({py_name:py_name}));
list(range(f,L+1));
tokenize.untokenize(res);
json.dumps(value);
list1+list2;
zerolistmaker(4);
time.sleep(2);
var __left0__=np.histogram(X,__kwargtrans__({bins:50,density:true}));var counts=__left0__[0];var bins=__left0__[1];
df.reindex(index,__kwargtrans__({fill_value:0}));
self.transport.write(towrite);
var result=function(){var __accu0__=[];for(var v of vs)__accu0__.append(dict([[k,v]]));return __accu0__}();
tornado.ioloop.IOLoop.instance().start();
var line=line.py_split();
self.text.pack(__kwargtrans__({expand:YES,fill:BOTH}));
df[ws]=pd.read_excel(excelFile,__kwargtrans__({sheetname:ws,parse_cols:c}));
my_list.append(json.loads(line));
os.mkdir(dirname);
var data=b.getvalue();
db.run_in_transaction(_tx);
main.py;
export var gaz_instance=foo.gaz();
print(r.text);
print(len(points));
axes.__getitem__([-1,-1]).set_xlim(xlimits);
export var my_nullable_string=models.CharField(__kwargtrans__({max_length:15,null:true,blank:true}));
py_iter(self.books.py_values());
var d=dict({});
self.panel.Bind(wx.EVT_MOTION,self.OnMouseMove);
getattr(self.ham,py_name);
var today=date.today();
loop.run_until_complete(main());
User.drop_collection();
var a=np.arange(10);
var msg=conn.recv();
export var modes=list(takewhile(function __lambda__(x_f){return x_f[1]==mostfreq[0][1]},mostfreq));
dict(function(){var __accu0__=[];for(var k of py_keys.py_split())__accu0__.append(tuple([k,dikt[k]]));return py_iter(__accu0__)}());
df;
gca().set_axis_off();
new set([new set([field.label_tag])]);
df.head();
any(map(s.__contains__,substring_list));
painter.drawLine(x1,y1,x2,y2);
var results=[];
draw();
var P=np.zeros(tuple([N,N]),__kwargtrans__({dtype:int}));
var user=Channel;
fp.close();
var html=html.format(__kwargtrans__(d));
print(gmpy2.sqrt(2));
print(sp.stdout.read());
sys.exit(app.exec_());
var PROJECT_ROOT=abspath(os.path.dirname("./P2JSnippets.py"));
var df=pd.DataFrame(d);
print(np.all(a0==a1));
a_button.pack();
source.gruntfile.coffee;
source.gulpfile.coffee;
var html=requests.py_get(url).text;
self._concordance_index.print_concordance(word,width,lines);
mousemove(int(currentpos.x),int(currentpos.y));
export var list_dictionaries=function(){var __accu0__=[];for(var x=0;x<100;x++)__accu0__.append(random_dict());return __accu0__}();
self.c.add_section(SERV_SECTION);
export var dict_writer=csv.DictWriter(f,__kwargtrans__({fieldnames:fieldnames}));
cv2.drawContours(cimg,contours,i,__kwargtrans__({color:255,thickness:-1}));
var options=parser.parse_args(py_arguments);
var inputs=list(it.product([0,1,2],[0,1,2]));
_winapi.CreateJunction(source,target);
doSomething(x,i,j);
insert(cur[list[0]],list.__getslice__(1,null,1),value);
set_spyder_echo(false);
print(func.__name__);
l2.append(i);
i+=1;
merged_list.py_sort();
true;
var labels=np.array([[1,1,1,0,0]]).transpose();
var __left0__=numpy.loadtxt(itertools.chain(f1,f2));var x=__left0__[0];var y=__left0__[1];export var rho=__left0__[2];export var phi=__left0__[3];
self.__pList.append(Person(py_name,number));
do_something();
pygame.font.init();
time.sleep(2);
Foo.square(2);
dialog.show();
var s=socket(...args,__kwargtrans__(kw));
do_something(a1,a2,b);
sum(function(){var __accu0__=[];for(var k of lst)if(__in__(k,dct))__accu0__.append(dct[k]);return py_iter(__accu0__)}());
f(x);
parent.kill();
json.dumps(ids_list);
copy;
a[subset_b]+=2;
channel.send(command);
print(list(kwargs.py_keys()));
out.__setitem__([tuple([0,null,1]),tuple([0,null,1]),tuple([na,null,1])],b);
print(df[val_cols].max());
f.close();
cmd.Cmd.__init__(self);
B.__init__(self,z);

export var meta=MetaData(__kwargtrans__({bind:engine}));
self.browser.open(url);
channel.queue_declare(__kwargtrans__({queue:queue_name}));
var driver=webdriver.Firefox();
plt.show();
dis.dis(add_url_rule);
var df2=df2.reset_index();
df.dtypes;
list(range(len(list1)));
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
(function(){var __accu0__=[];for(var [idx,item]of enumerate(seq))if(__in__(item,seen)||seen_add(item))__accu0__.append(idx);return __accu0__})();
do_something_else();
x+=np.random.normal(__kwargtrans__({loc:0,scale:.1,size:200}));
var root=tree.getroot();
self.server.running=false;
p.save();
print(generate_list(100));
var foo=np.random.rand(20).cumsum();
print(df);
pd.to_numeric(s);
root.mainloop();
mvv_list[0];
export var expanded=list(chain(...zip(...tee(l,n))));
admin.site.register(Car,CarAdmin);
var __left0__=map(str,tuple([a,b,c]));var sa=__left0__[0];var sb=__left0__[1];var sc=__left0__[2];
handlers.append(HTTPSClientAuthHandler(somekey,somecert));
sys.exit(ret);
print(len(cycles));
var ax=f.add_subplot(1,1,1);
take(4,iterate(function __lambda__(x){return x+[len(x)+1]},[1]));
a.multiply(nmask);
stream.seek(0);
root.py_clear();
export var SettableParity=TRUE;
var x=test();
p.stdin.write(someInput);
csvout.writerows(function(){var __accu0__=[];for(var _=0;_<count;_++)__accu0__.append(row.__getslice__(2,4,1));return __accu0__}());
prices.__getslice__(0,-1,1).py_values/prices.__getslice__(1,null,1)-1;
do_something();
imp.reload(scriptname);
sess.run(m1);
self.thread.join();
random.shuffle(x);
q.join();
print(a.compressed());
tuple([deletex,y]);
pd.to_datetime(out_ar);
btn.grid(__kwargtrans__({row:row_index,column:col_index,sticky:N+S+E+W}));
var b=[[],[]];
fp.close();
export var vc=cv2.VideoCapture(0);
var py_values=function(){var __accu0__=[];for(var item of array)__accu0__.append(max(item));return __accu0__}();
any(function(){var __accu0__=[];for(var el of a)__accu0__.append(__in__(el,sb));return py_iter(__accu0__)}());
export var imclip=tuple([np.min(Zexact),np.max(Zexact)]);
repr(self.__dict__);
eav.register(Patient);
var A=np.arange(16).reshape(4,4);
var s=QtCore.QString();
export var painter=QtGui.QPainter(self);
instance.uuid=uuid.uuid4();
f.seek(-1,os.SEEK_CUR);
plt.subplots_adjust(__kwargtrans__({left:.1,right:.9,top:.9,bottom:.1}));
root.mainloop();
self.py_update(dict([[element.tag,dict(list(element.py_items()))]]));
print(cls.x);
indices[elem].append(i);
export var dbobject=mymodel.objects.all();
generator()===generator();
logging.basicConfig(__kwargtrans__({level:logging.INFO}));
print(counter[0]);
collections.deque(iterator,__kwargtrans__({maxlen:0}));
pixels.__setitem__([i,j],data[i][j]);
var imgplot=plt.imshow(lum_img);
export var adrlist=function(){var __accu0__=[];for(var word of adr.py_split())__accu0__.append(word.isdigit()?word:soundex(word));return __accu0__}();
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
var model=QStandardItemModel();
var tree=et.parse(datafile);
print(df[df.apply(function __lambda__(x){return __in__(x.A,x.B)},__kwargtrans__({axis:1}))]);
var root=Tk();

__mod__(self.bar,2)==0;
export var Sig1=np.cov(d1.__getitem__([tuple([0,25,1]),tuple([0,4,1])]).T);
print(pp.pformat(my_dict));
logging.Handler.__init__(self);
vbl.addWidget(self.fc2);
np.vstack(tuple([a,b,c]));
c.setCompletionMode(QtGui.QCompleter.UnfilteredPopupCompletion);
set(zip(df.number,df.letter));
request.args.getlist(key);
isinstance(result,collections.Sequence);
dst_im.paste(rot,tuple([50,50]),rot);
export var keys_a=set(dict_a.py_keys());
print(list(compress(A,B)));
sess.run(apply_placeholder_op,__kwargtrans__({feed_dict:feed_dict}));
sys.argv.__setslice__(0,null,null,sys.argv.__getslice__(1,null,1));
self.figure.set_edgecolor(tuple([1,1,1]));
ax.set_xticks(list(range(position+1)));
np.log(a)+b*np.log(x)+c*np.log(y);
var ax=plt.gca();
plt.axvline(__kwargtrans__({x:.5}));
self.connect(tuple([server,server_port]));
var path=list(backwalk(predecessor_map,destination,origin));
var sess=tf.Session();
var n=ctypes.c_int(x.shape[1]);
py_typeof(a.get_value());
str(self.id);
var d=np.random.randn(1E3,1);
open_tags.insert(0,tagname);
dict[key]=value;
sys.exit(1);
plt.title(v);
export var is_binary=false;
self.member_names.append(key);
ax.set_ylim(0,15);
d.toJSON();
list(accumulate(lis));
some_list[0]===some_list;
obj.save(__kwargtrans__({force_insert:true}));
x[0];
some_func(something);
func();
p._set_cloexec_flags(p.stdin);
export var oauth_token=models.CharField(__kwargtrans__({max_length:200}));
existing.merge_result(function(){var __accu0__=[];for(var task of taskdata)__accu0__.append(task_from_json(slug,__kwargtrans__(task)));return __accu0__}());
fig.subplots_adjust(__kwargtrans__({hspace:1E-5}));
ax.set(__kwargtrans__({xticks:np.linspace(0,10,6),yticks:np.linspace(0,10,6)}));
var y=tf_spiky(x);
fd.close();
var x=x+1;
var root=Tk();
var x=np.random.rand(N);
denormalized_rgb_color;
print(json.dumps(result,__kwargtrans__({indent:4})));
df.groupby((df.Grp!=df.Grp.shift()).cumsum()).Nums.groups;
var url=models.URLField();
var a=conn.cursor();
export var myStrList=function(){var __accu0__=[];for(var x of myList)if(isinstance(x,str))__accu0__.append(x);return __accu0__}();
export var mX=np.concatenate(tuple([intercept,mX]),__kwargtrans__({axis:1}));
var list=[[]]*2;
var __left0__=tuple([i+1,j+1]);var i=__left0__[0];var j=__left0__[1];
var g=nx.Graph();
Record.objects.filter(__kwargtrans__(my_queryset_filters));
ax.pcolor(T,R,Z);
cmd();
round_up_to_even(2.25);
print(r.shape);
var t=datetime.datetime.today();
self.axes.scatter(self._x_data,self._y_data,__kwargtrans__({picker:5}));
var p=p.add(1).cumprod();
matplotlib.pyplot.scatter(n.predict(nfeatures),targets);
var path=os.path.abspath(os.path.expanduser(path));
print(tuple([x,y,element]));
var __except0__=ValueError();__except0__.__cause__=null;throw __except0__;
triples.append(tuple([i,j,k]));
bool.mro();
py_next(itercars);
a.fly();
os.makedirs(dst);
var sess=tf.InteractiveSession();
foo.start();
new set([0,0,1,1,0,0,0,0,0,0,1,0,1,1,1,0,1,0,1,1,0,0,0,1,1,0]);
p1*np.cos(p2*x)+p2*np.sin(p1*x);
len(self.directory);
loop.run_until_complete(asyncio.gather(...tasks));
export var movie=models.ForeignKey(Movie,__kwargtrans__({blank:true,null:true}));
Page.query.filter_by(__kwargtrans__({py_name:py_name})).first();
n*s+0*s==(n+0)*x&&(n+0)*x==n*s;
job.join();
var length=len(string);
dictonary[k].append(i);
browser.set_handle_robots(false);
export var integer_timestamp=Math.floor((dt-epoch)/timedelta(__kwargtrans__({seconds:1})));
export var pagehandle=urllib.request.urlopen(theurl);
sys.exit(0);
var a=fig.add_subplot(2,2,i);
var im=Image.open(file_path);
print(repr(Dump(1245427)));
client.load_system_host_keys();
console.setLevel(logging.DEBUG);
str(datetime.timedelta(__kwargtrans__({hours:10.56})));
mpu.complete_upload();
a.__setitem__([1,1],np.nan);
print(a,b,c);
export var melt_first_half=pd.DataFrame(first_reps.py_values,__kwargtrans__({columns:col_names}));
seen.add(item);
patches.append(mpatches.Wedge(center,we.r,we.theta1,we.theta2));
var cur=conn.cursor();
A();
bool([]);
cp.close();
response(environ,start_response);
fcntl.fcntl(fd,fcntl.F_SETFL,flags|os.O_NONBLOCK);
plt.step(Xs,n);
var root=Tk();
var soup=BeautifulSoup(html);
main();
os.rename(self.dest,self.src);
a[i]=5;
py_values.append(elem.text);
export var arr_y=arr.__getitem__([np.newaxis,np.newaxis,tuple([0,null,1]),tuple([0,null,1]),tuple([0,null,1])]);
print(f);
var metadata=Base.metadata;
self.close();
sftp.py_get(file,os.path.join(localPath,file));
print(list(divisorGenerator(100)));
var __left0__=np.histogram(data,__kwargtrans__({bins:50}));var hist=__left0__[0];var bins=__left0__[1];
var __left0__=tuple([i[a],i[b]]);i[b]=__left0__[0];i[a]=__left0__[1];
var arr=np.random.random_integers(5,__kwargtrans__({size:tuple([N_rows,12])}));
print(list(group));
inspect.getsource(_);
di[key].append(value);
print(lst[-1]);
export var model_name=self.base_field.model_name;
lst.append([1]);
getattr(self._decoratee,py_name);
binary_f(function __lambda__(v){return works(v)!=val0},list);
beaker.session.key=appname;
export var divider1=make_axes_locatable(ax1);
self.ui.setupUi(self);
var result=np.abs(diff);
var A=np.arange(5*7).reshape(tuple([5,7]));
count+=1;
print(repr(cell));
glFlush();
cls.initialized=true;
NotImplemented;
var s=cStringIO.StringIO();
print(q.py_get());
append(Button(i));
thread.start();
frame.show();
str(d);

var fig=plt.figure();
main();
index.append([keyword,[url]]);
text.py_split();
t[v]=t[2*v]+t[2*v+1];
export var survival_table=pd.Series(__kwargtrans__({index:multi_index}));
self.current+=1;
edge_list.py_update([tuple([x,a]),tuple([a,b]),tuple([b,x])]);
grammar.load();
var contents=f.readlines();
export var new_im=f(new_x,new_y);
(b.x-a.x)*(c.y-a.y)==(c.x-a.x)*(b.y-a.y);
r.render();
np.sum(~a);
x.subs(ordereddict.OrderedDict([tuple([y,z]),tuple([x,y])]));
var addr=ctypes.addressof(a);
exit();
user.save();
var content_type=models.ForeignKey(ContentType,__kwargtrans__({null:true}));
var result=[];
fig1.show();
var a=random.randint(1,b-1);
self.members[i]=NULL;
[198.40560401][198.4049081][198.4056042];
[7917.75662561][7917.75682048][7917.75662578];
[6056.87496151][6056.87452659][6056.87496175];
sum(my_sparse_matrices.__getslice__(1,null,1),my_sparse_matrices[0]).todense();
round(float(self)/other);
tuple([int(value),true]);
Variance(X).doit();
export var postdata=request.body.read();
socket.inet_aton(addr);
os.rename(self.src,self.dest);
time.sleep(num);
var b=random.randint(5,20);
np.random.seed(42);
self.config(__kwargtrans__({menu:menubar}));
export var my_cmap=ListedColormap(flatui);
var myclass=MyClass();
plt.bar(his[1].__getslice__(1,null,1),his[0],__kwargtrans__({width:1}));
m.drawcounties();
np.minimum(a,255,a);
py_values[quality<threshold]=value;
print(i);
pylab.plot(y);
ax.set_yticks(np.arange(0,6,1));
c[tuple(x)]+=1;
var out=np.empty(tuple([A.shape[1],b.shape[1]]));
var fig=plt.figure();
myprocess.wait();
var p1=ctypes.c_int(1);
tuple([float(m.group(0)),pos+m.end()]);
var files=os.listdir(path);
print(response.read());
var d=np.empty(a.shape[0]);
arr.append([]);
a.__getslice__(0,5,-1);
l.add(2);
queue.put(ii);
socket.inet_pton(socket.AF_INET,domain);

t.start();
var c=MyClass();
ser[len(ser)]=ser.iloc[-1];
db.put(counter);
var im=Image.open(infile);
self._s.setblocking(0);
doc.Close();
var df=pd.DataFrame(np.random.random(tuple([5,5])));
plt.show();
var d=datetime.date(2015,1,5);
export var sorted_list=sorted(list(myDic.py_items()),__kwargtrans__({key:function __lambda__(x){return x[0]}}));
print(data.getvalue());
export var answerlist=[];
label.show();
jpeg.read(2);
FinalList.append(set(x));
set(rhymes);
ax.yaxis.set_label_coords(...axcoords);
var ax=fig.add_subplot(111);
(function(){var __accu0__=[];for(var item of list(d1.py_items()))if(item[1]==55)__accu0__.append(item[0]);return __accu0__})()[0];
export var dString=json.dumps(d);
setup.py;
print(cutit(py_name,2));
self.assertEqual(v1,v2,msg);
var x=np.array([1,1,1,2,2,2,5,25,1,1]);
var parser=argparse.ArgumentParser();
A.__class__=np.ndarray;
export var formatted_json=json.dumps(obj,__kwargtrans__({sort_keys:true,indent:4}));
tuple([__import__,tuple([module.__name__])]);
User.__table__.create(migrate_engine);
var filtered=function(){var __accu0__=[];for(var word of input)__accu0__.append(strip_punctuation(word));return __accu0__}();
time.sleep(.1);
var d=list(data);
var B=[4,5,6];
var hxs=HtmlXPathSelector(response);
print(my_func0(1,2));
var x=4;
w.show();
frame.pack();
var a=np.random.rand(l,n,m);
var x=function(){var __accu0__=[];for(var [k,v]of groupby(data,function __lambda__(x){return x<0}))__accu0__.append(list(v));return py_iter(__accu0__)}();
reactor.stop();
plt.ylim(-2.5,6);
var now=datetime.now();
lis.append(function __lambda__(){return 2});
var element=WebDriverWait(driver,secs).until(find);
(function(){var __accu0__=[];for(var key of mydict)__accu0__.append(mydict[key]);return py_iter(__accu0__)})();
var objects=function(){var __accu0__=[];for(var id of ids)__accu0__.append(object_map[id]);return __accu0__}();
print(dns.__repr__(),dns.qd[0].py_name);
conn.send(data);
print(sub_tree.childNodes);
var df=pd.concat(chunks);
serversocket.bind(tuple([socket.gethostname(),7557]));
var list_of_tuples=[tuple([1,2]),tuple([4,5])];
(function(){var __accu0__=[];for(var c of s2)__accu0__.append(c);return __accu0__})();
export var video1=cv.CaptureFromCAM(0);
counter[word]+=1;
curses.endwin();
ls[0]+listSum(ls.__getslice__(1,null,1));
img.load();
out.reshape(cols,rows).T;
oftype[item.__class__].append(item);
venus_thread.start();
earth_thread.start();
mars_thread.start();
excel.Application.Quit();
decor;
_quicksort(array,pivot+1,end);
initialize_db.py;
any(tuple([a+b==c,a+c==b,b+c==a]));
export var currT=glfw.GetTime();
admin.site.unregister(User);
var a=datetime.datetime.now();
df.dtypes;
var ip=self.request.remote_addr;
tuple([vertices,np.hstack(tuple([bary,1-bary.sum(__kwargtrans__({axis:1,keepdims:true}))]))]);
var mylist=list(range(1E4));
new_user.save();
f.close();
var fig=plt.figure();
comments.extract();
image.save(output);
signal.signal(signum,receive_signal);
tf.Variable(initial);
f.close();
out.write(prg);
_base.py;
var app=Flask(__name__);
export var myqserver=Qserver();
x.append(5);
tuple([X,Y]);
printArray(data,m,n);
a.append([]);
var new_body_text=re.sub(pattern,make_footnote_counter(),text);
self.setPlainText(text);
C.run();
var api=tweepy.API(auth);
cv2.waitKey();
session.add(question);
func(...args,__kwargtrans__(kwargs));
plt.gcf().add_subplot(421);
np.concatenate(tuple([[88],a,[77]]));
len(function(){var __accu0__=[];for(var [k,_]of groupby(a))if(k==1)__accu0__.append(k);return __accu0__}());
var suite=unittest.TestSuite();
var __left0__=the_string.py_split();var py_name=__left0__[0];var age=__left0__[1];
var d=dict(__all__);
var ax=fig.add_subplot(111);
log.err();
print(list(l));
f.close();
edge_list.py_update([tuple([a,x]),tuple([x,b]),tuple([b,a])]);
(function(){var __accu0__=[];for(var x of subsequences)if(len(x)>=min_length)__accu0__.append(x);return __accu0__})();
do_something(wrapped_dictionary[key]);
var delta=(mdate1-rdate1).days;
response.body=json.dumps(error_dict);
df;
self.initial.py_update(form.initial);
testCount();
repr(key);
s.setblocking(0);
ax[1].legend(__kwargtrans__({handles:[b1,b2]}));
export var decreasing_max_precision=np.maximum.accumulate(precision.__getslice__(0,null,-1)).__getslice__(0,null,-1);
foo.main();
var now=datetime.now();
export var SUBDIRS=src;
list_of_substrings;
10*np.cos(x*2*np.pi*cycle);
s.append([number]);
L.append(li);
var extension=os.path.splitext(os.path.splitext(filename)[0])[-1].lower();
print(foo,foo.bar);
print(data);
poll_twitter();
asps.append(file);
self.add_widget(Cell(i));
fo.write(line);
inds[mask][max_index];
var now=datetime.now();
export var class_instance=Class1();

export var rtn=template.render(__kwargtrans__({request:self.request}));
var out=np.argsort(reference)[pos];
time.sleep(pollinterval);
self.autocomplete(1);
export var dWOut=np.zeros(tuple([X.shape[1],flag.shape[1]]));
export var pdf_path=os.path.abspath(os.path.join(DOC_ROOT,filename));
ctypes.memset(data,0,size.value);
os.kill(p.pid,1);
bins.insert(0,0);
var data=json.dumps(data);
py_typeof(Foo.spam);
new set([new set([localtime(item.date)])]);
f.write(new_txt);
var lines=f.readlines();
frozenset(function(){var __accu0__=[];for(var p of l)__accu0__.append(frozenset(p));return py_iter(__accu0__)}());
export var legs=legs[0];
export var emptydict=dict({});
index.date;
[job2];
export var LOOKNEXT=true;
export var fee=models.DecimalField();
var list1=function(){var __accu0__=[];for(var k of commons)__accu0__.append(dict1[k]);return __accu0__}();
print(str.isalpha.__doc__);
writer.writerow([req.date,req.time,req.user]);
export var xcenters=xchunks.mean(__kwargtrans__({axis:1}));
print(a,f,b);
conn.close();
var r=random.randint(0,100);
self._whatever;
session.add(i0);
sleep(2);
WSGIHandler();
var __except0__=ValueError(bcp_identifier);__except0__.__cause__=null;throw __except0__;
export var absfn=os.path.join(root,fn);
export var book_id=Column(Integer,__kwargtrans__({primary_key:true}));
var __left0__=ax.get_legend_handles_labels();var handles=__left0__[0];var labels=__left0__[1];
scipy.stats.norm(0,1).pdf(0);
print(age.total_seconds());
s.send(msg);
var ax=fig.add_subplot(1,1,1);
var frame=inspect.currentframe();
var opt=tf.train.AdamOptimizer(self.learning_rate);
lst[idx-p];
dill.detect.badtypes(f,__kwargtrans__({depth:1}));
var df=pd.DataFrame(dict(__kwargtrans__({amount:[0,1]*10})));
pipeline.set_state(gst.STATE_NULL);
setattr(self,key,kwargs[key]);
var out=input[binary_matrix.ravel()[idx.__getitem__([tuple([0,null,1]),0])*lat_len+idx.__getitem__([tuple([0,null,1]),1])]==1];
data.append(tag.next_sibling.string);
print(nx.pagerank(G,__kwargtrans__({max_iter:200})));
factors(n);
print(df);
isinstance(P,tuple([list,tuple,np.ndarray]));
scheduler.enqueue_in(timedelta(__kwargtrans__({hours:6})),after_6_hours);
x+y;
sum(x);
self.setItemIndexMethod(QtWidgets.QGraphicsScene.NoIndex);
h.close();
np.triu(np.outer(x,x),__kwargtrans__({k:1})).sum();

var coords=list(function(){var __accu0__=[];for(var x=0;x<100;x++)for(var y=0;y<100;y++)__accu0__.append(tuple([x,y]));return py_iter(__accu0__)}());
getattr(actuator,attr_name);
var fig=plt.figure();
order_by(Article.created.desc()).limit(7);
mylist.__setslice__(0,null,null,map(func,mylist));
var X_train=X[train_indices];
print(function(){var __accu0__=[];for(var s of axarr[0].get_xticklabels())__accu0__.append(s.get_text());return __accu0__}());
export var ybnds=np.array([-20,20]);
map(operator.sub,a,b);
self.md5.digest();
tuple([[0,1,0,1]]);
mac.upper();
pp.show();
ax2.set_xticks(X2tick_location);
var session=smtplib.SMTP(server);
im.set_extent(tuple([-5,5,-5,5]));
os.remove(filename);
deleteself[i];
map(function __lambda__(x,y){return x+y},a,b);
var result=function(){var __accu0__=[];for(var s of data)if(len(s)==len(data[0]))__accu0__.append(s);return __accu0__}();
var val=hex(val);
var email=models.CharField(__kwargtrans__({max_length:100}));
df.head();
self.canvas.delete(self.zimg_id);
channel.close();
frame.update_idletasks();
deleteresponses[-1];
var pairs=function(){var __accu0__=[];for(var i=0;i<n;i++)for(var j=i+1;j<n;j++)__accu0__.append(tuple([i,j]));return __accu0__}();
s.send(tsr.encode());
var d=defaultdict(function __lambda__(){return-1},d);
fn(...args,__kwargtrans__(kwargs));
self.treeview.expand_all();
var input=raw_input;
main();
str(bin(7)).__getslice__(2,null,1);
s.__getslice__(last_index+1,null,1);

abs(1-2);
screen.blit(my_image,position);
QtGui.QWidget.__init__(self,parent);
logging.FileHandler.emit(self,record);
Thread(__kwargtrans__({target:startProcess})).start();
time.sleep(wait_time);
conn.close();
export var cx1=np.random.random_integers(0,size-2);
var mod=imp.load_source(py_name,path);
self.panel.Bind(wx.EVT_LEFT_UP,self.OnMouseUp);
var result=function(){var __accu0__=[];for(var l of a)__accu0__.append(sum(l));return __accu0__}();
c[tuple(x)]+=1;
sys.exit(app.exec_());
export var per=float(tota)*(100/500);
self.deletes.add(obj);
t.start();
a[np.where(a.__getitem__([tuple([0,null,1]),-1]))];
page.mergePage(new_pdf.getPage(0));
print(d[1]);
print(valids?max(valids):false);
var fig=plt.figure();
var opener=urllib.request.build_opener(auth_handler,NoOpHandler());
export var html_text=f.read();
cosx*signx;
export var deduped=set(lst_as_sets);
var x=function(){var __accu0__=[];for(var _=0;_<5;_++)__accu0__.append(np.random.random(tuple([10,10])));return __accu0__}();
log_file.write(line);
export var activity=models.CharField(__kwargtrans__({max_length:250}));
atexit.register(module.deinit);
var m=X.mean(__kwargtrans__({axis:1})).reshape(-1,1);
timer.start();
A[idx];
export var all_matches=numpy.unique(numpy.array(dates).flatten());
pylab.draw();
cv2.circle(cimg,tuple([i[0],i[1]]),i[2],tuple([0,255,0]),2);
i.scheduled();
worker.join();
main();
new set([new set([content|safe])]);
export var sentences=tokenizer.tokenize(paragraph);
matplotlib.axes.Axes.__init__(self,...args,__kwargtrans__(kwargs));
found.difference(expected);
var layout=QVBoxLayout(self);
var d=os.path.join(dir,d);
sizer.Add(self.cb,0,wx.ALL,5);
export var ddtstart=datetime.datetime.now();
xlim([-6,6]);
grequests.map(rs);
a[b!=0];
Base.metadata.create_all(e);
var points=np.array([[-2,-2],[2,0],[-1,2]]);
var coords=zip(a.ravel(),b.ravel());
var result=cv2.matchTemplate(img,template,cv2.TM_CCORR_NORMED);
sys.exit();
var M=np.matrix([[2,2,2,2],[2,2,-2,2],[2,2,2,2],[2,2,2,1]]);
self.driver=webdriver.Firefox();
session.commit();
s.sendmail(me,[you],msg.as_string());
var im=Image.fromarray(rescaled);
array([27,26,26,26,27,26,26,26,26,27]);
print(workdaycount(date(2011,8,15),date(2011,8,22)));
logging.basicConfig(__kwargtrans__({level:logging.INFO}));
var v=function(){var __accu0__=[];for(var i=0;i<len(t)-1;i++)__accu0__.append(t[i+1]-t[i]);return __accu0__}();
form.save();
sudo(command);
ctx.fill_preserve();
today.weekday();
var x=someModule.someClass(list(range(1,5)));
np.apply_along_axis(multi_slice_max,1,cond,arr);
s.shutdown(socket.SHUT_WR);
g.LgRnk.apply(function __lambda__(x){return x/len(x)});
var p=multiprocessing.Process(__kwargtrans__({target:csvreader,args:tuple([string_array[i],q])}));
atomized;
var py_name=models.CharField(__kwargtrans__({max_length:50}));
process.send_signal(signal.SIGINT);
olist.append(otest);
[iplocationc];
c.__class__.__mro__;
export var cdf=np.cumsum([0,.02,.08,.16,.29,.45]);
var ax=axes([.1,.1,.8,.8]);
var g=g.sortlevel();
self.beta=tf.Variable(tf.constant(0,__kwargtrans__({shape:[depth]})));
apps.get_models();
virtualenv/home/my_envs/env_for_projectname;
[[1],[1,2]];
im.set_clim([0,1]);
print(key,value);
var img=Image.open(picture);
pdb.set_trace();
export var idxNan=np.isnan(a[item]).nonzero();
plt.figure(1);
var res=opener.open(req);
export var gradst=tf.reshape(gradsp,__kwargtrans__({shape:tuple([shapey[0],shapey[1],shapex[0],shapex[1]])}));
plt.legend(__kwargtrans__({handles:[NA,EU,AP,SA],loc:2}));
var h=ax.hist2d(x,y,__kwargtrans__({bins:40,norm:LogNorm()}));
paint();
mp.active_children();
my_companion.close();
export var table_name=Column(String(50),__kwargtrans__({unique:true}));
tuple([[0,0,0,17,0,0,0,40,0,0,0,40,0]]);
pprint(list(ws.iter_rows()));
self.driver=webdriver.Firefox(self.profile);
var cursor=connection.cursor();
sys.exit(NO_PYTHON_LIBRARY_ERROR);
export var jStr=json.loads(jsonString,__kwargtrans__({strict:false}));
axx.xaxis.set_major_locator(ticker.FixedLocator([xx]));
list(zip(a,itertools.cycle(b)));
subprocess.Popen([python_bin,script_file]);
instance.some_method(data);
other_object.add(obj);
print(list(interleave(range(1,5),range(5,10),range(10,15))));
Mixin.__init__(self);
thread.run();
self.c.set(SERV_SECTION,SERV_NAME,SERV_NAME_DEFAULT);
ax1.plot(xvals,data);
var data=models.HStoreField(__kwargtrans__({db_index:true}));
var handler=logging.StreamHandler(sys.stdout);
re.sub(pattern,repl,text,__kwargtrans__({flags:re.DOTALL}));
self.model.transform(X,self.threshold);
run(command);
track.duplicateTo_(newPlaylist);
run_wsgi_app(application);
var p=pyaudio.PyAudio();
ax1.yaxis.set_major_formatter(fmt);
self.factory._send(data);
var c=np.empty(tuple([a.size+b.size]),__kwargtrans__({dtype:a.dtype}));
var matrix=ss.coo_matrix(tuple([ones,tuple([rows,cols])]));
print(function(){var __accu0__=[];for(var y of new_strs)__accu0__.append(id(y));return __accu0__}());
var ax=fig.add_axes([.15,.15,.7,.7]);
PyMouseEvent.__init__(self);
pyrodaemon.shutdown();
show();
self.list_of_tweets=[];
var i=i+1;
output.append(list.__getslice__(prev,index,1));
callthecommandhere(blablahbla,filename,foo);
plt.xticks(np.arange(0,25,5),[0,25,50,75,100]);
checkDict(subword);
export var white=np.array([255,255,255]);
pd.DataFrame(records,__kwargtrans__({columns:list(columns.py_keys())}));
out.write(fixed);
var a=TestB();
cls.__init__=instrumented_init;
num_seen.py_setdefault(v,[]).append(k);
var p1=N*np.dot(B.T,A);
log.start();
random.sample(randset,100);

server.quit();
var __left0__=tuple([x+dx,y+dy]);var x=__left0__[0];var y=__left0__[1];
export var K=np.array(function(){var __accu0__=[];for(var i=0;i<n;i++)if(i!=r&&i!=s)__accu0__.append(i);return __accu0__}());
nf.close();
var fig=plt.gcf();
dict.__setitem__(self,key,val);
var application=QtGui.QApplication(sys.argv);
timeit(set(a).intersection(b));
deletelst[i];
var b=a.__getitem__([tuple([0,null,1]),idx]);
export var _marker_key=db.Column(db.Integer,__kwargtrans__({primary_key:true}));
print(sample.collect());
list(string.Formatter().parse(s));
all_pixels.append(0);
export var format_to_year_to_value_dict=defaultdict(function __lambda__(){return defaultdict(list)});
exit(0);
export var set_of_all_items=set(list_of_all_items);
df.div(df2.iloc[0]);
main();
self.client.set_missing_host_key_policy(paramiko.AutoAddPolicy());
conn.send(msg);
var t=zip(a,b,c);
final_ensemble.n_estimators=len(final_ensemble.estimators_);
print(repr(fin.readlines()));
var result=mygetter(tup);
self.py_name;
var ax=fig.add_subplot(1,1,1);
plt.contour(X,Y,F-G,[0]);
user.Getinfo();
var d=defaultdict(list);
mercury.circle(58,1);
int(binary,2);
fcs.append(tuple([random.random(),random.random(),random.random(),.6]));
pdb.set_trace();
axes.__getitem__([0,1]).set_ylim(0);
random.seed();
glEnable(GL_POLYGON_SMOOTH);
self.grid_1=wx.grid.Grid(self.window_1,-1,__kwargtrans__({size:tuple([1,1])}));
ax.set_title(str(temp));
var user=fields.ForeignKey(UserResource,user,__kwargtrans__({full:true}));
__all__.py_setdefault(py_name,[]);
print(pwd.getpwuid(os.getuid()));
patcher.stop();
t.run();
export var something=fgn.Class1();
self.canvas.draw();
of.write(l);
(function(){var __accu0__=[];for(var word of words)__accu0__.append([word,list(neighbours(word))]);return dict(__accu0__)})();
sys.exit(app.exec_());
stdout_redirected(__kwargtrans__({to:sys.stdout,stdout:sys.stderr}));
var client=oauth.Client(consumer);
print(i0.id);
time.sleep(.5);
list.__setitem__(self,key,value);
var out=function(){var __accu0__=[];for(var k of sorted(d.py_keys()))__accu0__.append(d[k]);return __accu0__}();
print(paths[2][6]);
app.MainLoop();
print(item);
export var date_registered=date.today()-timedelta(__kwargtrans__({days:1}));
var __left0__=fsolve(equations,tuple([1,1]));var x=__left0__[0];var y=__left0__[1];
tuple([pd.MultiIndex.from_product([letters,letters])]);
var s=pd.Series(np.arange(10));
matplotlib.pyplot.scatter(Xs,Ys.flatten(),__kwargtrans__({color:cs}));
s+=random.randint(1,y);
sock.settimeout(10);
cosetCoding.cosetCoding(10,11,asarray([0,0,0,0,0,0,0,0]),0);
writer.UpdatePipeline();
df;
__mod__(10-__mod__(s,10),10);
self.data[key]=value;
np.savez(filename,__kwargtrans__({row:row,col:col,data:data,shape:shape}));
s.__getslice__(offset,offset+amount,1);
window.show_all();
var j=json.loads(your_json);
mutex.acquire();
var query=urlparse.parse_qs(url.query);
new set([new set([companyForm.company_name()])]);
dict(new_d);
plt.show();
sys.stdout=sys.__stdout__;
post_save.connect(Activity.cancellation_occurred,__kwargtrans__({sender:Cancellation}));

var kOUT=kOUT.tolist();
session.add(f);
print(s.groupby([Math.floor(s.index/k)]).mean());
outFile.close();
var foo=POINTER(temp_foo);
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
f2.write(Lines[i+2]);
isinstance(s,str);
help(str.find);
export var split_point=int(im.shape[1]/5);
Thread(__kwargtrans__({target:read_stderr,args:[process]})).start();
print(exceptions.html_error_template().render());
myarray[myindexlist];
var __left0__=plt.subplots(1,4,__kwargtrans__({figsize:tuple([10,5])}));var fig=__left0__[0];var axes=__left0__[1];
zip(itertools.repeat(prefix),iterable);
var x=random.randrange(box[0][0],box[1][0]);
ax.yaxis.set_major_formatter(tick.FuncFormatter(adjust_y_axis));
os.path.join(self.path,filename);
f(...args,__kwargtrans__(kwargs));
cv.Threshold(grey_image,grey_image,70,255,cv.CV_THRESH_BINARY);
f;
ndimage.map_coordinates(data,[zi,yi,xi],__kwargtrans__({cval:-999}));
E+=potential(np.sqrt(Math.pow(x[i]-x.__getslice__(0,i,1),2))).sum();
any(function(){var __accu0__=[];for(var i=0;i<len(lst)-n+1;i++)__accu0__.append(sublst==lst.__getslice__(i,i+n,1));return py_iter(__accu0__)}());
self.t1=time.time();
pyplot.hist(e_data[selected_values]);
func_py.restype=ctypes.c_double;
float(self.val);
window.show_all();
list_size_2.append(row);
var c=np.arange(24).reshape(tuple([4,6]));
window.show();
block.draw();
greet_command();
print(i,chr(i));
var c=np.hstack(tuple([a,b]));
br.set_handle_referer(true);
var req=urllib.request.Request(url);
export var pri=glrhs[0];
plt.yticks(np.arange(0,len(ax1)/r-.1,1/r),ax1_ticks);
print(is_shifted_copy([1,1,2],[2,1,1]));
var ax=fig.add_axes([.05,.1,.9,.85]);
data.splitlines();
self.__class__.set_x_class(10);
var results=function(){var __accu0__=[];for(var r of results)__accu0__.append(r.py_get());return __accu0__}();
sys.exit(1);
allFoos();
var ax1=fig.add_subplot(111);
df.append(h,__kwargtrans__({ignore_index:true}));
self.old_func1=module1.func1;
dict[key]=value;
msvcrt.getch();
var y=function(){var __accu0__=[];for(var p of y)__accu0__.append(p._replace(__kwargtrans__({probability:round(p.probability,2)})));return __accu0__}();
decompressor.close();
main();
var __left0__=plt.subplots(__kwargtrans__({nrows:2,ncols:2}));var fig=__left0__[0];var axes=__left0__[1];
plt.plot(x,y2);
sys.stdout.flush();
profile.save();
plt.ylim(tuple([0,100]));
x.py_sort(__kwargtrans__({key:function __lambda__(item){return tuple([len(item),item])}}));
len(self.data);
connection.setblocking(0);
arr.tocsr();
var res=function(){var __accu0__=[];for(var k of arr)__accu0__.append(lookuplist[k]);return __accu0__}();
print(l.__getslice__(0,-1,1));
main.py;
random.shuffle(combined);
var root=tk.Tk();
obj.image.url;
s.listen(1);
print(len(main()));
var p=subprocess.Popen(some_cmd,__kwargtrans__({stdout:subprocess.PIPE,stdin:subprocess.PIPE}));
var d=dict({});
server.ehlo();
lst.py_sort();
cap.release();
plt.show();
plt.xlim(-2.5,12);
export var asset=forms.ModelChoiceField(__kwargtrans__({queryset:Asset.objects.none()}));
export var CM_tilde=np.mean(data,__kwargtrans__({axis:1}));
var __except0__=SystemExit;__except0__.__cause__=null;throw __except0__;
axes.set_ylim(0,math.ceil(max(logcdfy)));
plt.setp(labels,__kwargtrans__({rotation:0}));
n^1<<k;
models.User.query.py_get(user_id);
self.assertEqual(expected.lower(),actual.lower());
[2]+function(){var __accu0__=[];for(var i=1;i<Math.floor(n/2);i++)if(sieve[i])__accu0__.append(2*i+1);return __accu0__}();
plt.scatter(x1,y1,__kwargtrans__({label:str(pointset1)}));
var tree=function(){var __accu0__=[];for(var _=0;_<10;_++)__accu0__.append(Node());return __accu0__}();
self._fileobj.seek(oldposition,os.SEEK_SET);
cj.set_cookie(c);
fh.setLevel(logging.INFO);
plt.imshow(im);
f.write(s);
list(bucket.list());
m.digest();
var idx=np.abs(array-value).argmin();
var tree=lh.fromstring(content);
fh.setLevel(logging.INFO);
(function(){var __accu0__=[];for(var e of sel(h))__accu0__.append(e.text);return __accu0__})();
print(df1.to_csv());
fig.py_clear();
var fig=plt.figure();
setattr(self,b,button);
ax.add_artist(ell);
print(ast.literal_eval(escaped_str));
export var coordinates=list(product(range(width),range(height)));
tuple([col.domain[0].py_name,pd.Series(col.to_numpy()[0].flatten())]);
print(self.invalid_response);
myapp.show();
export var address=models.CharField(__kwargtrans__({max_length:100}));
w1.append(words[0]);
var survival_table=pd.Series(__kwargtrans__({index:make_category_multiindex(categories,names)}));
dfUnstacked2;
heapq.heappop(heap).x;
export var color_image=cv.QueryFrame(self.capture);
var cj=cookielib.CookieJar();
var CS=plt.contourf(xi,yi,zi,15,__kwargtrans__({cmap:plt.cm.jet}));
msvcrt.setmode(sys.stdout.fileno(),os.O_BINARY);
word_list.py_sort(__kwargtrans__({key:function __lambda__(i){return i[1]},reverse:true}));
self.func.__call__(...args,__kwargtrans__(kwargs));
cnxn.commit();
print(highlight(json_str,JsonLexer(),TerminalFormatter()));
var app=QtGui.QApplication(sys.argv);
export var your_json=dumps(serialized_labels);
nbrs.fit(X,Y);
new set([new set([my_model.slug_field_name])]);
var l=sorted(l,__kwargtrans__({reverse:true}));
testnum==num;
adate-=timedelta(__kwargtrans__({days:1}));
ax.grid(true);
var d=defaultdict(list);
var screen=pygame.display.set_mode(tuple([800,600]));
export var top=curses.newwin(1,10,0,0);
ax.set_ylim(0,61);
export var avg_time_at_college=avg_passout_date-avg_start_date;
self.inverse.py_setdefault(value,[]).append(key);
list(filter(condition_check,l));
list(map(sum,zip(a,b,c)));
print(psutil.net_connections());
soup.td.contents;
filter(good,combinations(list(range(1,n+1)),r));
__in__(d,set1)==__in__(newd,set2);
whatever;
sys.exit(-1);
export var ax0=plt.subplot(211);
coo_matrix(tuple([data,tuple([c.row,c.col])]),__kwargtrans__({shape:tuple([a.shape[0],b.shape[1]])}));
var A=np.zeros(tuple([M,N]));
self.buffer=[1]*size;
a.__setslice__(1,4,null,[9,7]);
var a=py_next(function(){var __accu0__=[];for(var i of userInput)if(__in__(i,wordsTask))__accu0__.append(i);return py_iter(__accu0__)}());
print(id(x));
B[mask]=A[1][B[mask]];
im.set_clip_path(clip_path);
var A=NP.array(A);
list(d);
print(cross_validation_group(test_data,train_data));
var df=pd.DataFrame([0]);
exit();
a.T;
var listB=[0,1,2,1,2,1,0];
ax.scatter(x[mask],y[mask]);
inqueue.put(i);
var py_name=models.CharField(__kwargtrans__({max_length:100}));
root;
pygame.mixer.init();
main();
var d=cv2.cvtColor(c,cv2.COLOR_RGB2BGR);
var __left0__=tuple([np.arange(5),np.arange(5)]);export var n1=__left0__[0];export var n2=__left0__[1];
cv2.rectangle(img,pt,tuple([pt[0]+tw,pt[1]+th]),0,2);
Math.pow(x,2);
export var cum=np.cumsum(a,__kwargtrans__({axis:1}));
sample_size+=len(rn);
ax.plot(t,fun(t));
var layout=QtGui.QVBoxLayout(widget);
l.append(__mod__(i,10));
var c=function(){var __accu0__=[];for(var index of b)__accu0__.append(a[index]);return __accu0__}();
hold(true);
f(n);
export var player_list=[];
var df=df.reindex(__kwargtrans__({columns:unused_cols+list(chain(...fill_missing))}));
nil;
random.shuffle(each);
var sample=random.sample(item_names,2);
export var freqs=nltk.FreqDist(function(){var __accu0__=[];for(var w of brown.words())__accu0__.append(w.lower());return py_iter(__accu0__)}());
(function(){var __accu0__=[];for(var i=0;i<len(uo);i++)__accu0__.append(gu(i));return __accu0__})();
var __left0__=cv2.threshold(img,254,255,cv2.THRESH_BINARY);var retval=__left0__[0];var img=__left0__[1];
py_typeof(c);
fill_between(x,height-l[1],height,__kwargtrans__({color:colors[1],alpha:alpha}));
data2.__setitem__([tuple([0,null,1]),tuple([0,-1])],np.nan);
mycmd().cmdloop();
py_typeof(dict({}));
print(ObjectJSONEncoder().encode(tree));
tfact(n-1,acc*n);
item.append(len(item));
map(function __lambda__(k_v){return k_v[0]},L);
sleep(.5);
deletecursor;
reactor.run();
window.show();
print(a);
mapper(Something,select([sometable],sometable.c.deleted==false));
time.tzset();
do_something_2();
df;
var b=array([2,4,7]);
var f=urllib.request.urlopen(link);
results.append(string.__getslice__(split_points[-1][1]+1,null,1));
var __left0__=input().py_split();var number=__left0__[0];export var factor=__left0__[1];
list(range(5)).__getslice__(6,7,1)+[999][0];
py_values.append(value);
App().run();
var d=function(){var __accu0__=[];for(var [x,y,z]of tuples)__accu0__.append([x,tuple([x,y,z])]);return dict(__accu0__)}();
pylab.show();
QApplication.setOverrideCursor(QCursor(Qt.WaitCursor));
var d=R*sqrt(x*x+y*y);
app.SetTopWindow(frame);
Job.objects.py_get(__kwargtrans__({client:client}));
print(result.py_get(__kwargtrans__({timeout:1})));
ax.set_ylim(-75,75);
list(hi_obj.__dict__.py_keys());
export var p_lineinfo=frame.f_back.f_lineno;
var now=datetime.now();
export var abacus=[0,0,0,0];
var foo=np.random.rand(2E6).cumsum();
var a=a.__iadd__(b);
var html=browser.open(url);
var XS=np.asarray(XS);
np.roll(sa,-np.count_nonzero(np.isnan(a)));
export var rightpanel=wx.Panel(self,-1,__kwargtrans__({size:tuple([200,150])}));
export var bottompanel=wx.Panel(self,-1,__kwargtrans__({size:tuple([200,150])}));
exit();
getattr(mod,attr);
var app=Flask(__name__);
fcntl.lockf(doing_fd,fcntl.LOCK_EX);
var img=cam.getImage();
var fig=plt.figure();
var pixels=list(im.getdata());
false;
lxml.etree.tostring(r.item);
sleep(5);
self.finish();

var form=MyForm(request.POST);
var proc=subprocess.Popen(cmd,__kwargtrans__({shell:true,stdout:subprocess.PIPE}));
myfile.close();
var browser=webdriver.Firefox();
var frame=cap.read()[1];
do_plot(ax);
print(line);
export var maxvalues=heapq.nlargest(20,lst);
ax1.plot(xvals,xvals,__kwargtrans__({linewidth:7}));
show();
print(lt_obj.get_text());
out.write(g.read());
parse(new_str);
var result=np.c_.__getitem__([original.__getitem__([v.__getslice__(1,-1,1),v.__getslice__(0,-2,1)]),original.__getitem__([v.__getslice__(1,-1,1),v.__getslice__(2,null,1)])]);
min(l[0]+best_choice(l.__getslice__(1,null,1)),l[1]+best_choice(l.__getslice__(2,null,1)));
var resp=opener.open(req);
export var filtered_df=df.where(f(df.a));
do_stuff(a,b);
list(B.py_items());
canvas.print_png(sio);
writer.writerows(function(){var __accu0__=[];for(var [title,intro,tagline]of grouped)__accu0__.append(tuple([title,intro+tagline]));return py_iter(__accu0__)}());
export var pC=ctypes.cast(rawPointer,ctypes.POINTER(ctypes.c_uint16));
export var ips=function(){var __accu0__=[];for(var match of re.findall(pattern,text))__accu0__.append(match[0]);return __accu0__}();
var a=np.exp(np.random.randn(5,10)).astype(theano.config.floatX);
time.sleep(alarm1);
sys.stdout.write(inline);
df;
seen.add(key);
plt.xticks(x,my_xticks);
var d=date(year,1,1);
var c=np.array([0,1,2]);
var n=int(temp)*2;
server.shutdown();
conset.add(x);
plt.yticks(list(range(len(labels))),labels);
self.render_change_form(request,context,__kwargtrans__({form_url:form_url,add:true}));
isinstance(x,collections.MutableSequence);
var y=x.T.tolist()[0];
var args=parser.parse_args();
sys.meta_path.insert(0,importer);
self.window.show();
var fig=plt.figure(__kwargtrans__({figsize:tuple([10,9])}));
print(row[column_number]);
var a=A();
var res=im.crop(tuple([0,0,MAXSIZEX,MAXSIZEY]));
xml_output;
len(r.content);
copyfile(srcname,dstname);
print(table);
mpf(200)+mpf(2E-26)+mpc(complex(0,1));
plt.show();
f.close();
splittedname(s1)>splittedname(s2);
np.abs(df.time-image_time);
var user=User.objects.py_get(__kwargtrans__({pk:user_id}));
var d=function(){var __accu0__=[];for(var [i,x]of enumerate(a))__accu0__.append([i,x]);return dict(__accu0__)}();
lst.extend(tuple([8,9,10]));
export var combo=QtGui.QComboBox(parent);
var df=pd.DataFrame(cols);
fb.authenticate();
attachment.set_payload(fp.read());
main();
export var classifier=classifier.fit(X_train,y_train);
str(self.__dict__);
self.Artwork.pack();
pdf.add_page();
df[1]==4;
var t=datetime.datetime.now();
var pix=im.load();
var result=np.array(result);
var data=conn.recv(1024);
exit();
os.system(x);
print(new_str);
crawler.start();
var results=sorted(list(results.py_items()),__kwargtrans__({key:function __lambda__(x){return x[1]}}));
int(x.py_split()[0]);
confused_array[~mask&numpy_array==0]=0;
result.append(tuple([t,c1+c2]));
(a*d).todense();
export var dataframe=pd.read_csv(f);
ninety-nine;
vector/np.linalg.norm(vector);
text.__getslice__(len(prefix),null,1);
WebDriverWait(driver,timeout).until(element_present);
var fig=plt.figure();
result+=count(haystack.__getslice__(pos+1,null,1),needle.__getslice__(1,null,1));
new set([new set([l.form.city])]);
(function(){var __accu0__=[];for(var [i,j]of zip(minmax.__getslice__(0,-1,1),minmax.__getslice__(1,null,1)))__accu0__.append(abs(j-i));return __accu0__})();
deletedict[key];
print(response.registers[2]);
print(arr[local_minima_locations]);
gukan(0);
plt.bar(ind,OY,__kwargtrans__({width:width}));
audiolab.play(x,fs);
self.a.append(numpy.hstack(tuple([numpy.ones(tuple([input.shape[0],1])),input])));
true;
outfile.close();
self.d[k];
key.delete();
monkey.patch_all();
uuid.uuid1(random_48_bits);
var xmldoc=minidom.parseString(xml_str);
m.py_sort(__kwargtrans__({key:str.isdigit}));
print(rect.PyRectangle(0,0,1,2).getLength());
pst.close();
export var divider2=make_axes_locatable(ax2);
columns[i].append(l);
monkey_patch_B();
img.close();
self.loadFinished.connect(self._loadFinished);
bytes([97,98,99]);
pyplot.gca().add_patch(circle);
var today=datetime.date.today();
var env=Environment();
some_func();
p.pretty(obj[key]);
time.sleep(.5);
p[pair[0]]+=1;
merged.py_update(add_obj);
timeit(numpy.array(hugeequal1),numpy.array(hugeequal2),1E4);
print(spectra_list[1].dispersion);
fig.tight_layout();
a.sort_index(1,__kwargtrans__({inplace:true}));
func();
fig.delaxes(ax);
var code=func.__code__;
export var actor=match.group(1).strip();
export var latest=Foo.all().latest();
np.array(scipy.stats.chi2.interval(.95,2*data))/2-1;
X.__getitem__([[0,1],[0,1]]);
[dingdong];
ax.xaxis.set_ticks(np.arange(min_x,max_x,int((max_x-min_x)/len(labels))));
sum(v);
buf.readline();
var l=map(function __lambda__(x){return x+2},l);
metadata.read();
var soup=BeautifulSoup(html_doc);
ax.py_clear();
sys.stdout=Discarder();
conn.setopt(pycurl.USERNAME,username);
window.show();
t[0].start();
plt.vlines([0,4,6],-10,10);
a===a.astype(int,__kwargtrans__({copy:false}));
var ssh=paramiko.SSHClient();
var now=datetime.datetime.now();
conn.send(some_data);
var file_name=f.py_name;
T2.method_three();
self.loadFinished.connect(self.on_loadFinished);
self.h2Box.addWidget(self.cmbox);
var args=parser.parse_args();
var today=datetime.date.today();
df[cols].mean(__kwargtrans__({axis:1}));
csvout.write(wstr);
np.interp(width_S,S_values_2,F_values_2);
var b=np.linspace(-2,2,5);
np.concatenate(tuple([new_face,M]),dim);
self.file_pointer.seek(0,os.SEEK_END);
form.save_m2m();
print(merge(lst));
regex.py_split(s);
f(...args,__kwargtrans__(kwargs));
var book=xlwt.Workbook();
self.screen.fill(tuple([255,255,255]));
ax.add_collection(p);
h.request(url,__kwargtrans__(__mergekwargtrans__({method:method,body:body,headers:headers},kwargs)));
(function(){var __accu0__=[];for(var [k,v]of enumerate(calendar.month_abbr))__accu0__.append([v,k]);return dict(__accu0__)})();
var parser=argparse.ArgumentParser();
var sess=tf.Session();
db.session.commit();
cam.start();
sax.parse(locstm,Handler());
var t1=time.time();
gs.tight_layout(fig);
response;
sleep(.1);
var r=re.compile(result);
print(sum(range(49999951,5E7)));
var types=function(){var __accu0__=[];for(var col of q.columns)__accu0__.append(col.py_metatype);return __accu0__}();
etree.tostring(otree);
print(json.dumps(root,__kwargtrans__({indent:4})));
print(result.key().id());
self.ssh.connect(host,__kwargtrans__({username:user,password:psw,port:22}));
sockobj.listen(5);
var result=function(){var __accu0__=[];for(var o of list1)if(!__in__(o,set2))__accu0__.append(o);return __accu0__}();
print(t.render(c));
excel.Application.Quit();
sleep(1);
result.append([t[j+1]]);
foo_from_bar(self.bar_impl(x));
list(s);
line.set_xdata(r.__getitem__([tuple([0,null,1]),0]));
export var vf=numpy.vectorize(f);
out.close();
sys.argv[0];
var s=requests.session();
print(np.intersect1d(a,b));
export var idx_start=np.where(sorted_a.__getitem__([tuple([0,null,1]),tuple([0,-1,1])])!=sorted_a.__getitem__([tuple([0,null,1]),tuple([1,null,1])]));
df;
df.dtypes;
main();
print(f.data);
f.write(os.linesep);
var app=QtGui.QApplication(sys.argv);
user.auth_ids.append(email);
var form=AnimalForm(request.POST);
ast.literal_eval(value);
export var last_entry_date=B.select(B.date).order_by(B.id.desc()).limit(1).scalar();
pool.join();
var __left0__=tuple([0,1]);var a=__left0__[0];var b=__left0__[1];
df1;
var __left0__=np.ogrid.__getitem__([tuple([-m,m+1,1]),tuple([-n,n+1,1])]);var y=__left0__[0];var x=__left0__[1];
plt.show();
var conn=pymongo.MongoClient();
btn.clicked.connect(self.buttonClicked);
self.scat.set_offsets(data.transpose());
m.group(1);
f.write(line);
df.dtypes;
hash(x);
out_file.writelines(unique_everseen(f));
response;
fig.add_subplot(111);
p.start();
plt.hist(myarray,__kwargtrans__({weights:weights}));
os.makedirs(path);
print(fresult);
(function(){var __accu0__=[];for(var i=0;i<count;i++)__accu0__.append(sample.__getslice__(i*n,(i+1)*n,1));return __accu0__})();
var f=urllib.request.urlopen(url);
var b=cast(s,POINTER(c_ubyte*20))[0];
print(df.groupby(df.index).apply(tmpFunc));
ax.set_xticks(np.arange(0,8)-.5,__kwargtrans__({minor:true}));
var pixels=img.load();
pyplot.show();
var c=np.searchsorted(a,b);
var types=function(){var __accu0__=[];for(var col of res.context.compiled.statement.columns)__accu0__.append(col.py_metatype);return __accu0__}();
libxxx.foo(data,len(data));
order.append(tuple([dist,i]));
var __left0__=kde.get_ylim();var ymin=__left0__[0];var ymax=__left0__[1];
export var MyMIDI=MIDIFile(1);
list(self).count(obj);
var result=set(p[0]);
py_typeof(x);
export var customers=defaultdict(list);
regressor.fit(X,y);
self.y-=1;
self.Bind(wx.EVT_CHAR,self.KeyDown);
json.loads(value);
socket.setTimeout(SERVICE_TIMEOUT_IN_mS);
false;
self.b=0;
(function(){var __accu0__=[];for(var [k1,k2]of zip(itertools.chain(...dge),nde))__accu0__.append(tuple([k1[0],k1[1],k2]));return __accu0__})();
socket.setdefaulttimeout(60);
mydic[key].append(value);
var __except0__=Exception();__except0__.__cause__=null;throw __except0__;
numpy.clip(A.astype(int)-B.astype(int),0,numpy.iinfo(int).max);
p.communicate();
var sort_idx=np.argsort(a);
var __left0__=divmod(your_number,256);var c=__left0__[0];var f=__left0__[1];
var results=dict([[input_list[0],[input_list[0]]]]);
arr[idx];
export var calendar_service=gdata.calendar.service.CalendarService();
var u=numpy.linspace(0,2*numpy.pi,100);
self.loop.call_soon_threadsafe(task.cancel);
print(f.read());
sorted(py_items,__kwargtrans__({key:inner}));
main();
var out=a.__getitem__([idx,np.arange(a.shape[1])]);
var color=np.array(color);
future+=datetime.timedelta(__kwargtrans__({days:1}));
export var mymethod=add_timeout(mymethod,15);
df[df<0]=0;
var idx=np.random.randint(10,__kwargtrans__({size:2}));
var section_sums=np.bincount(Math.floor(np.arange(mask.size)/20),mask);
ax1.set_yticks(numpy.arange(y1-1,y2+1,.5));
var __left0__=process.communicate();var stdout=__left0__[0];var stderr=__left0__[1];
Platform.__init__(self,x,y);
self.callback();
A.__getitem__([np.arange(2),B.T]).T;
print(visit_element.tag,visit_element.text);
export var B_Bidx=np.digitize(B,Bbins);
self.pages.append(dict(self.__dict__));
var b=a[random.randint(0,len(a)-i)];
var driver=webdriver.Firefox();
set(listas[0]).intersection(...listas.__getslice__(1,null,1));
print(xee.tostring(doc));
print(x);
str.__getattribute__(self,attr);
bytes([bstr[0]+1,98,99]);
export var color_norm=colors.Normalize(__kwargtrans__({vmin:0,vmax:N-1}));
df.info();
pdf.image(image,x,y,w,h);
restart();
l.add(i);
var idx=np.argsort(df[df.columns.__getslice__(5,null,1)].py_values)[0];
handle_the_error();
model1.py;
sys.path.insert(0,cmd_subfolder);
map(bin,bytearray(st));
(x+y).subs(py_reversed(reps));
s[-6];
var response=urlopen(request).read();
html.strip_tags(htmls);
var output=p2.communicate()[0];
print(response.getRegister(2));
chain.from_iterable(function(){var __accu0__=[];for(var r=0;r<len(s)+1;r++)__accu0__.append(combinations(s,r));return py_iter(__accu0__)}());
var subject=models.CharField(__kwargtrans__({max_length:100}));
hl.set_xdata(numpy.append(hl.get_xdata(),new_data));
f1.save();
flask.render_template=_my_render_template;
print(response.read());
(function(){var __accu0__=[];for(var m of self.maps)for(var k of m.py_keys())__accu0__.append(k);return py_iter(__accu0__)})();
test2();
count+=1;
GetSum(arrs[-1],arrs.__getslice__(0,-1,1));
plt.setp(labels,__kwargtrans__({rotation:0}));
self.setSelectionMode(QtGui.QAbstractItemView.MultiSelection);
var results=serializers.SerializerMethodField();
var filtered_numbers=list(filter(predicate,numbers));
datetime(1970,1,1)+timedelta(__kwargtrans__({seconds:local.timestamp()}));
var __left0__=np.meshgrid(xvals,yvals);var X=__left0__[0];var Y=__left0__[1];
random.shuffle(object_list);
self.write(data);
export var kde=sns.kdeplot(random_points.__getitem__([tuple([0,null,1]),0]),random_points.__getitem__([tuple([0,null,1]),1]),__kwargtrans__({ax:ax}));
np.where(arr>=threshold);
var driver=webdriver.Firefox(__kwargtrans__({firefox_profile:fp}));
self.put(item);
plt.plot(x,y1);
(b[c]==a).all();
var pi=(a+b)*(a+b)/(4*t);
tcpcounter+=1;
udpcounter+=1;
var loop=asyncio.get_event_loop();
var field=self._fields.py_get(py_name);
self.log.write(s);
self.failed_urls.append(response.url);
os.symlink(linkto,dstname);
var r=fv(a.__getitem__([tuple([0,null,1]),numpy.newaxis]),b);
unittest.main();
blocks.shape;
var writer=csv.writer(f);
var layout=QtGui.QVBoxLayout();
print(json.dumps(json_data,__kwargtrans__({indent:2})));
export var vbox=gtk.VBox(false,10);
len(FinalList);
var A=np.random.random(tuple([5,5,5]));
print(s);
data.sum();
export var add=function __lambda__(x,y){return x+y};
final.append(str(seq[0]));
main();
app.MainLoop();
var browser=webdriver.Chrome();
[0,1,2];
index_list;
export var non_blank_lines=function(){var __accu0__=[];for(var line of stripped_lines)if(line)__accu0__.append(line);return py_iter(__accu0__)}();
export var gnb_loaded=cPickle.load(fid);
decorator;
indices.__setitem__([tuple([0,-(n-1),1]),5],np.arange(n-1,m*n));
var ax=plt.gca();
C.__setitem__([i,j],np.dot(A.__getitem__([tuple([0,null,1]),i]),B.__getitem__([tuple([0,null,1]),j])));
post_save.connect(ping_handler,__kwargtrans__({sender:MyModel}));
wavwriter.setnchannels(1);
canvas.saveState();
print(list(best_range));
a[np.ix_(n1,n2)];
self.__dict__[key];
var a=pd.Series(function(){var __accu0__=[];for(var date of date_stngs)__accu0__.append(pd.to_datetime(date));return __accu0__}());
var fig1=plt.figure();
md5.digest();
var b1=np.array([[5,6],[7,8]]);
Py_Finalize();
var a=[1,[2,2,[2]],4];
a.set_yticklabels(a.get_yticks(),fontProperties);
json.loads(raw_post_data,__kwargtrans__({object_pairs_hook:dict_raise_on_duplicates}));
allatt;
var fig=plt.figure();
sorted(players,__kwargtrans__({key:function __lambda__(player){return player.rank}}));
print(query2.all());
f.close();
setenv(foo);
py_iter(relatives.py_items());
df_smooth.plot(__kwargtrans__({ax:axs,alpha:.7}));
var contents=Path(file_path).read_text();
var opener=urllib.request.build_opener(urllib.request.HTTPCookieProcessor(cj));
strong.append(value);
fout.close();
ax2.add_line(copy.copy(line2));
serversocket.bind(tuple([host,port]));
export var cms_pages=Page.objects.filter(__kwargtrans__({in_navigation:true,published:true}));
var frame=pd.read_csv(path,__kwargtrans__({names:columns}));
var __left0__=numpy.meshgrid(list(range(sz[0])),list(range(sz[1])));var X=__left0__[0];var Y=__left0__[1];
self.stream.write(msg);
res_list[i].append(float(val));
cos(x)+cos(y);
s.listen(10);
export var fixed=s.__getslice__(1,null,1);
session.flush();
sk.push(x509);
__mod__(hash(s),256);
MyUser.objects.py_get(__kwargtrans__({pk:self.pk}));
var c=C();
var panel=Label(root,__kwargtrans__({image:img}));
export var textview=gtk.TextView();
logger.addHandler(hdlr);
f.close();
list(cor[cor>.9999].to_dict().py_keys());
var ys=function(){var __accu0__=[];for(var i of sorted_index)__accu0__.append(ys[i]);return __accu0__}();
result+=match.group(1).upper()+match.group(2).upper();
export var Cbins=np.linspace(C.min(),C.max(),12);
print(cron5);
print(k,sys.getsizeof(v));
a.close();
var ax2=fig.add_subplot(2,1,2);

var zip_list=zip(A,B);
result_dict;
var reader=csv.reader(infile);
pool.shutdown();
f.x;
server.shutdown();
var lines=f.readlines();
r.url;
args.py_metatype();
(function(){var __accu0__=[];for(var [l,words]of groups)__accu0__.append([l,set(words)]);return dict(__accu0__)})();
print(procname);
tuple([[0,0,0,17,0,0,0,17,0,0,0,17,0]]);
sizer.Add(self.cbBG,0,wx.ALL|wx.CENTER,5);
dataset.withColumn(out_col,udf(f,t)(in_col));
background.fill(tuple([250,250,250]));
f();
var today=datetime.date.today();
sns.heatmap(df);
pprint.pprint(content_json);
var func=getattr(modulename,funcname);
var ax1=fig.add_subplot(111);
var __left0__=plt.subplots(__kwargtrans__({nrows:2,sharex:true}));var fig=__left0__[0];var ax1=__left0__[1][0];var ax2=__left0__[1][1];
len(one_set&set_of_150kwords);
button.pack();
atexit.register(root.mainloop);
decorator;
len(word);

np.random.shuffle(p);
var subject=models.CharField(__kwargtrans__({null:false,max_length:128}));
_getdents.restype=ctypes.c_int;
var page=BeautifulSoup.BeautifulSoup(html.text);
var r=urllib.request.urlopen(url);
s.send(CRLF.join(request));
self.layout.addWidget(self.button);
f.seek(256,os.SEEK_SET);
self.__class__.__call__=function __lambda__(x){return x};
t[0]=t[0];
var f=scipy.interpolate.interp2d(x,y,data);

var mask=np.zeros_like(arr,__kwargtrans__({dtype:np.bool}));
var image_data=get_image_data_from_blob();
btn.set_sensitive(true);
var start=time.time();
time.sleep(2);
var title=Column(String(20),__kwargtrans__({primary_key:true}));
eval(s,dict({}),dict({}));
a.append(i);
x.change();
list(f.py_keys());
var post=models.ForeignKey(Blog);
var future=asyncio.ensure_future(coro);
x+1;
Test.calc_x.__code__.co_names;
out.write(re.sub(pat,s_after,line));
pygame.init();
var m=hashlib.md5();
var driver=webdriver.Firefox();
self.session.commit();
plt.show();
var driver=webdriver.Firefox();
self.assertRaises(models.BadFooError,foo.full_clean);
py_next(self._iter);
curses.echo();
[i];
append_record(my_dict);
export var factors2=list(factors.__getslice__(0,i,1)+factors.__getslice__(i+1,null,1));
py_typeof(a);
print(tuple([start,end]));
myfast();
myFunc(1,2);
os.remove(filename);
export var weekday=today.timetuple()[6];
y.append(np.random.random_integers(0,10,20));
self.files=dict({});
export var maxval=max(py_iter(dict.py_items()),__kwargtrans__({key:operator.itemgetter(1)}))[1];
text_file.close();
print(function(){var __accu0__=[];for(var v of list(anagrams.py_values()))if(len(v)>1)for(var x of v)__accu0__.append(x);return __accu0__}());
time.sleep(.1);
time_keypresses(pygame.event.py_get());
var driver=webdriver.PhantomJS(__kwargtrans__({desired_capabilities:caps}));
row.delete();
self.videoSink.set_xwindow_id(hWnd);
print(list(islice(primes(),0,1E6)));
var proc=subprocess.Popen(cmd,__kwargtrans__({stdin:subprocess.PIPE}));
wb.save(response);
make_sine(freq,data_length,fname);
c.seek(0);
help(sys.getsizeof);
b.py;
np.array(x.shape).tofile(f);
l.addWidget(self._tv);
list(User.__mapper__.columns);
var count=0;
sys.stdout.flush();
df2;
s.cookies.save(__kwargtrans__({ignore_discard:true}));
ax.set_xlabel(label);
clean_table_grouped.join(for_df);
f.close();
var slices=list(takewhile(bool,function(){var __accu0__=[];for(var i of seclist)__accu0__.append(list(islice(it,0,i)));return py_iter(__accu0__)}()));
tuple([tuple([0,0,128]),tuple([255,0,255]),tuple([255,255,0]),tuple([0,255,255]),tuple([128,0,128])]);
pd.read_csv(io.StringIO(df.to_csv(__kwargtrans__({index:false}))));
leg.draggable();
list(d.py_items());
tt.Index(0).Set(ea);
numpy.ones(tuple([2,2]),__kwargtrans__({dtype:bool}));
fcond.wait();
fa[0]();
var field=Model._meta.get_field(field_name);
tuple([y,d+math.hypot(y[0]-x[0],y[1]-x[1])]);
user.get_profile().whatever;
export var handler1=logging.TimedRotatingFileHandler();
Exception.__init__(self,message);
export var globalist_randomnode=[];
self.list.SetItemData(index,key);
os.system(cmd);
mychain.apply_async();
var d=np.diag(a);
var w=gtk.Window();
interpreter.process_page(page);

graph.add_edge(node_number,random.choice(graph.nodes()));
export var hs=root.winfo_screenheight();
a();
chessboard.get_king_moves();
print(text.text);
index.create();
setattr(self,key,l);
A.append(B);
D[word]+=1;
var l=function(){var __accu0__=[];for(var _=0;_<50;_++)__accu0__.append(random.randrange(0,5));return __accu0__}();
var my_tuple=tuple([[],[]]);
list.__setitem__(self,...args);
print(get_overlap(s1,s2));
var response=urllib.request.urlopen(url);
var opener=urllib.request.build_opener(urllib.request.HTTPCookieProcessor(cj));
setattr(namespace,self.dest,dest);
task.cancel();
var result=[];
print(max(s),max(s,__kwargtrans__({key:str.lower})));
var DEBUG=false;
var i=np.random.choice(list(range(0,n*n)),__kwargtrans__({size:m}));
(function(){var __accu0__=[];for(var s of mylist)if(!myregex.search(s))__accu0__.append(s);return __accu0__})();
var time=time.time();
var fig=plt.figure();
timezone.make_aware(yourdate,timezone.get_current_timezone());
print(elem.py_split()[-1]);
L.py_sort(__kwargtrans__({key:getvals}));
self.SetShape(wx.Region());
line.__getslice__(0,i,1);
do_something(line);
imp.load_compiled(py_name,path);
dfall.head(6);
login(request,user);
merger.write(output_file_path);
var text=urllib.request.urlopen(url).read();
painter.drawControl(QtGui.QStyle.CE_PushButton,self.getSyleOptions());
pyplot.show();
[zxcv,zxcv];
py_typeof(d.py_values());
self.observer.stop();
self.photo.save(os.path.basename(self.url),File(open(result[0])));
var df1=pd.DataFrame(lst,__kwargtrans__({columns:cols}));
im.set_data(mat);
print(ruamel.yaml.dump(data,__kwargtrans__({Dumper:ruamel.yaml.RoundTripDumper})));
var data=data.drop(data.index[[0]]);
os.kill(pid,0);
np.allclose(Y1,Y2);
var n=n<minn?minn:n>maxn?maxn:n;
ax1.minorticks_on();
response.close();
f.writelines(res);
thirdpartymodule_b.dosomething();
output.addPage(page);
col_sums.__setitem__([tuple([0,null,1]),j],row_sums.__getitem__([tuple([0,null,1]),j]));
var r=regex.search(string);
logger2.addHandler(log_handler2);
a.searchsorted(b);
var dictionary=dict({});
self.__dict__[attr]=str(value);
connect.close();
wr.writerow(sh.row_values(rownum));
c.setopt(pycurl.FOLLOWLOCATION,1);
dot(Phi,R);
ax2.yaxis.set_major_locator(MultipleLocator(.25));
signal.signal(signal.SIGQUIT,term);
export var manager=multiprocessing.Manager();
var c=np.arange(2,9);
print(df.d.tolist());
print(match.groups());
print(pattern.findall(txt));
var output=process.communicate();
self.deque.append(x);
x+(isinstance(y,tuple)?y:tuple([y]));
var data=np.random.normal(__kwargtrans__({size:1E3}));
yaml.add_representer(MyClass,MyClass_representer);
export var keyfunc=function __lambda__(x){return x[0][0]};
x*np.sin(y);
re.sub(findthe,function __lambda__(matchObj){return replacement.py_pop(0)},sentence);
driver.set_window_size(1400,1E3);
var gray=cv2.cvtColor(img,cv2.COLOR_BGR2GRAY);
var c=function(){var __accu0__=[];for(var [i,bi]of enumerate(b))__accu0__.append(a[i]+[bi]);return __accu0__}();
t.set_axis_off();
show_float(x);
len(py_keys)==1?py_keys[0]:py_keys;
var cj=cookielib.LWPCookieJar();
hash(list(self.py_items()));
var r=function __lambda__(){return random.randint(0,255)};
var file=cStringIO.StringIO(urllib.request.urlopen(imageUrl).read());
print(pos);
IOLoop().run_sync(func);
var graph=facebook.GraphAPI(token);
export var splits=function(){var __accu0__=[];for(var i=0;i<len(word)+1;i++)__accu0__.append(tuple([word.__getslice__(0,i,1),word.__getslice__(i,null,1)]));return __accu0__}();
var a=b[0];
canv.pack();
var handler=logging.FileHandler(file_name);
df;
var r=conn.cursor();
http_server.listen(8888);
consumer_lock_object.release();
export var perm_tuple=function(){var __accu0__=[];for(var x of Permission.objects.filter(__kwargtrans__({user:user})))__accu0__.append(tuple([x.id,x.py_name]));return __accu0__}();
zip(...alist);
cast(col,Float);
export var proc_stdout=process.communicate()[0].strip();
np.column_stack(np.unravel_index(idx,lon.shape)).tolist();
var fig=plt.figure();
print(function(){var __accu0__=[];for(var i=0;i<5;i++)__accu0__.append(c.b[i]);return __accu0__}());
(function(){var __accu0__=[];for(var i of range(0,len(s)-1,2))__accu0__.append(s.lower().__getslice__(i,i+2,1));return __accu0__})();
self.stop();
var test=Test();
export var results_data=results.py_get();
fig.add_subplot(211);
var a=MyClass();
true;
_zip.write(in_file);
bool([])==false;
suite;
numpy.nonzero(a.max()==a);
bool(obj)&&all(function(){var __accu0__=[];for(var elem of obj)__accu0__.append(isinstance(elem,str));return py_iter(__accu0__)}());
bd.py_sort(__kwargtrans__({key:function __lambda__(d){return tuple([d.month,d.day])}}));
var lis=[1,[2,2,2],4];
s.listen(1);
print(s.__getslice__(0,index,1));
var b=random.randint(0,20);
z<t.isoformat();
print(dec_num==511);
plt.plot(np.random.random(20));
export var cmyk_im=cmyk_im.py_split();
self.send_response(200);
df;
contexts;
self.left.py_pop();
var root=Tk();
shape.append(len(l));
export var bounded=numpy.hstack(tuple([[0],bits,[0]]));
a.set_ylim(-1.1,1.1);
plt.scatter(x,y,__kwargtrans__({zorder:1}));
var ax=fig.add_subplot(1,1,1);
new_list1.append(i[0]);
-g595x842;
export var sqlc=SQLContext(sc);
export var inters=successives1.intersection(successives2);
w.seek(8);

export var my_model=MyModel();
self.root.clipboard_clear();
atexit.register(close_database);
var owner=serializers.IntegerField(__kwargtrans__({required:false}));
print(magicInput.__getslice__(2,4,1));
newlist.append(i);
path.append(parent[path[-1]]);
var df=pd.DataFrame(a.T);
b.__setitem__([tuple([0,null,1]),0,0],t2);
export var pnormal=p.convert(__kwargtrans__({domain:tuple([-1,1])}));
df2.letter.unique();
plt.setp(cm.ax_heatmap.yaxis.get_majorticklabels(),__kwargtrans__({fontsize:6}));
map(itemgetter(1),groupby(iterable,key));
random_numbers();
a.append(1);
export var dd=datetime.date(2009,12,9);
print(row[0],row[1],row[2]);
var query=users.select().order_by(-users.c.id.desc()).__getslice__(0,5,1);
conn.setblocking(0);
print(line);
export var img1y=img1.shape[0];
var dom=ET.parse(io.BytesIO(content));

plt.axis([x.min(),x.max(),y.min(),y.max()]);
var value=getattr(value,v);
var ax=fig.add_subplot(111,__kwargtrans__({aspect:1}));
var solution=function(){var __accu0__=[];for(var x of solution)__accu0__.append(int(x));return __accu0__}();
layout.addWidget(self.plot);
random.shuffle(results);
example.__getslice__(4,0,1);
len(j)-len(set(j));
print(output);
normed.mean(__kwargtrans__({axis:1}));
_quicksort(array,start,right);
var tree=html.fromstring(text);
var rows=function(){var __accu0__=[];for(var row of reader)__accu0__.append(row);return __accu0__}();
axes.__getitem__([1,1]).pcolormesh(xi,yi,zi.reshape(xi.shape));
TRUE;
self._reader2=reader2;
total+=1;
len(l);
[[1][0][0]];
self.send_blob(blob_key);
self.maxSlider.SetValue(self.minSlider.GetValue()+1);
all(function(){var __accu0__=[];for(var i of my_list)__accu0__.append(py_typeof(i)===int);return py_iter(__accu0__)}());
p.map(Processor(credentials),list_of_data);
export var besterr=thiserr;
pool.join();
var fig=PLT.figure();

self.label=QtGui.QLabel(self);
print(get_jsonparsed_data(url));
export var histo=np.histogram(X,__kwargtrans__({bins:5,range:tuple([m,M])}))[0];
val+=1;
ax.legend(__kwargtrans__({scatterpoints:1}));
var today=datetime.date.today();
df.a.quantile(.95);
p2.start();
__all__[attr]=getattr(foo,attr);
plt.show();
arr[0];
post_save;
time.sleep(1);
meta.reflect(__kwargtrans__({bind:engine}));
var __left0__=os.path.splitext(os.path.basename(pathAndFilename));var title=__left0__[0];var ext=__left0__[1];
e.delete(0,END);
cmp(list1,list2);
var screen=pygame.display.set_mode(tuple([800,600]));
nums.py_pop(i);
manager.shutdown();
pylab.show();
print(h.py_name,h.hexdigest());
np.bitwise_and.reduce(b)==b[0];
str(counter-1);
f.close();
true;
var d=function(){var __accu0__=[];for(var v of list(d.py_values()))__accu0__.append([v[0],len(v)>2?v.__getslice__(1,null,1):v[-1]]);return dict(__accu0__)}();
a.show();
heapq.heapify(py_items);
self.label.setPixmap(myScaledPixmap);
[1,2];
Test-app;
export var old_settings=termios.tcgetattr(sys.stdin);
export var yNew=-(x-x0)*sin(theta)-(h-y-y0)*cos(theta)+(h-y0);
form.field(__kwargtrans__(attrs));
print(config.CONF_VAR1,config.CONF_VAR2);
np.ix_([0,1],[0,1]);
var cursor=self.connection.cursor();
self.updateGUI();
var now=np.datetime64(datetime.datetime.now());
var df=df[cols_of_interest];
DictInsensitive(csv.DictReader.py_next(self));
Unpickler(file).load();
self.log.append(data);
data.__getitem__([0,0]);
export var beginy=0;
[0,1,1,2,4];
fp.write(part.get_payload(__kwargtrans__({decode:true})));
foo(...pair);
sys.getsizeof(a);
export var F=np.matrix(list(itertools.product([0,1],__kwargtrans__({repeat:n})))).transpose();
__init__.py;
self.submitButton.grid();
itertools.zip_longest(...args,__kwargtrans__({fillvalue:fillvalue}));
print(df);
var mydict=function(){var __accu0__=[];for(var [k,v]of key_value)__accu0__.append([k,v]);return dict(__accu0__)}();
export var zeros1=zeros.__getitem__([tuple([0,null,1]),tuple([1,-2,1])]);
print(timer.timeit());
var reader=csv.DictReader(f);
print(np.array_str(x,__kwargtrans__({precision:2,suppress_small:true})));
export var bit_array=bitarray(6E6);
gobject.threads_init();
host.set_ylim(0,2);
export var succs=function(){var __accu0__=[];for(var i=0;i<n;i++)__accu0__.append([]);return __accu0__}();
print(tostring(e,__kwargtrans__({encoding:str})));
print(soup.html.contents[0]);
var p=Process(__kwargtrans__({target:do_work,args:tuple([work,results])}));
var line=self.buf.readline();
func(...args);
var entry_list=function(){var __accu0__=[];for(var entry of feed.entry)__accu0__.append(entry.title.text);return py_iter(__accu0__)}();
var idx=np.where(A>2&A<8);
ws.column_dimensions=dict({});
conn.perform();
p.setopt(pycurl.WRITEFUNCTION,devnull.write);
var process=BlackScholesMertonProcess(S,q,r,sigma);
self.socket=socket.socket(socket.AF_INET,socket.SOCK_STREAM);
self.send_response(200);
var dist=min(dists);
var data=file.readlines();
export var cookiejar=cookielib.LWPCookieJar();
print(sum(muls));
var s=socket(AF_PACKET,SOCK_RAW);
(function(){var __accu0__=[];for(var i of lst)__accu0__.append(py_typeof(i)());return __accu0__})();
var L=sorted(list(d.py_items()),__kwargtrans__({key:function __lambda__(k_v){return k_v[1][1]}}));
dbapi_con.commit();
var x=tup[0];
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
var writer=csv.writer(f);
plt.colorbar();
opener.open(a_url);
self.timer=QTimer(self);
list(bucket.list_versions());
var l2=[1,4,5];
var f=open(f);
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
plt.plot(list(range(10)));
HttpResponseRedirect(reverse(contact_details,__kwargtrans__({args:tuple([new_contact.pk])})));
pickle.dump(network,p_output);
urllib.request.urlretrieve(each,filename);
var m=Model1.objects.filter(__kwargtrans__({desadder:1}));
foo.__doc__;
self.runner=QProcess(self);
var config_path=get_xdg_config_home();
nosetests();
var script_dir=os.path.dirname("./P2JSnippets.py");
plt.show();
do_someting();
df[df.one==1|df.two==7];
lowest_dirs.append(root);
export var new_columns=df.columns[df.ix[df.last_valid_index()].argsort()];
socket.send(me,zmq.SNDMORE);
self.connect();
NULL;
tuple([1,0,2]);
obj.main();
s.indices(len(t));
self.outstream.write(self.theB);
list(range(ifnone(item.start,0),item.stop,ifnone(item.step,1)));
yourbutton.pack();
math.pi.as_integer_ratio();
export var m_2=file_like_io.readlines();
module_b.py;
phonenumbers.format_number(parsed_number,phonenumbers.PhoneNumber());
export var diam=np.empty(200);
dish.id=restaurant_dish.dish_id;
B[i]=elem;
np.median([0,0,2,6,5]);
print(urlobj.readlines());
var ip=IPython.get_ipython();
export var matchlist=re.findall(pattern,str);
print(probs.sum());
tuple([.47685844,.44894925,.50727844,.45076198,.44977095,.41455029]);
var dom=ET.parse(xml_filename);
export var dict_list=zip(list1,list2);
export var cumulative_histo_counts=histo[0].cumsum();
var x=arange(0,2*pi,.01);
primes.append(i);
m.__getitem__([1,2]);
[[1][1][1][1][1][1][1][1][1][1]];
var b=np.array([1,4,5]);
var z=x.add(y);
var pool=Pool(__kwargtrans__({processes:4}));
self.hbox.pack_start(self.hlpass,false,false,0);
App.get_running_app().stop();
export var new_ring=LinearRing(new_pol.exterior.coords);
outputStream.close();
export var relative=os.path.relpath(path,directory);
lambdas_list.append(build_lambda(obj));
ax.plot(theta,r);
var __left0__=tuple([x,y]);export var lastX=__left0__[0];export var lastY=__left0__[1];
df;
var tags=django.forms.MultipleChoiceField(__kwargtrans__({choices:known_tags,required:true}));
f.close();
p.start();
export var ob=MyClass(__kwargtrans__({a:1,b:2}));
myFile.close();
setattr(self,key,FakeSudsNode(value));
var path=os.path.join(path,word);
export var SupportsDTRDSR=TRUE;
export var SupportsRLSD=TRUE;
export var SupportsRTSCTS=TRUE;
var app=QtGui.QApplication(sys.argv);
result[i].append(py_next(iterator));
fig.multi_line(x_err_x,x_err_y,__kwargtrans__(__mergekwargtrans__({color:color},error_kwargs)));
print(parser.parse_args());
self.cookie.load(string_cookie);
var MyDiccoSorted=sorted(list(MyDicco.py_items()),__kwargtrans__({key:myKey}));
print(tuple([foo,bar]));
stext.focus_set();
deletedict_del[k];
rows.append(data[field]);
thefile.seek(0,0);
toYearFraction(dt.today());
export var ticks=np.arange(x.min(),x.max(),6);
str(BeautifulSoup(html.__getslice__(0,length,1)));
np.where(abs(arr_f-a)<t)[0];
var fig=plt.figure();
print(a.__code__.co_firstlineno);
sys.stdout.write(line.__getslice__(1,null,1));
cb.formatter.set_powerlimits(tuple([0,0]));
genn(igap,igap-1);
var ret=function(){var __accu0__=[];for(var row of ret)__accu0__.append(row[0]);return __accu0__}();
export var dis_vectors=function(){var __accu0__=[];for(var [l,r]of itertools.combinations(points,2))__accu0__.append(l-r);return __accu0__}();
sizer.Add(self.fileTextCtrl,1,wx.EXPAND|wx.ALL,5);
self.losses=[1,1];
var obj=db.py_get(obj_key);
groups.apply(function __lambda__(x){return count_consec_dates(x,start_date)});
any(function(){var __accu0__=[];for(var e of[0,0,0])__accu0__.append(isinstance(e,int)&&e>0);return py_iter(__accu0__)}());
var r=redis.StrictRedis();
root.lift();
print(2*p);
y.append(dict(list(i.py_items())+list(j.py_items())));
outlist.extend(function(){var __accu0__=[];for(var i of ids-known)__accu0__.append(tuple([i,other[0]]));return py_iter(__accu0__)}());
ax.xaxis.set_visible(false);
var f=urllib.request.urlopen(url);
var profile=webdriver.FirefoxProfile();
print(i,j,k,v);
ax.set_xlim(date_min,date_max);
var res=[np.array([f1(1,5),f2(2,6)])];
label.setPixmap(p);
signal.signal(signal.SIGALRM,signal.SIG_IGN);
py_next(f);
can.place(__kwargtrans__({x:200,y:200,anchor:NW}));
reset_index();
re.py_split(regexPattern,string,maxsplit);
var __left0__=map(int,line.py_split());var key=__left0__[0];var value=__left0__[1];
var id=Column(Integer,__kwargtrans__({primary_key:true}));
tree.add(8);
sys.exit(app.exec_());
export var np_spiky=np.vectorize(spiky);
var size=models.IntegerField(__kwargtrans__({blank:true,null:true}));
seed(42);
var output=mp.Queue();
export var label_data=np.random.randint(0,2,tuple([10,5]));
data.append(random.random());
arr[np.ix_(rows,cols)];
var A=matrix(A);
minimal(s,len);
self.settimeout(10);
g.apply(function __lambda__(x){return g.loc.__getitem__([~x.isin(df1[x.py_name]),x.py_name])});
export var sqmdist=np.dot(np.dot(xdiff,Sigma_inv),xdiff);
print(tuple([x.itemsize,x.nbytes]));
var predicted=classifier.predict(X_test);
m.EM(data,40,.1);
p1.stdin.close();
print(groups.mean());
architecture/architecture;
var a=1/(2*Math.pow(std1,2))-1/(2*Math.pow(std2,2));
export var union_set=set.union(...l);
var X=pd.concat([X.iloc.__getslice__(-shift,null,1),X.iloc.__getslice__(0,-shift,1)]);
np.set_printoptions(__kwargtrans__({precision:2}));
csv.writer(output).writerow(x);
var h=np.exp(-(x*x+y*y)/(2*sigma*sigma));
print(df);
var func=getattr(self,func_name,func_not_found);
venues.py_sort(__kwargtrans__({key:getRanking,reverse:true}));
false;
list(range(first_number,last_number+1,step));
signal.alarm(5);
strcat(greeting,excla);
tuple([0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0]);
plt.ylim(tuple([0,10]));
QWidget.__init__(self);
os.open(os.devnull,os.O_RDWR);
df.High.cummax();
print(np.argmax(a));
self.response;
var a=[true,true,true,true];
var id=Column(Integer,__kwargtrans__({primary_key:true}));
var my_date=date.today()-timedelta(__kwargtrans__({days:days_to_substract}));
index.indices(self.size).__getslice__(0,2,1);
export var mask_borders=np.where(img==0,true,false);
export var tick_locator=ticker.MaxNLocator(__kwargtrans__({nbins:5}));
print(function(){var __accu0__=[];for(var [k,v]of c_len.py_items())if(v>1)__accu0__.append([k,c_sum[k]]);return __accu0__}());
classifier.fit(X_train,Y);
export var sftp=ssh.open_sftp();
buffer.close();
_harden_stdout();
(function(){var __accu0__=[];for(var _f of map(func,collection))if(_f)__accu0__.append(_f);return __accu0__})();
cleaned_data.py_update(form.cleaned_data);
fig.set_size_inches(18.5,10.5);
var start_date=datetime.datetime(__kwargtrans__({year:2010,month:1,day:4}));
tornado.web.Application.__init__(self,handlers);
a.all_coeffs();
C.__setitem__([tuple([1,null,2]),tuple([0,null,1])],B);
l._legmarker.set_ydata(l._legmarker.get_ydata().__getslice__(1,2,1));
var top5=itertools.islice(array,5);
export var postalcode=models.CharField(__kwargtrans__({max_length:10}));
df2;
var names=pd.append(names,frame,__kwargtrans__({ignore_index:true}));
var words=list(text.py_split());
var counter=np.sum(id_arr.cumsum());
r[ind1].append(v);
var K=[1,10,2,4,5,5,6,2];
var fn=os.path.join(path,py_name);
plt.xlim(0,complete_longest);
var output=fp.getvalue();
root_logger.addHandler(root_log_handler);
var out=json.dumps(error_dict);
var b=a.reshape(tuple([5,2]));
app.login_manager.unauthorized();
var foo=urllib.request.urlopen(url,data);
os.remove(fname);
var __left0__=f();var _=__left0__[0];export var keep_this=__left0__[1];var _=__left0__[2];
(function(){var __accu0__=[];for(var word of words)__accu0__.append([word,list(neighbours(word))]);return dict(__accu0__)})();
var fig=plt.figure();
l.append(o);
var X=data.__getitem__([tuple([0,null,1]),tuple([1,null,1])]);
types.MethodType(func,obj,py_metatype);
my_ints[i]=a[i];
np.repeat(x,arrivals);
[4,5,6];
inspect.getargspec(foo);
newZip.writestr(attr,os.readlink(filePath));
sess.run(max_norm_ops);
export var xslt=ET.parse(xsl_filename);
var a=[1,1,2,4,4];
db.table.field1==x&db.table.field2==y;
plt.ion();
process(line);
ukol1.SummaryFormula();
c.setopt(pycurl.WRITEFUNCTION,b.write);
C.append(b_item);
imputed_array;
time.sleep(10);
deletedf[df.columns[0]];
var __left0__=np.ogrid.__getitem__([tuple([-a,n-a,1]),tuple([-b,n-b,1])]);var y=__left0__[0];var x=__left0__[1];
pd.DatetimeIndex(df.date)+pd.DateOffset(1);
response;
print(chessgame.get_moves());
print(dict(zip(headers,py_values)));
obj.username==request.user.username;
var test=function(){var __accu0__=[];for(var _=0;_<10;_++)__accu0__.append([0]*10);return __accu0__}();
myPlot.set_ylim(1,5);
print(mappings);
any(map(partial(contains_nested,__kwargtrans__({elmnt:elmnt})),some_iterable));
np.arange(N).reshape(shp).T.ravel();
self.val=1;
print(user.message);
self.response.out.write(jsonpickle.decode(encoded).__class__);
logging.getLogger().setLevel(logging.DEBUG);
var df=pd.DataFrame(X,__kwargtrans__({columns:vect.get_feature_names()}));
shared_settings.py;
Py_XDECREF(instance);
var __left0__=np.meshgrid(x,y);var X=__left0__[0];var Y=__left0__[1];
var L=[1,2,1,1,1,1,1,1];
s.__getslice__(0,match.start(),1);
self.edit=QtGui.QTextEdit();
m.py_update(f.__name__);
time.sleep(1);
print(np.dot(x,y).shape);
self._chips=10;
file.close();
list(NestedDictValues(a));
var __left0__=map(int,matchobj.groups());var x=__left0__[0];var y=__left0__[1];
export var module_ok=false;
var parser=argparse.ArgumentParser();
var fig=plt.figure();
ptr[0]=color[0];
partials[-1].append(element);
self.__dict__[key];
setattr(Test,py_name,mark);
f_new.write(add_text);
export var raw_data=json.load(f);
self.d[num]=1;
list(zip(x,d));
var gen=function(){var __accu0__=[];for(var x of xyz)if(!__in__(x,a))__accu0__.append(x);return py_iter(__accu0__)}();
i+=1;
locals();
print(base.__name__);
fig.colorbar(surf,__kwargtrans__({shrink:.5,aspect:5}));
getattr(self._ref1,py_name);
print(sys.getsizeof(mydict_as_string));
os.chdir(curdir);
sleep(.01);
export var DIRNAME=os.path.dirname("./P2JSnippets.py");
df.set_index(df.select_dtypes(__kwargtrans__({include:[np.datetime64]})).columns.tolist());
self.i=i;
var __except0__=StopIteration;__except0__.__cause__=null;throw __except0__;
var r=requests.post(login_url,__kwargtrans__({cookies:jar,data:acc_pwd}));
partial(evalsymbexp,__kwargtrans__({symbexp:symbexp}));
export var attrs_present=function(){var __accu0__=[];for(var x of a_list)if(hasattr(a_obj,x))__accu0__.append(x);return __accu0__}();
var __left0__=p.communicate();var stdout=__left0__[0];var stderr=__left0__[1];
signal.signal(SIGTERM,SIG_DFL);
mapper(ActualTableObject,table_object);
self.assertTrue(row[1][0]==counts[index_row][1]);
self.serv.close();
export var inputsList=function(){var __accu0__=[];for(var i=0;i<20;i++)__accu0__.append(str(i));return __accu0__}();
var __left0__=zip(...sorted(zip(foo,bar)));var foo=__left0__[0];var bar=__left0__[1];
print(repr(pBuf.value));
export var A_comp=A.view(__kwargtrans__({dtype:np.complex128})).__getitem__([,0]);
wrap_process(i);
var form=br.form;
NULL;
root.text_content();
Foo.instance_count+=1;
var result=function(){var __accu0__=[];for(var o of list1)if(__in__(o,diff))__accu0__.append(o);return __accu0__}();
platform.uname()[4];
var browser=webdriver.Firefox();
readline.set_startup_hook();
lib.stringfree(p);
self.cbar.draw_all();
int(aString);
o.close();
child.expect(pexpect.EOF);
f();
file.close();
pythoncom27.dll;
var pool=mp.Pool(mp.cpu_count()+2);
self.Destroy();
f.write(urlopen(tempurl).read());
var s=f.read();
sqrt(Math.pow(x,2)+Math.pow(y,2));
db.create_all();
print(text);
plt.figure();
var __left0__=tuple([np.linspace(x0,x1,length),np.linspace(y0,y1,length)]);var x=__left0__[0];var y=__left0__[1];
var out=x.reshape(zt,-1).__getitem__([idx.ravel(),np.arange(yt*xt)]).reshape(-1,xt);
var __left0__=image.size();var width=__left0__[0];var height=__left0__[1];
print(is_true(y)||is_false(y));
var prop1=db.string;
t2.test();
var tree=ElementTree.parse(StringIO(string));
stat.S_ISREG(os.fstat(sys.stdout.fileno()).st_mode);
os.getuid()==0;
sp.communicate();
p.wait();
tuple([[6,5,4,5,6,7,6,5]]);
result.append(foo(x));
var user=models.ForeignKey(User);
os.close(in_fd);
msvcrt.setmode(sys.stdin.fileno(),os.O_BINARY);
var row=[];
export var svec=function(){var __accu0__=[];for(var rank of ivec)__accu0__.append(a[rank]);return __accu0__}();
var d=Image.objects.filter(__kwargtrans__(kwargs));
var fig=plt.figure();
var credentials=session.get_credentials();
tuple([list1,list2]);
export var mat_vals=np.vstack(listvals);
br.set_cookiejar(cj);
mylist.insert(0,last_el);
export var mdat=np.ma.masked_array(dat,np.isnan(dat));
var root=tk.Tk();
print(settings.INSTALLED_APPS);
tuple([aClk.start(),numpy.power(c,2),aClk.stop()]);
list(d.py_items())[0];
var user=User.objects.create(__kwargtrans__(validated_data));
export var clusterList=list(clusterList);
m.search(line);
export var y_copy=y.__getslice__(0,null,1);
re.sub(to_be_replaced,function __lambda__(x){return random.choice(py_items)},string);
myList.append(py_name);
parseXMLFromLink();
bool(set(a)&set(b));

counts[n]+=1;
setattr(self,k,v);
outputfile.writelines(data_parser(line,reps));
sys.exit(app.exec_());
var p=Point(x,y);
var v=mahotas.convolve(r-w,pattern);
export var diamond=2;
self.value=value;
map(function __lambda__(x){return x*2},args);
var contents=f.read();
var db=SQLAlchemy();
widget.show();
export var current_value=py_next(a);
Ainv[i]=np.linalg.solve(A[i],identity);
plot([40,50,60]);
var df=DataFrame(np.random.randn(10,2));
var fig=plt.figure();
tm+=datetime.timedelta(__kwargtrans__({minutes:5}));
var data=np.random.random(tuple([height,width,numframes]));
a.insert(lo,x);
var DD=datetime.timedelta(__kwargtrans__({days:90}));
gevent.sleep(.5);
(function(){var __accu0__=[];for(var x of self)__accu0__.append(x);return __accu0__})();
var string=remove_last_line_from_string(string);
xl.sheet_names;
soup.html.findAll(__kwargtrans__({text:true,recursive:false}));
succs[u].append(v);
unmatched.remove(element);
var doc=etree.ElementTree(root);
export var parser2=argparse.ArgumentParser();
self.sslobj=ssl.wrap_socket(self.sock,self.keyfile,self.certfile);
L.insert(index,object);
ax.axis([min(x)-1,max(x)+1,min(y)-1,max(y)+1]);
jpgs.py_sort();
var ordered=function(){var __accu0__=[];for(var e of ordered)if(__in__(e,unord))__accu0__.append(e);return __accu0__}();
time.strftime(locale.nl_langinfo(locale.D_T_FMT),time.localtime());
var html_source=browser.page_source;
args.append(parser.parse_expression());
min(max(bottom,num),top);
conn.close();
export var heap=function(){var __accu0__=[];for(var [key,value]of list(the_dict.py_items()))__accu0__.append(tuple([-value,key]));return __accu0__}();
archive.close();
self.assertGreater(value,0);
n==n.__getslice__(0,null,-1);
logger.addHandler(logging.StreamHandler(sys.stdout));
export var ages=np.arange(100);
f.seek(p);
s.commit();
var fig=plt.figure();
writer.writerow(rowinprot);
var size=screen.GetSize();
var sock=socket.socket(socket.AF_INET,socket.SOCK_DGRAM);
wx.Icon(sys.argv[0],wx.BITMAP_TYPE_ICO);
temp_dict[py_values[1]]=1;
var base=os.path.splitext(thisFile)[0];
root.mainloop();
export var combined_decorator=compose(decorator1,decorator2);
print(df2);
df.ix[0]=df.ix[2];
var X=np.array(X);
update_list(a);
test_suite.addTest(userservice_test.suite());
surf2.set_colorkey(TRANSPARENT);
requests.post(url,data,__kwargtrans__({headers:headers}));
var seen=set();
var g=tf.get_default_graph();
isinstance(N,int);
self.crawler.crawl(self.spider);
true;
export var newpath=os.path.join(dstdir,os.path.basename(path));
print(yaml.load(f));
l.__code__.co_argcount;
joystick.init();
var fig=plt.figure();
export var date_of_appointment=models.DateField();
var start_time=time.time();
fsb_frame.Show();
driver.py_get(web_address_desired);
str(s);
sentence_dict[word].append(prev);
var reg=line.py_split()[2];
export var dec=decimal.Decimal(num);
isinstance(X,py_metatype);
export var chrome=webdriver.Chrome(__kwargtrans__({chrome_options:chrome_options}));
p.start();
var a=[0,0,15,17,16,17,16,12,18,18];
var driver=webdriver.PhantomJS(__kwargtrans__({service_args:service_args}));
var a=zeros(tuple([6,8]));
Session.add(target);
var __except0__=Exception();__except0__.__cause__=null;throw __except0__;
L.append(a);
tuple([len(list(iterable)),-L.index(item)]);
Base.metadata.create_all(source_engine);
s.close();
var data=json.loads(data);
var coords=np.vstack(function(){var __accu0__=[];for(var item of[xi,yi,zi])__accu0__.append(item.ravel());return __accu0__}());
groups[word.__getslice__(0,-1,1)].append(word);
(function(){var __accu0__=[];for(var _ of py_iter(int,1))__accu0__.append(m+np.random.randn()*s);return py_iter(__accu0__)})();
var ans=x/y;
var m=sock.recvfrom(1024);
queue.append(multiprocessing.Queue());
self.obtainingparams(df,tau_1,tau_2,residuals);
var wb=xlwt.Workbook();
ax.xaxis.set_major_locator(copy.copy(Locator));
cur.executemany(insert_query,data);
var a=1;
r.__getitem__([tuple([0,6,1]),tuple([0,6,1])]);
var sorted_B=numpy.py_sort(B);
var a=np.arange(10);
print(grades.most_common());
var __left0__=itertools.tee(csv.reader(f,__kwargtrans__({delimiter:d})));export var reader1=__left0__[0];export var reader2=__left0__[1];
curl.perform();
self.button.pack();
var ax=fig.add_subplot(111);
process.crawl(EPGD_spider);
plot_res(fig);
f.__call__();
curdict[last_item]+=1;
p.wait();
var y=np.arange(10);
var b=[2,4,2];
driver.py_get(url);
var M=M[M.getnnz(1)>0].__getitem__([tuple([0,null,1]),M.getnnz(0)>0]);
var ax=fig.add_subplot(111);
b.append(a[i]);
np.array(U).argsort().argsort();
var http_request=AbstractHTTPHandler.do_request_;
bad_emails.append(email);
export var new_names=names.__getslice__(0,i,1)+names.__getslice__(i+1,null,1);
smtp_server.close();
np.nanargmax(b,__kwargtrans__({axis:0}));
asyncore.dispatcher.__init__(self,socket);
var newNums=function(){var __accu0__=[];for(var [i,x]of enumerate(nums))if(x==12)__accu0__.append(i);return py_iter(__accu0__)}();
print(s[0]);
g.close();
print(array(data).reshape(...length));
var data=f.read();
export var my_value=int(my_value);
list(os.environ.py_keys());
var df=pd.read_csv(filename,__kwargtrans__({index_col:0}));
var soup=BeautifulSoup(data);
lis[0];
self._max_workers+=1;
f_old.close();
A[1][1]=0;
sys.getdefaultencoding();
export var reordered=tf.gather(a,tf.nn.top_k(a.__getitem__([tuple([0,null,1]),2]),__kwargtrans__({k:4})).indices);
var d=os.path.getmtime(x);
pd.DataFrame(df.py_values[ge_start&le_end],df.index[mask],df.columns);
df.mask(mask);
cache.init_app(app);
myFile.myFunction();
suite.addTest(suitefn());
export var id_arr=np.concatenate(tuple([a.__getitem__([tuple([0,null,1]),0]),b.__getitem__([tuple([0,null,1]),0])]));
delta-datetime.timedelta(__kwargtrans__({microseconds:delta.microseconds}));
var df=pd.DataFrame(d);
var x=np.random.randn(100,100,100);
df.drop(rows_to_drop_indices,__kwargtrans__({inplace:true}));
output_df.sort_index(__kwargtrans__({inplace:true}));
main();
pandas2ri.ri2py(r[py_name]);
var value=blob_reader.read();
var parentdir=os.path.dirname(currentdir);
abortable_async_result.abort();
var pos=nx.spring_layout(G);
print(x);
self._dictionary[key];
var j2=function(){var __accu0__=[];for(var x of j)if(x>=5)__accu0__.append(x);return __accu0__}();
x1[np.where(x1==input_array.shape[0])]=x0.max();
var a=datetime(2011,11,24,0,0,0);
export var mynums=map(int,s.py_split());
sess.run(outputs,__kwargtrans__({feed_dict:feed}));
plt.show();
print(function(){var __accu0__=[];for(var x of g)if(x[2]>=1.5)__accu0__.append(x);return __accu0__}());
export var request_headers=dict({});
print(myconstants.MY_CONSTANT*2);
var sheet=book.sheet_by_index(0);
np.round([6.50000001,6.5],0);
var driver=webdriver.Firefox(profile);
l.append(5);
var b=[4,5,6,7];
fib(1E3);
documentation.rst;
i[1]*256+i[0];
export var scriptDirectory=os.path.dirname(sys.argv[0]);
print(textwrap.fill(text,__kwargtrans__({width:40})));
ocsp_url.strip();
df.drop(df.columns[-1],__kwargtrans__({axis:1}));
var s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);
s.send(dst_addr+src_addr+ethertype+payload+checksum);
gc.collect();
(function(){var __accu0__=[];for(var x of py_items)__accu0__.append(function __lambda__(x){return np.square(np.dot(x,-1*x))}(x));return __accu0__})();
print(df);
Z.append(tuple([a,B[__mod__(i,len(B))]]));
export var theobject=ast.literal_eval(thestring);
self.queue=mp.Queue();
var inputs=tf.nn.embedding_lookup(embedding,input_data);
var root=Tk();
mux41(0,1,1,0)(a,b);

java.awt.Toolkit.getDefaultToolkit().beep();
var arr=numpy.zeros(tuple([50,100,25]));
bk.show(p);
var __left0__=plt.subplots(__kwargtrans__({nrows:2,ncols:2}));var fig=__left0__[0];var axes=__left0__[1];
print(l);
str(self.val);
var __except0__=Error(key);__except0__.__cause__=null;throw __except0__;
a.py_pop(e);
match.group(2)+match.group(4);
some.dothis();
export var col_nonzeros=np.bincount(m.indices);
render_response();
var app=Flask(__name__);
main();
var s=np.sqrt(Math.pow(dp,2).sum(__kwargtrans__({axis:0})));
mongo.init_app(app);
fig.subplots_adjust(__kwargtrans__({top:1,bottom:0,right:1,left:0,hspace:0,wspace:0}));
print(im.size[0],im.size[1],white,black);
print(unicode_obj);
var f=urllib.request.urlopen(url);
var __left0__=j.__getslice__(4,7,1);var n=__left0__[0];var b=__left0__[1];var v=__left0__[2];
self.f.write(data);
day_list.index(inp);
var __left0__=mask.nonzero();var x=__left0__[0];var y=__left0__[1];
df.y[0].shape;
item.son=sons;
var a=[[1,2],[4,5,6],[],[7,12,14,16]];
var time=np.linspace(0,10,2E3);
shutil.rmtree(tempdir);
var output=ps.communicate()[0];
var ax=plt.subplot(111);
export var mime_msg=email.message_from_string(msg_str);
self.hide();
var c=function(){var __accu0__=[];for(var i=0;i<len(A)-n+1;i++)if((b==A.__getslice__(i,i+n,1)).all())__accu0__.append(i);return __accu0__}();
export var fruit_query=fruit_query.where(filtername==filtervalue);
bucket.delete_key(version.py_name,__kwargtrans__({version_id:version.version_id}));
var fig=plt.figure();
print(files);
numpy.fromstring(s);
parser.feed(line);
f.seek(0);
repr(.1);
var A=np.random.rand(5,2);
glist.py_sort();
df.dot(df.columns);
f.write(copied_file);
plt.show();
i.close();
export var acc=numpy.zeros(data.shape.__getslice__(0,2,1));
1-np.array(function(){var __accu0__=[];for(var b of M)__accu0__.append(function(){var __accu1__=[];for(var a of M)__accu1__.append(pearsonr(a,b)[0]);return __accu1__}());return __accu0__}());
export var counts_it=itertools.chain(...function(){var __accu0__=[];for(var c of data.py_values())__accu0__.append(py_iter(c.py_values()));return py_iter(__accu0__)}());
Fraction(.25);
df;
export var all_chars=function(){var __accu0__=[];for(var i=0;i<1114112;i++)__accu0__.append(chr(i));return py_iter(__accu0__)}();
var f=plt.figure();
conn.close();
len(s2);
export var mainFrame=Tkinter.Frame(root);
x.append(5);
m.group(1);
var app=Flask(__name__);
x.append(contour[0][0]);
len(function(){var __accu0__=[];for(var x of myList)if(__in__(x,myDict))__accu0__.append(x);return __accu0__}())>0;
adjustment_writer.write();
MyShell().cmdloop();
var args=opt.parse_args();
self.hello();
self.y_list[i]+self.slopes[i]*(x-self.x_list[i]);
f.pack_propagate(0);
plt.subplots_adjust(__kwargtrans__({right:.8}));
xc(os.path.join(dirpath,f));
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
headers.append(header);
ser.py_update(df);
os.chdir(tmpdir);
logger.addHandler(handler);
export var TEXTO=sys.argv[1];
(function(){var __accu0__=[];for(var i=0;i<len(a);i++)__accu0__.append(__mod__(i,2)?a[Math.floor(-i/2)]:a[Math.floor(i/2)]);return __accu0__})();
codeop.compile_command(line);
count+=1;
dlg.Show();
np.hstack(tuple([first,rest]));
var b=dict(zip(...py_reversed(zip(...list(a.py_items())))));
d[index]();
configParser.read(configFilePath);
any(function(){var __accu0__=[];for(var x of smaller)__accu0__.append(__in__(x,sbigger));return py_iter(__accu0__)}());
response;
var max_idx=l.index(max_val);
export var rand_key=d[take_nth(list(d.py_keys()),random.randint(0,len(d)-1))];
scons- -pymod;
output+=2*np.sum(integrand(a+h*np.arange(2,num-1,2)),__kwargtrans__({axis:1}));
print(key,value);
sha5sum;
temp.remove(item);
s.setsockopt(socket.SOL_TCP,socket.TCP_KEEPIDLE,1);

first.py_replace(__kwargtrans__({month:first.month+1,day:1}))-datetime.timedelta(__kwargtrans__({days:1}));
self.z.append(self.a[-1]*weight);
var __left0__=tuple([sin(theta)*cos(phi),sin(theta)*sin(phi),cos(theta)]);export var nx=__left0__[0];export var ny=__left0__[1];export var nz=__left0__[2];
random.shuffle(l);
var response=HttpResponse(f.read());
print(pivot.__getslice__(0,5,1));
sys.exit(app.exec_());
sys.getrefcount(x);
data.append(data_item);
functools.partial(self,obj);
sum(_counter(d));
np.random.seed(101);
els[0];
gr2.py_switch();
self.map(function __lambda__(x){return x*x});
var writer=csv.writer(response);
var dd=copy.deepcopy(d);
a.dump();
var output=stdout.read();
tf.logging.set_verbosity(tf.logging.ERROR);
var df=pd.concat([df]*1E4).reset_index(__kwargtrans__({drop:true}));
self.edges=dict({});
x[np.mod(np.arange(x.size),M)<N];
collections.defaultdict(tree);
var result=func(...args,__kwargtrans__(kwargs));
form;
p.terminate();
self.setSizePolicy(QSizePolicy.Preferred,QSizePolicy.Preferred);
t.getroot().text;
(function(){var __accu0__=[];for(var x of lst)if(x.isalpha())__accu0__.append(x);return __accu0__})();
blocks.append(f.read(block_end_byte));
var p=subprocess.Popen(cmd,__kwargtrans__({stdout:subprocess.PIPE,shell:true}));
print(sys.version);
self.after(1E3,self.onUpdate);
var conn=db.get_connection();
var thread=threading.Thread(__kwargtrans__({target:process}));
var p1=ctypes.c_int(1);
arbiter.stop();
export var instance_b_placeholder=models.ForeignKey(A,__kwargtrans__({null:true,blank:true}));
export var strnumbers=file.read().py_split();
var __left0__=zip(...combined);a.__setslice__(0,null,null,__left0__);b.__setslice__(0,null,null,__left0__);
ast.literal_eval(a);
model.Bar();
mainloop();
my_thread.start();
arr.resize(tuple([k,M]));
self._writecheck(zinfo);
sys.exit(main(sys.argv));
export var device_props=dbus.Interface(device_obj,dbus.PROPERTIES_IFACE);
plt.show();
input.close();
var fileMenu=tk.Menu(menubar,__kwargtrans__({tearoff:false}));
print(py_next(x));
var result=np.empty(tuple([2*N+1,2*N+1]));
pyglet.app.run();
len(perms);
print(paths[0][0]);
result[key]=value;
do_stuff_with(slog);
df.stack().nlargest(1);
var title=Column(String(200),__kwargtrans__({nullable:false}));
burroughs_wheeler.test(100);
g.bar(1);
print(tn.read_all());
setattr(self,n,v());
var __except0__=ValueError(modname);__except0__.__cause__=null;throw __except0__;
var a=np.array(a);
signal.alarm(0);
ax2.set_ylabel(ylabel);
self.splitter.addWidget(self.inspector);
self.sock=socket.socket(socket.AF_UNIX,socket.SOCK_STREAM);
export var SITE_ROOT=os.path.dirname("./P2JSnippets.py");
var match=function(){var __accu0__=[];for(var x=0;x<len(l)-1;x++)if(l[x]==165&&l[x+1]==90)__accu0__.append(x);return __accu0__}();
plt.plot(list(range(10)));
obj[key];
var b=[2,4,2];
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
mydict[search_age];
print(save_data.value);
len(spam);
map(function __lambda__(x){return f(fixed,x)},thelist);
help(obj.myfuction);
var m=myre.match(s);
(function(){var __accu0__=[];for(var c of col_names)if(all(function(){var __accu1__=[];for(var f of filter_array)__accu1__.append(!__in__(f,c));return py_iter(__accu1__)}()))__accu0__.append(c);return __accu0__})();
var a=np.arange(10);
self.assertEqual(42,self.widget.foo());
result;
f.write(value);
var x=df[pd.isnull(df[col])].index.astype(float).py_values;
easydiff2[0]=0;
arr.T.shape;
data.head();
list(range(diamond-1,-1,-1));
self.setLayout(self.vbox);
export var basetwo=partial(int,__kwargtrans__({base:2}));
time.sleep(15);
list(pair_iter);
new_lists[list_index].append(i);
painted_map.save(sys.argv[2]);
var df=pd.read_csv(StringIO(txt),__kwargtrans__({delim_whitespace:true}));
json.loads(text);
f.close();
t.start();
a*b;
var cur=con.cursor();
export var hsizer=wx.BoxSizer(wx.HORIZONTAL);
var id=Column(Integer,__kwargtrans__({primary_key:true}));
lib.find_vertex(vertices,len(vertices),lower,higher);
plot(img50_order1.__getitem__([50,tuple([0,null,1]),1]));
export var HiPRIOpoller=zmq.Poller();
response;
DBSession.begin();
sample.sum();
delta.total_seconds();
print(df_concat.mean());
settings.configure();
var __left0__=ax.get_xlim();export var left=__left0__[0];export var right=__left0__[1];
print(new_list);
var parser=argparse.ArgumentParser();
export var as_to_b=a.searchsorted(b,__kwargtrans__({sorter:a_to_as}));
str(output[0]);
c.close();

func(s);
var cap=cv2.VideoCapture(0);
Base1.bar();
sio.close();
var f=urllib.request.urlopen(req);
demandimport.enable();
self.frame=wx.Frame(parent,__kwargtrans__({title:title,size:size}));
var r=scipy.sqrt(Math.pow(x,2)+Math.pow(y,2)+Math.pow(z,2));
func_results.append(child(...args));
self.assertGreaterThan(len(foo.config.getboolean(str(),str())),0);
print(myutilities.gen_hex_colour_code());
hello();
sys.stderr=dummyStream();
var im=Image.open(sys.argv[1]);
var root=Tk();
a.__setslice__(0,len(idx),null,a.__getslice__(0,len(idx),1)+idx);
plot(f(a,b));
var df=DataFrame(dict(__kwargtrans__({x:[0,0,1,0,1],y:[1,0,1,1,0],z:[0,0,1,0,1]})));
var cursor=conn.cursor();
print(hello());
pl.show();
img.seek(n);
cv2.line(img,tuple([x1,y1]),tuple([x2,y2]),tuple([0,0,255]),1);
print(tuple([x,y]));
var __left0__=channel.exec_command(command);var stdin=__left0__[0];var stdout=__left0__[1];var stderr=__left0__[2];
print(list(function(){var __accu0__=[];for(var it of itertools.cycle(iters))__accu0__.append(py_next(it));return py_iter(__accu0__)}()));
d[row_key][idx]=col;
np.vstack(tuple([rlin*first,np.power(rlin,second)]));
opath.exists(path)?open(path).readlines():[];
self.__setitem__(key,value[key]);
column1.append(column.py_split(data_separator)[0]);
r+=1;
page.SetSashGravity(.5);
result.py_setdefault(value,[]).append(value);
a.get_x(true);
var result=[];
nosetests- -help;
c.showPage();
test();
print(longest_sum([1,1,1,1,1,1,4],[],6));
a[0][1]=9;
f.seek(-4,2);
scipy.sparse.csgraph._validation;
export var bucket=conn.get_bucket(bucket_name);
print(iorf.fup(2.5));
var AB=map(sum,zip(A,B));
file.truncate();
login(request,user);
do_quit(args);
main.py;
vobj.prettyPrint();
my_dict;
export var end_pts=sorted([a_left,a_right,b_left,b_right]);
self.py_metatype.get_declaration().is_anonymous();
np.all(np.all(arr==arr.__getitem__([0,tuple([0,null,1])]),__kwargtrans__({axis:1})));
merge(a[key],b[key],path+[str(key)]);
export var unique_char_count=len(unique);
export var my_table=table();
self.console.close();
audio.save();
export var serial_port=serial.Serial(port,baud,__kwargtrans__({timeout:0}));
print(cookie.py_name,cookie.value,cookie.domain);
Example.__subclasses__();
ical_atch.set_payload(ical);
var f=requests.py_get(link);
print(line);
self.driver.get_screenshot_as_file(file_path);
out.append(item);
cPickle.dump(self.__dict__,f,2);
d.seconds+d.days*86400;
cls._current_instance;
py_next(f);
plt.show();
self.py_name=py_name;
var word=list(word);
bisect.bisect==bisect.bisect_right;
self.hello();
(function(){var __accu0__=[];for(var num of y)__accu0__.append(x+num);return __accu0__})();
bytearray(f.read());
var row_count=len(data);
var d=np.random.randint(n,__kwargtrans__({size:k}));
df.dtypes;
len(s)!=(s.add(x)||len(s));
export var Xtranspose=X.transpose();
print(sys.stdin.fileno());
var __left0__=function(){var __accu0__=[];for(var i of idxs)__accu0__.append(a[i]);return py_iter(__accu0__)}();var a1=__left0__[0];var b1=__left0__[1];var c1=__left0__[2];
plt.plot(x_val,y_val);
self.cool_dict[attr]=value;
print(model._meta.db_table);
print(chr(c));
var parser=argparse.ArgumentParser();
Thread.__init__(self);
print(result);
var parser=argparse.ArgumentParser();
var dy=0;
list(links).py_sort(__kwargtrans__({key:function __lambda__(x){return(x[1]-1)/(x[2]+2)^1.5}}));
self.transport.write(msg);
var results=p.map(do_work,payloads);
root.withdraw();
resp.read();
scalify(function(){var __accu0__=[];for(var a of args)__accu0__.append(a+1);return __accu0__}());

self._running=true;
multiprocessing.freeze_support();
df.dtypes;
var df=df.ix.__getitem__([tuple([0,null,1]),cols]);
Base.metadata.sorted_tables;
print(fmt.format_map(data));
plt.hist(bootstrapped_scores,__kwargtrans__({bins:50}));
view_func(request,...args,__kwargtrans__(kwargs));
export var pair=frozenset([element1,element2]);
export var x_dt=function(){var __accu0__=[];for(var t of x)__accu0__.append(datetime.datetime.combine(my_day,t));return __accu0__}();
export var uncompressed_path=os.path.join(FILE_DIR,fname);
widget.show();
var profile=graph.get_object(user);
validate(yaml.load(good_instance),yaml.load(schema));
export var GENERATE_MAN=NO;
export var GENERATE_RTF=NO;
var i=df.index.py_values;
x.boxplot();
od[a].append(b);
types.TypeDecorator.__init__(self,__kwargtrans__({length:self.impl.length}));
hash(tuple([self.x,self.y]));
export var new_contact=form.save();
velcro.left(90);
var r=function(){var __accu0__=[];for(var x of list(d.py_keys()))__accu0__.append(function(){var __accu1__=[];for(var i of d[x])__accu1__.append(i);return __accu1__}());return __accu0__}();
print(L);
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
platform.machine();
var py_name=models.CharField(__kwargtrans__({max_length:25}));
df;
k.fit(X.__getitem__([tuple([0,null,1]),i]));
nbrs.kneighbors(X);
print(i);
var channels=session.query(Channel).all();
export var CM=np.zeros_like(data);
var draw=ImageDraw.Draw(image);
len(cPickle.dumps(a>10));
np.column_stack(np.unravel_index(idx,lon.shape)).tolist();
Maemo5Spec();
var df=pd.concat([df.iloc.__getitem__([tuple([0,null,1]),tuple([0,4,1])]),df.iloc.__getitem__([tuple([0,null,1]),tuple([4,null,1])])],__kwargtrans__({py_keys:tuple([1,2]),axis:1}));
self.text.grid(__kwargtrans__({row:0,column:0,sticky:tuple([N,S,E,W])}));
self.data.append(node.py_name);
plt.plot(x);
var __left0__=plt.subplots(__kwargtrans__({nrows:2,ncols:2,figsize:tuple([8,8])}));var fig=__left0__[0];var axes=__left0__[1];
var a=np.array([2,6,12,20,24,40,42,51]);
fd.close();

var line=p.stdout.readline();
n.activate(tuple([2,2]));
var fig=plt.figure();
var stdout=sys.stdout;
var __left0__=plt.subplots(1);var fig=__left0__[0];var ax=__left0__[1];
var inverted_image=PIL.ImageOps.invert(image);
parser.parse_args(cmdline,__kwargtrans__({namespace:namespace}));
plt.scatter(x,y,__kwargtrans__({zorder:2}));
axes.__getitem__([0,1]).hexbin(x,y,__kwargtrans__({gridsize:nbins}));
export var target_vertex=graph.vs[target_vertex_id];
var bins=np.linspace(math.ceil(min(data)),math.floor(max(data)),20);
sum(list(takewhile(function __lambda__(x){return x<4E6},evenfibs)));
log_file.close();
pygame.camera.list_camera();
self.label.installEventFilter(self);
print(df2.CET.dtype);
(function(){var __accu0__=[];for(var x of test)__accu0__.append(x.__getslice__(0,-1,1));return __accu0__})();
tex.see(tk.END);

lists.append(line.rstrip().py_split());
sys.exit(1);
print(value);
random.getrandbits(64);
proc.wait();
(function(){var __accu0__=[];for(var group of list(result.py_values()))for(var v of group)__accu0__.append(v);return __accu0__})();
de.clicked.connect(self.clicked);
var merged=merge(string1.lower().py_split(),string2.lower().py_split());
process_event(e);
self.__dict__==other.__dict__;
var axes=fig.add_subplot(1,1,1);
ard.flush();
d[i]+=1;
export var x16=[];
str.__new__(cls,arg);
var y=[];
var panel=wx.Panel(frame,-1);
self.scrollbar.set(...args);
print(pd.concat([df[mask],df[~mask]]));
table.py_sort(__kwargtrans__({reverse:true,key:Team.getGoalDifference}));
mysend(s,str(i));
Thread.__init__(self);
var dt=utc_dt.astimezone(tz);
var a=np.array(a);
pool.close();
plt.show();
setattr(self,key,true);
print(data.shape);
requests_api(uri,__kwargtrans__({params:params,cookies:cookies,headers:headers}));
ax.plot(np.arange(0,i*4,i));
react(main);
var draw=ImageDraw.Draw(im);
var soup=BeautifulSoup(response);
a[abs(a)<=100];
plt.xlim([-l/2,l/2]);
im_rgb.putpixel(tuple([x,y]),tuple([b,g,r]));
Thread.__init__(self);
var book=xlwt.Workbook();
var new_list=np.delete(myList,toRemove);
self.form_invalid(form,__kwargtrans__(kwargs));
var line=proc.stdout.readline();
var __left0__=server.accept();var conn=__left0__[0];var addr=__left0__[1];
numpy.random.shuffle(all_idxs);
f2();
map(operator.itemgetter(0),L);
var df=pd.DataFrame(c);
len(y);
gunicorn_django-c/path/to/gunicorn_settings.py;
User.objects.all();
var a=np.array([[1,2],[1,2]]);
__mod__(year,4)==0&&(__mod__(year,100)!=0||__mod__(year,400)==0);
var mask=np.ones(A.shape[1],__kwargtrans__({dtype:bool}));
var __left0__=im.size;var width=__left0__[0];var height=__left0__[1];
(function(){var __accu0__=[];for(var k of result_keys)__accu0__.append(programs[k]);return __accu0__})();
print(l.data);
ax2.set_ylim(miny+dy,maxy+dy);
np.add.reduceat(a,[0,4,7]);
do_something();
var y=np.sin(x)+np.random.random(100)*.2;
email.send(to,headers,body);
_install.run(self);
np.sin(x+y);
isinstance(Math.pow(99,10),int);
rows.append(tuple([id,sc]));
main();
df;
var locations=numpy.argsort(A);
var b=p.map(func,a);
export var Form=QtGui.QWidget();
df;
var cursor=conn.cursor();
self.runner.start(command);
i+=1;
var soup=BeautifulSoup(xml_string);
sorted(list(range(len(vector))),__kwargtrans__({key:vector.__getitem__}));
var str_list=function(){var __accu0__=[];for(var _f of str_list)if(_f)__accu0__.append(_f);return __accu0__}();
export var cipher=AES.py_new(__kwargtrans__({key:secret,mode:AES.MODE_CBC,IV:iv}));
(function(){var __accu0__=[];for(var x of constrained_sum_sample_pos(n,total+n))__accu0__.append(x-1);return __accu0__})();
time.sleep(5);
sys.settrace(tracefunc);
max(sqrt(stddev/mode),1)<=x&&x<=sqrt(stddev/mode)+1;
mask[mask]&=x[mask]<-1E3;
gui.mainloop();
self.conditions=function(){var __accu0__=[];for(var c of self.conditions)__accu0__.append(helper(c,py_metatype,params));return __accu0__}();
MULT(z,z,z);
df;
export var complist=p.map(buildcomp,np.column_stack(tuple([VV1,HH1])));
da.focus_set();
pickle.dump(dictname,f);
s.lstrip();
mymodule.py;
py_true;
py_next(py_iter(d.py_items()));
var d=d.py_get(k);
func(...args,__kwargtrans__(kwargs));
var soup=BeautifulSoup.BeautifulSoup(htstring);
var words=frozenset(chain(wordList.__getslice__(0,1,1),wordList.__getslice__(2,null,1)));
-W15- -ignore<catalina.log;
ax1.legend(h1+h2,l1+l2,__kwargtrans__({loc:2}));
var parsed=urlparse.urlparse(url);
var a=np.arange(10);
f(...args,__kwargtrans__(kwargs));
start_response(status,response_headers);
G.add_edge(1,2);
poi.reset_index().plot.scatter(0,1,__kwargtrans__({ax:axes}));
export var batch_request=gdata.spreadsheet.SpreadsheetsCellsFeed();
var p=Popen(args,__kwargtrans__({stdin:PIPE,stdout:PIPE,stderr:PIPE}));
fp.close();
dict.__getitem__(self,closest_key);
browser.select_form(form_name);
main();
result[header.value].append(col.value);
main.py;
log_auth_token(user.get_auth_token());
print(i);
layer;
self.grammar=self.multilineCommands;
f.seek(0);
plt.draw();
seen.add(obj.thing);
iren.TerminateApp();
export var fexdata=dict({});
c[0]===c[1];
l2.grid(__kwargtrans__({row:1,column:0,padx:tuple([10,100])}));
d[c]+=1;
print(enumerate(words));
var fig=plt.figure();
C.shape;
var mask=np.array([true,false,true]);
numpy.frombuffer(bytestream.read(4),__kwargtrans__({dtype:dt}))[0];
print(a_set.add(1));
names.add(func.__name__);
print(response.body);
a+=b;
os.makedirs(dirmk);
export var patch=ax.add_patch(patch);
py_next(combs);
export var confirmed=get_object_or_404(EmailConfirmed,__kwargtrans__({user:request.user}));
var text=f.read();
var m=numpy.random.random_integers(0,1E6,tuple([1E3,500]));
var app=wx.App(false);
var result=function(){var __accu0__=[];for(var w of vocab)if(rx.match(w))__accu0__.append(w);return __accu0__}();
mydict[mykey];
G.edges();
print(function(){var __accu0__=[];for(var r of process_row(row))__accu0__.append(r);return __accu0__}());
serversocket.bind(tuple([socket.gethostname(),port]));
df[cols]=df[cols].ffill();

self.canvas.itemconfig(self.idImage,__kwargtrans__({anchor:NW}));
plt.show();
s.shutdown(1);
var response=self.opener.open(url);
self.bar=bar;
plt.hold(true);
py_typeof(s);
print(s.recv(256));
self.show_frame_in_display(image_path);
ax2.plot(xvals,xvals,__kwargtrans__({linewidth:7}));
Py_Initialize();
timeit[Model.objects.filter(__kwargtrans__({date_created__gte:today}))];
f.savez(array);
placemark.save();
var df=pd.read_json(sys.stdin);
win.show();
handler.serve_forever();
self.transport.write(msg);
server.sendmail(FROM,TO,message);
response.write(xlsx_data);
iwantthis;
frozenset(chain.from_iterable(L));
HttpResponse(str(deserialized));
signal.signal(signal.SIGALRM,handler);
var reader=csv.DictReader(f);
foo.whatever();
x.hexdigest();
self.value=1;
var tree=defaultdict(function __lambda__(){return defaultdict(function __lambda__(){return defaultdict(list)})});
self.new_attr=2;
export var cdf_samples=np.random.uniform(0,1,__kwargtrans__({size:tuple([100,100])}));
ax.set_xlim(min_x,max_x);
count.most_common()[1];
var X_train=np.concatenate(tuple([X_train,catVar]),__kwargtrans__({axis:1}));
self.bell();
word.append(char);
export var data_loaded=pickle.loads(data);
(function __lambda__(){return _addup(n)});
print(py_typeof(1));
os.rmdir(dirname);
main();
row.__setslice__(0,null,null,function(){var __accu0__=[];for(var i of new_order)__accu0__.append(row[i]);return __accu0__}());
file.seek(pos,os.SEEK_SET);
user.save();
var ax=fig.add_subplot(111);
var mask=np.random.randint(0,2,__kwargtrans__({size:Y.shape})).astype(np.bool);
var soup=BeautifulSoup(urllib.request.urlopen(url).read());
print(newurl);
ax.bar(x,y,width,__kwargtrans__({color:c,label:lb}));
-settings.py;
result.append(attracted_point(p,attractor,f));
result;
console_handler.setLevel(logging.DEBUG);
memoryview(s.__getslice__(0,null,1))<memoryview(s.__getslice__(1,null,1));
bundle;
len(self._list);
fh.setLevel(level);
export var image_path=os.path.join(mypath,each_file);
print(function(){var __accu0__=[];for(var [a,b]of itertools.product(A,B))__accu0__.append(a+b);return __accu0__}());
datetime(...args,__kwargtrans__({tzinfo:utc_offset(x)}));
export var your_ip=f.read();
var py_values=function(){var __accu0__=[];for(var f of fields)__accu0__.append(f.py_get());return __accu0__}();
arr.append(x);
self.members.append(person);
loop.close();
f.close();
Year.append(row[0]);
t2.start();
var im=Image.open(StringIO(r.content));
var py_items=deque([1,2]);
time.sleep(2);
db.session.add(user);
t1.start();
compressor.close();
var a=np.zeros(__kwargtrans__({shape:tuple([5,5]),dtype:float}));
var panel=tk.Label(root,__kwargtrans__({image:img}));
var ndarray=np.PyArray_SimpleNewFromData(1,shape,np.NPY_INT,self.data_ptr);
var pool=Pool(__kwargtrans__({processes:4}));
L.append(i);
Math.floor(n/1);
result._fields;
export var cc=socket(AF_INET,SOCK_STREAM);
var fig=plt.figure();
element_list.append(json.dumps(dict([[key,element[key]]])));
numpy.core.records.recarray;
np.dstack(tuple([a1,b1])).transpose(2,0,1);
out_list.append([row.lat,row.long]);
outGroup.append(n);
views.py;
i+=1;
var y=np.random.randint(0,10,__kwargtrans__({size:tuple([10,2])}));
ax.plot_date(ts.index.to_pydatetime(),ts.data);
i+=1;
outcsv.writerows(cursor.fetchall());
print(it.__getslice__(2,12,2));
var word_list=function(){var __accu0__=[];for(var s of value_list)__accu0__.append(s.translate(remove_punctuation_map));return __accu0__}();
cmp(x,y);
pycallgraph.start_trace();
print(row.to_frame().T);
var py_keys=list(d.py_keys());
self.view.form_valid(self.form);
export var cam=VideoCapture(0);
var str_list=list(filter(bool,str_list));
export var WANTS_DEACTIVATION=_WANTS_DEACTIVATION;
export var DISABLE_DEACTIVATION=_DISABLE_DEACTIVATION;
wavwriter.setframerate(fs);
export var upform=UserProfileForm(request.POST,__kwargtrans__({instance:user.get_profile()}));
var file_name=sys.argv[0];
a.f=types.MethodType(f,a);
all(function(){var __accu0__=[];for(var [x,y]of zip(pattern,sequence))__accu0__.append(x==y);return py_iter(__accu0__)}());
var __except0__=exc_info[0](exc_info[1]).with_traceback(exc_info[2]);__except0__.__cause__=null;throw __except0__;
var result=[productcode,amountentered];
used.extend(function(){var __accu0__=[];for(var x of combinations(c,2))__accu0__.append(set(x));return py_iter(__accu0__)}());
var path=sys.argv[0];
outfile.write(infile.read());
print(id(S2));
var __left0__=plt.subplots();var fig=__left0__[0];var ax1=__left0__[1];
sys.setrecursionlimit(1E4);
new_dict[key]=recursive_dict_eval(evaled_value);
plt.show();
var list1=list(map(int,list1));
sorted(strings,__kwargtrans__({cmp:strcoll}));
var queryset=get_books();
curs.execute(create_table_stm);
alexander2().sum();
var c=Counter(function(){var __accu0__=[];for(var j of trainY)for(var i of j)__accu0__.append(i);return __accu0__}());
pdb.set_trace();
self.SetTopWindow(self.fr);
py_typeof(MyClass);
up.save();
var app=Flask(__name__);
var x=pd.DataFrame(np.random.randn(20,5));
self.canvas=Canvas(self,-1,self.figure);
print(x.format(42));
len(data)-len(list(filter(is_surrogate,data)));
var foo=pointer(temp_foo);
tuple([[0,1,0,0,0]]);
inverted_dictionary[new_key].append(key);
print(list(reader));
show();
ax.plot(t,s);
var pid=os.fork();
print(line);
var m=numpy.zeros(tuple([N,N]));
sublime.set_clipboard(data);
ax.margins(.1);
self.setGeometry(0,0,1024,768);
print(x);
x+=1;
var __left0__=function(){var __accu0__=[];for(var [i,j]of zip(tuple([x,y,z]),indices))__accu0__.append(i[j]);return __accu0__}();export var xv=__left0__[0];export var yv=__left0__[1];export var zv=__left0__[2];
schedule_once(tasks.some_task_b,__kwargtrans__({interval:120}));
ax.set_xticks(xticks_minor,__kwargtrans__({minor:true}));
self.cond.wait(self.mtx);
export var X_rec=pca.inverse_transform(X_proj);
boxintprinter(value);
boxstringprinter(value);
boxsequenceprinter(value);
conf.py;
s.close();
numpy.argsort(row).__getslice__(-6,null,1);
nukedir(path);
cPickle.dump(root.config(),f,-1);
var result=func(...args,__kwargtrans__(kwargs));
plt.contourf(data,__kwargtrans__({cmap:cmap,levels:[1,4,8]}));
sorted(tuples,__kwargtrans__({key:function __lambda__(x){return x[2]}}));
tuple([[.09558515,-1.96982215,-.58196525]]);
df;
var html=str(soup);
test.reshape(-1,2).__getslice__(0,null,2);
df.dtypes;
imshow(im);
index.exposed=true;
self.fn(...args,__kwargtrans__(kwargs));
var a=np.arange(20);
export var related_to_user=Room.objects.filter(__kwargtrans__({content_type:ctype}));
to_product.append(function(){var __accu0__=[];for(var i of process(v))__accu0__.append(tuple([k,i]));return __accu0__}());
var book=xlwt.Workbook();
c.save();
print(json.dumps(c,__kwargtrans__({cls:AlchemyEncoder})));
self.window=stdscreen.subwin(0,0);
Depends(report,speed);
var __left0__=tuple([0,0,0,0]);var x1=__left0__[0];var x2=__left0__[1];var y1=__left0__[2];var y2=__left0__[3];
termios.tcsetattr(file.fileno(),termios.TCSADRAIN,old_attrs);
ssh_handler(server,__kwargtrans__({command:mycmd}));
__all__.py_update(pubattrs);
print(x[2]);
s.__getslice__(end_of_leader,start_of_trailer,1);
var query=query.filter(~table_a.id.in_(subquery));
var labels=labels.reshape(c);
item2node[node].add_child(ch);
var ws=wb.active;
data_with_zeros.apply(divide,__kwargtrans__({args:tuple([data_with_zeros])}));
json.dumps([dict1,dict2]);
(function(){var __accu0__=[];for(var counter of counters)__accu0__.append(map(counter.__getitem__,all_features));return __accu0__})();
urllib.request.urlopen(...args,__kwargtrans__(kwargs));
(function __lambda__(x){return!__in__(x.lower(),stopwords)});
result.extend(flat(item));
var ax=pyplot.subplot(111);
dumper.represent_dict(list(data.py_items()));
main();
var id=Column(Integer,__kwargtrans__({primary_key:true}));
out_2.read();
os.kill(os.getpid(),signal.SIGTERM);
plt.grid();
var results=table1.objects.exclude(__kwargtrans__({field1__in:inner_qs}));
ax.plot(xi,yi);
worksheet.write(row,col+1,item);
object.__setattr__(self,attr,value);
urllib.request.install_opener(opener);
var cur=con.cursor();
settings.setSupportZoom(true);
export var acids=function(){var __accu0__=[];for(var base of sublist)__accu0__.append(aminoacid[base]);return __accu0__}();
var heap=function(){var __accu0__=[];for(var [k,v]of list(some_dict.py_items()))__accu0__.append(tuple([v,k]));return __accu0__}();
fig.add_subplot(ax);
fp.close();
NotImplemented;
findsubset();
t1+pd.datetools.relativedelta(__kwargtrans__({months:k}));
stophttp.start();
var m=hashlib.md5();
print(random.sample(d,num));
pylab.subplot(121);
var __left0__=np.mgrid.__getitem__([tuple([0,nr,1]),tuple([0,nc,1])]);var x=__left0__[0];var y=__left0__[1];
var df=pd.concat(function(){var __accu0__=[];for(var _=0;_<100;_++)__accu0__.append(df);return __accu0__}(),__kwargtrans__({axis:1,ignore_index:true}));
var instance=session.query(model).filter_by(__kwargtrans__(kwargs)).first();
var root=tk.Tk();
(function(){var __accu0__=[];for(var py_items of zip(...elements))__accu0__.append(apply(op,...py_items));return __accu0__})();
json.dumps(final);
var ax=plt.figure(__kwargtrans__({figsize:tuple([10,6])})).add_subplot(111);
var population=function(){var __accu0__=[];for(var [n,a]of allele_freqs)for(var _=0;_<n;_++)__accu0__.append(a);return __accu0__}();
numpy.frombuffer(bytestream.read(4),__kwargtrans__({dtype:dt}));
plt.semilogx(f,phase);
(function(){var __accu0__=[];for(var i of mysites)if(__in__(i,list(sites.py_keys())))__accu0__.append(i);return __accu0__})();
var response=urllib.request.urlopen(request);
print(rd[5]);
sys.stdout.write(str(result));
tuple([this_list.index(sub_list[0]),len(sub_list)]);
q.bind();
plt.imshow(X_digits[1778].reshape(tuple([8,8])),__kwargtrans__({cmap:plt.cm.gray_r}));
var app=create_app();
print(result);
numpy.nan===numpy.nan;
export var oldbase=os.path.splitext(filename);
export var img_hsv=cv2.cvtColor(img,cv2.COLOR_BGR2HSV);
myapp.run();
var pool=mp.Pool();
var x=np.array([true,true,false,false]);
var norm=mpl.colors.Normalize(__kwargtrans__({vmin:valmin,vmax:valmax}));
export var serialized_q=json.dumps(list(queryset),__kwargtrans__({cls:DjangoJSONEncoder}));
ax.set_yticks(scipy.arange(-1.5,1.5,.25));
L.__setslice__(a,a+span2,null,tmp);
print(Counter(yourtext.py_split()));
var c=[1,2];
db.session.add(user_from_factory);
var L=np.logspace(1,2,N);
repeat(partial(bar,42));
self.doc.build(pdf,__kwargtrans__({canvasmaker:NumberedCanvas}));
tuple([]);
print(url+urllib.parse.urlencode(getVars));
a.lower()==b.lower();

a.append(visdel());
var fig=plt.figure();
conn.close();
json_data_rdd.flatMap(f);
Logger.propagate;
os.chdir(sys._MEIPASS);
export var exogx=np.array(list(range(1,5)));
othercube.__setitem__([i,j,k],some2d);
stack.py_pop();
var t=threading.Thread(__kwargtrans__({target:wrapped_f,args:tuple([q])+args,kwargs:kwargs}));
var p=argparse.ArgumentParser();
var a=np.array([[8,9,7,0],[0,0,5,6]]);
parsed_response;
result;
f.read();
plt.show();
os.remove(link_name);
export var oauth_secret=models.CharField(__kwargtrans__({max_length:200}));
print(numpy.linalg.norm(x,__kwargtrans__({axis:1})));
var py_name=models.CharField(__kwargtrans__({max_length:128}));
self.cookies.append(cookie);
json.dump(record,f);
var L=pd.concat(function(){var __accu0__=[];for(var x of list(tmp.py_items()))__accu0__.append(data[x[0]].eq(x[1]));return __accu0__}(),__kwargtrans__({axis:1}));
map(__all__.py_get,fxnOfInterest);
hashlib.sha512(s+d).hexdigest();
var k=np.random.randint(4,16);
X.nonzero();
f.flush();
var soup=BeautifulSoup(html);
count_mers(s,__kwargtrans__({k:2}));
M.__setitem__([rownumber,tuple([0,null,1])],M.__getitem__([rownumber,tuple([0,null,1])])*scalar);

var a1=a;
export var toplevel=Toplevel();
var user=User.objects.py_get(__kwargtrans__({email:username}));
matrix;
print(x);
plt.draw();
sys.modules[pkgname];
var __left0__=tuple([f.__getslice__(0,i+1,1),f.__getslice__(i+1,null,1)]);var a=__left0__[0];var b=__left0__[1];
sorted(set(li))[-n];
export var userhome=userhome.encode(sys.getfilesystemencoding());
s+=timedelta(__kwargtrans__({days:1}));
httplib.HTTPConnection.send(self,s);
ax2.bar(x,y);
signal.signal(signal.SIGALRM,self.raise_timeout);
pprint(a);
var opener=urllib.request.build_opener(urllib.request.HTTPHandler);
a();
myFunction();
var pixmap=QtGui.QPixmap.fromImage(qimg);
descendents_ancestors.add(ancestor);
__import__(module);
Maybe(maybe.calc(function __lambda__(x){return Math.pow(x,2)}));
np.row_stack(tuple([a,b]));
django.db.transaction.rollback();
var y=np.random.rand(10)*(X.shape[1]-1);
var browser=webdriver.Firefox();
dom0.create();
out.write(line.py_replace(LASTKNOWN,CURRENT));
var b=np.transpose(a);
py_keys.append(word);
var session=smtplib.SMTP(server);
var result=func(...args,__kwargtrans__(kwargs));
im.size;
print(vectors.T/norms.__getitem__([tuple([0,null,1]),newaxis]));
handler2.setLevel(logging.ERROR);
list(a);
self.__dict__[key];
img.putdata(new_list_of_pixels);
var __left0__=linwcs(np.amin(glat),np.amax(glat),len(glat));export var cdeltaY=__left0__[0];export var crvalY=__left0__[1];
plot_point(xp,yp,sym);
self.process.start();
list(words_in_string(word_list,a_string));
var data=requests.py_get(u).json();
var start_time=time.time();
var feature_names=vectorizer.get_feature_names();
plt.colorbar(sst_contour,__kwargtrans__({cax:cbar_ax}));
mock_redis_get.side_effect=py_get;
tmap.py_setdefault(t,len(tmap));
connection.execute(q);
events.py_sort();
var py_name=Column(String(50),__kwargtrans__({nullable:false}));
np.nonzero(x);
(function(){var __accu0__=[];for(var [_,x]of zip(list(range(n)),generator))__accu0__.append(x);return py_iter(__accu0__)})();
var parser=argparse.ArgumentParser();
var lines=f.read();
(function(){var __accu0__=[];for(var outer of x)for(var inner of outer)__accu0__.append(inner);return __accu0__})();
obj._meta.concrete_model;
var __left0__=cproc.communicate(input);var out=__left0__[0];var err=__left0__[1];
input.isdigit();
print(t.strftime(fmt));
driver.execute_script(script,...buttons);
var college=models.CharField(__kwargtrans__({max_length:40}));
pause.until(datetime(2015,8,12,2));
print(i);
zip_file.extract(i,dirname);
u/=math.sqrt(Math.pow(u,2).sum());
print(sys.exc_traceback.tb_next.tb_frame.f_locals);
exception_list.extend(traceback.format_tb(sys.exc_info()[2]));
numbers.append(i);
sess.run([train_op,loss,global_step]);
var __left0__=parser.parse_args();var options=__left0__[0];var args=__left0__[1];
var vbox=gtk.HBox();
logging.error(e,__kwargtrans__({exc_info:true}));
f.close();
var filename=sys.argv[1];
str(eval(self.expression));
print(G.number_of_edges());
print(df.loc[np.py_sort(idx)]);
var parser=argparse.ArgumentParser();
print(locale.getlocale());
export var hkweather=bs4.BeautifulSoup(r.text);
np.sin(y*x);
(function(){var __accu0__=[];for(var a of selection)__accu0__.append(list(range(x)));return __accu0__})();
var channels=f.getnchannels();
pygame.image.save(game.screen,image_path);

db.session.rollback();
var sheet=pygame.image.load(file).convert_alpha();
df.A.plot();
1.1111111111111112E31;
funcs.append(partial(function __lambda__(x){return x},x));
var list=function(){var __accu0__=[];for(var query of queries)__accu0__.append(self.queryQ.put(query));return __accu0__}();
var found=py_next(function(){var __accu0__=[];for(var i of mylist)if(predicate(i))__accu0__.append(i);return py_iter(__accu0__)}());
round(num/res)*res;
var root=Tk.__init__(self,...args,__kwargtrans__(kwargs));
bar();
var result=[];
print(channel[0]);
main();
plot(x.__getslice__(i,i+2,1),y.__getslice__(i,i+2,1),__kwargtrans__({linewidth:width[i]}));
export var pname=PyUnicode_FromString(py_name);
var res=res.reset_index();
ar.flatten();
var py_name=StringField();
time.sleep(1);
var cell=[title1,title2];
plot(data);
df_both.swaplevel(0,1).sort_index();
var z=bar(foo());
ax.add_patch(Polygon(xy));
print(list(common));
asyncio.get_event_loop().run_until_complete(async_getter());
var img=MIMEImage(memf.getvalue());
om.grid(__kwargtrans__({sticky:W+E,padx:5,pady:5}));
var query=__mod__(query.decode(charset),conn.escape(args));
f.seek(0,os.SEEK_END);
s[-1]*=-1;
self.selection;
response;
var Session=sessionmaker(__kwargtrans__({bind:engine}));
var fig=plt.figure();
print(pd.concat([dm]*df.shape[1],__kwargtrans__({axis:1,py_keys:df.columns})));
export var new_m=coo_matrix(tuple([a.__getitem__([tuple([0,null,1]),2]),tuple([a.__getitem__([tuple([0,null,1]),0]),a.__getitem__([tuple([0,null,1]),1])])]),m.shape);
var sigma=np.std(array);
circmask*anglemask;
var py_name=models.CharField(__kwargtrans__({max_length:100}));
Base.__init__(self);
var data=list(img.getdata());
self.root.after(1E3,self.poll);
fig.canvas.draw();
print(new set([a,b]));
Question.objects.filter(__kwargtrans__({test_id:fr})).py_update(__kwargtrans__({test_id:to}));
var app=QtGui.QApplication([]);
set_spyder_echo(true);
self.d[k]=v;
var count=len(words);
var counts=Counter(function(){var __accu0__=[];for(var value of mydict.py_values())__accu0__.append(value[1]);return py_iter(__accu0__)}());
foo();
df;
__in__(word.lower(),english_words);
list(range(5)).__getslice__(6,7,1);
request.GET.urlencode();
ax.autoscale(false);
conn.status;
csvout.writerow(tuple([country,year]));
udf(_in_last_5_minutes,BooleanType());
export var surf1=pygame.Surface(tuple([200,200]));
var data=self.conn.recv(1024);
self.ui.setupUi(self);
tuple([len(entries),sum(entries)]);
sum+=int(num_str[i]);
var writer=csv.writer(csv_file);
print(help(b));
self.data[key]=item;
pl.xticks([1,2],labels);
f.subs(dict([[x,10],[y,20]]));
self.queue=set();
var list=[1,[2,2,2],4];
var my_copy=my_dict.copy();
var py_items=list(yourdict.py_items());
var ax=fig.add_subplot(1,2,2);
export var somethingThread=threading.Thread(__kwargtrans__({target:someClass.doSomething}));
django.get_version();
f_old.close();
var __left0__=tpl.shape.__getslice__(0,2,1);var h=__left0__[0];var w=__left0__[1];
confused_array;
var ax=plt.gca();
print(x);
print(function(){var __accu0__=[];for(var i of spamreader)for(var j of i)__accu0__.append(j);return __accu0__}());
var log=logging.getLogger(__name__);
obj.get_id;

pl.subplots_adjust(__kwargtrans__({wspace:0}));
var element=driver.find_element_by_css_selector(locator);
app.show();
gen().__name__;
export var df_key=pd.concat(df_list);
flask.g.breadcrumbs.append(BreadCrumb(path,title));
smtp.quit();
export var divs_sum=sum(get_divs(num));
Fruit(5);
worksheet.getCellByPosition(x,y).getString();
calculate_something.call_args_list;
s.__getslice__(0,null,1);
var d2=dict(function(){var __accu0__=[];for(var [k,v]of d.py_items())__accu0__.append(tuple([v,k]));return py_iter(__accu0__)}());
os.remove(filepath);
dt.py_replace(__kwargtrans__({year:dt.year+1}));
var k=arr.shape[0]/n;
var primes=function(){var __accu0__=[];for(var i=0;i<R+1;i++)if(sieve[i]==0)__accu0__.append(i);return __accu0__}();
B.add_nodes_from(inmates_list,__kwargtrans__({bipartite:0}));
var args=parser.parse_args();
masked.sum(__kwargtrans__({axis:1}));
os.system(self.get_command(file,__kwargtrans__(options)));
self.button.grid(__kwargtrans__({row:2,columnspan:2}));
npreds[v]+=1;
n==0||GetSum(n,arr.__getslice__(1,null,1))||GetSum(n-arr[0],arr.__getslice__(1,null,1));
axes.scatter(cdfx,logcdfy,__kwargtrans__({s:4,linewidths:0}));
nhb;
export var interleaved_array=np.hstack(arrays).reshape(shape);
func(...args,__kwargtrans__(kwargs));
var fig=plt.figure();
var numbers=function(){var __accu0__=[];for(var x of input_list)__accu0__.append(float(x.strip()));return __accu0__}();
md5.py_update(data);
c.writerow(row);
deletet.__getslice__(4,null,1);
export var messages=self.args[1];
instance.method(argument);
grpA[mask]=sortedA.__getitem__([tuple([0,null,1]),-1]);
export var decoded=base64.b64decode(encoded);
var X=np.array([[1,1],[2,1],[2.5,1]]);
sum(function(){var __accu0__=[];for(var key of ac)__accu0__.append(min(ac[key],bc[key]));return py_iter(__accu0__)}());
axm.set_xlim(0,1);
map(operator.itemgetter(1),L);
var fig=plt.figure();
walk(tree.getChild(i),temp);
close_button.set_relief(gtk.RELIEF_NONE);
decoder.start_utt();
var data=np.arange(200).reshape(tuple([4,5,10]));
export var makeIDAT=true;
export var makeIEND=true;
myDict[newKey].append(value);
f(...args);
var result=cv2.matchTemplate(img,template,cv.CV_TM_SQDIFF);
print(df2);
var numbers=function(){var __accu0__=[];for(var character of input_string)if(character.isdigit())__accu0__.append(int(character));return py_iter(__accu0__)}();
a_test.__name__;
self.listWidgetB.currentItemChanged.connect(self.item_clicked);
fib(n);
df1.fillna(-999)==df1.fillna(-999);
one.py;
print(row[0]);
numpy.random.seed(1);
painter.drawImage(0,0,self.mQImage);
self.command();
(a!=b).sum()/float(a.size);
numpy.atleast_2d(x[x.__getitem__([tuple([0,null,1]),1])==21]);
export var opt1=tf.train.GradientDescentOptimizer(1E-5);
foobar(1);
base*power(base,exponent-1);
list(filter(list1.__contains__,list2));
web.show();
logger.addHandler(handler);
var ax=plt.axes();
var app=QtGui.QApplication(sys.argv);
export var city=models.CharField(__kwargtrans__({max_length:50}));
true;
win.set_keep_above(true);
tuple([-Wl,-rpath,your_path]);
var lines=file.readlines();
var options=webdriver.ChromeOptions();
export var problems=true;
Matrix(M.T*M);
sys.stdout.write(line);
export var worker=subprocess.Popen(args);
var logger=logging.getLogger();
q.all();
self.setLayout(layout);
dict(zip(...[py_iter(S)]*2));
datetime.now().weekday();
var app=QtGui.QApplication(sys.argv);
Greeter().greet();
var s=re.search(regex,line);
df.index=index;
print(function(){var __accu0__=[];for(var x of df.py_values.tolist())__accu0__.append(list(function(){var __accu1__=[];for(var _f of x)if(_f)__accu1__.append(_f);return __accu1__}()));return __accu0__}());
app.MainLoop();
var value=datetime.timedelta(0,64800);
f.close();
var ax1=fig.add_axes(tuple([.1,.4,.8,.5]));
export var remaining=np.arange(len(M));
var s=eval(input());
d.foo();
print(cell.value);
print(dict(mergedicts(dict1,dict2)));
AC_PROG_CXX;
AC_FUNC_MALLOC;
var reader=csv.DictReader(csvin);
sys.getsizeof(s);
dir(func);
print(yaml.dump(data));
var now=datetime.datetime.now();
backend.py;
result[-1].append(t[j+1]);
self.axe.py_clear();
p1.func==p2.func&&p1.args==p2.args&&p1.keywords==p2.keywords;
print(R.shape);
export var gss_client=gspread.authorize(credentials);
var ax=fig.add_subplot(111);
tuple([LETTER,LEGAL,ELEVENSEVENTEEN]);
button.setMenu(menu);
pickle.dump(lists,f);
id(foo[0]);
var env=Environment();
print(first_day);
Book.query.with_entities(Book.id);
self.rect.left=p.rect.right;
tab.header(list(row.py_keys()));
self.assertEqual(py_name,expected_name);
setattr(toclass,attr,cls.__dict__[attr]);
print(draft.playernumber);
df==df;
var x=np.concatenate(tuple([x,x]));
var template=cv2.imread(sys.argv[2]);
export var libraries=[];
MULT(z,a,z);

var py_values=function(){var __accu0__=[];for(var i=0;i<20;i++)__accu0__.append(random());return __accu0__}();
var df=pd.concat([df]*1E4).reset_index(__kwargtrans__({drop:true}));
var input=wx.TextCtrl(self,-1,__kwargtrans__({style:wx.TE_MULTILINE}));
var d=dict({});
export var logdata=np.log(data);
var response=connection.read_response();
var i=len(A);
inset.set_position([x_fig,y_fig,x2_fig-x_fig,y2_fig-y_fig]);
var s=socket.socket();
var cur=conn.cursor();
export var es=Elasticsearch();
zip(...a);
list(itertools.permutations(l,2));
export var C_Cidx=np.digitize(C,Cbins);
instance.work.save();
print(function(){var __accu0__=[];for(var p=0;p<101;p++)if(aks_test(p))__accu0__.append(p);return __accu0__}());
fileDirectory();
child.setExpanded(true);
var img=Image.open(image);
line.interpolate(.1,__kwargtrans__({normalized:true}));
self._points.append(coordinates);
export var from_user=db.ReferenceField(User,__kwargtrans__({required:true}));
HttpResponse(output);
var img=Image.open(image.file);
sleep(10);
ax1.yaxis.set_major_formatter(yticks);
var l=function(){var __accu0__=[];for(var x of[[0]]*4)__accu0__.append(copy.copy(x));return __accu0__}();
_my_whole_freaking_module();
new set([new set([p.age])]);
var ssh=paramiko.SSHClient();
var EMAIL_USE_TLS=false;
print(fooPy());
tar.close();
export var xml_str=urllib.request.urlopen(xml_str).read();
print(x.max());

admin.site.register(Poll);
var d=d[k];
var result=urllib.request.urlopen(request);
painter.save();
export var listy=[a,a,a];
print(s.recvfrom(65565));
num+=1;
var tmp=arr.reshape(2,2,2,2).swapaxes(1,2);
var cj=cookielib.CookieJar();
df1.reindex(__kwargtrans__({columns:dummies_frame.columns,fill_value:0}));
area([[0,0,0],[1,1,1]]);
self._async_init().__await__();
list(product(x,deepflatten(y,__kwargtrans__({ignore:str}))));
tuple([np.arange(lllat,urlat,2)]);
export var dateobject=datetime.date.today();
print(k,v);
plt.xticks(list(range(len(labels))),labels);
f.close();
help(map);
var r=requests.py_get(url,__kwargtrans__({stream:true}));
var left=A[idx-1];
self.log_file=log_file;
powerset_abs_file.close();
var inner=types.FunctionType(myFunc.__code__.co_consts[1],__all__);
print(date_by_adding_business_days(datetime.date.today(),10));
myList.append(random.randint(0,1));
term.start();
export var swapped_pairs=zip(seq.__getslice__(1,null,2),seq.__getslice__(0,null,2));
var df2=pd.DataFrame(df1,__kwargtrans__({copy:true}));
sum(function(){var __accu0__=[];for(var [pos,val]of enumerate(py_reversed(test)))__accu0__.append(Math.pow(10,pos)*val);return py_iter(__accu0__)}());
rv_continuous.fit(gamma,x,__kwargtrans__({floc:0,fscale:4}));
l[2];
time.sleep(.1);
var now=datetime.now();
np.flatnonzero(np.random.multinomial(1,p,1))[0];
print(bin(v.value));
print(list(function(){var __accu0__=[];for(var x of words)if(len(x)>avg)__accu0__.append(x);return __accu0__}()));
var choices=function(){var __accu0__=[];for(var item of some_queryset)__accu0__.append(tuple([item.pk,item.some_other_method()]));return __accu0__}();
[[2][0][1][0][1][0]];
var b=OuterTest();
var __left0__=tuple([tuple([0,-1]),tuple([0,1]),tuple([-1,0]),tuple([1,0])]);export var NORTH=__left0__[0];var S=__left0__[1];export var W=__left0__[2];var E=__left0__[3];
self.assertEqual(10,result,result);
MyThread(__kwargtrans__({parent:self}));
object.__new__(cls,value);


self.func(...args,__kwargtrans__(kw));
c.x.append(1);
var fig=plt.figure();
os.kill(signal.CTRL_C_EVENT,0);
set(list1).intersection(compSet);
queue.put(tuple([false,exc_info()]));
os.remove(tempFile);
count+=1;
py_next(function(){var __accu0__=[];for(var [key,value]of d1.py_items())if(value==55)__accu0__.append(key);return py_iter(__accu0__)}());

var output=p2.communicate()[0];
ax.autoscale();
c.start();
var t=np.linspace(0,1,200);
print(title.firstChild.data);
export var question=models.CharField(__kwargtrans__({max_length:200}));
ax2.set_ylim(0,1);
self._lock.acquire();
self.assertEqual(len(self.seq),1);
models.py;
existing_category.put();
export var new_type=numpy.dtype(descr);
example().cmdloop();
var new_df=df.iloc[Math.floor(only_once.index/len(df.columns))];
list_of_list.append(list(map(float,list_)));
tuple([a,b]);
[4,5];
var B=scipy.sparse.diags([A.__getitem__([tuple([0,null,1]),0]),A.__getitem__([tuple([0,null,1]),1])],[0,1],[4,5]);
BaseTest.__init__(self,...args,__kwargtrans__(kwargs));
Response(g,__kwargtrans__({direct_passthrough:true}));
print(line);
plt.show(__kwargtrans__({block:false}));
export var et=ElementTree.fromstring(xmlStr);
os.system(filename);
self.b=a;
var tmp=np.random.rand(np.random.randint(1,100));
print(q.py_get());
var ax2=ax1.twinx();
print(f.read());
cr.set_source_rgb(0,0,0);
self.btn.pack();
var parser=etree.XMLParser(__kwargtrans__({ns_clean:true,recover:true}));
Transform.__init__(self);

py_next.focus();
var p=Process(__kwargtrans__({target:f,args:tuple([child_conn])}));
arr.__getitem__([tuple([0,null,1]),np.newaxis]);
(function __lambda__(x){return x(r)});
export var paws=function(){var __accu0__=[];for(var p of np.vsplit(paws_data,4))__accu0__.append(p.squeeze());return __accu0__}();
sock.close();
var id=Column(Integer,__kwargtrans__({primary_key:true}));
plot_date(timeSeries,data);
self.assertEqual(r.status_code,200);
result.append(x);
(function(){var __accu0__=[];for(var full of A)__accu0__.append(int(__in__(full.py_split()[-1],B)));return __accu0__})();
listbox.autowidth();
(function(){var __accu0__=[];for(var i=1995;i<time.localtime().tm_year+1;i++)__accu0__.append(str(i));return __accu0__})();
G.remove_edge(edge[0],edge[1]);
liba.hello();
var lines=function(){var __accu0__=[];for(var i=0;i<last+1;i++)__accu0__.append(screen.display[i].rstrip());return __accu0__}();
zip(a,b);
smallfile.close();
self.bar(arg);
app.Yield(true);
var data=f.read().strip();
cache.set(cache_key,result);
print(data);
print(sum(function(){var __accu0__=[];for(var dt of dates)__accu0__.append(v==dt.hour&&dt.weekday()==day);return py_iter(__accu0__)}()));
os.environ[k]=v;
file.truncate(Math.pow(10,10));
var result=function(){var __accu0__=[];for(var s of all_words)if(pat.match(s))__accu0__.append(s);return __accu0__}();
var description=models.CharField(__kwargtrans__({max_length:255,blank:true,null:true}));
export var uploaded_file_info=py_items.children[target_filename].upload(file_to_upload);
(df==a).all(1).any();
print(arg_str);
var py_name=models.CharField(__kwargtrans__({max_length:100}));
var lst=[1,1,1,0,1,1,1,0,1,1,0,0,1,1,1,0,0,1,1,1,1,1,0];
setattr(obj,parts[-1],value);
points.intersects(poly.unary_union);
self.resize(600,400);
var a=[4,5,0,0,6,7,0,1,0,5];
var l=[];
post[0].tags.remove(posttag);
sorted(l,__kwargtrans__({key:os.urandom}));
abstracts.append(abstract);
out.close();
var __left0__=len(List)-1;Dup[Item]=__left0__;export var ItemNumber=__left0__;
d.cards.append(Card(1,1));
var img=img.resize(tuple([size[0]*multiplier,size[1]*multiplier]),Image.BICUBIC);
_addup(n-1)+n;
var fig=plt.figure();
compare_intersect(a,b);
var sizer=wx.BoxSizer(wx.VERTICAL);
var xml=Node.toxml();
df_one.show();
np.ma.all(np.ma.masked_invalid(a)==np.ma.masked_invalid(b));
list(d.py_items())[0];
(function(){var __accu0__=[];for(var p of product(...matching))if(_in_trie(path_trie,p))__accu0__.append(os.sep.join(p));return __accu0__})();
deleteself.__dict__[key];
export var user_model=sys.argv[1];
var zi=np.ma.masked_equal(zi,0);
var writer=csv.writer(f);
outf.seek(0);
var id=Column(Integer,__kwargtrans__({primary_key:true}));
root.withdraw();
var reader=csv.reader(f,__kwargtrans__({delimiter:d}));
var t=threading.Thread(__kwargtrans__({target:read_stdout,args:tuple([p.stdout,q])}));
decorator;
self._list.index(value);
acc.extend(inner(x,[]));
test_foo.py;
export var abscissas=np.linspace(0,1,10);
export var number_of_columns=sheet.ncols;
self.x=5;
var match=re.match(pattern,s,re.UNICODE);
parentNode.removeChild(element);
person_list.append(person);
original_tag.append(new_tag);
var table=Table(domain,function(){var __accu0__=[];for(var row of df.as_matrix())__accu0__.append(map(str,row));return __accu0__}());
pipe(list(range(4)),map(function __lambda__(i){return repeat(i,i+1)}),concat,list);
a.f();
zipped_file.writelines(orig_file);
export var cat_index=np.searchsorted(categories,A[0]);
s.sendmail(sender,recipients,my_as_string(msg));
main(sys.argv);
tuple([r,nil]);
result.map(function __lambda__(x){return row(DenseVector(x))}).toDF(schema);
arr[accmask]=np.nan;
y.__setitem__([tuple([4,6,1]),tuple([1,8,1])],1);
var out=list(df.T.to_dict().py_values());
var new_list=[];
list(sympy.primerange(0,100));
A1s.__getitem__([[0,1,2],[0,1,0],tuple([0,null,1]),[0,1,1],tuple([0,null,1])]);
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
self.diagram.SetSnapToGrid(true);
var b=a.copy();
export var nbins=len(ax1.get_xticklabels());
c.point(x,y,__kwargtrans__({color:sp.pixel(x,y)}));
main.py;
shutil.copyfileobj(req,f);
var timestamp=(dt-epoch)/timedelta(__kwargtrans__({seconds:1}));
export var minval=min(a[i],a[i-1]);
label_image.place(__kwargtrans__({x:0,y:0,width:image1.size[0],height:image1.size[1]}));
export var y_=np.linspace(1,2,20);
non_transparent.paste(image,tuple([0,0]),image);
a2.append(int(data[1]));
dict.__delitem__(self,key);
print(df);
array([.91262442,.67247516]);
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
self._tv.openPersistentEditor(self._tm.index(row,0));
zip(t.__getslice__(0,null,2),t.__getslice__(1,null,2));
E.append(np.sqrt(Math.pow(last-out,2).sum()));
os.read(r_fd,1);
plot(x[indice],y[indice]);
var foo=np.array([0,1.5,1]);
var parsed=ET.fromstring(xml_string);
export var url_parts=list(urlparse.urlparse(url));
var y=y.reshape(-1,1);
file.close();
df.loc[4];
widget.setLayout(QVBoxLayout());
(df.foo!=df.foo.shift()).cumsum();

self.setCentralWidget(self.cw);
export var isize=im.size;
specifics();
tuple([eq_y.subs([tuple([x,c]),tuple([y(c),y_c]),tuple([y(x).diff(x).subs(x,c),dy_c])])]);
transaction.commit_unless_managed();
f.close();
df!=0;
sympy.__version__;
var a=np.where(img!=0);
var p=widget.grab();
var __except0__=NotImplemented;__except0__.__cause__=null;throw __except0__;
sock.close();
a[a<0]=-1;
print(response.status,response.reason);
signal.alarm(0);
var output=PdfFileWriter();
Foo.bar();
a[1];
var a=np.array([2,56,4,8,564]);
var ax=fig.add_subplot(1,1,1);
var fig=plt.figure(__kwargtrans__({dpi:100}));
form.show();
var info=function(){var __accu0__=[];for(var i of range(0,len(data),2))__accu0__.append(data.__getslice__(i,i+2,1));return __accu0__}();
export var cos_x=sin(lat_a)*sin(lat_b)+cos(lat_a)*cos(lat_b)*cos(delta_long);
print(tuple([dirpath,len(todays_files)]));
export var Xnew=np.hstack(tuple([X,X0]));
session.add_all(function(){var __accu0__=[];for(var row of listOfRows)__accu0__.append(tableRow(row));return __accu0__}());
self.generator_outputs.append(tf.clip_by_value(x_gen,-1,1));
x.append(item);
export var tn=telnetlib.Telnet(HOST);
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
quicksort(array);
map(function __lambda__(x,y){return x*y},l1,l2);
d.py_setdefault(key(item),[]).append(item);
do_stuff(match);
os.chdir(directory);
ax.set_yticklabels(ax.get_yticks());
var Z=Math.pow(X,2)+Math.pow(Y,2)+np.random.rand(...X.shape)*.01;
thread.start_new_thread(input_thread,tuple([list]));
root.grid_rowconfigure(2,__kwargtrans__({weight:1}));
sys.exit(1);
var api=tweepy.API(auth);
grokster.grok();
ax.set_position([.1,.1,.85,.85]);
f.read();
export var original_rows=[[1,0,1],[0,0,0],[1,0,0]];
sys.stdin.read();
var json_string=urllib.request.urlopen(url).read();
export var Area=pi*(dr*n)^2-pi*(dr*(n-1));
export var parser1=argparse.ArgumentParser();
var pool=multiprocessing.Pool(__kwargtrans__({processes:4}));
export var finishat=time.time()+timeout;
(function(){var __accu0__=[];for(var x of data)if(__in__(key,x)&&__in__(x[key],allowed))__accu0__.append(x);return __accu0__})();
var cmap=matplotlib.cm.jet;
result.append(tuple([0,0,py_values]));
self.timer.cancel();
var __left0__=plt.subplots(__kwargtrans__({nrows:1,ncols:numdatasets,figsize:tuple([12,6])}));var fig=__left0__[0];var axes=__left0__[1];
func(...args,__kwargtrans__(kwargs));
a[i].append(x);
tuple([scipy.math.factorial,numpy.math.factorial,math.factorial]);
var channel=ssh_client.invoke_shell();
G.add_edge(1,2);
var data=file.read();
words.most_common();
br.select_form(__kwargtrans__({nr:currentForm}));
print(function(){var __accu0__=[];for(var x of lst)if(__mod__(x,2)==0)__accu0__.append(Math.pow(x,2));return __accu0__}());
exit(0);
var x=__import__(module_name);
var p=session.query(Parent).py_get(pid);
bar(list(range(10)),list(range(10)));
[pingpong];
Column(_f(_to_seq(sc,[col],_to_java_column)));
root.mainloop();
var t2=time.time();
f.close();
proc.kill();
var y=x+y;
print();
var app=QtGui.QApplication(sys.argv);
export var foo_data=json.loads(json_string);
self._c=c;
self.Bind(wx.EVT_SIZE,self.OnSize);
sleep(2);
export var thestrings=function(){var __accu0__=[];for(var s of col.findAll(__kwargtrans__({text:true})))__accu0__.append(str(s));return __accu0__}();
np.bincount(i,__kwargtrans__({weights:d}));
print(np.argmax(spect),np.max(spect));
var client=gdata.analytics.client.AnalyticsClient();
pprint(ddiff);
plt.show();
var lst=[[0,1],[0,4],[1,0],[1,4],[4,0],[4,1]];
w.wcs.naxis;
export var main_parser=argparse.ArgumentParser();
mc.Property1;
localized_time.astimezone(pytz.utc).strftime(fmt);
numpy.float64(numpy.nan)===numpy.float64(numpy.nan);
admin.autodiscover();
var sums=a.__getitem__([tuple([0,-1,1]),tuple([0,-1,1])])+a.__getitem__([tuple([1,null,1]),tuple([0,-1,1])])+a.__getitem__([tuple([0,-1,1]),tuple([1,null,1])])+a.__getitem__([tuple([1,null,1]),tuple([1,null,1])]);
B.__setitem__([tuple([0,null,1]),tuple([0,null,1]),0],A);
datetime(1582,10,15)+timedelta(__kwargtrans__({microseconds:Math.floor(uuid1().time/10)}));
print(tuple([i,__mod__(lcm20,i)]));
p.terminate();
hex(a);
var coords=np.stack(np.meshgrid(x,y,z),__kwargtrans__({axis:-1}));
var reader=csv.reader(infile);
os.close(fd);
ng.get_name();
foo();
export var df_2=pd.DataFrame(np.random.randint(0,2,tuple([1E3,600])));
print(df);
plt.ion();
[];
var p=multiprocessing.Process(__kwargtrans__({target:start_child,args:tuple([server_program])}));
prevprime(n,__kwargtrans__({ith:1}));
var credentials=storage.py_get();
datetime.datetime(...structTime.__getslice__(0,6,1));
var py_name=models.CharField(__kwargtrans__({max_length:100}));
ax.add_collection(lc);
var seen=set();
l.py_pop(i);
plt.colorbar();
do_if_pass([2,4,6]);
collections.defaultdict(list);
myObject.doStuf();
httpd.serve_forever();
var result=[];
var t=threading.Thread(__kwargtrans__({target:batcher,args:tuple([app.queue])}));
getattr(self.child,attr)(...args,__kwargtrans__(kw));
print(remove_none(data));
s.describe();
export var field1=models.CharField(__kwargtrans__({max_length:10}));
print(df);
img.show();
np.random.seed(0);
pairs.append(tuple([k,v]));
G.nodes();
Intersection(self,other);
float(m.group(1));
var cols=function(){var __accu0__=[];for(var x of cursor.description)__accu0__.append(x[0]);return __accu0__}();
os.mkdir(blues_sounds_path);
int(v);
se2lib._current_browser();
os.chdir(cwd);
var lst=[a,b,c,d,e,f,g];
var args=parser.parse_args();
var fig=plt.figure();
var q=multiprocessing.Queue();
self._num_expectations+=1;
var local_dt=utc_dt.py_replace(__kwargtrans__({tzinfo:pytz.utc})).astimezone(local_tz);
min(t,__kwargtrans__({key:function __lambda__(e){return tuple([e[1],-e[2]])}}));
export var int_arr=np.cumsum(np.cumsum(arr,__kwargtrans__({axis:0})),__kwargtrans__({axis:1}));
luckynumbers.append(item);
var ax=fig.add_subplot(111);
self.position=len(self.py_get());
export var prev=np.zeros(src.shape.__getslice__(0,2,1),np.uint8);
heapq.heappop(pqueue);
var data=file_to_check.read();
user.set_password(password);
self.x=math.cos(a)*original_x-math.sin(a)*original_y;
count+=1;
method();
res[k].append(j);
var queue=Queue.Queue();
competitors.save();
self.Bind(wx.EVT_SIZE,self._onSize);
var fig=plt.figure();
export var push=subprocess.Popen(cmd,__kwargtrans__({shell:true,stdout:subprocess.PIPE}));
var reader=csv.reader(f);
var m=function(){var __accu0__=[];for(var x of dictionary[i])if(len(x)==l)__accu0__.append(x);return __accu0__}();
ret.extend(flatten(v));
var ssh_client=paramiko.SSHClient();
var r=requests.py_get(url);
var py_name=models.CharField(__kwargtrans__({max_length:50}));
server.shutdown();
var s=socket(AF_PACKET,SOCK_RAW);
py>matrix[-1][2];
var app=Flask(__name__);
lettered.append(subx);
df1.letter.unique();
axs[0].xaxis.set_major_formatter(x_fmt);
var mask=~np.isnan(x);
list(itertools.takewhile(function __lambda__(x){return x!=412},even_numbers));
df.Date=pd.to_datetime(df.Date);
img.putdata(newData);
var dt=datetime.datetime(...parts.__getslice__(0,6,1))-datetime.timedelta(__kwargtrans__({seconds:parts[-1]}));
nx.draw(g1);
print(df1);
ispower(2,1);
n.close();
export var m_to=ndb.KeyProperty(__kwargtrans__({kind:UserModel}));
self.bmp=wx.BitmapFromImage(image);
var end=time.time();
pickle.dump(d,filehandler);
(function(){var __accu0__=[];for(var py_name of input_zip.namelist())__accu0__.append([py_name,input_zip.read(py_name)]);return dict(__accu0__)})();
var register=template.Library();
print(line.rstrip());

tuple([a,b,c,d]);
var msg=email.message_from_string(response_part[1]);
t.append(t[-1]+1);
print(now_time.strftime(fmt));
p.map(function __lambda__(m){return merger(...m)},mergelist);
export var distance_matrix_np=np.random.uniform(0,Math.pow(n,2),__kwargtrans__({size:tuple([n,n])}));
obj.save();
activation.prepare();
f.restype=ctypes.POINTER(ctypes.c_int*10);
print(s);
sleep(1);
var __left0__=tuple([x[j],x[i]]);x[i]=__left0__[0];x[j]=__left0__[1];
export var alphaDict=dict.fromkeys(string.ascii_lowercase,0);
export var result_grey=cv2.cvtColor(source,cv2.COLOR_BGR2GRAY);
binary_search([1,5,8,10],0);
print(tuple([a,b]));
print(list(counter.py_keys()));
export var AWS_IS_GZIPPED=true;
ax.plot(t,y1);
exec(mycode);
var test=serial.Serial(__kwargtrans__({baudrate:9600,timeout:0,writeTimeout:0}));
print(100*(b-a)/a);
atexit.register(savecounter);
(17.5).hex();
p.map_async(g,function(){var __accu0__=[];for(var i of range(stop_f,N,step))__accu0__.append(slice(i,i+step));return __accu0__}());
hex(65);
wb.Close();
export var keep_mask=np.ones_like(data,__kwargtrans__({dtype:bool}));
pyautogui.click(100,100);
var a=random.randint(0,20);
list(fields_660.py_values());
var output=function(){var __accu0__=[];for(var [x,y,label]of L)__accu0__.append(x);return __accu0__}();
self.__dict__.py_update(profile);
log.addHandler(fh);
writer.writerows(reader);
print(iterator(function __lambda__(x){return x/4+12},100,5));
m.hexdigest();
export var CACHE_MIDDLEWARE_ANONYMOUS_ONLY=true;
dict_del;
export var data_p=data.ctypes.data_as(c_float_p);
self.right=FibTree(n-2);
export var new_valss=function(){var __accu0__=[];for(var x of new_vals)__accu0__.append(tuple([x[0],x[1]]));return __accu0__}();
store.close();
var local_dt=datetime.fromtimestamp(timestamp);
test.close();
isinstance(v,property);
out.extend(np.where(nonzero)[0][[0,-1]]);
main_loop.start();
var Session=scoped_session(sessionmaker(__kwargtrans__({bind:engine})));
ax.figure.autofmt_xdate();
df.loc.__setitem__([(df[0]==0).idxmax(),0],100);
plt.bar(bins,probs,1/num_bins);
var fig=plt.figure();
test_df;
select.select([],[B],[]);
mylist2.py_sort(__kwargtrans__({key:sort_order.index}));
plt.subplot(221);
x[k];
print(list(powerreps(X,Y)));
self.holding=item;
self._writecheck(zinfo);
signal.signal(signal.SIGALRM,original_handler);
var b=np.array([4,5,2]);
print(x);
print(find_matches(d,item));
c.setopt(pycurl.FOLLOWLOCATION,1);
_bar.__exit__();
export var new_xs=function(){var __accu0__=[];for(var point of sorted_points)__accu0__.append(point[0]);return __accu0__}();
ax.errorbar(theta,r,__kwargtrans__({xerr:.5,yerr:.4}));
ds.addSample(tuple([-1,-1]),tuple([0]));
p1.start();
self.send_blob(blob_info);
var now=time.time();

export var basis=function(){var __accu0__=[];for(var n of[0,1,2])__accu0__.append(function __lambda__(x,n){if(typeof n=="undefined"||n!=null&&n.hasOwnProperty("__kwargtrans__"))var n=n;return n*x});return __accu0__}();
stream.stop_stream();
a.__setslice__(0,2,null,b);
r.dot(y.reshape(1,-1));
plt.plot(f,ps2);
p.start();
var sigma=numpy.array([1,1,1,1,1,1]);
ax2.contour(theta_centers,r_centers,H);
var opt=argparse.ArgumentParser();
np.where(np.all(np.equal(w,b),1)==true)[0];
ob.stackoverflow(2);
QNetworkAccessManager.createRequest(self,operation,request,data);
print(repr(f.read()));
var window=gtk.Window(gtk.WINDOW_TOPLEVEL);
export var mac=get_mac();
d[l[0]]=d.py_get(l[0],dict({}));
var y=math.sin(4*2*math.pi*x/POINTS);
var seen=set();
var image=Image.open(cStringIO.StringIO(image_data));
export var number_string=str(myinteger);
res.set_value(index,previous_df_no);
atexit.register(removeFile,path);
node.set_next(node.get_data()+sum(function(){var __accu0__=[];for(var i of str(node))__accu0__.append(int(i));return py_iter(__accu0__)}()));
conn.close();
export var genotypes=models.TextField();
var F=np.random.rand(n,n);
var my_dict=json.loads(dict_str,__kwargtrans__({object_pairs_hook:dict_clean}));
x+1;
var c=list(chain(...zip_longest(a,b.__getslice__(0,null,-1))));
libxxx.foo.argtypes=[ctypes.POINTER(ctypes.c_float),ctypes.c_size_t];
var date=parser.parse(x);
my_buffer.__setslice__(0,null,null,itertools.repeat(0,len(my_buffer)));
tmp();
print(response.content);
print(sess.run(loss,__kwargtrans__({feed_dict:dict([[x,input_x],[y_,input_y]])})));
self.left;
pa_stream_peek(stream,ctypes.byref(null_ptr),ctypes.c_ulong(length));
export var my_thread=QThread();
self.clients.append(client);
Blob.__init__(self,width,height,color,emphasis,highlight);
var t=linspace(0,2*np.pi,n,__kwargtrans__({endpoint:false}));
print(svg.get_width(),svg.get_height());
var proc=subprocess.Popen(cmd,__kwargtrans__({stdout:subprocess.PIPE}));
canvas.create_image(Math.floor(image.size[0]/2),Math.floor(image.size[1]/2),__kwargtrans__({image:image_tk}));
count+=1;
list(ordered_dict.py_keys())[2];
var foo=np.random.rand(2E7).cumsum();
print(function(){var __accu0__=[];for(var v of map_words(sentence))__accu0__.append(v);return __accu0__}());
var b=list(b);
var result=np.zeros(len(colors),__kwargtrans__({dtype:np.int}));
var text=soup.get_text();
print(self.right.PreOrder());
var score=sum(function(){var __accu0__=[];for(var i of xx&yy)__accu0__.append(i*w(i));return py_iter(__accu0__)}())/sum(function(){var __accu0__=[];for(var i of x)__accu0__.append(i*w(i));return py_iter(__accu0__)}());
os._exit(0);
plt.plot(x,f(x));
sum(function(){var __accu0__=[];for(var [x1,x2]of zip(x1s,x2s))__accu0__.append(pow(x1-x2,2));return py_iter(__accu0__)}());
result.py_update(request);
current_chunk.append(tuple([token,tag]));
root.mainloop();
event.Skip();
a.a();
gona.__getitem__([tuple([0,null,1]),0]);
os.dup2(to_file.fileno(),stdout_fd);
var parser=argparse.ArgumentParser();
ns[cls.__name__].mocked_method;
list(RNA_dictionary.py_values());
export var df_7=df.sample(__kwargtrans__({n:7}));
print(strip_tags(html,invalid_tags));
answer[c].append(b);
self.__class__.x=x;
track2.play_forever();
AV[j]=n;
listD.append(listB[num]);
var a=[1,1,1,1,1];
var layout=QVBoxLayout(self);
xticks(list(range(1,40)),list(range(1,40)));
keyset.py_update(d[k]);
print(pivotdf.head());
var s=m.group(1);
var parser=argparse.ArgumentParser();
splitter.findall(s);

l.append(id(arg));
var __left0__=s.accept();var conn=__left0__[0];var addr=__left0__[1];
print(foo.__getitem__([np.newaxis,tuple([0,null,1])]));
export var mean_matrix=pd.concat(dfs,__kwargtrans__({axis:1})).T;
var df=pandas.DataFrame(x,__kwargtrans__({columns:column_labels,index:row_labels}));
print(oct_num==511);
y.close();
process.append(multiprocessing.Process(__kwargtrans__({target:wrapper,args:argtuple})));
export var png_recovered=base64.decodestring(png_b64text);
hanoi(n-1,aux,start,target);
excel.Worksheets(2).Activate();
export var zip_file=zipfile.ZipFile(content);
zip.save();
list.__setitem__(self,key,value);
iterator(function __lambda__(x){return x/4+12},100,5);
var book=open_workbook(file_path);
print(Bar().get_counter());
bins.py_setdefault(key(value,step),[]).append(value);
var pid=os.fork();
export var mybins=np.linspace(datamin,datamax,numbins);
foo(C(),B());
fcntl.fcntl(fd,fcntl.F_SETFL,fl|os.O_NONBLOCK);
var result=function(){var __accu0__=[];for(var sp of split_points)__accu0__.append(str.__getslice__(sp[0],sp[1]+1,1));return __accu0__}();
time.sleep(2);
plt.hold(true);
export var sol_np=np.array(list(range(n-1,-1,-1)));
tuple([[0,0,7,8,0,0,0,0]]);
var X=numpy.zeros([10,4]);
var __left0__=gmaps.address_to_latlng(address);var lat=__left0__[0];export var lng=__left0__[1];
smtp.login(user,passwd);
print(linecache.getline(file,line));
var h=hog.compute(im);
print(self.AsyncResult(self.request.id).state);
groups.append(list(map(itemgetter(1),g)));
var py_values=[0,1,2];
pyplot.gcf().autofmt_xdate();
var q=session.query(col).order_by(col);
zipfile.ZipFile.__init__(self,...args,__kwargtrans__(kwargs));
export var bin_data=f.read();
list(desired_cols);
var data=np.array(data);
var fig=plt.figure();
var sheet=book.sheet_by_index(0);
event.Skip();
cursor.execute(query);
var __left0__=os.path.py_split(os.path.abspath("./P2JSnippets.py"));var dirname=__left0__[0];var filename=__left0__[1];
session.add(u2);
ip.release();
export var hourlydf=pd.DataFrame(hourlydata);
var word=word.strip();
(function(){var __accu0__=[];for(var o=0;o<max(l);o++)__accu0__.append(function(){var __accu1__=[];for(var [ix,i]of enumerate(a))if(l[ix]>o)__accu1__.append(i[o]);return __accu1__}());return __accu0__})();
task.delay(arg1,arg2).py_get();
seen.add(n);
export var conf95=np.where(cxy>gamma95);
(function(){var __accu0__=[];for(var pos of range(0,len(seq),size))__accu0__.append(seq.__getslice__(pos,pos+size,1));return py_iter(__accu0__)})();
self._rooms=dict({});
var module=sys.modules[module_name];
thread.start();
print(tuple([key,list(group)]));
login_button.click();
var b=np.indices(a.shape);
print(video_url);
os.chdir(our_home_dir);
obj.method();
plt.show();
sys.__excepthook__(exc_type,exc_value,exc_tb);
np.argmin(A1[1]);
l.append(b);
list(group_660.py_keys());
tuple([1,1,.526015021,.581905971]);
CA;
self.initUI();
sys.stdout=old_stdout;
export var myCopy=deepcopy(myDict);
flist.append(funcC(i));
stats.print_stats();
main();
particles[i].fitness=fitness;
var rs=function(){var __accu0__=[];for(var u of urls)__accu0__.append(grequests.py_get(u,__kwargtrans__({headers:header})));return py_iter(__accu0__)}();
var context=RequestContext(request);
export var method=cv2.TM_SQDIFF;
var st=os.stat(filename);
self._server.handle_request();
makesomenoise();
client.start(container);
print(a);
elem.send_keys(Keys.PAGE_DOWN);
resource.setrlimit(rsrc,tuple([1024,hard]));
export var a_s=os.path.abspath(sys.argv[0]);
false;
var data=dict();
export var cmdp=Popen(cmdline,__kwargtrans__({shell:true,stdout:PIPE,stderr:PIPE}));
var A=np.asarray(A[indices]);
print(is_int_value(x_));
export var original_handler=signal.signal(signal.SIGALRM,timeout_handler);
export var final_queue=Queue();
export var speedresults=function(){var __accu0__=[];for(var x of sorted(results,__kwargtrans__({key:function __lambda__(x){return x[1]}})))__accu0__.append(x);return __accu0__}();
export var numbers_str=line.py_split();
myShelve.close();
pd.concat(frames,__kwargtrans__({py_keys:user_ids}));
var total=model.fee_total(model);
x.dot(x)+sin(np.linalg.norm(x)*np.pi);
result.extend(flatten(el));
wx.FileDropTarget.__init__(self);
right.put(n.__getslice__(0,null,2));
export var oddSquares=function(){var __accu0__=[];for(var number of myListOfNumbers)if(__mod__(number,2)==1)__accu0__.append(Math.pow(number,2));return __accu0__}();
print(reg_m(y,x).summary());
position[-1]+=1;
socket.inet_aton(address);
d[DateK]=val;
ehandle.close();
a.salutation(...arg,__kwargtrans__(kw));
pktdump.write(pkt);
var __except0__=ValueError;__except0__.__cause__=null;throw __except0__;
result.__setitem__([np.arange(len(x)),inv],1);
export var df_num=df.select_dtypes(__kwargtrans__({exclude:[np.number]}));
subplot1.plot(x,y);
exit(0);
a0*Math.pow(alpha,np.arange(n).reshape(-1,1));
export var df_1=pd.DataFrame(np.random.randint(0,2,tuple([1E3,600])));
df;
var xi=np.linspace(-1,1,ngrid);
str(self.py_name)==str(other.py_name);
node_depth_first_iter(self);
HttpResponseBadRequest();
head.__setitem__([tuple([0,null,1]),0],16);
f_out.close();
ftp.dir(parse);
DF+DF.shift();
export var sdat=tuple(map(repr,dat));
var df=pd.read_csv(input_file,__kwargtrans__({header:0}));
stdout.close();
self.py_update(request,...args,__kwargtrans__(kwargs));
var pool=multiprocessing.Pool();
var result=client.service.addPerson(person);
self.store.close();
var data=db.BlobProperty();
arr2.extend(np.py_split(z,indr,__kwargtrans__({axis:0})));
var logger=logging.getLogger();
var count=(listScore.__getitem__([tuple([0,null,1]),0])==2&listScore.__getitem__([tuple([0,null,1]),1])==0).sum();
pnts.append(tuple([i[1],i[2]]));
export var SYS_PATH=os.path.dirname(BASE_DIR);
var data=request.body.readline();
print(tuple([tuple([n0,n1]),tuple([d0,d1])]));
df.loc[0]=np.nan;
true;
var K=[1,2,2,4,5,5,6,10];
var queue=Queue.Queue();
export var main_loop=tornado.ioloop.IOLoop.instance();
py_typeof(instance);
csv1.close();
globallock.release();
var x=linspace(0,1,1E3);
print(response.authority);
t.start();
dc.DrawLine(x,y,x+self.gridsize,y);
self.previewImage.setPixmap(pixmap);
print(x_str);
count+=1;
G.add_nodes_from(L1);
a.__dict__;
var ax=fig.add_subplot(111,__kwargtrans__({rasterized:true}));
loop.close();
var start=tuple([DT.datetime(1970,1,1)]);
sum(function(){var __accu0__=[];for(var l of self.src)__accu0__.append(len(l));return py_iter(__accu0__)}());
timeit(stmt2,setup2,__kwargtrans__({number:100}));
print(dict_merge(d1,d2));
var counts=function(){var __accu0__=[];for(var i of unique)__accu0__.append(tuple([i,year_month_pairs.count(i)]));return __accu0__}();
var df=df.astype(int).astype(str);
start();
f.write(fmt.format(...row));
var logdet=add.reduce(absd,__kwargtrans__({axis:-1}));
root.mainloop();
self.server.serve_forever();
var data=file_object.read(chunk_size);
d.show();
plot.show();
urllib.parse.urlencode(params);
wn.lch_similarity(dog,car);
a[i].append(i+j);
var b=x.read(1);
var pool=mp.Pool();
var utc_dt=datetime.utcfromtimestamp(posix_timestamp).py_replace(__kwargtrans__({tzinfo:pytz.utc}));
layer2.append(j);
self.assertEqual(mock_boo_obj.d.call_count,1);
show();
print(new_filename);

plt.ion();
cur.execute(qry);
var __left0__=fig.add_subplot(1,2,1);var ax1=__left0__;var ax1=__left0__;
var df=pd.DataFrame(py_values,__kwargtrans__({index:index}));
var __left0__=np.meshgrid(np.arange(5),np.arange(4));var ii=__left0__[0];export var jj=__left0__[1];

print(row);
var sample=np.random.lognormal(mu,sigma,__kwargtrans__({size:1E6}));
sock.send(self.postdata);
e.args[0];
var count=0;
var rows=np.arange(N);
export var alphashape=function(){var __accu0__=[];for(var s of complex)if(s.data[0]<=.5)__accu0__.append(s);return __accu0__}();
var t2=threading.Thread(__kwargtrans__({target:task2}));
export var emailer=mailer.Mailer(smtphost.example.com);
var G=nx.Graph();
var data=np.asarray(df);
print(k,v);
axr.yaxis.tick_right();
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
var array=np.random.randint(500,__kwargtrans__({size:tuple([4,2E3])}));
var serializer_class=MyModelSerializer;
export var filter_set=set(filter);
var f=function __lambda__(x){return np.cos(x)-x};
session.close();
df1.reindex(date_range2);
current_dir.append(args[0]);
r[~np.all(r==0,__kwargtrans__({axis:1}))];
self.addr=addr;
curses.start_color();
var port=int(sys.argv[1]);
deque(pool.imap_unordered(f,itertools.product(pairs,__kwargtrans__({repeat:16}))),0);
self.x.configure(__kwargtrans__({state:NORMAL}));
var book=models.ForeignKey(Book);
self.setLayout(layout);
var app=Flask(__name__);
Py_DECREF(pname);
zip(range(len(l)-1,-1,-1),l);
self.index+=1;
export var twos=Math.pow(2,np.arange(10));
var model=pm.modelcontext(model);
request.finish();
sum(function(){var __accu0__=[];for(var x=0;x<len(topo)-1;x++)__accu0__.append(topo[x]*topo[x+1]);return py_iter(__accu0__)}());
var text=f.read();
a_test.method_one();
response;
p.kill();
process.stdin.close();
var fruits=ast.literal_eval(fruits);
datetime.datetime=patched_datetime;
print(line);
time.sleep(60);
__import__(mname);
sleep();
plt.hist2d(x,y,__kwargtrans__({bins:tuple([50,50])}));
plot_window.control.resize(400,400);
var cursor=connection.cursor();
export var new_user=User.objects.create_user(args,args,args,etc);
var B=np.zeros_like(A);
var data=function(){var __accu0__=[];for(var col of cols)__accu0__.append([]);return __accu0__}();
export var escapesequence=matchobj.group(0);
figure();
l.append(x);
var temp=numpy.zeros(len(x));
var app=QtGui.QApplication(sys.argv);
var pb=gtk.gdk.Pixbuf(gtk.gdk.COLORSPACE_RGB,false,8,sz[0],sz[1]);
f();
var y=np.hsplit(x,temp_array);
a[a==0]=np.nan;
ax1.set_ylim([0,1]);
var x=function(){var __accu0__=[];for(var p of points)__accu0__.append(p[0]);return __accu0__}();
f.close();
plt.figure();
(function(){var __accu0__=[];for(var it of islice(cycle(tuple([py_iter(a),py_reversed(a)])),len(a)))__accu0__.append(py_next(it));return __accu0__})();
py_next(function(){var __accu0__=[];for(var c of s)if(s.count(c)>1)__accu0__.append(tuple([c,s.count(c)]));return py_iter(__accu0__)}());
py_next(self.it);
print(x1,x2);
print(repr(x).__getslice__(1,-1,1));
unsearched.put(newdir);
sum([true,false,false,true,false]);
export var RAVEN_CONFIG=dict({});
var a=[[0,1],[0,4],[1,0],[1,4],[4,0],[4,1]];
var x=function(){var __accu0__=[];for(var _=0;_<n;_++)__accu0__.append([]);return __accu0__}();
smtpserver.send_message(msg);
var d=dict.fromkeys(py_keys);
handler(request,...args,__kwargtrans__(kwargs));
print(sess.run(result));
var fig=pyplot.figure();
var py_values=[0,1,2];
plt.plot(y);
w.write(f,wordpx);
self.add(elem);
export var turtle=turtle.Turtle();
fmt.Println(zip(a,b));
export var unique_word_count=len(unique_words);
var result=str(soup);
var application_path=os.path.dirname("./P2JSnippets.py");
export var font=fontforge.font();
print(mm.__getslice__(0,null,1));
self.__message=message;
var __left0__=axes.get_legend_handles_labels();var handles=__left0__[0];var labels=__left0__[1];
A();
var __left0__=self.saved;sys.stdin=__left0__[0];sys.stderr=__left0__[1];sys.stdout=__left0__[2];
list(dct.py_keys());
var app=QtGui.QApplication(sys.argv);
var f=cStringIO.StringIO();
widget.show();
self.validate_unique();
var raw_img=urllib.request.urlopen(img).read();
fig.text(.1,.1,txt);
file.close();
sys.exit(1);
zip(lst1,lst2);
var p=multiprocessing.Pool(__kwargtrans__({processes:10}));
var df=ds.to_dataframe();
export var coupled_idx=enumerate(zip(list1,list2));
var start=time.time();
var soup=BeautifulSoup(html);
fn(args[0]);
plt.setp(plt.gca(),__kwargtrans__({xticklabels:[]}));
var body=part.get_payload(__kwargtrans__({decode:true}));
pylab.show();
platform.platform();
self.window.set_type_hint(gtk.gdk.WINDOW_TYPE_HINT_DOCK);
nsmallest(4,s,__kwargtrans__({key:len}));
Book.query;
(function(){var __accu0__=[];for(var l of product(...to_product))__accu0__.append(dict(l));return __accu0__})();
self.collector;
yaml.Loader.__init__(self,...args,__kwargtrans__(kwargs));
print(df.groupby(Math.floor(df.A/2)).A.nlargest(2));
g.set_xticklabels(__kwargtrans__({rotation:45}));
print(repr(ba));
print(L);
np.dstack([vec_data_mag,vec_data_angl,vec_data_avg]);
fp.close();
export var executor=concurrent.futures.ThreadPoolExecutor(__kwargtrans__({max_workers:5}));
func(d,d1,d2);
var browser=webdriver.WebDriver(__kwargtrans__({firefox_profile:profile}));
(function __lambda__(x){return a*x+b});
s.query(Demo).py_get(1).value;
repr(x);
w.female.py_replace(__kwargtrans__({to_replace:dict(__kwargtrans__({female:1,male:0})),inplace:true}));
var root=ET.fromstring(s);
print(aList);
var input_str=input_str.strip().lower();
self.daemon=true;
var content=models.TextField(__kwargtrans__({blank:true}));
print(min(dates[ind],dates[ind-1],__kwargtrans__({key:function __lambda__(x){return abs(x-date)}})));
UnsortableList(OrderedDict.py_items(self,...args,__kwargtrans__(kwargs)));
(function(){var __accu0__=[];for(var [i,j]of zip(sec,sec.__getslice__(1,null,1)))__accu0__.append(lst.__getslice__(i,j,1));return __accu0__})();
x.argmin(__kwargtrans__({axis:0}));
fig.colorbar(lines);
var __except0__=ValueError(msg);__except0__.__cause__=null;throw __except0__;
var categories=Category.objects.all();
res.set_value(index,0);
var data=self._file.read();
var z=density([x,y]);
exec(file.read());
print(function(){var __accu0__=[];for(var i=0;i<len(arr2);i++)__accu0__.append(arr2[i][-1]);return __accu0__}());
var menu=Menu(root);
canvas.create_window(0,0,__kwargtrans__({anchor:NW,window:frame}));
date+=datetime.timedelta(1);
var p=multiprocessing.Pool();
csv_writer.writerow(function(){var __accu0__=[];for(var i=0;i<cols;i++)__accu0__.append(str(random.random()));return __accu0__}());
py_keys.insert(a);
print(repr(cell_value));
print(x);
print(a);
print(df);
fig.tight_layout(__kwargtrans__({rect:[0,0,.9,1]}));
var size=np.bincount(label.ravel());
self.fields.py_pop(field_name);
pformat(obj);
shutil.copyfileobj(r.raw,f);
print(print_path(root_node));
app.logger.setLevel(logging.INFO);
child_process.terminate();
var data=np.array(data);
div(numericoperand(1),operand);
(function(){var __accu0__=[];for(var i of it.groupby(l,__kwargtrans__({key:key})))__accu0__.append(list(i[1]));return __accu0__})();
sum(function(){var __accu0__=[];for(var el of x)__accu0__.append(y>el);return py_iter(__accu0__)}());
Math.pow(np.array(l),np.arange(1,len(l)+1));
shout.stop();
var args=parser.parse_args();
ds.addSample(tuple([1,-1]),tuple([1]));
print(pat.findall(mystr));
all(function(){var __accu0__=[];for(var [x,y]of zip(a,b))__accu0__.append(nested_equal(x,y));return py_iter(__accu0__)}());
rect.set_height(h);
help(f_with_good_sig);
var a=tuple(a);
var counts=collections.Counter(words);
inf.close();
export var dist2=Math.pow(x.__getslice__(0,-2,1)-x.__getslice__(2,null,1),2)+Math.pow(y.__getslice__(0,-2,1)-y.__getslice__(2,null,1),2);
(close.where(starts).ffill()*signals).fillna(0);

var cmap=plt.cm.jet;
var y=np.array([true,false,true,false]);
ax.imshow(X,__kwargtrans__({cmap:cm.gray}));
var c=b.reverse();
datetime.date.fromtimestamp(stamp);
var fig=plt.figure();
arg;
var c=dict(function(){var __accu0__=[];for(var [j,col]of enumerate(df.columns))__accu0__.append(tuple([col,j]));return __accu0__}());
lst.append(datum);
export var sortedusers=function(){var __accu0__=[];for(var o of order)__accu0__.append(userd.py_get(o));return __accu0__}();
var x=np.linspace(0,10,100);
fname.close();
self.mygraph.set_xydata(t,self.ydata);
l.py_sort();
dict(__kwargtrans__({data:rv}));
df.head();
np.random.seed(2);
(np.array(old_set)+np.array(new_set))/2;
func();
false;
(function(){var __accu0__=[];for(var item of value)__accu0__.append(field_value(field.field,item));return __accu0__})();
logger.setLevel(logging.INFO);
plot_window.control.show();
export var prior=np.exp(-np.dot(theta,betas));

tree.add(str(result[0]));
rect.set_height(h);
var __left0__=divmod(number,10);export var tens=__left0__[0];var ones=__left0__[1];
self.assertEqual(self.nu.test_marshal(),__mod__(self.nu.FORMAT,self.nums));
print(html_to_text(n));
var opener=urllib.request.build_opener(handler);
print(string);
str(b);
var i=random.choice(list(range(len(l))));
var msg=MIMEMultipart();
var __left0__=plt.subplots(1,1);var fig=__left0__[0];var ax=__left0__[1];
false;
float(x);
plt.show();
var page=opener.open(url);
clips.PrintFacts();
os.remove(logfilepipe);
py_items.append(tuple([last_seen_date,headline,link]));
date_to_datetime(d);
screen.refresh();
self.func.__repr__();
l.py_sort();
plt.subplot(121);
time.sleep(4);
var indices=defaultdict(function __lambda__(){return defaultdict(set)});
export var xml_string=urllib.request.urlopen(url_link).read();
self.children=[];
np.sin(x);
resultlist.append(item);
export var occurences=np.where(a==a.max());
print(so.lower());
collections.defaultdict.__init__(self,list);
var d=dict(__kwargtrans__({p1:1,p2:2}));
ax.yaxis.set_major_formatter(y_format);
var sub_dict=dict({});

activity.approved=true;
random.shuffle(randomRange);
g.__dict__;
ax.set_xticks(data2.__getitem__([ndays[1],0]));
print(word.__getslice__(0,j,1)+word.__getslice__(j+1,null,1));
var cursor=connection.cursor();
CV_Assert(img.depth()!=sizeof(uchar));
print(s);
counts.most_common(len(counts));
var opener=urllib.request.build_opener(NoRedirectHandler());
hash.py_update(str(time.time()));
t.to_datetime();
doc.Close();
tuple(sum(base_lists,[]));
map(poison,L);
_empty(...args,__kwargtrans__(kwargs));
event.categories.count();
test(a);
value.py_split(char)[index];
func();
p+geom_histogram(__kwargtrans__({binwidth:1}));
mvnorm.pdf(x);
export var prices=numpy.arange(1E4,5E4,1E4);
s[np.searchsorted(b,a,__kwargtrans__({sorter:s}))];
var n=int(input());
df;
tuple([self.py_name,self.location])==tuple([other.py_name,other.location]);
self.stdout.write(output);
var queryset=Foo.objects.all();
do_something();

obj.delete();
var my_data=np.array([json_string,json_string,json_string]);
var __left0__=pygame.mouse.get_pos();export var mos_x=__left0__[0];export var mos_y=__left0__[1];
run_bash(submit_cmd);
df[cols].apply(function __lambda__(py_values){return sum(function(){var __accu0__=[];for(var v of py_values)__accu0__.append(Math.pow(v,2));return __accu0__}())},__kwargtrans__({axis:1}));
self.view.resizeColumnsToContents();
print(df.dtypes);
var soup=BeautifulSoup(page);
net.addConnection(FullConnection(bias,hidden1));
doctest.testmod();
var Y=np.dstack([X]*4096);
df[k]=pd.eval(v);
b.__setitem__([not_index.reshape(-1,1),not_index],a);
var output=p2.communicate()[0];
p.terminate();
db.commit();
self.next_chunk=self.next_chunk+py_next(self.it);
random.shuffle(control);
len(parser.parse_known_args(option.py_split())[1])!=2;
c[firstname]+=1;
array[idx];
var image=Image.open(sys.argv[1]);
var new_data=py_next(tail);
o.many2many.add(ModelA.objects.py_get(__kwargtrans__({id:1})));
syslog.setFormatter(formatter);
tuple([4])+tuple([7])*12;
dict(function(){var __accu0__=[];for(var [k,v]of list(d.py_items()))__accu0__.append(tuple([k,to_dict(v)]));return py_iter(__accu0__)}());
signal.signal(signal.SIGALRM,_handle_timeout);
var text=f.read();
var words=function(){var __accu0__=[];for(var line of f_in)__accu0__.append(line.strip());return py_iter(__accu0__)}();
print(m.result.group(1));
f(...arg_tuple);
days.py_setdefault(dt.toordinal(),[]).append(dt);
result.append(tuple([x[0],x[1],step]));
grouped.first();
export var my_schema=json.loads(my_text_file);
print(network);
tuple([[0,0,5,6,0,0,0,0]]);
export var search_response=urllib.request.urlopen(url);
var r=csv.reader(v);
my_func.foo=new_foo;
handle.set_visible(true);
print(len(headers));
datetime.datetime.fromtimestamp(2047570047);
tuple([[1,0,0,0,0,1]]);
var g=file(path_to_bigfile);
export var full_real_path=os.path.realpath(sys.argv[0]);
var d=function(){var __accu0__=[];for(var e of s)__accu0__.append([e,0]);return dict(__accu0__)}();
mpp.start();
var app=QtGui.QApplication([]);
var app=QtGui.QApplication(sys.argv);
original(list(a),list(b));
var reader=csv.reader(f);
export var sha=hashlib.sha256(pub_key_der).hexdigest();
print(function(){var __accu0__=[];for(var cluster of cl.getlevel(1))__accu0__.append(mean(cluster));return __accu0__}());
z1[np.where(z1==input_array.shape[2])]=z0.max();
var data=pd.DataFrame(raw_data);
var z=self.im.get_array().__getitem__([int(y),int(x)]);
set(second_list).difference(dic);
print(os.readlink("./P2JSnippets.py"));
bigList2.append(bigList2.py_pop(0));
var __left0__=np.histogram2d(x,y,__kwargtrans__({bins:50}));export var heatmap=__left0__[0];var xedges=__left0__[1];var yedges=__left0__[2];
platform.version();
self.pp.transport.write(data);
self.top.destroy();
gbl[moduleToImport]=importlib.import_module(moduleToImport);
axis.set_minor_locator(mpl.ticker.AutoMinorLocator());
date-=timedelta(__kwargtrans__({days:7}));
g(__kwargtrans__({x:1,y:2}));
self.cells.append(Cell(self,i));
export var firstvals=y[0]-np.abs(y.__getslice__(1,half_window+1,1).__getslice__(0,null,-1)-y[0]);
print(len(tweets));
[1,0];
var clock=pygame.time.Clock();
print(np.allclose(res1,res2));
x[0]+=1;
var df=pd.DataFrame();
var parser=argparse.ArgumentParser();
remote_file.write(in_string);
export var rank_a=dict(function(){var __accu0__=[];for(var [v,k]of enumerate(a))__accu0__.append(tuple([k,v]));return py_iter(__accu0__)}());
export var email_body=data[0][1];
export var field2=models.CharField(__kwargtrans__({max_length:10}));
a[indices];
var new_dict=old_dict.copy();
var soup=BeautifulSoup(response.get_data());
var arr=np.linspace(0,50,100).reshape(tuple([10,10]));
seq_type().join(filter(seq_type.isdigit,seq));
print(nums.count(1));
loudness_of_chunks.append(chunk.rms);
var results=cursor.fetchone();
line_offset.append(offset);
tuple([match.group(1),match.start(1),match.end(1)]);
self.transport.loseConnection();
plt.show();
Y+=np.random.normal(__kwargtrans__({scale:.1,size:Y.shape}));
names.append(codegen.to_source(node));
var lines=ax.get_lines()+ax.right_ax.get_lines();
pl.xticks(X,list(d.py_keys()));
win.setCoords(0,0,10,10);
py_metatype.__new__(cls,py_name,bases,dct);
plt.show();
var x=np.linspace(0,2*np.pi,N);
var instance=forms.ModelForm.save(self,false);
addch(ch);
print(min(map(min,Q)));
path.reverse();
root.mainloop();
process(line);
print(student.py_name);
a/n*Math.pow(x/n,a-1)*np.exp(-Math.pow(x/n,a));
var phases=numpy.random.uniform(0,1,10);
var timestamp=int(nanoseconds/100)+122192928E9;
export var array_pointer=ctypes.cast(Data,ctypes.POINTER(ArrayType));
df;
db_field.formfield(__kwargtrans__(kwargs));
export var event=Event.objects.get_for_object(self)[0];
print(str(correctDate));
var __left0__=plt.subplots(1,1);var fig=__left0__[0];var ax=__left0__[1];
user.set_password(password);
model.sims(__kwargtrans__({py_replace:true}));
var a=hashlib.sha256(mypass).digest();
s.quit();
fd.write(hash_string);
[job1];
export var old=f.read();
math.acos(0);
df.apply(function __lambda__(x){return x.set1.union(x.set2)},__kwargtrans__({axis:1}));
print(str(most_common));
set.union(...list(obj.py_values()));
numpy.vstack(tuple([a,b])).T;
z1.close();
export var appstats_DATASTORE_DETAILS=false;
export var lg=numpy.log(pdf);
(function(){var __accu0__=[];for(var [x,length]of zip(lst,lengths))__accu0__.append(x+pad_by*(max_len-length));return py_iter(__accu0__)})();
var user=query(User).filter_by(__kwargtrans__({id:1})).one();
var response=urllib.request.urlopen(URL,parameter);
my_field.my_filter=true;
X.add_nodes_from(list(pos.py_keys()));
key_list.append(td.text);
[2,2,2];

req.get_remote_host(apache.REMOTE_NOLOOKUP);
result.delete();
var data=stream.read();
figure(1);
var l=sc.recv(1024);
export var Arr1=Arr1.reshape(tuple([100,10,1]));
list1.append(dict1.py_get(key));
os.path.splitext(fname)[0].__getslice__(8,null,1);
json.loads(a);
var d=dict({});
p.join();
do_something();
df;
var id=db.Column(db.Integer,__kwargtrans__({primary_key:true}));
self.Bind(wx.EVT_BUTTON,self.onButton,btn);
self.value[0](...args,__kwargtrans__(kwargs));
export var roi_gray=cv2.cvtColor(roi,cv2.COLOR_BGR2GRAY);
var words=t.py_split();
print(df[years_month]);
Base.metadata.drop_all(engine);
var a=x[0];
self.setAttribute(Qt.WA_TranslucentBackground);
var User=get_user_model();
Image.fromarray(np.asarray(image)).show();
len(syllables);
var a=C();
logout_user();
arbiter.start();
frame.grid_rowconfigure(2,__kwargtrans__({weight:1}));
self.py_items.append(item);
var cursor=connect.cursor();
cron2.every_reboot();
export var EmailAddress=db.Column(db.String(255));
var y=np.sin(50*2*np.pi*x)+.5*np.sin(80*2*np.pi*x);
var screen=curses.initscr();
var li=[-1,-1,2,2,-1,1,1,1,1,1,-1,-1];
func.current_date(__kwargtrans__({type_:types.Date,bind:engine1}));
i+=1;
tuple([deletenew_image,image]);
(self-_EPOCH).total_seconds();
var im=Image.open(filename);
var title=models.CharField(__kwargtrans__({max_length:50}));
export var sel=Selector(response);
sys.exit(0);
cur.executemany(query,py_values);
tuple([sequence,best[-1]]);
var application=django.core.handlers.wsgi.WSGIHandler();
export var myTuple=tuple([int(source),int(target)]);
var flt=float(random.randint(0,100));
export var largest=function(){var __accu0__=[];for(var [value,key]of largest)__accu0__.append(tuple([key,-value]));return __accu0__}();
export var ij=np.vstack(tuple([i,j]));
sftp.close();
trel;
py_keys.insert(b);
lineNum+=1;
var x=tf.constant([.2,.7,1.2,1.7]);
self.table.itemClicked.connect(self.handleItemClicked);
tuple([[false,false,false,false,false]]);
Yf[0];
ax.set_aspect(1);
os._exit(255);
tuple([fig,ax]);
srv.serve_forever();
scf_1104442824510(987);
txn.commit();
tool.stderr.close();
str(1);
ndtri(.95);
var driver=webdriver.Firefox(__kwargtrans__({firefox_profile:firefox_profile}));
hello();
var e=cv2.cvtColor(c,cv2.COLOR_BGR2RGB);
var __left0__=tuple([[],[]]);export var listOfA=__left0__[0];export var listOfB=__left0__[1];
export var bee=ZigBee(ser);
np.intersect1d(av,bv).view(a.dtype).reshape(-1,a.shape[1]);
var pagehandle=urllib.request.urlopen(theurl);
print(repr(track));
mailserver.starttls();
print(get_selected_text_from_front_window());
chars.extend([digit,symbol]);
thirdList.append(listName.index(y));
print(args.cmd);
export var entity2_id=Column(Integer,__kwargtrans__({primary_key:true}));
time.tzset();
1/(1+np.exp(-z));
a[0].shape;
tuple([array([46]),array([62]),array([61])]);
cgi.test();
export var host_data=list();
var app=QtGui.QApplication(sys.argv);
uuid.uuid1().hex;
var my_list1=function(){var __accu0__=[];for(var i of my_list)__accu0__.append(i[1]);return __accu0__}();
var __left0__=tuple([x[j],x[i]]);x[i]=__left0__[0];x[j]=__left0__[1];
var results=function(){var __accu0__=[];for(var p of processes)__accu0__.append(output.py_get());return __accu0__}();
export var Tee=tee([],1)[0].__class__;
var resp=conn.getresponse();
Chainable(list(self.method(self.data,...args,__kwargtrans__(kwargs))));
response.read();
time.sleep(1);
var root=Tk();
Alias/media/opt/django/site1/media/statics;
var a=pd.Series([1,4,5,7,8],__kwargtrans__({index:index}));
print(fib(n));
s.upper();
-cr.fetchall();
plt.show();
editor.setCurrentIndex(int(index.model().data(index)));
var y=y1+(y2-y1)*t;
_.group(1);
print(r.text);
df.ix[0]-df.ix[1];
wx.Frame.__init__(self,...args,__kwargtrans__(kwargs));
export var paired=function(){var __accu0__=[];for(var t of chain(zip(chain_a,chain_b),zip(C_iter,D_iter)))__accu0__.append(list(t));return __accu0__}();
session._new=dict({});
plt.show();
ax.lines.remove(wr());
f.close();
var start=datetime.datetime.now();
print(path);
var old=sys.stdout;
var request=urllib.request.Request(url);
var __left0__=zip(...function(){var __accu0__=[];for(var i=0;i<4;i++)__accu0__.append(tuple([i*10,i*12]));return __accu0__}());export var rr=__left0__[0];var tt=__left0__[1];
var max_y=np.log10(max(y));
var process=function(){var __accu0__=[];for(var line of f)__accu0__.append(do_with_line(line));return __accu0__}();
print(a,b);
funcList.append(function __lambda__(m){if(typeof m=="undefined"||m!=null&&m.hasOwnProperty("__kwargtrans__"))var m=m;return callback(m)});
ax.xaxis.set_major_formatter(plt.FixedFormatter(names));
self.csock.setblocking(false);
df;
plt.contourf(data,__kwargtrans__({cmap:cmap,levels:[1,4,8,10]}));
new set([new set([file])]);
dict(re.findall(pattern,val));
gca().add_patch(rect);
__all__.append(py_name);
self.constant;
mydict[i]+=1;
var path=os.path.join(settings.MEDIA_ROOT,dir_name);
print(tuple(function(){var __accu0__=[];for(var _=0;_<4;_++)__accu0__.append(choice(choices));return py_iter(__accu0__)}()));
Results.objects.all();
var json_object=json.loads(json_string);
codeOut.close();
execlist[i][2]=myx;
frame.Show();
ax.plot(x.__getslice__(i*6,(i+1)*6,1),y.__getslice__(i*6,(i+1)*6,1));
new_queryset;
export var reset=function __lambda__(df){return df.reset_index(__kwargtrans__({drop:true}))};
var f=cv2.cvtColor(c,cv2.COLOR_RGB2BGR);
self.right.append(v);
result.append([]);
b[-1][1]=max(b[-1][1],end);
foo[0][0]===moo;
var indices=np.argpartition(arr.flatten(),-2).__getslice__(-2,null,1);
ndimage.map_coordinates(data,[zi,yi,xi]);
var k=function(){var __accu0__=[];for(var x of list)__accu0__.append(str(x));return __accu0__}();
var cache=function(){var __accu0__=[];for(var i=0;i<n;i++)__accu0__.append(py_next(it));return __accu0__}();
export var contact_form=ContactForm(request.POST,__kwargtrans__({instance:my_contact}));
u.save();
sys.path=sys.path.__getslice__(0,null,1);
node0.start();
var c=db.cursor();
tuple(function(){var __accu0__=[];for(var m of MONTHS)__accu0__.append(tuple([m,m]));return py_iter(__accu0__)}());
var ax=fig.add_subplot(1,1,1);
view.sel().py_clear();
df.loc.__setitem__([tuple([0,null,1]),tuple([0,null,1])],stacked.unstack());
print(line);
nx.draw_networkx_labels(G,pos,__kwargtrans__({labels:node_labels}));
pylab.draw();

func();
grid.flat[ind]=100;
curs.close();
c.py_update(dict([[k.upper(),v]]));
export var displayname=firstname+lastname||username;
print(x+y(1));
print(tuple([id(n),id(n1),id(n2)]));
var now=datetime.now();
var form=cgi.FieldStorage();
locale.setlocale(lang);
var chunk=len(data);
Counter(strs);
do_something_else(lines_of_interest);
len(self.crawler.engine.slot.inprogress);
plt.colorbar();
plt.show();
Parent.__new__(cls,value);
var x=np.arange(2*np.pi,__kwargtrans__({step:.01}));
line;
do_stuff();
var widget=QtGui.QWidget(self);
pyassoc;
self.webview.clearHistory();
f(...args,__kwargtrans__(kwargs))+1;
inner2();
compose(f,f);
var __left0__=numpy.histogram(py_values,bins);var freq=__left0__[0];var bins=__left0__[1];
var DEBUG=true;
py_typeof(s);
var x=[[1,2],1,1,[2,1,[1,2]]];
export var midlen=len(oldstr)/2;
var x=np.asarray(x);
canvas.grid(__kwargtrans__({row:0,column:0,sticky:N+S+E+W}));
ccw(A,C,D)!=ccw(B,C,D)&&ccw(A,B,C)!=ccw(A,B,D);
np.setdiff1d(a,a[mask]);
export var reads=[p.stdout.fileno(),p.stderr.fileno()];
l.py_sort(__kwargtrans__({key:getvals}));
var person=models.ForeignKey(User);
print(settings.fileName());
var a=np.arange(16).reshape(tuple([8,2]));
var df2=pd.concat(yearly_month_stats,__kwargtrans__({axis:1,py_keys:years}));
writer.writerow(row);
var filtered=img.copy();
cap.set(cv2.cv.CV_CAP_PROP_POS_FRAMES,pos_frame-1);
docker.wait(contid);
model.docvecs[0];
methodReference.__self__;
gtk.main();
response;
signal.alarm(10);
min_kmeans.fit(vectors);
var __left0__=pl.subplots(__kwargtrans__({figsize:tuple([12,4])}));var fig=__left0__[0];var ax=__left0__[1];
b.select_form(__kwargtrans__({nr:0}));
x[0]-=D[n-1]*np.sqrt((x*x).sum());
conn.setopt(pycurl.WRITEFUNCTION,body);
aMethod.__code__.co_argcount;
export var full_path=os.path.join(folder,file);
print(tuple([line1,line2]));
var gray=cv2.cvtColor(img,cv2.COLOR_BGR2GRAY);
AtoCIm.append(Image.open(image));
log.start();
imshow(threshold,__kwargtrans__({cmap:cm.Greys_r}));
getcontext();
print(__in__(Rational(1,2),i6));
p.communicate(value);
export var nowtimestamp=time.mktime(nowtuple);
a.__setslice__(0,0,null,[4]);
u[i]=len(item);
var now=pytz.utc.localize(datetime.utcnow());

export var newObject=className();
ax.xaxis.set_major_formatter(mtick.FuncFormatter(ticks));
image.show();
sum(b,a);
export var workList=yourList.__getslice__(0,null,1);
var cert=X509.load_cert(sys.argv[1]);
ax2.set_xticks([]);
self.put();
var py_name=models.CharField(__kwargtrans__({max_length:50}));
plt.draw();
export var tab=pd.crosstab(df.A>0,df.B>0);
result.extend(list(range(int(x),int(y)+1)));
sum(function(){var __accu0__=[];for(var ch of s)if(ch.isalpha())__accu0__.append(1);return __accu0__}());
var df=df.transpose();
c1.commit();
var b=np.tile(a,1E3);
var reader=csv.DictReader(fp);
var circles=cv2.HoughCircles(gray,cv.CV_HOUGH_GRADIENT,1,10);
tornado.ioloop.IOLoop.instance().add_callback(client.watch_queue);
var app=QApplication(sys.argv);
os.isatty(fd);
pdb.Pdb.__init__(self,completekey,stdin,stdout,skip);
sys.exit();
var __left0__=tuple([0,6]);var x=__left0__[0];var y=__left0__[1];
var y=random.randrange(box[0][1],box[1][1]);
xml_files.py_sort(__kwargtrans__({key:os.path.getmtime}));
export var emp=Employee.objects.py_get(__kwargtrans__({pk:id}));
self.request.sendall(self.data.upper());
var window=gtk.Window(gtk.WINDOW_TOPLEVEL);
main.py;
export var my_str=my_str.strip();
out.release();
__all__[key]=my_shelf[key];
f(...args,__kwargtrans__(kwargs));
fig.clf();
var args=parser.parse_args();
thing.__init__.__func__.__closure__[0].cell_contents;
export var cbar_ax=fig.add_axes([0,0,.1,.1]);
var __left0__=np.meshgrid(x,y);var X=__left0__[0];var Y=__left0__[1];
var http=httplib2.Http(__kwargtrans__({cache:memcache}));
results.append(tuple([numbers[0],numbers.__getslice__(1,null,1)]));
nelangs.append(nelang);
matcher(l1,l2.__getslice__(1,null,1))||matcher(l1.__getslice__(1,null,1),l2);
print(tuple([ca.key[0],ca.py_values[0],ca.py_values[1],ca.title[0],ca.index]));
tuple([[0,1,0,0,0,1]]);
et.write(sys.stdout,__kwargtrans__({pretty_print:true}));
start_ipython();
var new_list=map(f,it.takewhile(condition,l));
numpy.core._dotblas.__file__;
X.reshape(X.shape[0],-1).__getitem__([tuple([0,null,1]),0]).sum();
export var working_dir=os.path.dirname("./P2JSnippets.py");
result.append(prods);
py_iter(item);
np.in1d(aView,bView);
self.layoutVertical.addWidget(self.label);
f.write(data);
var result=dict([[py_name,result]]);
max(l);
root.py_clear();
export var txt=urllib.request.urlopen(target_url).read();
var line=line.strip();
match.groupdict();
SocketServer.TCPServer.allow_reuse_address=true;
var p=Popen(cmd,__kwargtrans__({shell:true,cwd:newpath}));
var element=wd.find_element_by_link_text(self.locator);
plt.grid(true);
rect(ctx,tuple([0,0]),tuple([width,height]),__kwargtrans__({stroke:false}));
cursor.execute(sql,params);
export var img1x=img1.shape[1];
os.dup2(desired_output_file.fileno(),sys.stderr);
df.loc[df.index.is_quarter_end];
var LOOKNEXT=false;
plt.bar(his[1].__getslice__(1,null,1),his[0]);
print(item);
admin.site.register(Report,ReportAdmin);
var app=flask.Flask(__name__);
var app=QtGui.QApplication(sys.argv);
pic.setGeometry(10,10,400,100);
left.put(n.__getslice__(1,null,2));
var messages=q.get_messages();
tk.Canvas.create_oval(self,...args,__kwargtrans__(kwargs));
var results=api.retweets(firstTweet.id);
print(data.read());
var result=list(Blog.objects.py_values());
self.config(__kwargtrans__({width:width+w}));
export var video2=cv.CaptureFromCAM(1);
plt.plot(bins,mlab.normpdf(bins,mu,sigma));
image/=image.max()/255;
py_new.append(new_word.lower());
self.factory.echoers.append(self);
var arr=np.empty(find_shape(my_list));
QLabel.__init__(self,parent);
queue.put(tuple([-priority,item]));
np.dot(np.sum(bidule,__kwargtrans__({axis:1})).T,betas);
print(random_with_N_digits(2));
np.degrees(angle);
sec_perf.reindex_axis(secs,1);
var ax=fig.add_subplot(111);
scipy.stats.norm(100,12);
msg.attach(part);
pruned;
apply(operator.itemgetter,tuple(b))(a);
sshcon.set_missing_host_key_policy(paramiko.AutoAddPolicy());
print(data);
tuple([1,0,.572864624,.725615079]);
tuple([1,0,.578792198,.100698871]);
plt.xticks(__kwargtrans__({rotation:0}));
p12.get_ca_certificates();
var l=QtGui.QVBoxLayout(self);
func(...cargs);
export var edit_user=relationship(User,__kwargtrans__({foreign_keys:[last_edit_user_id]}));
x[~I];
var writer=csv.DictWriter(fout,__kwargtrans__({fieldnames:fields}));
print(pandas.__version__);
p.join();
sys.stdout.write(str(squared(x)));
b.__dict__;
py_metatype.__new__(cls,py_name,bases,dict(classdict));
get_lerp_factor(2,list(range(8)),6);
x*arr.__getslice__(0,-1,1)+y*arr.__getslice__(1,null,1);
export var fun=function __lambda__(x){return Math.pow(x[0]-1,2)+Math.pow(x[1]-2.5,2)};
print(pd.DataFrame(ser).T);
int(offset.total_seconds()/60/60);
var py_values=map(function __lambda__(key){return d[key]},list(d.py_keys()));
sess.run(init);
q.register(stdout,select.POLLIN);
csv_from_excel(sys.argv[1]);
MyFrame().mainloop();
pool.close();
print(headers.getvalue());
self.count+=1;
print(df.groupby(Math.floor(df.A/2)).A.nsmallest(2));
sorted(x)[Math.floor(len(x)/2)];
export var tgtdates=[datetime.date(2011,8,29),datetime.date(2011,8,1)];
wx.Panel.__init__(self,parent);
serializer(obj);
nat_check(nat);
var x=np.arange(20).reshape(2,10);
wrapper;
smtp.quit();
v.set(garbage);
merge(a,b,function __lambda__(in_a,in_b){return in_a&&in_b});
user.save();
var d=dict(function(){var __accu0__=[];for(var i=0;i<1E6;i++)__accu0__.append(key_value());return py_iter(__accu0__)}());
var bins=np.linspace(df.a.min(),df.a.max(),10);
var opener=urllib.request.build_opener();
_f_array.__getitem__([tuple([0,null,1]),b]);
var __left0__=plt.subplots(1,1);var fig=__left0__[0];var ax=__left0__[1];
var __except0__=AttributeError;__except0__.__cause__=null;throw __except0__;
pipe.stdin.write(result_1);
f2.save();
lv.py_sort();
var b=np.append(a,[4]);
var browser=webdriver.Firefox(__kwargtrans__({firefox_profile:profile,capabilities:capabilities}));
print(sequence2);
time.sleep(1);
l.append(id(v));
sys.exit(main(sys.argv));
d.py_replace(__kwargtrans__({hour:0,minute:0,second:0,microsecond:0}));
cursor.close();
map(function __lambda__(x){return x-1},args);
var x=np.linspace(-1,1,500);
client.send(response);
print(G.edges(__kwargtrans__({data:true})));
export var messageJSON=json.dumps(message,__kwargtrans__({ensure_ascii:false}));
py_items[0];
globals.py_default();
c[key]=list(set(a[key])-set(b.py_get(key,[])));
export var class_id=db.Column(db.Integer,__kwargtrans__({primary_key:true}));
var A=np.vstack([A,newrow]);
M.__setitem__([tuple([0,null,1]),1],M.__getitem__([tuple([0,null,1]),1])*2);
main();
print(list(igroups([])));


var words=text.py_split();
[py_iter(List)]*2;
var data=data.reshape(data.shape.__getslice__(0,-1,1));
var reader=csv.reader(f);
self.loop.call_soon_threadsafe(task.cancel);
var metadata=MetaData();
var offsets=[94,95,96,97];
fit.apply(function __lambda__(x){return d[x.py_name].inverse_transform(x)});
classifier.fit(data.__getslice__(0,n_samples/2,1),digits.target.__getslice__(0,n_samples/2,1));
cv.SetCaptureProperty(video1,cv.CV_CAP_PROP_FRAME_HEIGHT,600);
export var in_memory_blocks=numpy.random.randint(0,_BLOCK_MAX+1,blocks_per_flush);
var groups=IT.groupby(zip(...idx),__kwargtrans__({key:operator.itemgetter(0)}));
dis.dis(function __lambda__(){return Foo().bar.add(1,2)});
b[the_slice];
a.__getitem__([tuple([0,-1,1]),tuple([1,null,1])]);
A.__init__(self,4);
(function(){var __accu0__=[];for(var j of set(l2))__accu0__.append(function(){var __accu1__=[];for(var [i,value]of enumerate(l1))if(j==l2[i])__accu1__.append(value);return __accu1__}());return __accu0__})();
attr(random.randint(1,100),...args,__kwargtrans__(kw));
dis.dis(take2);
export var List=list(range(1,20));
var df=pd.read_csv(StringIO(text),__kwargtrans__({index_col:0}));
self.x+other;
print(len(function(){var __accu0__=[];for(var item of py_values.__getitem__([tuple([0,null,1]),0]))if(item==0)__accu0__.append(item);return __accu0__}()));
main();
method(...args,__kwargtrans__(kwargs));
len(b);
var c=stdin.read(1);
export var num_rows=np.sum(np.max(partitions,__kwargtrans__({axis:1})));
var y=np.array([5,20,4,18,19,18,7,4]);
var a=np.random.rand(20);
var mask=np.zeros(img.shape.__getslice__(0,2,1),np.uint8);
self.axes=self.figure.add_subplot(111);
var a=np.arange(9);
wp.A.plot();
Response(dict({}),__kwargtrans__({template_name:template.template.py_name}));
print(japanese);
ctx.set_font_size(font_size);
wilma.delete();
var reader=csv.reader(f);
psutil.get_pid_list();
featureSelector.fit(X_train_data,Y_train_data);
export var styles=getSampleStyleSheet();
pool.close();
zook.myfunc();
var im=Image.open(image);
defaultdict.__init__(self,...args,__kwargtrans__(kwargs));
conn.sendall(output);
var c=np.max(b,__kwargtrans__({axis:0}));
var word=line.rstrip();
pak[TCP].remove_payload();
os.setresgid(0,0,-1);
clf.fit(X[train_idx],y[train_idx]);

f.flush();
var b=np.random.randint(0,50,1E3);
print(td.get_text());
var utc_offset=fromtimestamp(ts)-utcfromtimestamp(ts);
self._values.append(value);
value;
var input=sc.textFile(inputFile);
self.quit(file);
var y=data.__getitem__([tuple([0,null,1]),1]);
csr.eliminate_zeros();
google-cloud;
os.path.dirname(f);
var p=sns.kdeplot(data,__kwargtrans__({shade:true}));
node.set_data(node.get_next());
print(cython.typeof(a));
print(resargs);
export var encoded=base64.b64encode(sys.stdin.read());
var soup=BeautifulSoup(data);
entry2.grid(__kwargtrans__({row:1,column:0}));
slice(start,stop,step);
max(get_segstarttime(),get_jobstarttime());
export var all_messages=[];
plt.figure(1);
var fig=plt.figure();
var cmap=mpl.cm.jet;
k+=1;
var et=etree.ElementTree(root);
var value=1;
vscrollbar.config(__kwargtrans__({command:canvas.yview}));
np.random.shuffle(ar);
p.start();
export var cheesiness=models.IntegerField();
all_module_names.extend(additional_module_names);
a[2]+=[5];
export var gram_matrix=np.zeros(tuple([X.shape[0],Y.shape[0]]));
setup(__kwargtrans__(setup_args));
var __left0__=np.mgrid.__getitem__([tuple([-4,4,complex(0,100)]),tuple([-4,4,complex(0,100)])]);export var plotx=__left0__[0];export var plotz=__left0__[1];
var x=np.arange(100);
var cheesiness=models.IntegerField();
sum(log(stats.weibull_min.pdf(x,p[1],0,p[0])));
nonlinsolve([Math.pow(x,5)+Math.pow(x,2)+1],[x]);
print(foo.myfunc.__doc__);
os.unlink(file_path);
var id=Column(Integer,__kwargtrans__({primary_key:true,autoincrement:true}));
export var words_to_count=function(){var __accu0__=[];for(var word of word_list)if(word.__getslice__(0,1,1).isupper())__accu0__.append(word);return py_iter(__accu0__)}();
qapp.exec_();
_curried_func(...args+moreargs,__kwargtrans__(dict(kwargs,__kwargtrans__(morekwargs))));
a+b;
export var xticklabels=ax1.get_xticklabels()+ax2.get_xticklabels();
var combo=gtk.combo_box_new_text();
var a=A.objects.py_get(__kwargtrans__({pk:A_pk}));
tuple([.6411,sym2,5,5,10,10]);
inf.close();
var a=np.ones(tuple([10,5]));
.250478029251;
os.kill(os.getpid(),signal.SIGUSR1);

var now=datetime.datetime.now();
plt.yticks([]);

export var cinqdf=pd.DataFrame(cinqdata);
f;
tk.Frame.__init__(self,parent);
var now_aware=pytz.utc.localize(unaware);
var screen=pygame.Surface(tuple([width,height]),flags,depth);
streak+=1;
app.MainLoop();
str(timedelta(__kwargtrans__({seconds:elapsed})));
export var related_tables=function(){var __accu0__=[];for(var prop of relation_properties)__accu0__.append(prop.target);return __accu0__}();
__in__([1,42],a.tolist());
result.append(s);
stream.close();
var my_array=np.empty(tuple([2,2]),__kwargtrans__({dtype:float}));
var ax=plt.figure().add_subplot(111);
export var tk=tkinter.Tk();
print(merged_dict);
var output=np.zeros(tuple([N,N]));
pyplot.legend();
sys.exit(main(sys.argv));
lists([12,4,15,11]);
plt.axis([0,7.02,7/r,-.5]);
var parser=etree.HTMLParser();
var str=base64.b64encode(imageFile.read());
print(test.somevalue,id(test));
var b=copy.deepcopy(a);
print(df);
parent.get_toplevel().child_focus(gtk.DIR_TAB_FORWARD);
math.pow(-i,4);
print(df.shape);
szr.Add(self.button_1,0,wx.TOP|wx.BOTTOM|wx.ALIGN_CENTER_HORIZONTAL,5);
string.__getslice__(0,i+1,1);
self.assertFieldsEqual(self.nums,self.initFields);
false;
var p=Process(__kwargtrans__({target:f,args:tuple([lst])}));
var sock=socks.socksocket(socket.AF_INET,socket.SOCK_STREAM);
self.driver.close();
x.b;
var __except0__=socket.gaierror;__except0__.__cause__=null;throw __except0__;
plt.scatter(x,y,__kwargtrans__({alpha:.1}));

mfun;
var a=np.arange(start,stop+step,step);
export var Mids1=[1125,1187,1125,1156,1156,1156,1140,1140];
export var Tops2=[1125,1125,1125,1125,1125,1250,1062,1250];
self.setPos(pos);
menu.addAction(exit);
session.add(c2);
np.random.shuffle(indices);
var doc=Study(__kwargtrans__(data));
s[4];
import_delorean();
as_strided(b,__kwargtrans__({shape:b.shape,strides:strides})).__getslice__(a.shape[0],null,1);
fig.subplots_adjust(__kwargtrans__({bottom:.2}));
seen.add(tuple([x,y]));
var coords=np.vstack(tuple([xi,yi]));
output.append(json.dumps(item));
var sig2=sin(t1/2)+np.random.normal(__kwargtrans__({scale:.1,size:len(t1)}));
py_items.append(function __lambda__(i){if(typeof i=="undefined"||i!=null&&i.hasOwnProperty("__kwargtrans__"))var i=i;return dump(i)});
var d=defaultdict(int);
w.write(f,s);
self.worker.join();
var dictionary=dict({});
var ax=fig.add_subplot(iplot);
var l1=function(){var __accu0__=[];for(var x of l1)if(!__in__(x,l2))__accu0__.append(x);return __accu0__}();
export var lena=scipy.misc.lena();
map(a.__getitem__,b);
canvas.pack();
ids.append(map(function __lambda__(tup){return tup[0]},c.__getslice__(0,K,1)));

[991];
[997];
var pool=multiprocessing.Pool(4);
list(chain.from_iterable(new_lis));
print(df);
export var source_vertex=graph.vs[source_vertex_id];
a[0][0]=1;
var app=App();
do_something();
c.__setslice__(1,null,2,b);
var files=glob(sys.argv[1]);
unsearched.put(path);
var fig=plt.figure();
new set([new set([x.y])]);
var nested_list=map(partial(map,str.upper),nested_list);
var data=f.read();
var result=function(){var __accu0__=[];for(var w of vocab)if(len(w)>=8)__accu0__.append(w);return __accu0__}();
part.get_payload();
false;
besseli_vec(0,A);
export var firstnames=function(){var __accu0__=[];for(var item of all_data)__accu0__.append(item[0]);return __accu0__}();
export var yd=line.get_ydata();
var s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);
print(os.getuid());
print(page_source);
var k=plot(tuple([0,1]),tuple([1,1]));
self.stopButton.clicked.connect(self.simulRunner.stop);
var image=gtk.image_new_from_stock(gtk.STOCK_ABOUT,gtk.ICON_SIZE_DIALOG);
var __left0__=tuple([my_list.__getslice__(2,4,1),my_list.__getslice__(7,10,1)]);my_list.__setslice__(7,10,null,__left0__);my_list.__setslice__(2,4,null,__left0__);
var index=numpy.argmin(nplats);
list_dir();
drives;
export var y_true=[0,1,2,0,1,2,0,1,2];
false;
zip_longest(...args,__kwargtrans__({fillvalue:fillvalue}));
Wizard.Finish.Click();
myplt.setmydefaults();
var x=np.random.randn(5E3,200);
sys.stdout.flush();
var df=df.groupby(__kwargtrans__({by:df.columns,axis:1})).mean();
func2();
export var utc_datetime=datetime.datetime.utcnow();
sys.stdout=sys.stderr;
cv2.rectangle(im,tuple([x,y]),tuple([x+w,y+h]),tuple([0,255,0]),2);
var DIRNAME=os.path.abspath(os.path.dirname("./P2JSnippets.py"));
var df=pd.DataFrame(np.fromstring(arr,__kwargtrans__({dtype:np.uint8})).reshape(-1,8)-48);
var q=session.query(Foo);
main();
b.index[b.argmax()];
var G=np.vstack([np.ones_like(x),x,y,z]).T;
print(lilfoo.bar);
var mask=np.zeros(tuple([nrows,ncols]),__kwargtrans__({dtype:bool}));
bar();
print(local_tz.localize(datetime(2012,1,15)));
var ax2=ax1.twinx();
main();
sys.excepthook=excepthook;
var A=np.random.random(tuple([10,2]))*100;
x.loc.__getitem__([x.date.idxmax(),tuple([0,null,1])]);
process(data.py_get());
grid(true);
arr[ind];
w.write(list(map(function __lambda__(j){return i+j},list(function __lambda__(j){return __in__(i,j)},listStrings))));
l[0]+=1;
gpsgvqsbixtwyakp;
self.ssh=paramiko.SSHClient();
export var sorted_lines=sorted(f,__kwargtrans__({key:operator.itemgetter(slice(0,24))}));
var d=function(){var __accu0__=[];for(var [k,g]of grouped)__accu0__.append([k,recur_dictify(g.ix.__getitem__([tuple([0,null,1]),tuple([1,null,1])]))]);return dict(__accu0__)}();
var dict_writer=csv.DictWriter(output_file,py_keys);
help(datetime.datetime.py_replace);
export var unique_values=set(chain.from_iterable(function(){var __accu0__=[];for(var d of dictionaries_list)__accu0__.append(list(d.py_values()));return py_iter(__accu0__)}()));
export var vmatch=np.vectorize(function __lambda__(x){return bool(r.match(x))});
export var ard=serial.Serial(port,9600,__kwargtrans__({timeout:5}));
self.someValue=value;
Response(api_result);
var x=np.arange(n);
outer.append(function(){var __accu0__=[];for(var [i,e]of g)if(e!=N)__accu0__.append(e);return __accu0__}());
export var pxi=points.__getitem__([i,0]);
export var _KDGETLED=19249;
self.Destroy();
Counter(str1);
br.set_handle_refresh(false);
var a=numpy.arange(-10,10);
var mask=np.eye(out.shape[0],__kwargtrans__({dtype:bool}));
var layout=QtGui.QVBoxLayout(self);
var toss=np.random.randint(0,2,100);
var number=int(line);
var s=str(i);
export var wtr=csv.writer(result);
sys.getsizeof(a);
A.setdiag(list(range(1,11)));
do_stuff();
np.random.seed(1);
var parsed=urlparse.urlparse(url);
self.matrix.__getitem__(index);
var ff=webdriver.Firefox();
output.close();
cal_window.add(cal_vbox);
var parser=etree.XMLParser(__kwargtrans__({remove_blank_text:true}));
var __left0__=np.meshgrid(list(range(960)),list(range(540)));export var offsetx=__left0__[0];export var offsety=__left0__[1];
binary_erosion(D,kernel2,__kwargtrans__({border_value:1})).astype(int);
var soup=BeautifulSoup(open(sys.argv[1]));
self.assertEqual(message,send_message);
export var swapped=binascii.hexlify(y);
learn(Xtest,Xtrain,Ytest,Ytrain,5);
list(map(cube,list(range(1,11))));
var im2=Image.py_new(im.mode,im.size);
var L=function(){var __accu0__=[];for(var i=0;i<n;i++)__accu0__.append(x);return __accu0__}();
x.__setslice__(0,null,null,function(){var __accu0__=[];for(var y of x)__accu0__.append(!y);return __accu0__}());
print(result.group(0));
encodings.idna.ToASCII(label);
var n=len(nums);
pattern.__setslice__(i,null,4,-1);
self.instance.project_set.add(project);

tuple([str(lst[0]),[]]);
export var hidden_field=forms.CharField(__kwargtrans__({widget:forms.HiddenInput()}));
print(url_string);
ax.add_patch(circle);
var py_name=models.CharField(__kwargtrans__({max_lenght:255}));
print(table_row.format(__kwargtrans__(row)));
var my_list=sys.argv[1].py_split();
export var dotproduct=(c.x-a.x)*(b.x-a.x)+(c.y-a.y)*(b.y-a.y);
var x=np.arange(10);
var __left0__=tuple([true])*9;var a=__left0__[0];var b=__left0__[1];var c=__left0__[2];var d=__left0__[3];var e=__left0__[4];var g=__left0__[5];var h=__left0__[6];var i=__left0__[7];var j=__left0__[8];
output.write(aes_engine.encrypt(input.read()));
print(vectorizer.get_feature_names());
print(args.columns);
plt.hist(nd,__kwargtrans__({normed:true,bins:n_bins0,alpha:.5}));
var req=urllib.request.Request(uri);
print(line_num);
fn(decoratee,...args);
(function(){var __accu0__=[];for(var key of ds[0])__accu0__.append([key,function(){var __accu1__=[];for(var subdict of ds)__accu1__.append(subdict[key]);return __accu1__}()]);return dict(__accu0__)})();
py_sort-Vu;
urlpatterns+=staticfiles_urlpatterns();
db.session.merge(provider);
var py_iter=function(){var __accu0__=[];for(var i=0;i<100;i++)__accu0__.append(random.randint(0,1E3));return __accu0__}();
var path=urllib.parse.unquote(path);
w.writerow([id]+list(rest.py_values()));
(function(){var __accu0__=[];for(var [i,j]of zip(list2,list2.__getslice__(1,null,1)))__accu0__.append(tuple([list1[i],list1[j-1]]));return __accu0__})();
var cursor=conn.cursor();
export var all_zeros=!np.any(a);
print(row[1]);
ax.set_frame_on(false);
(df==pd.Series(conditions)).all(__kwargtrans__({axis:1}));
var path=os.path.join(dest_dir,file_name);
self.frame.Destroy();
df.filter(df.dt_mvmt.isNotNull()).count();
dict(__kwargtrans__({form:crud()}));
time.sleep(1);
s.setsockopt(socket.IPPROTO_IP,socket.IP_HDRINCL,1);
sys.exit();
list(dict(list(grouped)).py_values());
x.sayHello();
cv2.bitwise_and(d1,d2);
print(mymodule.__repr__());
(np.diff(np.sign(my_list))!=0).sum();
gc.collect();
var opener=urllib.request.build_opener(no_proxy);
var fig=plt.figure();
(function(){var __accu0__=[];for(var [i,j]of zip_longest(my_list,my_list.__getslice__(1,null,1)))if(i!=j)__accu0__.append(i);return __accu0__})();
var b=[[1,5],[8,12],[15,18],[20,24]];
app;
var i=np.array([0,0,1,2,2]);
conn.executemany(query,test.to_records(__kwargtrans__({index:false})));
output[item]+=1;
plt.gray();
names.append(py_name);
print(now2.strftime(fmt));
var results=pool.map_async(foo,list(range(40))).py_get();
py_items.append(tuple([new_key,v]));
print(get_python_lib());
self.put_async().get_result();
tuple([tuple([220921999,2427])]);
var x=numpy.linalg.solve(a,b);
var user=models.ForeignKey(User);
self.assertItemsEqual(v1,v2,msg);
var graph=nx.Graph();
self.border.Add(self.sizer,1,wx.ALL|wx.EXPAND,5);
self.out_queue.put(path);
RNA_integers.append(RNA_dictionary[i]);
f();
win.setCentralWidget(vispyCanvas.native);
print(json.dumps(pairs));
var heatmap=ax.pcolor(data,__kwargtrans__({cmap:plt.cm.Blues}));
reactor.stop();
var o=json.loads(n);
var pool=multiprocessing.Pool();
var lst=[a,d,b,a,c,e,e,f,g];
print(stdout.readline());
var repo=Gittle.init(path);
self.crawler.start();
print(a[mask]);
var opener=build_opener(HTTPCookieProcessor(cj),HTTPHandler());
confused_array[~mask&numpy_array!=0]=2;
scipy.stats.poisson.ppf([.025,.975],10);
dict([[b.py_pop(0),b.py_pop(0)==0]]);
threading.Thread.__init__(self);
var yi=np.linspace(-1,1,ngrid);
self.Bind(wx.EVT_KEY_UP,self.KeyDown);
self.server.serve_forever();
print(df);
export var color_producer=matplotlib.cm.ScalarMappable(__kwargtrans__({norm:norm,cmap:cmap}));
var index=letters.index(letter);
p.show();
py_typeof(len(x));
var group=map(itemgetter(1),group);
var noise=np.random.normal(0,1,100);
math.sqrt(x+y);
var id=db.Column(db.Integer,__kwargtrans__({primary_key:true}));
numpy.nextafter(-.1,1);
np.count_nonzero(a[mask]);
f.read();
p.apply_async(f,__kwargtrans__({args:tuple([i]),callback:adder}));
var r=np.linalg.lstsq(np.c_.__getitem__([x,np.ones_like(x)]),y)[0];
imshow(grey,__kwargtrans__({cmap:cm.Greys_r}));
print(f());
queue.append(new_path);
self.updater.timeout.connect(self.py_update);

Fun.dynprop;
s.shutdown(socket.SHUT_WR);
main();
cache[key];
layout.addWidget(self.button);
[0,0,0,0];
conn.quit();
self.table=QtGui.QTableWidget(rows,columns,self);
print(add_time(datetime(__kwargtrans__({year:2015,month:6,day:19})),relativedelta(__kwargtrans__({months:+1}))));
df.index[0];
var result=dict(cursor.fetchall());
var __left0__=self.client.exec_command(command);var stdin=__left0__[0];var stdout=__left0__[1];var stderr=__left0__[2];
cv2.rectangle(im,tuple([x,y]),tuple([x+w,y+h]),tuple([0,0,255]),2);
vscrollbar.pack(__kwargtrans__({fill:Y,side:RIGHT,expand:FALSE}));
export var list2titles=list(function(){var __accu0__=[];for(var k of list2)__accu0__.append(st1dict[k]);return py_iter(__accu0__)}());
print(sum(function(){var __accu0__=[];for(var x of input)__accu0__.append(Counter(dict(x)));return py_iter(__accu0__)}(),Counter()));
var A=np.cos(a)*np.cos(b)-np.sin(a)*np.sin(b)*np.sin(c-d);
map(operator.add,first,second);
export var ylim=ax.get_ylim();
export var base_datetime=datetime.datetime(1970,1,1);
tuple([word,s.__getslice__(end+1,null,1)]);
__builtin__.raw_input();
tuple([66666666,44444]);
true;
slice_consc(df2,5);
A.instances.append(self);
var data=file.read();
print(root.text_content());
np.lexsort(tuple([b,a]));
tuple([1,1,8,8]);
file.close();
var locations=Location.objects.all();
export var inp_im=Image.open(imgfn);
np.log2([-1,2,4]);
np.column_stack(tuple([which_in_a,where_in_b]));
out.value_counts().head();
new_image.image.save(slug_filename,File(handle_upload_url_file(url)));
m.__setitem__([tuple([50,56,1]),tuple([50,56,1])],m.__getitem__([tuple([50,56,1]),tuple([50,56,1])])+scipy.ones(tuple([6,6])));
output.write(key);
yaml.dump(test2,__kwargtrans__({stream:sys.stdout}));
value;
self.STDIN_FILENO=sys.stdin.fileno();
print(tag.getArtist());
ax.plot(x_values,data.iloc[i]);
self.wfile.write(content);
groups.rds|intersect(groups.development)|first;
var C=A.__getslice__(len(A)/2,null,1);
c.play();
self._thread=threading.Thread(__kwargtrans__({target:self.run}));
print(etree.tostring(document,__kwargtrans__({xml_declaration:true})));
var seconds=float(seconds);
(function(){var __accu0__=[];for(var [x,y,label]of data)__accu0__.append(tuple([x,y]));return __accu0__})();
f.close();
h1.setLevel(logging.DEBUG);
export var qlock=threading.Lock();
var k=keyfunc(item);
l;
axis.set_visible(false);
main();
var title=models.CharField(__kwargtrans__({max_length:100}));
print(turnthis);
result.append(el);
var ax=plt.gca();
export var lms=LMS(np.zeros(filterlen),__kwargtrans__({damp:damp}));
Thread(__kwargtrans__({target:foo()}));
self.table.setItem(row,column,item);
export var diffkeys=function(){var __accu0__=[];for(var k of dict1)if(dict1[k]!=dict2[k])__accu0__.append(k);return __accu0__}();
var mask=df.eq(df.iloc[0]).all();
var fp=urllib.request.urlopen(request);
var dict=dict({});
var result=[];
var d=defaultdict(list);
var result=new_array[0]&new_array[1];
multiprocessing.freeze_support();
help(django.utils.dateformat);
hm.HookKeyboard();
export var env_cmd=subprocess.list2cmdline(env_cmd);
var text=text.strip();
output.addPage(page);
export var sum_a=[0,0,0];
true;
var utc_dt=dt.py_replace(__kwargtrans__({tzinfo:pytz.utc}));
plt.matshow(A,__kwargtrans__({alpha:.5}));
response.read();
var poly=GeoSeries(Polygon([tuple([0,0]),tuple([0,2]),tuple([2,2]),tuple([2,0])]));
timer.cancel();
sleep(.5);
Traversal.description();
var d=function(){var __accu0__=[];for(var k of f.index.levels[0])__accu0__.append([k,list(f.ix[k].index)]);return dict(__accu0__)}();
json.JSONEncoder.py_default(self,obj);
print(tidx+pd.offsets.Day(15));
print(convert_excel_time(.4006944444444));
export var cost1=db.FloatProperty(__kwargtrans__({py_default:0}));
Py_Initialize();
var y_pred=[0,0,0,0,1,1,0,2,2];
ButtonTestApp().run();
var dt=datetime.date(2010,6,16);
list(closed_range(10,1,-2));
l_qa.append(tuple([k,m.groupdict()[k]]));
self.label.setFrameStyle(QtGui.QFrame.Box|QtGui.QFrame.Plain);
np.std(image);
s.set_debuglevel(0);
parentNode.insertBefore(doc.createComment(element.toxml()),element);
root.wm_iconbitmap(tempFile);
time.sleep(.5);
df.mean(__kwargtrans__({axis:0}));
f();
main();
c.add(datetime.datetime.now());
edges.py_sort(__kwargtrans__({key:function __lambda__(tup){return tup[0]+tup[1]/10}}));
np.allclose(a.indptr,b.indptr);
var result=list(clean(flatten(lst)));
row[set_col]=val;
var py_name=models.CharField();
var data=data.__getslice__(0,-data[-1],1);
print(function(){var __accu0__=[];for(var i of raises)__accu0__.append(i.py_metatype.func.id);return __accu0__}());
MyUser.tags.all();
var data=function(){var __accu0__=[];for(var row of data)__accu0__.append(json.loads(row));return __accu0__}();
sys.stdout.write(line);
self.Destroy();
var y=dict(__kwargtrans__({a:2,b:2}));
var string=string.__getslice__(0,-len(to_strip),1);
var ax=f.add_axes([.17,.02,.72,.79]);
json_data_rdd.flatMap(processDataLine(arg1,arg2));
df;
var cursor=db.cursor();
export var py_arguments=parser.parse_args();
rx.match(w);
export var curOuter=db.cursor();
np.random.shuffle(b[ndx]);
cPickle.dump(mat,f,-1);
result;
self.proc.kill();
l_qa.append(m.groupdict()[k]);
plt.xlim(tuple([0,AUC.shape[1]]));
new set([new set([body])]);
fig.savefig(img);
random.choice(seq);
redemption_date.year;
my_plot_2(ax2);
var test=Test(1);
np.eye(M.shape[1])*M.__getitem__([tuple([0,null,1]),np.newaxis,tuple([0,null,1])]);
var browser=webdriver.Firefox();
export var fileExt=os.path.splitext(file)[-1];
self.q.put(tuple([false,-1,msg]));
self.handleError(record);
var pool=Pool(4);
np.bincount(h,__kwargtrans__({weights:x}));
var __left0__=tuple([randint(0,len(grid)-1),randint(0,len(grid[0])-1)]);var x=__left0__[0];var y=__left0__[1];
preincrement(it);
ax.set_color_cycle(colors);
list(s);
var g=__all__;
print(l);
browser.set_cookiejar(cookiejar);
export var newParsed=json.loads(parsed[0]);
numpy.allclose(c.__getslice__(0,-1,1),d);
export var allbestcolumns=map(best6,points);
deletelist_1[int(i)];
var a=ctypes.cdll.LoadLibrary(source);
main();
logging.basicConfig(__kwargtrans__({level:logging.INFO}));
var x=np.atleast_1d(np.array(x));
export var word_pairs=zip(alligned1.py_split(),alligned2.py_split());
self.x;
urllib.parse.urljoin(url1,url2);
__all__[module]=importlib.import_module(module);
self.rabbit_connect();
export var test1list=test1filehandle.readlines();
var df=pd.concat([prd_df,prc_df],__kwargtrans__({axis:1}));
var fig=plt.figure();
var l2=[[1],[2]];
export var codes=function(){var __accu0__=[];for(var [k,v]of list(codes.py_items()))__accu0__.append([v,k]);return dict(__accu0__)}();
t.start();
a[b];
list.insert(2*i+1,list[2*i]);
foo();
var idx=np.concatenate([[0],1+np.diff(g).nonzero()[0]]);
seq==list(range(seq[0],seq[0]+len(seq),1));
self.sock=socket;
p.parse_args();
setattr(someobject,foostring,value);
export var blockLengthY=np.argmin(a.__getitem__([tuple([0,null,1]),0])==a.__getitem__([0,0]));
obj.__dict__;
(function(){var __accu0__=[];for(var i of l)if(__in__(s,i))__accu0__.append(i);return __accu0__})();
platform.python_implementation();
var out=subprocess.check_output(args,__kwargtrans__({startupinfo:startupinfo}));
dlfile(url);
export var lth=len(spitches);
var cursor=conn.cursor();
var __left0__=plt.subplots(__kwargtrans__({nrows:nrow,ncols:ncol}));var fig=__left0__[0];var ax=__left0__[1];
plt.imshow(img);
df.apply(pd.Series.nunique);
logger.addHandler(log_handler1);
var res=[0]*(len(_s)+len(_v)-1);
object_list.py_sort(__kwargtrans__({key:function __lambda__(x){return key_precedence.py_get(x.key,py_default)}}));
b.save();
df.drop(df.std()[df.std()<threshold].index.py_values,__kwargtrans__({axis:1}));
self;
print(sum(function(){var __accu0__=[];for(var _ of py_next(groupby(l),[[],[]])[1])__accu0__.append(1);return py_iter(__accu0__)}()));
export var hehe=MyCallable();
data_frame.to_csv(file_path,__kwargtrans__({index:false}));

var start_date=self.start_date+add_days;
export var dateString=parser.parse(string,__kwargtrans__({fuzzy:true}));
var z=hstack2(tuple([x,y]));
var opener=urllib.request.build_opener(proxy_handler);
var root=Tk();
var a=np.random.random(tuple([100,100,100]));
export var monday1=d1-timedelta(__kwargtrans__({days:d1.weekday()}));
m.select();
export var attachment=MIMEText(f.read());
var py_values=set(map(function __lambda__(x){return x[1]},list));
ax.add_patch(r2);
print(cleansed);
json.dumps(...args,__kwargtrans__(kwargs));
var response=urllib.request.urlopen(crawling);
var parser=xml.sax.make_parser();
new_list.append(list[i]);
pygame.quit();
self.queue.task_done();
intervals.py_sort(__kwargtrans__({key:function __lambda__(x){return tuple([x.end,x.end-x.start])}}));
export var populations=dict({});
this_array.__getslice__(indices[0],next_i,1).fill((before+after)/2);
same(cont1,cont2,value_same);

layer.draw();
f.read();
pygame.init();
var L=[];
var a=list(range(1,6));
export var namespaceURL=resolved.namespace()[1];
new set([new set([field.field])]);
export var zombie=Vector2(zombie.rect.x,zombie.rect.y);
export var bin_ip=socket.inet_aton(ip);
print(NSScreen.mainScreen().frame());
task.delay(arg1,arg2);
export var neat_data=z.read(z.namelist()[0]);
var ser=pd.Series(np.random.normal(__kwargtrans__({size:1E3})));
(function(){var __accu0__=[];for(var [k,_]of self._list)__accu0__.append(k);return py_iter(__accu0__)})();
sys.exit(app.exec_());
var xi=np.array([0,.5,1]);
dir();
session.add(w);
array(1);
var img=img.quantize(__kwargtrans__({palette:palette_img}));
sys.argv.py_pop();
output_dict[int(key)]=function(){var __accu0__=[];for(var item of value)__accu0__.append(int(item));return __accu0__}();
tuple([function __lambda__(){return x}.__closure__[0],set_cell]);
var module=loader.find_module(py_name).load_module(py_name);
var arr=function(){var __accu0__=[];for(var num of str_arr)__accu0__.append(int(num));return __accu0__}();
print(Foo());
math.exp(result);
bins.append(x1);
export var cv2_im=cv2.cvtColor(cv2_im,cv2.COLOR_BGR2RGB);
var x=v.__getslice__(-1,null,1);
self.handler.flush();
logger.addHandler(mh);
export var ps=function(){var __accu0__=[];for(var [[x,y],[dx,dy]]of it.product(points,offsets))__accu0__.append(tuple([x+dx,y+dy]));return __accu0__}();
var norm=np.linalg.norm(v);
print(list(myDict.py_keys())[i]);
ps_process.stdout.close();
deleted[k];
export var session2=Session();
self.button.pack();
var a=np.hstack([88,a,77]);
print(words.count(word),word);
np.nan==np.nan;
var k=arr.shape[0]/2;
all(py_values==0);
var divider=make_axes_locatable(ax);
-a*(np.exp(-t/c)-np.exp(-t/b))/(b-c);
var a=np.random.random(100);
self.send_error(500);
myNames.append(line.strip());
self.i+=1;
var x=np.linspace(0,1,100);
export var test2list=test2filehandle.readlines();
tweets.append(json.loads(line));
var i=np.arange(0,len(pts));
timeout_timer.cancel();
np.where(x>y,x+y,x-y);
ax.add_patch(r1);
y.__setslice__(0,null,REPLACE_EVERY_Nth,REPLACE_WITH);
fig.canvas.draw();
modules.py_clear();
var results=results.exclude(__kwargtrans__({published:false}));
o.x=o.x.__iadd__(5);
var __left0__=plt.subplots(1,2,__kwargtrans__({figsize:tuple([8,5])}));var fig=__left0__[0];var axs=__left0__[1];
ax.quiver(x,y,z,u,v,w,__kwargtrans__({length:.1}));
export var dftmtx=function __lambda__(N){return np.fft.fft(np.eye(N))};
tcflush(sys.stdin,TCIOFLUSH);
var it=py_iter(iterable);
var diff=np.diff(a,__kwargtrans__({axis:0}));
l1.append(l2);
excel.Application.Quit();
var out=process.stdout.read(1);
var ax1=fig.add_subplot(5,4,1);
plt.hold(false);
var res=function(){var __accu0__=[];for(var t of pairs)__accu0__.append(tuple([t,nt(...t)]));return py_iter(__accu0__)}();
var xs=dict.fromkeys(list(range(2)),a);
var app=QApplication([]);
pairs.append([i,list1.index(elem)]);
export var filtertype=0;
export var interlaced=0;
export var root_log_handler=logging.handlers.RotatingFileHandler(file_1,...args);
var soup=BeautifulSoup(data);
export var contains_vectorized=np.vectorize(contains);
wordbank[word]+=1;
somelist.__setslice__(0,null,null,filterfalse(determine,somelist));
arq.close();
rpy2.robjects.numpy2ri.activate();
self.PrepareDC(dc);
var A=np.zeros(tuple([6,6]));
var width=measure.winfo_width();
mainwin.add(notebook);
true;
st.seed.widget.clamp_to_bounds=false;
self.audio=pyaudio.PyAudio();
print(r.py_name);
print(parser.parse_args());
numpy.extract(choice,a);
group.append(item);
a.n;
var root=Tk();
var __left0__=image.size;var width=__left0__[0];var height=__left0__[1];
writer.writerow(fieldnames);
plt.plot(df[c]);
self._driver=WebDriver();
[2,1,8,7,6,5,4];
var json_data=json.loads(data);
P.show();
print(response.geturl());
assertSequenceEqual(seq1,seq2);
var x=np.random.rand(5,2);
var parser=argparse.ArgumentParser();
var out=p.stdout.readline();
quitjupyter;
now-then>timedelta(__kwargtrans__({hours:1}));
var writer=csv.DictWriter(f,__kwargtrans__({fieldnames:headers}));
loop.run_until_complete(main());
newList.append(oldList[i]);
var result=numpy.empty(tuple([len(r),r.max()]),data.dtype);
var d=datetime.date(2011,7,2);
window.set_size_request(200,100);
color_list.py_sort(__kwargtrans__({key:get_hsv}));
var ax=plt.gca();
var decompressed=zlib.decompress(data);
export var structured_scrubbed=json.loads(scrubbed);
self;
f.seek(offset);
py_typeof(py_name);
var ax1=fig1.add_subplot(111);
list1.__getslice__(0,position,1)+list2+list1.__getslice__(position,null,1);
matching.append([subpattern]);
self.delete(...a,__kwargtrans__(kw));
var ch=logging.StreamHandler();
self.resize(minimumSizeHint());
print(repr(line));
print(cron4);

plt.subplot2grid(tuple([4,4]),[0,1],2,2);
m.group(0);
dict([[parts[0],pack(parts.__getslice__(1,null,1))]]);
P.drawOn(canvas,10,10);
var a=np.arange(1,4);
export var prod=session.query(Product).filter(Product.id==1).one();
export var maxvi=np.argsort(a,__kwargtrans__({axis:1}));
h.start();
-hound;
var opener=urllib.request.build_opener(...handlers);
export var xp=np.sum(Z,__kwargtrans__({axis:0}));
false;
var indices=function(){var __accu0__=[];for(var [idx,value]of enumerate(a2))if(__in__(value,wanted))__accu0__.append(idx);return __accu0__}();
tuple([a,b]);
var d=function(){var __accu0__=[];for(var [k,v]of list(d1.py_items()))__accu0__.append([k,d2[v]]);return dict(__accu0__)}();
var colnames=colnames.__getslice__(-1,null,1)+colnames.__getslice__(0,-1,1);
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
var b=np.random.randint(n,__kwargtrans__({size:k}));
device.close();
response;
data[i]=row;
var data=f.read();
self.inner_sizer.Add(self.tin,1,wx.LEFT|wx.RIGHT|wx.EXPAND,50);
layout.addWidget(buttons);
var df=pd.DataFrame(np.random.random(tuple([5,5])));
(function __lambda__(x){return x+n});
print(repr(e));
var mylist=sorted(mylist,__kwargtrans__({key:keyfunc}));
print(n);
word.islower()?lowers.append(word):other.append(word);
cbar_ax.set_axes_locator(get_ax_loc);
x[0].upper()+x.__getslice__(1,null,1);
var py_name=models.CharField(__kwargtrans__({max_length:200}));
np.random.seed(0);
int(s,16);
print(dict(urlparse.parse_qsl(qs)));
print(token.access_token);
var __left0__=function(){var __accu0__=[];for(var f of tuple([min,max]))__accu0__.append(f(x,y));return __accu0__}();export var min=__left0__[0];export var max=__left0__[1];
s(...args,__kwargtrans__(kwargs));
self._a=A();
float(x);
plt.show();
url_queue.join();
var clf=svm.SVC();
list(self.py_values());
bg.paste(im,im);
var x=[1,1,1,2,2,2,1,1,1];
export var resplot=res.plot();
var app=Flask(__name__);
df>2&df<10;
tornado.web.Application.__init__(self,handlers);
fig.set_size_inches(8,11);
setup(__kwargtrans__({ext_modules:ext_modules()}));

canvas.config(__kwargtrans__({width:interior.winfo_reqwidth()}));
f();
destinition.put_data(data);
max(function(){var __accu0__=[];for(var k of d)if(k<key)__accu0__.append(k);return py_iter(__accu0__)}());
list((Counter(a)-Counter(set(a))).py_keys());
plt.axis([-2,2,-1,max(len(set1),len(set2))+1]);
var a=y(aVariable,bVariable);
print(numpy.bincount(B.ravel(),__kwargtrans__({weights:A.ravel()})));
print_x();
export var window_before=driver.window_handles[0];
q.queue.py_clear();
stringer.esc_statuses[py_name];
self.timeout=loop_time;
var tree=dict({});
var counter=Counter(list(d.py_values()));
__builtins__.list;

data.dtype;
a[b]=tuple([a,b]);
tuple([mv[0],mv[1],mv[2]]);
G.add_node(child);
data.commit();
parser.feed(data);
a*b;
df.T.fillna(s).T;
[model];
var root=Tk();
var test=re.compile(pat(self.__MEMBER_TYPES),re.IGNORECASE);
list((expected-found).elements());
var numbers=function(){var __accu0__=[];for(var i=0;i<10;i++)__accu0__.append(random.randint(a,b));return __accu0__}();
export var input_queue=Queue.Queue();
HTML(play_beep);
self.py_name=py_name;
var __left0__=get_name();var first_name=__left0__[0];var last_name=__left0__[1];
print(fig.canvas.get_supported_filetypes());
approximate_fraction((1+math.sqrt(5))/2,1E-5);
deleteordered_dict[i];
var result=(count*phyQP+1)/float(pubKeyExpo);
clf.fit(X_train.py_values,y_train.py_values);
hello();
var form=SomeForm(request.POST,request.FILES);
plt.plot(np.cumsum(np.random.randn(1E3,1)));
var f=plt.figure();
lookup_list.append(function(){var __accu0__=[];for(var [l,v]of zip(labels,msg))__accu0__.append(lookup[l].index(v));return __accu0__}());
var c=np.equal(a,b);
print(args.options);
time.sleep(2);
len(lst)-1-r_idx;
ax.scatter(x,y,__kwargtrans__({color:rgb}));
self.app(environ,start_response);
s.format(__kwargtrans__({x:1}));
self.ax=self.fig.add_subplot(1,1,1);
print(item.text);
water_held;
sorted(value);
[];
matrix[0][2];
s.count(s[0])==len(s);
print(event.widget.find_closest(event.x,event.y));
df.dtypes;
var p=subprocess.Popen(cmd,__kwargtrans__({shell:true,stdout:subprocess.PIPE}));
rslt.append(tuple([x+dx,y+dy]));
hdf5_file.close();
myseries_one.iloc[0];
ga.login();
PLT.show();
(function(){var __accu0__=[];for(var _=0;_<m;_++)__accu0__.append([0]*n);return __accu0__})();
swin.pack();
list_size_1.append(row);
print(random_date(d1,d2));
sdl2.SDL_SetRenderDrawColor(renderer,255,255,255,alpha);
deactivate;
var user=oauth.get_current_user(SCOPE);

f.read(128);
reactor.listenUDP(8E3,EchoUDP());
var node_count=sum(function(){var __accu0__=[];for(var _ of db.getAllNodes().iterator())__accu0__.append(1);return py_iter(__accu0__)}());
main();
bcrypt.hashpw(password,bcrypt.gensalt(12));
self.queue=Queue(1);
print(target_list[~numpy.in1d(list(range(len(target_list))),to_exclude)]);
func(self.val);
loggify(Working);
result+=sorted(sublist,__kwargtrans__({key:g}));
smallfile.write(line);
plt.show();
df;
__f;

self.listener.close();
df.py_replace(__kwargtrans__({to_replace:to_replace,value:vals,regex:true}));
pageContent.readline();
export var data_rescaled=data_rescaled.astype(np.uint8);
export var ax0c=fig.add_axes([.1,.68,.8,.25],__kwargtrans__({sharex:ax0a}));
wb.Close();
export var paw=paw.flatten();

var minval=min(a);
a+b*2>5;
self.root.lift();
newkeywords.py_update(fkeywords);
deletet.__getslice__(5,null,1);
var obj=someClass();
self.__dict__.py_update(tmp_dict);
dict.__getitem__(self,key);
logger.addHandler(fhan);
ax.scatter(data.__getitem__([tuple([0,null,1]),0]),data.__getitem__([tuple([0,null,1]),1]),__kwargtrans__({c:point_values}));
var path=urlparse.urlparse(url).path;
Sets[userID].add(rowID);
newdict[0].append(100);
self.audio_frames.append(data);
print(a==b);
pyplot.gca().add_line(line);
f.seek(0,2);
print(x,y);
var sample=np.random.rand(n,1);
var sm=plt.cm.ScalarMappable(__kwargtrans__({cmap:my_cmap,norm:plt.Normalize(__kwargtrans__({vmin:0,vmax:1}))}));
var answer=function(){var __accu0__=[];for(var item of counter_list)if(item[1]==max_occurrences)__accu0__.append(item[0]);return __accu0__}();
con.rollback();
data.__getitem__([-1,tuple([0,null,1])]);
var f=os.open(filename,os.O_RDWR);
win.window.input_shape_combine_mask(bitmap,0,0);
os._exit(0);
export var futures=function(){var __accu0__=[];for(var param of params)__accu0__.append(c.submit(f,future,param));return __accu0__}();
var coordinates=function(){var __accu0__=[];for(var l of f)__accu0__.append(function(){var __accu1__=[];for(var c of l.py_split())__accu1__.append(c);return py_iter(__accu1__)}());return __accu0__}();
self.clicked.connect(self._handle_click);
GST_REGISTRY;
some_object;
b.__getitem__([tuple([0,null,1]),tuple([0,null,1]),1]);
var img=adobe_to_srgb(img);
server.rcpt(toaddrs[0]);
print(__in__(evil_vals[0],dict_with_evil_keys));
var parser=argparse.ArgumentParser();
execute();
f.write(page.read());
self.__dict__.py_update(state);
printTable(curPG.fetchall(),function(){var __accu0__=[];for(var c of curPG.description)__accu0__.append(c.py_name);return __accu0__}());
reverse[value].append(key);
var form=ModelForm(request.POST,request.FILES,__kwargtrans__({instance:obj}));
plt.imshow(img,__kwargtrans__({zorder:0,extent:[.5,8,1,7]}));
b().mymethod();
unittest.main();
(function(){var __accu0__=[];for(var x of lst)if(x.isalpha())__accu0__.append(x);return __accu0__})();
decorator;
create_dict();
py_typeof(BT);
var py_new=np.repeat(old[jump_indices],repeats);
list(set(a).intersection(set(b)));
var port=server_sock.getsockname()[1];
_draw_points(i,0);
self.members=0;
Math.pow(-4,2);
cache[object_to_cache_as_string]=object_to_cache;
export var songsJSON=json.dumps(songs);
ax.set_ylim(__kwargtrans__({bottom:0}));
np.arange(n)-dfill(b)[i];
var a=A();
var somedict=dict.fromkeys(somelist,1);
classes[py_name]=py_typeof(py_name);
print(output);
var tokens=list(tokenize(stream));
f[0](f.__getslice__(1,null,1));
datetime.fromtimestamp(local.timestamp());
var args=parser.parse_args();
fft_axes.set_ylim([0,1E3]);
surf2.fill(TRANSPARENT);
export var _marker_type_key=db.Column(db.Integer,__kwargtrans__({primary_key:true}));
Row(1,Vectors.sparse(4,Seq(tuple([0,-1]),tuple([2,.5]))));
your_template.render(timesince);
print(args);
print(py_typeof(img_str));
a.shape;
time.sleep(N);
print(function(){var __accu0__=[];for(var n of map(test.giveMyNum,q))if(n>1)__accu0__.append(n);return __accu0__}());
export var months=cdiff.DATE.map(function __lambda__(x){return x.month});
var soup=BeautifulSoup(html);
self.data.append(s);
parser.print_help();
var screen=pygame.display.get_surface();
var matrix=np.zeros(tuple([5,5]));
all(function(){var __accu0__=[];for(var c of x)__accu0__.append(__in__(c,it));return py_iter(__accu0__)}());
kmeans_m.fit(X_hat,__kwargtrans__({max_iter:100,number_of_runs:10}));
my_func.foo;
var a=Test();
ndata[0]=2;
var form=MicroForm(request.POST);
newfunc(...args,__kwargtrans__(kw));
var b=dict(function(){var __accu0__=[];for(var x of bar)__accu0__.append(py_next(py_iter(x.py_items())));return __accu0__}());
var df=DataFrame(books).T.fillna(0);
export var environment=jinja2.Environment();
var p2=Polygon(ring2.coords);
var wr=csv.writer(csvfile,__kwargtrans__({quoting:csv.QUOTE_ALL}));
var fig=plt.figure();
print(function(){var __accu0__=[];for(var [i,[a,b]]of enumerate(zip(it1,it2),1))if(a!=b)__accu0__.append(i);return __accu0__}());
run(__kwargtrans__({reloader:true}));
next_message.save();
self.finished.emit();
py_get(remote_path,fd);
var __left0__=cam.read();var s=__left0__[0];var img=__left0__[1];
var A=np.array([[2,-1,0],[-1,2,-1],[0,-1,2]]);
register_blueprints(app);
mark_safe(__mod__(template,substitutions));
var lines=file.readlines();
print(str(soup));
var count=function __lambda__(x){return collections.Counter(function(){var __accu0__=[];for(var c of x.lower())if(c.isalpha())__accu0__.append(c);return py_iter(__accu0__)}())};
c2.setopt(pycurl.PROXYPORT,8081);
plt.tight_layout();
var ax=plt.gca();
line.set_ydata(sin(x+i/10));
divmod(10.5,1);
shutil.move(file,destination);
my_list[1]();
pygame.quit();
Map(__kwargtrans__({fold:function __lambda__(f,g){return g(x)},bimap:function __lambda__(f,g){return Right(g(x))}}));
var x=Obj.objects.create(__kwargtrans__({py_name:foo}));
Thread(__kwargtrans__({target:runCommand,args:tuple([command])})).start();
var __left0__=process.communicate();var stdout=__left0__[0];var stderr=__left0__[1];
var angle=np.linspace(0,2*np.pi,arclen*2,__kwargtrans__({endpoint:false}));
grouped.get_group(false);
os.getpid();
var req=QNetworkRequest(QUrl(url));
fmap;
export var Fx=np.random.choice(np.array([-1,0,0,1],__kwargtrans__({dtype:np.int8})),__kwargtrans__({size:tuple([iters,n])}));
self.hbox.addWidget(self.label);
debug(str(s));
var mod=sys.modules[py_name];
var p=bokeh.plotting.figure(__kwargtrans__({x_range:tuple([0,4]),y_range:tuple([0,4]),plot_height:200}));
var args=parser.parse_args();
s==c_string;
var im=sess.run(img_tf);
print(generate_list(1E3));
print(list(M.py_values()));
show(p);
export var Dinvs=np.sum(Dinv);
var df=pd.DataFrame(new_data);
gtk.main_quit();
fh.close();
d[parts[0]]=d.py_get(parts[0],[])+[parts[1]];
var code=models.CharField(__kwargtrans__({max_length:255}));
np.polynomial.polynomial.polyfit(x,y,4);
var fig=plt.figure();
print(neighbors(A,0,0));
decorator;
print(parsed.getroot());
export var cgen=function(){var __accu0__=[];for(var i=0;i<NUM_COLORS;i++)__accu0__.append(cm(1*i/NUM_COLORS));return py_iter(__accu0__)}();
sys.stdout.write(msg.ljust(minwidth));
pickle.dump(member,f,pickle.HIGHEST_PROTOCOL);
x.append([x]*5);
plt.show();
tcpCliSock.send(outputdata[i]);
df[df[cols]<0]=np.nan;
issubclass(QuizForm,forms.Form);
a_thread.start();
export var thiserr=numpy.mean(better_errs);
var x=np.arange(2);
var my_dict=defaultdict(dict);
f();
print(row0);
self.a=a;
f.close();
export var DOT11_CIPHER_ALGO_RSN_USE_GROUP=256;
writer.writerows(data);
rght+=1;
var root=Tk();
export var train_loader=data_utils.DataLoader(train,__kwargtrans__({batch_size:50,shuffle:true}));
self.xlBook.Close();
myList;
var x=x.__getitem__([tuple([0,null,1]),np.newaxis]);
np.less_equal(abs(x-y),atol+rtol*abs(y));
var s2=zlib.decompress(s1);
p2.stdin.close();
worksheet.write_string(1,0,name_entry);
wb.save(response);
array_foo(a);
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
self.append(PoiData(lat,lon));
var obj=MyClass();
var data=cur.fetchall();
var fullname=os.path.join(path,filename);
export var decay_rate=2E-6;
connection.engine.execute(myClass.__table__.insert(),l);
var x=np.arange(10);
var parent_parser=argparse.ArgumentParser(__kwargtrans__({add_help:false}));
MyThread(self.on_thread_finished).start();
output_header.append(input_header[column_index]);
f.write(text2save);
self.central.deleteLater();
os.close(out_fd);
export var torinfo=handle.get_torrent_info();
prev_weekday(date(2012,8,20));
var __left0__=optimize.curve_fit(func,x,y,__kwargtrans__({sigma:sigma,maxfev:1E4}));var popt=__left0__[0];var pcov=__left0__[1];
(function(){var __accu0__=[];for(var [_,v]of sorted(zipped,__kwargtrans__({key:key})))__accu0__.append(v);return __accu0__})();
crsr.execute(sql);
key[index].reshape(a.shape);
self.stream.write(msg);
ax.get_yaxis().set_visible(false);
print(lucky(50));
var f=urllib.request.urlopen(req);
walkDict(myDict,filterFor);
B.date.apply(function __lambda__(x){return in_range(x,A.start,A.finish)});
var root=tree[0];
loop.run_until_complete(main());
var object_id=models.PositiveIntegerField();
instance.work.save();
plot_implicit(goursat_tangle);
b.append(4);
var client=Client(host,port);
e+hyperbola(xcos-hsin,...pars)*np.cos(th)+xcos-hsin;
seen.add(x);
self.already_computed.extend(itertools.islice(self.it,n));
var fig=plt.figure();
temp_list.append(np.nan);
var result=np.empty_like(X);
answer.append(tuple([key,length(py_iter)]));
f1.seek(0);
os.remove(csvfile);
string.decode(i);
foo(z)+1;
python-V;
var output=sorted([1]*k+[0]*(n-k),__kwargtrans__({key:function __lambda__(k){return random.random()}}));
nearness[min(nearness.py_keys())];
var m=np.array([[1,0,1],[0,1,0],[1,0,1]]);
export var lens=np.array(function(){var __accu0__=[];for(var item of listvalues)__accu0__.append(len(item));return __accu0__}());
plt.plot(np.arange(10)+i);
var file_path=os.path.join(folder,the_file);
session.flush();
zf.close();
exit(0);
tuple([0,1,8,27]);
var __left0__=tuple([a1.__getslice__(0,x,1),tmp]);a2.__setslice__(0,x,null,__left0__);a1.__setslice__(0,x,null,__left0__);
result;
py_next(it);
print(b.__dict__);
var context=dict({});
func;
var ax1=fig.add_subplot(111);
var arr2=np.arange(10).reshape(2,5);
var __left0__=plt.subplots(1,__kwargtrans__({figsize:tuple([16,16])}));var fig=__left0__[0];var ax=__left0__[1];
var soup=BeautifulSoup(xml);
Z.data*=Y[Z.indices];
result.append(idx);
export var cert_pem=OpenSSL.crypto.dump_certificate(OpenSSL.crypto.FILETYPE_PEM,cert);
exit(0);
setence_list.append(word);
os.close(fout);
de.show();
main();
sorted(tuples,__kwargtrans__({key:function __lambda__(x){return x[2]}})).__getslice__(0,10,1);
sys.getsizeof(w);
mask.__setslice__(1,null,null,mask.__getslice__(1,null,1)|mask.__getslice__(0,-1,1).copy());
export var col_sums=numpy.zeros_like(img);
var s=a.__getitem__([tuple([0,null,1]),np.array(second).reshape(-1,1),third]);
export var pathname=os.path.dirname(sys.argv[0]);
importlib.reload;
var table=cur.fetchall();
setattr(Something,py_name,decorator(fn));
self.saver.restore(self.session,fn);
self.send_response(401);
asyncore.dispatcher.__init__(self);
pprint(mindict);
tuple([[0,1,2]]);
[1,5,5,5,5];
var id=db.Column(db.Integer,__kwargtrans__({primary_key:true}));
f();
sys.stdout=logger;
spam.py_update();
my_time_list;
plt.subplot2grid(tuple([4,4]),[2,2],2,2);
set(myDict)&set(myList);
pl.show();
sys.path.append(os.getcwd());
print(retrieve_name(y));
os.path.normpath(mypath)+os.sep;
redistributed_points.extend(attracted_point_list(g,a,f));
var __left0__=i;output[item]=__left0__;line[i+1]=__left0__;
var c=function(){var __accu0__=[];for(var pair of zip(a,b.__getslice__(0,null,-1)))for(var value of pair)__accu0__.append(value);return __accu0__}();
print(r[numpy.isreal(r)]);
df;
export var sdata=np.py_sort(data,__kwargtrans__({axis:1}));
var filename=sys.argv[1];
fin.seek(0);
np.nan;
output_queue.put(process_me);
Maybe(maybe.calc(function __lambda__(x){return x*2}));
export var Xflip=flipall(X);
tuple([556,27]);
s.close();
var d=OrderedDict([a,b,c]);
print(py_typeof(fresult.col1.iat[1]));
export var fit_df=df.dropna();
var session=requests.session();
print(urlparse.urlunparse(newurl));
run_wsgi_app(application);
export var post_data=request.input_buffer.read(-1);
b().mymethod();
zip(list,list);
var x=[0,0,1,1,2,2];
var s=etree.tostring(root,__kwargtrans__({pretty_print:true}));
arr[unconverged]-=f_g[new_unconverged]/fp(arr[unconverged]);
(a>0&a<1).sum();
print(urlparse.urljoin(testurl,urlparse.urlparse(cleaned).path));
plt.show();
plt.colorbar();
export var as_dict=dict(is_even);
var l2=[4,5,6];
export var blob_key=str(urllib.parse.unquote(blob_key));
var result=function(){var __accu0__=[];for(var r of result)__accu0__.append(separator.join(map(str,r)));return __accu0__}();
client.set_missing_host_key_policy(paramiko.AutoAddPolicy());
var parser=argparse.ArgumentParser();
var today=datetime.now(tz).date();
foo.__code__.co_argcount;
export var subtxt=txt.__getslice__(i,j,1);
datetime.fromtimestamp(value);
fout.close();
export var datetimes=function(){var __accu0__=[];for(var i=0;i<10;i++)__accu0__.append(now-dt.timedelta(__kwargtrans__({hours:6}))*i);return __accu0__}();
self.fh.close();
self.hbox.addWidget(self.txted);
f.truncate();
true;
printArray(function(){var __accu0__=[];for(var j of j_indices)__accu0__.append(str(Array[i][j]));return __accu0__}());
var __left0__=tuple([min(a,b),max(a,b)]);var a=__left0__[0];var b=__left0__[1];
export var trip=models.ForeignKey(Trip);
print(make_hash(foo.__dict__));
var widget=QWidget();
l[1];
self.stdout=sys.stdout;
print(tuple([letter,count]));
df.columns=df.columns.swaplevel(0,1);
tuple(sorted(a.py_items()));
np.tril(df.unstack().py_values,-1).sum();
d[py_typeof(x)].append(x);
var im1=im.resize(tuple([tilesize,tilesize]),Image.BILINEAR);

heapq.heapify(a);
x[1]-x[0];
parents[b].append(a);
export var primary_language=Column(String(50));
a/=a.sum();
print(info.get_content_subtype());
db.session.expunge(product_obj);
generalizedEuclidianAlgorithm(b,a);
print(q.py_get());
print(ttaken);
print(dectest.test(a));
sum(function(){var __accu0__=[];for(var [a,b]of zip(A,B))__accu0__.append(abs(a-b));return py_iter(__accu0__)}());
201412;
var counts=collections.Counter(map(tuple,c));
deleteself.right.__getslice__(0,x,1);
var out=np.py_split(list1.ravel()[sidx],cut_idx.__getslice__(1,-1,1));
dates.hist();
members.append(target.id);
print(repr(dest));
var b=numpy.array([0,0,0,0,1,1]);
py_typeof(s);
result+=str(r);
print(key.hash());
export var actions=webdriver.ActionChains(browser);
power(function __lambda__(x){return x*2},0)(9);
pp.pformat(my_dict);
test(__kwargtrans__(dicC));
self.finished.emit();
painter.draw_box(...args,__kwargtrans__(kwargs));
vbox.addWidget(self.previewImage);
foo(a+b+c);
path.append(k.id_or_name());
sum(function(){var __accu0__=[];for(var [idx,j]of enumerate(s,1))if(idx!=len(s))__accu0__.append(s[idx]==j);return py_iter(__accu0__)}());
var b=np.array([false,true,true,false]);
var ll=list(chain.from_iterable(function(){var __accu0__=[];for(var e of l)__accu0__.append(repeat(e,2));return py_iter(__accu0__)}()));
export var device=TextConverter(rsrcmgr,retstr,__kwargtrans__({codec:codec,laparams:laparams}));
i+=1;
print(tuple([i,j]));
item;
print(access_token);
var __left0__=s.accept();var conn=__left0__[0];var addr=__left0__[1];
count.most_common();
var user_input=[];
print("./P2JSnippets.py");
var app=Flask(__name__);
rpath;
[false,true,false,true];
window.show();
Post.objects.filter(__kwargtrans__({userBy__id__in:friends_and_user}));
var f=function __lambda__(x){return Series(np.histogram(x,__kwargtrans__({bins:bins}))[0],__kwargtrans__({index:bins.__getslice__(0,-1,1)}))};
nextList.append(newString);
var today=datetime.now();
var res=requests.py_get(URL);
os._exit(1);
var html=template.render(Context(data));
view.resize(600,400);
export var trigram_measures=nltk.collocations.TrigramAssocMeasures();
var x=tuple([[],[]]);
self.Bind(wx.EVT_BUTTON,self.OnOkayCanButton,canButton);
fs.delete();
print(sorted(flatten(structure)));
export var firefox_profile=webdriver.FirefoxProfile();
var hand=random.sample(DECK,5);
var shape=np.array(arr.shape*2);
print(len(y));
Graph().setThis(self._this.read(pathbytes));
HTML(style+df_html);
dis.dis(make_adder.__code__.co_consts[1]);
var cur=conn.cursor();
export var kd_vals=np.exp(kd.score_samples(x));
var val=map1[key];
print(len(list));
var a=bar.a;
var indices=[1,4,5,6,7];
-.11112;
plt.gca().xaxis.set_major_locator(plt.NullLocator());
mutex.release();
[tuple([1,5]),tuple([8,11]),tuple([200,202])];
pool.join();
var array=np.zeros(10);
x+y;
var content=fd.read();
(function(){var __accu0__=[];for(var i=0;i<20;i++)__accu0__.append(int(.5+Math.pow(10,i*2/19)));return __accu0__})();
x.strftime();
memset(location,0,size);
window.show();
image_file.write(chunk);
sys.stdout=codecs.getwriter(output_encoding)(sys.stdout,__kwargtrans__({errors:errors}));
print(list(find_ref_names(b)));
a.write(f,os.path.relpath(f,root));
var n=random.uniform(0,weight_total);
GO;
self.lineedit.setFocus();
var mask1=logical_and(arange(10)>5,arange(10)<=8);
math.acos(inner_product/(len1*len2));
s[s==12];
urllib.request.urlopen(req);
mlab.outline(__kwargtrans__({extent:tuple([0,1,0,1,0,1])}));
data[line[0]].extend(line.__getslice__(1,null,1));
isinstance(f,numpy.float64);
ax.xaxis.set_major_formatter(ticker.FixedFormatter(ticklabels));
self.page.loadFinished.connect(self.save);
var y=x[mask];
var e=list(zip(...d));
export var diff_seconds=(mytime-datetime.fromtimestamp(0)).total_seconds();
var ax=fig.add_subplot(111);
tcpSerSock.listen(5);
env.Depends(target[i],out);
plt.show();
sys.getsizeof(frozenset(tuple([1,2])));
export var overlap=df.index.to_series().diff().shift(-1);
main();
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
var ret=np.array([]);
print(df.iloc.__getitem__([-1,tuple([0,null,1])]));
var m=np.arange(len(df));
f(x)+1;
f.close();
print(result.shape);
out[-1].append(element);
var app=Flask(__name__);
var a2=np.py_split(a,[2,4]);
plt.show();

(function(){var __accu0__=[];for(var words of sixgrams)__accu0__.append(joiner(words));return __accu0__})();
OrderedDict.__init__(self,...args,__kwargtrans__(kwargs));
axes.set_frame_on(frame);
var mycsv=csv.reader(f);
(function(){var __accu0__=[];for(var [i,a]of enumerate(lst))for(var b of lst.__getslice__(i+2,null,1))__accu0__.append(tuple([a,b]));return __accu0__})();
self.rect=Rectangle(tuple([0,0]),1,1);
transsurface.set_alpha(50);
print(str);
merged[k].add(d1[k]);
var result=dict({});
var app=Flask(__name__);
result[line_number].append(line.strip());
export var graphA=tf.Graph();
plt.plot(list(range(10,20)));
print(df1.reindex(__kwargtrans__({columns:comb,fill_value:0})));
output.append(pformat(environ));
var c=np.hstack(tuple([a,b]));
print(json.dumps(sample));
fake_writer.writerows(data);
export var somearray=np.random.random(100);
var data=[];
ids.extend(list(range(1,int(x.__getslice__(1,null,1))+1)));
self.assertEqual(1,c.count);
(df-df2).combine_first(df).reindex_like(df).astype(int);
print(str(node));
var ax=fig.add_subplot(111);
resampled_values.diff();
popen.wait();
trimmed.py_pop(0);
var data=numpy.array([0,0,0,2,2,0,2,2,2,0]);
var h=hexbin(x,y,__kwargtrans__({gridsize:10,mincnt:0}));
self.button=QtGui.QPushButton(self);
form.save_m2m();
stream.write(data_to_write);
tuple([len(flows[maks]),maks]);
dill.detect.badtypes(f);
termios.tcsetattr(file.fileno(),termios.TCSADRAIN,new_attrs);
export var new_failures=function(){var __accu0__=[];for(var t of tests1)if(!__in__(t,tests2))__accu0__.append(t);return __accu0__}();
ar(a)|ar(b)|ar(c);
f(50,50);
export var R_in_six_sec_interval=function(){var __accu0__=[];for(var R of filtered_data)__accu0__.append(R[2]);return __accu0__}();
self.causes;
export var _basedir=os.path.abspath(os.path.dirname("./P2JSnippets.py"));
a*np.sqrt(Math.pow(b*c,2)+Math.pow(x-d,2))/b+e;
self.clients.remove(client);
classifier.show_most_informative_features();
export var authhandler=urllib.request.HTTPBasicAuthHandler(passman);
document.prettify();
func(...args,__kwargtrans__(kwargs));
print(row);
s.partition(delim)[2];
print(heapq.nsmallest(2,list1));
export var tuple=tuple(l);
self._list.insert(index,item);
fig.colorbar(im,__kwargtrans__({cax:cax}));
idcord.append(y1);
print(hi.bye);
var __except0__=SystemExit;__except0__.__cause__=null;throw __except0__;
var kernel=np.array([[-1,-1,1],[-1,1,1],[-1,-1,1]]);
signal.Signals(2).py_name;
var __except0__=AttributeError(msg.format(py_typeof(self).__name__,py_name));__except0__.__cause__=null;throw __except0__;
Maybe(100);
var im=numpy.array(img);
var im=Image.fromarray(A);
var d=np.searchsorted(a,np.setdiff1d(a,b));
s.ioctl(socket.SIO_RCVALL,socket.RCVALL_ON);
var gen=function(){var __accu0__=[];for(var i=0;i<10;i++)__accu0__.append(i);return py_iter(__accu0__)}();
self.user.username;
eval(str,os.__dict__);
method(...args,__kwargtrans__(kwargs));
dict(zip(columnNames,args));
key.set_contents_from_filename(object_name);
var screen_width=root.winfo_screenwidth();
suite.addTest(suitefn());
y+np.abs(y.min());
self.py_name;
today.year-born.year;
pprint.pprint(d);
print(list(merge(tup)));
mix_arrays(A,B);
Concate[A[i]]+=B[i];
var pts=[tuple([1,1]),tuple([1,10]),tuple([10,10]),tuple([10,1])];
var l=list(range(1,100,4))+list(range(2,100,4));
value.append(tuple([node_key,node_value]));
var body=models.TextField();
func;
export var signchange=(np.roll(asign,1)-asign!=0).astype(int);
cache.py_get(self.COUNTER_CACHE_KEY);
py_typeof(py_name);
self._pixels.append(tuple([x,y]));
var B=np.array([2,4,6,8]);
myBoxLayout.addWidget(self.listWidgetB);
img.__setitem__([tuple([0,null,1]),tuple([0,null,1]),0],numpy.ones([5,5])*64/255);
(array.__getslice__(0,-1,1)*array.__getslice__(1,null,1)<0).sum();
print(username,password);
var l=s.py_split();
print(self.left.PreOrder());
cache[key];
var __left0__=socket.accept();var conn=__left0__[0];var addr=__left0__[1];
plt.scatter(xAsInts,y,__kwargtrans__({color:color}));
export var xt=DataFrameImputer().fit_transform(X);
var a=np.sqrt(d);
var earth=6E24;
main(sys.argv);

word.Quit();
file.write(pickle.dumps(df));
print(i);
var soup=bs4.BeautifulSoup(f);
self.assertEqual(self.flushLoggedErrors(ValueError),1);
export var cur1=conn.cursor();
out.start();
mock_last_transaction.assert_called_once_with();
cpick.set_array([]);
g1.intersects(poly.ix[0]);
var frame=inspect.currentframe();
print(tuple([i,h,j]));
HTMLParser.HTMLParser.__init__(self);
result[d[0]][d[1]]+=1;
self.x2+=self.speed*math.cos(self.bearing);
sleep(1.5);
print(response.read());
var p=subprocess.Popen(command,__kwargtrans__({stderr:subprocess.PIPE}));
main();
1==1&2==2;
main();
var d=dict(list(l.py_items()));
self.root=Tk();
self.setLayout(layout);
print(sentence_dict);
driver.py_get(self.login_page);
scrollby.grid(__kwargtrans__({row:7,column:5,rowspan:2,columnspan:1,sticky:N+S+E}));
phrase.upper();
var tagger=nltk.tag.UnigramTagger(__kwargtrans__({model:model,backoff:default_tagger}));
ax.set_xticklabels(xlabels,__kwargtrans__({rotation:20}));
f(...args,__kwargtrans__(kwargs));
c1.my_numpies.append(mn2);
var df=df.reset_index();
numpy.array(strings);
p.stdout.close();
var writer=csv.writer(outcsv);
var s=gtk.gdk.Pixbuf(gtk.gdk.COLORSPACE_RGB,false,8,w,h);
var message=cipher.decrypt(ciphertext);
my_file.write(b);
db.session.commit();
var id=Column(Integer,__kwargtrans__({primary_key:true}));
list(function(){var __accu0__=[];for(var t of list(d1.py_items()))if(t[1]==max(d1.py_values()))__accu0__.append(t);return __accu0__}())[0][0];
image.set_at(tuple([x,y]),tuple([255,255,255,0]));
var d=np.ones(tuple([100]));
var y=np.random.normal(0,1,num).cumsum();
PyQt4.QtCore.QPoint(90,6);
var num=num/2;
pd.DatetimeIndex(df.date).normalize();
var __except0__=cherrypy.HTTPRedirect(redirect_url);__except0__.__cause__=null;throw __except0__;
gtk.CellRendererPixbuf.__init__(self);
a.remove(5);
var queryset=MyModel.objects.all();
outbuff.append(line);
exns.append(py_name);
var ax=plt.subplot(111);
export var tocm=time.clock();
var df=df.copy();
print(something);
sys.stdin=sys.__stdin__;
mahotas.features.haralick(img).mean(0);
a.__setslice__(0,null,null,a.__getslice__(0,null,1).__iadd__(da));
ax.set_xlim([np.min(X),np.max(X)]);
pd.isnull(df);
conn.login(username,password);
print(df);
json.dumps(json_d);
var __left0__=im.size;var x=__left0__[0];var y=__left0__[1];
var sock=socket.socket(socket.AF_INET,socket.SOCK_STREAM);
print(tuple([key,value]));
export var alen=len(data);
ser.open();
a.sum();
var new_list=[];
export var all_sessions=Session.objects.filter(__kwargtrans__({expire_date__gte:datetime.datetime.now()}));
export var xfmt=ticker.FuncFormatter(function __lambda__(x,pos){return label_map[int(x)]});
print(eval(t));
count+=len(chunk);
Py_Initialize();

(function(){var __accu0__=[];for(var s of t)__accu0__.append(capitalize_nested(s));return __accu0__})();
Response(response_data);
var labels=ax.get_xticklabels();
body.append(rv);
newlist2.append(s);
(function(){var __accu0__=[];for(var i=0;i<len(h);i++)__accu0__.append(_heappop_max(h));return __accu0__})();
var result=result.astype(np.float64);
y1[np.where(y1==input_array.shape[1])]=y0.max();
lclosure;
fb.__setslice__(0,null,null,0);
44718;
export var auth_handler=urllib.request.HTTPBasicAuthHandler();
fig.show();
someDictionary[zipped[0]]=zipped[1];
export var clone_img=copy.copy(original_img);
plt.show();
self.delta+=1;
imshow(img_result);
var indata=f.read();
max(mul(...heapq.nsmallest(2,l)),mul(...heapq.nlargest(2,l)));
write_line(of,n,[.1,.1,.1,.1]);
var m=df.Col1.str.len().max();
var col=get_column_letter(col);
union(jName,kName);
var path=os.path.normpath(path);
export var clipboard=gtk.clipboard_get();
NULL;
export var winlist=[];
aw1.show();
rdd.take(5);
1==true;
np.exp(rebased_q-np.logaddexp(-max_q,np.logaddexp.reduce(rebased_q)));
var reader=java.io.BufferedReader(java.io.InputStreamReader(stream));
var cur=db().cursor();
export var yourDate=parser.parse(yourString);
data[k].append(i[1]);
(function(){var __accu0__=[];for(var n of sorted(zip(sorted(B),order),__kwargtrans__({key:itemgetter(1)})))__accu0__.append(n[0]);return __accu0__})();
M[numpy.where(M==0)]=1E3;
getcontext();
var __left0__=zip(...compounded_iter);export var iter1=__left0__[0];export var iter2=__left0__[1];
test();
var sorted_list=list(myDic.py_keys());
rcsplit(np.array(i));
figure();
l.set_option(ldap.OPT_X_TLS,ldap.OPT_X_TLS_DEMAND);
df;
self.setLayout(layout);
d[x].append(i);
bucket.delete_keys(delete_key_list);
var lines=f.readlines();
var user=int(user);
main();
json.dumps(namedtuple_asdict(a1));
pprint(foo(10,__kwargtrans__({depth:2})));
sys._getframe(back+1).f_code.co_name;
export var max_sub=max(l,__kwargtrans__({key:function __lambda__(x){return x[1]}}));
func;
var y=vfunc(x);
var indices=function(){var __accu0__=[];for(var [i,x]of enumerate(ar))if(re.match(pattern,x))__accu0__.append(i);return __accu0__}();
var ax=fig.add_subplot(111);
true;
result.extend(itertools.combinations(x,len));
export var percent=function(){var __accu0__=[];for(var [key,value]of list(c.py_items()))__accu0__.append([key,value/total]);return dict(__accu0__)}();
self.panel.SetFocus();
out.append(np.median(y[mask]));
np.unique(salesdata.Outlet_Size.dropna().py_values);
mdata;
var response=urllib.request.urlopen(request);
tuple([new set([7,8,9,10])]);
combinations.append(x);
httpd.serve_forever();
var reader=csv.DictReader(f);
plt.subplot(222);
t[v]=min(t[2*v],t[2*v+1]);
data[i].some_key;
print(df);
var y=np.linspace(0,2*np.pi,ny);
logger.setLevel(logging.INFO);
var e=int(e_str,16);
export var xdiff=function(){var __accu0__=[];for(var n=1;n<len(x);n++)__accu0__.append(x[n]-x[n-1]);return __accu0__}();
plt.plot(list(range(10)));
var value=models.CharField(__kwargtrans__({max_length:100}));
var console_handler=logging.StreamHandler();
var serializer_class=UserSerializer;
self.x+other.x;
heapq.heappush(heap,tuple([-p1,x-1,y]));
var this_year=str(this_year);
var soup=bs(root);
deletesys.modules[k];
self.f.write(x);
export var convert=function __lambda__(text){return text.isdigit()?int(text):text};
args.func(args);
self.label.setMinimumSize(QtCore.QSize(450,40));
print(df.iloc.__getitem__([tuple([0,null,1]),rng]));
var args=parser.parse_args();
print(perfect_numbers(__kwargtrans__({n:5})));
do_something_with(line);
fnan<pinf;
current_node.valid_subword;
copylist.append(singleobj);
print(i);
us1/us2;
var linspace_y=np.linspace(y_range[i],y_range[i],100);
var screen=curses.initscr();
alllists.append(addlist);
var w=w/2;
new_tagged_words;
setattr(Cls,key,value);
packet1.show();
__future__.with_statement;
export var y_coords=new_array.__getitem__([tuple([0,null,1]),1]);
os.chdir(destination);
export var filtered_array=np.copy(array);
var object_id=models.PositiveIntegerField();
timeit(easydiff1,easydiff2,1E4);
export var resizes=img.resize(resolution,Image.ANTIALIAS);
var __left0__=np.polyfit(x,y,1);var m=__left0__[0];var b=__left0__[1];
var p=Presence();
tuple([obj1[0],max(obj1[1],obj2[1]),min(obj1[2],obj2[2])]);
export var strtime=str(datetime.now());
print(item.key,item.doc_count);
+__all__.py_update(yak);
var df=pd.read_csv(tempfile);

var __left0__=imp.find_module(py_name);var file=__left0__[0];var pathname=__left0__[1];var description=__left0__[2];
p.haslayer(IP);
__init__.py;
stdscr.getkey();
print(x[i],y[i+1],x[i+1],y[i]);
self.counter=0;
results.append(task.py_get());
list(self._odict.py_keys());
export var file_bytes=numpy.asarray(bytearray(img_stream.read()),__kwargtrans__({dtype:numpy.uint8}));
var x=numpy.ones(5);
self.growChunk();
var p=ctypes.cast(void_p,ctypes.POINTER(ctypes.c_char));
print(value);
self.n=n;
s.cookies;
export var model_results=pickle.load(f);
print(pool.map(f,list(range(10))));
[0,.2,.4,.4,0];
var p=im.getpixel(tuple([x,y]));
glfw.SetTime(0);
DataDocumenter.add_directive_header=add_directive_header;
var result=re.sub(p,subst,test_str);
interpreter.process_page(page);
var angle=NumericProperty();
py_values.append(value);
var message=messages.GetLast();
x.stdin.close();
np.arange(1,stop,step);
self.write(json_encode(obj));
export var csvwriter=csv.writer(csvfile);
result;
merged.append(tuple([k,sum(function(){var __accu0__=[];for(var e of g)__accu0__.append(e[1]);return py_iter(__accu0__)}())]));
export var m_recomposed=x+x.transpose()-np.diag(np.diag(x));
var results=mp.Queue();
browser.save_screenshot(img);
canvas.setPageSize(tuple([lWidth,lHeight]));
plt.semilogx(f,mag);
self[key];
Z.data*=Y.repeat(np.diff(Z.indptr));
set(list1)|set(compSet);
lock.release();
host_data.append(host.serialize());

export var p_classification=my_svc.predict(x_test);
new_list.append(new set([expression]));
app.exec_();
frec(word.__getslice__(1,null,1),py_values+[word[0]]);
os.waitpid(pid,0);
x-x.mean(axis)[ind];
Time.place(__kwargtrans__({x:0,y:0}));
var y=np.array([0,0,0,1,0,1,1,0,0,0,0,1]);
self.label.lift(self.frame);
len(wordorder);
dd[item].append(idx);
User.__unicode__=User.get_full_name;
self.canvas=Canvas(self.tk,__kwargtrans__({width:500,height:500}));
point_list.py_sort(__kwargtrans__({key:function __lambda__(point){return point[axis]}}));
var b=2*N-1;
funcs.append(function __lambda__(x,i){if(typeof i=="undefined"||i!=null&&i.hasOwnProperty("__kwargtrans__"))var i=i;return f(i,x)});
list(UndefinedSilently().py_items());
var __left0__=tuple([[],[]]);export var ebks=__left0__[0];export var ks=__left0__[1];
menu.show_all();
delta.total_seconds();
int(round(math.log(v,2),0));
print(freq_distribution.most_common(10));
iterator.__iter__();
var result=proc.stdout.read();
df[0].count();
a.sum(__kwargtrans__({axis:0}));
var register=template.Library();

result[nJ]=fun2(zeta[nJ]);
(function(){var __accu0__=[];for(var x of zip(...lis))__accu0__.append(list(x));return __accu0__})();
var s=plt.subplot(1,1,1);
canvas.pack();
PyBUF_FULL_RO;
var id=Column(Integer,__kwargtrans__({primary_key:true}));
print(cmap(.5));
print(dftot.fillna(filldf));
var fig=plt.figure();
export var pd_df=pandas2ri.ri2py_dataframe(rdf);
export var fb=np.zeros(tuple([480,640]),__kwargtrans__({dtype:np.uint8}));
var res=list(message.DESCRIPTOR.fields.py_keys());
df[2].py_replace(4,17,__kwargtrans__({inplace:true}));
plt.subplot(122,__kwargtrans__({polar:true}));
var p=mp.Pool(__kwargtrans__({processes:2}));
var x=np.random.rand(50);
do_somethin(cell);
df;
sum(function(){var __accu0__=[];for(var v of args)if(args.count(v)==1)__accu0__.append(v);return py_iter(__accu0__)}());
var slug=models.SlugField(__kwargtrans__({max_length:255,unique:true}));
print(result);
nx.append(x[-1]);
mask.dtype;
conn.end_request();
device.close();
c.execute(query);
termios.tcsetattr(fd,termios.TCSANOW,py_new);
var is_staff=true;
x.set_visible(false);
export var dstr=date.tolist();
f.close();
reallocate();
np.tensordot(a,a,tuple([1,1]));
print(self.__dict__);
list(islice(preresult,100)).__getslice__(-10,null,1);
var result=pool.apply_async(worker,__kwargtrans__({args:tuple([])}));
divmod(elapsedTime.total_seconds(),60);
code.interact(__kwargtrans__({local:locals()}));
print(uniqify(2));
mylist.append(x);
var x=dict();
out.writelines(lines);
self.session.query(entity_type);
main();
B[X]=A;
a[1];
axes.set_ylim([0,70]);
var a=b?1:a;
var result=self._client.gremlin(script,params).one();
main.show();
Rect(p1.x,p1.y,p2.x,p2.y);
offset+=font.getsize(line)[1];
var message=headers+body;

f.seek(0);
ws.set_panes_frozen(true);
json.dumps(json.load(str_w_quotes));
bar();
datetime.datetime.fromtimestamp(float(time_in_secs));
print(diff.total_seconds());
var skipsdist=true;

urllib.request.install_opener(opener);
print(line);
deleteself._this;
x.do_foo();
os.makedirs(path);
Matrix[0][0]=1;
M.ix.__getitem__([0,0]);
var identity=np.identity(A.shape[2],__kwargtrans__({dtype:A.dtype}));
deletetrees[i];

endforeach();
export var module_dir=os.path.dirname("./P2JSnippets.py");
var img=MIMEImage(fp.read());
list(product(...function(){var __accu0__=[];for(var [py_name,grp]of age)__accu0__.append(permutations(grp.index));return __accu0__}()));
var b=np.array(function(){var __accu0__=[];for(var w of a)__accu0__.append(list(w.center(wid)));return __accu0__}());
export var lhash=hash(litem);
logging.basicConfig(__kwargtrans__({filename:LOG_FILENAME,level:logging.DEBUG}));
export var lowerList=function(){var __accu0__=[];for(var item of mylist)__accu0__.append(item.lower());return __accu0__}();

var result=[];
export var x_df=df.iloc[map(int,ii)];
print(np.allclose(Z1,Z2));
plt.minorticks_off();
str.__getslice__(0,index,1)+str.__getslice__(endIndex,null,1);
aCash.sum()==(aCash&bNull).sum();
os.waitpid(p.pid,0);
lock.acquire();
yaml.load(stream,OrderedLoader);
self._queue.cancel_join_thread();
plt.cla();
json.dump(d,o);
(function(){var __accu0__=[];for(var x of texts_list)__accu0__.append(term_appearance.py_update(x));return __accu0__})();
dict.__getitem__(self,item);
var newarray=[0]*n;
export var curtree=curtree.py_setdefault(c,dict({}));
hash(tuple(sorted(self.__dict__.py_items())));
socket.send(empty,zmq.SNDMORE);
violin_plot(ax,data,pos,__kwargtrans__({bp:1}));
export var culled_list=function(){var __accu0__=[];for(var item of unculledlist)if(__in__(__mod__(item,10),tuple([0,2,4])))__accu0__.append(item);return __accu0__}();
Tr;
plt.subplot(121);
map(function __lambda__(x){return x.start()},threads);
m[i]=false;
var W=tf.Variable(tf.zeros([784,10]));
var x=np.zeros(tuple([depth,size,size]));
print(function(){var __accu0__=[];for(var p of file_nodes)__accu0__.append(p.spelling);return __accu0__}());
myDict[newKey]=[value];
str(delim.join(result));
self.Bind(wx.EVT_PAINT,self.OnPaint);
print(x);
print(df);
print(b.__getitem__([tuple([0,null,1]),tuple([0,null,1]),1]));
html.fromstring(broken_html);
export var first_window=sorted(function(){var __accu0__=[];for(var _=0;_<window_size;_++)__accu0__.append(py_next(reader));return py_iter(__accu0__)}());
print(item);
array+=[myNumber];
myDict[temp]=myFunctionThatReturnsData();
self.Meta.model(__kwargtrans__(validated_data));
i+=1;
p1.wait();
print(item);
sys.path.append(dir_of_interest);
export var draft_list=Player.objects.all();
spl[-1].extend(y);
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
var df2=df1.reset_index(__kwargtrans__({drop:true}));
abs(x-y)<epsilon;
self.session_store.get_session();
np.allclose(Z1,Z2);
export var arr1=np.arange(8).reshape(2,4);
threading.Thread.__init__(self);
__mod__(8881,2);
form.show();
var py_values=list(d.py_values());
sys.stdout.write(buffer);
signal.signal(signal.SIGHUP,function __lambda__(signum,frame){return manager.stop()});
t.cancel();
elementwiseProd(a,b);
print(s);
stack.append([element]);
var line=f.readline();
b.start();
bitarray.bitarray(l);
zip(map(tuple,idr),map(tuple,idc),out);
tasks[key]();
df.index;
var n1=np.random.random(N);
export var tester=app.test_client();
jsonpickle.encode(myObject,__kwargtrans__({unpicklable:false}));
min(x,y);
var z=delrc(i);
dict(union(list_dictionaries));
var fig=plt.figure();
(function(){var __accu0__=[];for(var i=0;i<N-1;i++)__accu0__.append(ind_sorted.__getslice__(x[i],x[i+1],1));return __accu0__})();
t2.append(t[0]+t[-1]);
show_times();
export var instance_name=models.TextField(__kwargtrans__({max_length:20}));

var df=pd.read_csv(f);
list(fields_from_list(py_keys,py_values));
var c=np.hstack(tuple([a_t,b_t])).__getitem__([tuple([0,null,1]),np.argsort(np.hstack(tuple([a,b])))]);
new_modules;
datetime.strptime(date,date_format);
result*result;
var x=array([[1],[1]]);
var im=axs[0].imshow(Z,__kwargtrans__({cmap:plt.cm.Greys_r}));
export var fdata=ctypes.cast(vdata,POINTER(float));
React.createClass.toString();
os.mkdir(dir);
A.subtract(B,__kwargtrans__({fill_value:0}));
np.array(NumNonZeroElementsByColumn)[0];
var req=urllib.request.Request(url);
self._list.__setitem__(key,item);
t.seek(0);
self.setSelectionMode(QtGui.QAbstractItemView.ExtendedSelection);
tk.Canvas.itemconfigure(self,...args,__kwargtrans__(kwargs));
np.seterr(__kwargtrans__(eset));
template_rendered.connect(add_template_name_to_context);
var result=func(...args,__kwargtrans__(kw));
var data=data.__getslice__(2,null,1);
var mydict=args.my_dict;
plt.imshow(data);
x==2;
x[0]=0;
var res=NP.hstack(tuple([my_data,new_col]));
export var sli=function(){var __accu0__=[];for(var _=0;_<n;_++)__accu0__.append(py_next(diff));return __accu0__}();
export var input_thread=threading.Thread(__kwargtrans__({target:add_input,args:tuple([input_queue])}));
var result=[];
concurrent.futures.wait(fs);

var x=o;
ctx.select_font_face(font,...args,__kwargtrans__(kwargs));
self.dictionary[key][1];
arr[j][i]=round(arr[j][i],10);
var img=cv2.imdecode(array,1);
print(tmr.timeit(__kwargtrans__({number:1})));
ax.add_artist(anchored_text);
k*math.exp(s*(x-mu)*(x-mu));
var py_name=models.CharField(__kwargtrans__({max_length:100}));
parser.feed(text);
var G=nx.Graph();
zlib.decompress(part);
pipeA.send(10);
export var HOST=socket.gethostbyname(socket.gethostname());
renderer.props.wrap_mode=gtk.WRAP_WORD;
self.src[i].append(self.src[i+1].py_pop(0));
Z[test.__getitem__([tuple([0,null,1]),tuple([0,2,1])]).T.tolist()];
var q=Queue();
var lines=f.readlines();
a.__setslice__(0,null,null,function(){var __accu0__=[];for(var x of a)if(x<=4)__accu0__.append(x);return __accu0__}());
var combined=dict(union(dict_list));

print(key,value);
Foo.objects.all().delete();
(arr*cond).argmax(1);
angles.append(angle);
sys.stdout=buffer;
ax.plot_wireframe(xx,yy,z);
var fig=plt.figure();
F();
writer.writerow(row);
py_next(function(){var __accu0__=[];for(var [i,[el1,el2]]of enumerate(zip(l1,l2)))if(el1!=el2)__accu0__.append(i);return py_iter(__accu0__)}());
time.sleep(60*alarm1);
c.append(a[0]);
var r=requests.head(url);
int(round(b/5)*5);
tuple([[0,0,1,0,1,0]]);
frame.rowconfigure(1,__kwargtrans__({weight:1}));
self.patcher1=patch(path);
self.population[bisect.bisect(self.cumweights,i)];
var soup=BeautifulSoup(page);
var __left0__=unpack_nfirst(seq,1);var first=__left0__[0];var rest=__left0__[1];
perform_other_actions();
AHIJ;
DGIJ;
AZ;
BC;

plt.vlines(x_median,0,y_median);
var driver=webdriver.Firefox(__kwargtrans__({capabilities:capabilities}));
olleh;
stack[-2].append(stack[-1]);
var p=bokeh.plotting.figure(__kwargtrans__({x_range:[0,10],y_range:[0,10]}));
atexit.register(endlog);
(function(){var __accu0__=[];for(var s of strings)if(len(s)>2)__accu0__.append(replacer(s));return __accu0__})();
json.dumps(value,__kwargtrans__({cls:DjangoJSONEncoder}));
tuple([l[a],l[b]]);
test();
self.circle1.grid();
var pool=Pool(5);
df;
pixels.append(img[x+opx][y+opy]);
array([[0,1,2],[0,1,2],[0,1,2],[0,1,2]]);
deletedf[col];
Node.writexml(f);
print(directory_list);
var leg=ax.get_legend();
self.verticalLayout=QtGui.QVBoxLayout(self);
export var od1=OrderedDict(sorted(list(d1.py_items()),__kwargtrans__({key:function __lambda__(t){return t[1]}})));
export var resized_file=orig_image.resize(cur_size,Image.ANTIALIAS);
item_dict[sample[1]];
print(line);
xml.write(escape(data));
names[nickname][weighted_choice_sub(function(){var __accu0__=[];for(var x of names[nickname])__accu0__.append(x[1]);return __accu0__}())][0];
x+=1;
self._applecount=0;
plt.show();
self.br.addheaders=self.old_headers;
getattr(instance,self.py_name);
gdi.GetPixel(h,1024,767);
numpy.mean(arr,__kwargtrans__({axis:0}));
var wb=Workbook();
(top_matrix.T*top_matrix).det().factor();
qproc.join();
var subset=table[np.array(function(){var __accu0__=[];for(var i of table.IDs)__accu0__.append(__in__(i,id_list));return __accu0__}())];
var ax1=plt.subplot(gs.__getitem__([0,tuple([0,null,1])]));
print(Crypt.find_crypts(706));
fig.tight_layout();
var df=pd.concat([df1,df2]);

combinations.append(accum);
var ax=plt.gca();
var new_list=list(itertools.chain(range(1,6),range(15,20)));
var arr=np.fromiter(chain.from_iterable(combinations(x,2)),__kwargtrans__({dtype:x.dtype}));
self.box.pack_start(self.canvas.draw_area,true,true,0);
file.seek(here,os.SEEK_SET);
var image=image.convert_alpha();
job[1].kill();
drawCirc(ax,1,1,1,0,250);
self.monad=monad;
widget.deleteLater();
toggle();
np.logical_and(x>-2,x<2);
var line=m.readline();
print(int(floor(f2)));
setattr(Foo,py_name,make_binding(py_name));
var x=cos(radians(i));
r.raise_for_status();
var t=threading.Thread(__kwargtrans__({target:drain_pipe}));
(function(){var __accu0__=[];for(var word of L)__accu0__.append(shuffle_word(word));return __accu0__})();
app.run(__kwargtrans__({port:5E3}));
export var wmname=window.get_wm_name();
codecs.register(cp65001);
var s=spline1dbuildakima(x,y);
true;
seen.add(k);
var a=function(){var __accu0__=[];for(var row of reader)__accu0__.append(dict(zip(header,map(int,row))));return __accu0__}();
func(...fargs,__kwargtrans__(fkwargs));
foundwords;
var df=pd.concat([df,py_new],__kwargtrans__({axis:1}));
print(py_typeof(p));
SomeClass.some_class_method();
var ii=np.array([1,1,0]);
var results=json.load(response);

conn.commit();
sys.exit();
print(tostring(fromstring(data,__kwargtrans__({parser:parser}))));
self.d[key]=value;
tuple([[0,0,1,0,0]]);
stack[-1].append(element);
json_util.dumps(MyDoc._collection_obj.find(MyDoc.objects()._query));
result.append(i);
var words=s.py_split();
self._matches(found.string,self.text);
ax.set_ylim(__kwargtrans__({ymin:0}));
var l=func(X,Y,Z);
export var schema_doc=etree.parse(schema_file);
stdin.flush();
var parser=xml.sax.make_parser();
a.shape;
var msg=socket.recv();
(function(){var __accu0__=[];for(var x of a)__accu0__.append(val(x));return __accu0__})();
var request=urllib.request.Request(url);
var __left0__=tuple([x[mask].min(),x[mask].max()]);var xmin=__left0__[0];var xmax=__left0__[1];
var X_train=np.array(descs_train);
print(bar);
var diff=function(){var __accu0__=[];for(var i=0;i<len(a)-1;i++)__accu0__.append(a[i]-a[i+1]);return __accu0__}();
dic.py_pop(k);
audio_thread.start();
var labels=function(){var __accu0__=[];for(var item of ax.get_xticklabels())__accu0__.append(item.get_text());return __accu0__}();
var fig=plt.figure();
b.__getitem__([5,6,7,8]);
newY[x]+=1;
var data=function(){var __accu0__=[];for(var x=0;x<10;x++)__accu0__.append(random_data());return __accu0__}();
print(list);
parse_qs(urlparse(url).query);
final_df;
var y_true=[0,0,1,1,2,0,1];
var __left0__=tuple([int(sstr[0]),sstr[1]]);var base=__left0__[0];var str=__left0__[1];
setattr(cls,methodname,newmethod);
var a_order=numpy.argsort(a);
var x0=x_indices.astype(np.integer);
var a=np.in1d(np.arange(m),np.random.randint(0,m,m));
print(i);
p.wait();
self.statusitem.setMenu_(self.menu);
print(first_column,third_column);
var app=App();
print(q.all());
var py_name=models.CharField(__kwargtrans__({max_length:16}));
var A=[[1,1,0,0],[0,1,0,1],[1,0,1,0],[0,0,1,-1]];
var foo=Bar();
print(df2);
export var hb=plt.hexbin(x,y);
log.start();
df2[col]=c;
var map=mmap.mmap(f.fileno(),0);
self.x;
print(tuple([freqs.min(),freqs.max()]));
var session=requests.session();
var app=wx.PySimpleApp();
var n=np.arange(10,1E3,10);
foo(...args);
var __left0__=np.meshgrid(xi,yi);var xi=__left0__[0];var yi=__left0__[1];
var G=nx.DiGraph();
t.objects.all();
ret.py_sort(__kwargtrans__({axis:0}));
export var word1_synonyms=wordnet.synsets(word1);
oldmodule.__dict__.py_update(newmodule.__dict__);
self.cntrlPanel.SetSizer(sizer);

var bools=function(){var __accu0__=[];for(var r of results)__accu0__.append(success_condition(r));return __accu0__}();
self.appname=appname;
d[i[0]]=i[1];
random.seed(seed);
fnew;
export var raw_input=new_raw_input;
py_items[item].append(i);
xyB.__setitem__([tuple([0,null,1]),1],xyB.__getitem__([tuple([0,null,1]),1])*(widthB/(xyB.__getitem__([tuple([0,null,1]),1]).max()-xyB.__getitem__([tuple([0,null,1]),1]).min())));
self.toolbar.Bind(wx.EVT_MENU,self.OnTool,__kwargtrans__({id:tool_id}));
var t=time.time();
ax.yaxis.grid();
df.head(5)[df.columns.__getslice__(0,4,1)];
sc.close();
td.dt.days;
axes[0].plot(x,i*Math.pow(x-10,2));
print(image.shape);
(function(){var __accu0__=[];for(var row of cursor.fetchall())__accu0__.append(dict(zip(function(){var __accu1__=[];for(var col of desc)__accu1__.append(col[0]);return __accu1__}(),row)));return __accu0__})();
self[key].extend(value);
var fig=plt.figure();
var p=subprocess.Popen(args,__kwargtrans__({startupinfo:startupinfo}));
var x=__mod__(some_text,tuple(s));
buf.seek(0);
aapl_50ma.plot(__kwargtrans__({legend:true}));
self.nested_whatever_id=nested_object.id;
var fig=plt.figure();
response.render();
real_decorator;
dataframe.plot(__kwargtrans__({ax:f.gca()}));
df.head(1);
var d=collections.defaultdict(list);
StandardPyGTKSpec();
var rows=cursor.fetchall();
dict[firstName]=1;
tuple([unique[maxpos],counts[maxpos]]);
export var inverted_dict=collections.defaultdict(set);
print(string.Template.pattern.pattern);
list(compress(fruits,function(){var __accu0__=[];for(var f of fruits)__accu0__.append(__in__(f,s));return py_iter(__accu0__)}()));
root.deiconify();
sum(islice(count(1,__kwargtrans__({step:4})),100));
var curdir=os.getcwd();
f.write(line);
var q=q.prefetch(Supplier);
var dot_product=tf.reduce_sum(tf.multiply(x,y));
var ar=cur.fetchall();
print(self.data);
layout.addWidget(self.runButton);
asyncore.loop(__kwargtrans__({timeout:5}));
export var TEMPLATE_DEBUG=DEBUG;
export var Availability=2;

Console.ReadKey();
c.__setitem__([tuple([0,a.shape[0],1]),tuple([0,a.shape[1],1])],c.__getitem__([tuple([0,a.shape[0],1]),tuple([0,a.shape[1],1])])-a);
var __left0__=plt.subplots(2,2,__kwargtrans__({sharex:true,sharey:true}));var fig=__left0__[0];export var axn=__left0__[1];
df.combine_first(df.T);
self.addItems(self.list_one);
self.l.pack();
q.py_get();
export var np_image=np.asarray(image).flatten();
ctx.set_source_rgb(0,0,0);
var mask=function(){var __accu0__=[];for(var tup of zip(a,b,c))__accu0__.append(any(tup));return __accu0__}();
var num_int=int(num_int/2);
var dfa=df.ix.__getitem__([tuple([0,null,1]),[1,0]]).copy();
b.T;
plt.plot(x1,y1);
pic.seek(0);
time.time()-os.stat(pathname)[stat.ST_MTIME];
hn.setLevel(logging.DEBUG);
mark_safe(simplejson.dumps(object));
var df=df.reindex(__kwargtrans__({columns:cols}));
export var walnut=Image.open(pattern);
var pixbuf=gtk.gdk.Pixbuf(gtk.gdk.COLORSPACE_RGB,false,8,1,1);
s.diff();
dictionary[len(i)]=1;
var __left0__=np.meshgrid(xi,yi);var xi=__left0__[0];var yi=__left0__[1];
pygame.init();
self.cur2.executemany(query,self.rows);
np.random.seed(0);
print(newlists);
var b=a[new_names];
export var max_col=old_sheet.get_highest_column();
plt.plot(time.__getslice__(0,-1,1),scipy.integrate.cumtrapz(signal,__kwargtrans__({x:time})));
var ind=r*cols+c;
QWidget.__init__(self,parent);
var data=np.random.random(tuple([100,100]));
abs(a-b);
fh.writelines(output);
print(os.__file__);
array[0]=1;
alert(msg.data);
m.contourf(xi,yi,zi);
outputfile.close();
var tree=doc.getroottree();
connection.test.foo.find_one();
var G=nx.MultiGraph();
argparse.ArgumentParser.__init__(self,...args,__kwargtrans__(kwargs));
g[key]=getattr(file_one,key);
r.status_code;
var args=parser.parse_args();
sorted(chain(...allrows)).__getslice__(-20,null,1);
self.web_view.page().setViewportSize(frame.contentsSize());
session.quit();
var idx=np.array([0,1,2]);
var extent=[xbnds[0],xbnds[1],ybnds[0],ybnds[1]];
export var text_soup=BeautifulSoup(urlopen(url).read());
HttpResponseNotModified();
time.sleep(.2);
[1,4,9];
ax.set_xlim([-4,4]);
extractDefines(TEST2);
os.chdir(working_dir);
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
var data=json.load(jsonFile);
cj.set_cookie(ck);
cursor.execute(query.format(__kwargtrans__({station_id:id})));
M.__setitem__([tuple([0,null,1]),i],M.__getitem__([tuple([0,null,1]),i])*-1);
do_stuff();
[5,199];
writer.writerow(py_values);
plt.plot(x,y,__kwargtrans__({zorder:1}));
session_crumbs.py_pop(0);
log.addHandler(handler);
sys.exit(app.exec_());
var G=function(){var __accu0__=[];for(var [_,g]of groupby(A,__kwargtrans__({key:scientific_notation})))__accu0__.append(list(g));return __accu0__}();
var EMAIL_USE_TLS=true;
export var libpath=matplotlib.__path__[0];
var profile=webdriver.FirefoxProfile();
cat/proc/12992/status;
SimpleHTTPServer.SimpleHTTPRequestHandler.do_GET(self);
self.data.extend(subpickle.data);
x[np.ix_([0],[0,1,2],[0,2])];
ET.tostring(node);
t.start();
ax.xaxis_date();
var fig=plt.figure();
var d=dict({});
print(instance.Field2);
print(year+1);
var top=Tk();
plt.show();
X.append(x);
os.remove(self.local_file);
foo.append(df.columns[df.ix[i]==1]);
dict.__setitem__(self,key,val);
var result=g.delay();
print(py_typeof(ax.get_xminorticklabels()[0]));
Vector(function(){var __accu0__=[];for(var [s,o]of zip(self.data,other.data))__accu0__.append(s+o);return __accu0__}());
y.append(words[2]);
parser.parse(s);
print(mystr.__getslice__(mystr.find(char1)+1,mystr.find(char2),1));
s.seek(0);
export var numdf=numdf[num_df[data_columns].notnull().all(__kwargtrans__({axis:1}))];
print(list(itertools.product(input1,input2)));
pylab.xticks(function(){var __accu0__=[];for(var i=0;i<12;i++)__accu0__.append(i/10);return __accu0__}());
print(binascii.hexlify(os.urandom(16)));
ents.entitydefs[m.group().__getslice__(1,-1,1)];
export var axstop=plt.axes([.51,.05,.1,.075]);
results.append(function __lambda__(i,j){if(typeof i=="undefined"||i!=null&&i.hasOwnProperty("__kwargtrans__"))var i=i;if(typeof j=="undefined"||j!=null&&j.hasOwnProperty("__kwargtrans__"))var j=j;return nodes[i].value()==nodes[j].value()});

var s=set(filelist);
a.show();
var c=pycurl.Curl();
export var vS=ser.readline();
var root=Tk();
b.append(a);
tuple([[2,4,5]]);
self.f.close();
a[0]+a[1]*.1;
var root=Tkinter.Tk();
var b=a-int(a);
export var cashflow=2*np.ones(6);
cls.__name__;
print(t.myStuffs.all());
var content=f.read();
print(x*x);
var request=urllib.request.Request(url);
var c=Variable(n,2);
tuple([self.x,self.y]);
var text=function(){var __accu0__=[];for(var line of f)__accu0__.append(ast.literal_eval(line));return __accu0__}();
export var df_concat=pd.concat(tuple([df1,df2]));
var arr=np.ones(tuple([10,10]))*10;
npi.indices(unique,A);
var A=numpy.random.randint(1,6,__kwargtrans__({size:tuple([1E3,12])}));
self.assertItemsEqual(a,list(range(0,4)));
var dist=math.sqrt(dx*dx+dy*dy);
pivot.fillna(0,__kwargtrans__({inplace:true}));
cj.set_cookie(ck);
var mask=np.kron(np.eye(len(L)),np.ones(shp))==1;
var n=len(a);
var d=dict(zip(py_keys,vals));
files.append(i);

ax1.plot(dates,list(range(10)));
curs.execute(sql);
var app=QApplication(sys.argv);
self.extend(self._stringio.getvalue().splitlines());
true;
df;
var output_rs=tf.transpose(output,[1,0,2]);
platform.system();
run(command,__kwargtrans__({pty:false}));
export var sorted_city_pop=OrderedDict(sorted(cityPopulation.py_items()));
export var wsize=walnut.size;
export var MCAST_PORT=5007;
dataframe[cols];
print(match.group());
same.append(tuple([i,j,string_b[j]]));
var C=C.view(A.dtype).reshape(-1,ncols);
df;
processes.append(p);
print(make_hash([func.__code__,func.__dict__,func.__name__]));
write.writerow(i);
var result=[[t[0]]];
var __left0__=heapq.heappop(heap);var prod=__left0__[0];var x=__left0__[1];var y=__left0__[2];
var root=Tk();
print_node(root);
df.eq(0).dot(days_in_month);
nprint(polyroots(taylor(function __lambda__(x){return legendre(n,x)},0,n).__getslice__(0,null,-1)));
print(k,val);
line;
sys.exit();

app.mainloop();
help(assign);
export var body_data=json.loads(body_unicode);
var line=line.strip();
var a=np.hstack(tuple([a.__getitem__([tuple([0,null,1]),tuple([0,null,2])]),a.__getitem__([tuple([0,null,1]),tuple([1,null,2])])]));
var __left0__=tee(iterable);var a=__left0__[0];var b=__left0__[1];
yscroll.grid(__kwargtrans__({row:0,column:1,sticky:N+S}));
export var spec=createSpec();
var new_cols=df.columns.py_values;
triple(x)+square(x);
df;
export var bpa=np.asarray(bpa);
hash(str(self.py_name));
reactor.listenTCP(8080,factory);
0;
self.i=min(self.im.shape[2]-1,self.i+1);
var c=list(b);
f.seek(0);
btwo.on_clicked(two);
itertools.product(a,b);
s.starttls();
self.make_a_fake_request_to_myself();
false;
var line=line.rstrip();
data.append(row);
print(elementwise_product(list1,list2));
input_wave_file.close();
true;
self.sizer=wx.BoxSizer(wx.VERTICAL);
export var result_set=cursor.fetchall();
os.rmdir(dir);
xticks[i].set_visible(false);
self.tree.pack();
var draw=ImageDraw.Draw(img);
export var article=form.save(__kwargtrans__({commit:false}));
ids.append(map(function __lambda__(tup){return tup[0]},sorted(c,__kwargtrans__({key:function __lambda__(tup){return tup[1]}})).__getslice__(0,K,1)));
requests.__version__;
theother(item);
export var frame_data=wave_file.readframes(nb_frames);
var all_zeros=!a.any();
true;
genn(igap,igap-2);
process.stdout.close();
handler1.setLevel(logging.INFO);
Base.metadata.create_all(e);
response.render();
self.value=Value();
export var watermark=Image.open(watermark_path);
request.write(c.py_name);
var p=psutil.Process(pid);
var ws=wb.worksheets[0];
spec.drawComboBox();
regex.pattern;
var py_name=models.CharField(__kwargtrans__({max_length:50}));
self.buffer.append(py_next(self.py_iter));
export var nu=df[col].nunique();
rslt.drop(n,__kwargtrans__({axis:1,inplace:true}));

var fig=plt.figure();
export var random_line=f.readline();
var ret=int(s);
var process=Popen(command,__kwargtrans__({stdout:PIPE,stderr:PIPE}));
new_func;
obj.save();
var urls=[url5,url5,url10,url10,url10,url5,url5];
L.__getslice__(0,null,-1);
result_pic.seek(0);
var py_keys=set(l1).intersection(set(d1.py_keys()));
var draw=ImageDraw.Draw(im);
print(df.apply(function __lambda__(x){return __in__(x.A,x.B)},__kwargtrans__({axis:1})));
var a=np.array([1,0,0,1,0,0]);
print(i);
print(offset_map[key]);
var mail=email.message_from_string(email_body);
a.dtype;
var __left0__=cv2.findContours(res,cv2.RETR_LIST,cv2.CHAIN_APPROX_SIMPLE);var contour=__left0__[0];export var hier=__left0__[1];

print(itemgetter(...b)(a));
nx.draw(gr,__kwargtrans__({node_size:500,labels:mylabels,with_labels:true}));
var __left0__=np.meshgrid(x,y);var xx=__left0__[0];var yy=__left0__[1];
archive.close();
sizer.Add(stc2);
var M=scipy.sparse.diags([degs],[0])-A;
self.__c;
print(m.group(0));
export var rpath=path.abspath(path.join(path.dirname(fpath),rpath));
G.nodes();
foo();
np.allclose(C,out);
dataArray.reshape(enc[2]);
ax.margins(0,0);
key.make_public();
_location.gsm_location();
print(s.translate(translator));
self.panel=wx.Panel(self,wx.ID_ANY);
os.close(qq.fileno());
var d=collections.OrderedDict();
mf.columnconfigure(0,__kwargtrans__({weight:1}));
export var ssq0=Math.pow(yfit0-ydata,2).sum();
main();
textwrap.wrap(string,15);
export var notifier=pyinotify.Notifier(wm,eh);
__delitem__;
print(solve(5*Math.pow(x,2)+5*x+5));
var a=[1,2,4];
var lst=[a,d,b,c,e,f,g];
var line=f.readlines()[7];
array([[1,0,0],[0,1,0],[0,0,1]]);
l?min(player(l.__getslice__(0,-1,1)),player(l.__getslice__(0,-2,1)))+l[-1]:0;
export var C1=Cookie.SimpleCookie();
Infinity;
f(...args,__kwargtrans__(kwargs));
var f=float(s);
arr[0][1];
export var soln2=integrate.odeint(f,y2,t2,__kwargtrans__({mxstep:5E3}));
1;
(function(){var __accu0__=[];for(var p of range(length-1,-1,-1))__accu0__.append(i>>p&1);return __accu0__})();
var w=watcher.Watcher(dir,callback);
nonlinsolve([x*y-1,4*Math.pow(x,2)+Math.pow(y,2)-5],[x,y]);
btn.set_sensitive(false);
var driver=webdriver.Firefox(__kwargtrans__({capabilities:firefox_capabilities}));
var app=wx.App(false);
self.setIconSize(QtCore.QSize(124,124));
export var bettermodel=model.fit(betterdata);
console.log(i.toString(2));
urllib.request.urlopen(uri).read();
b/foo.py;
fileToSend.close();
var n=a.shape[0];
bool(strtobool(str(arg)));
ans[k1].append(dict([[k2,v2]]));
true;
time.sleep(10);
var x=pd.DataFrame(np.random.randn(10,5));
urllib.request.HTTPHandler.__init__(self,debuglevel);
output.append(list.__getslice__(indexes[-1],null,1));
var bus=dbus.SystemBus();
do_my_work();
export var saved_blob_string=gdata.gauth.token_to_blob(token);
print(thedict);
self.ax.grid(true);
var delta=dt.timedelta(__kwargtrans__({hours:12}));
export var zdd2=rdd2.zipWithIndex().map(function __lambda__(v_k){return tuple([v_k[1],v_k[0]])});
Py_INCREF(p_eigen_python_error);
var __left0__=np.meshgrid(x,y);var X=__left0__[0];var Y=__left0__[1];
var reader=csv.DictReader(infile);
str.__new__(cls);
chr(int(x.group(1),16));
self.__class__(__kwargtrans__(d));
record.put();
plt.close(fig);
daemon_cartman.start();
var A=NP.random.randint(10,100,100).reshape(10,10);
setup.py;
var array=file.readlines();
example.insert(4,122);
root.mainloop();
fig.subplots_adjust(__kwargtrans__({wspace:.1,hspace:0,bottom:.05}));
app.MainLoop();
lib.foo.restype=c_char_p;
main();
draw_ellipse(image,ellipse_box,__kwargtrans__({width:20,antialias:1}));
parent.add_widget(GearTick(__kwargtrans__({range:tuple([0,100])})));
var req=urllib.request.Request(post_url,json.dumps(postdata),headers);
max(d1,__kwargtrans__({key:function __lambda__(k){return d1[k]}}));
print(final);
stat(my_filename).st_uid;
Button.__init__(self,parent);
var cursor=collection.find(dict({}));
self.origstreamfd=self.origstream.fileno();
var foo=Foo();
-num_decode(s.__getslice__(1,null,1));
key0+=1;
var serializer=CommentSerializer(__kwargtrans__({data:data}));
sudokupossibilities;
tuple([[0,0,0,0,0,0,15,16]]);
d.py_setdefault(a,[]).append(b);
var f=plt.figure();
var my_dict=function(){var __accu0__=[];for(var [key,value]of list(my_dict.py_items()))__accu0__.append([key,set(value)]);return dict(__accu0__)}();
example();
s.__getitem__([tuple([0,1,1]),1]);
res[k]+=l.__getslice__(0,len(l)-n+1,1);
var angle=np.deg2rad(angle);
var status=p.wait();
export var X_cluster_0=X_train_tfidf[cluster_0];
export var etree=ET.fromstring(xml_data);
var chunk=proc.stdout.read();
com.convert_robj(a);
f.set_pasv(0);
ax.set_yticklabels(labels);
var __left0__=plt.subplots(1,2,__kwargtrans__({sharey:true}));var fig=__left0__[0];var axes=__left0__[1];
var Ainv=tf.matrix_inverse(A);
var py_name=models.CharField(__kwargtrans__({max_length:45}));
plot(x_av,y);
export var primeCount=[0,0,1];
var top=Tkinter.Tk();
plt.draw();
axis.__getslice__(0,set_ylim,1)(-1,1);
var __left0__=np.histogram2d(x2,y2);var H=__left0__[0];var xedges=__left0__[1];var yedges=__left0__[2];
sys.stdout=StringIO.StringIO();
os.umask(0);
var x=dict([[1,2]]);
var x=np.outer(np.sin(theta),np.cos(phi));
sock.bind(address[0][-1]);
var lines=function(){var __accu0__=[];for(var line of text.splitlines())__accu0__.append(line.strip());return py_iter(__accu0__)}();
var df=pd.DataFrame(list(ds2.difference(ds1)),__kwargtrans__({columns:df2.columns}));
print(np.matrix(A));
var data=yaml.load(stream);
var py_values=function(){var __accu0__=[];for(var col of row)__accu0__.append(col.text);return __accu0__}();
transaction.leave_transaction_management();
notebook.set_tab_reorderable(page1,true);
var norm=plt.normalize(min_v,max_v);
print(pd.DataFrame(d));
tuple([.6044,sym2,2,5,10,10]);
print(item);
self.data.py_pop();
mask[col]=true;
var out=np.zeros(tuple([N,N]));
export var telephone=models.CharField(__kwargtrans__({max_length:100}));
true;
var data=urllib.request.urlopen(url);
print(function(){var __accu0__=[];for(var x of list(__all__.py_values()))if(isinstance(x,FunctionType))__accu0__.append(x);return __accu0__}());
export var sum_of_grades=sum(my_list);
code.interact(__kwargtrans__({local:locals()}));
var f=np.poly1d([1,0,0,-1]);
func1();
py_next(mat);
data_files.append(tuple([directory,files]));
export var carIndex=len(tmp)==0?[0]:tmp;
(function(){var __accu0__=[];for(var [n,i]of enumerate(atup))if(__mod__(n,4)==0)__accu0__.append(atup.__getslice__(n,n+4,1));return __accu0__})();
self.py_arguments=dict({});
print(tuple([r[0],r[1]]));
XGBClassifier(__kwargtrans__(grid));
var val=func(self.val);
p.communicate(msg.as_string());
var panel=tk.Label(window,__kwargtrans__({image:img}));
os.remove(f.py_name);
grid.__setitem__([i,j],z);
endclass;
w.show();
fig.patch.set_visible(false);
var msg=MIMEMultipart();
df.clip(__kwargtrans__({lower:0}));
export var norm2=normalize(x.__getitem__([tuple([0,null,1]),np.newaxis]),__kwargtrans__({axis:0})).ravel();
var __left0__=tuple([key.__getslice__(0,size,1),key.__getslice__(size,null,1)]);var value=__left0__[0];var key=__left0__[1];
tuple([zip(...function(){var __accu0__=[];for(var i=0;i<n_rows;i++)__accu0__.append(lft[i]+board[i]+rgt[i]);return __accu0__}())]);
var args=parser.parse_args(preprocess(sys.argv));
export var ode15s=scipy.integrate.ode(f);
multi_line_word<<(word|split_word+multi_line_word);
marshal.dump(f.__code__,funcfile);
export var allTrue=all(function(){var __accu0__=[];for(var elem of someIterable)__accu0__.append(somePredicate(elem));return py_iter(__accu0__)}());
shutil.copyfile(source_path+filename,dest_path+filename);
entry1.grid(__kwargtrans__({row:1,column:1}));
var sess=tf.Session();
TestCase.setUp(self,...args,__kwargtrans__(kwargs));
self.label.pack(__kwargtrans__({padx:10,pady:10}));
A.__getitem__([idx,tuple([0,null,1])]);
self.SetTransparent(50);
var ip=self.request.remote_addr;
admin.site.unregister(Group);
x.__name__;
threads.append(t);
somescript.py;
df;
self._final_queue.put(self._get_final_result());
os._exit(0);
listen();
PyRun_SimpleString(pycmd);
reduce(np.logical_and,map(pred,list(range(a.shape[1])))).any(__kwargtrans__({axis:1}));
result.append(job.py_get());
var id=Column(Integer,__kwargtrans__({primary_key:true}));
var w=np.asarray([0,4,7,10]);
export var vor=Voronoi(points);
ax.scatter(x2,y2,__kwargtrans__({s:100,lw:0,color:[alpha,alpha,1]}));
gen_move(list(range(10)));
var a=[];
var key=m[0][0]+m[0][1];
stmt.to_unicode();
glLoadIdentity();
concatenate_per_row(A,B);
FO.write(line);
msmdsrvini.write(msmdsrvText);
self.windowSizer.Add(self.panel,1,wx.ALL|wx.EXPAND);
self.session_store.save_sessions(self.response);
print(TR8(c));
columns[i].append(h);
nbr_edgeobjects;
list(~numpy.array(mylist));
export var zip_b=zip(...b);
self.assertTrue(flag);
(function(){var __accu0__=[];for(var x of range(...s.indices(10)))__accu0__.append(x);return __accu0__})();
ds.addSample(tuple([-1,1]),tuple([1]));
Frame.__init__(self,master);
self.callback();
sys.stdout.write(s);
f.sum();
str(self(...args,__kwargtrans__(kwargs)));
var hash=random.getrandbits(128);
export var sel_cur=db.cursor();
var out=f.getvalue();
self.doMP();
self.fp=open(self.file_or_path,mode);
var A=x.todok();
var x=np.linalg.lstsq(a,b)[0];
window1.show_all();
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
a.indices(100);
pd.Series(L);
ret.append(line.__getslice__(0,-1,1));
var result=jobs.apply_async();
summarized_info;
var a=a.reshape(nx,ny,nz);
f.close();
b.build_base;
f(__kwargtrans__(kw));
programmer1.info();
1;
isinstance([],list);
var __left0__=ax.plot([],[],__kwargtrans__({lw:2}));var line=__left0__[0];
g[c]=i;
np.vstack([bins.__getslice__(0,-1,1),bins.__getslice__(1,null,1)]).mean(__kwargtrans__({axis:0}));
var __left0__=plt.subplots(__kwargtrans__({nrows:2,sharex:true}));var fig=__left0__[0];var axes=__left0__[1];
export var solns8=solve(smin,smax,coef1,coef2);
var counts=pd.value_counts(py_values);
var l=[];
func(arg1);
grid[-1].append(value);
objs.append(obj);
self.sizer.Layout();
A().B(1,2);
var lines=f.read().splitlines();
var query=query.filter(filt);
dill.dump(t,f);
Blob.__init__(self,width,height,color,emphasis,highlight);
self.selected;
threading.Thread.__init__(self);
device.open();
glVertex2i(110,110);
channel.stop_consuming();
(function(){var __accu0__=[];for(var x of a)for(var y of b)__accu0__.append(tuple([x,y]));return __accu0__})();
float(s);
var reader=csv.reader(f,__kwargtrans__({delimiter:d}));
var today=datetime.datetime.now();
var x=sum(function(){var __accu0__=[];for(var digit of str(n))__accu0__.append(int(digit));return py_iter(__accu0__)}());
entity.before_delete();
export var pagenos=set();
self.setLineWidth(.5);
export var infile=io.open(filename,mode,__kwargtrans__({encoding:encoding}));
ax.add_patch(Circle(point,.1));
self.log.write(message);
print(your_array[index_array.__getslice__(0,10,1)]);
arr.reshape(dim,tuple([n_bins])*dim);
os.remove(output);
var a=numpy.arange(25).reshape(tuple([5,5]));
print(G.number_of_nodes());
t.start();
im.putalpha(alpha);
print(b);
inspect.getargspec(members[2][1]);
self._callbacks=[];
winsound.Beep(17E3,100);
export var stripped=function(){var __accu0__=[];for(var line of in_file)__accu0__.append(line.strip());return py_iter(__accu0__)}();
B[~B.client_id.isin(A.client_id)];
np.sqrt(1-Math.pow(X,2)-Math.pow(Y,2));
var c=y*np.exp(-complex(0,1)*2*n*np.pi*time/period);
var __left0__=tuple([xlim[1]-xlim[0],ylim[1]-ylim[0]]);export var xdelta=__left0__[0];export var ydelta=__left0__[1];
f(...args[0]);
output.index=output.index.to_datetime();
session.commit();
operator.itemgetter(...b)(a);
self.setAutoFillBackground(true);
Vector(self.x+n.x,self.y+n.y);
temp_file.seek(0);
cache.set(self.COUNTER_CACHE_KEY,1,self.PERIOD_LENGTH_IN_SECONDS);
export var Signature2=-1;
(mask*prior_reci+~mask*(.1*prior_reci)).sum(1);
sys.stdout=tmpout;
fn(...args,__kwargtrans__(args));
print(df.columns.tolist());
dict([[a,1],[b,2]]);
server.serve_forever();
export var some_number=Column(Integer,__kwargtrans__({primary_key:true}));
pool.close();
var y=np.random.randn(1E4,1E4);
plt.plot(xnew,power_smooth);
var app=MyApp(sys.argv);
loop.run_forever();
export var dacl=sd.GetSecurityDescriptorDacl();
f1.close();
c.drawImage(Image,cm,cm,inch,inch);
sys.excepthook=myexcepthook;
c.wait();
(fwd.__getslice__(0,-2,1)+back.__getslice__(2,null,1))/2;
var a=np.eye(N);
pygame.init();
valued.append(int(suby));
var a=np.hstack(np.array(a));
var s=pickle.load(f);
g.login(username,password);
sort_index;
var app=wx.App(false);
export var rv=np.ones(tuple([N,mask.shape[0],mask.shape[1],4]),__kwargtrans__({dtype:np.float}));
print(final_regex);
export var filelist=glob.glob(fileroot);
root.withdraw();
var doc=lxml.etree.XML(data);
other&&self.a==other.a&&self.b==other.b;
count(x);
PyErr_Print();
var t=Tkinter.Text(w);
plt.show();
res.reverse();
export var naive=datetime(2015,2,1);
print(point.distance(line));
var my_dict=dict({});
numpy.vstack([test,test.__getslice__(0,null,-1)]).T.__getslice__(0,Math.floor((len(test)+1)/2),1);
clock_gettime.argtypes=[ctypes.c_int,ctypes.POINTER(timespec)];
plt.cm.gist_ncar(np.random.random());
var G=nx.Graph();
auth_login(request,form.get_user());
var b=np.random.rand(5,4);
any(function(){var __accu0__=[];for(var char of value)__accu0__.append(__in__(char,digits));return py_iter(__accu0__)}());
print(Counter(alist));
var i=py_iter([tuple([1,11]),tuple([2,22])]);
mylist+=[tuple([tup[0],tup[1],list_of_signs[idx1][idx2]])];
func();
var date_joined=models.DateField();
(function __lambda__(x){return x}).__get__;
print(arreqclose_in_list(myarr1,mylistarr));
print(str(selection));
sys.exit(0);
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
print(df);
self.window.show_all();

self.get_db_prep_value(value);
var data=dict({});
self._thread_id;
var pool=multiprocessing.Pool();
adate-timedelta(__kwargtrans__({days:_offsets[adate.weekday()]}));
log.addHandler(noop);
V.ravel();
_nextafter(x,y);
numpy.dtype(t);
export var worksheet=workbook.add_worksheet();
f2.pack(__kwargtrans__({side:LEFT,fill:Y}));
pprint.pprint(dict(os.environ),__kwargtrans__({width:1}));
self.figure.delaxes(self.figure.axes[1]);
df+1;
var dt=numpy.linspace(-t[-1],t[-1],2*nsamples-1);
var s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);
new_list.append(tuple([elem,input_dict[elem]]));
svc.fit(X_train,y_train);
self.authenticate(user,password);
tuple([k,self.mapping[k]]);
df[1]=df[1].apply(function __lambda__(x){return x?1:0}).cumsum();
writer.writerow(writenames);
win.window.move_resize(x,y,w,h);
all_pixels.append(255);
print(df);
self.setCentralWidget(self.tree);
t.__sizeof__();
x[0];
json.load(f);
export var synchIntervall=datetime.day(2);
var today=datetime.date.today();
PaginationFormSet;
var c=__mod__(cv.WaitKey(7),256);
mech.submit();
print(x.__getitem__([tuple([0,null,1]),tuple([0,null,1]),5]));
x[0][0][0]=11;
result.intersection_update(s);
X[-1];

print(is_int_value(x));
print(Example(1));
print(np.std(X,0)*m.coef_);
export var x_c=.5*(x_a+x_b);
(function(){var __accu0__=[];for(var q of Q)__accu0__.append(scipy.argmin(function(){var __accu1__=[];for(var x of X)__accu1__.append(scipy.inner(q-x,q-x));return __accu1__}()));return __accu0__})();
var form=formset.form;
df.where(~is_duplicate,0);
x.py_split();
thread.start();
self.window_is_fullscreen=false;
seen.add(k);
ax.set_xticks(pos+width/2);
(function(){var __accu0__=[];for(var a of resArg)__accu0__.append(resMag*(math.cos(a)+math.sin(a)*complex(0,1)));return __accu0__})();
var r=dict({});
self.textLayout.setMargin(10);
var f=np.poly1d([1,0,0,-1]);
print(l[i]);
var s=f.read();
btn.pack();
var x=np.arange(0,len(data));
var __left0__=plt.subplots(__kwargtrans__({ncols:2,figsize:tuple([5,2.5])}));var fig=__left0__[0];var ax=__left0__[1];
print(a);
out.reshape(tuple([n,n]));
export var in_order_values=list(tree.in_order());
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
var a=b[n];
dill.detect.errors(f);
var tree=etree.parse(metadata,parser);
__in__(word,is_word.words)&&len(word)>1;
frame.grid_columnconfigure(0,__kwargtrans__({weight:1}));
cov/np.dot(s_x.__getitem__([tuple([0,null,1]),np.newaxis]),s_y.__getitem__([np.newaxis,tuple([0,null,1])]));
var fig=plt.figure(__kwargtrans__({figsize:tuple([4,5])}));
A[index];
json.dumps(d);
(function(){var __accu0__=[];for(var [i,bar]of enumerate(b))__accu0__.append(bar.set_height(hist[i]));return __accu0__})();
upload_file(path);
mysignal.connect_via(app)(listener);
export var wmclass=window.get_wm_class();
var indices=numpy.arange(a.shape[0])[numpy.in1d(a,b)];
dict.__setitem__(self,k,v);
df;
pd.__version__;
self.src.append([self.src[-1].py_pop(-1)]);
print(tuple([r.status,r.reason]));
plt.xlim([startTime,endTime]);
signal.append(c+corr*signal[-1]+np.random.normal(0,sigma_e));
magneturi;
var result=solve(m1,m2,std1,std2);
plt.plot(t,s);
var lock=mp.Lock();
f.pack(__kwargtrans__({side:LEFT,expand:1}));
input.close();
pipe.close();
data.append(float(item.py_split()[take_col]));
var parser=argparse.ArgumentParser();
var wb=openpyxl.Workbook();
slither/slither/tests.py;
f[2].lower();
np.random.seed(0);
L.__setslice__(a,a+span2,null,L.__getslice__(b,c,1));
var r=list(range(start_day,end_day+1));
df;
var dt=numpy.arange(1-nsamples,nsamples);
C();
ranges.append([val,index]);
proc.start();
var img=np.vstack(tuple([c,np.hstack(tuple([a,b]))]));
var dt=datetime.datetime.now();
export var EndDate=Date+timedelta(__kwargtrans__({days:10}));
mylist.remove(value);
print(list(d.py_items()));
f(...args);
q.put(py_name);
print(x);
fields.insert(bisect(fields,value),value);
ax.add_patch(patch);
var vals=function(){var __accu0__=[];for(var i=0;i<quarter;i++)__accu0__.append(sinval(i));return __accu0__}();

dict_writer.writeheader();
context.set_source_surface(self.image,0,0);
input();
tar.close();
np.hstack(lst);
var parser=argparse.ArgumentParser();
var font=cv2.FONT_HERSHEY_PLAIN;
Concate.py_update(dict([[A[i],B[i]]]));
self.output.write(result);
print(mylist);
ax.hist(nd,__kwargtrans__({normed:true,bins:n_bins0,alpha:.5}));
response;
s.connect(tuple([hostname,port]));
plt.hist(random_from_cdf,50);
CATC-ATCAGCATCGACATGCGGCATACG;
var position=NX.spring_layout(Gh);
p.join();
export var graphB=tf.Graph();
self._fn(...arg,__kwargtrans__(kw));
f(1,1,1);
export var hsv_image=cv2.cvtColor(image,cv2.COLOR_BGR2HSV);
d[key]=true;
FunctionFlow.start.run(__kwargtrans__(some_kwargs));
print(repr(array));
cax.pcolormesh(t,r,c.T);
plt.plot([0,1]);
print(l.__getslice__(0,N,1));
print(str(matches));
initialize_necklace();
export var profile_image_path=models.CharField(__kwargtrans__({max_length:250,blank:true,null:true}));
print(data);
var r=redis.Redis();
self._name;
self.assertIn(key,set(response.data.py_keys()));
file.flush();
var obj=[line[0].strip(),line[1].strip()];
var sm=sys.modules.copy();
decorated_func;
app;
a.__setitem__([tuple([0,null,1]),tuple([0,null,1]),i,tuple([0,null,1])],a.__getitem__([tuple([0,null,1]),tuple([0,null,1]),i,tuple([0,null,1])])*v[i]);
found.add(relation);
word1word2;
word2word1;
ax.set_xlim(-10,10);
skew*=Math.pow((m-1)*m,.5)/(m-2);
t.append(yourstring.__getslice__(i*8,(i+1)*8,1));
var obj=getattr(obj,attr_list.py_pop(0));
logging.getLevelName(10);
self._conn;
var app=Flask(__name__);
some_b.delete();
export var argtypes=[ctypes.c_int,ctypes.c_double];
print(self.__name__);
cap.release();
app.install(log_to_logger);
decorator;
var digits=map(str,digits);
var date=dt.datetime.today()-dt.timedelta(__kwargtrans__({days:1}));
cPickle.dump(gnb,fid);
self.ui.PoseBtn_GridLayout.addItem(spacerItem1,1,0,1,1);
self.main();
var CS=plt.contour(X,Y,Z);
var mat=np.random.random(tuple([100,100]));
io.StringIO;
box.pack_start(combo,false,false);
logger.propagate=false;
testdataframe[col].plot(__kwargtrans__({style:style,lw:lw,ax:ax}));
ax.figure.canvas.draw();
item.append(10);
var d=dict();
sleep(1);
x.__getitem__([tuple([0,null,1]),tuple([1,2,1]),tuple([0,null,1])]);
var locations=FieldList(FormField(LocationForm),__kwargtrans__({min_entries:2}));
person.make_statement(20);
ax.set_yticklabels(nba_sort.index,__kwargtrans__({minor:false}));
np.where(states);
moo._min_or_max_axis;
var b=a.__getslice__(0,null,2).copy();
df.index=pd.DatetimeIndex(df.index);
np.where(a>5);
ax.set_xlim([xmin,xmax]);
new set([new set([form.non_field_errors])]);
freq.py_update(line.py_split());
ax.plot(x,y);
self.fit(X,y).transform(X);
ax.set_ylim(-100,100);
module1.func1=self.my_new_func1;
t.start();
deleteself.list[-1];
cstring.value;
kernelapp.start();
var url=urlparse.urlparse(address);
var arr=np.roll(arr,num);
var f=scipy.signal.lti([1],[1,1]);
export var filtered_words=function(){var __accu0__=[];for(var word of file_words)if(__in__(word,words))__accu0__.append(word);return py_iter(__accu0__)}();
print(a.qsize());
var array2=function(){var __accu0__=[];for(var e of array2)if(!__in__(e,set1))__accu0__.append(e);return __accu0__}();
print(n);
var X_train=vectorizer.fit_transform(X_train);
var app=QtGui.QApplication(sys.argv);
var b=TestB();
export var str_args=function(){var __accu0__=[];for(var x of args)__accu0__.append(str(x));return __accu0__}();
var f=hstack2(tuple([a,b]));
var b=sorted(a,__kwargtrans__({reverse:true}));
reverse_dic[v].append(k);
str2.count(str1);
session.add(g);
signal.signal(signal.SIGUSR1,handle_pdb);
var df=df.append(sum_df);
f(...args,__kwargtrans__(kwargs));
array[0];
G.add_edge(1,2,__kwargtrans__({weight:7}));
colorbar.set_ticks([-.667,0,.667]);
max(l_one+l_two);
var result=dict({});
var image=Image.all().fetch(1,offset)[0];
message.save();
var sidx=X1D.argsort();
M.dot(M);
pprint(res);
root.mainloop();
var a=np.array([1,0,0]);
list_.append(line[2]);
frame1.axes.get_xaxis().set_ticks([]);
Something.objects.filter(__kwargtrans__({data__a:1}));
var __left0__=x.shape;var m=__left0__[0];var n=__left0__[1];
self.setLayout(grid);
abs(value);
export var title_year=function(){var __accu0__=[];for(var i of movie_dicts)__accu0__.append(fields(i));return __accu0__}();
axs[1].xaxis.set_major_formatter(x_fmt);
pythoncom.PumpMessages();
sp.add_source_from_line(ppa_name);
someFunction(__kwargtrans__(theDictionary));
var mask=np.zeros(img.shape,np.uint8);
lst[num]*=2;
xml.sax._exceptions;
a[0][0]=2;
myMap[n]+=1;
print(nx.simple_cycles(G).py_pop().__getslice__(0,-1,1));
export var myfile=f.read();
var pri=gllhs[0];
var __left0__=plt.subplots(__kwargtrans__({nrows:1,ncols:2}));var fig=__left0__[0];var axes=__left0__[1];
export var root_logger=logging.getLogger();
var py_values=list(select.stripped_strings);
User.client_1_query.filter(User.id==1).all();
0;
dis.dis(b);
var nbr_edgeobjects=0;
textwrap.wrap(s,4);
var id=Column(Integer,__kwargtrans__({primary_key:true}));
var fig=plt.figure();
print(linalg.solve(A,x));
__in__(x,range(cls.k));
var out=data[np.in1d(tags,goodIDs)];
var im=img.load();
var res=function(){var __accu0__=[];for(var key of list(freq_count.py_keys()))if(freq_count[key]==high)__accu0__.append(key);return __accu0__}();
plt.plot(list(range(10)));
var description=models.CharField(__kwargtrans__({max_length:250}));
var new_cols=df.loc.__getitem__([tuple([0,null,1]),cols])/df.loc.__getitem__([ii,cols]).py_values;
cv.Threshold(a,a,.5,1,cv.CV_THRESH_BINARY);
adate-timedelta(__kwargtrans__({days:delta}));
p.join();
writer.writerow(combined_row);
var fig=plt.gcf();
var last_name=models.CharField(__kwargtrans__({max_length:100}));
py_next(second);
self.dot.set_offsets(tuple([x,y]));
df;
print(sublist([5,90,2],[90,20,5,2,17]));
result.py_pop();
plt.colorbar(im,__kwargtrans__({cax:cax}));
ax.scatter(x,y,z,__kwargtrans__({alpha:.1}));
__init__.py;
result_dict[len(word)].add(word);
layout.addWidget(self.edit);
result[nI]=func2(zeta[nI]);
setattr(foo,k,v);
var now=datetime.now();
console_client.cmdloop();
var value=Column(String(100));
var __except0__=OSError(errno_,os.strerror(errno_));__except0__.__cause__=null;throw __except0__;
self.driver=webdriver.Firefox();
v.extend(list(i.py_items()));
parsed.pprint();
export var item_q=Queue.Queue();
workssheet2.write(row,col,cell_value);
min2(x)[1];
var py_arguments=locals();
var content=f.read();
args.func(args.newstate);
i+=1;
QtCore.Qt.Unchecked;
plt.ylim(tuple([-limit,limit]));
export var conv=np.round(alt/500).astype(int);
print(df);
sum(function(){var __accu0__=[];for(var [i,n]of zip(count(0,-1),a))__accu0__.append(n*Math.pow(10,i));return py_iter(__accu0__)}());
ns.extra_file=ns.extra_file?ns.extra_file:ns.filename;
(t-B)/A;
QTimer.singleShot(200,self.load_content);
var ax=fig.add_subplot(111);
var extension=entrypoint.load();
dome_something(obj);
var __left0__=pyplot.gca().get_legend_handles_labels();var handles=__left0__[0];var labels=__left0__[1];
print(np.array_str(x,__kwargtrans__({precision:2})));
main();
get_color(.5);
original_open(filename,mode);
kmer2count[kmer2]+=initcount[kmer1];
export var inp=input();
export var _change_this_and_I_will_kill_you_with_my_axe=[];
np.insert(a,1,5,__kwargtrans__({axis:1}));
mean+=(x-mean)/n;
var fig=plt.figure();
(1).is_integer();
crawler.crawl(spider);
myCards.append(cardList);
wrapped_f;
array([.9,.9,.9,.9,.9,.9,.9,.9,.9,.9]);
map(session.refresh,py_iter(session));
L[0]+listSum(L.__getslice__(1,null,1));
le.setStyleSheet(ss);
out.close();
print(p2.communicate());
a.ravel()[flat_index];
response;
np.add.at(out_count,b_idx,b.__getitem__([tuple([0,null,1]),1]));
var __left0__=tuple([A.__getitem__([c2,r2]),A.__getitem__([c1,r1])]);A.__setitem__([c1,r1],__left0__[0]);A.__setitem__([c2,r2],__left0__[1]);
export var X0=np.ones(tuple([n,1]));
export var ba=bytearray(m);
f.__defaults__;
new_strs.append(str_record[x]);
ebks.append(p1/p2);
var cum=np.hstack(tuple([np.zeros(tuple([a.shape[0],1]),__kwargtrans__({dtype:a.dtype})),cum]));
16.6644029617;
print(drw);
pmf/=pmf.sum();
pr.enable();
export var clipped_background=no_background.clip(__kwargtrans__({min:0}));
main();
p.print_stats();

export var param_value=request.query.param_name;
var __left0__=pipe.communicate();var out=__left0__[0];var err=__left0__[1];
var pattern=np.random.rand(PATLEN);
tuple([x,y]);
f.write(tempfile.read());
merged_df;
export var lastdigit=int(repr(n)[-1]);
var b=[4,5,6];
var a=np.equal.outer(vect,vect);
curses.flushinp();
print(tuple([resp.status,resp.reason]));
var r=q.T.reshape(-1,2,2);
patient_list.py_sort(__kwargtrans__({key:by_unit_room_bed}));
p.put();
_test();
fp.seek(-BOMLEN,os.SEEK_CUR);
ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy());
var arr=np.zeros(tuple([nrows,ncols]));
var s=requests.Session();
var columns=df.columns.py_values.tolist();
var buf=stream.read(1024);
lst.__getslice__(i,null,1)+lst.__getslice__(0,i,1);
var reordered=l.__getslice__(-1,null,1)+l.__getslice__(0,-1,1);
client_connection.close();
var b=np.random.rand(6,5,4);
httpretty.disable();
mydict.py_setdefault(key,list());

var b=zip(...a);
pubkey.verify_init();
export var line1=LineString([tuple([0,0]),tuple([1,0]),tuple([1,1])]);
print(_string);
var f2=f2*np.max(f1)+(1-f2)*np.min(f1);
var loop=asyncio.get_event_loop();
(function(){var __accu0__=[];for(var i of range(0,len(s),4))__accu0__.append(s.__getslice__(i,i+4,1));return __accu0__})();
var ax=fig.add_subplot(2,2,a+1);
var m=graphlab.recommender.create(data);
bucket.configure_versioning(true);
var tree_dict=dict({});
do_something_5();
print(tuple([key,value]));
var ax1=fig.add_subplot(111);
pd.Series(b[1],df.columns,__kwargtrans__({py_name:df.index[-1]}));
a[a.argsort().__getslice__(-10,null,1)];
distutils.util.strtobool(some_string);
var index=d*(d-1)/2-(d-i)*(d-i-1)/2;
msg.attach(msgAlternative);
var v=np.random.normal(__kwargtrans__({size:d}));
var process=Process(__kwargtrans__({target:greet,args:tuple([string])}));
sys.exit(main());
obj.put();
datetime.datetime.fromtimestamp(obj[0][1]);
processes.remove(p);
var arr=numpy.array(numpy.round(arr),__kwargtrans__({dtype:numpy.uint8}));
var q=np.empty_like(p);
w.show_all();
bokeh.io.output_notebook();
stdscr.clrtoeol();
os.sys.path.insert(0,parentdir);
plt.hist(data,50,__kwargtrans__({normed:true}));
var a=np.arange(10);

var result=service.resource().method([parameters]).execute();
x/=x[2];
var __left0__=divmod(seconds,60);export var minutes=__left0__[0];var seconds=__left0__[1];
s.append(im.__getitem__([tuple([x-1,x+2,1]),tuple([y-1,y+2,1])]));
result.reset_index(__kwargtrans__({inplace:true}));
DataMatrix(data,__kwargtrans__({index:dates}));
np.maximum.accumulate(mask,__kwargtrans__({axis:1,out:mask}));
new set([new set([names|safe])]);
p2.rotate(angle);
export var xx1=np.linspace(x.min(),x.max(),50);
print(sys.argv);
fo.close();
var a=list(range(1,50));
self._handle_request_noblock();
print(root);
regex.sub(function __lambda__(mo){return dict[mo.string.__getslice__(mo.start(),mo.end(),1)]},text);
plt.imshow=my_imshow;
export var stdout_fileno=sys.stdout.fileno();
print(chambersinreactor);
var pattern=np.ones(tuple([24,16]),float);
main();
a+b;
masterlist.py_update(function(){var __accu0__=[];for(var x of exceptions)if(__in__(x,masterlist))__accu0__.append(tuple([x,false]));return py_iter(__accu0__)}());
self.columnconfigure(1,__kwargtrans__({weight:1}));
var __left0__=result;var a=__left0__[0];var b=__left0__[1];var c=__left0__[2];var d=__left0__[3];
self.lc=task.LoopingCall(self.announce);
print(hex(id(a)));
copy(args[0]);
cherrypy.config.py_update(confdict);
pathqueue.join();
gibberish(5);
Astars.append(s);
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
np.vstack(tuple([a.__getitem__([0,tuple([0,null,1])]),a.__getitem__([tuple([1,null,1]),tuple([0,null,1])])+a.__getitem__([0,tuple([0,null,1])])*complex(0,1)]));
var records=Record.objects.filter(__kwargtrans__({project_id:1}));
list();
os.kill(int(ps_output),signal.SIGTERM);
x[0];
docfile.close();
print(m.group(6));
var a=os.stat(os.path.join(directory,i));
self.clearLayout(layout);
new_class;
print(line);
var data=s.recv(1024);
abs(2-1);
var reader=csv.reader(f1);
var ax1=plt.gca();
var length=len(text);
self.init_app(app,db);
ax.legend();
main();
print(myline);
ax0a.set_xticklabels([]);
var ts=np.arange(0,1,.01);
var b=np.random.randint(0,9,tuple([2,1])).ravel();
n*=2;
var r=min(r,n-r);
var Base=declarative_base();
export var urlhash=models.CharField(__kwargtrans__({max_length:6,null:true,blank:true,unique:true}));
print(msg);
main();
tuple([1,8,8,8]);
var arr=np.roll(arr,num);
self.write(somedata);
s.mean(__kwargtrans__({axis:0}));
vbox.add(image);
var grouped=df.groupby([times.hour,times.minute]);
start_urls.append(url);
plt.scatter(x,y,__kwargtrans__({c:t,cmap:cm.cmap_name_r}));
var a=a+1;
ax1.view_init(...init_view);
zip(new_lists,overflows);
num_rejects+=1;
transport.close();
window.show();
np.sum(~(a^b));
pprint(dict(di));
var result=py_next(function(){var __accu0__=[];for(var x of tuple([a,b,c,d,e,py_default]))if(x)__accu0__.append(x);return py_iter(__accu0__)}());
app.exec_();
sum(function(){var __accu0__=[];for(var d=1;d<n+1;d++)__accu0__.append(Fraction(1,d));return py_iter(__accu0__)}());
homebrew/science/opencv;
main.run();
md5.py_update(chunk);
self._b=function(){var __accu0__=[];for(var x=0;x<5;x++)__accu0__.append(A());return __accu0__}();
print(result.py_get(__kwargtrans__({timeout:1})));
result.__getslice__(result.size/2,null,1);
plt.plot(x,y,__kwargtrans__({zorder:2}));
dict({});
sct_subscript;
var choices=list(chain(self.choices,choices));
result[key]=row.__getslice__(1,null,1);
var x=range(10);
do_something_4();
var size=ctypes.c_int();
fruitDB.close();
export var p_form=function(){var __accu0__=[];for(var i=0;i<len(intervals);i++)__accu0__.append(sum(sintervals.__getslice__(0,i,1)));return __accu0__}();
y[i]+=A.__getitem__([i,j])*x[j];
overlap(0,100,0,20);
export var dates=function(){var __accu0__=[];for(var x of my_strings)__accu0__.append(re.match(pattern,x).groups()[0]);return __accu0__}();
var B=get_A();
deletethe_map[i];
tuple([[1,1]]);
cv.CvtColor(difference,grey_image,cv.CV_RGB2GRAY);
self.obj[self.key]=val;
self.root=Tk();
(text[0]==char?1:0)+count(char,text.__getslice__(1,null,1));
var y=tf.Variable(tf.zeros([]));
i+=1;
ssc.start();
var p=function(){var __accu0__=[];for(var x of l)__accu0__.append(len(str(x))+1);return __accu0__}();
export var list1_new=function(){var __accu0__=[];for(var [i,x]of enumerate(list1))if(__in__(list2[i],list2.__getslice__(0,i,1)))__accu0__.append(x);return __accu0__}();
connection.close();
cur_set.append(A[index]);
print(doc.xml.web.offset.string);
var today=datetime.date.today();
self.reverser=dict();
view.show();
list(takewhile(function __lambda__(date){return date.year<2014},tuesdays_of_february));
canvas.config(__kwargtrans__({xscrollcommand:hbar.set,yscrollcommand:vbar.set}));
export var now_date=datetime.datetime.now();
var A=pd.Series(list(range(1,5)));
var Session=sessionmaker(__kwargtrans__({bind:engine}));
self.closedmax=closedmax;
self.slidermax=slidermax;
self.slidermin=slidermin;
self.closedmin=closedmin;
remain+=int(i);
json.dumps(d,__kwargtrans__({sort_keys:true}));
var s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);
export var date_ceased_to_act=models.DateField(__kwargtrans__({blank:true,null:true}));
main.mainloop();
password();
getMappingsNode(n,nodeName);
var df=pd.DataFrame(np.ceil(np.random.rand(1,10)*1E3));
export var seconds_since_midnight=time.time()-time.mktime(today.timetuple());
var cj=cookielib.CookieJar();
print(tree.getpath(element));
random.shuffle(a);
var handler=logging.handlers.RotatingFileHandler(file_name,__kwargtrans__({maxBytes:Math.pow(10,9)}));
var reader=csv.reader(f2);
label.set_rotation(45);
self._copy_attrs(df);
array.remove(array[0]);
dlist.append(d.copy());
Base.metadata.create_all(engine);
parent.insert(parent.index(element)+1,new_element);
print(str(count).ljust(10),conv);
var content=response.read();
print(data);
e.__traceback__;
tuple([[0,.95510649,0]]);
var dt=datetime.datetime.fromtimestamp(ts).py_replace(__kwargtrans__({tzinfo:tz.tzutc()}));
Base.metadata.create_all(e);
SPECIAL_RULES[py_name]();
a*b;
var frame=cv.QueryFrame(capture);
plt.hold(false);
help(module);
export var scroll_win=gtk.ScrolledWindow();
var mask=numpy.in1d(numpy_array,repeat_set).reshape(numpy_array.shape);
tuple([VERSION]);
conn.execute(tb_create);
os.fstat(f.fileno());
L.__setslice__(0,null,null,function(){var __accu0__=[];for(var i of L)__accu0__.append(i.__getslice__(0,1,1)+i.__getslice__(2,null,1));return __accu0__}());
sess.run(train_step,__kwargtrans__({feed_dict:dict([[learning_rate,.1]])}));
zip_longest(...args,__kwargtrans__({fillvalue:fillvalue}));
s.format(__kwargtrans__(d));
false;
parser.feed(pstring);
PySys_SetArgv(argc,argv);
self.Artwork.destroy();
server.serve_forever();
matplotlib.matplotlib_fname();
export var UserName=db.Column(db.String(40));
var p=multiprocessing.Pool();
self.quit();
app.register_blueprint(account_api);
print(df.loc[idx]);
(function __lambda__(x){return __mod__(x,i)==0});
buttonList.append(new_button);
ax.figure.canvas.draw();
var lines=f.readlines().__getslice__(0,-5,1);
var args=[4,5,6];
threads.append(threading.Thread(__kwargtrans__({target:process,args:tuple([py_items,start,end])})));
var model=LinearRegression();
var py_keys=function(){var __accu0__=[];for(var x of d.py_values())__accu0__.append(list(x.py_keys()));return py_iter(__accu0__)}();
plt.bar(counts.index,counts);
z_surface[where(ma.getmask(Zm)==true)]=numpy.nan;
server.start();
yaml.add_representer(folded_unicode,folded_unicode_representer);
Decimal(1).exp();
d2[k]=f(v);
ctypes.memmove(ctypes.addressof(self),bytes,fit);
inner;
var cmap=plt.cm.gray;
var data=function(){var __accu0__=[];for(var [k,x]of enumerate(data))__accu0__.append(tuple([x,k]));return __accu0__}();
d.close();
a[b][0]===a;
var driver=webdriver.Firefox(__kwargtrans__({firefox_profile:profile}));
[1,1,1,1,1,1,1];
myShelve.close();
var qs=self.model.autocomplete_queryset();
var line1=f.readline();
outfile.flush();
random.shuffle(choose_from);
np.all(xdiff[0]==xdiff);
self.x2-self.x1+self.y2-self.y1;
export var self=dict.__getitem__(self,key);
pp.savefig();
output.append(curr_date);
argmax(enumerate(py_values));
var background=pygame.Surface(screen.get_size());
lst.py_sort();
max(function(){var __accu0__=[];for(var row of table)__accu0__.append(len(format_field(row[index])));return __accu0__}());
i+=1;
g.write(got);
sys.modules.py_update(function(){var __accu0__=[];for(var mod_name of MOCK_MODULES)__accu0__.append(tuple([mod_name,Mock()]));return py_iter(__accu0__)}());
var lines=list(f);
var a2=a.__getslice__(0,null,1);
a^b;
list(pair(oldList));
x.min(0);
var __left0__=im.size;var w=__left0__[0];var h=__left0__[1];
d[tup[0]]=dict({});
var cj=cookielib.CookieJar();
sys.getsizeof(sys.getsizeof);
tuple([np.argsort(mapper_a),np.argsort(mapper_b)]);
print(s.query(a_alias,b_alias).all());
do_something();
var counts=collections.Counter(test);
np.random.seed(479);
print(win.get_name());
l.append(make_foo(r));
var __left0__=tuple([min(x,y),max(x,y)]);var min=__left0__[0];var max=__left0__[1];
root.focus_force();
export var appstats_CALC_RPC_COSTS=false;
stdscr.keypad(1);
test(0,10,11,12,14,16);
orig_save(self,...args,__kwargtrans__(kwargs));
var y=collections.Counter(x);
f.close();
print(Counter(a)==Counter(b));
var img=np.zeros(tuple([height,width,channels]),__kwargtrans__({dtype:np.uint8}));
self.end_headers();
hsv(float(i)/(len(data)-1));
print(py_typeof(node).__name__);
print(ax.get_xlim());
var a=[];
[50,51,52];
all(function(){var __accu0__=[];for(var line of lines_needed)__accu0__.append(__in__(line,lines)||__in__(line.__getslice__(0,null,-1),lines));return py_iter(__accu0__)}());
self.rows=numpy.delete(self.rows,i,0);
labels.append(line);
export var partslist=good_histograms(nballs,nboxes,minballs,maxballs);
var f=Foo();
mark_safe(json.dumps(object));
asyncio.get_event_loop().run_until_complete(meth(...args,__kwargtrans__(kwargs)));
py_next(b);
do_something_5();
print(s1.zfill(5),s2.zfill(5));
var B=rand(1E4);
print(traceback.format_exc(),__kwargtrans__({file:sys.stderr}));
var port=int(sys.argv[1]);
cameraR.SetPosition(0,0,200);
conn.close();
export var pdfContent=db.BlobProperty();
var word=line.strip();
var line=f.readline();
subplot(212);
G.add_edge(2,4);
all(function(){var __accu0__=[];for(var c of s)__accu0__.append(__in__(c,hex_digits));return py_iter(__accu0__)}());
f.seek(0);
var ax1=plt.subplot(1,2,1);
random.shuffle(iters);
export var only_na=df[~df.index.isin(na_free.index)];
ex.args=tuple([msg])+ex.args.__getslice__(1,null,1);
export var meds=df2.median();

var first_name=models.CharField(__kwargtrans__({max_length:50}));
fo.close();
font.configure(__kwargtrans__({size:size}));
np.transpose(np.array(X.T*(y-X*b)))[0];
var app=wx.App(false);
var context=self.get_context_data();
var q=q.filter(User.id==uid());
print(leaders(xs));
var theta=2*np.pi*np.random.rand(n);
one.click();
radii*exp(complex(0,1)*angles);
tunnel._rport;
pdb.set_trace();
pipe.execute();
build();
export var _auxset=set(a);
self.lock.release();
self.do_egg_install();
data.most_common();
var y=np.array([tuple([0,-5]),tuple([1,0]),tuple([2,5]),tuple([5,20]),tuple([6,25])],__kwargtrans__({dtype:dtype}));
pool.close();
rec_split(s);
exit();
ts.to_pydatetime();
list(in_order(x));
queryset.query.__str__();
server_A_thread.start();
os.wait()[0];
sysconfig.get_platform();
cur.close();
export var http_client=tornado.httpclient.HTTPClient();
var row=py_next(csv.reader([line]));
one_array.append(5);
export var this_row_std=numpy.std(np_row);
r.status_code;
tuple([deepest_list,max_depth]);
baz.__doc__;
var app=Flask(__name__);
print(datetime.datetime.now());
ax.margins(.05);
var browser=webdriver.Firefox();
print(key,item[key]);
var __left0__=np.random.rand(2,Math.pow(N_scattered,2))*2-1;export var x_scattered=__left0__[0];export var y_scattered=__left0__[1];
list(filter(invent_some_convoluted_name,list(range(10))));
Base.metatada.bind=op.get_bind();
stations[w]=i;
-24.1529840248;
-7.87165586175;
-24.9012815104;
-7.44222705099;
-6.25705487929;
-7.141616656;
-15.0906961724;
sd.sleep(duration*1E3);
sys.__stderr__=dummyStream();
self.SaveSettings();
print(i.py_get());
py_new[k].extend(v);
plt.imshow(im);
msg.set_payload(zf.read());
curs.execute(sql,dates+[id]);
var data=json.loads(json_string);
img.view(np.uint8);

var fig=plt.figure();
s.setsockopt(socket.SOL_SOCKET,socket.SO_REUSEADDR,1);
self.other_field=other_field;
var merged=pd.concat(dfs,__kwargtrans__({axis:1}));
var bits=int(max(8,math.log(num,2)+1));
var x=function(){var __accu0__=[];for(var i=0;i<5;i++)__accu0__.append(tuple([i,i*i]));return __accu0__}();
var new_list=[];
tk.Frame.__init__(self,...args,__kwargtrans__(kwargs));
add.apply_async(args,kwargs,__kwargtrans__({task_id:i}));
int_list;
a[2]=55;
export var systems=[];
culled_list;
py_iter([item]);
cb.stateChanged.connect(self.changeTitle);
m.drawcoastlines();
self.nout=0;
print(list(kwargs.py_keys()));
writer.writerow(new_row);
student_tuples.py_sort(__kwargtrans__({key:itemgetter(2),reverse:true}));
Clothing|Menswear|Pants|Pajamas;
var rs=function(){var __accu0__=[];for(var u of urls)__accu0__.append(grequests.post(u,__kwargtrans__({data:params})));return py_iter(__accu0__)}();
print(p.x,p.y);
df;
funcfile.close();
do_something_4();
print(df);
var bucket=conn.get_bucket(your_bucket);
var a=np.array([5,4])[np.newaxis];
text.translate(tbl);
display(Image(__kwargtrans__({filename:imageName})));
var allkey=function(){var __accu0__=[];for(var dictio of alldict)for(var key of dictio)__accu0__.append(key);return set(__accu0__)}();
print(nx.topological_sort(g));
var B=lfilter([a],[1,-b],A);
foo.py;
p.join();
cursor.execute(cql_statement,rename_dict);
export var wipe=Wipe();
export var newTimeStamp=time.mktime(newTimeStamp.timetuple());
self.triangle_down_color=tuple([1,0,1,1]);
matched.append(dict(group));
export var outfilename=os.path.join(path,py_name);
"./P2JSnippets.py";
var __left0__=divmod(n,256);var n=__left0__[0];var d=__left0__[1];
dst.SetProjection(match_proj);
self._queue.join_thread();
var x=np.linspace(0,6,200);
export var shp=b.shape.__getslice__(0,-1,1);
var b=np.zeros(tuple([N,N+1]));
print(repr(isanything));
export var tkw=dict(__kwargtrans__({size:4,width:1.5}));
var c=Counter(function(){var __accu0__=[];for(var [k,v]of list(c.py_items()))if(!__in__(k,bad_words))__accu0__.append([k,v]);return dict(__accu0__)}());
print(soup);
var path=os.path.join(basepath,fname);
ctx.set_source_rgb(1,1,1);
self.web_view.loadFinished.connect(self._load_finished);
print(a);
df.ix[(df.num-x).abs().argsort().__getslice__(0,5,1)];
self._array[self._index];
var f=Foo();
print(books[i].price);
blocks[1][0];
pickle.dump(biverses,arquive);
self.data.__setitem__(key,value);
(function(){var __accu0__=[];for(var k of set(function(){var __accu1__=[];for(var k of workers)__accu1__.append(IPKey(k));return py_iter(__accu1__)}()))__accu0__.append(k.key);return __accu0__})();
print(page.mediaBox.getUpperRight_x(),page.mediaBox.getUpperRight_y());
export var noholes=mh.morph.close_holes(skel);
var file_path=filename.py_split(os.sep);
help(zip);
print(line);
tree[x][y][z].append(value);
var conn=engine.connect();
print(tuple([date,enumerate(events)]));
var mat=lil_matrix(tuple([len(arr),len(arr)]));
ZS.append(row);
self.taskLogger.__exit__(status,retval,task_id,args,kwargs,einfo);
var soup=BeautifulSoup(string);
seq.set_seqs(a.lower(),b.lower());
sys.exit(application.exec_());
var rows=cur.fetchall();
print(leadingzerocounts);
print(datetime.now()-startTime);
new_genpost.save();
G.add_edges_from(function(){var __accu0__=[];for(var x of L2)__accu0__.append([x,temp.py_pop()]);return py_iter(__accu0__)}());
print(list(result_strings));
self.Show(false);
self.py_update(dict(list(parent_element.py_items())));
mylib.Add.argtypes=[c_int,c_int];
float(op);
var reader=PdfFileReader(f);
np.unique(a);
self.response.out.write(self.dump_csv());
var pool=multiprocessing.Pool();
var tmp=tmp.reshape(2,2,4);
hide_spines();
export var num_in_box=models.IntegerField();
fig.show();
var header=function(){var __accu0__=[];for(var [k,v]of header.py_items())__accu0__.append([k,v[0]]);return dict(__accu0__)}();
YOOOO;
print(d[keyList[i+1]]);
var fig=plt.figure();
var S=myfile.read();
var __except0__=MyCustomException();__except0__.__cause__=null;throw __except0__;
gtk.main();
plt.show();
self._password=value;
sum(function(){var __accu0__=[];for(var [[x1,y1],[x2,y2]]of pairs)__accu0__.append(x1*y2-y1*x2);return py_iter(__accu0__)}())/2;
struct.unpack(fmt,astr);
var pdf_reader=PdfFileReader(f);
ax1.set_ylim(0,1);
var m=np.tril(a)+np.tril(a,-1).T;
combined.__setslice__(1,null,2,pos);
client.set_missing_host_key_policy(paramiko.AutoAddPolicy());
var fig=pyplot.figure();
var df=ts.reset_index();
plt.plot(b,a2);
var arr=numpy.array(arr);
print(os.path.abspath(fullname));
print(a.T);
app.exec_();
var X=X.T;
print(data);
var d=json.loads(text);
var p=argparse.ArgumentParser();
self.vLayout=QtGui.QVBoxLayout();
foo();
var data=resp.read();
newfunc;
var pool=Pool(num_items);
p.acquire();
export var button=QtGui.QPushButton(py_name,self);
var title=models.CharField(__kwargtrans__({max_length:40}));
var __left0__=tuple([int(x)+1,int(y)+1,int(z)+1]);var x=__left0__[0];var y=__left0__[1];var z=__left0__[2];
sys.stderr=UTF8StreamWriter(sys.stderr);
var res=client.get_job_status(jr);
p.stdin.write(the_input);
var __left0__=generate_data(nobservations,a,b,c);var f=__left0__[0];var x=__left0__[1];var y=__left0__[2];var z=__left0__[3];
ax.set_xticklabels(row_labels,__kwargtrans__({minor:false}));
true;
tornado.ioloop.IOLoop.instance().start();
A.__setitem__([tuple([0,null,1]),0],np.log(x));
setattr(cls,attr,prop);
var soup=BeautifulSoup(tidy_document(browser.response().read())[0]);
(function(){var __accu0__=[];for(var i=0;i<n;i++)__accu0__.append(lst.__getslice__(round(division*i),round(division*(i+1)),1));return __accu0__})();
temp_csv.seek(0);
signal.alarm(0);
0;
print(len(x.tostring()),len(dumps(x)));
py_typeof(float(s));
export var auth_user=form.get_user();
plt.title(title);
A.__init__(self,...args);
export var sorted_table=function(){var __accu0__=[];for(var row of table)__accu0__.append(function(){var __accu1__=[];for(var j of js)__accu1__.append(row[j]);return __accu1__}());return __accu0__}();
Doc.images.all();
var problems=false;
ax.plot_surface(xx,yy,z,__kwargtrans__({alpha:.2,color:[0,1,0]}));
newImage.paste(im,tuple([x1,y1,x1+old_width,y1+old_height]));
xyB.__setitem__([tuple([0,null,1]),0],xyB.__getitem__([tuple([0,null,1]),0])*(lengthB/(xyB.__getitem__([tuple([0,null,1]),0]).max()-xyB.__getitem__([tuple([0,null,1]),0]).min())));
export var r2=np.hstack(tuple([w,b,w,b,w,b,w]));
var screen_height=root.winfo_screenheight();
var x=np.random.random(1E6);
var unicode_text=f.read();
print(msg.SenderName);
var sel=Selector(response);
MySerializer;

_(calendar.day_name[0]);
GL.glLoadIdentity();
request.add_data(data);
deleteself.thisptr;
export var x2D=x.reshape(-1,n/q,q).transpose(1,0,2).reshape(-1,q);
export var some=function(){var __accu0__=[];for(var _=0;_<1E3;_++)__accu0__.append(random.randrange(1E4));return __accu0__}();
grouped_cc[ki].add(kj);
grouped_cc[kj].add(ki);
true;
pd[0].append(1);
s.any();
var gray=cv2.cvtColor(img,cv2.COLOR_BGR2GRAY);
isinstance(val,int)||isinstance(val,float)&&val.is_integer();
main();
nw[0];
sum(a,[]);
b.__getitem__([tuple([0,null,1]),tuple([0,null,1]),2]);
var val=d[key];
types.FunctionType(new_code_obj,f.__globals__);
var x=np.random.randn(1E3);
data[row[0]]=row.__getslice__(1,null,1);
x.shape+=tuple([1]);
root.withdraw();
ArgumentParser.add_subparsers();
output;
clf();
fig.show();
var x=numpy.array([Foo(),Foo()]);
print(x);
platform.version();
var columns=zip(...cursor.description)[0];
var result=cache.py_get(cache_key);
print(M.shape,Msmall.shape);
clientsocket.send(msg);
self.table=QtGui.QTableWidget();
s.add(a);
var gray=cv2.cvtColor(img,cv2.COLOR_BGR2GRAY);
var vals=np.array([color1,color2],__kwargtrans__({dtype:np.uint8}));
instance.put();
print(msgpack.loads(x));
self._bar;
e.extract();
var result=recursive_dict();
self.oldText.tokens.py_clear();
var app=Flask(__name__);

control.SetPosition(tuple([10,10]));
print(data);
individuals.append(individuals.loc[1]);
self.x+=1;
sizer_1.Add(self.panel,1,wx.EXPAND|wx.ALL,0);
self.workers.release();
self.queue[index];
export var r_ab=np.array([r_a,r_b]);
session.query(Beard,Moustache).select_entity_from(stmt);
self.assertEqual(99,s);
var a=np.array(a);
f.seek(n);
export var _threadmap=dict({});
index.__setslice__(0,-1,null,groups.__getslice__(1,null,1)!=groups.__getslice__(0,-1,1));
var x=np.arange(-5,5);
export var count1=len(shortstrings);
plt.ylim(tuple([1E-20,1E-10]));
var __left0__=tuple([[],[]]);var x=__left0__[0];var y=__left0__[1];
some_code();
var id=Column(Integer,__kwargtrans__({primary_key:true}));
var __left0__=np.histogram(df,__kwargtrans__({bins:bins,normed:true}));var y=__left0__[0];var x=__left0__[1];

logger.propagate=false;
pool.join();
x();
html-page-context(app,pagename,templatename,context,doctree);
export var rcode=response.rcode();
app.exec_();
print(content);
pypitest;
var user=request.user;
print(tmp.index(K[-N]));
elem.send_keys(Keys.RETURN);
server_socket.listen(1);
df;
var __left0__=plt.subplots();self.figure=__left0__[0];self.ax=__left0__[1];
export var node=self.head;
gdb.start_event_loop;
var cur=function(){var __accu0__=[];for(var [j,k]of zip(rows[14],list(range(15))))__accu0__.append([14,k,j]);return __accu0__}();
var __left0__=sp.communicate();var output=__left0__[0];var error=__left0__[1];
var html=response.read();
var y=list(max_elements.py_values());
var s=socket.socket();
self.image=gtk.Image();
scipy.nan;
i+=1;
example();
self.a[-1]=self.z[-1];
var __left0__=plt.subplots(2,1);var fig=__left0__[0];var axs=__left0__[1];
self.mplvl=QtGui.QWidget(Form);
var root=tk.Tk();
df.min(__kwargtrans__({axis:1}));
stack.append(tuple([prev_indent,prev_tree]));
ipython- -no-banner;
dis.show_code(a_long_tuple);
blo+=1;
dic.py_get(key);
os.chdir(savedir);
- - - - - -models.py;
var b=a.copy();
df[1];
print(i);
var i=0;
var __left0__=psub.communicate();export var curlstdout=__left0__[0];export var curlstderr=__left0__[1];
export var column_1=function(){var __accu0__=[];for(var line of f)__accu0__.append(float(line.strip()));return __accu0__}();
map.close();
test.reshape(-1,2);
PrintLn(i);
var __left0__=proc.communicate();var out=__left0__[0];var err=__left0__[1];
_curried;
export var my_template=template.Template(template_string);
sys.argv[1];
random.choice(list(open(WORDS_FILENAME)));
counts[char]+=1;
db.init_app(app);
os.symlink(target,symlink);
file.flush();
temp_rdd.toDF(schema).printSchema();
export var unq_count=np.diff(np.nonzero(unq_first)[0]);
len(sall);
var df=pd.DataFrame(rows,__kwargtrans__({columns:cols}));
rsp.raw._connection.sock.getpeername();
set([y,x,0]);
zip(a,b);
configs/__init__.py;
self.after(4E3,self.draw);
sigmoid(.458);
var fig=plt.figure();
smtp.ehlo();
savetext(filename,a.reshape(1,a.shape[0]));
setattr(namespace,self.dest,py_values);
var comb=itertools.product(uk_rock_stars,uk_pop_stars,us_stars);
var h=np.zeros(tuple([2,2,1]));

ax.plot(matrix.__getitem__([i,tuple([0,null,1])]));
var foo=timeit(foo);
var logger=logging.getLogger();
output_files[i].close();
setup_environ(settings);
10*-1;
paw_code[diff.argmin()];
self.dependency.__enter__();
pygame.event.pump();
session.visit(my_url);
var model=Sequential();
false;
default_font.configure(__kwargtrans__({size:48}));
crawler.start();
output.append(x);
export var comparison_df=pd.DataFrame(__kwargtrans__({index:matrix.index}));
outfile.write(line);
var data=heapq.nlargest(2,enumerate(my_list),__kwargtrans__({key:function __lambda__(x){return x[1]}}));
L.extend(function(){var __accu0__=[];for(var x=0;x<10;x++)__accu0__.append(some_mutable_object);return __accu0__}());
c.setopt(pycurl.MAXREDIRS,5);
text;
ax.set_position(ax._orig_position);
var N=data.shape[1];
var output=np.zeros_like(foo);
var header=function(){var __accu0__=[];for(var _=0;_<header_len;_++)__accu0__.append(py_next(f));return __accu0__}();
var ax=plt.subplot(122);
self.image.url;
delete_bar;
yaml.dump(d,yaml_file,__kwargtrans__({default_flow_style:false}));
myimages.append([imgplot]);
py_next(iterator);
but.pack();
var y_true=np.array([0,1,0,0,1,1,0,1,0]);
func(...args,__kwargtrans__(kwds));
var result=function(){var __accu0__=[];for(var item of set(the_list))__accu0__.append(tuple([item,count(item)]));return __accu0__}();
var model=model.fit(X,y);
var result=[];
sys.stdin.read();
var m=numpy.rot90(m,k);
export var nlist=function(){var __accu0__=[];for(var sub_l of function(){var __accu1__=[];for(var l of blist)__accu1__.append(split_or_not(l));return py_iter(__accu1__)}())for(var x of sub_l)__accu0__.append(x);return __accu0__}();
db.commit();
[0]*-1;
self.flush();
create_browserid_user(kwargs);
var a=[7,14,0,9,19,9];
export var terrf=ax.contourf(xi,yi,height,15,__kwargtrans__({cmap:plt.cm.Blues,alpha:.5}));
var theta=np.linspace(0,2*np.pi,N,__kwargtrans__({endpoint:false}));
export var im_array=np.array(Image.open(im));
[number]*int(factor);
plt.annotate(annotation_string,__kwargtrans__({xy:tuple([.5,.5])}));
export var str2num=(np.fromstring(A,__kwargtrans__({dtype:np.uint8}))-48).reshape(-1,4);

l.count(true)==1;
hashlib.sha1(url).hexdigest().__getslice__(0,10,1);
PyErr_Clear();
export var unfiltered=function(){var __accu0__=[];for(var C of originalList)__accu0__.append(tuple([myFunction(C),C]));return py_iter(__accu0__)}();
my_array.append(e);
ax.add_line(line);
export var xy_pixels=ax.transData.transform(np.vstack([x,y]).T);
(x<0).sum();
var out=np.zeros(tuple([N,shp[0],N,shp[1]]),__kwargtrans__({dtype:int}));
var image=Image.open(image_string);
c.close();
print(args);
leng.count=0;
plt.subplot2grid(tuple([4,4]),[2,0],2,2);
urlparse.urlunsplit(tuple([scheme,netloc,path,qs,anchor]));
len(self._choices);
var ax=fig.gca();
axes[2].hexbin(x,y);
var counts=defaultdict(int);
main();
self.toolbar.addAction(action);
o.close();
export var interp_i=np.linspace(0,i.max(),5*i.max());
var __left0__=tuple([x.difference(y),y.difference(x)]);var x=__left0__[0];var y=__left0__[1];
f.write(png_recovered);
var h=np.zeros(tuple([2,2,2]));
var img=np.array(img);
fcntl.fcntl(fd,fcntl.F_SETFL,flags_save);
export var repeats=np.diff(np.r_.__getitem__([jump_indices,[N]]));
ax.set_xticks(xlabels);
var fig=plt.figure();
tf.add_n(function(){var __accu0__=[];for(var t of list_o_tensors)__accu0__.append(tf.nn.l2_loss(t));return __accu0__}());
var soup=BeautifulSoup(r.text);
export var a_tr=zip(...a_padded);
print(row);
i+=1;
print(py_next(csv.reader([c])));
self.store.append(data);
self.setLayout(layout);
apps2;
len(L1)==len(L2)&&sorted(L1)==sorted(L2);
df.ix[row_pos];
list.focus(py_items[0]);
subprocess.check_call(cmd.py_split());
self._bar=value;
(function(){var __accu0__=[];for(var [k,g]of grouped)__accu0__.append(function(){var __accu1__=[];for(var c of g)__accu1__.append(py_next(it));return __accu1__}());return __accu0__})();
unquote(unquote(s));
var newlist=[];
ip.release();
logging.basicConfig(__kwargtrans__({stream:sys.stderr}));
image_y.__setitem__([tuple([0,null,1]),tuple([0,null,1])],image_yuv.__getitem__([tuple([0,null,1]),tuple([0,null,1]),0]));
ip.close();
any(it)&&!any(it);
var x=numpy.linspace(0,len(y)+2,100);
openlist.put(tuple([heuristicf(neighbor),node(neighbor,current.g+1,current)]));
var a=np.array([true,true,true,false,false]);
q.append(py_next(i));
main();
print(a);

rpy2.robjects.vectors.DataFrame(od);
ex[0];
urllib.request.urlopen(quoted_url);
sys.path.insert(0,parentdir);
export var option=EuropeanOption(payoff,exercise);
self.searchobj;
export var baset=datetime.now();
os.remove(path);
self.deal();
string.Formatter().parse(s);
l.append(self.gears[x][index]);
var user_input=py_default;
plt.rgrids(list(range(5,20,5)),__kwargtrans__({angle:290}));
var b=b.add(1).cumprod();
export var df_subset=df[df.B==1&df.D>5];
sum(function(){var __accu0__=[];for(var c of s)__accu0__.append(utf8_char_len(c));return py_iter(__accu0__)}());
math.hypot(p1[0]-p2[0],p1[1]-p2[1]);
n+=1;
os.setresuid(0,0,-1);
exit();
print(dot(M0,v));
cr.set_source_rgba(0,0,0,1);
var result=joiner.join(result);
var results=model.fit();
ax.set_ylim(-10,10);
print(cur.fetchall());
var df2=df1.div(df1.sum(1),__kwargtrans__({axis:0}));
sys.__stdout__=dummyStream();
thefile.seek(-len(line),1);
dict.__setitem__(self,key,self.default_factory(key));
var result=func(...args);
print(json.dumps(d));
var client=paramiko.SSHClient();
var response=HttpResponse();
self.add(data);
self.save_m2m();
var output=StringIO.StringIO();
var process=multiprocessing.Process(__kwargtrans__({target:foo,args:tuple([to_self])}));
df;
print(len(cj));
var fig=plt.figure();
print(row.__getslice__(1,12,1));
var a=np.random.uniform(0,10,__kwargtrans__({size:10}));
doSwim(where,why,__kwargtrans__(kwargs));
result.append(word);
sys.exit(1);
var y=numpy.array(x);
var f=StringIO.StringIO();
shmdt(shmid);
dict([[buildout,software-parts]]);
var c=b.copy();
self.button1.clicked.connect(self.handleButton);
abs((d2-d1).days);
var ax=plt.gca();
self.lock.release();
print(line);
self.tstore.py_clear();
Mailbox.user(user);
Image();
cache[object_to_cache]=object_to_cache;
df.t.dt.normalize();
deletegraph[i];
print(isinstance(MyClass(),MyClass));
print(py_typeof(fresult.col1.iat[2]));
export var ncol=len(traindf.rdd.map(function __lambda__(r){return r.image}).first());
count2+=1;
var u=np.sin(np.pi*x)*np.cos(np.pi*y)*np.cos(np.pi*z);
var parser=ElementTree.XMLParser(__kwargtrans__({recover:true}));
handle.write(block);
pylab.show();
var app=Flask(__name__);
var z=[0,0,0];
export var first_user=User.objects.all()[0];
ax.margins(.01);
export var tdomain=df2domain(df);
var words=sum(function(){var __accu0__=[];for(var c of s)__accu0__.append(c.isalpha());return py_iter(__accu0__)}());
var __left0__=server_sock.accept();export var client_sock=__left0__[0];export var client_addr=__left0__[1];
cv.SetImageROI(newCanvas,tuple([image.width,0,img0.width,img0.height]));
a.call_me();
var L=list(range(0,101,10));
print(np.max(a,__kwargtrans__({axis:axis})));
var result=np.empty(tuple([27,27]));
plt.show();
ax.set_yticks(T);
print(sess.run(parsed,__kwargtrans__({feed_dict:dict([[raw,my_data]])})));
var r=np.sqrt(Math.pow(x,2)+Math.pow(y,2));
var soup=bs(html);
a[2]===b[-2];
var now=time.mktime(time.gmtime());
self.cursor.close();
reverse_d[value]=key;


var cursor=connection.cursor();
output.extend(seq.__getslice__(1,null,1));
btn.Bind(wx.EVT_BUTTON,self._onShowCntrls);
pprint.pprint(dict(groups));
export var electronDensity=eval(vName);
var __left0__=np.py_sort(np.random.randint(size+1,__kwargtrans__({size:tuple([2,size])})),__kwargtrans__({axis:0}));var b=__left0__[0];var c=__left0__[1];var indices=__left0__;
datetime.now();
s+=A[k]*B[k];
the_dict;
self.failureResultOf(self.o.failure()).trap(ConnectionRefusedError);

var output=function(){var __accu0__=[];for(var x=0;x<6;x++)__accu0__.append(0);return __accu0__}();
_.flatten();
fruits[1];
tuple([code_object.co_stacksize,code_object.co_flags,code_object.co_code]);
print(mail.getwelcome());
df.groupby(0).mean();
pythons_psutil.append(p);
var r=function(){var __accu0__=[];for(var i=1;i<100;i++)__accu0__.append(ran.random());return __accu0__}();
export var then=datetime(2016,1,1,0,0,0);
export var gt=ds.GetGeoTransform();
var __left0__=scipy.signal.dstep(sysd_ss);var t=__left0__[0];var y=__left0__[1];
self.locator.sub(self._doreplace,s);
socketIO.wait(__kwargtrans__({seconds:1}));
time.sleep(10);
var start=time.clock();
self.fields.py_pop(field_name);
main();
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
export var auth=urllib.request.HTTPBasicAuthHandler();
foo(...args,__kwargtrans__(some_args));
var reader=csv.DictReader(csvfile);
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
process.stderr.close();
var username=models.CharField(__kwargtrans__({max_length:100}));
var b=a.__getslice__(0,null,1);
timezone.make_aware(date,timezone.utc);
text.see(END);
var env=Environment();
self.__copy__();
export var solution2=(-b+cmath.sqrt(d))/(2*a);
var p=Pool();
var data=data.reshape(len(data)/num_channels,num_channels);
var today=date.today();
column_entry.show();
self.local_storage._save(filename,content);
var line=sys.stdin.readline();
wrapper;
plt.gray();
bSizer.Add(button5,0,wx.ALL,5);
print(data[np.r_.__getitem__([np.diff(id),true]).astype(np.bool)]);
var a=datetime.datetime(2015,10,1);
my_list.append(float(item[0]));
tabrows.append(row);
self.thread.setDaemon(true);
var temp=scaler.transform(temp);
time.sleep(5);
pprint.pprint(res);
var df=DataFrame(d);
PyErr_SetString(p_eigen_python_error,msg.c_str());
writer.writerow(row+[message]);
var __left0__=np.meshgrid(x,x);var X=__left0__[0];var Y=__left0__[1];
var utc_dt=datetime.utcfromtimestamp(ts);
app.internalerror=myinternalerror;
d[i]+=1;
print(len(s));
Py_DECREF(py_string);
heapq.heappop(self._data)[1];
br.set_cookiejar(cj);
os.remove(os.path.join(root,py_name));
print(scapy.__file__);
var z=np.tensordot(p2,x,__kwargtrans__({axes:tuple([[0,2],[0,1]])}));
export var rect_one=pygame.Rect(x_pos,y_pos,10,10);
h.py_setdefault(x,[]).append(y);

var x=np.arange(W);
Subscript;
samples[random.randint(0,n_samples-1)]=line;
notifier.loop();
var test=df.drop(train.index);
sorted([1,N,0,9999,sys.maxsize]);
tuple(a);
qlock.acquire();
export var fh=os.open(outfile,os.O_CREAT|os.O_WRONLY,perm);
export var customer=models.ForeignKey(Pizza);
proc.terminate();
var X=np.random.normal(__kwargtrans__({size:N}));
var g=f();
print(x);
var diffs=(df.sign.diff()!=0).cumsum();
pylab.show();
zip(a,b);
var __left0__=image.readline().py_split();export var size_width=__left0__[0];export var size_height=__left0__[1];
NSERC_CB04_A0401;
session.commit();
export var mytuple=tuple(mylist);
(function(){var __accu0__=[];for(var line of foo)if(!line.isspace())__accu0__.append(line.strip());return __accu0__})();
julia>ma.is_masked(x);
498E8;
4E30;
var frame=inspect.currentframe();
print(list(multi_d.py_items()));
geocalc(-6.508,55.071,-8.886,51.622);
self.username=username;
var a=np.arange(10);
var data=etree.parse(fname);
var filename=traceback.tb_frame.f_code.co_filename;
plt.draw();
interpreter.process_page(page);
var p=Process(__kwargtrans__({target:multiply,args:tuple([5,4,queue1])}));
d.year;
print(np.array(data));
self._name;
array(function(){var __accu0__=[];for(var [y,x]of zip(diff(y1),diff(x1)))__accu0__.append(math.atan2(y,x));return __accu0__}());
cap.set(cv.CV_CAP_PROP_FRAME_HEIGHT,int(y));
print(__mod__(a,tuple(b)));
export var handler500=Custom500View.as_view();
var r=np.linalg.norm(R);
file.close();
time.sleep(6);
demo_kalman_xy();
a+=b_ext.__getslice__(start_idx[j],start_idx[j]+n,1);
count(0,0);
sets.append(x);
a.py;
self.handlers[event].add(callback);
sys.exc_clear();
self.__initialized=true;
var ax=plt.gca();
A.__setitem__([tuple([0,null,1]),1],1);
var b=np.array([0,1,0,1,0,1]);
print(tuple([a,b,c]));
var sc=proprocessing.StandardScaler().fit(X);
main();
var ax=plt.gca();
self.md5.py_update(o);
print(df.max(__kwargtrans__({axis:1})));
signal.signal(signum,_gogentle);
item.setPos(position.x(),position.y());
print(byall());
var fig=pyplot.figure();
self.dictList[item][self.key];
d[k]=d[k][0];
string.__getslice__(i,i+len(keyword)+5,1);
df.show();
callback(req);
util.run_wsgi_app(application);
export var module_filetype=os.path.splitext(module_filename)[1];
text.isdigit()?int(text):text;
plt.grid(true);
var cur=con.cursor();
TextConverter.__init__(self,...args,__kwargtrans__(kwargs));
ax.add_patch(patch);
cs.send(c+1);
self.thisptr.getA();
self.addItems(self.list_two);
export var rowsums=pd.concat([df.sum(__kwargtrans__({axis:1}))]*2,__kwargtrans__({ignore_index:true,axis:1}));
self.splitter.addWidget(self.view);
stringFrom(v);
print(list(splitter(str,split_points)));
p.save();
my_thread.join();
var first_day=dt.py_replace(__kwargtrans__({day:1}));
var df1=df1[~dupe_rows];
py_items.py_sort(__kwargtrans__({key:py_keys.__getitem__}));
print(function(){var __accu0__=[];for(var r of raw)__accu0__.append(r/s);return __accu0__}());
generate_random_data(latitude,longitude,5);
var app=Flask(__name__);
export var alias=db.StringProperty();
var C=M.T.reshape(1,ncols,1,nrows)*M.T.conj().reshape(ncols,1,nrows,1);
var x=np.ma.array(x,__kwargtrans__({mask:mask}));
var m=l+function(){var __accu0__=[];for(var i of l)__accu0__.append(i+1);return __accu0__}();
self.value;
var fig=plt.figure();
var __left0__=np.meshgrid(np.arange(10),np.arange(10));var x=__left0__[0];var y=__left0__[1];
func(...args,__kwargtrans__(kwargs));
print(m.groups());
var r=requests.py_get(login_url,__kwargtrans__({cookies:jar}));
setup(__kwargtrans__(configuration));
var freqs=np.fft.fftfreq(len(x));
var cursor=cnxn.cursor();
var soup=BeautifulSoup(resp.get_data());
export var time_end=time.time();
np.diff(np.where(np.diff(np.hstack([false,a,false])))[0]).__getslice__(0,null,2);
var qs=cgi.parse_qs(urlparse.urlparse(url)[4]);
parseLog(sys.argv[1]);
tuple([location,tuple([latitude,longitude])]);

print(match.groups());
x*x;
tz.normalize(dt.astimezone(tz)).time();
export var B60=A60+B59;
self.axes.plot(t,s);
np.abs(A.__getitem__([tuple([0,null,1]),np.newaxis])-B);
print(list(Squares(5,50)));
var reader=unicode_csv_reader(open(filename));
cal_window.stick();
var result=[];
export var unpickledlist=pickle.load(f);
image.save(output,format);
py_keys.add(entity.getKey());

list(test);
-ntrees;
[];
out_file.write(in_data);
os.close(fin);
int(x);

abs(py_new-old).max();
print(func());

logger.setLevel(level);
var __left0__=np.ogrid.__getitem__([tuple([0,5,1]),tuple([0,5,1])]);var i=__left0__[0];var j=__left0__[1];
sess.run(train_step,__kwargtrans__({feed_dict:dict([[learning_rate,.01]])}));
self.child.start();
pubkey.assign_rsa(rsa);
export var a180=np.rot90(a.T,2).T;
sorted(files,__kwargtrans__({key:numericalSort}));
var fig=plt.figure(__kwargtrans__({figsize:tuple([5,5])}));
pool.apply_async(f,__kwargtrans__({args:tuple([i])}));
client.settimeout(60);
B().a1();
(function(){var __accu0__=[];for(var k of set(x).union(y))__accu0__.append([k,x.py_get(k,[])+y.py_get(k,[])]);return dict(__accu0__)})();
response;
var src_dt=src_tz.localize(dt);
pylab.colorbar();
pdb.set_trace();
var y=lab.__getitem__([tuple([0,null,1]),tuple([0,null,1]),tuple([1,null,1])]);
print(t.timeit(1E3));
E(X,X>Y,__kwargtrans__({evaluate:false}));
(function(){var __accu0__=[];for(var i=0;i<array.len;i++)__accu0__.append(tuple_array[i]);return __accu0__})();
var __left0__=line.py_split();var index=__left0__[0];var word=__left0__[1];
tk.Frame.__init__(self,parent);
df;
list.append(self,a);
do_something_with_connection(b);
print(bv);
var driver=webdriver.WhatEverBrowser();
print(char,char.isalpha());
writer.write(tup);
var result=seq.index(first_val);
NULL;
self.layout.addWidget(self.listWidget);
var json_data=json.dumps(response);
cand[i]+=1;
var cipher=AES.py_new(self.key,AES.MODE_CBC,iv);

len(s);
var c=db.cursor();
self.pushes;
export var basket=dict(basket_one,__kwargtrans__(basket_two));
draw.ellipse(tuple([0,0,rad*2,rad*2]),__kwargtrans__({fill:255}));
var ax1=fig.add_subplot(111);
var model=model.fit(X,y);
var opener=urllib.request.build_opener(authhandler);
export var copy_my_list=copy.deepcopy(my_list);
var df2=pd.DataFrame(py_values,__kwargtrans__({index:index,columns:columns}));
genes_dict[row[0]]=row.__getslice__(1,null,1);
var form=UploadFileForm(request.POST,request.FILES);
var a=datetime.datetime(2011,8,1);
export var wi=x.Whateveri(5);
df.head();
workbook.add_worksheet(sheet_name);
true;
ax.text(p.get_x()+.05,height+1,df.columns.levels[1][i]);
fig.tight_layout();
var g=df.columns.to_series().groupby(df.dtypes).groups;
_find_root(os.path.dirname(start),stop);
var diff=difflib.ndiff(open(file1).readlines(),open(file2).readlines());
NULL;
export var headers=df.dtypes.index;
PythonEngine.Shutdown();
decorator;
time.sleep(wait_time);
s.set_xticks(ind+.5);
var cols=tuple(df.columns);
var a=dict(function(){var __accu0__=[];for(var x of foo)__accu0__.append(py_next(py_iter(x.py_items())));return __accu0__}());
ceiling_key(d,2);
f.read();
offset+=len(line);
export var unaware=datetime.datetime(2011,8,15,8,15,12,0);
f.close();
(np.arange(n)>=arr.__getitem__([tuple([0,null,1]),np.newaxis])).astype(int);
var fd=sys.stdin.fileno();
main();
var s=pd.Series(hourly_data.flatten(),__kwargtrans__({index:new_ind}));
set_lang(LANG,__kwargtrans__({pylons_config:conf}));
tuple([1,2,1]);
remote_api.get_cached_name(user.id);
var colors=plt.cm.jet(np.linspace(0,1,10));
irenL.SetRenderWindow(renWinL);
var c=a/(b*1);
numpy.save(f_handle,arr);
plt.contourf(data,__kwargtrans__({cmap:cmap,levels:levs}));
export var exist=cursor.fetchone();
lst.append(d);
var logger=logging.getLogger(__name__);
(function(){var __accu0__=[];for(var [conv,val]of zip(castings,line))__accu0__.append(conv(val));return __accu0__})();
dis.dis(make_adder);
[.67008007,.65984005];
self.loop.run_forever();
var p=Process(__kwargtrans__({target:do_work,args:tuple([work,results])}));
(function(){var __accu0__=[];for(var [i,j]of enumerate(x.__getslice__(0,-1,1),1))if(j!=py_next(i_x))__accu0__.append(i);return __accu0__})();
var a=np.arange(size_a).__getslice__(0,null,-1);
var __left0__=os.path.splitext(filename);export var modulename=__left0__[0];var ext=__left0__[1];
time.sleep(5);
export var newargs=newargs.__getslice__(2,null,1);
var app=QApplication(sys.argv);
export var timeout=5;
var my_field=models.CharField();
export var Xcum=pd.rolling_sum(X,10).__getslice__(9,null,1);
var __left0__=np.array(ndata).T;var nx=__left0__[0];var ny=__left0__[1];
var out=np.py_split(C,np.flatnonzero(R.__getslice__(1,null,1)>R.__getslice__(0,-1,1))+1);
var m=np.max(lens);
signal.signal(signal.SIGINT,self._handle_SIGINT);
(function(){var __accu0__=[];for(var c of forms[4].controls)__accu0__.append(tuple([c.py_name,c.get_items()]));return __accu0__})();
e==N||i>0&&L[i-1]==N||i<len(L)&&L[i+1]==N;
self.obj=obj;
row.Add(m_close,0,wx.ALL,10);
test(...args,__kwargtrans__(kwargs));
strings.py_sort();
var d=dict({});
inputElement.send_keys(Keys.ENTER);
print(a,b,c);
f.close();
print(max_seq_len);
lookup.sub(function __lambda__(x){return trans[x.group()]},string);
self._table.append(self._dealer.nextCard());
changes.extend(valchange(d1[k],d2[k],k));
x.max(0);
rPM.restype=wintypes.BOOL;
var it=heapq.nlargest(20,enumerate(allrows),__kwargtrans__({key:function __lambda__(x){return x[1][2]}}));
i+=1;
print(list(py_reversed(astr.translate(deleter).py_split())));
var __left0__=ax.get_legend_handles_labels();var handles=__left0__[0];var labels=__left0__[1];
sum(function(){var __accu0__=[];for(var i=0;i<1E6;i++)if(str(i)==str(i).__getslice__(0,null,-1))__accu0__.append(1);return py_iter(__accu0__)}());
cal.events.add(event);
var rsa=RSA.load_pub_key_bio(bio);
plt.plot(x,p);
var d=dict(zip(a,b));
(1+erf(x/sqrt(2)))/2;
oodict[line.__getslice__(0,7,1)]=line.__getslice__(12,null,1);
process(chunk);
self.NEWATTRS=[];
self.HTMLDATA=[];
var a=2;
np.concatenate(ar);
export var is_admin=models.NullBooleanField(__kwargtrans__({py_default:false,blank:true,null:true}));
export var parsed_args=parser.parse_args();
var soup=BeautifulSoup(html);
export var av_max_dist=float(sum(max_distanace_list)/len(max_distanace_list));
export var sqrt=inverse(function __lambda__(x){return Math.pow(x,2)},function __lambda__(x){return 2*x});
var y=[1,2,0,1,1,2];
var people=list(people_dict.py_values());
x[slice1][slice2];
c.sum()/c.size;
decorator;
min(function(){var __accu0__=[];for(var i of iList)__accu0__.append(i.number);return py_iter(__accu0__)}());
export var MIGRATION_MODULES=DisableMigrations();
seen.add(line);
plt.axis([-50,50,0,1E4]);
GetLogicalDrives.call();
print(f());
a.get_position().bounds;
out_view[i]=in_view[i];
self.panel.SetSizer(sizer);
print(random_numbers(5,100));
a.str;
shutil.move(source,destination);
self.lock.release();
__all__[k]=my_decorator(v);
NULL;
var reader=csv.DictReader(StringIO(testdata));
var output=json.load(sys.stdin);
random.seed(42);
help(png);
var fields=list(fields);
var files=function(){var __accu0__=[];for(var file of files)__accu0__.append(open(file,mode));return __accu0__}();
self.load(buffer,size);
device.close();
py_iter([]);
self.layout.add_widget(self.canvas_widget);
var response=urllib.request.urlopen(req);
var result=p.wait();
var __left0__=ax1.get_legend_handles_labels();var lines=__left0__[0];var labels=__left0__[1];
print(tuple([fully_qualified(f),f.location]));
print(ted1(df));
var y=scipy.signal.lfilter(h,1,x);
print(i,elem);
multiprocessing.active_children();
web.input(__kwargtrans__(kwargs));
var lines=[];
var a=numpy.zeros(Math.floor(lnum.bit_length()/8)+1,__kwargtrans__({dtype:numpy.uint8}));
true;
mat1.append(temp);
func(...arg,__kwargtrans__(kwarg));
np.sum(v[r<=10]);
print(line);
use_setuptools();
print(np.real(roots[i]));
foo.b;
var a=Fraction(1,2);
var foo=Foo();
var encoded=base64.b64encode(image_binary_data);
var im=Image.fromarray(np.uint8(cm.gist_earth(myarray)*255));
write_f.close();
py_next(iterator);
self.threads[i].start();
var data=np.fromfile(__kwargtrans__({file:fd,dtype:np.double})).reshape(shape);
array.__setitem__([i,j],0);
__in__(word1,rhyme(word2,1));
point(self.x+oth.x,self.y+oth.y);
app.exec_();
canv.pack();
ax.plot(list1);
export var l_result=function(){var __accu0__=[];for(var [x,y]of l_counts)__accu0__.append(y);return __accu0__}();
p[2]=q[2];
var sums=data_in_group.sum(__kwargtrans__({axis:1}));
plt.show();
export var diam_out=np.maximum.reduceat(dists,shift_idx);
sorted(strings);
todatetime(endtime)-todatetime(starttime);
ax2.set_yticks(numpy.arange(y1-1,y2+1,.5));
[tuple([0,4]),tuple([22,6])];
var c=a.cumsum();
stdscr.keypad(0);
var a=list(range(10));
result[length]=dict(function(){var __accu0__=[];for(var [k,v]of groups)__accu0__.append(tuple([k,v]));return py_iter(__accu0__)}());
numpy.sin(value);
var objects=CustomManager();
self.buffer.write(data);
export var df_asint=df.astype(int);
var diff=zfit.__getitem__([tuple([0,null,1]),tuple([0,-1,1])])-zfit.__getitem__([tuple([0,null,1]),tuple([1,null,1])]);
export var sym_diff=function(){var __accu0__=[];for(var item of itertools.chain(a,b))if(!__in__(item,intersec))__accu0__.append(item);return __accu0__}();
var out=100*np.nansum((a.__getitem__([tuple([0,null,1]),R])-a.__getitem__([tuple([0,null,1]),C]))/a.__getitem__([tuple([0,null,1]),C]),0);
export var myhost=os.uname()[1];
print(datetime.utcfromtimestamp(ts));
df;
cursor.execute(query_string,query_args);
list(itertools.zip_longest(...uneven));
self.__getitem__(key);
export var seq2=[1,2,4,5,6,8,9,10];
[1,2];
print(x);
export var imgBothH=np.hstack(tuple([a,b]));
f1.flush();
axe.set_xticks((np.arange(0,2*n_ind,2)+1/float(n_df+1))/2);
q.put(ret);
main();
t.start();
dis.dis(foo.__code__.co_consts[1].co_consts[2]);
tour;
var id=db.Column(db.Integer,__kwargtrans__({primary_key:true}));
map(function __lambda__(range){return a.__getslice__(range[0],range[1],1)},zip(start,end));
ch1.send(ch2);
var t=np.arange(10);
set(first).intersection(...others);
export var first_dict=dict(function(){var __accu0__=[];for(var [v,ks]of by_val)__accu0__.append(tuple([ks[0],v]));return py_iter(__accu0__)}());
pool.join();
file.seek(here,os.SEEK_SET);
sleep(.1);
var tokens=a.py_split();
dict(function(){var __accu0__=[];for(var pair of list(data.py_items()))__accu0__.append(map(ascii_encode,pair));return py_iter(__accu0__)}());
table.setColumnWidth(1,80);
s.connect(tuple([HOST,PORT]));
mask.shape;
conn.begin();
query.py_split();
var nk=set(a).intersection(b);
var content=f.read();
pygame.quit();
resp.geturl();
p.map(processChunk,li);
time.sleep(1);
export var outfile=os.path.join(dir,py_name);
print(s);
export var wkspFldr=os.path.dirname(existGDBPath);
var i=np.array(list(range(4)).__getslice__(0,null,-1)*6).reshape(a.shape);
var df2=df.loc[np.repeat(df.index.py_values,df.n)];
var result=pd.DataFrame(names_and_values);
layout.save();
self._tunnel();
find_nearest_above(np.array([0,1,1.4,-2]),-1.5);
print(tuple([i,count_nicematrices(i,i)]));
var aux=matriz;
x+1;
self.test=record_log(self.logs)(self.test);
self.inspector.hide();
export var child=os.fork();
var foo=Foo(mock_helpers);
sys.exit(-1);
tuple([[1,0,0,0,0]]);
export var n_eq=A.shape[1];
f();
var rsa=RSA.load_key_bio(bio);
clientSocket.send(msg.encode());
v.__setslice__(0,null,null,v-1);
var t=Team.objects.py_get(__kwargtrans__({pk:168}));
var fig=plt.figure();
print(domain.group());
var painter=QtGui.QStylePainter(self);
this.all();
aw2.but.clicked.connect(update_plot);
cb.move(20,20);
export var Red=RGBint>>16&255;
print(tag.text);
var qs=MyClass.objects.all();
map(function __lambda__(index){return get_column(pyQueryRow,index)},range(0,12));
r.findall(x);
var __left0__=array.shape;export var nindex=__left0__[0];var height=__left0__[1];var width=__left0__[2];export var intensity=__left0__[3];
var doc=etree.fromstring(xml);
print(x[i]);
p.tags.all();
export var concat_list=function(){var __accu0__=[];for(var i of ar)for(var j of i)__accu0__.append(j);return __accu0__}();
var p=function(){var __accu0__=[];for(var i=0;i<len(p);i++)__accu0__.append(sum(p.__getslice__(0,i,1)));return __accu0__}();
var d=deepcopy(d);
any(function(){var __accu0__=[];for(var x of MyList)__accu0__.append(__in__(x,MyDict));return py_iter(__accu0__)}());
cython<cython_file&&cython_file>- -embed;
print(line);
tuple([k,self.__dict__.py_pop(k,d)]);
sys.exit(app.exec_());
df.info();
data[0];
self.reporter.on_close(self.stats,dict({}));
var c=np.array(function(){var __accu0__=[];for(var [i,element]of enumerate(a))if(mask[i])__accu0__.append(element);return __accu0__}());
xlock.release();
var writer=csv.writer(ftmp);
export var cost_ij=train_model(data,target);
var skel=np.uint8(skel);
export var ADDRESS1=15298676;
export var tai_epoch_as_tai=datetime(1970,1,1,0,0,10);
self.window.show();
export var vertical=function(){var __accu0__=[];for(var i=0;i<h;i++)__accu0__.append(img.__getitem__([i,int(w/2)]));return __accu0__}();
first_digits[number];
a.get_x();
print(htmldiff(doc1,doc2));
export var FALSE=0;
result.py_update(mult_comb(tuple(factors2)));
var parser=argparse.ArgumentParser();
QtCore.QRectF(0,0,w,h);
var df=pd.DataFrame(np.random.random(tuple([4,4])));
plt.figure();
cls();
tostr(toval(s)+1,minlen);
it.ifilter(function __lambda__(x){return unique(function(){var __accu0__=[];for(var b of x)__accu0__.append(b.c);return __accu0__}())},combos);
viewer.kill();
loop.run_forever();
var b=mechanize.Browser(__kwargtrans__({history:NoHistory()}));
tuple([_HEXDEC[triplet.__getslice__(0,2,1)],_HEXDEC[triplet.__getslice__(2,4,1)],_HEXDEC[triplet.__getslice__(4,6,1)]]);
fp.close();
rdd.filter(function __lambda__(line){return line!=header});
setup_envion(settings);
hessian(x);
export var base_subparser=argparse.ArgumentParser(__kwargtrans__({add_help:false}));
var window=Tk();
cls.change_mro=true;
var output=po.communicate()[0];
r.url;
bool(aware_dt.dst());
var id=Column(Integer,__kwargtrans__({primary_key:true}));
pypi;
print(dt.item());
s;
var form=QuestionForm(request.POST,__kwargtrans__({instance:question}));
stack.append([i]);
day_list.index(inp);
client.close();
AC_PREREQ([2.69]);
signal.signal(signal.SIGALRM,signal.SIG_IGN);
webbrowser.open(fetchUrl);
myOjbect.doStuf().doMoreStuf().goRed().goBlue().die();
all_messages.extend(rs);
var application=config.make_wsgi_app();
print(0);
source.close();
pool.close();
data.py_sort();
export var img1=cv2.imread(img1_path,cv2.CV_LOAD_IMAGE_GRAYSCALE);
var ind=np.argpartition(a,-4).__getslice__(-4,null,1);
str(timedelta(__kwargtrans__({seconds:c.seconds})));
export var hdu=fits.open(img);
var __left0__=p.communicate();var output=__left0__[0];var err=__left0__[1];
jsonify(__kwargtrans__({results:d}));
print(best1);
var __left0__=cmdp.communicate();self.__output=__left0__[0];self.__error=__left0__[1];
var y=np.linspace(0,2*np.pi,100).reshape(-1,1);
print(repr(line));
var texts=function(){var __accu0__=[];for(var x of posts)__accu0__.append(x[1]);return py_iter(__accu0__)}();
r.request.send(__kwargtrans__({anyway:true}));
a._log;
exec(f.read(),__all__,locals());
duration(video_file_path);
cvtColor(src,gray,CV_BGR2GRAY);
var df2=pd.DataFrame(df);
df;
HttpResponse(t.render(Context()));
main();
timeout.run();
var profile=user.get_profile();
self.wfile.flush();
export var out_id=np.union1d(a.__getitem__([tuple([0,null,1]),0]),b.__getitem__([tuple([0,null,1]),0]));
np.PyArray_ITER_NEXT(ito);
t.start();
g(f(...a,__kwargtrans__(k)));
print(s);
triplets[iT].append(listB[-1]);
t*p/c;
my_list.append(func);
print(df);
new_inlist.py_sort(__kwargtrans__({key:function __lambda__(x){return x.py_split(separator)[1]}}));
var root=logging.getLogger();
server.shutdown();
var my_dict=dict({});
- -Important;
df;
yourThread.cancel();
Testing(2/2);
var B=[0,0,1,1,1,1];
print(output_dict);
problem.main();
export var h1=urllib.request.urlopen(req,__kwargtrans__({timeout:10}));
var fig=plt.figure();
pd.Series(s.py_values[z],s.index.py_values[z],__kwargtrans__({py_name:s.py_name}));
export var my_pdf=gaussian_kde(osservazioni,.1);
var C=np.array(function(){var __accu0__=[];for(var v of B_blocks)__accu0__.append(function(){var __accu1__=[];for(var m of v)__accu1__.append(np.linalg.eigvals(m));return __accu1__}());return __accu0__}());
print(browser.page_source);
print(seq.__getslice__(1,null,2));
var results=DataFrame(results,__kwargtrans__({index:df.columns,columns:df.columns}));
export var CELERYD_HIJACK_ROOT_LOGGER=false;
var __left0__=p.communicate();var stdout=__left0__[0];var stderr=__left0__[1];
var filename=sys.argv[2];
queue.put(tuple([tag,line]),__kwargtrans__({block:true,timeout:60}));
csX.m=X.shape[0];
var sorter=np.argsort(perm.__getslice__(0,null,-1));
f.seek(start+1);
self.de.setText(str(self.current));
f.close();
list(combinations(A,2));
var file_path=os.path.dirname("./P2JSnippets.py");
py_metatype.__new__(cls,py_name,bases,dct);
var wb=Workbook();
var fig=plt.figure();
var __except0__=NotImplementedError;__except0__.__cause__=null;throw __except0__;
getcontext().prec=100;
py_next(g);
imp.load_source(py_name,path);
var driver=webdriver.Firefox(__kwargtrans__({firefox_profile:fp}));
var y=data.__getitem__([tuple([0,null,1]),1]);
server.sendmail(FROM,TO,message);
Py_DECREF(module_name);
var cursor=cnx.cursor(__kwargtrans__({named_tuple:true}));
rank+=seq.__getslice__(1,null,1)?permutation_rank(seq.__getslice__(1,null,1)):0;
os.rmdir(dir);
print(a_list);
print(np.array(sums).shape);
var mylist=ListField();
d[y].append(x);
data.append(tuple([batting[1],player,batting[0],batting[2]]));
figure(__kwargtrans__({figsize:tuple([8,8])}));
var parser=argparse.ArgumentParser();
urlparse.parse_qs(urlparse.urlsplit(url).query);
str(self.py_name)==str(other.py_name);

treeview_column.set_widget(label);
var my_list=flat(d);
numpy.array([x[xs],x[ys]]).T;
export var topsize=pqueue[0][1];
logger.setLevel(logging.NOTSET);
plt.plot(np.arange(100));
var ax1=fig.add_subplot(1,2,2);
var p=mp.Process(__kwargtrans__({target:Simulation,args:tuple([inqueue,output])}));
export var sub_strings=sorted(sub_strings,__kwargtrans__({key:len,reverse:true}));
canvas.restoreState();
plt.show();
ax.grid();
gpsgvqsbixtwyakpgefrhntldsjqlmfvyzwjoykhsapcmvjmar;
p.terminate();
stdin.close();
var opener=urllib.request.build_opener();
self.ClickedLB.move(200,100);
win.idlok(true);
win.leaveok(true);
object._meta.verbose_name;
export var ex=sys.exc_info()[1];
py_next(function(){var __accu0__=[];for(var [k,v]of self.py_items())if(__in__(x,k))__accu0__.append(v);return py_iter(__accu0__)}());
df.head();
var L=[1,2,1,1,1];
self.process=QtCore.QProcess(self);
df;
cardsdiscarded+=1;
export var workbook=xlwt.Workbook();
df;
t512.timeit();
var p=subprocess.Popen(some_cmd,__kwargtrans__({stdout:subprocess.PIPE}));
print(buffer.getvalue());
scatter(X,Y,__kwargtrans__({c:cycol()}));
var page_source=browser.page_source;
var a=np.arange(100).reshape(10,10);
ssc.awaitTermination();
f_out.writelines(f_in);
f.write(raw_img);

screen.refresh();
logfile.flush();
var loop=asyncio.get_event_loop();
self.received_buffer.seek(0);
var a=np.arange(2E3).reshape(20,100);
var DEBUG=true;
json_output;
var x=dict(__kwargtrans__({a:1,b:2}));
plt.contour(y,x,T.__getitem__([tuple([0,null,1]),tuple([0,null,1]),round(len(z)/2)]),64);
self;
var reader=csv.reader(data);
ui.show();
py_typeof(a);
sys.stdout.flush();
export var csr_matrix=coo_matrix.tocsr();
export var b_data=binascii.unhexlify(data);
m.show();
widget.show();
signal.alarm(0);
self.get_sub_instance().get_individual();
gevent.monkey.patch_socket();
export var single_tokens=function(){var __accu0__=[];for(var [k,v]of Counter(tokens).py_items())if(v==1)__accu0__.append(k);return __accu0__}();
self.wfile.write(pymjpeg.boundary);
new_bar.py_update(extra);
set(Ol.__getslice__(0,l,1));
myseries_two.iloc[0];
(function(){var __accu0__=[];for(var i of range(0,len(s)-1,6))__accu0__.append(ss.__getslice__(i,i+6,1));return __accu0__})();
HttpResponse();
map(str,a);
var xs=function(){var __accu0__=[];for(var i of sorted_index)__accu0__.append(xs[i]);return __accu0__}();
math.floor(f*Math.pow(10,n))/Math.pow(10,n);
os.close(fd);
print(keywordlist);
self.setFormatter(formatter);
GetWindowTextW(hwnd,win_name,win_len+1);
var y=function(){var __accu0__=[];for(var [v,k]of list(d.py_items()))__accu0__.append(tuple([k,v]));return __accu0__}();
views.py;
heapq.heappush(heap,tuple([-p2,x,y-1]));
print(isPower(10,1));
var root=Tk();
var b=np.empty(a.shape);
self.root.remove(child);
export var query_params=parse_qs(query_string);
export var Af=A.flatten();
print(local_tz.localize(datetime(2E3,1,15)));
self.data[key]=NotifyList(item,self,str(key));
var app=Flask(__name__);
app.ActiveDocument.Close(__kwargtrans__({SaveChanges:true}));
pubkey.verify_update(message);
np.random.shuffle(x);
time.gmtime(year_ago*1E3);
pprint(service);
file.truncate(0);
gs-q-dQUIET-dPARANOIDSAFER-dBATCH-dNOPAUSE-dNOPROMPT;
math.acos(inner_product/(len1*len2));
factors[i]+=1;
Lt- -titlecase;
Lm- -modifier;
crawler.start();
var bins=np.linspace(0,1,nbins+1);
print(mse(model_1.predict(xg_test),y_test));
Gtk.ScrolledWindow;
work.start();
pl.xticks(np.linspace(0,100,11,__kwargtrans__({endpoint:true})));
test_1_12_example_name.py;
np.sum(n*np.diff(bins));
self.file_saving.child.join();
decorator;
var x=time.time();
xlApp.Quit();
cursor.execute(query_str);
time.py_sort();
export var MY_CONSTANT=50;
np.put(x,y,1);
var handler404=NotFoundView.get_rendered_view();
self.ui.PoseBtn_GridLayout.addItem(spacerItem,1,1,1,1);
len(self.__dict__);
var x1=np.hstack([[false],x,[false]]);
ax.set_yticklabels(ax.get_yticks(),__kwargtrans__({fontproperties:font}));
var app=Flask(__name__);
d[i]+=1;
print(list(c.py_items()));
self._x;
(function __lambda__(){var args=tuple([].slice.apply(arguments).slice(0));return self.method(cls,...args,__kwargtrans__(kw))});
signal.signal(signal.SIGTERM,cleanup);
self.failureResultOf(self.o.failure(),ConnectionRefusedError);
df.query(query_expr);
f(n)/f(r)/f(n-r);
df.rolling(n).sum().__getslice__(-1,null,-k).__getslice__(0,null,-1);
grouped.get_group(true);
ax.plot(x,y);
var test_data=function(){var __accu0__=[];for(var x=0;x<20;x++)__accu0__.append(str(x));return __accu0__}();
var city=models.CharField(__kwargtrans__({max_length:50}));
var frame=DataFrame(list_of_dicts);
pd.options.display.max_colwidth=100;
print(get_drive_size(0));
self.threads.append(self.makeThread(particles[i]));
self[key]=value;
[];
plot_confusion_matrix(df_confusion);
dict([[tree_list[0],build_tree(tree_list.__getslice__(1,null,1))]]);
boxplot(list(mydict.py_values()),__kwargtrans__({labels:list(mydict.py_keys())}));
df;
var ids=function(){var __accu0__=[];for(var row of cursor.fetchall())__accu0__.append(row[0]);return __accu0__}();
index.tpl;
var ans=np.mgrid.__getitem__([tuple([0,1,complex(0,100)]),tuple([0,1,complex(0,100)]),tuple([0,1,complex(0,100)])]);
var __except0__=py_TypeError;__except0__.__cause__=null;throw __except0__;
my_model.MyClassName;
np.random.shuffle(rows);
getcontext().prec=60;
var a=np.array([[0,0],[0,1],[1,0],[1,1]]);
plt.legend(flip(handles,2),flip(labels,2),__kwargtrans__({loc:9,ncol:2}));
print(a.__getitem__([0,2]));
tuple([a[2](),b[2](),c[2]()]);
export var Complete=np.where(np.isnan(partial),py_replace,partial);
edges.__getitem__([i,j-2]).append(tuple([i,j+2]));
print(response.text);
a.__getitem__([tuple([1,null,1]),tuple([0,-1,1])]);
var b=random.sample(a,len(a));
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
var a=numpy.arange(1,21).reshape(4,5);
export var gryim=np.mean(im.__getitem__([tuple([0,null,1]),tuple([0,null,1]),tuple([0,2,1])]),2);
tuple([tuple([a[2],b[2]])]);
math.log(x);
export var sorted_a=np.diagonal(a.__getitem__([tuple([0,null,1]),idx.__getslice__(0,null,1)])).T;
var c=socket(AF_INET,SOCK_STREAM);
gradient.setColorAt(0,QColor(255,255,255,127));
print(line);
var fig=plt.figure();
(time.astype(np.int64)/1E6).astype(np.int64);
var contents=output.getvalue();
var py_keys=set(dol1).union(dol2);
var result=result();

min(list_date,__kwargtrans__({key:func}));
resultList[-1].append(item);
export var iterables=function(){var __accu0__=[];for(var it of lists)__accu0__.append(py_iter(it));return __accu0__}();
var soup=BeautifulSoup(data);
time.sleep(1);
a.__dict__;
q.task_done();
rec(tf2,rest_paths.__getslice__(1,null,1));
palette.append(tuple([i,0,0]));
var model=Sequential();
print(r.text);
var bins=np.arange(min_bin,max_bin+1);
sock.send(chunk);
self.assertEqual(0,len(message));
py_metatype.__new__(metacls,py_name,bases,dct);
var fig=plt.figure();
print(data);
exit();
var cause=[];
var a=np.random.randint(0,200,100);
getattr(self.m,n);
self.py_update(...args,__kwargtrans__(kwargs));
var mask=(1<<bitlen)-1;
export var vector2=function(){var __accu0__=[];for(var [i,element]of enumerate(vector))if(!__in__(i,to_exclude))__accu0__.append(element);return __accu0__}();
print(a);
var __left0__=img.size;var width=__left0__[0];var height=__left0__[1];
print(intlist(10));
var df=df.__getslice__(0,null,-1).fillna(0).cumsum().__getslice__(0,null,-1);
export var beta=np.linalg.inv(X.T.dot(X)).dot(X.T.dot(y));
var __left0__=sat(81.299,0,__kwargtrans__({radians:false,errcheck:true}));var x=__left0__[0];var y=__left0__[1];
pylab.show();
var reader=csv.DictReader(fin,__kwargtrans__({fieldnames:fields}));
[Arthur];
df;
f.close();
var shape=a.shape.__getslice__(0,-1,1)+tuple([a.shape[-1]-window+1,window]);
self.reverser[mo.group()];
export var streamHandler=logging.StreamHandler();
child.grab_focus();
var api=tweepy.API(auth);
X00X;
print(py_typeof(x).__new__(x.__class__));
var __left0__=pl.subplots(__kwargtrans__({nrows:2}));var fig=__left0__[0];var ax=__left0__[1];
var data=ECD.read();
duck.walk();
pylab.xlim(0,5E3);
(function(){var __accu0__=[];for(var j=0;j<10;j++)__accu0__.append(tuple([j,is_even(j)]));return __accu0__})();
ser.readline();
-deadsnakes;
np.column_stack(tuple([a,a,a]));
print(tuple([i,max(dict[i])]));
isect.append([val,0]);
var soup=BeautifulSoup(html);
var data=sorted(data,__kwargtrans__({key:keyfunc}));
f(20);
py_typeof(ids);
self.loop.call_soon_threadsafe(task.cancel);
self.ftp_h.cwd(path);
numpy.corrcoef(data);
Departure_Date.objects.extra(__kwargtrans__({where:[where]}));
frame1.axes.get_xaxis().set_visible(false);
export var evil_vals=function(){var __accu0__=[];for(var n=0;n<10;n++)__accu0__.append(Evil(n));return __accu0__}();
export var the_url=response.geturl();
var new_list=[];
m.shape;
self.transport.setTcpKeepAlive(1);
var sock=socket.socket(socket.AF_INET,socket.SOCK_DGRAM,socket.IPPROTO_UDP);
var arr=np.array([]);
export var outdata=ctypes.POINTER(ctypes.c_double)*5();
nx.draw(X,pos);
c.execute(query,py_keys);
view.setRenderHint(QPainter.Antialiasing);
r.append(blocktag[0]);
export var img_data_cvmat=cv.fromarray(img_data_ndarray);
var df1=pd.concat([df1,pd.DataFrame(__kwargtrans__({columns:list(range(8))}))]);
pygame.display.py_update();
var xs=np.random.randn(n).cumsum();
self.dx=dx;
out.append(line);
label.pack();
- - - -models.py;
json.dumps(a);
var aa=json.loads(j,__kwargtrans__({object_hook:AttrDict}));
print(nth(lucky(),100));
nx.draw_networkx_edges(G_pc,pos,__kwargtrans__({alpha:.01}));
var req=urllib.request.Request(url);
var res2=cv2.cvtColor(res,cv2.COLOR_GRAY2BGR);
b[unified_mask.__getitem__([np.newaxis])]=0;
var __left0__=curve_fit(gaus,x,y,__kwargtrans__({p0:[1,mean,sigma]}));var popt=__left0__[0];var pcov=__left0__[1];
self._notify();
cv2.normalize(hist_item,hist_item,0,255,cv2.NORM_MINMAX);
var points=[tuple([2,2]),tuple([4,4]),tuple([7,7]),tuple([8,8])];
board.append([]);
allocate(y(j));
var out=np.zeros(np.asarray(shp)*len(L),__kwargtrans__({dtype:int}));
Gtk.main();
print(a);
print(a);
self.createWidgets();
s.ioctl(socket.SIO_RCVALL,socket.RCVALL_OFF);
var dd=function(){var __accu0__=[];for(var [k,v]of list(dd.py_items()))if(len(v)>1)__accu0__.append([k,v]);return dict(__accu0__)}();

f();
subprocess.Popen(args,__kwargtrans__({shell:true}));
var df=MyDF(...args,__kwargtrans__(kw));
self.py_name=py_name;
os._exit(code);
var __left0__=os.path.splitext(f);var n=__left0__[0];var ext=__left0__[1];
timings.append(tuple([result,fname]));
seen.insert(i,x);
list(f.py_values());
self.s=str(...args,__kwargtrans__(kwargs));
t.start();
export var access=imdb.IMDb();
var df=df.py_sort();
allspiders.append(makespider(domain,urls));
print(len(s));
doSomething(b);
var gray=cv2.threshold(gray,4,255,cv2.THRESH_BINARY)[1];
f.bar();
x*2;
export var minor=numpy.zeros(__kwargtrans__({shape:tuple([len(A)-1,len(A)-1])}));
export var _y=-x*math.sin(t)+y*math.cos(t);
plotter2.binding_plotter_with_ui();
var id=db.Column(db.Integer,__kwargtrans__({primary_key:true}));
print(guess_seq_len(list(range(500))));
spelling_dict.py_get(word,word);
data[index]=new_list;
var p=Process(__kwargtrans__({target:f}));
threading.Thread.join(self);
print(rechunk(ner_output));
plt.figure();
var rect=np.array([[bx1,by1],[bx1,by2],[bx2,by2],[bx2,by1],[bx1,by1]]);
self._queue.py_get(false);
print(fexprefix);
var names=function(){var __accu0__=[];for(var row of cursor.fetchall())__accu0__.append(row[0]);return __accu0__}();
var lst=[pd.DataFrame(),pd.DataFrame(),pd.DataFrame()];
var ax=plt.gca();
var b=[a,a];
setattr(namespace,self.dest,py_values);
var __left0__=proc.communicate();var stdout=__left0__[0];var stderr=__left0__[1];
var cam=cv2.VideoCapture(0);
ar.__getslice__(0,-sum(function(){var __accu0__=[];for(var i of takewhile(function __lambda__(x){return x},py_reversed(ar)))__accu0__.append(1);return py_iter(__accu0__)}()),1);
var average=scipy.signal.convolve2d(matriz,kernel);
var r=csv.reader(open(filename));
var b=a.__getslice__(1,null,1);
fcond.notify_all();
export var parent2=argparse.ArgumentParser(__kwargtrans__({add_help:false}));
_int(istart+_int(self.random()*width));
self.flag=false;
pool.append(p);
self.py_name=py_name;
atexit.register(cleanup);
wn.lch_similarity(dog,cat);
var conn=pycurl.Curl();
Variance(X).doit(__kwargtrans__({evaluate:false}));
-W900;
self._cards.append(card);

var line=gca().get_lines()[n];
export var distance_between_points=math.sqrt(Math.pow(dx,2)+Math.pow(dy,2));
deleteself.Ans[-1];
self.a=0;
etree.ElementTree._write(self,file,node,encoding,namespaces);
len(msg.get_payload());
var args=parser.parse_args();
var __left0__=self.desc;sys.stdin=__left0__;sys.stdout=__left0__;sys.stderr=__left0__;
py_values.append([v,[k]]);
outf.close();

zip_longest(...args,__kwargtrans__({fillvalue:fillvalue}));
array[py_values]=list(r.py_values());
plt.plot(Vecpoints,np.exp(logkde));
tuple([w,x,y,z]);
var u=np.sin(np.pi*x)*np.cos(np.pi*y)*np.cos(np.pi*z);
print(filename);
linsolve(system,x,y,z);
print(msg.subject,msg.id);
export var decoded_data=json.loads(encoded_str);
export var dummy_df=pd.get_dummies(df[column]);
var tokens=function(){var __accu0__=[];for(var _f of map(myfilter,tokens))if(_f)__accu0__.append(_f);return __accu0__}();
export var the_output=p.stdout.read();
tuple([a.isalpha(),b.isalpha()]);
var client=paramiko.SSHClient();
self.my_attr==other.my_attr;
var author=models.ForeignKey(Author);
tempList.append(rowDict);
pl.figure();
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
var data=json.load(data_file);
(function(){var __accu0__=[];for(var row of X)__accu0__.append(action_to_apply(row));return __accu0__})();
Exception.__init__(self,...args,__kwargtrans__(kwargs));
export var input_file=open(args[0]);
var py_name=db.StringProperty();
do_something(weapons);
turtle.right(angle);
out[product_name].append(tuple([bike_number,list_of_parts]));
print(cmd());
f(1);
dt+datetime.timedelta(__kwargtrans__({microseconds:us}));
var root=Tk();
subprocess.call(cmd,__kwargtrans__({stdin:sin,stdout:sout,startupinfo:startupinfo}));
format(theList);
axs[i].scatter(pts[i].__getitem__([tuple([0,null,1]),0]),pts[i].__getitem__([tuple([0,null,1]),1]),__kwargtrans__({c:colors[lbls]}));
(function(){var __accu0__=[];for(var [key,group]of itertools.groupby(condition))if(key)__accu0__.append(sum(function(){var __accu1__=[];for(var _ of group)__accu1__.append(1);return py_iter(__accu1__)}()));return __accu0__})();
np.putmask(arr,arr>=T,255);
log.addHandler(console_handler);
triples+=function(){var __accu0__=[];for(var k of K[K>i])__accu0__.append(tuple([i,j,k]));return py_iter(__accu0__)}();
of.close();
Tk().withdraw();
callback(...args,__kwargtrans__(kwds));
var a=i<100?1:i>100?2:0;
var dllname=os.path.py_split(self._welu.__file__);
cv2.imshow(img);
var instance=form.save(__kwargtrans__({commit:false}));
self.__dict__[key];
setones_between_triggers(A,2,-2);
var f=function __lambda__(r){return Math.pow(sp.j1(r),2)/r};
sys.stdout=sys.__stdout__;
[1];
cap.open();
np.random.seed(seed);
(function(){var __accu0__=[];for(var key of r)if(__in__(42,key))__accu0__.append(r[key]);return set(__accu0__)})();
export var reg_losses=tf.get_collection(tf.GraphKeys.REGULARIZATION_LOSSES);
self.after(100,self.poll_serial_port);
self.co.send(...args);
var x=collections.Counter(l);
export var Xfit=np.hstack(tuple([tuple([-1,-1,0,1,1]),np.arange(1,10),tuple([-7,9,10,10])]));
send_from_directory(UPLOAD_FOLDER,filename);
var rescaled=np.mean(rescaled,__kwargtrans__({axis:ind+1}));
do_something(my_object);
[0,0,0,100];
export var grandchild_pid=int(os.fdopen(r).readline().strip());
export var xyi=np.vstack(tuple([x,y])).T;
result.save(sys.argv[2]);
var l=[4,5,6];
export var sortedwords=sorted(py_iter(wordbank.py_items()),__kwargtrans__({key:operator.itemgetter(1)}));
self.count+=1;
var doc=le.parse(f);
self.value=1;
sys.modules[__name__]=_MyClass.instance;
handle_error();
var fig=plt.figure(__kwargtrans__({figsize:[7,5]}));
print(v);
var cursor=cnx.cursor();
g.ax_marg_y.set_axis_off();
self.feed+=1;
print(data);
var last_name=models.CharField(__kwargtrans__({max_length:50}));
sleep(1);
tuple([message,settings.SERVER_EMAIL,function(){var __accu0__=[];for(var a of settings.MANAGERS)__accu0__.append(a[1]);return __accu0__}()]);
retval;
frame.Show();
var center=tuple([int(x),int(y)]);
new set([NULL,NULL,0,NULL]);
self.adjective_count[a]+=1;
export var bindices_zero=array==0;
print(post.text);
res[v].append(k);
var results=function(){var __accu0__=[];for(var mc of montecarlos)__accu0__.append(result_queue.py_get());return __accu0__}();
var my_date=date.today()-timedelta(__kwargtrans__({days:days_to_subtract}));
export var even_numbers=function(){var __accu0__=[];for(var [x,y]of enumerate(py_items))if(__mod__(x,2)==0)__accu0__.append(y);return __accu0__}();
self._connection.close();
export var perfect_fit=60*numpy.random.normal(__kwargtrans__({size:tuple([n_inputs,n_outputs])}));
var img=mahotas.imread(imname);
print(tuple([data,data.GetType()]));
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
print(max_dir,max_file);
var arr=np.arange(16).reshape(4,4);
var fig=plt.figure();
u[np.argsort(ind)];
var z=request.GET.copy();
a.__getitem__([,0])+a.__getitem__([,1]);
export var a_1d=a.flatten();
export var sortedA=A[np.lexsort(A.__getitem__([tuple([0,null,1]),tuple([0,-1,1])]).T)];
subprocess.call(cmd,__kwargtrans__({shell:false}));
var jj=np.where(ii)[0];
redirect(success_url);

numpy.finfo(numpy.float64).min;
var s=s.append(b,__kwargtrans__({ignore_index:true}));
var p=Pool(number_of_processes);
export var keypoints=s.detect(gray,mask);
var py_name=models.CharField(__kwargtrans__({max_length:100}));
rand2.seed(0);

DerivedClass().do_it();
export var some_list=[];
var line=file.readline();
tuple([[1,0,0,1,0,0]]);
n&=n-1;
(function(){var __accu0__=[];for(var subgraph of subgraphs)__accu0__.append(G.edges(subgraph));return __accu0__})();
os.close(fi);
session_crumbs.append(tuple([flask.request.path,view_title]));
palette.setColor(palette.Dark,QtGui.QColor(0,255,0));
self.response.out.write(images.image);
export var V=numpy.sum(xdist,__kwargtrans__({axis:1}));
var new_col=NP.zeros_like(my_data.__getitem__([tuple([0,null,1]),-1])).reshape(-1,1);
result.extend(s);
np.count_nonzero(x!=y);
a._A__foo();
cython.int;
self._x=value;
foo.MyClass();
daemon_cartman.join();
print(df1.equals(df));
export var J=sparse.coo_matrix(tuple([np.ones_like(ixs,int),tuple([np.arange(ixs.shape[0]),ixs])]));
z.nonzero();
var d=json.load(json_data);
self.listbox.insert(0,option);
stdout.write(str(i));
var a=b.__getslice__(0,null,1);
db.session.add(sg);
rounding_swig/testrounding.cpp;
var pool=multiprocessing.Pool(5);
django.db.connection.user=user;
(function __lambda__(x){return bool(int(x))});
func(self);
cols.append(col);
connection.close();
export var commons=set(dict1).intersection(set(dict2));
doTaskB();
var ax2=ax.twinx();
print(twodarray.shape);
py_typeof(tuple([100]));
self.dbobject=all();
hash(b);
second_largest([2,2,2,2,2,1]);
list(my_mapping.py_keys());
pygame.display.py_update();
print(f.__code__.co_consts);
mock_http_client.py_get.assert_called_with(url);
os.path.isfile(os.path.join(...path_segments));
bottom.paste(top,tuple([0,0]),mask);
print(a,b,c,d);
np.concatenate(function(){var __accu0__=[];for(var [offset,length]of offset_length)__accu0__.append(a.__getslice__(offset,offset+length,1));return __accu0__}());
canvas.saveState();
export var unseenData_predictions=recreatedModel.predict(X_test_std);
map_nested_dicts_modify(x,function __lambda__(v){return v+7});
threads[i].start();
f.seek(0);
export var the_page=response.read();
var df=df.transpose();
print(np.dot(rotation_matrix(axis,theta),v));
mydict[str(key)]=mydict[key];
print(concatd(a,b,c));
var tree=lxml.etree.XML(DOC);
v.__getitem__([-1,tuple([0,-1,1])])/-v.__getitem__([-1,-1]);
self.fields.py_update(form.fields);
self.dict[self.last];
export var positive2=positive.__getitem__([tuple([0,null,1]),tuple([2,-1,1])]);
export var num_ratings=db.IntegerProperty();
client.disconnect();
var B=np.random.random(tuple([10,4]));
f;
ax.yaxis.set_major_formatter(mtick.PercentFormatter());
export var stdin_list=list(sys.stdin);
export var hash2=hashlib.md5();
elements.append(itertools.repeat(py_iter));
var c=df.columns.py_values;
var f=os.path.join(dirName,f);
tuple([themin,themax]);
i+=1;
var gray=cv2.cvtColor(im,cv2.COLOR_BGR2GRAY);
self.assertEqual(4,myObj.getDataLength());
a.__getitem__([inds.__getitem__([tuple([0,null,1]),0]),inds.__getitem__([tuple([0,null,1]),1])]);
(function(){var __accu0__=[];for(var key of set(d1)-set(d2))__accu0__.append(d1[key]);return __accu0__})();
export var debug=1;
print(r.cookies);
var x=mydict[k];
print(i);
my_saved_data;
export var neighbours=list(itertools.product(list(range(i-1,i+2)),list(range(j-1,j+2))));
export var maze_dict=dict({});
df.dt=pd.to_datetime(df.dt);
var ax=fig.add_axes([.1,.2,.85,.7]);
logutils.set_up();
var img=np.zeros(Arr.shape,__kwargtrans__({dtype:bool}));

print(sum(function(){var __accu0__=[];for(var i=0;i<len(s)-(ln-1);i++)__accu0__.append(sub==s.__getslice__(i,i+ln,1));return py_iter(__accu0__)}()));
(function(){var __accu0__=[];for(var [k,v]of list(c.py_items()))__accu0__.append([k,v-1]);return dict(__accu0__)})();
var new_im=f(new_x).T;
a.many_b.add(...list_of_b);
file.flush();
df;
var bbox=self.legend.get_window_extent();
s.bind(tuple([MY_ADDRESS,port]));
argparse.ArgumentParser.add_argument(self,...args,__kwargtrans__(kwargs));
export var inputproc0=Popen(shlex.py_split(inputcmd0),__kwargtrans__({stdout:PIPE}));
df1.join(df2).columns;
pairs.append(new_pair);
var req=urllib.request.Request(url,urllib.parse.urlencode(params));
var regex=re.compile(re.escape(old),re.I);
mod1.py;
fileWriter.writerow(row);
self.html=self.mainFrame().toHtml();
var im=ImageOps.invert(im);
collections.OrderedDict.fromkeys(function(){var __accu0__=[];for(var x of a)if(!__in__(x,b))__accu0__.append(x);return py_iter(__accu0__)}());
var df1=df.groupby([a,b]).count();
var my_string=my_string.lower().py_split();
F(1,2);
export var imarr=numpy.array(Image.open(im),__kwargtrans__({dtype:numpy.float}));
var driver=webdriver.Firefox();
wb.save(out);
var __left0__=a.max(__kwargtrans__({axis:0}));var xmax=__left0__[0];var ymax=__left0__[1];
chunk.append(line);

deployFiles();
var tree=BeautifulSoup(bad_html);
var logger=logging.getLogger();
var b=np.random.random_integers(2,__kwargtrans__({size:tuple([4,4])}));
export var serie=pd.to_datetime(df.dt);
np.irr(np.r_.__getitem__([-n,cashflow]));
var conn=http.client.HTTPSConnection(myDestination);
var response=urllib.request.urlopen(request);
self.allowed_domains.append(hostname);
psutil.cpu_count();
Function(function __lambda__(x){return self(x)/other});
export var alldata=np.array(zip(t,zip(x,y)),__kwargtrans__({dtype:dt}));
sum(function(){var __accu0__=[];for(var i of itertools.product(range(100),__kwargtrans__({repeat:100})))__accu0__.append(sum(i)==100);return py_iter(__accu0__)}());
timeit(df==df2|df!=df&df2!=df2).py_values.all();

var smtp=smtplib.SMTP(smtp_host,smtp_port);
worksheet.set_column(i,i,header_len);
pprint.pprint(sys.path);
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
sizer.Add(lbl,0,wx.ALL,5);
seen.add(char);
sys.exit(a.exec_());
usage();
gen_random_decimal(99999999999,999999999999);
export var chBuf=create_string_buffer(BUFSIZE);
a.append(dict(b));
var B=defaultdict(function __lambda__(){return defaultdict(int)});
gameMap.__setitem__([tuple([0,2,1]),tuple([0,2,1])],gameMap.__getitem__([tuple([0,2,1]),tuple([0,2,1])])+piece);
var fig=plt.figure();
random.sample(xs,sample_size);
time.sleep(__mod__(-time.time(),1));
print(py_typeof(lengthy_thingy).__len__(lengthy_thingy));
file.close();
self.photo.load();
es_logger.setLevel(logging.INFO);
dis.dis(foo);
result.append(string);
var result=df.loc[df_mask];
dbConn.close();
powLF(n)[1];
df_with_x4.show();
var country=models.ForeignKey(Country);
clf.fit(train[cols],train.targets);
tuple([os.path.relpath(google.__file__,here)]);
print(myString[0]);
export var worksheet2=workbook.add_worksheet();
var D=dict(function(){var __accu0__=[];for(var [v,k]of enumerate(albums_yesterday))__accu0__.append(tuple([k,v]));return py_iter(__accu0__)}());
notebook.set_tab_reorderable(child,false);
z.extractall();
client_socket.close();
var d=dict({});
session.commit();
decorated_func;
export var d2_filtered=dict(function(){var __accu0__=[];for(var [k,v]of d2.py_items())if(!__in__(k,ignore_keys))__accu0__.append(tuple([k,v]));return py_iter(__accu0__)}());
var request=urllib.request.Request(url);
var L=list(py_reversed(list(range(100))));
self.cost+=tf.reduce_mean(Math.pow(x_train-y_train,2));
parser.exit();
export var invalid=np.isnan(data);
var X=scale(X,__kwargtrans__({axis:0,with_mean:true,with_std:true,copy:true}));
tuple([numpy.dot(A_col0_sorted,perfect_fit).__getitem__([tuple([0,null,1]),0])]);
var angle=atan((neuron2.x-neuron1.x)/float(neuron2.y-neuron1.y));
plt.plot(np.arange(10)*(i+1));
self.columnconfigure(0,__kwargtrans__({weight:1}));
result.append(word);
var A=pd.Series(list(range(10)));
signal_axes.plot(xs,rawsignal);
tuple([1,2]);
var csv_writer=csv.writer(csv_file);
cursor.execute(statement);
var c=a;
export var decoded_pw=base64.b64decode(encoded_pw);
results.append(obj);
var __left0__=select_choice();export var my_i=__left0__[0];export var my_card=__left0__[1];
var y=mlab.normpdf(bins,mu,sigma);
Py_DECREF(initresult);
self._alpha(context)*self._backoff.prob(word,context.__getslice__(1,null,1));
rep_shape(a,tuple([4,2]));
var new_data=data[np.in1d(arr1,arr2)];
x.extend(y);
var py_name=models.CharField(__kwargtrans__({max_length:25}));
var A=np.array([5,np.nan,np.nan,np.nan,np.nan,10]);
nw[0]=nw[0]+1;
export var currentdate=dt.date.today();
f.close();
var df=df.sortlevel(0);
a[a<0]=0;
var p=np.empty(tuple([n,2]));
match.start();
setattr(TestSequense,test_name,test);
image[coordinates]=1;
canvas.delete(ALL);
str(Fraction(.25));
cv2.circle(out,tuple([int(x1),int(y1)]),4,tuple([255,0,0]),1);
var message=Column(String(2E3),__kwargtrans__({nullable:false}));
var data=urlencode(py_values);
plt.imshow(im.T,__kwargtrans__({cmap:cmap,extent:xr+yr}));
var p=pyaudio.PyAudio();
df.Date=pd.to_datetime(df.Date);
var cols=np.arange(len(df.columns));
m();
new set([new set([language.name_local])]);
decoder.end_utt();
print(df);
count(1);
var f=figure(__kwargtrans__({figsize:tuple([6,6])}));
var fig=plt.figure();
index[count][1].append(url);
var m=hashlib.md5();
var __left0__=plt.subplots(1,2);var fig=__left0__[0];var ax1=__left0__[1][0];var ax2=__left0__[1][1];
map(tdgi,list(filter(tdin,theList)));
var data_json=json.dumps(data);
loop.run_until_complete(do_work(q));
50+sum(function(){var __accu0__=[];for(var x of lis[0])__accu0__.append(x*py_next(cyc));return py_iter(__accu0__)}());
var events=events.exclude(__kwargtrans__({eventitem__isnull:true}));
asyncio.set_event_loop(self.loop);
colors.insert(index,mean_color([colors[index-1],colors[index]]));
var ax=plt.gca();
var ax=plt.gca();
print(tree.find(10));
export var event_date=models.DateField();
print(x);
string.lowercase.__getslice__(0,14,2);
func(...args,__kwargtrans__(kwargs));
(function(){var __accu0__=[];for(var k of list(dd.py_keys()).__getslice__(0,10,1))__accu0__.append([k,dd[k]]);return dict(__accu0__)})();
array2.__setslice__(0,null,null,array1);
np.random.seed(1977);
self.causes[node.py_name]+=self.extract_cause(b);
var aux=copy.deepcopy(matriz);
(function(){var __accu0__=[];for(var val of generator1())__accu0__.append(c.send(val));return __accu0__})();
sys.exit(1);
out.reshape(R,-1).__getitem__([tuple([0,null,1]),valid_mask]);
var root=Tk();
f.write(templateString.format(__kwargtrans__(d)));
sum(function(){var __accu0__=[];for(var [i,j]of zip(w1,w2))__accu0__.append(i==j?1:0);return py_iter(__accu0__)}())/float(len(w1));
var q=Queue();
f.__code__===creator.__code__.co_consts[1];
var root=etree.fromstring(s);
np.random.seed(seed);
heavy_computation(X,param_1,param_2,arg);
ax.set_xlim([0,5]);
output.append(line);
export var dcos=np.arccos(np.clip((dp.__getitem__([tuple([0,null,1]),tuple([1,null,1])])*dp.__getitem__([tuple([0,null,1]),tuple([0,-1,1])])).sum(__kwargtrans__({axis:0})),-1,1));
export var upper_match=match.group(0).upper();
var page=urllib.request.urlopen(url);
df;
self._log(text);
var model=models.MyModel;
rng.random();
pixel_value+=polygon_shape.intersection(pixel_shape).area*value;
deleteTrue;
models.py;
var c=cdll.LoadLibrary(LIBRARY_NAME);
h[x]=h.py_pop(x,[]).append(y);

var msg=msg.__getslice__(0,-2,1);
unittest.main();
mapper(tableClass,table);
var proc=subprocess.Popen(cmd,__kwargtrans__({shell:true}));
i==len(B)||B[i]!=a;
df[df>df.quantile(.8)].dropna();
var response=self.opener.open(url,data);
var b=Test();
self._s.bind(tuple([host_address,port]));
a.write(f,relpath(f,root));
var id=db.Column(db.Integer,__kwargtrans__({primary_key:true}));
plt.show();
tuple(function(){var __accu0__=[];for(var p of processes)__accu0__.append(p.stdout.fileno());return py_iter(__accu0__)}());
self.__doc__=callable.__doc__;
input();
object.__ne__(self,other);
int();
print(groups.mean().b);
var path=os.path.join(folder,filename);
var s=pd.Series(list(range(10)));
getattr(self.get_query_set(),py_name);
output.write(outputStream);
var cs=plt.contour(x,y,vel,levels);
deletemydict[key1];
client_socket.connect(tuple([server_address,port]));
self.worker.measure_msg.connect(self.showRslt);
var f=expr(f);
var j=((x-x0)/dx).astype(int);
a.__getslice__(0,4,1);
conn.autocommit(true);
var created_at=models.DateTimeField(__kwargtrans__({auto_now_add:true}));
block.move();
var a=numpy.array([[0,0],[0,1],[1,0],[1,1]]);
var foo=input();
text.insert(END,output);
tuple([parts[0].strip(),int(parts[1])]);
crypto.dump_privatekey(PKey);
frob(self.b);
float(s);
df2[ser1.py_name]=ser1;
proc.stdin.write(c);
.550000000001;
result.append(nopreds);
a.a().method();
wx.PostEvent(self,event);
sum(function(){var __accu0__=[];for(var x of arr)__accu0__.append(x===false);return py_iter(__accu0__)}());
var ax=plt.axes();
df1;
cPickle.dump(d,out);
export var property_bsel=function(){var __accu0__=[];for(var i of good_indices)__accu0__.append(property_b[i]);return __accu0__}();
sum(sorted(dice).__getslice__(1,null,1));
var mydtype=np.dtype(tuple([np.void,a.dtype.itemsize*a.shape[1]*a.shape[2]]));
var dt=datetime.datetime.now();
export var nopreds=[-1]*n;
os.dup2(se.fileno(),sys.stderr.fileno());
ser.write(byte_signal);
np.array(y.shape).tofile(f);
var row=wx.BoxSizer(wx.HORIZONTAL);
Request(url,__kwargtrans__({dont_filter:true}));
var protocol=QNetworkProxy.Socks5Proxy;
print(lda.print_topic(i));
random.random()*5+10;
self.tvcolumn1.set_cell_data_func(self.toggle,self.set_status);
print(np.in1d(py_values,data));
os.execv(sys.executable,sys.argv);
var user=models.OneToOneField(User,__kwargtrans__({parent_link:true,blank:true,null:true}));
var b=a[names];
print(x,y);
print(eval(code));
rep_shape(a,tuple([5,8]));
help(ttk.Notebook);
cr.set_source_rgb(1,1,0);
__init__.py(empty);
pl.colorbar();
var form=UserCreationForm(request.POST);
a[i]=f(v);
Py_Initialize();
wynik[i]+=1;
export var synset2domains=defaultdict(list);
export var _x=x*math.cos(t)+y*math.sin(t);
self.panel.show();
print(id(argv[0]));
df;
export var mydates=pd.date_range(date1,date2).tolist();
export var textbox=Text(mainwin,__kwargtrans__({width:40,height:10}));
var x=mystuff();
print(rem==[0,1,2,1,0]);
self.assertEqual(1+1,2);
d2.py_update(d1);
var logger=logging.getLogger(__name__);
plt.axes().yaxis.set_minor_locator(ml);
var d=collections.defaultdict(set);
tuple([ctypes.c_int]);
r.findall(s2);
var py_keys=set(chain(...function(){var __accu0__=[];for(var d of dicts)__accu0__.append(list(d.py_keys()));return __accu0__}()));
plt.show();
export var NECESSARY=2;
rel.save();
print(x[ind],y[ind],z[ind]);
var out=np.zeros(dims,__kwargtrans__({dtype:int}));
matrix.append(list(vals.__getslice__(x*size,x*size+size,1)));
var b=np.array([[5,6],[7,8]]);
var cur=con.cursor();
callback(args[0]);
c.diff().fillna(math.max(0,py_values[0]-ALLOWANCE));
lst1.__getslice__(0,1,1)+interleave(lst2,lst1.__getslice__(1,null,1));
export var FILE=open(filename);
[1,1,0];
var b=np.concatenate([[0],np.where(a.__getslice__(0,-1,1)!=a.__getslice__(1,null,1))[0]+1,[n]]);
Bar.bar();
a.__setslice__(-2,null,null,[0,4]);
stateA();

var screen=pygame.display.set_mode(tuple([SCREEN_X,SCREEN_Y]));
self.data=dict(...args,__kwargtrans__(kwargs));
a.f();
var soup=bs4.BeautifulSoup(html);
hSplitter.SetSashGravity(.5);
a.py_sort(__kwargtrans__({key:Vector.__key__}));
tuple([1,[true,true,false,false]]);
egg2(a,b);
sorted(function(){var __accu0__=[];for(var x of p)if(x<limit)__accu0__.append(x);return __accu0__}());
main_loop.start();
var r=requests.post(url,__kwargtrans__({files:files}));
df.head();
print(len(puppies.getdata()));
server.login(USERNAME,PASSWORD);
a.add_child(a);
py_next(c);
var flat=function(){var __accu0__=[];for(var [k,vs]of list(kwargs.py_items()))__accu0__.append(function(){var __accu1__=[];for(var v of vs)__accu1__.append(tuple([k,v]));return __accu1__}());return __accu0__}();
print(df1);
groupby(a,[0]);
var t=tuple([py_name]);
user_func();
var workbook=load_workbook(filename,__kwargtrans__({use_iterators:true}));
var lst=[1,5,4];
var nopreds=set();
logging.exception(e);
stext.mainloop();
ax.set_ylim([-4,4]);
self.login(response);
etree.fromstring(f.read(),xmlparser);
dall.py_update(d2);

export var formatter=logfileformatter;
worksheet.column_dimensions[column_cells[0].column].width=length;
x;
export var G_LOG=logging.getLogger(__name__);
dictionary.py_setdefault(x,[]).append(y);
print(driver.title);
f.get_prep_value(d.numbers);
qproc.start();
Foo.newmethod=newmethod;
list(chain.from_iterable(zip(l.__getslice__(0,-1,1),repeat(0))))+l.__getslice__(-1,null,1);
export var closest_point_coords=list(p.coords)[0];
time.sleep(secs);
Job.objects.py_get(__kwargtrans__({client__id:1}));
otherfunc();
help(dict);
print(line);
var __left0__=tuple([[0],[0],[0]]);var foo=__left0__[0];export var boo=__left0__[1];export var moo=__left0__[2];boo[0]=__left0__[0];moo[0]=__left0__[1];foo[0]=__left0__[2];moo[0]=__left0__[0];foo[0]=__left0__[1];boo[0]=__left0__[2];
a.__str__();
export var caption=models.CharField(__kwargtrans__({max_length:64,blank:true}));
button1.configure(__kwargtrans__({command:function __lambda__(widget){if(typeof widget=="undefined"||widget!=null&&widget.hasOwnProperty("__kwargtrans__"))var widget=button1;return DoSomething(widget)}}));
export var handler2=logging.TimedRotatingFileHandler();
s.capitalize();
var start=tk.Tk();
myThread.daemon=true;
self.buf.seek(0);
var my_list=list(range(10,17));
frame.Show();
pl.show();
pool.close();
export var main=tk.Tk();
yaml.dump(self.object,file);
dectheclass;
self._protected();
ax.scatter(x,y,__kwargtrans__({label:l,s:50,linewidth:.1,c:c}));
main();
print(k,curve,function(){var __accu0__=[];for(var [p1,p2]of zip(curve,curve.__getslice__(1,null,1)))__accu0__.append(angle(p1,p2));return __accu0__}());
len(function(){var __accu0__=[];for(var [is_true,_]of groupby(a,function __lambda__(x){return x!=0}))if(is_true)__accu0__.append(is_true);return __accu0__}());
print(p.pid);
db.get_conn().ping(true);

cmp(self.s[x+l],self.s[y+l]);
tuple([750069.25,750069.25]);
var application=app;
self.module=locals;
export var ordered_ips_data_dict=OrderedDict(ordered_items);
print(m.groups());
py_typeof(counts_df);
f.close();
heapify(A);
print(data);
tf.close();
logger.addHandler(fileHandler);
math.log(math.exp(logA)+math.exp(logB));
var result=func(...args);
var doc=fromstring(html);
p[1];
attribute(...args,__kwargtrans__(kwargs));
var ns=parser.parse_args();
print(i,get_hotp_token(secret,__kwargtrans__({intervals_no:i})));
repr(self.i);
sys.exit();
var names=pd.DataFrame();
print(client.fetchAll());
foo().y;
export var usd_curr=function(){var __accu0__=[];for(var x of temp)if(x>0)__accu0__.append(x);return __accu0__}();
var k=a.__getslice__(0,2,1);
br.submit();
j.do();
print(df.py_values);
var X=R*np.cos(THETA)+5;
-cmp(self.x,other.x);
allocate(fullData(nR,nC));
main.py;
math.isnan(item);
n1.add(n12);
Person.__init__(self,py_name,phone);
arr.reshape(Math.floor(h/nrows),-1,nrows,ncols).swapaxes(1,2).reshape(h,w);
var app=wx.PySimpleApp();
var __left0__=train_test_split(X,y,__kwargtrans__({test_size:.2}));var X_train=__left0__[0];var X_test=__left0__[1];var y_train=__left0__[2];var y_test=__left0__[3];
list(a);
var s=sorted(s);
tuple([max_idx,max_val]);
figure();
export var dividers=sorted(random.sample(range(1,total),n-1));
export var restype=ctypes.c_int;
self.write(repr(self.request));
var names=names.append(frame,__kwargtrans__({ignore_index:true}));
words.append(word);
final_l;
result+=letters[index-shift];
var result=df.copy();
tk.Frame.__init__(self,root,...args,__kwargtrans__(kwargs));
print(line);
self.text=tk.Text(self,__kwargtrans__({height:10,width:40}));
os.dup2(t.fileno(),self.fd);
var order=np.argsort(x);
var d1=datetime.date.today();
var b=np.random.rand(5,6);
bokeh.plotting.curplot().plot_width=800;
logging.basicConfig(__kwargtrans__({level:logging.INFO}));
print(x.reshape(tuple([x.shape[0],1])).py_metatype);
print(self.obj.f1(2));
var D=Math.pow(a-v[i],2).sum(__kwargtrans__({axis:-1}));
plt.xlim([0,9]);
self.level=logging.DEBUG;
cursor.execute(query);
len(a);
var ax=fig.add_subplot(111);

table.insert_data(simple_dataframe);
delete_keys_from_dict(v,the_keys);
time.sleep(1);
var pool=mp.Pool(NPROCESSES);
count+=1;
var f=a.__getslice__(0,1,1);
var D=spatial.distance.pdist(A,function __lambda__(u,v){return getDistanceByHaversine(u,v)});
user.set_password(password);
zf._writecheck(zinfo);
export var DTYPE=np.int;
bagel;
var __left0__=proc.communicate();var stdout=__left0__[0];var stderr=__left0__[1];
images[idx].shape;
var __left0__=map(int,line);var row=__left0__[0];var column=__left0__[1];
display.display(plt.gcf());
print(list((b-a).elements()));
np.linalg.norm(a*c-b);
test_set[i]=flatten_image(matrix_image(test_images[i]));
x[words[0]].append(words[1]);
print(cpy_list);
path.py_split(os.sep);
export var new_path=list(path);
self.inner_test=inner_test();
print(regressor.predict(X));
var ax=fig.add_subplot(111);
print(sys.path);
print(a_list.py_sort());
output.close();
var a=np.arange(10);
py_next(reader);
print(dir(module));
print(x);
string.whitespace;
request.user==obj;
arr[i]=0;
app.MainLoop();
self.geodata_image.blit(0,0,0);
snake.foo();
export var filenames=ftp.nlst();
export var Frame=Frame.append(pandas.DataFrame(__kwargtrans__({data:SomeNewLineOfData})));
self.f=Foo();
outfp.close();
a[b];
export var ca_one=str(sys.argv[1]);
two_array.append(6);
export var i_xy=np.intersect1d(u_x,u_y,__kwargtrans__({assume_unique:true}));
print(applyParallel(df.groupby(df.index),tmpFunc));
self.label=QtGui.QLabel(self);
var words=set(f);
edges.add(tuple([left,right]));
var len2=max(function(){var __accu0__=[];for(var el of list(chain(...my_list)))__accu0__.append(len(el));return py_iter(__accu0__)}());
export var syncdict=dict({});
self.get_user_from_cookie();
self.q_in.delete_message(self._current_message);
export var stop_event=threading.Event();
var api=tweepy.API(auth);
export var next_n_lines=list(islice(f,n));
outputlist.append(current);
self.release();
var result=func(...args,__kwargtrans__(kwargs));
export var yourdict=pickle.loads(read_dict);
min(chain(l_one,l_two));
doc.build(text);
self.stopFunc();
d.extend(g);
matches.append(x);
export var low_primes=function(){var __accu0__=[];for(var x=1;x<100;x++)if(is_prime(x))__accu0__.append(x);return set(__accu0__)}();
var __left0__=divmod(val,Math.pow(10,prec));export var intp=__left0__[0];export var fracp=__left0__[1];
files.append(d);
var my_dict=defaultdict(list);
list(Foo.__dict__.py_keys());
var B=np.array([2,4,6]);
export var mexico_time=datetime.datetime(2010,1,1,12,0,0,0,tz_mexico);
server.shutdown();
self._data=data;
var opener=urllib.request.build_opener(ValidHTTPSHandler);
session.expunge(i0);
action.perform();
cur.close();
resultList.append([item]);
df;
self.model.query.filter(self.model.owner==g.user);
export var cx2=np.random.random_integers(cx1,size-1);
var im=Image.open(file);
fast_xor(b,256);
var person=re.findall(regex,line);
var y=x[indices];
var line=f.readline();
ciso8601;
ujson;
workalendar;
mask.sum();
var tmp=pd.Series(np.array(list(col)).flatten());
sys.path.insert(0,flaskfirst);
instance.test_method(instance.sample_method);
export var addsf1=addsf1+int(num);
print(extract_names(s));
export var incsv=csv.reader(inf);
var rows=np.arange(a.shape[0]);
ax.annotate(c,__kwargtrans__({xy:pos}));
app.url_map;
var temp=int(temp);
ReligiousSerializer(__kwargtrans__({instance:instance})).data;
LaySerializer(__kwargtrans__({instance:instance})).data;
grp.reindex(mux,__kwargtrans__({fill_value:0})).reset_index();
G.add_edge(4,5);
np.ix_(mask1,mask2);
print(test_Dict[obj].py_name);
pd.DataFrame(function(){var __accu0__=[];for(var r of d)__accu0__.append(dict(function(){var __accu1__=[];for(var x of r)__accu1__.append(tuple([x,r.count(x)]));return py_iter(__accu1__)}()));return __accu0__}()).fillna(0);
power(2,5);
var win=gtk.Window(gtk.WINDOW_TOPLEVEL);
var hxs=HtmlXPathSelector(response);
var module_name=os.path.basename(module_filepath);
true;
deleted[i];
var py_name=models.CharField(__kwargtrans__({max_length:20,unique:true}));
list(d.py_items());
print(newcorpus.paras());
var x=remove_values_from_list(x,2);
export var errdata=prog.communicate()[1];
plt.show();
var v=CountVectorizer(__kwargtrans__({ngram_range:tuple([1,2])}));
out.getvalue();
Clock.schedule_interval(self.change_color,1);
myFunction(...args);
ax.xaxis.get_ticklines();
sys.stdout.write(line);
export var BLUE_MIN=np.array([0,0,200],np.uint8);
var a=np.array([0,0,0,0,0,1,1,1,1,1,1,1,1,1,1],__kwargtrans__({dtype:np.bool}));
var res=[];
var __except0__=TransportError(e.msg,e.code,e.fp);__except0__.__cause__=null;throw __except0__;
export var augmented=tf.map_fn(_augment,self.training_images);
plt.axes().yaxis.set_minor_locator(ml);
h.close();
(function(){var __accu0__=[];for(var u of set([a,c,e]).intersection(set([b,d])))__accu0__.append(tuple([u.value,u.meta]));return __accu0__})();
stdscr.refresh();
df.index.dtype;
out.append(s.__getslice__(i-k,i,1));
plt.legend();
plt.xticks(x,xticks);
p.close();
(function(){var __accu0__=[];for(var [v,g]of itertools.groupby(l))__accu0__.append([sum(function(){var __accu1__=[];for(var _ of g)__accu1__.append(1);return py_iter(__accu1__)}()),v]);return __accu0__})();
-gfortran;
l.append(read_from(toks));
var start=time.time();
wrapper2;

cmake;
var i=0;
export var maxm=np.array([],__kwargtrans__({dtype:int}));
after_setup_logger.connect(initialize_logstash);
print(dir(B));
r[i]=(a*67108864+b)/9007199254740992;
random.shuffle(d);
print(df);
__all__[k]=test.__dict__[k];
py_next(py_values());
ax.xaxis_date();
endif;
var df=pd.read_table(io.BytesIO(data),__kwargtrans__({delim_whitespace:true}));
var data=py_next(reader);
from_date.py_replace(__kwargtrans__({month:2,day:28,year:from_date.year-years}));
sys.stderr=sys.stdout;
float(a);
dict(function(){var __accu0__=[];for(var pair of list(data.py_items()))__accu0__.append(map(ascii_encode,pair));return py_iter(__accu0__)}());
f.integral();
self.save_file.append(json.loads(tweet));
print(x,y);
var ax2=plt.subplot(gs.__getitem__([0,tuple([2,null,1])]));
self.setup_test_data();
self.append(py_next(self._gen));
[];
fill_array(subarr,subseq);
new set([new set([message])]);
export var strng=socket.recv(1024);
result;
df.isin([1,2]).any(1);
fabric.state.connections[host].get_transport().close();
var filename=sys.argv[1];
self.adjacencyList=adjacencyList;
tuple([self.drawWidth,self.drawHeight]);
var results=collections.Counter(the_string);
do_sth_with(i,somearray[i]);
elements.append(Paragraph(content,style));
abs(-1);
var result=custom_sort(allsites);
smtplib.SMTP_SSL.__init__(self,host,port,__kwargtrans__(kwargs));
wx.TheClipboard.Close();
main();
export var list_of_dict=[];
self.canvas.draw();
wr.writerows(csv.reader(f));
QtGui.QColor(rgb).getRgb().__getslice__(0,-1,1);
var s=socket.socket();
json.dump(d,fileout);
print(utmless_url);
frame.set_border_width(2);
process(elt.mylargecontent);
newFile.writerow(row);
array([[1,4],[2,-1]]);
list(self._consumers.py_keys());
py_next(f);

unittest.main();
var application_path=os.path.dirname(sys.executable);
self.set(value);
int(self.x);
var test=function __lambda__(m){return min(timeit.repeat(m,setup))};
count[0]+=1;
var query=users.select().order_by(users.c.id.desc()).limit(5);
var conn=MySQLdb.connect(__kwargtrans__(params));
self.func=func;
export var mm=np.mean(mdat,__kwargtrans__({axis:1}));
print(list(diff.elements()));
help(f);
socketIO.wait_for_callbacks(__kwargtrans__({seconds:1}));
var result=a.format(__kwargtrans__({py_name:b}));
self.DISTRICT;
self.lb2=tk.Listbox(self.root,__kwargtrans__({yscrollcommand:self.vsb.set}));
reactor.stop();
self.managed;
var txt=f.read();
self.zfile=zipfile.ZipFile(self.z);
var r=requests.py_get(url);
export var pil_image=PIL.Image.open(file);
plt.xlim(0,5);
(function(){var __accu0__=[];for(var x of k)if(__in__(tuple(x),stuff_in_kDash))__accu0__.append(x);return __accu0__})();
plt.subplots_adjust(__kwargtrans__({hspace:.4}));
print(GLOB_VAR);
print(eval(code));
var c=Counter(chain.from_iterable(list(d.py_values())));
var h1=logging.StreamHandler(sys.stdout);
export var grad=np.array([-1,-1,-.2,-.4,.4,.2]);
ax2.add_line(line);
var hxs=HtmlXPathSelector(response);
print(x.dot(y).shape);
py_typeof(x);
B.sum();
plt.ioff();
s.__getslice__(0,null,-1);
plt.subplot(212);
logging.root.addHandler(console_handler);
var n=X.shape[0];
A.shape;
create_app();
(function(){var __accu0__=[];for(var e of a)__accu0__.append(tuple(e));return set(__accu0__)})();
var p=multiprocessing.Process(__kwargtrans__({target:f}));
var d2=dict(__kwargtrans__({a:1,b:2}));
var inds=np.ravel_multi_index(tuple([rows,cols]),arr.shape);
r.json;
ascends.append([i+1,i+1]);
print(roster);
atan_in_degress(2);
object.__ge__(self,other);
[1,4,9];
any(function(){var __accu0__=[];for(var x of L)__accu0__.append(test(x));return py_iter(__accu0__)}());
print(xmp_str);
leg.get_frame().set_linewidth(0);
app.MainLoop();
export var leftpath=[];
stdin.flush();
var resp=views.my_view(req);
val;
export var dialog=QDialog();
pairs_by_number_and_list[pair[0]].append(pair);
trees.extend(parent.children);
self.queue.append(item);
list.append(val);
cv2.circle(vis,tuple([x1,y1]),2,col,-1);
plt.tight_layout();
gb(pt[0],pt[1],0,0);
something_else();
HexDump();
a[i].__setslice__(0,null,null,np.concatenate(tuple([z,a[i].__getslice__(0,null,1)[np.nonzero(a[i].__getslice__(0,null,1))]])));
pprint(_);
var results=list(ex.map(len,fl));
var fig=plt.figure();
NP.c_.__getitem__([.2,tuple([1,10,1]),60.8]);
k.set_contents_from_string(r.content);
ptr[1]=color[1];
im.paste(255,mask);
print(item);
defaultdict(factory);
print(rowselected[c].value());
plt.plot(x,y,__kwargtrans__({label:label,color:cmap(color),lw:5}));
self.x==other.x&&self.y==other.y;
var txt=f.read();
s.quit();
var a1=np.arange(2);
var file_size=0;
export var this_port=my_socket.getsockname()[1];
print(results[entry]);
filter.children.py_pop();
var c=connection.cursor();
notifier.loop();
self.key=key;
export var greater=qsort(function(){var __accu0__=[];for(var x of inlist.__getslice__(1,null,1))if(x>=pivot)__accu0__.append(x);return __accu0__}());
http_server.serve_forever();
elem.py_pop(elem.index(match));
print(rpy2.__version__);
var user=User.objects.py_get(__kwargtrans__({username:username}));
print(hex(id(y)));
var i=random.randint(0,len(self.data));
var d=random.randint(5,15);
var startupinfo=subprocess.STARTUPINFO();
df_with_cat.show();
dataframe.to_excel(writer,__kwargtrans__({sheet_name:sheets,startrow:row,startcol:0}));
client.close();
models.Field.formfield(self,ObjectListField,__kwargtrans__(kwargs));
var line=models.CharField(__kwargtrans__({max_length:12}));
var __left0__=np.linalg.svd(A,__kwargtrans__({full_matrices:false}));export var U=__left0__[0];var s=__left0__[1];export var Vt=__left0__[2];
hashes.append(hash_dir(os.path.join(path,dir)));
var logger=logging.getLogger(__name__);
plt.hist(x,__kwargtrans__({bins:n,range:tuple([minval,maxval]),weights:weights}));
sys.stdout.flush();
export var fitfunc=function __lambda__(params,x){return params[0]*x+params[1]};
print(tb_last.tb_frame.f_locals);
export var file_name_string=base64.urlsafe_b64encode(your_string);
var a=np.arange(1,11);
print(r.content);
self.diagram.SetCanvas(self);
var parser=argparse.ArgumentParser();
dt.now();
urlpatterns+=staticfiles_urlpatterns();
count+=1;
df;
print(py_values);
var tree=objectify.parse(xmlPath,__kwargtrans__({parser:parser}));
a+b;
X.sum(__kwargtrans__({axis:0}));
pdb.set_trace();
signal.signal(signal.SIGINT,cleanup);
var __left0__=tuple([oldout,olderr]);sys.stdout=__left0__[0];sys.stderr=__left0__[1];
py_next(reader);
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
curdoc().add_root(page_logo);
b.__getitem__([tuple([0,null,1]),tuple([0,null,1]),4]);
plt.show();
xml.parsers.expat;
var a=np.array([0,0,15,17,16,17,16,12,18,18]);
var links=Post.objects.filter(__kwargtrans__({link__tag__instancemodel:instance}));
var sess=tf.Session();
deletelst[0];
var lines=function(){var __accu0__=[];for(var line of f)__accu0__.append(line.strip());return __accu0__}();
export var idx_2D=np.outer(idx,idx);
var s=set(fus_d.py_keys());
exit;
unpad(cipher.decrypt(enc.__getslice__(16,null,1)));
sum(summands);
np.column_stack(tuple([a,b]));
pl.imshow(im_array,__kwargtrans__({cmap:cm.Greys_r}));
var ts=time.timetuple();
var num2=int(argv[2]);
print(tuple([hex(num),num]));
var __left0__=process.communicate();var stdout=__left0__[0];export var notused=__left0__[1];
py_typeof(c);
stuff();
print(i);
self.file.close();
var description=Column(String);
new set([NULL]);
One().f();
joinstr.join(function(){var __accu0__=[];for(var t of self.tokens.__getslice__(0,null,2))__accu0__.append(t.queryString());return py_iter(__accu0__)}());
QtGui.QDialog.__init__(self,parent);

random.choice(largest);
export var books=forms.ModelMultipleChoiceField(__kwargtrans__({queryset:Book.objects.all()}));
var groups=dict(list(gb));
print(my_test.py_name);
self.t2=time.time();
var out=np.bincount(id_arr.cumsum(),np.take(data,np.concatenate(contribs)));
shortcut.Save();
pygame.init();
self.worker.daemon=true;
d[key]=d2[key];
var driver=webdriver.PhantomJS(...args,__kwargtrans__(kwargs));
new_l.append(d);
var length=len(lists[0]);
meas.append(tuple([x,y]));
tuple([new set([0,7,8,9,10,0,0])]);
wmp.Open.Open.Click();
yagmail.SMTP().send(__kwargtrans__({contents:contents}));
list(ln).index(1);
diags.append(A[x][x]*B[x][x]);
A.nbytes;
var csv_reader=csv.reader(f);
[1.5,.8660254];
x.append(row[0]);
sys.stdout=dummyStream();
var __left0__=linregress(x,y);export var slope=__left0__[0];export var intercept=__left0__[1];var r=__left0__[2];var p=__left0__[3];var stderr=__left0__[4];
a.__setitem__(x,a[x][1]);
var mydict=dict(function(){var __accu0__=[];for(var s of myseq)__accu0__.append(tuple([s[0],s.__getslice__(1,null,1)]));return py_iter(__accu0__)}());
iconfile.write(icondata);

self.statusBar.show();
deactivate;
aDict[py_name].append(tuple([int(startTime),int(endTime)]));
csv_out.write(output_line);
dictionary[parts[0]]=1;
x.__setitem__([0,0,0],value1);
var now=datetime.now();
tuple([[0,0,0,1,0]]);
(function(){var __accu0__=[];for(var a of A)for(var b of B)if(__in__(a,b))__accu0__.append(tuple([a,b]));return __accu0__})();
export var dat=pd.DataFrame(np.random.randn(100,100));
bf.flush();
var df2=df.copy();
df[2];
self.py_values=set();
subprocess.check_call(params);
var b=dict(enumerate(a));
object.__str__(self);
element.findall(search);
py_next(m);
true;
var found=false;
df.columns=my_columns;
d[k]=v;
b.py_pop(0);
var df=df[df.C==c_maxes];
var c=muX-b*np.dot(muY,T);
array([2,4]);
response.raise_for_status();
main();
b();
a.shape;
self.button.show();
var temp=np.cumsum(X,__kwargtrans__({axis:0}));
var l=function(){var __accu0__=[];for(var k of h)__accu0__.append(k);return __accu0__}();
print(dict[key]);
cameraR.SetFocalPoint(0,0,0);
np.sqrt(val/2/a.shape[0]);
canvas.restoreState();
var property_asel=function(){var __accu0__=[];for(var [a,truth]of zip(property_a,good_objects))if(truth)__accu0__.append(a);return __accu0__}();
b().mymethod();
plt.title(title);
var __left0__=sp.coo_matrix(df.isnull()).nonzero();var x=__left0__[0];var y=__left0__[1];
Vector(self.x+n,self.y+n);
var out=arr.copy();
var parser=argparse.ArgumentParser(__kwargtrans__({formatter_class:argparse.RawTextHelpFormatter}));
print(darr.min());
df.columns=pd.MultiIndex.from_tuples(df.columns,__kwargtrans__({names:cols}));
var v=Vector(tuple([x,y,z]));
var out=np.empty(tuple([ma,mb,na+nb]),__kwargtrans__({dtype:a.dtype}));
var __left0__=Tup();var v1=__left0__[0];export var v2=__left0__[1];
var counts=function(){var __accu0__=[];for(var [i,v]of enumerate(counts))if(v)__accu0__.append(tuple([chr(i),v]));return __accu0__}();
self.panel=wx.Panel(self);
var hxs=HtmlXPathSelector(response);
chord(207.652);
chord(195.998);
export var seed=np.random.randint(0,100,tuple([200,206]));
export var P1Sum=P1Channels.sum(__kwargtrans__({axis:1})).sum();
export var numrows=len(input);
unittest.main();
py_typeof(x)(y);
bin(y);
list(gen);
Html.fromHtml(html).toString();
[1,5,9];
handle.set_missing_host_key_policy(ssh.AutoAddPolicy());
driver.py_get(URL);
db.authenticate(self.user_name,self.password);
var soup=bs.BeautifulSoup(content);
print(p);
export var M_inverse=M.inv();
word.__getslice__(0,-1,1);
self.queue=multiprocessing.Queue(-1);
(function(){var __accu0__=[];for(var record of cursor)__accu0__.append(record[0]);return __accu0__})();
ax.view_init(__kwargtrans__({elev:elevation_angle,azim:azimuthal_angle}));
print(ElementTree.tostring(thing));
line.set_color(label);
var x=d[x];
result.append(map(decimal.Decimal,line.py_split()));
var img=scipy.misc.imread(fname);
traceback.print_exc();
export var plot_matrix=np.zeros(tuple([height,width]));
np.log(a)/(k+1)*Math.pow(x,k+1);
gevent.joinall(jobs,__kwargtrans__({timeout:2}));
var r=csv.reader(f);
py_typeof(seen.add(10));
tuple([k,v]);
export var out_str=subprocess.check_output(cmd,__kwargtrans__({shell:true}));
var sets=np.array_split(arr,4);
py_next(g);
df;
after_setup_task_logger.connect(foo_tasks_setup_logging);
plt.close(fig);
plt.xlim(1,2.2);
pd.DataFrame(dict(__kwargtrans__({birdType:someTuple[0],birdCount:someTuple[1]})));
var competitors=Competitors.objects.all();

var out=process.stdout.read(1);

var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
set(function(){var __accu0__=[];for(var val of list(periodic_gs.py_values()))for(var n of val.nodes())__accu0__.append(n);return py_iter(__accu0__)}());
generator.workbook.close();
q.__setitem__([0,0],5);
var result=function(){var __accu0__=[];for(var k of da.py_keys()&db)__accu0__.append([k,da[k]+db[k]]);return __accu0__}();
main();
var result=result<min_value?min_value:result;
list(samples2);
export var download=requests.py_get(url);
var body=resp.read();
parse(string);
var line=m.readline();
render2Dstuff();
self.assertEqual(mock_boo_obj.e.call_count,1);
subprocess.call(kill_command,__kwargtrans__({shell:true}));
cur.close();

var writer=csv.writer(fo);
target.write(str(source.read(),sourceEncoding).encode(targetEncoding));
c.stop();
predict_on_batch(self,x);
export var data_array=np.array(data);
m.drawcoastlines(__kwargtrans__({linewidth:.5}));
var X=np.random.uniform(0,1,__kwargtrans__({size:tuple([nx,dim])}));
export var characteristics=Characteristics();
find_planar_subgraph(G);
var response=request.urlopen().read();
draw.ellipse(tuple([x_pos,y_pos,x_pos+box_edge,y_pos+box_edge]),__kwargtrans__({fill:255}));
grow(m,r,c);
var ax=fig.add_subplot(111,__kwargtrans__({polar:true}));
len(df)==0;
library(rjson);
var x=np.array([true,true,false]);
var b=bytearray();
sys.exit(0);
var output=process.communicate()[0];
len(set(x));
line_num+=1;
offset+=len(i)+len(delimiter);
plt.plot(x2,y2);
var __left0__=np.shape(img).__getslice__(0,2,1);var width=__left0__[0];var height=__left0__[1];
df2;
deleteself.d[k];
isinstance(12,retype);
request.session.save();
os.remove(fullpath);
var wb=Workbook();
print(G.edges());
print(line);
ptree.productions();
example[[1]];
d.hexdigest();
var r=pd.DataFrame(X.toarray(),__kwargtrans__({columns:vect.get_feature_names()}));
csv_writer.writerows(rows);
dflist.append(df);
event.process();
print(zzz());
export var ctr=Counter(function(){var __accu0__=[];for(var x of a)__accu0__.append(frozenset(x));return py_iter(__accu0__)}());
parser.parse(s);
var a=Yd();
self._x;
a.A;
export var newDf=sqlContext.createDataFrame(df.rdd.flatMap(rowExpander));
export var is_my=soup.new_string(is_my);
f(2);
axis.set_visible(true);
os.execv(sys.executable,args);
var t=datetime.datetime.today();
var full_path=os.path.join(directory,py_name);
print(line);
result.append(tree);
var n=len(array);
isinstance(thing,str);
mf.seek(0);
os.path.basename(urlparse.urlsplit(url)[2]);
var __left0__=tuple([pd.DataFrame(),pd.DataFrame(),pd.DataFrame()]);var a=__left0__[0];var b=__left0__[1];var c=__left0__[2];
var index=find(target,key,start_index);
translate(coding_dna,__kwargtrans__({to_stop:true}));
k.extend(a);
main();
output.close();
vdisplay.stop();
love_ctx.add(tuple([alice,loves,bob]));
df.to_csv(combined_file,__kwargtrans__({index:false}));
t.remove(elem);
time.sleep(x);
thread.start();
cls(_hours,_minutes,_seconds);
var alist2=[];
nl.append(uniq(base,i));
var id=Column(Integer,__kwargtrans__({primary_key:true}));
var B=np.random.rand(100,2);
var __left0__=temp_tuple;var a=__left0__[0];var b=__left0__[1];
var result=pd.DataFrame();
ax1.set_aspect(1);
export var ordc=ord(c);
my_main_func();
var soup=BeautifulSoup(html);
var b=function(){var __accu0__=[];for(var x of a)if(!__in__(x,itemsToRemove))__accu0__.append(x);return __accu0__}();
export var new_lock=threading.Lock();
var uniq=list(uniq.py_values());
var data=request.get_json();
fkwargs.py_update(gkwargs);
var d2=date(2012,1,1);
list(repeat(100,randint,1,100));
var y=np.arange(W);
a.has_usable_password();
export var lmask=len(mask);
var df=df[cols];
pd.DataFrame(np.fromstring(arr,__kwargtrans__({dtype:np.uint8})).reshape(-1,8)-48);
pool.join();
var height=int(cv.GetCaptureProperty(cap,cv.CV_CAP_PROP_FRAME_HEIGHT));
print(np.all(b==d));
print(line.strip());
member.value;
df.ix[df.Col1.isin(search_list)&df.Col4>40];
G_pc.add_edges_from(edges_2212);
var length=len(s);
wa.login(login,password);
layout.addWidget(self.pb);
print(np.allclose(A1,A2));
logger.handlers[0].stream.close();
xml2.getroottree().write_c14n(xml_string_io2);
export var raw_file=os.path.join(permanent_store,file.py_name);
os.rename(path,newpath);
plt.ylim([-l/2,l/2]);
proxy._get_current_object();
print(args);
export var Rev5=1;
self.config(__kwargtrans__({image:self.frames[self.idx]}));
var line=line.rstrip();
print(leapyr(1900));
self.brushes.append(brush);
export var forwarder=serial.Serial(com_port2,baudrate);
var words=function(){var __accu0__=[];for(var line of f)for(var w of line.py_split())if(is_difficult(w))__accu0__.append(w);return py_iter(__accu0__)}();
x.__getitem__([]);
main(sys.argv);
var mod=__import__(module_name,__kwargtrans__({fromlist:[class_name]}));
f.close();
print(count);
__init__.py;
print(filename);
export var rolled=np.roll(y,-1,__kwargtrans__({axis:1}));
aList.py_pop();
sorted(set(a))[-1];
print(df);
var lines=file.readlines();
unittest.main();
ignored;
cls.change_mro=false;
object.__new__(A);
max(PlayerList,__kwargtrans__({key:function __lambda__(p){return max(p.__getslice__(1,null,1))}}));
var result=conn.execute(sql);
random.shuffle(z);
self.__dict__.py_update(kwargs);
var curs=conn.cursor();
self.thread.start();
print(d[4]);
print(results);
var __left0__=curve_fit(line_exp,x,y,e0);var e=__left0__[0];export var ecov=__left0__[1];
B.__setitem__([tuple([0,null,1]),n],np.random.randn(N));
export var data_copy=deepcopy(json_data);
dlg.EndModal(0);
var H=H/np.std(H);
var arr=np.zeros(tuple([200,20,10,20]));
legline.set_linewidth(lw);
logOutput.setLineWrapMode(QTextEdit.NoWrap);
var app=QApplication(sys.argv);
export var stripped_lines=function(){var __accu0__=[];for(var line of fd)__accu0__.append(line.strip());return py_iter(__accu0__)}();
(function(){var __accu0__=[];for(var [n,d]of list(G.in_degree().py_items()))if(d==0)__accu0__.append(n);return __accu0__})();
self.setZValue(-1);
print(arr.__getslice__(0,null,1));
line1.set_ydata(np.sin(x+phase));
false;
var data=json.loads(json_text);
var args=argparse.ArgumentParser.parse_args(self,...args,__kwargtrans__(kw));
py_metatype.__init__(cls,py_name,bases,classdict);
var df2=merge(df1,csv2,__kwargtrans__(kw2));
export var pattern_obj=re.compile(pattern,re.MULTILINE);
df;
var fig=plt.figure();
tasks.append(c.delay(a));
var country=CharField(__kwargtrans__({max_length:200}));
j.environment.filters.py_update(dict({}));
var cur=con.cursor();
dis.dis(f);
var fig=plt.figure();
print(foo.__getslice__(0,2,1));
var opener=urllib.request.build_opener(handler);
label1.grid(__kwargtrans__({row:i,column:0}));
var words=text.py_split();
var soup=BeautifulSoup(html);
self.include_dirs.append(numpy.get_include());
len(vals);
n+=1;
path+=py_iter(function __lambda__(){return predecessor_map[path[-1]]},origin);
x.__setitem__(0,100);
(function(){var __accu0__=[];for(var i of a)__accu0__.append(id(i));return __accu0__})();
isinstance(y,tuple([np.ndarray,np.generic]));
f.seek(offset);
etree.tostring(doc,__kwargtrans__({xml_declaration:true}));
var biggest=mylist.__getslice__(-2,null,1);
calculation();
np.lib.stride_tricks.as_strided(a,__kwargtrans__({shape:shape,strides:strides}));
f();
cls();
plt.plot(p,x,__kwargtrans__({c:tuple([0,0,0,.1])}));
print(function(){var __accu0__=[];for(var [i,x]of enumerate(f))if(1<=i&&i<=15)__accu0__.append(x);return __accu0__}());
self.tstore.append([osp.basename(f)]);
var b=np.unpackbits(bitmap[np.packbits(a,__kwargtrans__({axis:1}))],__kwargtrans__({axis:1}));
process.kill();
var input=raw_input;
s.headers.py_update(headers);
yEstArray.append(yEst);
NULL;
merged_list.append(tuple([x,index1,index2]));
18.28165417900891;
print(dirichlet([1]*n));
var image_file=Image.open(img_path);
self.chambersinreactor+=1;
m.drawcoastlines();
var y=numpy.array(function(){var __accu0__=[];for(var xi of x)__accu0__.append(numpy.array(xi));return __accu0__}());
int(mktime(obj.timetuple()));
var mydict=function(){var __accu0__=[];for(var [k,v]of list(mydict.py_items()))if(k!=val)__accu0__.append([k,v]);return dict(__accu0__)}();
_quicksort(array,begin,pivot-1);
var fn=os.path.join(dir,py_name);
export var dtypes=left.dtypes.combine_first(right.dtypes);
(function(){var __accu0__=[];for(var line of lines)__accu0__.append(line.draw(__kwargtrans__({color:tuple([255,0,0])})));return __accu0__})();
any(map(function __lambda__(c){return c.isdigit()},value));
var __left0__=min(function(){var __accu0__=[];for(var s of squares)if(len(py_values[s])>1)__accu0__.append(tuple([len(py_values[s]),s]));return py_iter(__accu0__)}());var _=__left0__[0];var s=__left0__[1];
var x=np.arange(-1,1,.1);
var fig=plt.figure();
dict.__setitem__(self,key,val);
g.db.close();
a.py_pop(0);
self.tck=fitpack.bisplrep(x,y,z,__kwargtrans__({kx:kx,ky:ky,s:0}));
self.file_name=file_name;
var cj=cookielib.LWPCookieJar();
var x=np.arange(16).reshape(4,4);
ax.xaxis_date();
plt.figure(2);
var dist=sum(function(){var __accu0__=[];for(var i=1;i<input_key;i++)__accu0__.append(dict[i]);return py_iter(__accu0__)}());
str(carray);
var df=pd.DataFrame();
animal.save();
p.start();
var server=tornado.httpserver.HTTPServer(application);
(function __lambda__(){var a=tuple([].slice.apply(arguments).slice(0));return func(...a+args)});
var d=defaultdict(int);

export var millis=int(round(time.time()*1E3));
[buildout];
var a=Apples();
__init__.py;
set(ast.literal_eval(line));
a*c;
Base.metadata.create_all(engine);
export var recv2=recv2.decode();
export var recv4=recv4.decode();
net.addModule(hidden0);
TerminateProcess.restype=ctypes.wintypes.BOOL;
var list=yaml.load(file);
my_c_func(py_values.ctypes.data_as(c_void_p),c_long(py_values.size));
(function(){var __accu0__=[];for(var _f of lis)if(_f)__accu0__.append(_f);return __accu0__})();
export var theoryX=np.arange(0,1,.1);
result.py_update(list(range(int(x[0]),int(x[-1])+1)));
export var installation_path=p.__file__;
axes.set_xticks(ticks.__getslice__(0,null,n));
plt.imshow(img);
var now=datetime.now();
result;
var total=numpy.sum(x+y);
readFrom(stream_proxy.stream());
export var dev1=os.stat(file1).st_dev;
var form=PersonForm(request.POST);
sniff(__kwargtrans__({prn:makecap}));
face_list.add(tuple([a,x,b]));
j+=1;
df.columns=df.columns+1;
user.save();
tuple([[0,0,1]]);
var first_name=models.CharField(__kwargtrans__({max_length:100}));
lst.append(tuple([start,length]));

var arr=np.fromiter(itertools.chain(...it),int).reshape(-1,2);
xy.__getitem__([tuple([0,null,1]),1]);
var ax=fig.add_subplot(211);
red.setTo(Scalar(255),mask_red);
var cursor=db.cursor();
print(a([1,2,9999,4,9999,9999,12],0,0));
q.put(getattr(a,target)(...args,__kwargtrans__(kwargs)));
export var delete_when=db.DateTimeProperty();
print((np.linalg.det(A)-a.det())/a.det());
stdscr.keypad(1);
pp(expr,__kwargtrans__({use_unicode:true}));
show(p);
var object_id=models.PositiveIntegerField(__kwargtrans__({null:true}));
y.start();
var lock=multiprocessing.Lock();
sum(a*b);
intermediate_list.append(td.findNext(__kwargtrans__({text:true})));
export var bets=Math.pow(2,toss2.cumsum());
update_screen();
var c=np.setdiff1d(a,b);
Qt.QWidget.__init__(self);
outfp.getvalue();
self.assertFalse(flag);
cv2.waitKey(5);
var A=tuple([X,Y]);
datetime.datetime(...map(int,mat.groups().__getslice__(-1,null,-1)));
timeit(set(a)&set(b));
pd.DataFrame(dict(__kwargtrans__({columns:box(a).tolist()})));
var json_data=json.load(json_file);
print(match[0]);
self.things_lock=threading.Lock();
d1[k]-=v;
var t=datetime.time(0,0,0);
print(df);
var res=np.array_equal(A,B);
var __left0__=cv2.findHomography(pts_src,pts_dst);var h=__left0__[0];var status=__left0__[1];
background.paste(img,offset);
var path=sys.argv[1];

var Y=np.random.uniform(0,1,__kwargtrans__({size:tuple([ny,dim])}));
Matrix.map(function __lambda__(a,b){return a+b},self,other);
self.response.write(self.jinja2.render_template(template,__kwargtrans__(context)));
f(...args,__kwargtrans__(kwargs));
image.thumbnail(size,Image.ANTIALIAS);
+1+1+1+1+1+1-1-2+1-1-1-2;

response.close();
q_in.delete_message(qmessage);
print(dict(zip(p,i)));
var s=json.dumps(foo);
parser.parse_args();
plt.show(__kwargtrans__({block:false}));
print(Example.Variable);
dictionary[new_key]=dictionary[old_key];
sys.stdout=sys.__stdout__;
var img2=cv2.imread(img2_path,cv2.CV_LOAD_IMAGE_GRAYSCALE);
print(m.group());
vals[bisect.bisect_right(py_keys,.5)];
sysconfig.get_python_inc();
var a=[5,8,9];
self.channel=self.connection.channel();
export var count_list=function(){var __accu0__=[];for(var i=0;i<N;i++)__accu0__.append(i+1);return __accu0__}();

custm.cdf(2.5);
ax.set_axisbelow(true);
(function(){var __accu0__=[];for(var doc of db.units.find())__accu0__.append(doc);return __accu0__})();
len(rg.findall(regexp));
0;
var ax=plt.gca();
Canvas.__init__(self,parent,__kwargtrans__(kwargs));
self.__class__(res);
monkey.patch_all();
run_daemon();
var pool=Pool(4);
export var desired_ages=np.array([4,16,29,80]);
nodes.extend(n.comparators);
print(np.tensordot(v,A,__kwargtrans__({axes:tuple([0,2])})));
wget-q-O-icanhazip.com;
crawler.start();
export var year_hour_means=df1.groupby(function __lambda__(x){return tuple([x.year,x.hour])}).mean();
signal.alarm(1);
str.__new__(cls,...args,__kwargtrans__(kw));
plt.contourf(d);
count+=flatten_count(item,element);
os.close(fh);
ax2.yaxis.label.set_color(plot_ax2.get_color());
var e1=tk.Entry(self);
var new_dict=dict(zip(py_keys,initial_list));
img.paste(wmark,tuple([0,0]),wmark);
var fig=pylab.figure();
A.__init__(self,1,2);
print(r.status_code);
var classifier=nbc.train(feature_set);
screen.force_update();
plt.show();
var number=random.randrange(10);
item.patch.set_visible(false);
print(unique_rows(data));
sess.run(init);
messages.append(message);
self.d=dict({});
print(bare_argspec);
var now=datetime.datetime.utcnow();
relaxng.validate(doc);
np.random.seed(1977);
export var cdr=list.__getslice__(1,null,1);
[1,2,1];
tuple([[.09558515,0,0]]);
self.Destroy();
fhan.setLevel(logging.DEBUG);
plt.show();
admin.site.register(User,UserAdmin);
(function(){var __accu0__=[];for(var w of wordlist)if(regex.match(w))__accu0__.append(w);return __accu0__})();
var t=numpy.array([.24]);
sock.listen(5);
s[0][0]+=1;
self.scrollbar.config(__kwargtrans__({command:self.yview}));
new_dict[pair[1]].append(pair[0]);
self.connection.shutdown();
print(s.query(A,B).select_from(subq).all());
r[0].tag;
setattr(obj,self.private_name,value);
var t=TestModel.objects.all();
var opener=urllib.request.build_opener(...handlers);
var new_foo=[];
print(df);
stream.write(self.terminator);
ax.scatter(x,y,__kwargtrans__({s:200,facecolors:rgb}));
var loc=image.get_rect().center;
plt.clf();
df;
export var bigList=function(){var __accu0__=[];for(var i=0;i<Math.pow(10,6);i++)__accu0__.append(int(1E3*random()));return __accu0__}();
var sess=tf.Session();
var p4=ctypes.cast(id(tb),ctypes.POINTER(ctypes.c_uint));
var fig=matplotlib.pyplot.figure();
var py_name=models.CharField(__kwargtrans__({max_length:60}));
var counts=np.bincount(a);
plt.xticks(xticks);
var idx=np.floor(input).astype(np.int);
spotify.playpause();
UTF-8;
var __left0__=fig.canvas.get_width_height();var width=__left0__[0];var height=__left0__[1];
sorted(output.py_items());
loop.run_until_complete(do_work());
export var JM2=JM2.transpose([1,2,0]);
g.add_legend();
print(map(etree.tostring,x));
export var df4=pd.DataFrame(np.random.rand(6,2));
self.inner_sizer.Add(self.test_panel,1,wx.LEFT|wx.RIGHT|wx.EXPAND,50);
self.errorcall=errorcall;
self.buttonPanel2.Show(false);
all(function(){var __accu0__=[];for(var n of f)__accu0__.append(py_typeof(n)==str);return py_iter(__accu0__)}());
tuple([url,len(page)]);
new_driver.set_window_size(800,450);
var response=br.submit();
help(list.__contains__);
Queue.interruptable_get=interruptable_get;
py_next(inf);
self.A=np.arange(1E3);
var content=models.TextField();
df.idxmin(__kwargtrans__({axis:1})).py_values;
var scopes=list(scopes);
var root=tk.Tk();
print(list(round_robin(teams,__kwargtrans__({sets:len(teams)*2-2}))));
var __left0__=orig_image.size;var width=__left0__[0];var height=__left0__[1];
self.layout=QVBoxLayout(self);
rect(x,0,dx,y,color);
var x=np.arange(0,10,.01);
self.start();
dict.fromkeys(s);
var string=string.__getslice__(1,-1,1);
result.append(i);
results.append(i[1]);
tostring(root);
var sh=book.add_sheet(sheet);
var keypoints=detector.detect(imthresh4);
new set([new set([secrets|to_nice_yaml(__kwargtrans__({width:50,explicit_start:true,explicit_end:true}))])]);
c1.setopt(pycurl.PROXYPORT,8080);
e.bark();
export var chars=function(){var __accu0__=[];for(var word of fileinput.input())for(var ch of word.rstrip())__accu0__.append(ch);return py_iter(__accu0__)}();
print(imsi);
var s=binascii.unhexlify(a);
var session2=SessionDST();
self.serialc.start();
var indices=np.arange(9);
plt.plot(X_plot,X_plot*results.params[0]+results.params[1]);
tornado.options.parse_command_line();
print(line);
var browser=webdriver.Firefox();
db.close_connection();
z.close();
f(__kwargtrans__(__mergekwargtrans__({b:2},example)));
print(b.__getitem__([tuple([0,null,1]),tuple([0,null,1]),0]));
var __left0__=plt.subplots(1,1);var f=__left0__[0];var ax=__left0__[1];
data.py_values[bool_indices];
print(t.overlap(tuple([-10,10])));
str(b);
self.py_update(dict(...args,__kwargtrans__(kwargs)));

shutil.copyfileobj(r.raw,f);
plt.ylim([-8,8]);
export var paramtoget=dict([[pval,wt_val]]);
l.append(a);
self.ready.emit();
self.treeview.set_search_entry(self.search_entry);
plt.close();
var x=random.choice([a,b]);
(x+h&m)-h;
var py_values=function(){var __accu0__=[];for(var item of py_items)__accu0__.append(item[1]);return __accu0__}();
a.__getslice__(0,nonzero(a!=b)[0][0],1);
var app=wx.App();
print(cumsum(array));
var b=a;
(function(){var __accu0__=[];for(var [key,group]of groupby(li))if(sum(function(){var __accu1__=[];for(var i of group)__accu1__.append(1);return py_iter(__accu1__)}())==1)__accu0__.append(key);return __accu0__})();
var response=requests.py_get(newUrl).text;
x-np.roll(x,1);
(function(){var __accu0__=[];for(var key of common_keys)__accu0__.append([key,tuple(function(){var __accu1__=[];for(var d of dicts)__accu1__.append(d[key]);return py_iter(__accu1__)}())]);return dict(__accu0__)})();
_odbcinst_SystemINI(szFileName,FALSE);
form.populate_obj(person);
len(self._inner);
cPickle.dumps(object());
export var match_str=match.group(0);
self.b.clear_cookies();
export var y6=x.astype(np.float_);
logger.setLevel(logging.DEBUG);
export var Hhigh=ifftshift(Hhigh);
venus.circle(108,1);
print(cmp(list_2,list_1));
var max_value=max(sentiment_dict.py_values());
chain(list_,_foo_suffix());
stopped.set;
true;
export var libp=os.path.abspath(lib);
var value=process_value(raw_value);
print(doc.prettify());
bar();
var G=nx.Graph();
var d=defaultdict(list);
export var sA=pd.Series(A);
export var sub=s.__getslice__(pair[0],pair[1],1);
set([6]);

export var plusone=[];
export var syscall=libc.syscall;
var color=QtGui.QColor(0,0,0);
unittest_main();
ax.figure.canvas.draw_idle();
sys.exit();
var x=np.array(x);
export var df_r=pipeline.fit(df).transform(df);
print(contents);
_f_values[a][b];
print(count);
self.canvas.widgetlock(self.lasso);
signal.alarm(1);
var user1=forms.ChoiceField(__kwargtrans__({choices:choices}));
Encoders.encode_base64(ical_atch);
ax.add_collection(lines);
var s=socket.socket(socket.AF_INET,socket.SOCK_DGRAM);
var b=np.array([4,5,6]);
var __left0__=optimize.fmin(cost,tuple([x0,y0,r]));var x0=__left0__[0];export var y0=__left0__[1];var r=__left0__[2];
ax.set_zlim(-1.01,1.01);
var data=dict({});
_jobs[jobname].apply_async(__kwargtrans__({args:args,kwargs:kwargs}));
export var hexdigits=function(){var __accu0__=[];for(var x of hex_string)__accu0__.append(int(x,16));return __accu0__}();
var Y=np.matrix([[1,0,1,1]]).T;
export var nn=ga.learn(0)[0];
export var test_set=np.array(test_set);
crawler.crawl(spider);
numpy.random.shuffle(index_array);
cerr<<endl;
text.pack();
self.setLayout(v_box);
var response=urllib.request.urlopen(request);
time.sleep(1);
var data=s.recv(1024);
print(df[col].value_counts(__kwargtrans__({dropna:false})));
fibm(x-1)+fibm(x-2);
self.data.py_pop();
var cursor=con.cursor();
false;
pairs[mask];
export var tempCS1=plt.imshow(frame,__kwargtrans__({cmap:plt.cm.gray}));
result.extend(sublist);
w.wcs.cdelt=numpy.array([cdeltX,cdeltY]);
print(groups.median());
funcs.append(c);
app.exec_();
py_next(self.py_iter);
self.window.get_toplevel().show();
export var htmlparser=etree.HTMLParser();
os.makedir(sdsd);
defaultdict(int);
increments[n-1]+=1;
os.chdir(tmp_location);
file_handle.write_to(text);
print(re.escape(s));
[4,1,1];
yolk-l;
string.format(...diff,__kwargtrans__(some_date));
var layout=QtGui.QVBoxLayout(self);
export var img_color=np.dstack(tuple([img,img,img]));
A.__setitem__([tuple([0,null,1]),j],Math.pow(x,j));
someList.append(copy.copy(foo));
var res=NP.append(my_data,new_col,__kwargtrans__({axis:1}));
S2+=len(set(ids));
print(line);
var obj=json.loads(encoded);
var a=np.arange(10);
df.year=df.year.astype(int);
callback(self._global_wealth);
res.extend(res_females.py_get());
var max_index=np.argmax(a.__getitem__([inds.__getitem__([tuple([0,null,1]),0]),inds.__getitem__([tuple([0,null,1]),1])]));
sound.stop();
response.write(bytes);
var root=Tk();
print(f[1]);
print(elt.eltid);
some_other_func(something_else);
traceback.print_exc(__kwargtrans__({file:sys.stderr}));
export var locationgroup=models.ForeignKey(LocationGroup);
print(add_time(datetime(__kwargtrans__({year:2015,month:12,day:25})),relativedelta(__kwargtrans__({months:+1}))));
count+=1;
var id=db.Column(db.Integer,__kwargtrans__({primary_key:true}));
var idx=np.where(a)[0];
print(model.__name__,function(){var __accu0__=[];for(var x of model._meta.fields)__accu0__.append(x.py_name);return __accu0__}());
export var asteroids=Game(600,600);
self.hbox.pack_start(self.button,false,false,0);
var new_items=function(){var __accu0__=[];for(var item of py_items)__accu0__.append(str(item));return set(__accu0__)}();
browser.add_handler(auth_NTLM);
export var truncnorm_samples=norm.ppf(cdf_samples);
var mask=Math.pow(X,2)+Math.pow(Y,2)+Math.pow(Z,2)<Math.pow(radius,2);
var idx=random.choice(list(range(num_outcomes)));
groups.append(newGroup);
export var withinx=random.randrange(x1,x2+1);
cr.rectangle(0,0,...widget.get_size());
waw-.464188;
x.item();
var fp=os.path.join(dirpath,f);
var data=response.json();
var d=collections.defaultdict(list);
var data=grouped_count.apply(as_perc,__kwargtrans__({total:df.my_label.count()}));
os.unlink(filename);
example.__setslice__(4,0,null,[122]);
[atlas];
var counts=collections.Counter(function(){var __accu0__=[];for(var l of infile)__accu0__.append(l.strip());return py_iter(__accu0__)}());
export var root2=Tkinter.Toplevel(root);
mvnorm.pdf(x,__kwargtrans__({mean:0,cov:1}));
G.add_edge(u,v,__kwargtrans__({weight:w}));
peasant.knock_over();
self.f_=f;
obj.__class__=py_typeof(base_cls_name);
pythoncom.PumpWaitingMessages();
b.delete_key(k);
var instance=reservation.instances[0];
var d=dict({});
ceiling_key(d,0);
export var shift_vals=np.hstack(tuple([array1[0],np.diff(array1)-lens.__getslice__(0,-1,1)+1]));
export var positive=set(function(){var __accu0__=[];for(var x=1;x<5;x++)for(var y=1;y<5;y++)__accu0__.append(tuple([x,y]));return py_iter(__accu0__)}());
print(difft2(time(20,40,0),time(22,41,0)));
debian;
var key=bytes([19,0,0,0,8,0]);
attachment.get_content_type();
export var passhash=db.Column(db.String(100));
print(C);
print(py_typeof(unicode_text));
out.writerow(data);
json.dump(r.json,sys.stdout,__kwargtrans__({indent:4,ensure_ascii:false}));
var __left0__=tuple([ind2.__getslice__(cx1,cx2,1).copy(),ind1.__getslice__(cx1,cx2,1).copy()]);ind1.__setslice__(cx1,cx2,null,__left0__);ind2.__setslice__(cx1,cx2,null,__left0__);
export var sum_gx=np.trapz(gx,x,dx);
export var referred_classes=function(){var __accu0__=[];for(var r of i.relationships)__accu0__.append(r.mapper.class_);return __accu0__}();
export var oftype=collections.defaultdict(list);
plt.plot(x,kd_vals);
var y=np.random.randn(N);
install.run(self);
cell.value=1;
axs[i].get_yaxis().set_ticks([]);
self.num=foo.num+1;
var a=[];
plot(x,y);
set(main_array)-set(second_array);
sportDict[ransport].append(py_name);
numpy.nextafter(1,0)>1-sys.float_info.epsilon;
s.dt.components;
self.send_blob(blob_info,__kwargtrans__({content_type:type1,save_as:save_as1}));
print(np.intersect1d(B,ind));
f0(s(t));
writer.writeheader();
var py_name=models.CharField(__kwargtrans__({max_length:200}));
print(list(text.py_get()));
self._start=start;
var d=OrderedDict();
var relative=os.path.relpath(path,directory);
a.resize(len(b),__kwargtrans__({refcheck:0}));
main();
i[0];
var __left0__=img.size;export var img_w=__left0__[0];export var img_h=__left0__[1];
locations.append(locationx);
float(1).is_integer();
var root=Tkinter.Tk();
post_save.connect(my_post_save_handler);

(function __lambda__(){return user_is_admin(cherrypy.request.login)});
M[index];
player.clearCards();
var mask1=np.in1d(out_id,a.__getitem__([tuple([0,null,1]),0]));
signal.alarm(0);
print(sc.parallelize(list(range(i*1E4))).count());
var x=np.random.randn(1E4,1E4);
var arr=i*np.ones(tuple([2,4]));
new set([NULL,NULL]);
dumper.represent_int(hex(data));
export var new_pressures=[];
browser.submit();
export var fmin=Math.floor((N-1)/f2)+1;
var lengths=Counter(function(){var __accu0__=[];for(var v of list(testdata.py_values()))__accu0__.append(len(v));return py_iter(__accu0__)}());
legend_fig.canvas.draw();
mod1.pxd;
export var spreadsheets_client=gdata.spreadsheet.service.SpreadsheetsService();
print(line,line2);
x.py_pop(0);
stdscr.py_clear();
export var new_settings=termios.tcgetattr(sys.stdin);
var d=dict(zip(py_keys,groups));
var X=np.hstack(tuple([X,AllAlexaAndGoogleInfo]));
tuple([.7105,sym2,6,5,10,10]);
self.Bind(wx.media.EVT_MEDIA_LOADED,self.song_is_loaded);
var s=df.sum(__kwargtrans__({axis:1,level:[0,1]})).T;
self.f1=MethodType(f,self,self.__class__);

q.put_nowait(tuple([url,host]));
(function(){var __accu0__=[];for(var _ of iterable)if(!_.isdigit())__accu0__.append(_);return __accu0__})();
var x=[1,2];
var df=pd.concat([df,dummies],__kwargtrans__({axis:1}));
export var column_widget=gtk.VBox();
var c=a+b;
data_rows.append(row);
export var ri=function __lambda__(){return random.randint(0,10)};
var user=models.ForeignKey(User);
np.import_array();
Py_Initialize();
export var nL=[0,0,0,0,0,0,0,0,0];
t.show();
f.z;
deletenum_list[0];
worker.finished.connect(self.thread.quit);
alchemy/bin/bpython;
xlim(0,10);
self.sock.settimeout(self.timeout);
var pattern=url[0][1];
archives[-1];
print(function(){var __accu0__=[];for(var i of range(0,len(bn),8))__accu0__.append(int(bn.__getslice__(i,i+8,1),2));return __accu0__}());
root.mainloop();
print(merge_to_couples(new_list));
var df=pd.DataFrame(data2);
print(tuple([y,z,bigmat.__getitem__([tuple([0,null,1]),y,z])]));
expr.subs(dict([[x,10],[y,5]]));
self.label;
list_of_numbers.append(float(val));
var dt=parser.parse(s);
A.__getitem__([0,tuple([0,null,1]),tuple([0,null,1])]);
print(line);
export var main_window=QtGui.QMainWindow(__kwargtrans__({size:QtCore.QSize(500,500)}));
difflib.get_close_matches(dud[0],pc_dud);
print(df1);
var df1=df1.reset_index();
CharField.__init__(self,...args,__kwargtrans__(kwargs));
var sck=socket.socket(socket.AF_INET,socket.SOCK_STREAM);
to_modify[indexes[index]]=replacements[index];
pickle_test();
import_module(moduleName);
var m=numpy.random(100,100)>.5;
f.write(str_object2);
var B=np.reshape(A,tuple([A.shape[0],A.shape[1],np.prod(A.shape.__getslice__(2,null,1))]));
f1.seek(start);
var V=numpy.dot(X.transpose(),X);
export var ints=function(){var __accu0__=[];for(var n of s.py_split())__accu0__.append(int(n));return __accu0__}();
var mask=tf.placeholder(tf.bool,__kwargtrans__({shape:tuple([n,n])}));
var a=wrp_testchar(byref(steps),byref(in_data),in_char);
print(elem.text);
var result=function(){var __accu0__=[];for(var i of n)__accu0__.append(function(){var __accu1__=[];for(var e of i)__accu1__.append(e-1);return __accu1__}());return __accu0__}();
print(mag(data));
mars.speed(1);
ndb.put_multi(model_dbs);
test.columns=pd.MultiIndex.from_tuples(index_tuples);
var data=array([[1.766,-1.765,2.576,-1.469,1.69]]);
new set([new set([form.py_name()])]);
handle_last_line(previous);
array([[1,4],[2,-1]]);
(function(){var __accu0__=[];for(var k of np.searchsorted(bins,my_series))__accu0__.append(bins[k]);return __accu0__})();
stack.py_pop();
var shape=function(){var __accu0__=[];for(var x of output)__accu0__.append(x.size);return __accu0__}();
var dct=isinstance(obj,dict)?obj:obj.__dict__;
self.mainLayout.addWidget(self.scroll);
var tree=dict();
a.__getitem__([tuple([0,null,1]),b]).T;
_diff-=timedelta(__kwargtrans__({days:1}));
self.tin2.SetLabel(self.tin.GetValue());
export var integral=scipy.integrate.nquad(f,tuple([[-d/2,d/2],[-d/2,d/2]]))[0];
export var h2=hyst(y,-.5,.5,true);
var y=np.array([2,1,5,10,100,6]);
var p=mp.Pool(__kwargtrans__({processes:4}));
[5,6,7];
bp.show();
var soup=BeautifulSoup(s);
callable(obj);
yaml.dump(d,__kwargtrans__({default_flow_style:false}));
np.allclose(a,collapse_dims(a));
print(jsons_data);
export var byteString=bytes.astype(np.ubyte).tostring();
plt.figure(i+1);
reactor.run();
thread.join();
var w=Tkinter.Tk();
var t=numpy.linspace(t_start,t_end,t_len);
canvas.itemconfig(item,__kwargtrans__({fill:self.on_color}));
ax2.set_xlim(-5,5);
shutil.copyfileobj(sys.stdin,sys.stdout);
pprint.pprint(result);
elements.extend(namedElements);
var A=A.view(__kwargtrans__({dtype:np.float64}));

print(square(double(Maybe(5))).unwrap());
Data.__getitem__([,0])+complex(0,1)*Data.__getitem__([,1]);
X.append(x);
export var APPLICATION_ROOT=path.abspath(path.dirname("./P2JSnippets.py"));
locale.setlocale(locale.LC_TIME,l);
m.show();
mailServer.login(login,password);
d.foo();
x.T;
im.size;
print(user.addresses);
var transport=ssh.get_transport();
signal.signal(signal.SIGINT,handle_signal);
export var leftdigits=self._exp+len(self._int);
li2.extend(sublist);
fd.write(t);
print(df);
some_code();
myView.setItemDelegateForColumn(columnNumber,myItemDelegate);
main();
self.register_errors(result);
f2.write(line);
shutil.copy(str(self),str(target));
result;
map(complex,c);
tuple([self.hof[0].reshape(self.N,self.N),log]);
self.d[num]=d[num]+1;
mydict[repr(key)]=mydict[key];
array_by_hand.tostring()==array_from_layers.tostring();
list.__setitem__(self,i,10);
self.data=np.append(self.data,row);
tmp_dlls.append(os.path.join(cdir,dll));
var cur=self.connection.cursor();
SimpleHTTPServer.SimpleHTTPRequestHandler.do_GET(self);
true;
df2.reindex(df1.index,__kwargtrans__({level:0}));
acc[0];
kNN_classifier(train_data,k,distf);
var new_list=[];
NotImplemented;
var seen=set();
var capture=cv2.VideoCapture(0);
wx.Panel.__init__(self,...args,__kwargtrans__(kwargs));
cv2.polylines(vis,[corners],true,tuple([255,255,255]));
print(cache1.value.groups());
var layout=QHBoxLayout(self);
foo.__defaults__;
self.write(prompt);
var counter=counter+1;
var __left0__=unpack_list(...sub_list);var a=__left0__[0];var b=__left0__[1];var c=__left0__[2];var d=__left0__[3];
print(convert(0));
tuple([5,[false,true,false,false]]);
self.checkWeight();
export var lim=ax2.set_xlim(0,repeat_length);
isclose(1,1.00001);
var ax=fig.add_subplot(111);
exit(0);
plt.ion();
Interleave(A,B);
export var encoded_str=json.dumps(data);
uniquekeys.append(k);
ImageQuerySet(self.model,__kwargtrans__({using:self._db}));
var data=get_data();
method(...args,__kwargtrans__(kwargs));
self.button.clicked.connect(self.start_thread);
var logger=logging.getLogger();
var db=create_session();

float(n)/(1<<p);
print(x);
QtGui.QFrame.__init__(self,parent);
i+=1;
var indices=np.arange(y.shape[0]);
self.children=[];
self.server.sendMessage(message.__getslice__(0,null,-1));
diff.__setitem__([y,x],img2.__getitem__([y,x])-img1.__getitem__([y,x]));
filehandle.seek(-1,os.SEEK_END);
var b=np.roll(b,shift[j],__kwargtrans__({axis:0}));

var integers=function(){var __accu0__=[];for(var x of fileStr)if(x.isdigit())__accu0__.append(int(x));return __accu0__}();
var data=f.read();
mcastsock.bind(tuple([mcast_addr,port]));
export var myDate=forms.DateField();
file.close();
self.py_update(...args,__kwargtrans__(kwargs));
var req=urllib.request.Request(__kwargtrans__({url:url,data:request_data,headers:headers}));
self.canvas=FigureCanvasQTAgg(self.figure);
proc.join();
O(n);
foo.__code__.co_consts[1].co_consts[2];
examined_modules.append(calling_module_name);
var df=pd.concat([s,rolling_dd],__kwargtrans__({axis:1}));
var y2=np.random.rand(10)*20;
var unique_list=list();
f.seek(1,1);
~np.isnan(A);
afile.close();
add5(4);
log_handler.setFormatter(formatter);
db.session.add(self);
var __left0__=seconds_to_dhms(seconds);var days=__left0__[0];export var hours=__left0__[1];var minutes=__left0__[2];var seconds=__left0__[3];
GL.glViewport(0,0,200,200);
_cell.style.font.bold=true;
main();
true;
print(df.loc[list_of_values]);
base.all();
dis.dis(lis[2]);
var x=[tuple([tuple([2,1]),tuple([0,1])]),tuple([tuple([0,1]),tuple([2,1])]),tuple([tuple([2,1]),tuple([0,1])])];
filehandler.close();
(function(){var __accu0__=[];for(var obj of lst)__accu0__.append(objid_to_idx[id(obj)]);return __accu0__})();
cur.execute(sql,tuple([pyodbc.Binary(data)]));
self.sizer.Add(self.lblname,tuple([1,0]));
list(splitclusters(a));
form.tags.process(request.form);
map(operator.add,A,B);
print(p.map(minimize,args));
filecount+=1;
self.result.append(word);
var result=function(){var __accu0__=[];for(var x of unique0)__accu0__.append(lines[0][x]);return __accu0__}()+function(){var __accu0__=[];for(var x of unique1)__accu0__.append(lines[1][x]);return __accu0__}();
HttpResponseRedirect(e.response);
print(len(s));
print(expandtabs(input,10));
im.thumbnail(size,Image.ANTIALIAS);
var path=request.get_full_path();
b.pack();
array([1,2]);
s.shutdown(0);
var ax=fig.add_subplot(1,1,1);
memcache.set(request.my_name,value);
bar.set_alpha(.8);
xlim(0,10);
list();
listener.join();
result[index]+=1;
print(args);
self.s_out.close();
var b=[4,5,6];
plt.figure(1);
var df=df[df[group]!=group_name];
ax.add_patch(patch);
var response=urllib.request.urlopen(req);

export var imnew=scipy.misc.toimage(datanew);
var id=db.Column(db.Integer,__kwargtrans__({primary_key:true}));
var z=np.outer(np.cos(theta),np.ones_like(phi));
var app=Flask(__name__);
export var lay=QtGui.QHBoxLayout();
var N=len(list_of_lists);
x+x;
token.get_access_token(code);
output.close();
export var eggs=iplocation;
logging_test();
var foo=function(){var __accu0__=[];for(var a of foo)__accu0__.append(a+42);return __accu0__}();
var response=conn.getresponse();
os.unlink(f.py_name);
var new_df=my_instance.load_dataframe();
ifconfig;
new set([new set([other_content])]);
NULL;
var fig=plt.figure();
print(newDict);
timer1.start();
np.put(a,np.where(a==0)[0],np.nan);
var user=request.user;
var reader=csv.reader(f);
var x=np.random.randint(0,10,__kwargtrans__({size:tuple([10,2])}));
var font=ImageFont.load_default();
var response=mechanize.urlopen(request);
py_update(message);
var s=stru();
var C=np.linalg.eigvals(B);
var c=pd.read_csv(StringIO(s));
np.mean(Math.pow(np.dot(X,W)-y,2))+alpha*np.sum(np.abs(W-W0));
export var features_it=itertools.chain(...function(){var __accu0__=[];for(var c of data.py_values())__accu0__.append(py_iter(c.py_keys()));return py_iter(__accu0__)}());
csr_matrix(M1).dot(M2);
var stdin=sys.stdin;
print(m.as_string());
np.unique(np.concatenate(tuple([a,b])));
var totaldict=defaultdict(list);
(new set([4])).issubset(chain.from_iterable(x));
grid.fig.set_figwidth(6);
word.Repaginate();
var a=[0]*8;
export var iszero=df.amount.py_values==0;
df;
export var saved_result=GroupResult.restore(result.id);
min(triplets,__kwargtrans__({key:distance}));
numpy.random.shuffle(data);
a.todense();
1+1;
dests.add(node);
export var mtext=m.group(1);
cities.append(tuple([city.py_name,int(distance)]));
pygame.display.flip();
wn.synsets(word);
export var outdict=collections.defaultdict(list);
print(i);
func(value);
outputStream.close();
self.autocomplete(-1);
self.de=QtGui.QPushButton(str(self.current));
xy.__getitem__([tuple([0,null,1]),1])>0;
test();
nltk.download();
var a=np.random.random_integers(2,__kwargtrans__({size:tuple([4,4])}));
z/(1+z);
plt.contour(Y,X,T.__getitem__([tuple([0,null,1]),tuple([0,null,1]),round(len(z)/2)]),64);

self.show();
var colors=np.linspace(0,1,len(patches));
plt.pause(1);
var module=loader.find_module(module_name).load_module(module_name);
export var lowestsumsdict=dict({});
np.array(function(){var __accu0__=[];for(var x of u)__accu0__.append(d[x]);return __accu0__}())[inv].reshape(a.shape);
[10,10,9,7,4];
c+=a+b;
pairs_by_number_and_list[pair[1]].append(pair);
var t=Timer(10,function __lambda__(p){if(typeof p=="undefined"||p!=null&&p.hasOwnProperty("__kwargtrans__"))var p=p;return p.terminate()});
var offset=cet.utcoffset(dt);
f.write(text);
var dat=pd.DataFrame(np.random.randn(5,5));
var d=defaultdict(dict);
pylab.show();
var root=Tk();
book.save();
f();
print(tuple([sectorsPerCluster.value,bytesPerSector.value]));
result[i]=cpmethod(i);
dir(int);
var x=np.reshape(x,tuple([4,4]));
print(py_typeof(img));
matches.append(m.group(0));
ax.yaxis.set_minor_formatter(matplotlib.ticker.FormatStrFormatter(format));
var k=np.array([[0,1,0],[1,1,1],[0,1,0]]);
self._data=data;
var DEBUG=true;
self.send_my_headers();
mailServer.starttls();
var img=PhotoImage(__kwargtrans__({width:WIDTH,height:HEIGHT}));
s.listen(backlog);
export var max_len=len(seq)/2;
var module=__import__(k);
atexit.register(shutil.rmtree,test_area);
hops.insert(0,url);
var aware=datetime.datetime(2011,8,15,8,15,12,0,pytz.UTC);
var user=models.ForeignKey(User);
var root=gtk.gdk.get_default_root_window();
ps.line(lineFrom,lineTo);
self.assertEqual(expected,list(map(str,sorted(versions))));
tuple(mydata.transpose());
self.out_queue.put(result);
holtwinters(y,.2,.1,.05,4);
var l=logging.getLogger(__name__);
response;
var a=np.random.randint(2,__kwargtrans__({size:tuple([1E4,100])}));
export var basedir=str(os.path.abspath(os.path.dirname("./P2JSnippets.py")));
urllib.request.HTTPSHandler.__init__(self);
time.sleep(1);
ws.set_vert_split_pos(1);
layout.addWidget(self.button);
var parser=argparse.ArgumentParser();
app.register_blueprint(routes);
df1;
output;
var fig=plt.figure();
export var mypalette=im.getpalette();
p1.wait();
var data=numpy.array([[0,0,1,0,1],[0,1,1,1,0],[1,0,0,0,0]]);
remove(file_path);
pr.disable();
var t=datetime.now();
df[col]=df[col].shift(periods);

var py_keys=function(){var __accu0__=[];for(var d of all_dicts)for(var k of d)__accu0__.append(k);return set(__accu0__)}();
var today=datetime.date.today();
self.addLine(0,yc,width,yc);
UDBG.enable_pdb();
export var signif_lastdigit=int(signif_digits[-1]);
int((time.time()+.5)*1E3);
var data=fin.read().splitlines(true);
a.__getslice__(0,null,-1);
chr(ord(match.group(0)[0])+1)+match.group(0).__getslice__(1,null,1);
export var twitter=Twython(APP_KEY,APP_SECRET,OAUTH_TOKEN,OAUTH_TOKEN_SECRET);
var b=np.matrix(np.ones(tuple([2,4])));
var salt=str(random.getrandbits(256));
seq_in.__setslice__(0,null,null,function(){var __accu0__=[];for(var [x,k]of seq)__accu0__.append(x);return py_iter(__accu0__)}());
export var n_to_N=n*np.eye(n-1)-np.diag(np.arange(n-2,0,-1),1);
widget1.grid(__kwargtrans__({row:0}));
var G=nx.Graph();
im.size;
ax.grid(false);
browser._wait_load();
plot(x,y2);
a/(sqrt(2)*inverseErf(P));
var mask=np.random.uniform(__kwargtrans__({size:tuple([4,4])}));
fn(__kwargtrans__(kwargs));
time.sleep(self.sleep_time);
points.append(tuple([xs[i],ys[j],v]));
self.root.after(10,self.Inputs);
dict([[0,0],[1,1],[2,2]]);
var metadata=MetaData();
var text=file.read();
var p=Pool(4);
B-=B.mean();
(function(){var __accu0__=[];for(var i of l)__accu0__.append(i[0].isdigit()?i.__getslice__(1,null,1)*int(i[0]):i);return __accu0__})();
false;
print(bisect(list_,item));
var __left0__=subplots();var fig=__left0__[0];var ax=__left0__[1];
net.sortModules();
var line=proc.stdout.readline();
var fullname=os.path.join(dirpath,fname);
np.array_split(x4D,x.size/(p*q),__kwargtrans__({axis:0}));
np.array_split(x2D,x.size/(p*q),__kwargtrans__({axis:0}));
py_next(self._it);
Series(result,__kwargtrans__({index:labels}));
stdout.flush();
p.terminate();
mylist.extend(get_more_data());
export var demo=function(){var __accu0__=[];for(var _=0;_<2;_++)__accu0__.append([0]);return __accu0__}();
var app=Flask();
output+=os.read(fd,4096);
export var lowercase_letters=function(){var __accu0__=[];for(var c of s)if(c.islower())__accu0__.append(c);return __accu0__}();
var ax=plt.gca();
var l=[0,0,1,1];
obj.foo.__func__===Cls.foo;
clf.set_params(__kwargtrans__(grid));
nn.activate([0,1]);
var query=__mod__(query.decode(charset),escaped_args);
self.__dict__.py_update(x);
var __left0__=s.accept();var c=__left0__[0];var a=__left0__[1];
var D=np.delete(np.arange(np.alen(A)),C);
print(a.py_get());
tuple([asymmetric_enc(session_key,pubkey),symmetric_enc(message,session_key)]);
B_process.wait();
var ax=plt.gca();
var response=urllib.request.urlopen(req);
runner.run(mySuit);
print(function(){var __accu0__=[];for(var x of list_dirs)if(!__in__(os.path.basename(x),unwanted_files))__accu0__.append(x);return __accu0__}());
dt.year;
var __except0__=StopIteration;__except0__.__cause__=null;throw __except0__;
var mask=~np.in1d(unqID,np.where(count>1)[0]);
nonzero(r_.__getitem__([1,diff(st).__getslice__(0,-1,1)]));
s.str.__getslice__(0,2,1);
var ax=plt.gca();
count[word]=1;
show();
df;
print(escaped_string);
newser.plot(__kwargtrans__({ax:axes[0]}));
var input=PdfFileReader(packet);
[DRIVER_ISSUE];
reader.Update();
dict(function(){var __accu0__=[];for(var [key,value]of o.py_items())__accu0__.append(tuple([key,round_floats(value)]));return py_iter(__accu0__)}());
[2,2,1,1];
sys.stdout=unbuffered;
inspect.getgeneratorstate(a);
var ax2=ax.twinx();
self.application.save();
list(islice(iterable,n));
print(inputoutput[ii]);
var res=df.astype(bool).astype(int);
var obj=MyClass();
var ndx=orig_indices[numpy.searchsorted(xs[orig_indices],ys)];
var __left0__=ax2.get_legend_handles_labels();var h2=__left0__[0];var l2=__left0__[1];
var images=scrapy.Field();
all(function(){var __accu0__=[];for(var c of hello)__accu0__.append(__in__(c,string.printable));return py_iter(__accu0__)}());
print(item);
var __left0__=tuple([text_center[0]-width/2,text_center[1]+height/2]);export var myX=__left0__[0];export var myY=__left0__[1];
print(repr(b));
time.sleep(10);
urllib.request.install_opener(opener);
self.window.show();
s.py_values;
all(function(){var __accu0__=[];for(var i of get_neighbors(p,len(A)))__accu0__.append(A[p]<A[i]);return py_iter(__accu0__)}());
var app=Flask(__name__);
self.file.flush();
var d=datetime.date(2011,9,1);
t.py_setdefault(keyList[-1],value);
do_something_with_o(r());
export var toAdd=xyzCoord[i].__getslice__(0,null,1);
(function __lambda__(d){return function __lambda__(){return self.root.change_directory(d)}})(d);
print(segment.min(),segment.max());
var df1=df.copy();
print(is_png(data));
var l=[1,5,7];
do_something();
server.socket.close();
var hash2=hash2.hexdigest();
self.button.draw();
true;
var file=os.path.join(temp_path,baseFile);
self._x==other._x&&self._y==other._y;
var y=sparse.csr_matrix([[0,1],[1,0]]);
var results=[];
print(key_val,key_val.etag);
var doc=lxml.html.parse(res.content);
glClearColor(0,0,0,0);
file_a.write(new_a_buf.getvalue());
plt.close();
var image=image_response.read();

export var a_list=function(){var __accu0__=[];for(var i of a_list)__accu0__.append(f(i));return __accu0__}();
ranges.__getitem__([tuple([0,null,1]),1])-ranges.__getitem__([tuple([0,null,1]),0]);
var row=cursor.fetchone();
a.append([]);
print(save_virtual_workbook(wb));
export var deq=collections.deque(list(range(100)));
var alist=[0,0,0,0,0,0,1];
sum_sum_digit(1969);
var fig1=plt.figure();
parse_qs(urlparse(url).query,__kwargtrans__({keep_blank_values:true}));
self.myq.put(THEEND);
export var Dy=cv2.Sobel(image,cv2.CV_8UC1,0,1);
df.Seatblocks;
print(l);
start+timedelta(__kwargtrans__({seconds:random_second}));
st.__getslice__(0,i+1,1);
foo.bar-foo.baz;
var doc=html5parser.fromstring(body);
export var gb=df.groupby(col);
f(v);
var root=Tk();
export var renderer=gtk.CellRendererText();
self.removeItem(line);
var __except0__=FileNotFoundError(filename);__except0__.__cause__=null;throw __except0__;
self._from2scomplement(self.__next__);
do_something_with_stdout(line);
plt.xticks(np.array([]));
graphs_sizer.Add(chart_canvas,20,__kwargtrans__({flag:wx.EXPAND,border:5}));
urlopen(req);
export var i2=getIfromRGB(colr1);
self.sizer.Layout();
plt.hist(random(1E3),100);
var df=df.ix.__getitem__([tuple([0,null,1]),tuple([0,1,1])]);
thing.close();
setattr(module,symbol,obj);
x[-1]=binascii.hexlify(x[-1]);
tuple([[1,10],[1,10]]);
System.out.println(sum);
var cam=pmb.expanding(__kwargtrans__({min_periods:1})).apply(function __lambda__(x){return x.argmax()});
print(x,y);
export var stdscr=curses.initscr();
self.stack[-1]+=1;
var py_name=models.CharField(__kwargtrans__({max_length:200}));
var K=np.arange(n-1);
var lens=np.array(function(){var __accu0__=[];for(var i of ll)__accu0__.append(len(i));return __accu0__}());
var data=json.loads(line);
torfile.add_node(node);
stack[0];
export var control_frame=my_bytes[0]&128;
data;
var data=chunks[-1];
DT.time(hour,minute,second,microsecond);
zipped.py_sort();
foo(20,4);
var __except0__=KeyError(key);__except0__.__cause__=null;throw __except0__;
var x=dict(function(){var __accu0__=[];for(var k=0;k<1E3;k++)__accu0__.append(tuple([k,list(l)]));return __accu0__}());
cur.close();
b.f();
dfs.append(df);
conn.close();
print(_.strip());
var s=cv2.SURF();
Food._meta.get_all_related_many_to_many_objects();
var width=int(cv.GetCaptureProperty(cap,cv.CV_CAP_PROP_FRAME_WIDTH));
var mylist=[tuple([a,b]),tuple([c,d]),tuple([e,f])];
self.item=item;
var n1=dt.datetime.now();
self.load_data();
var diffs=dict(function(){var __accu0__=[];for(var k of dict1)__accu0__.append(tuple([k,k2.index(k)-k1.index(k)]));return py_iter(__accu0__)}());
var fig=pylab.figure();
self.create_dummy_request();
p.start();
var d=function(){var __accu0__=[];for(var v of set(materials))__accu0__.append([v,function(){var __accu1__=[];for(var [i,x]of enumerate(materials))if(x==v)__accu1__.append(i);return __accu1__}()]);return dict(__accu0__)}();
py_next(a);
d.__setitem__([text_idx,np.arange(len(text_idx))],1);
l.insert(i,Y);
print(result);
array[idx-1];
fcntl.fcntl(s,fcntl.F_SETFL,os.O_NONBLOCK);
nx.path.bidirectional_dijkstra(G,1,5);
print(C(1,2).__dict__);
func(__kwargtrans__(kwargs));
export var worksheet1=workbook.add_worksheet();
(function(){var __accu0__=[];for(var x of e)__accu0__.append(hex(x));return __accu0__})();
process(line);
var driver=webdriver.Firefox();
var fig=PLT.figure();
export var admin_objects=UserAdminManager();
fun(args);
a.__getslice__(0,null,2);
py_typeof(x)==my.object.kind;
r.__setitem__([i,j,x.__getitem__([i,j]),y.__getitem__([i,j])],c.__getitem__([i,j]));
print(fun1(1,2));
var counts=Counter(function(){var __accu0__=[];for(var line of f)for(var word of line.py_split())__accu0__.append(word);return py_iter(__accu0__)}());
provided.add(item);
d.addCallback(function __lambda__(_){return reactor.stop()});
self._array[self._index[index]];
var now=datetime.now();
main();
im.load();
ZZ[t];
var c=a.copy();
[0,1,1,1];
os.fchmod(fd.fileno(),mode&4095);
Base.metadata.create_all(__kwargtrans__({bind:engine}));
getattr(p,s);
var x=function(){var __accu0__=[];for(var elt of y)__accu0__.append(elt[0]);return __accu0__}();
ax.set_xticks([1.5,4.5,7.5]);
dict_x[key]=[value];
var __left0__=_rot(self.x1,self.y1);self.x1=__left0__[0];self.y1=__left0__[1];
sio.truncate(0);
font.setPointSize(10);
export var cmap_lin1=cm.jet;
export var ISLAND_SLEEPING=_ISLAND_SLEEPING;
Window.pack();
plt.ylim([log10(.1),log10(10)]);
var b=np.zeros(tuple([n_b,n_b]),__kwargtrans__({dtype:a.dtype}));
time.sleep(.01);
len(file_content)>0;
var y=points.__getitem__([tuple([0,null,1]),1]);
export var fourier_trans=numpy.fft.rfft(y)/1E3;
df;
var model=create_model();
print(sum_shells(b));
var matching_lines=list(filter(filter_func,string_list));
var dt=mytz.normalize(mytz.localize(dt,__kwargtrans__({is_dst:true})));
false;
export var dt_my_tz=dt_aware.astimezone(tz);
var phone=models.CharField(__kwargtrans__({max_length:100}));
print(data.py_values[np.in1d(data.ages,desired_ages)]);
plt.subplot(6,6,i+1);
var decoded=cipher.decrypt(base64.b64decode(encoded));
reactor.listenTCP(8080,site);
var Y=np.random.normal(__kwargtrans__({size:tuple([10,5])}));
renL.SetActiveCamera(cameraL);
pclose(helper);
[list(a),list(b)];
win.addstr(0,0,root);
var cert=OpenSSL.crypto.load_certificate(OpenSSL.crypto.FILETYPE_ASN1,key);
sys.exit(1);
var p=mp.Process(__kwargtrans__({target:some_long_task_from_library,args:tuple([1E3])}));
ax.plot_surface(x_surf,y_surf,z_surf,__kwargtrans__({cmap:cm.hot}));
var foo=timeit(foo);
dict(string);
export var python_exe=sys.executable;
var img=erode(img,kern_size);
var output=np.empty(indices[0].shape);
var pivots=zeros(tuple([n]),fortran_int);
var i=np.arange(len(pts));
result[i]=cpmethod(cpargs);
new_strs.append(x);
var a=numpy.arange(1E6);
plt.xlim([log10(.1),log10(10)]);
frame.pack(__kwargtrans__({fill:BOTH,expand:1}));
sum(function(){var __accu0__=[];for(var k of lst)__accu0__.append(dct.py_get(k,0));return py_iter(__accu0__)}());
var config=configparser.ConfigParser();
tuple([ebks,ks]);
var tree=ET.parse(file_path);
print(x.reshape(tuple([1,x.shape[0]])).py_metatype);
ax.set_xticks(np.arange(AUC.shape[1])+.5,__kwargtrans__({minor:false}));
var args=sys.argv.__getslice__(1,null,1);
d1+=timedelta(__kwargtrans__({days:mdays}));
var b=np.random.rand(6,5);
print(ddiff);
var d=xml.sax.parse(PseudoStream(),SAXHandler());
self.assertEqual(6,s);
window.show();
foo.method2(foo.method1);
self.set_default_size(100,100);
help(combinations);
export var destination=os.path.splitext(imagePath)[0];
var ax=fig.add_subplot(1,1,1);
plt.plot([1,2],[1,2]);
var x=np.arange(1E3);
var queue=Queue();
self.assertTrue(any(function(){var __accu0__=[];for(var e of self.merged)__accu0__.append(set(lst)<=e);return py_iter(__accu0__)}()));
104.405- -hochl;
5.018- -katrielalex;
export var tcpSerSock=socket(AF_INET,SOCK_STREAM);
dis.dis(f);
settings.configure();
var bus=dbus.SessionBus();
var x=np.random.normal(0,1,1E3).cumsum();
NP.insert(T,0,c,__kwargtrans__({axis:1}));
ax.draw_artist(line);
export var data_cols=list(df1.columns);
var df=pd.DataFrame(data);
myseries_three.iloc[0];
[syndication];
file_open.close();
var g=Github(token);
plt.yticks(np.arange(.5,10.5),list(range(0,10)));
print(tuple([step,sess.run(W),sess.run(b)]));
var app=QApplication(sys.argv);
time.sleep(60);
print(url1,url2);
i.interact(message);
export var y_list=numpy.random.random(200);
event.ignore();
var a=np.zeros(tuple([100,100,10]));
var py_name=forms.CharField();
lfun;
export var checkbox=driver.find_element_by_id(id);
self.mySub();
repo.commits;
traceback.print_stack();
var instance=MyClass();
var choices=Choice.objects.filter(__kwargtrans__({poll__in:polls}));
export var original=Image.open(test_image);
[1,2,2];
0;
CALLBACK(func);
self.model.query;
print(A.indptr);
browser.select_form(__kwargtrans__({nr:1}));
var logger=logging.getLogger();
var answer=function(){var __accu0__=[];for(var i=1;i<1001;i++)if(isSumOfSquares(Math.pow(i,2)))__accu0__.append(i);return __accu0__}();
export var streamdata=child.communicate()[0];
hexagon(50);
A*exp(-Math.pow(x-mu,2)/2/Math.pow(sigma,2));
r.content;
print(arr.__getitem__([cond,tuple([0,null,1])]));
var B=np.concatenate(tuple([A,A]),__kwargtrans__({axis:1}));
export var celery=Celery();
export var sent=sock.send(msg.__getslice__(totalsent,null,1));
export var signed=private_key.hashAndSign(data);
func;
var im=np.asarray(Image.open(filename));
restart_line();
var a=float(x);
1/1024/1024;
var possibles=function(){var __accu0__=[];for(var x of remaining)if(x.__getslice__(0,1,1)==start.__getslice__(-1,null,1))__accu0__.append(x);return __accu0__}();
dir(object);
int(s);
app;
var s=serial.Serial(5);
setattr(instance,attr,value);
df.a.quantile(.95);
self._value+n;
export var sorted_stuff=sorted(function(){var __accu0__=[];for(var [x,y]of list(d.py_items()))__accu0__.append(tuple([ord(x[0]),x,y]));return __accu0__}());
PorterStemmer().stem_word(word);
[0,1,1];
rows.append(row);
var test=this_friday+timedelta(__kwargtrans__({weeks:-1}));
select.select([sys.stdin],[],[],0)==tuple([[sys.stdin],[],[]]);
self.pubsub.close();
print(result);
s.translate(str.maketrans(dict.fromkeys(rem)));
propdict[attrname]=getattr(a,attrname);
stopButton.pack();
sys.stdout.write(output);
py_items.append(item);
var root=Tk();
print(v.__dict__);
print(f.as_integer_ratio());
var a=date(2011,11,24);
fo.close();
ax.set_rgrids(list(range(1,6)),__kwargtrans__({angle:angle,labels:label}));
var num=float(num);
var foo=MyClass();
self.scrollbar=Scrollbar(self.data,__kwargtrans__({orient:VERTICAL}));
Clock.schedule_once(self.set_attributes);
print(offs);
var x=np.linspace(-2,2,__kwargtrans__({num:20}));
print(np.asarray(curve.intersection(hline)));
self.request=request;
conn.setopt(pycurl.VERBOSE,true);
var xdiff=tuple([line1[0][0]-line1[1][0],line2[0][0]-line2[1][0]]);
df;
self.children.append(myChild(py_name,self));
self._result_queue=result_queue;
var a=bytearray(5);
child_midpoints.append(child_end+Math.floor(width/2));
setOverlays(cfloats);
show(layout);
var __left0__=function(){var __accu0__=[];for(var x=0;x<2;x++)__accu0__.append([]);return __accu0__}();var x=__left0__[0];var y=__left0__[1];
plt.grid(true);
export var pyi=points.__getitem__([i,1]);
print(item);
var end=datetime.datetime.combine(today,end);
var x=np.random.random(10);
var id=np.append([0],np.any(np.diff(sorted_Ar,__kwargtrans__({axis:0})),1).cumsum());
pre_save;
BaseObject._initialize();
var __left0__=ogrid.__getitem__([tuple([0,img.shape[0],1]),tuple([0,img.shape[1],1])]);var x=__left0__[0];var y=__left0__[1];
pkcs11.load(libacospkcs);
existing.merge_result(function(){var __accu0__=[];for(var task of taskdata)__accu0__.append(task_from_json(slug,__kwargtrans__(task)));return py_iter(__accu0__)}());
var words=sentence.py_split();
print(a.parent);
x*(a+d+g)+y*(b+e+h)+z*(c+f+i);
colorama.init();
event_box.window.set_cursor(gtk.gdk.Cursor(gtk.gdk.HAND1));
L.py_sort();
pp.plot(ar);
export var stream_matrix_np=np.random.uniform(0,Math.pow(n,2),__kwargtrans__({size:tuple([n,n])}));
var parser=argparse.ArgumentParser();
var f=func();
wn.ADV;
wn.VERB;
self.conn.commit();
var y=np.random.randint(0,1E4,__kwargtrans__({size:5E6}));
tuple([largest,second_largest,third_largest]);
print(list(sub_findre(s,substring,2)));
to_product.append([tuple([k,v])]);
var tmp=ax.transData.transform([tuple([0,0]),tuple([1,1])]);
var slice=myarray.__getitem__([,i]);
var __left0__=tuple([multiprocessing.Queue(1),multiprocessing.Queue()]);export var tasks_q=__left0__[0];export var results_q=__left0__[1];
isitIn(char,aStr.__getslice__(0,Math.floor(len(aStr)/2),1));
db_thread.start();
psyco.full();
var email=Column(String,__kwargtrans__({unique:true}));
ax.set_xlim([.1,.8]);
dis.dis(foo.__code__.co_consts[2].co_consts[2]);
dest.write(line);
pd.to_datetime(date_time);
var app=Flask(__name__);
export var dominated=[];
var C=function(){var __accu0__=[];for(var _i=0;_i<4096;_i++)__accu0__.append(B.popleft());return __accu0__}();
var z=itertools.chain(x,y);
export var qSQLresults=cursor.fetchall();
do_some_ather_thing();
var p=PatchCollection(patches,__kwargtrans__({cmap:matplotlib.cm.jet,alpha:.4}));
var image=cv2.cvtColor(hsv_image,cv2.COLOR_HSV2RGB);
v.__getitem__([tuple([0,null,1]),0]);
var args=parser.parse_args();
print(df1);
sleep(2);
export var user_=User.objects.py_get(__kwargtrans__({pk:1}));
edges.__getitem__([i,j+2]).append(tuple([i,j-2]));
var top=tk.Tk();
sys.exit(1);
os.remove(os.path.join(root,py_name));
export var xy=line2d[0].get_xydata();
var b=a.__getitem__([tuple([0,5,1]),tuple([0,5,1])]);
var data=np.random.random(tuple([10,10]));
var data=f_input.read();
Parent.__init__(self);
main();
num_fatals+=1;
var a=0;
plt.imshow(lab);
awesome_dict;
clf();
df_a.join(df_b);
__all__[py_name]=value;
var b=np.zeros_like(a);
var desired_list=function(){var __accu0__=[];for(var [x,_]of tuple_list)__accu0__.append(x);return __accu0__}();
var driver=webdriver.Firefox();
export var EXTRA_DIST=myext.h;
ax.set_xticks([]);
print(self.py_name);
logging.basicConfig(__kwargtrans__({level:logging.INFO}));
b.__getitem__([tuple([0,null,1]),tuple([0,null,1]),0]);
tuple([array([1])]);
export var list_b=[5,6,7,8];
var line=input();
cls;
run_initialization_stuff();
logger.addHandler(hdlr);
var fd=sys.stdout.fileno();
date(2011,1,15)-date.today();
print(hex(agency));
var c=threading.Thread(__kwargtrans__({target:consumer,args:[q]}));
sys.getrefcount(astrd);
axis([0,25,0,10]);
Results.objects.saved_once().all();
var address=models.CharField(__kwargtrans__({max_length:200}));
var lines=fp.readlines();
export var start_date_monday=start_date-datetime.timedelta(__kwargtrans__({days:start_date.weekday()}));
p.join();
export var nickname=request.user.profile.nickname;
var d=defaultdict(function __lambda__(d){if(typeof d=="undefined"||d!=null&&d.hasOwnProperty("__kwargtrans__"))var d=d;return d});
print(tuple([i,j]));
len(counts);
var content=models.TextField;
var p=kde(x);
var r=csv.reader(file_b);
var d=datetime.datetime.utcnow();
set(chain.from_iterable(function(){var __accu0__=[];for(var word of synonyms)__accu0__.append(word.lemma_names());return __accu0__}()));
pl.show();
print(np.mean(l));
print(xyzzy);
v_box.addWidget(self.box_one);
func(self,...args,__kwargtrans__(kwargs));
self.f.write(data);

var ii=np.nonzero(y)[0];
peers[i].send(chunk);
list(chain.from_iterable(summ_neg(x)));
export var SOCIAL_AUTH_GOOGLE_PLUS_USE_DEPRECATED_API=true;
var d=defaultdict(list);
var b=np.where(a==9);
tuple([gx,gy,gz]);
var __left0__=file;self.fp=__left0__;self.file_or_path=__left0__;
var debug=false;
combo.addItems(li);
plt.show();
app.logger.addHandler(logging.StreamHandler());
process.terminate();
time.sleep(1);
c.set_visible(vis);
print(df);
var x_=np.linspace(0,1,10);
listy[1]=[1,2];
sleep(1);
locals()[py_name]=a.__dict__[py_name];
id(1==1);
var __left0__=np.where(mask.T);var R=__left0__[0];var C=__left0__[1];
funcs.append(function __lambda__(x){if(typeof x=="undefined"||x!=null&&x.hasOwnProperty("__kwargtrans__"))var x=x;return x});
pd.DataFrame(listOfNewRows);
cherrypy.config.py_update(conffile);
export var result1=pd.concat([d1,df1],__kwargtrans__({axis:1}));
export var old_locale=locale.getlocale(locale.LC_COLLATE);
var con=pyodbc.connect(odbcstring);
var n2=dt.datetime.now();

handle_line(line);
p.wait();
var a=asarray(a);
var ax=fig.add_subplot(111);
export var nrange=np.arange(n);
var __left0__=final(a,b,c);var a=__left0__[0];var b=__left0__[1];var c=__left0__[2];
s.push(10);
self.load_picture();
exp(-Math.pow(x-mu,2)/(2*Math.pow(s,2)));
var ylim=ax.get_ylim();
var indices=function(){var __accu0__=[];for(var x of b)__accu0__.append(numpy.where(a<=x)[0][0]);return __accu0__}();
match.groupdict();
df;
export var loaded=pickle.loads(dumped);
var cursor=connection.cursor();
self.button.setMaximumSize(QtCore.QSize(128,128));
var queryset=Person.objects.all();
obj.get_related_deltas(epk);
(function(){var __accu0__=[];for(var x of partitions)__accu0__.append(sum(x)/float(n));return __accu0__})();
fh.write(header);
print(f.method());
var code=func.__code__;
app.exec_();
any(function(){var __accu0__=[];for(var phrase of word_list)__accu0__.append(__in__(phrase,text));return py_iter(__accu0__)}());
pd.Series((df.py_values*(df.columns.py_values+sep)).sum(1)).str.py_split();
w2.append(words[1]);
!sum(function(){var __accu0__=[];for(var i of B)__accu0__.append(!__in__(i,A));return __accu0__}());
horse_frog;
var __left0__=proc.communicate();var out=__left0__[0];var err=__left0__[1];
__in__(str,function(){var __accu0__=[];for(var entry of example)__accu0__.append(py_typeof(entry));return __accu0__}());

export var lcl=locals();
B().py_update();
var form=ModelForm(request.POST);
var startupinfo=subprocess.STARTUPINFO();
export var positive1=positive.__getitem__([tuple([0,null,1]),tuple([1,-2,1])]);
var user=UserProfile.objects.py_get(__kwargtrans__({pk:1}));
var result=pool.map(worker,groups);
self.assertTrue(1+1==2);
var d=defaultdict(function __lambda__(){return defaultdict(list)});
a[0]+a[1]/float(Math.pow(10,int(log(a[1],10))+1));
print(y.shape);
loop.run_forever();
response;
print(cmp(list_1,list_2));
var order=list(perm).__getslice__(0,null,-1)+[n];
heapq.heappop(heap);
print(np.random.dirichlet(np.ones(10)/1E3,__kwargtrans__({size:1})));
var p=pyaudio.PyAudio();
var hxs=HtmlXPathSelector(response);
var ax=fig.add_subplot(111);
export var HSV_tuples=function(){var __accu0__=[];for(var x=0;x<N;x++)__accu0__.append(tuple([x*1/N,.5,.5]));return __accu0__}();
var lock=multiprocessing.Lock();
var entity=query[0];
var ret=func(...args,__kwargtrans__(kwargs));
sum(zip(res,args),tuple([]));
export var a_sps=scipy.sparse.csc_matrix(a);
np.arange(k-i)==ix.__getslice__(0,-i,1);
var b=[9,8,7,6,5];
help(str.py_replace);
len(read_file(filename));
var res=service.cse().list(__kwargtrans__(__mergekwargtrans__({q:search_term,cx:cse_id},kwargs))).execute();
A.__init__(self);
var count=0;
word_len_dict[len(word)].append(word);
parse_with_lxml();
ax.invert_yaxis();
var map=random.randrange(1,10);
datetime.datetime(2E3,1,1).py_replace(__kwargtrans__(fields));
(function(){var __accu0__=[];for(var v of list2)if(__in__(v,list1))__accu0__.append(v);return __accu0__})();
print(mse(model_2_v2.predict(xg_test),y_test));
print(n);
(function(){var __accu0__=[];for(var sublist of lst)__accu0__.append(result.extend(sublist));return __accu0__})();
var root=lxml.etree.fromstring(x);
export var exponent=d.as_tuple()[2];
var product=models.ForeignKey(Product);
print(df1);
var path=os.path.abspath(sys.executable);
print(num);
var oldest=max(people,__kwargtrans__({key:function __lambda__(p){return p.age}}));
var app=QtGui.QApplication(sys.argv);
f1(f2(...args,__kwargtrans__(kwargs)));
Py_DECREF(str);
var __except0__=KeyError(key);__except0__.__cause__=null;throw __except0__;
notebook.set_tab_reorderable(child,true);
var score=IntegerField(__kwargtrans__({validators:[required]}));
Fader.py_update();
print(mention.user.screen_name);
export var d1_keys=set(d1.py_keys());
import_array();
mod;
export var Dl=self.angulardist(zcluster);
r.content;
var line=lines.py_pop(0);
var __left0__=plt.subplots(1,1);var fig=__left0__[0];var ax=__left0__[1];
self.assertEqual();
csock.close();
export var xl=pd.ExcelFile(fn);
ax.set_xticks(ind+width/2);
print(s[sl]);
var dates=function(){var __accu0__=[];for(var dt of rrule(MONTHLY,__kwargtrans__({dtstart:strt_dt,until:end_dt})))__accu0__.append(dt);return __accu0__}();
server.serve_forever();
export var d_theano=f_minkowski(x,x,p)[np.triu_indices(nX,1)];
streng;
fn(...args,__kwargtrans__(kwargs));
var instance=form.save(__kwargtrans__({commit:false}));
var B=np.empty_like(A);
print(combine_dicts(a,b,operator.mul));
window.open(url);
fesetround(FE_TOWARDZERO);
fesetround(FE_UPWARD);
fesetround(FE_DOWNWARD);
ax.add_collection(coll);
mp.complete_upload();

var b=a;
stmts.append(s);
(function(){var __accu0__=[];for(var x of lst)for(var y of untuppleList2(x))__accu0__.append(y);return __accu0__})();
cmath.sqrt(-complex(0,0))==-complex(0,0);
self.panel=wx.ScrolledWindow(self,wx.ID_ANY);
var length=len(input_string);
var b=tf.Variable(tf.zeros([10]));
ax.plot(list(range(5)));
ax.mouse_init();
self.line=self.ax.scatter(self.x,self.y);
do_totally_different_thing();
export var unmatched=list(b);
self.buttonPanel2=wx.Panel(self);
Test.test_call;
self.stream.write(data);
export var new_list1=function(){var __accu0__=[];for(var i of indicies)__accu0__.append(list1[i]);return __accu0__}();
var __left0__=zip(...data);var indices=__left0__[0];var vals=__left0__[1];
mod.doSomething();
var max_index=len(row)-1;
var tk=Tk();
var rolled=np.roll(y,-1,__kwargtrans__({axis:0}));
tuple([[4,5,6]]);
setattr(self,item,args_dict[item]);
var image=cv2.imread(path_to_image,cv2.IMREAD_UNCHANGED);
print(function(){var __accu0__=[];for(var vertex of x)__accu0__.append(vertex.label);return __accu0__}());
export var station=serializers.CharField(__kwargtrans__({read_only:true}));
var py_name=Column(String(20));
export var newdata=newdata.divide(df.sum().sum());
data.append(float(line));
var schema_doc=etree.parse(f_schema);
config.readfp(source);
var id=db.Column(db.Integer,__kwargtrans__({primary_key:true}));
var d=d.py_replace(c,sep);
sqs.meta.client._endpoint.http_session.close();
(function(){var __accu0__=[];for(var [i,n]of enumerate(range(x)))__accu0__.append(tuple([x-1-i,n]));return __accu0__})();
var a=2;
var manager=multiprocessing.Manager();
export var curl=pycurl.Curl();
print(locals());
fout.write(line);
var fixed=s.__getslice__(0,pos,1)+s.__getslice__(pos+1,null,1);
MyClass.__dict__=dict({});
self._port=port;
var x=tf.Variable(tf.ones([]));
self.thread=threading.Thread(__kwargtrans__({target:self._wait}));
export var remotezip=urllib.request.urlopen(url);
var keyfunc=function __lambda__(x){return len(x)};
print(listD);
K.mean(K.square(y_pred-y_true),__kwargtrans__({axis:-1}));
tuple([x,y]);
tuple([x,y]);
print(getSubStrings(a,2));
assign(subarg,subvalue);
var l=np.sqrt(6*(a+c+np.sqrt(Math.pow(b,2)+Math.pow(a-c,2))));
sys.stdout=sys.__stdout__;
df;
process_a.start();
b.append(sublist);
b.extend(a);
heappush(self.queue,item);
k.set_contents_from_filename(testfile,__kwargtrans__({cb:percent_cb,num_cb:10}));
kOUT[0];
hash.hexdigest();
print(tostring(elem));
var t=threading.Thread(__kwargtrans__({target:work,args:tuple([py_name])}));
tf.start_queue_runners();
var app=Flask(__name__);
[];
var model=linear_model.LogisticRegression();
[5,8];
slice(start,stop,step);
var series1=np.arange(10);
i+=1;
export var l_o_l=function(){var __accu0__=[];for(var x of list_of_lists)__accu0__.append(function(){var __accu1__=[];for(var y of x)__accu1__.append(int(y));return __accu1__}());return __accu0__}();
help(re.sub);
export var nodeRemovalList=list(filter(in_sphere,nodeList));
pool.map(fn,list(range(10)));

draw.ellipse(tuple([25,25,75,75]),__kwargtrans__({fill:tuple([255,0,0])}));
deletei;
export var postcount=len(survivors);
x.__getslice__(0,null,-1);
var results=[];
ax[0].legend();
self.func(...args);
var tuples=zip(string.printable,itertools.repeat(0));
a.argmax();
result.append([]);
var B=numpy.array();
ax.ticklabel_format(__kwargtrans__({useOffset:false}));
[1,0];
df.idxmax(1);
(function(){var __accu0__=[];for(var u of set([b,d,f]).intersection(set([a,c,e])))__accu0__.append(tuple([u.value,u.meta]));return __accu0__})();
var model=Sequential();
mainloop.run();
var a=np.zeros(tuple([nx,nz]));
face_list.add(tuple([x,a,b]));
s.commit();
widget.bindtags(tuple([tag])+widget.bindtags());
self.vtkPolyData.GetPointData().SetScalars(self.vtkDepth);
newlist.append(x);
var api=tweepy.API(auth);
export var pa=pyaudio.PyAudio();
tv.set_search_column(1);
self.x=np.linspace(0,5*np.pi,400);
ceiling_key(d,4);
2-tuple([B,C,F,E]);
set(l1);
np.dot(output,slicevol)/2;
bool(1);
export var csv_file=browser.page_source;
export var endpos=text.rfind(bravo);
var app=QApplication(sys.argv);
py_next(other);
writer.writerow([4,5,6]);
var url=db.Column(db.String(2048));
var __except0__=ValueError(HELPING_EXPLANATION);__except0__.__cause__=null;throw __except0__;
export var diagonal=np.rollaxis(diagonal,-1);
dis.dis();
ceiling_key(d,1);
var agent_list=function(){var __accu0__=[];for(var line of f)__accu0__.append(list(ast.literal_eval(line)));return __accu0__}();
export var first10000=islice(f,1E4);
var my_array=numpy.empty([1,2],__kwargtrans__({dtype:object}));
requests_log.setLevel(logging.DEBUG);
rescaled.shape=newshape;
var numbers=[1,2];
var queryset=User.objects.all();
export var contour_info=sorted(contour_info,__kwargtrans__({key:function __lambda__(c){return c[2]},reverse:true}));
result.extend(node._values);
print(tuple([root,py_name]));
p.join();
(function(){var __accu0__=[];for(var i of indexes(s))for(var j of indexes(s.__getslice__(i,null,1),i+1))__accu0__.append(s.__getslice__(i,j,1));return py_iter(__accu0__)})();
label.set_visible(!win.is_fullscreen);
axes[0].pcolormesh(x,y,z);
(function(){var __accu0__=[];for(var item of arg)__accu0__.append(item.upper());return __accu0__})();
p.poll();
main();
export var lookup=function(){var __accu0__=[];for(var n of s)__accu0__.append([n,max(function(){var __accu1__=[];for(var a of s)if(__in__(n,a))__accu1__.append(a);return py_iter(__accu1__)}(),__kwargtrans__({key:len}))]);return dict(__accu0__)}();
QtCore.QThread.run(self);

cv2.imwrite(os.path.join(dirname,py_name),frame);
np.random.seed(24);
var t1=time.time();
a.__setitem__([tuple([0,null,1]),non_index],b);
export var animals=[Lion(),Tiger(),Bear()];
sys.stdout=sys.stderr;
var br=mechanize.Browser();
print(function(){var __accu0__=[];for(var [g,py_items]of groups)__accu0__.append(list(py_items));return __accu0__}());
run();
var e=a.__getslice__(0,1,1);
print(count.most_common());
var b=a.__getslice__(0,null,2);
result.append(msvcrt.getche());
printcake();
listener.handle_event(event);
print(df);
true;
v.append(len(item));
cv2.imwrite(sys.argv[2],skin_ycrcb);
var r=np.sqrt(Math.pow(xdist,2)+Math.pow(d,2));
time.sleep(1);
row[1]=row[1];
var app=Flask(__name__);
- -nogroup;
do_stuff();
print(cob.x);
fig.subplots_adjust(__kwargtrans__({top:.9}));
var data=np.fromfile(file,__kwargtrans__({dtype:dt}));
result;
sorted(enumerate(sample),__kwargtrans__({key:function __lambda__(n_v){return abs(n_v[1]-pivot)}})).__getslice__(0,k,1);
self.assertEqual(d1,d2);
ADO.csv;
AFG.csv;
figure();
var data=json.load(o);
logger.log(f.__name__,args,result);
shutil.copyfileobj(f,response);
var d=np.diff(np.asarray(a,__kwargtrans__({dtype:int})));
map(itemgetter(0),groupby(L));
self.rotate();
export var dfL=pd.concat([df]*100);
app.register_blueprint(bp);
var y=np.zeros(tuple([yt,xt]));
scat.set_array(data[i]);
self.SetMinSize(tuple([100,100]));
var twitter=Twython(APP_KEY,APP_SECRET,OAUTH_TOKEN,OAUTH_TOKEN_SECRET);
self.sprockets=set();
var b=np.hstack(np.array(b));
f.save();
BaseHTTPRequestHandler.__init__(self,...args);
df.reindex(df.b.abs().order().index);
print(replace_item(lst,to_replace,replace_with));

Table.append(temp);
_func();
var d=dict(function(){var __accu0__=[];for(var [i,n]of enumerate(function(){var __accu1__=[];for(var e of l)__accu1__.append(e[0]);return py_iter(__accu1__)}()))__accu0__.append(tuple([n,i]));return py_iter(__accu0__)}());
print(line);
var result=urllib.request.urlopen(request);
ipaddress.ip_address(ipv4invalid);
plt.plot(b,a1);
export var dfB=pd.DataFrame(B);
lr.set_params(params);
export var xlinear=np.linspace(a,b,num);
var x=np.arange(2);
Console.Write(result);
deleteli[i];
print(a.__getitem__([tuple([0,null,1]),np.newaxis,tuple([0,null,1])]).shape);
var M=X*A+(W*B).T+Z*G;
my_generator.is_just_started;
var start_time=time.time();
signal.signal(signal.SIGALRM,inputTimeOutHandler);
compact_ranges(comp);
a.py_sort(numeric_compare);
requests.py_get(uri);
serial.Serial(dev,...args,__kwargtrans__(kwargs));
fig.axes.get_xaxis().set_visible(false);
var d=dict([[t.tag,function(){var __accu0__=[];for(var [k,v]of list(dd.py_items()))__accu0__.append([k,len(v)==1?v[0]:v]);return dict(__accu0__)}()]]);
export var DOT11_CIPHER_ALGO_WEP40=1;
print(df);
cv2.circle(vis,tuple([x2,y2]),2,col,-1);
df.printSchema();
Py_DECREF(mymodule);
print(root.nodes.node[1].PCDATA);
convert_to_dict(my_dict);
sorted(strings);
my_dict[k]=v;
self.root.after(527,self.readSensor);
var proc=Popen(cmd,__kwargtrans__({shell:true,bufsize:1,stdout:PIPE}));
export var test_dict=function(){var __accu0__=[];for(var i=0;i<5;i++)__accu0__.append([make_str(1E7),i]);return dict(__accu0__)}();
A.__setitem__([tuple([0,null,1]),tuple([0,1,1])],x);
var fig=plt.gcf();
self.start_urls=get_start_urls();
export var dmin=dist;
free(cfloats);
var then=datetime.now()-timedelta(__kwargtrans__({hours:2}));
G.add_edge(1,2);
export var update_c=tf.assign(c,a.read_value()+b.read_value());
z.close();
plt.xlim(tuple([-limit,limit]));
var fig=plt.figure();
max(curr,subs,__kwargtrans__({key:len}));
gevent.spawn(read_stream,p.stdout,stdout);
self.func();
export var random_frame=pd.DataFrame(x);
addSecurityHeader(client,username,password);
frame.Show();
get_object_or_404(queryset,__kwargtrans__({pk:1}));
df;
var yvalues=.1+np.arange(len(ylabels));
self.cls=cls;
var content=resp.read();
var idx=np.where(indices<arr.shape,indices,clipping_value);
fileobj.write(response.read());
log.setLevel(logging.DEBUG);
blobstore.delete([item.blob_key]);
imshow(Iopen);
var d=datetime.date(int(y),int(m),int(d));
do_something_6();
self.canvas.mpl_disconnect(self.cid);
_SHGetFolderPath(0,csidl,0,0,path_buf);
_Lappend(_normal(0,1));
random.shuffle(shuffled);
self.buttonPanel2.Show(true);
blank_image.paste(fluid128,tuple([400,0]));
datetime.datetime.now;
ax2.bar(dates,list(range(10,20)));
self._start_worker(pair);
export var completeset2=megalist.__getslice__(4,null,1);
print(node.render(Context()));
difflib.get_close_matches;
f();
print(value);
sys.modules.py_update(old_modules);
print(pizza.toppings.all());
var cam=Camera();
export var datam=np.zeros_like(data);
var __left0__=np.meshgrid(x,y,__kwargtrans__({copy:false}));var X=__left0__[0];var Y=__left0__[1];
pprint.pprint(response);
export var friendList=friendList.append(self);
ax2.set_ylim(-5,5);
print(delta.days);
export var reshaped_X=tf.reshape(X,[-1,1]);
var i=int(s,8);
thread1.join();
var l=[0,2,4,5,9];
tuple([true,true,true,true,false,false,false,false,false]);
var mask=np.isfinite(lg);
tuple([[true,true,true,true,true]]);
print(df);
c(a,b);
var suite=unittest.TestSuite();
i+=2;
var a=function(){var __accu0__=[];for(var i of itertools.groupby(data,__kwargtrans__({key:function __lambda__(i){return i==0}})))__accu0__.append(list(i[1]));return __accu0__}();
a[a==0];
var label=Label(f,...args,__kwargtrans__(kwargs));
var data=csvfile.read();
button2.configure(__kwargtrans__({command:function __lambda__(widget){if(typeof widget=="undefined"||widget!=null&&widget.hasOwnProperty("__kwargtrans__"))var widget=button2;return DoSomething(widget)}}));
file_handles.append(open(file));
json.dumps(object);
con.set_isolation_level(ISOLATION_LEVEL_AUTOCOMMIT);
var list2=list(map(itemgetter(0),grouped));
reverse(view_name,__kwargtrans__({kwargs:kwargs,request:request,format:format}));
conn.send(finalLine);
export var bias=tf.Variable(tf.constant(.1,__kwargtrans__({shape:[target_size]})));
var root=tk.Tk();
t.start();
a.__setitem__([i,tuple([0,null,1])],line.py_split());
var im=ax.imshow(dat,__kwargtrans__({vmin:0,vmax:2}));
var py_keys=function(){var __accu0__=[];for(var [x,y]of list(dic.py_items()))if(y==maxx)__accu0__.append(x);return __accu0__}();
w.mainloop();
export var rotated=string.__getslice__(n,null,1)+string.__getslice__(0,n,1);
foo();
var __left0__=query.fetch_page(10);var result=__left0__[0];var cursor=__left0__[1];export var more=__left0__[2];
export var Ihmf=np.expm1(Iout);
print(fmt.format(...row));
print(line);
self._running=false;
export var archive=py7zlib.Archive7z(fp);
export var d_max=function(){var __accu0__=[];for(var k of d)__accu0__.append([k,max(d[k])]);return dict(__accu0__)}();
app.run(__kwargtrans__({processes:8}));
var r=requests.py_get(send_url);
export var houses_in_town=House.objects.filter(__kwargtrans__({street__town__id:town_id}));
f(map(rec,iterable));

export var can_delete=false;
value;
export var zs2=scipy.interpolate.griddata(np.hstack(tuple([xs,ys])),zs,points);
time.sleep(2);
var df=df.T;
plt.rcParams.py_update(params);
self.__storage.append(p);
var data=f.read();
hash(test(10))==hash(test(10));
stream.write(msg);
application.listen(config.tornadoport);
self.login();
var out=a[mask];
var fs=function(){var __accu0__=[];for(var i=0;i<10;i++)__accu0__.append(function __lambda__(y){return function __lambda__(x){return x+y}}(i));return __accu0__}();
stdin.flush();
print(regx.py_split(string));
var b=a.groupby(__kwargtrans__({level:0})).cumsum().groupby(__kwargtrans__({level:0})).shift(1);
var ax2=ax1.twinx();
fout.write(line);
process(m);
r.status_code;
Base.metadata.create_all(e);
f(1,0,1);
print(i,rec_fib(i));
index_list.py_sort(__kwargtrans__({reverse:true,key:int}));
dupl.append(j);
(function(){var __accu0__=[];for(var i of li)__accu0__.append(i.number);return __accu0__})();
export var nrng=np.arange(n);
imgplot.set_clim(0,.7);
__in__(substring,string_);
df;
var metadata=MetaData(__kwargtrans__({bind:engine}));
TemplateResponse(request,template_name,context);
xlab.set_size(10);
ylab.set_size(10);
var n=sum(function(){var __accu0__=[];for(var line of csv.reader(filename))__accu0__.append(1);return py_iter(__accu0__)}());
var G=nx.Graph();
var b=[2,6,4,5,6];
myFunc();
ax.set_xlabel(wrap(ax.get_xlabel()),__kwargtrans__({rotation:90}));
export var y_err=np.array(function(){var __accu0__=[];for(var i of x)__accu0__.append(random.random());return __accu0__}());
export var numpy_array_of_results=func(numpy_array_of_arguments);
response;
var now=datetime.datetime.now();
var li=[-1,-1,2,2,-1,1,1,1,1,1,-1,-1];
var __left0__=tuple([xs[i],ys[i]]);var x=__left0__[0];var y=__left0__[1];
nx.draw_networkx_edge_labels(G,pos,__kwargtrans__({labels:edge_labels}));
foo+bar;
SHAhash.py_update(hashlib.md5(buf).hexdigest());
var A=np.arange(0,20);
s[0];
var a=list(a);
b.extend(c);
np.clip(c,a,b);
var parser=ET.XMLParser();
events.py_sort();
var py_name=models.CharField(__kwargtrans__({max_length:255}));
a.__getslice__(0,5,1);
msg.attach(part);
print(a.__getitem__([0,0]));
var ax=pyplot.subplot(1,1,1);
tuple([chambersinreactor,cardsdiscarded]);
print(function(){var __accu0__=[];for(var x of[0,1,0,0,1])__accu0__.append(py_next(x?i2:i1));return __accu0__}());
export var dev=pcap.lookupdev();
MyConcreteClass();
_singleton.foo_func();
MyAbstractClass();
export var task2=threading.Thread(__kwargtrans__({target:do_request}));
export var Hvalue=someoperation(Hnodes);
export var smoothed=np.convolve(data,np.ones(10)/10);
var rotated=list(py_reversed(zip(...original)));
a.insert(0,a.py_pop(-1));
!bool(search(strg));
var mylist=[true,true,false];
df[col_zscore]=(df[col]-df[col].mean())/df[col].std(__kwargtrans__({ddof:0}));
py_typeof(a[1]);
request.query_string;
var s=signal.signal(signal.SIGINT,signal.SIG_IGN);
pickle.dump(object,f);
var fig1=plt.figure();
var queryset=ModelName.objects.all();
print(str(table));
export var ordered_dict=OrderedDict(function(){var __accu0__=[];for(var k of df.Unique_id)__accu0__.append(tuple([k,unordered_dict.py_get(k)]));return py_iter(__accu0__)}());
var result=_PySequence_IterSearch(seq,ob,PY_ITERSEARCH_CONTAINS);
NULL;
export var this_mod=sys.modules[__name__];
int(s);
django.core.management.setup_environ(settings);
check_matr(b,0);
self.increment();
var fig=plt.figure();
new set([new set([group.users])]);
f(A);
export var parse_dates=tuple([[[4,5]]]);
var hxs=HtmlXPathSelector(response);
self.assertEqual(1,1);
ans.append(letter);
os.mkfifo(pipe_name);
_PyUnicode_NONCOMPACT_DATA(op);
var result=getattr(self.contained,item);
paths.append(py_split.__getslice__(2,-1,1));
deletea[k];
ax.set_zlim(0,10);
var session=session();
var b=pandas.DataFrame(np.arange(1E3,1025,__kwargtrans__({dtype:np.float16})).reshape(5,5));
myFunc(2,5);
numpy.genfromtxt(...args,__kwargtrans__(kwargs));
print(i);
gobject.timeout_add(5E3,set_mask,win);
cbar.ax.tick_params(__kwargtrans__({labelsize:5}));
[1];
2*a;
B.__getitem__([tuple([y,y+N,1]),tuple([x,x+N,1])]);
var A=[0,0,0,1,0,1];
my_shelf[key]=__all__[key];
permstr;
train_test_split(a,b);
byte_array[i]=(val<<16>>8&16711680)>>16;
self.textinput.bind(__kwargtrans__({text:self.on_text}));
set_a-set_b==set_b-set_a;
InetAddress.getByName(IP);
df.fillna(s);
var fig=plt.figure(__kwargtrans__({figsize:tuple([8,6])}));
var my_dict=function(){var __accu0__=[];for(var k of input_list)__accu0__.append([k,some_func(k)]);return dict(__accu0__)}();
print(st.__getslice__(-m.start(1)-len(m.group(1)),-m.start(1),1));
proc.wait();
results.extend(tmp_results);
var T=np.dot(V,U.T);
QVariant();
var __left0__=function(){var __accu0__=[];for(var x of py_next(f).py_split())__accu0__.append(int(x));return __accu0__}();var w=__left0__[0];var h=__left0__[1];
i+=1;
db.BeginTrans();
var x=dict(function(){var __accu0__=[];for(var row of cursor)__accu0__.append(tuple([row.SITE_NAME,row.LOOKUP_TABLE]));return py_iter(__accu0__)}());
export var full_file_name=os.path.join(src,file_name);
json.dump(dict(__kwargtrans__({value:true})),sys.stdout);
var output=proc.stdout.read();
pca.fit(df);
var result=grouped.agg(combine_it);
var s=wx.BoxSizer(wx.HORIZONTAL);
print(row.__getslice__(0+i,chunckLen+i,1));
asyncio.run_coroutine_threadsafe(coro,self.loop);
d.utcoffset();
generateFoos();
var output=scipy.signal.convolve(signal_in,h);
numpy.all(x==x.T);
var f2=function(){var __accu0__=[];for(var x=0;x<100;x++)__accu0__.append(2*x);return __accu0__}();
export var ori2cent=np.eye(4);
export var zed=function __lambda__(){return giveupthefunc()};
export var is_pipe=!isatty(stdin.fileno());
var driver=webdriver.Firefox();
self.Count+=1;
GEOIP.country_name_by_addr(ip);
np.int(x);
cls.create_table();
InitializeComponent();
var request=urllib.request.Request(url);
print(my_data[x],my_data[x+y]);
new_x;
var opener=urllib.request.OpenerDirector();
var temp=[];
var py_items=function(){var __accu0__=[];for(var item of soup.contents)if(isinstance(item,bs4.Doctype))__accu0__.append(item);return __accu0__}();
var result=df2.reindex(np.union1d(df1.index,df2.index));
var app=QApplication([]);
t.create();
var layout=QGridLayout(self);
self.__dict__[py_name]=value;
export var previous_trace=inspect.trace()[1];
set(A)-set(subset_of_A);
var fig=plt.figure();
output.close();
xdebug.remote_port=9E3;
export var me=os.getpid();
pylab.imshow(arr);
print(v);
float(strg);
plt.plot(np.arange(10,1,-1)+i);
var data=np.arange(10,__kwargtrans__({dtype:np.int}));
session.expunge_all();
time.clock()-start;
var opener=urllib.request.build_opener();
shortcut.save();
print(first16);
ax.set_xticklabels(empty_string_labels);
np.average(meanNumbers);

export var sqlContext=SQLContext(sc);
finish();
self.sa=function(){var __accu0__=[];for(var l of L)__accu0__.append(l[2]);return __accu0__}();
os.rmdir(dir);
b.start();
var py_name=Column(String,__kwargtrans__({primary_key:true}));
var signal=np.cos(5*np.pi*time)+np.cos(7*np.pi*time);
tagged.py_sort(function __lambda__(x,y){return cmp(x[1],y[1])});
dG.add_edge(word,next_word,__kwargtrans__({weight:maxint-1}));
print(list(fun(iterable)));
list_common.append(a);
loop.run_forever();
conn.Open(dsn);
Z.__init__(self);
self._storage[key].add(word.__getslice__(len(key),null,1));
print(node.render(Context()));
re.sub(pat,py_replace,txt);
var element=np.ones(tuple([5,5])).astype(np.uint8);
var py_name=db.Column(db.String(255),__kwargtrans__({primary_key:true}));
zf.write(modfile,os.path.relpath(modfile));
export var Vx=np.array(X);
var w=list(s);
self.im_data_lock.release();
dict(dd);
dict({});
var worksheet=workbook.add_worksheet();
export var its=function(){var __accu0__=[];for(var [k,v]of list(mapping.py_items()))__accu0__.append([k,py_iter(v)]);return dict(__accu0__)}();
var __left0__=tee(f());var first=__left0__[0];var second=__left0__[1];
dir(l1);
export var Signature1=0;

np.random.seed(1001);
export var z_dense_smooth_bisplrep=interp.bisplev(xvec,yvec,bisp_smooth).T;
img.putpalette(palette);
export var twitter_token=tuple([settings.TWITTER_KEY]);
var x=list(range(1,10));
reactor.stop();
w2.set_keep_above(true);
var cb=plt.colorbar(s);
print(data[index]==py_values);
G.add_nodes_from(L2);
export var old_name=settings.DATABASE_NAME;
var data2=data1.reset_index();
export var piv=np.arange(m);
req.send_response(200);
dis.dis(foo);
print(line);
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
dq.append(py_next(reader));
self.setter(instance,self.py_name,value);
export var loop_one=function __lambda__(seq){return function(){var __accu0__=[];for(var el of seq)__accu0__.append(function __lambda__(el){if(typeof el=="undefined"||el!=null&&el.hasOwnProperty("__kwargtrans__"))var el=el;return el});return __accu0__}()};
im1.save(tilefilename,self.tiledriver);
sorted(pairs);
var r=follow_redirections(r,s);
fn();
tuple([tuple([0,10,11,12,14,16])==0,10-12,14,16]);
var b=np.delete(a,np.s_.__getslice__(-1,null,1),1);
strprime+=str(__mod__(x,10));
deletePoint.__init__;
min(function(){var __accu0__=[];for(var sub of Q)for(var a of sub)__accu0__.append(a);return py_iter(__accu0__)}());
var out=function(){var __accu0__=[];for(var [XX,YY]of zip(X,Y))__accu0__.append(float(f_interp(XX,YY)));return __accu0__}();
export var oauth_response=urlfetch.fetch(url);
print(months(11,2010,2,2011));
systemtest_1.py;
(function(){var __accu0__=[];for(var [k,v]of list(ret.py_items()))__accu0__.append([k,list(v)]);return dict(__accu0__)})();
canvas.Canvas.save(self);
len(lst)-i-1;
Base.metadata.create_all(engine);
export var total_length=sum(function(){var __accu0__=[];for(var f of fields)__accu0__.append(len(str(f.py_get())));return py_iter(__accu0__)}());
hm.UnhookMouse();
export var fheader=f.read();
temp.append(0);
export var day_generator=itertools.cycle(days);
f.baz();
false;
specgram(signal);
arrayName.byteswap(true);
s.feed(html);
G.add_edge(2,6);
df.reindex(ind&ind2).join(df2.reindex(ind&ind2));
fh.readline();
self._age=value;
var l2=[4,5,6];
my_table.add(tr(function(){var __accu0__=[];for(var i of data.columns)__accu0__.append(th(i,__kwargtrans__({style:header_style})));return __accu0__}()));
sys.modules[themodname]=themod;
marshal.dump(g.__code__,funcfile);
export var csv_w=csv.writer(out_file);

var primes=function(){var __accu0__=[];for(var x of primes)if(x==i||__mod__(x,i))__accu0__.append(x);return __accu0__}();
var axes=plt.subplot(111);
plt.xlim(0,600);
button.grid();
var x=np.linspace(0,100,num);
tuple([result[0],result[1]]);
entity_manager.commit();
sorted(set(x),__kwargtrans__({key:x.index}));
my_data;
export var tb=traceback.format_exc();
self._observers.append(callback);
plus(n);
ipList.append(str(IPAddress(ip)));
true;
var ax=plt.gca();
var cur=con.cursor();
export var other=function(){var __accu0__=[];for(var x of stuff)__accu0__.append(x.__getslice__(0,null,1));return __accu0__}();

ret.append(t);
np.unique(np.concatenate(x));
var soup=BeautifulSoup(html);
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
np.fill_diagonal(mask,0);
fig.set_size_inches(w,h);
Grid.rowconfigure(grid,y,__kwargtrans__({weight:1}));
tuple([a,b]);
view.setModel(model);
self._check_size_limit();
print(map(timestamp,fridays));
export var other_field=form._fields.py_get(self.other_field_name);

np.equal(np.mod(x,1),0);
con.row_factory=my_row_factory;
(function(){var __accu0__=[];for(var [k,i]of it.groupby(L))__accu0__.append(tuple([k,sum(function(){var __accu1__=[];for(var _ of i)__accu1__.append(1);return py_iter(__accu1__)}())]));return __accu0__})();
var mask=np.ma.masked_array(a);
var id=models.UUIDField(__kwargtrans__({primary_key:true,py_default:uuid.uuid4,editable:false}));
var twitter=Twython(APP_KEY,APP_SECRET);
var ax=plt.gcf().axes[0];
true;
export var one_week=7*24*60*60;
var a=[1,2];
what_bson_type([1,2]);
var start_time=time.time()+20;
export var ticm=time.clock();
count+=1;
var s=pd.Series([true,true,false,true]);
print(formatdate(timestamp));
zf.filelist.append(zinfo);
hash(tuple([self.py_name,self.location]));
var cursor=connection.cursor();
var item=myset.py_pop();
Ml;
print(df);
export var passman=urllib.request.HTTPPasswordMgrWithDefaultRealm();
doSomethingWith(instance);
self.mygraph.set_xydata(self.xaxis,self.data[-1]);
var ns=parser.parse_args();
export var new_dic=defaultdict(dict);
(flipcase|othercommand)>ouput.txt;
var es=ES.Elasticsearch();
var __left0__=tuple([[],[]]);var good=__left0__[0];var bad=__left0__[1];
var f=plt.figure();
self._popup.destroy();
var result=[];
df;
var driver=webdriver.Firefox();
print(string);
plt.show();
new_list2.append(i[1]);
export var htmlFile=file.read();
print(hex(id(v)));
export var master_list=master.readlines().__getslice__(1,null,1);
export var prof=webdriver.FirefoxProfile();
var __left0__=curve_fit(model,cupper.__getitem__([tuple([0,null,1]),1]),f2);export var popt2=__left0__[0];var pcov=__left0__[1];
x.append(x_center);
var y=array([1,1,1,py_NaN,py_NaN,2,2,py_NaN,0]);
s.add(y);
export var maxlens=map(len,function(){var __accu0__=[];for(var el of zip(...x))__accu0__.append(max(el,__kwargtrans__({key:len})));return py_iter(__accu0__)}());
var group=map(itemgetter(1),g);
var a=numpy.random.randint(100,__kwargtrans__({size:100})).reshape(tuple([10,10]));
var __left0__=divmod(n-len(first),len(digits));var n=__left0__[0];var mod=__left0__[1];
self.assertTrue(__in__(ip2.ip,result_ips));
Dummy().a;
__mod__(i-j,9)==0;
(function(){var __accu0__=[];for(var c of foo)if(!__in__(c,temp)&&(temp.add(c)||true))__accu0__.append(c);return __accu0__})();
export var trainingData=rawData.map(parseCsvLine);
var __left0__=np.mgrid.__getitem__([tuple([0,2*np.pi,complex(0,20)]),tuple([0,np.pi,complex(0,10)])]);var u=__left0__[0];var v=__left0__[1];
self.layout=QtGui.QVBoxLayout(self);
rpy2.robjects.conversion.py2ri=conversion_pydataframe;
g._group_actions.py_sort(__kwargtrans__({key:function __lambda__(x){return x.dest}}));
print(sorted(L,__kwargtrans__({key:Key})));
print(floor(d*100)/100);
queue.append([start]);
out.write(result);
primes.__getslice__(0,bisect(primes,n),1);
test.main();
pool.join();
var c=func(...args,__kwargtrans__(kwargs));
answer+=s.__getslice__(0,-1,1);
sql.add(customer2);
self.__age;
var out=list(df.b[final_mask]);
export var synsets=wn.synsets(word);
var u=set.intersection(...setlist);
var u=random.uniform(0,1);
deleteseq[index];
var x=np.array([-2,-1,0,1,2]);
print(diff.total_seconds());
state.commands.py_update(callables);
var words=words.__getslice__(0,null,1);
txt.set_color(line.get_color());
export var df_fmt=pd.DataFrame([fmt],__kwargtrans__({columns:df.columns}));
export var max_logins=db.session.query(db.func.max(User.numLogins)).scalar();
pdb.set_trace();
f.config(__kwargtrans__({width:5}));
8;
var bar=Bar.objects.py_get(__kwargtrans__({pk:target_pk}));
f.write(chunk);
var today=datetime.now();
var x=np.random.normal(__kwargtrans__({size:tuple([number])}));
uniq[index.argsort()];
(function(){var __accu0__=[];for(var n of nums)__accu0__.append(factorial(n));return __accu0__})();
zip(...iterators);
arr.__getslice__(left,right,1);
var metadata=MetaData();
ss.genextreme.fit(data,__kwargtrans__({floc:0}));
export var drives=db.ReferenceProperty(__kwargtrans__({reference_class:Car}));
cls.num+=1;
deactivate;
dict(zip(list(row.py_keys()),row));
var ax=plt.subplot(111);
wrapper;
var application=get_wsgi_application();
var py_values=numpy.random.randint(6,__kwargtrans__({size:tuple([6,10])}));
cv.ReleaseCapture(cap);
df.dtypes;
var c=dbconn.cursor();
var y=keypoints[i].pt[1];
source.clojure;
source.cmake;
source.coffee;
source.disasm;
source.dockerfile;
source.dosbatch;
source.erlang;
source.gdbregs;
source.gradle;
source.groovy;
source.haskell;
a[ix_(Xinds,Y2inds)];
func(that,session,...args,__kwargtrans__(kwargs));
var old_settings=termios.tcgetattr(fd);
export var rstring=arr.astype(numpy.uint16).tostring();
event_box.set_border_width(10);
ws.insert_bitmap(file_out,0,0);
image.__setitem__([,0],np.minimum(image.__getitem__([,0]),threshold));
cmyk_im;
var dictionary=json.loads(data.getvalue());
mults.append(int(np.ceil(inShape[i]/finalShape[i])));
plt.bar([1,2],[4,5]);
var root=Tk();
CV_Assert(img.channels()==1);
export var entryFrame=Tkinter.Frame(mainFrame,__kwargtrans__({width:454,height:20}));
print(compare(expand(a)));
xml.writexml(out);
var step=(end-start)/(N-1);
_.shape;
f.close();
var x=float(sys.argv[1]);
inspect.getsource(f);
fig.show();
var __left0__=plt.subplots(1,1);var fig=__left0__[0];var ax=__left0__[1];
frame.grid_columnconfigure(1,__kwargtrans__({weight:1}));
var s=requests.session();
df.dtypes;
myfuncs[0]();
export var interned=AwfulHackToGetTheInternedDict();
export var xyz=np.zeros(x.shape,__kwargtrans__({dtype:dt}));
tuple(function(){var __accu0__=[];for(var [h,t]of zip(head,tail))__accu0__.append(h-t);return py_iter(__accu0__)}());
next_emitted.append(py_name);
self.stepsize=stepsize;
inspect.getmembers(Foo,inspect.ismethod);
var x1=x.__getitem__([tuple([0,null,1]),tuple([1,-2,1])]);
k.set_contents_from_file(resized_photo);
var contents=urllib.request.urlopen(request).read();
self.scrollToItem(self.item(visible.row(),column));
print(enumerate.__doc__);
var u=array(function(){var __accu0__=[];for(var x of set(function(){var __accu1__=[];for(var x of input)__accu1__.append(tuple(x));return py_iter(__accu1__)}()))__accu0__.append(array(x));return __accu0__}());
turtle.begin_fill();
list(g);
export var is_global=remote_conn.recv(1024);
mat_csr.__setitem__([idxs,tuple([0,null,1])],2);
self.server.server_close();
df1.shape;
do_something();
export var processed_columns=function(){var __accu0__=[];for(var [i,x]of enumerate(columns))if(not_all_zero[i])__accu0__.append(x);return __accu0__}();
gcc;
cmake;
var setting2=somesetting;

print(sum(function(){var __accu0__=[];for(var x of lst)if(__mod__(x,2)==0)__accu0__.append(Math.pow(x,2));return py_iter(__accu0__)}()));
getFoos();
time.sleep(5);
var min_value=min(new_array);
var df=df[df[c].isin(df[c].value_counts()[df[c].value_counts()>m].index)];
row.append(token);
var window=gtk.Window();
export var lower=tuple(function(){var __accu0__=[];for(var x of lower)__accu0__.append(x-1);return py_iter(__accu0__)}());
df2.loc.__setslice__(1,null,null,[list(s1),list(s2)]);
export var long_df=wide_df.stack().stack().stack();
py_keys.append(k);
var y=numpy.array([2.56,4.79,6.21]);
df.index=df.index.__getslice__(0,null,-1);
var br=mechanize.Browser();
updatebins(bins,binsize,x);
var f=function __lambda__(i){if(typeof i=="undefined"||i!=null&&i.hasOwnProperty("__kwargtrans__"))var i=i;return i};
gtk.main();
var a=a-1;
deleteglobals()[py_name];
[n,m];
var full_path=os.path.join(dirpath,filename);
export var x509=OpenSSL.crypto.load_certificate(OpenSSL.crypto.FILETYPE_ASN1,der);
var f=pd.read_csv(file,__kwargtrans__({index_col:0}));
ob.stackoverflow(2);
var q=queue.Queue();
result;
x*x;
f;
var c=np.vstack(b);
var start=time.time();
format(value,spec);
var result=f(...args,__kwargtrans__(kwds));
self.client.close();
tableWidget.setColumnCount(len(entries[0]));
var root=etree.parse(f,__kwargtrans__({parser:parser}));
var d=mat.shape[1];
var z=np.zeros(tuple([2,1]),__kwargtrans__({dtype:int64}));
var records=csv.DictReader(f);
ax.scatter(x1,y1,__kwargtrans__({s:100,lw:0,color:[1,alpha,alpha]}));
tuple([[0,1,0]]);
x.py_sort(__kwargtrans__({key:custom_key}));
export var zipfile_ob=zipfile.ZipFile(file_like_object);
thread2.start();
letters.remove(chr(letter));
task.interrupt();
print(function(){var __accu0__=[];for(var [key,val]of list(data_dict.py_items()))__accu0__.append(tuple([key,median(val)]));return __accu0__}());
ax.set_xlim(-2,2);

termios.tcsetattr(self.fd,termios.TCSAFLUSH,self.old_term);
a.dot(b);
renWinL.AddRenderer(renL);
self.ax=self.fig.add_subplot(111);
var pool=multiprocessing.Pool(4);
self.f.do_it();
a.__setitem__([tuple([2,4,1]),tuple([2,4,1])],1);
log_file.write(line);
sum(function(){var __accu0__=[];for(var i of self.intervals)__accu0__.append(i.time_spent);return py_iter(__accu0__)}(),timedelta(0));
cv.SetData(image,tiff.tostring());
do_something(line);
var c=tensordot(a,b,__kwargtrans__({axes:tuple([0,0])}));
self.thread.join();
print(url);
var li=st2.py_split();
_run_finalizers(0);
var n=len(G.nodes());
sorted(list(range(len(a))),__kwargtrans__({key:a.__getitem__}));
logging.getLogger().addHandler(logChannel);
df;
var form=ForgotPassword(__kwargtrans__({data:request.POST}));
Math.pow(d(10),Math.pow(d(10),d(10)));
dict(zip(a.names,list(a)));
urllib.request.build_opener(proxy_handler,proxy_auth_handler);
ax.semilogy(x);
n;
var curs=orcl.cursor();
var mylist=list(d.py_values());

HTML_with_style(df.head(),style);
var regex=re.compile(pattern,__kwargtrans__({flags:re.MULTILINE|re.DOTALL}));
print(list(makerange(s)));
dict(keyValList);
self._data.columns.size;
tuple([[0,4,5,1]]);
export var Dx=cv2.Sobel(image,cv2.CV_8UC1,1,0);
gtk.main_quit();
fp.seek(i);
print(line);
var node=node.getNext();
var l2=l.__getslice__(0,c_index,1);
export var y_stds=np.array(function(){var __accu0__=[];for(var u of x_unique)__accu0__.append(np.std(y[x==u]));return __accu0__}());
self.data.append(r);
turtle.fillcolor(color);
m.Blit(0,0,w,h,s,0,0);
var __left0__=py_next(g);var a=__left0__[0];var b=__left0__[1];
var image=np.fromstring(im_str,np.uint8).reshape(h,w,nb_planes);
cursorObj.connection.commit();
dict(zip(a.names,map(list,list(a))));
help(np.core._dotblas);
print(twrv.join());
var ax=fig.add_subplot(1,1,1);
var groups=groupby(sorted_input,__kwargtrans__({key:itemgetter(1)}));
var __left0__=np.meshgrid(np.linspace(2E3,2200,10),np.linspace(540,740,10));var xx=__left0__[0];var yy=__left0__[1];
var B=[1,2];
print(df.iloc.__getitem__([0,tuple([0,null,1])]));
count+=1;
PyObject*PyEval_GetGlobals();
var csv_writer=csv.writer(my_new_list);
export var inlines=[BookInline];
print(function(){var __accu0__=[];for(var i=0;i<len(a);i++)__accu0__.append(sum(aa.__getslice__(i,i+w,1)));return __accu0__}());
request.end();
list(range(args[0],args[1],1));
sheet.write(cell,value,cell_format);
_draw_point(i,j-1,fade_amount_i);
self.helpers=helpers;
k.set_contents_from_string(out_im2.getvalue());
export var string_numbers=contents.py_split();
print(enclosing);
var root=tree.getroot();
var connection=httplib.HTTPConnection(req.get_host());
export var slicevol=np.diff(xlinear);
delattr(instance,self.py_name);
[0,1,2,-5,4,5,6,7,8,9];
specgram(signal);
mycoll.insert(stop_dict);
outputStream.close();
py_iter(input);
np.all(z==x);
export var gaps=set(function(){var __accu0__=[];for(var i=1;i<n+1;i++)__accu0__.append(str(i).zfill(7));return py_iter(__accu0__)}())-set(seq);
var profile=UserProfile.objects.py_get(__kwargtrans__({user:request.user}));
sheet.set_clip(pygame.Rect(sprt_rect_x,sprt_rect_y,len_sprt_x,len_sprt_y));
print(line);
print(roundPartial(9.75,.1));
print(roundPartial(9.76,.1));
plt.xlabel(ax1_label);
lxml.html.document_fromstring(e);
simulate(image,text);
export var affected_count=cursor.execute(sql_insert,tuple([id,filename]));
d[k]=v.lower();
print(e);
self.setCellWidget(row,col,image);
csr_matrix(coo);
pl.yticks(np.linspace(0,1,11,__kwargtrans__({endpoint:true})));
plt.plot(yvalue);
sleep(5);
file.seek(-count,1);
plt.show(__kwargtrans__({block:false}));
np.cos(theta,__kwargtrans__({out:x.__getitem__([tuple([0,null,1]),0])}));
var threads=function(){var __accu0__=[];for(var _i=0;_i<20;_i++)__accu0__.append(threading.Thread(__kwargtrans__({target:worker})));return __accu0__}();
script2.run(filename);
pool.join();
var a=np.arange(10).reshape(2,5);
round_to(n,.05);
dic[k].append(v);
print(x1.dtype,x1.nbytes);
d[k].append(v);
self.num_vertices=self.num_lines*2;
deleteself.dictionary[key];
w.writerow(list(somedict.py_keys()));
var results=Model.objects.filter(__kwargtrans__({pk__in:pks}));
writer.writerow(fields);
var twitter=Twython(APP_KEY,APP_SECRET);
var d=dict({});
m_1.append(line);
var contents=sourceFile.read(BLOCKSIZE);
self.fp2.close();
export var ang2=angle(sx2[iseg2],sy2[iseg2]);
var lines=list(reader);
np.array([[1,0],[0,1]]).__array_priority__;

var x=np.array([1,2,0,-2]);
monthrange(2012,2);
freeMem.argtypes=[ctypes.c_void_p];
var sheet=workbook.sheet_by_index(0);
self.button=[];
f.write(att.content);
now.microsecond;
print(sp.pixel(0,0));
var rows=cur.fetchall();
self.lda[bow];
export var DOT11_CIPHER_ALGO_TKIP=2;
inputs.append(conn);
var py_name=Column(String(64),__kwargtrans__({nullable:false}));
var posts=Post.query.all();
f(...args,__kwargtrans__(kwargs));
export var entryDate=ensure_datetime(result[5]);
np.array(-0)==np.array(+0);
big_table[nchunks].py_update(dict([[hash,file.filename]]));
self.process.kill();
export var imframe=im.copy();
var nextelem=li[idx];
var wr=csv.writer(your_csv_file,__kwargtrans__({quoting:csv.QUOTE_ALL}));
zip(A,cycle(B));
export var y_range=list(range(-5,6));
export var began=time.time();
var app=create_app();
var non_blank_lines=function(){var __accu0__=[];for(var line of fd)if(line.strip())__accu0__.append(line.strip());return py_iter(__accu0__)}();
np.apply_along_axis(wrapper,axis,F);
queue.close();
shpinfo.append(shapedict);
points.set_data(x_c,y_c);
y.__reduce__()[1];
var line=sys.stdin.readline();
c[2];
var __left0__=os.path.py_split(path);var path=__left0__[0];export var folder=__left0__[1];
todays_files.append(original_file);
export var hbox=QHBoxLayout();
var x=2;
var A=A.apply(np.py_sort,__kwargtrans__({axis:1}));
self.CalculatePopularity();
print(item.py_name,item.birthday);

sum_sum_digit(sum_);
root.destroy();

self.mainFrame().load(QUrl(url));
print(sc2().get_subclass_name());
df.dtypes;
list(dic.py_items());
var p=figure(__kwargtrans__({plot_width:400,plot_height:400}));
show();
export var ACTIONS=dict([[ONE,value1],[TWO,value2]]);
writer.save();
new set([new set([page.title])]);
var result=collections.defaultdict(int);
(function(){var __accu0__=[];for(var _=0;_<length;_++)__accu0__.append(rand_vector());return __accu0__})();
self.response.out.write(f.read());
self.allowed_domains.remove(hostname);
var sector_el=function(){var __accu0__=[];for(var x of remaining)__accu0__.append(x[1]);return __accu0__}();
var a=A();
all(function(){var __accu0__=[];for(var y of x)__accu0__.append(x[0]==y);return py_iter(__accu0__)}());
self.stdin_sock=socket.socket(socket.AF_INET,socket.SOCK_STREAM);
plt.figure();
export var updated=request.GET.copy();
export var yl=list(y);
simplejson.load(f);
grid_sizer_1.Add(self.tree_ctrl_1,1,wx.EXPAND,0);
main_loop.start();
var objects=InheritanceManager();
func();
new_name();
print(hit.contents[6].strip());
plt.figure();
np.isfinite(diff_images).all();
export var mock_mail_obj=mock.Mock();
var b=np.array([0,1,0]);
var yi=np.array([0,.5,1]);
value.__getslice__(2,4,1);
var alltests=unittest.TestSuite();
np.diagonal(a.dot(b));
export var stop=np.where(A==T2)[0];
var ax=np.histogram2d(x_data,y_data,__kwargtrans__({bins:bins}));
var v=enumerate(printmylist(mylist));
var out=np.py_split(sorted_a,shift_idx);
print(b[0]);
tuple([[4,5,6,7]]);
var application=app.wsgifunc();
var mylist=[];
var p=figure(__kwargtrans__({x_range:tuple([0,1]),y_range:tuple([0,1])}));
var reader=PdfReader(input_file);
self.do_open(httplib.HTTPConnection,req);
os.umask(oldmask);
(x>=0).sum();
np.argmax(aa>5);
var s=str(a).zfill(prec+1);
self.coconut=coconut;
base64.b64decode(data[1]);
export var row_sums=numpy.zeros_like(img);
extmodule.override();
self.c.config(__kwargtrans__({width:w,height:h}));
var input_file=args[0];
var p=multiprocessing.Pool();
export var tpl=simplejson.loads(jsn,__kwargtrans__({object_hook:_from_json}));
cmdutils;

json.dumps(f(...args,__kwargtrans__(kwargs)));
plt.xticks(np.arange(.5,len(df.columns),1),df.columns);
writer.writerow(row);
self.i+=1;
cr.set_line_width(10);
layout.addWidget(self._listview);
export var unknown=set(self.initial_data.py_keys())-set(self.fields.py_keys());
p.start();
obj.__class__.set_x_class(15);
gc.set_debug(gc.DEBUG_UNCOLLECTABLE|gc.DEBUG_COLLECTABLE|gc.DEBUG_STATS);
session2.merge(obj1);
title.__getslice__(0,null,-1);
pd.Series(function(){var __accu0__=[];for(var i of d)__accu0__.append(timedelta(int(i)));return __accu0__}());
var new_x=np.linspace(x.min(),x.max(),new_length);
var Y=Y[list(range(n/2))]/max(Y[list(range(n/2))]);
print(str(newdom));
(function(){var __accu0__=[];for(var [x,y]of d.py_items())__accu0__.append(y?mappend(str(x)):unmappend(str(x)));return __accu0__})();
var request=urllib.request.Request(url);
export var tmpdir=str(tmpdir);
print(r.findall(line));
x.append(i*2);
print(pool.map(f,list(range(10))));
queue.py_get();
export var min_idxs=function(){var __accu0__=[];for(var [idx,val]of enumerate(a))if(val==min_val)__accu0__.append(idx);return __accu0__}();
var __left0__=np.meshgrid(xi,yi);var xi=__left0__[0];var yi=__left0__[1];
var mask=np.isnan(arr);
nx.draw_networkx(gr);
db.init_app(app);
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
var x=np.arange(10,1,-1);
print(link.tail);
var func=CALLBACK(function __lambda__(x){return myPythonCallback(x)});
stack.append(msg);
export var dataAC=ifft(dataFT*__conj__(numpy),__kwargtrans__({axis:1})).real;
export var resp_dict=json.loads(resp_str);
var c=Counter(function(){var __accu0__=[];for(var dct of my_list)for(var item of list(dct.py_items()))__accu0__.append(item);return py_iter(__accu0__)}());
(function(){var __accu0__=[];for(var py_items of zip(first,second))for(var item of py_items)__accu0__.append(item);return __accu0__})();
print(parser.format_help());
var data=function(){var __accu0__=[];for(var [k,v]of list(dr.py_next().py_items()))__accu0__.append([k,[v]]);return dict(__accu0__)}();
c._Z15writePixelsRectP8JoxColoriiii(data_array,0,0,WIDTH,HEIGHT);
os.stat(fullname).st_ctime;
queue.join();
var ax=fig.add_subplot(1,1,1);
self.progress_bar_lock.release();
var __left0__=zip(...c);var a=__left0__[0];var b=__left0__[1];
export var cd=1097*math.pow(ei,4)/512;
hi_file.write(hi_web.read());
self.rematch=re.match(regexp,self.matchstring);
var d=dict({});
self.ClickedLB2.move(200,150);
var cs=axs[0].contourf(X,Y,zdata,__kwargtrans__({levels:levels}));
QWebView.__init__(self);
export var floatlist=function(){var __accu0__=[];for(var _=0;_<Math.pow(10,5);_++)__accu0__.append(random.random());return __accu0__}();
print(link.string);
t.cancel();
self.parser=create_parser();
var b=a+b;
var L=[1,2,1,1];
[a.py_pop(2),a][1];
export var mock_locations=Location.objects.none();
plt.clf();
var py_keys=function(){var __accu0__=[];for(var k of list(d.py_keys()))__accu0__.append([k[0],0]);return dict(__accu0__)}();
self.window=gtk.Window(gtk.WINDOW_TOPLEVEL);
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
sorted(list(kwargs.py_items()),__kwargtrans__({key:itemgetter(0)}));
var line=line.rstrip();
var buffer=buffer_from_memory(y,8*array_length);
filehandler.close();
var request=self.initialize_request(request,...args,__kwargtrans__(kwargs));
[7500,7500];

var url=models.CharField(__kwargtrans__({max_length:255,unique:true}));
self.l=py_iter(l);
export var dense2=gensim.matutils.sparse2full(lda_vec2,lda.num_topics);
numpy_fillna(data);
var pool=Pool();
imshow(im);
findAll(tagname,__kwargtrans__({recursive:false}));
print(fmtpairs(list(string.ascii_uppercase)));
a[perm];
parsed_output.close();
var __left0__=tuple([datetime(2015,11,2),datetime(2015,12,14)]);var start=__left0__[0];var end=__left0__[1];
var parser=PullSuggestions();
self.assert_equal(mocked_handler.call_count,1);
export var notebook=wx.Notebook(self);
var content=gzip.GzipFile(__kwargtrans__({fileobj:StringIO(content_raw)})).read();
hash(tuple([self.value,self.meta]));
var temp=np.argpartition(-test,4);
var out=np.array(function(){var __accu0__=[];for(var i=1;i<n-1;i++)__accu0__.append(f(i));return __accu0__}());
x.a;
var result=ast.literal_eval(response[1]);
var inverted_image=PIL.ImageOps.invert(rgb_image);
var data=json.load(json_data);
tuple([[0,0,0,0,0]]);
self.foo();
out[i]=np.count_nonzero(dists<Rsq);
ax.axis([-4,4,-4,4]);
[1,1,1];
var ii=np.random.randint(0,10,tuple([a.shape[0]]));
self.flush();
window.show_all();
self.session.flush();
var person=models.ForeignKey(Person);
var fig=plt.figure();
self.__dict__.py_update(dict(zip(properties,pslList)));
QtWidgets.QMainWindow.__init__(self);
export var result_array=f(A);
var G=nx.DiGraph();
heappush(heap,item);
np.random.seed(42);
var handler=logging.StreamHandler(sys.stderr);
self.successors.remove(other);
self.viewport.add(self.img);
len(get_file_contents(filename).splitlines());
var upform=UserProfileForm(__kwargtrans__({instance:user.get_profile()}));
x[np.logical_and(...b)];
self.func(...args,__kwargtrans__(kwargs));
dict(__kwargtrans__({id:self.identity,data:self.data}));
my_svc.fit(x_training,y_trainc);
s[6];

export var loginid=line[1].strip();
var __left0__=np.mgrid.__getitem__([tuple([-5,5,complex(0,100)]),tuple([-5,5,complex(0,100)])]);var y=__left0__[0];var x=__left0__[1];
var df=pd.DataFrame(data);
var __left0__=my_list[0]+my_list[2];my_list[0]=__left0__;my_list[2]=__left0__;
triplets[iT].append(listB[0]);
export var ratingsum=sum(ratings);
var results=function(){var __accu0__=[];for(var i of range(0,len(data),n))__accu0__.append(data.__getslice__(i,i+n,1));return __accu0__}();
session.add(c1);
var user=models.ForeignKey(User);
worksheet.set_column(idx,idx,max_len);
sess.run(init);
var id=Column(Integer,__kwargtrans__({primary_key:true}));
f();
sys.exit(1);
var ax=fig.add_subplot(111);
wrapper(__kwargtrans__(mydict));
export var triang=tri.Triangulation(x,y);
itertools.zip_longest(...tuple([py_iter(itr)])*n,__kwargtrans__({fillvalue:fillvalue}));
t.hour*60*60+t.minute*60+t.second;
A[j]=__mod__(A[j]-factor*A[i],q);
var k=list(d.py_keys());
a[0][0];
var path=os.path.abspath(path);
concatenation.append(selection.py_pop());
var y=ax.get_yaxis().get_clip_box().y1;
export var b_o=tf.Variable(tf.random_normal([input_size],__kwargtrans__({stddev:.01})));
dir(x);
print(np.all(x2[find_map(x1,x2)]==x1));
pl.show();
endfor;
time.sleep(1);
log.Date=pd.to_datetime(log.Date);
random.uniform(.1,2.7);
queue.put(line);
sum(function(){var __accu0__=[];for(var [i,coeff]of enumerate(py_reversed(coeffs)))__accu0__.append(coeff/(i+1));return py_iter(__accu0__)}());
HttpResponseRedirect(post_url);
logging.basicConfig(__kwargtrans__({filename:LOG_FILENAME,level:logging.DEBUG}));
display.display(pl.gcf());
result.append(i);
var form=UserprofileForm();
export var rowPosition=self.table.rowCount();
self.root=logging.getLogger();
print(pkl);
export var surf=pg.transform.rotate(surf,-1);
slice_coords_by_x(arr,__kwargtrans__({xmin:2,xmax:4}));
var __left0__=img.size;var width=__left0__[0];var height=__left0__[1];
var char=ord(char);
var client=app.test_client();
var form=MyForm();
frame.Show(false);
bool(self.match);
output_file.write(l);
var seen=set();
py_next(self);
var w=np.sqrt(6*(a+c-np.sqrt(Math.pow(b,2)+Math.pow(a-c,2))));
a.py_sort();
df;
print(self.recv(8192));
Math.floor((d.day-1)/7)+1;
el2.extend([numpy.nan]*(len2-len(el2)));
m.groups();
self.command_table[command]();
np.exp(exp_A,__kwargtrans__({out:exp_A}));
str(x);
var __left0__=numpy.mgrid.__getitem__([tuple([0,200,1]),tuple([0,200,1])]);var xx=__left0__[0];var yy=__left0__[1];
var index=dict(zip(lis,list(range(len(lis)))));
var html=template.render(context);
SetValue(reg,pythonkey,REG_SZ,pythonpath);
min(alist,__kwargtrans__({key:function __lambda__(x){return abs(x-target)}}));
var output=popen.stdout.read();
sys.path.insert(0,pth);
down.append(up.py_pop());
add_to_the_class<AnotherClass&&AnotherClass>tuple([]);
HttpResponse(t.render(c));
var arr=np.arange(10);
NotImplementedError;
var lst=map(int,str(num));
tuple([[a],[b]]);
self.children.append(node);
var y=np.rollaxis(y,-1);
a+a;
print(f(2));
export var num_files=float(len(filenames));
unittest.TestCase.__init__(self,methodName);
var xs=np.linspace(0,2*np.pi,25);
export var second_array=array(FFnetlayer.__getslice__(1,null,2));
self._init_extra(...args,__kwargtrans__(kwargs));
export var thelist=list(genreDictionary.py_items());
cpp.MyClass*_obj;
list(group_660.py_values());
gb.count();
list1[i]=v;
map.plot();
(function(){var __accu0__=[];for(var sent of doc.sents)__accu0__.append(to_nltk_tree(sent.root).pretty_print());return __accu0__})();
self.ax.set_ylim(ymin,ymax);
listmix.TextEditMixin.__init__(self);
var output=proc.communicate()[0];
var lines=f.readlines();
var rolled=np.roll(y,1,__kwargtrans__({axis:1}));
gc.disable();
export var min_distance=distance(min_pair);
itertools.product(iterable,__kwargtrans__({repeat:2}));
x.columns=x.columns.droplevel(0);
str(bin(7));
Counter(function(){var __accu0__=[];for(var [k,g]of groupby(strs))__accu0__.append(k);return py_iter(__accu0__)}());
var conn=urllib.request.urlopen(url);
ActionChains(context.browser).send_keys(Keys.ENTER).perform();
var df=pd.DataFrame();
unittest.TextTestRunner(__kwargtrans__({failfast:true})).run(suite);
thread.join();
export var linesamples=set();
title_tag.string;
a.append(i);
var result=function(){var __accu0__=[];for(var C of with_distances)if(C[0]<limit)__accu0__.append(C);return __accu0__}();
export var my_obj_back=pickle.loads(base64.b64decode(serialized_str));
main();
Queue.py_get(self,false);
player_thread.start();
export var arr_list=arr.tolist();
print(s);
plt.show();
group.append(line);
response;
client.send(data);
find_green_times(sg_status);
var a=numpy.recarray(num_stars,__kwargtrans__({dtype:dtype}));
str(path);
print(x);
var DEBUG=true;
yag.send(__kwargtrans__({contents:message}));
var already_inserted=all(bitfield);
ftpobj.cwd(dirname.py_name);
tuple([p.i,p]);
timedelta(__kwargtrans__(dict(function(){var __accu0__=[];for(var [key,value]of list(d.py_items()))__accu0__.append(tuple([key,int(value)]));return py_iter(__accu0__)}())));
export var last_array=csc_matrix(tuple([py_values,tuple([row_ind,col_ind])]),__kwargtrans__({shape:tuple([211148,211148])}));
WeakList(list(self)*n);
binary_search([1,5,8,10],5);
var suite=unittest.TestSuite();
stream.close();
var mask=(df[0]==0).cumsum().cumsum();
f;
allocate(array(gridsize,gridsize,gridsize));
bynweekday+byweekday;
len(cls.__instance);
var p=Person();
nose.run();
df;
df2;
session.add(x);
export var mean_data=np.append(mean_data,[ur,ua,np.mean(data.__getitem__([samepoints,-1]))]);
dc.SetBrush(wx.Brush(wx.Color(0,0,0),wx.TRANSPARENT));
output.write(output_compressor.flush());
bokeh.io.output_notebook();
print(u,repr(u));
tuple([[0,0,0,0]]);
self._value;
export var decompressor=bz2.BZ2Decompressor();
commatoze(s,p+1);
list[0];
p.close();
var logger=logging.getLogger(record.py_name);
var G=nx.DiGraph();
theArray.tofile(f);
export var img2y=img2.shape[0];
exit(1);
self._close_all_temp_files();
str(self.__dict__);
export var y_c=np.atleast_2d(func(x_c));
stdscr.addstr(str(i),curses.color_pair(i));
s.__getslice__(start,end,1);
f2.Show();
var s=pd.Series(vals,__kwargtrans__({index:dates}));
canvas.saveState();
var root=tk.Tk();
self.myfunc(self);
var count=multiprocessing.cpu_count();
data.put();
var value=models.CharField(__kwargtrans__({max_length:200}));
print(a*b);
print(key.py_name);
export var pivot=inlist[0];
export var nav_json=json.dumps(nav_data);
var a=A();
export var MyObj1=MyModel.objects.all()[index1];
(function(){var __accu0__=[];for(var [age,person_id]of mylist)if(person_id==10)__accu0__.append(age);return __accu0__})();
self._coconut=coconut;
var src=gdal.Open(src_filename,gdalconst.GA_ReadOnly);
asyncio.set_event_loop(loop);
export var data_md5=hashlib.md5(json.dumps(data,__kwargtrans__({sort_keys:true}))).hexdigest();
os.close(fd);
frame.groupby(idx).sum();
self.py_name=py_name;
text_link.string=text;
self.step();
df2;
var n=len(seq);
export var q_out=multiprocessing.Queue();
new_tasks.append(result.args[0]);
print(tuple([cookies,content]));
print(my_data);
bar();
var clean=function(){var __accu0__=[];for(var _f of lis)if(_f)__accu0__.append(_f);return __accu0__}();
arr.__setslice__(len_,null,null,np.nan);
turtle.end_fill();
var conn=psycopg2.connect(db_conn_str);
cherrypy.quickstart(Band());
var p=Process(__kwargtrans__({target:myfunc,args:tuple([child_conn,command])}));
var df1=df[mask];
export var F2=np.array(list(range(N)))/float(N);
print(parser.config.read(parser.files));
var main_dir=os.path.dirname(sys.executable);
subplots_adjust(__kwargtrans__({top:.8}));
var root=tk.Tk();
print(__name__);
var d=collections.defaultdict(list);
y.boom();
sizer.Add(log,1,wx.ALL|wx.EXPAND,5);
print(filetime_to_dt(ft_dec));
var n=len(s);
plt.xticks(ind+width/2,OX);
print(A[0]);
var fd=os.open(filename,os.O_RDONLY|os.O_NONBLOCK);
export var player=Vector2(player.rect.x,player.rect.y);
my_socket.bind(tuple([bind_address,lowest_port]));
print(corn+1);
wrapper;
print(n);
var __left0__=line.py_split();var key=__left0__[0];var score=__left0__[1];
print(list(pairs(xs,ys)));
export var omega=np.exp(-2*pi*complex(0,1)/N);
export var example=Example();
export var desired_value=py_next(value_iterator);
self.builder=Gtk.Builder();
var already_inserted=all(function(){var __accu0__=[];for(var i of indexes)__accu0__.append(bitfield[i]);return py_iter(__accu0__)}());
len(my_str)!=len(set(my_str));
curl.setopt(pycurl.HEADERFUNCTION,hdr.write);
data.__setitem__([tuple([0,null,1]),0],np.random.randint(0,200,4E5));
hoist(e,subexpr(e),c);
var app=QtGui.QApplication(sys.argv);
print(driver);
var row=row.copy();
export var crud=Crud(db);
export var test_ordered_dict=OrderedDict();
y.append(y_center);
f(n);
var id=Column(Integer,__kwargtrans__({primary_key:true}));
print(A.shape);
print(alist[k],statement.py_split(k).__getslice__(1,null,1));
var lol=df.py_values.tolist();
var html=lxml.html.parse(url);
export var masked=np.where(flag>0,X.T.__getitem__([,np.newaxis]),0);
print(submission);
bpy.utils.register_class(customToolshelfPanel);
var fig=plt.gcf();
ax[1].legend();
chosen_templates.append(template_name);
f_output.write(data.translate(reverse_table));
plt.show();
startButton.pack();
restaurant_dish.restaurant_id=restaurant.id;
sys.exit(0);
var file_contents=re.sub(regex,subst,file_contents);
sys.exit(app.exec_());
print(weights.get_shape().as_list());
sheet.cell(__kwargtrans__({row:r+2,column:c+2})).value=data_table[r][c];
gmpy.is_square(Math.pow(x,7)+1);
adic[i]=adic.py_get(i,0)+1;
GLX.glXSwapBuffers(d,w);
other();
var f=interpolate.interp1d(theoryX,theoryY);
export var part_number=models.CharField(__kwargtrans__({max_length:10}));
var session=requests.session();
pari.pari_init(4E6,2);
sel.start();
unsearched.join();
print(repo.py_name);
smtp.ehlo();
var py_name=models.CharField(py_name,__kwargtrans__({unique:true}));
data_entry.file.save(filename,fid);
a+b+c;
tuple([a,b]);
print(sess.run(c));
var c=boto.connect_dynamodb();
plt.plot(x,f(x));
var item=QtGui.QStandardItem(str(index));
var bools=[true,true,false,true,true,false,true];
export var axis=axis/math.sqrt(np.dot(axis,axis));
var filename=askopenfilename();
(function(){var __accu0__=[];for(var [x,y]of zip(result,self._nmin))__accu0__.append(x+y);return __accu0__})();
var df_test=pd.concat([df]*100);
len(self.datatable.columns);
df.groupby(idx2).sum();
var reader=csv.reader(file);
export var version=models.CharField(__kwargtrans__({max_length:10}));
self.nametowidget(widget.string);
print(arr.dtype);
Base.metadata.create_all(e);
idict.py_setdefault(sub_type,dict({}))[sub_name]=sub_dict;
self.instance.project_set.py_clear();
q_out.put(tuple([i,f(x)]));
export var cw=csv.writer(si);
func1();
self.data.__getslice__(start,stop,1).mean();
export var luns=r.group(1).py_split();
pool.apply_async(Simulation,tuple([i]),__kwargtrans__({callback:handle_output}));
b;
df.shape;
gtk.Window.__init__(self);
nx.draw_networkx_nodes(Gcc,pos,__kwargtrans__({node_size:20}));
true;
list1.extend(value);
var DEBUG=false;
print(py_typeof(df));
close_window(iren);
var logger=logging.getLogger();
print(depth,traceback.print_stack());
forward(size_length);
new set([new set([loop.index])]);
py_typeof(data);
G.add_edge(i,j);
p.close();
export var proxy_handler=urllib.request.ProxyHandler(dict({}));
new set([new set([uform.as_p])]);
export var stime=time.mktime(time.strptime(start,format));
var d=datetime.date.today();
export var tasks=function(){var __accu0__=[];for(var url of urls)__accu0__.append(gevent.spawn(download_file,url));return __accu0__}();
f.tell();
self.yearLength.py_get(planetName);
reducedQs;
export var http_packet=str(packet);
halt_thread.start();
send_from_directory(__kwargtrans__({directory:uploads,filename:filename}));
self.callback(data);
z.__setitem__([0,0],0);
export var time_updated=Column(DateTime(__kwargtrans__({timezone:true})),__kwargtrans__({onupdate:func.now()}));
update_x([tuple([1])],tuple([2]));
(function(){var __accu0__=[];for(var [x,y]of zip(lis,new_lis))__accu0__.append(id(x)==id(y));return __accu0__})();
ax.hist(np.log(np.arange(1,10,.1)),__kwargtrans__({facecolor:color}));
nn.activate([1,0]);
export var rev_bytes=bytes.__getslice__(0,null,-1);
print(df);
var nnz=np.prod(partitions.shape);
monkey.patch_all();
var cmap=cm.jet;
t.start();
time.sleep(.1);
self.__class__=GEOS_CLASSES[self.geom_typeid];
show(p);
var value=getdict(value);
datetime.datetime.now().strftime(fmt).format(__kwargtrans__({fname:fname}));
var b=function(){var __accu0__=[];for(var _=0;_<N-1;_++)__accu0__.append([]);return __accu0__}();
self.assertEqual(self2.x,SOME_CONSTANT);
print(k);
export var EVV1=np.dot(GinvVV,tmp.T);
self.untoggle_mpl_tools();
var x=np.outer(np.cos(lons),np.cos(lats)).T;
a.hello();
print(minidom.parseString(ElementTree.tostring(tree1)).toprettyxml());
amounts.append(int(multiplier)*float(amount));
Path("./P2JSnippets.py").parent;
var func=classmethod(func);
export var is_valid=false;
export var keyPub=RSA.construct(tuple([seq[0],seq[1]]));
var r=np.kron(np.arange(ni*nj).reshape(tuple([ni,nj])),np.ones(tuple([xi,xj])));
time.sleep(rest_time);
true;
var a=np.zeros(5);
var v=np.array([0,0,1,1,1,0,0,0]);
bottle.run(app);
self.projectiles.add(p);
var myList=[random.randint(0,1),random.randint(0,1),random.randint(0,1)];
np.asarray(ans);
wx.EVT_TIMER(self,self.timer.GetId(),self.OnExorcize);
cls(newName,s);
imgdata.seek(0);
np.array(result).__getslice__(0,null,-1);
self.response.out.write(jinja.render(template_path,new_context));
var r=parse_timestamp(v);
stack.py_pop(0);
dict([[l[0],l[1]]]);
print(num);
doctest.testmod();
new_dic[1]=dict({});
dict(ChainMap(...py_reversed(ds)));
self.NameToInfo[zinfo.filename]=zinfo;
[0,1,0,0];
var proc=mp.Process(__kwargtrans__({target:handle_output,args:tuple([output])}));
var mylist=function(){var __accu0__=[];for(var x of mylist)__accu0__.append(x!=x?0:x);return __accu0__}();
dc.SetFont(f);
all(np.diff(x)==1);
app.SetTopWindow(frame);
np.random.seed(0);
var frame=rotateImage(frame,180);
plt.imshow(z);
out.seek(0);
map(func,range(0,L));
var result=p.communicate()[0];
int.__add__(self,other);
get_factorizations_of_all_numbers(1,n,2);
export var intl=np.ravel(np.column_stack(tuple([a,b])));
list(range(0,args[0],1));
var __left0__=X;var x=__left0__[0];var y=__left0__[1];
attrvalue.py_name=attrname;
list(it.islice(it.dropwhile(function __lambda__(x){return x!=4},it.cycle(l)),10));
literal_eval(obj.__getslice__(1,-1,1));
var a=np.array(mymatrix);
print(response.headers);
int(s.__getslice__(8,16,1));
export var random_id=random.choice(list(self.processes.py_keys()));
np.random.seed(987467);
ax.contourf(DATA.__getitem__([tuple([0,null,1]),tuple([0,null,1]),i]));
df.loc.__getslice__(max_loc,max_loc+N-1,1);
result?result.append(g[0][-1]):result.append(g[0]);
print(string1==string2);
export var leftpanel=wx.Panel(self,-1,__kwargtrans__({size:tuple([200,150])}));
var __left0__=s.accept();var conn=__left0__[0];var addr=__left0__[1];
test(100,50,5);
var value=value+1;
dict([[k,makedict(v)]]);
fig.add_subplot(212);
sparse.coo_matrix(tuple([sparse_mult(A.T,B,coords),zip(...coords)])).tocsc();
print(descend_list);
config.readfp(StringIO.StringIO(test_ini));
cumprobs.append(cumprob);
var results=model.fit(train_X,train_Y);
export var cross_test=np.sign(z.__getslice__(0,-1,1)*z.__getslice__(1,null,1));

file_handler.setFormatter(formatter);
df;
stdout.flush();
df[i]=df[i-100].apply(function __lambda__(x){return x*i});
export var numpyMatrix=df.as_matrix();
var names=array_type();
f.root.data.append(x);
find_closest(A,target);
var ax=fig.add_subplot(111);
a[a==0]+=epsilon;
server1.handle_request();
example.test_generic_uint8(numpy.int8(42));
plt.xlim(xmin,xmax);
self.queue.enqueue(line.strip());
var root=tk.Tk();
var object=MyStatefulModel.objects.py_get(__kwargtrans__({id:object_id}));
export var subfields=subrec._fields;
execlist[index][1]=myctype;
[];
PyQt4.QtCore.QPoint(1468,50);
sunburst(sequences);
getattr(self.func,attr_name);
arrow.now().isoformat();
has_index_in_slice(indices,a,b);
var b=a.__getslice__(0,-1,1)+tuple([a[-1]*2]);
var n=len(a);
print(str(proc.communicate()));
print(format_to_re(layout));
logger.addHandler(fh);
self.last_headers=result.headers;
9.465419146697968;
11.504781467840075;
11.625461496878415;
9.265848568174988;
deletelist[i];
print(x);
var pool=ThreadPool(5);
print(help(xyz));
py_typeof(a).__module__==np.__name__;
print(foo());
test(100,5,11);
np.random.seed(1);
hash(round(6.84,1));
var button=Button(frame,__kwargtrans__({text:b.title(),command:self.callback}));
py_items[1];
print(result);
urllib.request.install_opener(opener);
time.sleep(.01);
df;
var c=function(){var __accu0__=[];for(var sublist of a)__accu0__.append(list(set(sublist).intersection(set(b))));return __accu0__}();
p.wait();
tree[parent].append(msg);
DISPATCH();
export var thedict=dict(function(){var __accu0__=[];for(var [k,v]of kvs_restored)__accu0__.append(tuple([k.strip(),converter(v)]));return py_iter(__accu0__)}());
self.result.append(chr(codepoint));
response;
print(c.shape);
var u=np.linspace(0,2*np.pi,100);
var b=numpy.array(function(){var __accu0__=[];for(var x of a)__accu0__.append(x);return __accu0__}(),__kwargtrans__({dtype:numpy.character}));
print(x[max(with_idx)[1]]);
export var J0=ephem.julian_date(0);
export var linspace_x=np.linspace(min(x_range),max(x_range),100);
print(py_new);
setattr(cls,n,wrapit(cls,method));
sys.tracebacklimit=0;
s.login(login,password);
func2d(arr1d.reshape(tuple([n,m])));
my_list;

self.finish_progress();
simplejson.dumps(list(people));
print(line);
export var datachunk=data.file.read(1024);
show();
list(X());
export var clens=np.cumsum(function(){var __accu0__=[];for(var item of contribs)__accu0__.append(len(item));return __accu0__}());

var data=f.read(4096);
var dest=os.path.join(dest,filename);
var data=r.content;
q.py_get();
Py_XDECREF(g_stdout);
df-=df.min();
(function(){var __accu0__=[];for(var i=0;i<10;i++)__accu0__.append([i,randint(0,4)+input]);return dict(__accu0__)})();
var client=OSC.OSCClient();
p.wait();
d.append(block);
print(html);
var a=np.arange(25).reshape(5,5);
hex(buffer.rd(0));
ax1.set_xlim(-5,5);
plt.show();
plt.subplot(152);
sys.stdout.buffer.write(line);
var app=QtGui.QApplication(sys.argv);
z[i]=paste0(x[i],y[i]);
x/=copy(x[2]);
export var A_r=A.ravel();
var start=time.time();
var sentences=sentence_splitter.tokenize(text);
ax.yaxis.tick_right();
py_typeof(my_decoded_str);
self._pcapw.writepkt(self._ethernet);
tuple([width,height]);
basecost+=tax.calculate(basecost,othertaxes.__getslice__(0,i,1));
pymc.close();
fout.close();
export var thedir=os.path.dirname(thedir);
a[1]=2;
print(f.read());
request_headers[header]=request.META[header];
random.shuffle(a,function __lambda__(){return r});
var font=ImageFont.truetype(fontname,textsize);
var arr=np.arange(100*100*100).reshape(100,100,100);
var start_time=datetime.datetime.utcnow();
ax.yaxis.set_visible(false);
export var ff_array=numpy.array(ff_list);

value;
arrow2.remove();
f(args[0]);
p.kill();
print(df.reset_index(__kwargtrans__({drop:true})));
result[-1].append(word);
e.selection_get();
wrpcap(pname,pkts);
numpy.bincount(x[keep],__kwargtrans__({weights:w[keep]}));
df;
data.rename(__kwargtrans__({columns:str.lower}));
canvas.showPage();
self.tab.addTab(widget,widget.windowTitle());
export var y5=x.astype(np.float64);
var result=function(){var __accu0__=[];for(var _=0;_<size;_++)__accu0__.append([0]*size);return __accu0__}();

dt+datetime.timedelta(0,rounding-seconds,-dt.microsecond);
var base=ndpointer(...args,__kwargtrans__(kwargs));
sys.modules[tuple([]).__class__.__bases__[0].__module__].open;
set(l1)|set(l2);
true;
total+=sum(map(int,row));
var im=Image.open(filepath);
map.add_child(feature_group);
var c=conn.cursor();
thisTable.open(__kwargtrans__({mode:dbf.READ_ONLY}));
i+=1;
plt.clf();
self.lines.set_ydata(ydata);
var remaining=np.cumsum(colors.__getslice__(0,null,-1)).__getslice__(0,null,-1);
notify_another_process();
new set([new set([comment|safe])]);
tk.Tk.__init__(self);
export var tf_softmax=tf.nn.softmax(tf.matmul(tf_in,tf_weight)+tf_bias);
self.initialize();
var files=list(filter(os.path.isfile,os.listdir(search_dir)));
export var new_power=function(){var __accu0__=[];for(var [k,v]of groupby(zip1,__kwargtrans__({key:itemgetter(0)})))__accu0__.append(sum(function(){var __accu1__=[];for(var x of v)__accu1__.append(x[1]);return py_iter(__accu1__)}()));return __accu0__}();
tuple([tlist[max(0,i-1)],tlist[i]]);
run(__kwargtrans__({quiet:true}));
plt.subplot(224);
var http=credentials.authorize(http);
output.close();
var n=s.num_constructors();
sorted(sample,__kwargtrans__({key:function __lambda__(i){return abs(i-pivot)}})).__getslice__(0,k,1);
-1;
var last=paw;
var a=[];
var py_items=list(d.py_items());
var inlines=[LinkedItemAdmin];
subprocess.Popen([program]+params);
make_array_proxy(T&array);
self.setHandshakeOp(handshaker);
var client=paramiko.SSHClient();
var q=Queue();
var frame=inspect.currentframe();
another_obj.save();
f.seek(0,os.SEEK_END);
sys.exit(1);
h.py_update(block);
print(lines[0].shape);
var b=np.ones(tuple([2,4]));
self._stream.flush();
f.write(user_code);
find_nearest_above(np.array([0,1,1.4,2]),1.5);
export var decoded_json=json.loads(json_string);
sys.stdout=sys.__stdout__;
var response=HttpResponse();
var foo=Foo();
self.response.write(template.render(template_values));
py_values[~valid_mask]=np.min(py_values)-1;
print(foo.X);
Grid.columnconfigure(root,0,__kwargtrans__({weight:1}));
var __left0__=PLT.subplots();var fig=__left0__[0];var ax=__left0__[1];
Post(...args,__kwargtrans__(kw));
myfunc();
file.truncate();
f();
self.tstart=time.time();
export var x_fit=np.linspace(samples.min(),samples.max(),100);
var soup=BeautifulSoup(r.content);
var l=np.random.randint(0,10,__kwargtrans__({size:n}));
var data=sys.stdin.read(1);
export var word_list2=sorted(word_list,__kwargtrans__({key:function __lambda__(l){return l[0].lower()}}));
export var _stack=[];
FileApp(filepath);
print(shared_stuff.a);
np.transpose(np.nonzero(x));
var instance=MyClass();
pipeA.send(20);
export var top10=np.argsort(clf.coef_[i]).__getslice__(-10,null,1);
export var parent1=argparse.ArgumentParser(__kwargtrans__({add_help:false}));
print(json.dumps(output,__kwargtrans__({indent:4})));
sys.exit(0);
print(np.max(np.abs(slow_result-fast_result)));
var labels=labels.__getslice__(0,null,2);
hanoi(pegs,0,1,4);
var command=function __lambda__(){return mod.add_to_queue(self.ea1_ent.py_get)};
output_file.write(d[syllable]);
export var ax0a=fig.add_axes([.1,.1,.8,.25]);
setattr(p,s,new_value);
var app=wx.PySimpleApp();
self.external_method(arg1,arg2);
response;
msg.attach(part2);
new_a.test();
server.serve_forever();
var file_path=os.path.dirname("./P2JSnippets.py");
self._stop.isSet();
var __left0__=curve_fit(fit,x,y);var popt=__left0__[0];var pcov=__left0__[1];
signal.signal(SIGCHLD,SIG_DFL);
sys.stdout.write(line);
var fig=plt.figure();
var data=data.transpose();
print(child.tag,child.text);
export var byte=f.read(1);
df2.head().T;
mask.__setitem__([tuple([0,null,1]),~np.in1d(np.arange(mask.shape[1]),A)],0);
export var frames=[];
var a=np.random.rand(6,5,4);
var serializer=UserSerializer;
print(img.shape,img.dtype);
export var Arr2=Arr2.reshape(tuple([100,1,5]));
Math.pow(dx*dx+dy*dy,.5);
main();
export var mydate=datetime.datetime.now();
hi();
export var ctx=cairo.Context(img);
var result=-temp.__getslice__(0,4,1);
var results=defaultdict(set);
var extent=im[0].get_extent();
var char=sys.stdin.read(1);
var __left0__=map(list,zip(...origlist));var list1=__left0__[0];var list2=__left0__[1];
background.paste(foreground,tuple([0,0]),foreground);
os.setuid(0);
var N=1E6;
it.starmap(func,it.repeat(args,times));
stream.feed(data);
4/100;
tuple([10007,10008,10007,10008,10008,10008,np.nan,10010,10010,10010]);
print(random.choice(a));
print(lucky(500));
total+=nested_sum(i);
var frame=cv.RetrieveFrame(capture);
np.round(ccn.todense(),2);
var l=function(){var __accu0__=[];for(var group of list_of_groups)__accu0__.append(group.__getslice__(0,null,1));return __accu0__}();
var key=Column(Integer,__kwargtrans__({primary_key:true}));
print(poly.intersects(p));
var l=[1,5,8];
f();
f.write(jpgtxt);
pylab.plot(f,Xdb);
true;
var a=np.random.randn(S,S,N);
sys.stdout=StringIO.StringIO();
df.truncate(__kwargtrans__({before:d1,after:d2}));
self.dictList.__len__();
var mod=sys.modules.py_get(py_name);
var temp_list=[];
export var zurich_datetime=zurich_tz.normalize(local_datetime.astimezone(zurich_tz));
var b=[4,5,6];
export var dft_of_x=W.dot(x).dot(W);
var b=a.copy();
var p=a.__getslice__(100,null,1).ctypes.data_as(ctypes.POINTER(ctypes.c_double));
NULL;
var db=SQLAlchemy();
(function(){var __accu0__=[];for(var i=0;i<1;i++)__accu0__.append(x);return __accu0__})();
export var fileData=f.read();
var block=np.array(block);
numpy.linalg.det(numpy.dstack([a,b,c]));
print(datetime(2008,12,2));
all_found.append(founds);
var a=a.astype(float);
list(filter(set(b).__contains__,a));
result[0];
var result=tree.xpath(path);
export var ydiff=tuple([line1[0][1]-line1[1][1],line2[0][1]-line2[1][1]]);
mat.__setitem__([list(range(n)),list(range(n))],0);
export var lkp=pd.Series(memberships).apply(set);
var indata=numpy.ones(tuple([5,6]));
var y=np.exp(-x*x);
list(self.__iterPerson(__kwargtrans__(kwargs)));
var w=QtGui.QWidget();
p.join();
var app=QApplication(sys.argv);
np.mean(arr,__kwargtrans__({axis:0}));
var r=tf.mod(x,1);
browser.select_form(__kwargtrans__({nr:2}));
module.workflow_set.filter(__kwargtrans__({trigger_roles:self.role,allowed:true}));
count+=1;
export var scope=locals();
export var rot=Quaternion(tuple([1,0,0]),pi);
self.index+=1;
consumer_lock_object.lock();
heapq.heappush(r,tuple([-x*y,x,y]));
var e=Tkinter.Entry(w);
print(repr(f));
export var masterSet=set().union(...iterable);
ax2.yaxis.tick_right();
self._lines=[];
data.domorestuff();
print(sample2.count(true));
var fig=plt.figure();
s.close();
pprint.pprint(z);
var zfile=zipfile.ZipFile(zipsrc);
self.canvas.SetBackgroundColour(wx.Colour(0,0,0));
var screen=pygame.display.set_mode(tuple([250,250]));
var A=numpy.array();
b[0][0]=1;
var tree=et.ElementTree(root);
app.MainLoop();
window.set_border_width(5);
np.concatenate(function(){var __accu0__=[];for(var x=0;x<a.itemsize;x++)__accu0__.append(element_offset+x);return __accu0__}());
var response=urllib.request.urlopen(url);
t.start();
store_last_lineprocessed(last_line);
export var pThread=Thread(__kwargtrans__({target:p.run(),args:tuple([])}));
decdeg2dms(dd);
var x=__import__(module);
new_file.write(data);
var n=len(my_list[0]);
np.sum(seq,__kwargtrans__({axis:0}));
var z=np.empty(tuple([100,1,4]),__kwargtrans__({dtype:float}));
mount(prefix,app,__kwargtrans__(options))[source];
var dt=datetime.datetime.now();
print(result);
load_json_file(filename);
proc.wait();
var lg=np.log(pdf);
var cbar=plt.colorbar();
var p=math.exp(-delta/T);
m.end();
NotImplemented;
py_next(iterator);
print(repr(__bar));

orig_py_compile(file,__kwargtrans__({cfile:cfile,dfile:dfile,doraise:true}));
count[0];
r.mainloop();
sess.run(train);
print(r.groups());
var A=NP.random.rand(8,5);
var ax1=fig.add_subplot(121);
false;
var lock=multiprocessing.Lock();
var cols=function(){var __accu0__=[];for(var c of table.columns)__accu0__.append(c.copy());return __accu0__}();
var res=np.zeros_like(a[0]);
df.sortlevel(0).index.lexsort_depth;
print(tuple([s,found,tail]));
var id=Column(Integer,__kwargtrans__({primary_key:true}));
widget.queue_draw();
var rows=cur.fetchall();
var bucket=conn.get_bucket(BUCKET);
var contents=f.read();
var r=requests.py_get(settings.STATICMAP_URL.format(__kwargtrans__(data)),__kwargtrans__({stream:true}));
var files=function(){var __accu0__=[];for(var py_name of tar.getnames())__accu0__.append(py_name);return __accu0__}();
bp.show(fig);
var d=datetime.datetime.utcnow();
time.sleep(.1);
ax.barh(ind,data,__kwargtrans__({color:color,left:left}));
pl.show();
uuid.uuid4().int&(1<<64)-1;
var my_dict=dict(function(){var __accu0__=[];for(var k of py_keys)__accu0__.append(tuple([k,[]]));return py_iter(__accu0__)}());
array([4,9,7,9,2]);
export var modfile=os.path.abspath(mod.__file__);
donecounter+=1;
export var mypolygon=function(){var __accu0__=[];for(var _=0;_<10;_++)__accu0__.append(tuple([randint(0,100),randint(0,100)]));return __accu0__}();
var c=conn.cursor();
var parser=argparse.ArgumentParser();
json.dump(hugeData,f);
set(function(){var __accu0__=[];for(var x of aset)__accu0__.append(x+1);return py_iter(__accu0__)}());
s.__getslice__(ind1+1,ind2,1);
ax.yaxis.tick_right();
var key=rev[value];
var root=tk.Tk();
var EMAIL_USE_TLS=false;
numpy.nextafter(0,1);
remove.add(index);
daemon_cartman.setDaemon(true);
e.foo();
self.widget.see(tk.END);
self.setUpClass();
pd.Timestamp.max;
__in__(k,self.__dict__);
var result=set();
list_of_lists[0][0]=7;
var n=len(lst);
var result=sum(x,[]);
export var kern=np.ones(tuple([kern_size,kern_size]),np.uint8);
solve(equations,[a,t,vi,vf,d]);
export var y_pos=np.where(y>0)[0];
d.py_update(dict([[k,v]]));
G.add_edges_from(node_edges);
export var ends=np.where(d==-1)[0];
var rows=cursor.fetchall();

export var pidx=np.indices(tuple([df_1.shape[1],df_2.shape[1]])).reshape(2,-1);
frame.pack();
browser.set_handle_refresh(false);
print(repr(m));

var client=oauth2.Client(consumer,token);
print(a);
var df1=s1.reset_index();
a*Math.pow(x,n)+b*x-c;
export var the_type=py_typeof(ast.literal_eval(stringy_value));
var xp=np.linspace(-1,6,100);
self.treeWidget.addAction(self.treeAction);
isdefarg(5,7);
print(item);
export var LIVEHOST=true;
var c=a.__getslice__(0,null,1)+b.__getitem__([tuple([0,null,1]),np.newaxis]);
export var rating=models.IntegerField(__kwargtrans__({py_default:0}));
app.MainLoop();
dt+datetime.timedelta(0,rounding-seconds,-dt.microsecond);
a();
var cur=function(){var __accu0__=[];for(var [j,k]of tuple([rows[14],list(range(15))]))__accu0__.append([14,k,j]);return __accu0__}();
print(tds[0].string,tds[1].string);
f.close();
print(getitems(bleah));
stream._add_io_state(state);
(function(){var __accu0__=[];for(var p of proc)__accu0__.append(p.start());return __accu0__})();
export var square=sys.argv[1];
export var HAVE_CURSES=true;
log.removeHandler(ch);
rename_code_object(wrapper,f.__name__);
print(tuple([k,v]));
self.searchobj=searchobj;
var filenames=function(){var __accu0__=[];for(var n of filenames)if(!fnmatch(n,ignore))__accu0__.append(n);return __accu0__}();
dst.SetGeoTransform(match_geotrans);
requests.head(url,__kwargtrans__({allow_redirects:true})).url;
var __left0__=tuple([y,x]);var x=__left0__[0];var y=__left0__[1];
print(a[i]);
reactor.iterate();
var __except0__=StopIteration();__except0__.__cause__=null;throw __except0__;
export var recs=m.recommend();
Testing(1/1);
print(meds);
asyncore.dispatcher.__init__(self);
var __left0__=os.path.splitdrive(test);var drive=__left0__[0];var path=__left0__[1];
f.seek(0);
var A=np.arange(n*m*k,0,-1).reshape(tuple([n,m,k]));
var __left0__=tuple([L[b],L[a]]);L[a]=__left0__[0];L[b]=__left0__[1];
str(document);
output.getvalue();
f.write(data);
post_syncdb.connect(add_view_permissions);
plt.colorbar(m);
var fig=plt.figure();
var matrix=function(){var __accu0__=[];for(var i=0;i<nrows;i++)__accu0__.append([0]*ncols);return __accu0__}();
grid.fig.set_figheight(4);
var d=dict({});
model_to_dict(instance);
c.flags.owndata;
self.__class__.PARAM;
count2[i]+=1;
var t=df2.unstack(__kwargtrans__({level:0}));
[0,1,1,0];
var root=tree.getroot();
var right=A[idx];
MyImplementation.do_stuff(self.lookup_string(request.something));
os.umask(0);
new set([new set([render_class(subclass)])]);
lookup(dic.py_get(key,dict({})),...py_keys);
self.origstream.write(self.escape_char);
export var vec=xa1.__getslice__(1,-1,1);
img.write(data);
max(left,right,left_half+right_half);
logging.getLogger().addHandler(ch);
l[t]=something;
column2.append(column.py_split(data_separator)[1]);
self.i=value_of_self_i_before_itervalues(X)+__mod__(len(X),N);
ax.set_xticklabels(xticklabels,__kwargtrans__({minor:false}));
(function(){var __accu0__=[];for(var row of reader)__accu0__.append(row);return __accu0__})();
var documents=map(itemgetter(0),documents);
var df=pd.DataFrame(dict(__kwargtrans__({col:a})));
print(my_min([0,2,-1]));
print(l?sum(function(){var __accu0__=[];for(var _ of py_next(groupby(l))[1])__accu0__.append(1);return py_iter(__accu0__)}()):0);
var A=np.zeros(tuple([x.size,ndim+1]),__kwargtrans__({dtype:float}));
model_tunning.fit(iris.data,iris.target);
regressionmodel(X,Y,Z);
var list1=[1,1,1,1,1];
OrderedDict(zip(self._fields,self));
0;
browser.open(post_url,data);
export var asign=np.sign(a);
axis([0,1500,1E3,0]);
var py_name=db.Column(db.String());
print(grouplist(l,4,2));
answer.append(elem);
self.ClickedLB2.resize(400,20);
var opener=urllib.request.build_opener(auth_handler);

var mod=__import__(os.path.splitext(i)[0]);
tuple([deletemxd,df,newlayer]);
dbb.autocommit(true);
pprint(result);
np.empty(arr1.shape,result_type(arr1,arr2));
export var percent_list=function(){var __accu0__=[];for(var i=0;i<5;i++)__accu0__.append(percent.py_get(str(i),0));return __accu0__}();
var df=pd.DataFrame(np.random.randint(0,2,tuple([2,8])));
pygame.init();
false;
var now=time.time();
file1.write(toFile);
q.create_queue(1);
self.errors.py_update(form.errors);
strcpy(save_path,SYSTEM_FILE_PATH);
var d=feedparser.parse(feed);
var alltests=unittest.TestSuite();
a.shape;
a.extend(function(){var __accu0__=[];for(var _=0;_<10;_++)__accu0__.append(random.random());return __accu0__}());
var y=np.array(function(){var __accu0__=[];for(var i of x)__accu0__.append(Math.pow(i,2)+random.random());return __accu0__}());
psutil.network_io_counters(__kwargtrans__({pernic:true}));
my_logger.addHandler(handler);
session.add(w_2);
var start_date=end_date-datetime.timedelta(__kwargtrans__({days:8}));
var fig=plt.figure();
var xs=np.exp(-Math.pow((ts-.4)/.1,2))+2*np.exp(-Math.pow((ts-.8)/.1,2));
decorator(fn);
var fig=plt.figure();
var t=tuple(d.py_items());
locals();
b.capitalize();
var df=pd.DataFrame(data1);
export var type_of_fave=models.CharField(__kwargtrans__({max_length:1,choices:FAVE_CHOICES}));
print(fibonacci(10));
sys.stderr.write(s);
var k=quaternion(0,0,0,1);
var parser=argparse.ArgumentParser();
var max_value=df[feature_name].max();
OffsetTime(offset).localize(datetime.strptime(value,format));
df[col]=df[col].ffill();
export var active=User.select().where(User.active==true);
self.a+self.b;
var b=list(a);
list(range(x1,x2+1));
var r=int(numeric(s));
var G=nx.Graph();
var synchIntervall=datetime.hour(10);
var arr=numpy.row_stack(tuple([arr,row]));
var x=np.random.random(num);
var c=Kls();
int(err.py_split()[-2]);
ax.boxplot(data,__kwargtrans__({notch:1,positions:pos,vert:1}));
var fig=plt.figure();
1;
var st=os.stat(filepath);

var order=function(){var __accu0__=[];for(var [i,item]of enumerate(presorted_list))__accu0__.append([item,i]);return dict(__accu0__)}();
var q=multiprocessing.Queue();
ax.set_ylim(yl[0]-(yl[1]-yl[0])*pad,yl[1]);
do_some_database_stuff();
var __left0__=result.size;var width=__left0__[0];var height=__left0__[1];
f.close();
print(inspect.getmembers(mymodule,__kwargtrans__({predicate:is_subclass})));
var zi=z.__getitem__([x.astype(np.int),y.astype(np.int)]);
print(queue.py_get());
r.withdraw();
apsched.add_interval_job(checkFirstAPI,__kwargtrans__({seconds:5}));
apsched.add_interval_job(checkSecondAPI,__kwargtrans__({seconds:5}));
theFile.close();
export var yy2=func(tplFinal2,xx2);
session.add(TS1(datetime(2001,1,2,2),1));
var size=fig.get_size_inches()*fig.dpi;
var w=copy.deepcopy(x);
QtGui.QTableWidget.__init__(self,...args);
random.shuffle(randomized_list);
var b=list(function(){var __accu0__=[];for(var [[i,_],[j,_]]of itertools.combinations(enumerate(a),2))__accu0__.append(tuple([i,j]));return py_iter(__accu0__)}());
manager.connect();
extra_files.append(filename);
random.shuffle(x,function __lambda__(){return r});
var twitter=Twython();
var mail=email.message_from_string(email_body);
sys.exit(main(sys.argv.__getslice__(1,null,1)));
ax.set_position([box.x0,box.y0,box.width*.8,box.height]);
soup4.html.__next__;
stext.pack(__kwargtrans__({fill:BOTH,side:LEFT,expand:true}));
h.py_split().count(n);
g.sum();
var data=f.readlines();
var engine=sa.create_engine(DSN,__kwargtrans__({convert_unicode:true}));
var res=np.array_equiv(A,B);
tuple([matches[0].fromy,matches[0].fromx]);
z();
print(key,value);
var server=socket.socket(socket.AF_INET,socket.SOCK_STREAM);
var height=db.IntegerProperty();
var b=np.swapaxes(a,2,0);
var arr=np.roll(np.roll(arr,__kwargtrans__({shift:-x+1,axis:0})),__kwargtrans__({shift:-y+1,axis:1}));
var py_name=db.Column(db.String(100));
var S=n(n+1)/2;
sound.play();
export var word_gen=function(){var __accu0__=[];for(var word of words)__accu0__.append(tuple([word,word.__getslice__(0,null,2),word.__getslice__(1,null,2)]));return py_iter(__accu0__)}();
py_split.append(tuple([[],[]]));
print(traceback.format_exc());
df[col]=numpy.roll(df[col],1);
bin(1<<7);
tuple([stdout,stderr]);
self._value=v;
trimmed.py_pop();
uno.systemPathToFileUrl(os.path.realpath(path));
var w=csv.writer(sys.stdout);
np.fill_diagonal(corr_table.py_values,np.nan);
allobjc;
var data=np.random.random(__kwargtrans__({size:tuple([50,50,50])}));
self._mqpush(request);
var __left0__=rect.get_bbox().get_points();var x0=__left0__[0][0];var y0=__left0__[0][1];var x1=__left0__[1][0];var y1=__left0__[1][1];
var fig=plt.figure();
var results=c_char_p*4(addressof(create_string_buffer(7)));
var x=np.where(x<0,0,x*10);
match.group(0);
gen();
np.mgrid.__getitem__([tuple([0,4,1]),tuple([0,5,1])]).transpose(1,2,0);
var j=np.arange(2,-1,-1);
cache.__setitem__([s1,s2],1+lcs(s1.__getslice__(0,-1,1),s2.__getslice__(0,-1,1)));

stream.close();
deletea;
self.current.append(token.strip());
Pdb;
os.linesep.join(helplines);

setattr(args,self.dest,py_values);
var environment=jinja2.Environment(whatever);
o.one();
var __left0__=np.rollaxis(arr,__kwargtrans__({axis:-1}));var r=__left0__[0];var g=__left0__[1];var b=__left0__[2];var a=__left0__[3];
var points=np.concatenate([points.__getslice__(0,-1,1),points.__getslice__(1,null,1)],__kwargtrans__({axis:1}));
var Z=np.sin(X)*np.sin(Y);
id(df2._data);
c.write(sys.stdout);
var tree=ElementTree.fromstring(response.content);
self.assertListEqual(expected_urls,css_urls);
B.shape;
var user=models.OneToOneField(User);
inspect.getmembers(OptionParser,__kwargtrans__({predicate:inspect.ismethod}));
(function(){var __accu0__=[];for(var b of range(end,start,stride))__accu0__.append(A[b]);return __accu0__})();
model_instance.image_field.save(uniquename,ContentFile(upload.read()));
setattr(destination,key,value);
bounding_boxes.append(tuple([x,y,w,h]));
export var num_eq=np.equal(a,b,out).sum();
plt.show();
var li=line.strip();
[0,1,0,1];
isinstance(yourNumber,numbers.Real);
data.append(listofgroups);
ax.set_aspect(5);
self.order=datetime.now();
Ainv[j]=__mod__(Ainv[j]-factor*Ainv[i],q);
self.func(obj);
gtk.widget_set_default_colormap(colormap);
x.__setslice__(0,null,null,np.where(norms!=0,x/norms,0));
wx.ListCtrl.__init__(self,parent,ID,pos,size,style);
var out=np.take(x,lin_idx);
var err=np.abs(a-b)/b*100;
kks[0]=1;
np.triu(A.T,1)+A;
main();
var opener=urllib.request.build_opener(proxy_handler);
json.dumps(data);
zip(a,b);
p.terminate();
self.L.append(k);
server.login(SERVER_EMAIL,EMAIL_HOST_PASSWORD);
export var fitness=np.linalg.det(individual.reshape(self.N,self.N));
var res=np.py_split(idx_sort,idx_start.__getslice__(1,null,1));
axes.set_yticklabels(labels);

pool.close();
OC.check_output(self,want,got,optionflags);
bool(dict({}));
set_item(9);
var workbook=Workbook();
var __left0__=tuple([1,2]);var a=__left0__[0];var b=__left0__[1];
var x=np.random.random(10);
var ds=datetime.date.today();
f(a);
line_split.append(annos.py_pop(0));
export var final_func=functools.partial(intermed_func,lst);

server.sendmail(fromMy,to,msg);
map(function __lambda__(x){return x>=4},a);
var data=np.ones(N,__kwargtrans__({dtype:int}));
time.strftime(format,time.localtime(ptime));
pool.join();
var d=np.abs(data-np.median(data));
print(F.__code__.co_consts);
pool.close();
var mycsv=csv.DictReader(f);
var z=np.empty(ind.shape,__kwargtrans__({dtype:x.dtype}));
print(repr(better_uc));
var headers=dict(req.headers);
po.close();
print(date);
os.fsync();
Unicode(500);
new_dict[v]=k;
var temp=numpy.copy(my_array.__getitem__([tuple([0,null,1]),0]));
var driver=webdriver.Firefox();
print(list[i]);
var window=Gtk.Window();
np.array([res]);
print(scores.mean());
doctest.run_docstring_examples(f,__all__);
var html=render_to_string(template_name,context);
export var htmldocstr=infile.read();
m.close();

self.property_names=list(names);
selection.set(selection.get_target(),0,iter_str);
plt.show();
x[1][0][0]=21;
print(dykSuperstring(deqs));
func(...func_args,__kwargtrans__(func_kwargs));
export var artist_count=len(artists);
logger.addHandler(fh);
var __left0__=zip(...points);var x=__left0__[0];var y=__left0__[1];
myfile.write(chunk);
var c=zip(...a)[0];
var chunk=f.read(4096);
burroughs_wheeler.test(1E3);
var data=json.loads(open(file).read());
print(x.foo);
var opener=urllib.request.build_opener(urllib.request.HTTPCookieProcessor(cj));
Thread(__kwargtrans__({target:reactor.run,args:tuple([false])})).start();
block.text=hilited;
set(df1.x).symmetric_difference(df2.y);
print(f(2));
self.pool=multiprocessing.Pool(__kwargtrans__({processes:processes}));
r_server.ping();
tex.insert(tk.END,s);
pos==len(b);
var b=(a*b).sqrt();
var test_dict=autoparts();
Py_Initialize();
print(np.allclose(q,t));

A.add_edges_from(G.edges());
df.sort_index(__kwargtrans__({inplace:true}));
event.setDropAction(QtCore.Qt.CopyAction);

x.append(temp);
logging.getLogger().addHandler(ch);
Py_DECREF(py_name);
var a=array(tuple([1,0,0,1,1,0,0]));
render_window.Finalize();
t.join();
tar.addfile(__kwargtrans__({tarinfo:info,fileobj:string}));
var p=Polynomial.fit(x,y,4);
var clf=sklearn.tree.DecisionTreeClassifier();
var text=doc.toPlainText();
cv2.floodFill(result,maskborder,seed_pt,tuple([255,0,0]));
lst[-1]+=old_d[key][i];
export var newimg=np.zeros(tuple([img.shape[0],img.shape[1]]));
var indices=list(g);
__mod__(x,1E3);
var __left0__=ax.get_legend_handles_labels();var handles=__left0__[0];var labels=__left0__[1];
FAQ;
print(__mod__(tavnit,row));
a/foo.py;
var path=sys.argv[1];
py_next(wood);
termios.tcsetattr(fd,termios.TCSAFLUSH,old);
gdal.UseExceptions();
var s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);
MenuItemComponent.objects.filter(__kwargtrans__({menuItem:menuitem}));
n>0?[chr(n&255)]+to_bytes(n>>8):[];
var __left0__=ax.axis();var x1=__left0__[0];var x2=__left0__[1];var y1=__left0__[2];var y2=__left0__[3];
HttpResponseRedirect(redirect_url);
jsonify(__kwargtrans__({data:cursor.fetchall()}));
print(arr.shape);
print_one();
var all_matches=function(){var __accu0__=[];for(var l of list1)__accu0__.append(matches(list2,v));return __accu0__}();
hex_data;
loop.run_forever();
export var test_date=date_list[0];
mail.list();
prof.print_stats();
var df1=df.loc[pd.MultiIndex.from_arrays(edge_subset2.T)];
var data=sockfilefile.readline();
var dfasamplefive=dfa.__getslice__(5,null,1);
node.val=some_val;
print(base_url);
print(matchResult.group(1));
HexDump();
print(inspect.stack());
self.valid_keys.remove(key);
export var email_message=email.message_from_string(raw_email_string);
print(args.f);
lowest_values.append(x);
CalculatorUI.__init__(self);
func2();
var metadata=MetaData(__kwargtrans__({bind:engine}));
sys.exit(1);
float(num);
export var file_words=function(){var __accu0__=[];for(var line of fileobj)for(var word of line.py_split())__accu0__.append(word);return py_iter(__accu0__)}();
os.path.dirname(path);
print(df.drop(idx));
var new_body_text=re.sub(pattern,make_create_footnote_numbers(),text);
cdvirtualenv;
new set([new set([message|safe])]);
var repo=Gittle.clone(repo_url,repo_path);
var text=f.read();
var __left0__=get_point(foo);var x=__left0__[0];var y=__left0__[1];
my_user.username;
new set([protocol,internal_ip,internal_port,foreign_ip,foreign_port]);
__all__[py_name];
var serializer_class=UserSerializer;
var ax=fig.add_axes(ax_size);
df;
var ax2=ax.twinx();
username_field.send_keys(self.user.username);

-W15;
data[i]=random.random();
var d=dict([[1,1],[2,2]]);
ser.setDTR(__kwargtrans__({level:0}));
os.chdir(workingdir);
__init__.py;
export var htmlString=response.read();
lookup[l].add(v);
func;
export var list_two=[4,5,6];
time.sleep(.1);
plt.pause(.5);
var c=canvas.Canvas(file,__kwargtrans__({pagesize:landscape(letter)}));
export var shifts=[tuple([-1,0]),tuple([0,-1]),tuple([0,1]),tuple([1,0])];
logger.setLevel(logging.DEBUG);
root_logger.setLevel(logging.DEBUG);
self.builder.connect_signals(self);
py_typeof(b);
var order=np.argsort(x);
var s=socket();
widget.configure(__kwargtrans__({foreground:color}));
ordered(a)==ordered(b);
xy[xy.__getitem__([tuple([0,null,1]),1])>0];
sorted(animals,__kwargtrans__({key:function __lambda__(animal){return animal[2]}}));
d[v].append(k);
var ranges=[tuple([1,5]),tuple([10,20]),tuple([40,50])];
var x=np.arange(16).reshape(tuple([4,4]));
csv_writers[k].writerow(row);
np.cross(a,b);
export var Iopen=bwareaopen(Iclear,120);
var now=datetime.utcnow();
globallock.acquire();
var server=SocketServer.TCPServer(tuple([HOST,PORT]),MyTCPHandler);
numbers.append(current);
print(list(gen));
[0,0,1];
G.edges(__kwargtrans__({data:true}));
var y=v.__getitem__([tuple([0,null,1]),1]);
print(foolib.__file__);
var b=function(){var __accu0__=[];for(var x of a)if(a.count(x)>1)__accu0__.append(x);return __accu0__}();
var m=re.match(regex,s);
paw_number+=2;
export var book1=Workbook();

weights.append(W-sum(weights));

print(np.argsort(-df.py_values,__kwargtrans__({axis:1})).__getitem__([tuple([0,null,1]),tuple([0,2,1])]));
(function(){var __accu0__=[];for(var n of getNeighbors(vertex))for(var x of getNeighbors(n))__accu0__.append(x);return __accu0__})();
export var connect_timeout=100;
export var new_pdf=PdfFileReader(packet);
ranges.__setslice__(i,i+2,null,[[ranges[i][0],ranges[i+1][1]]]);
var ax1=fig.add_subplot(211);
main();
4/100;
var xi=np.array([0,.5,1]);
ax.set_yticks(minorticks,__kwargtrans__({minor:true}));
self.timer.timeout.connect(self.updateClock);
export var id_list=id.readlines().__getslice__(1,null,1);
sorted(tuple([minval,value,maxval]))[1];
Tkinter._test();
self.fail(self._formatMessage(msg,standardMsg));
_f(...args);
var bar=forms.ModelChoiceField(__kwargtrans__({queryset:Bar.objects.none()}));
power(5,2);
wrapper;
print(data);

signal.alarm(0);
self.input_queue=mp.Queue();
export var gradients=1*(data>0);
tmp+=int(sline[1]);
im.set_transform(im_trans);
random_sample_output.writelines(random_sample_input);
Test.calc_a.__code__.co_names;
export var children=[];
sys.meta_path.append(MyImporter());
export var custom_cv=zip(train_indices,test_indices);
cur_list.append(dict([[py_keys[i],py_values[i][j]]]));
(x+y).subs(py_reversed(100*reps));
hfile.seek(pos,os.SEEK_SET);
var queryset=User.objects.all();
sys.stdout=capturer;
self.e=Entry(top);
var pic=QtGui.QLabel(window);
os.dup2(0,1);
export var numOccurences=len(pattern.findall(target));
var u=f.read();
var t=ssh.get_transport();
s.plot();
fig.set_figheight(96);
Gtk.init([]);
foo.map(function __lambda__(x_y){return tuple([x_y[0],[x_y[1]]])}).reduceByKey(function __lambda__(p,q){return p+q}).collect();
exit(1);
pd.Series(sm.OLS(y,x).fit().predict());
run_main();
out.__setitem__([i,j],__in__(lst[i],lst[j]));
image.save(pic,image.format,__kwargtrans__({quality:100}));
self.view.setModel(self.treeModel);
var queryset=Widget.objects.all();
var cursor=conn.cursor();
Py_Initialize();
var a=list(range(1,101));
var diam=np.zeros(len(seed));
A.__setitem__([0,1],A.__getitem__([0,1])*.5);
var __left0__=np.nonzero(accum);var x1=__left0__[0];var x2=__left0__[1];
chain.from_iterable(map(f,seq));
signal.alarm(10);
f.write(binary_representation);
var lines=[];
export var insummer=datetime.datetime(2009,8,15,10,0,0);
var res=py_split(cols,inverse_rows.__getslice__(1,null,1));
var left=random.randrange(0,x1);
answer+=str(i);
var data=json.loads(json.dumps(data));
export var isprintable=set(yourstring).issubset(printset);
var a=np.array([]);
novel.append(word);
tuple();
var fig=plt.figure(__kwargtrans__({figsize:tuple([8,6]),dpi:80}));
tuple([x,y]);
process.stdin.write(data);
print(py_next(reader));
DO_STUFF;
var loop=asyncio.get_event_loop();
var output=output.__getslice__(0,-1,1);
var output=function(){var __accu0__=[];for(var x of L)__accu0__.append(x);return __accu0__}();
Py_Initialize();
simplejson.dumps(finalObj);
(function(){var __accu0__=[];for(var k of py_keys)__accu0__.append([k,dct[k]]);return dict(__accu0__)})();
zipFile.close();
var scores=cross_val_score(clf,X,y,__kwargtrans__({cv:cv_custom}));
var app=QtGui.QApplication(sys.argv);
0;
os.unlink(db_fname);
var browser=webdriver.Firefox(__kwargtrans__({capabilities:firefox_capabilities}));
self.shutdown();
var im=Image.open(im_file);
var foo=Foo();
var ssh=paramiko.SSHClient();
var c=cs.send(c+1);
stringbuilder_test.py;
answer.append(d);
sorted(x);
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
network.add_layer(1);
myl[myl.index(item)]=44;
var df=pd.DataFrame(np.random.randn(4,4));
dict.__getitem__(self,key);
p1.conversations.filter(__kwargtrans__({participants__in:p2}));
bool(a)^bool(b);
var Z=VV/WW;
wait_for_element_visibility(welcome_button).click();
export var therest=[];
s.close();
var P=np.array(mean_data).__getitem__([tuple([0,null,1]),1]);
var df=pd.concat([df]*1E3).reset_index(__kwargtrans__({drop:true}));
dictlist.append(temp);
var p=subprocess.Popen(cmd,__kwargtrans__({stdout:subprocess.PIPE,stderr:subprocess.PIPE}));
self.f=f;

4015;
var im=np.zeros(tuple([imsize,imsize]),__kwargtrans__({dtype:float}));
df_a.div(df_b);
var Z=np.random.random(tuple([500,500]));
var rows=np.arange(y.size);
swap_rows(my_array,0,2);
uniquifier.uniquify(a_timestamp);
var cb=pyplot.colorbar(cs);
print(set(c)<=set(a));
export var latest_file=max(list_of_files,__kwargtrans__({key:os.path.getctime}));
plt.plot(lowess.__getitem__([tuple([0,null,1]),0]),lowess.__getitem__([tuple([0,null,1]),1]));
tuple(v);
main();
np.random.seed(1977);
self.fp.seek(position,0);
1+countit(target,key,where+1);
var color=image.getpixel(tuple([x,y]));
printTree(myTree);
export var objectA=get_object_from_db();
pyplot.bar(histo[1].__getslice__(0,-1,1),cumulative_histo_counts,__kwargtrans__({width:bin_size}));
MyObject();
export var A1=A.reshape(4,2,2).transpose(0,2,1);
export var aspectRatio=image.shape[1]/image.shape[0];
f===f();
export var entropy=np.array(entropy);
grequests.map(rs);
ax.set_ylim(-.6,.6);
Alias/media/opt/django/site2/media/statics;
print(text);
-1;
false;
var ax=plt.gca();
export var class_items=py_iter(self.__class__.__dict__.py_items());
print(letters_in_order_of_frequency(string));
unittest.TextTestRunner(__kwargtrans__({verbosity:2})).run(suite);
var s=requests.session();
var a=np.array([1,5,50,500]);
lst_intensities.append(img.__getitem__([pts[0],pts[1]]));
cmd.Cmd.__init__(self);
o.__dict__;
var s2=sum(function(){var __accu0__=[];for(var x of samples)__accu0__.append(x*x);return py_iter(__accu0__)}());
var results=list(foo());

self.user;
export var random_index=random.randrange(len(cells));
export var region_el=function(){var __accu0__=[];for(var item of remaining)__accu0__.append(item[0]);return __accu0__}();
scene.camera.location.z=tz;
var decoded_data=chan.decode(sample_data);
var method=possibles.py_get(method_name);
var fig=plt.figure();
timeit(hugeequal1,hugeequal2,1E3);
new set([new set([form.csrf_token])]);

ax1.set_yticklabels(data.index);
var data=open(filename);
var Base=declarative_base();
var InfoDF=pd.DataFrame();
love_ctx.add(tuple([bob,hates,charlie]));
print(bar());
var args=[py_iter(iterable)]*n;
d(a,b);
var data=function(){var __accu0__=[];for(var [x,y]of zip(df.columns,df.iloc[0]))__accu0__.append([x,y]);return dict(__accu0__)}();
var cardsdiscarded=0;
count+=1;
var data=reader.GetOutput();
var response=browser.open(request);
var a=np.random.randint(1,5,tuple([500,500]));
bool(match);
some_func(l,5);
ax.set_zlim([0,4]);
stck.append(crnt);
export var WHITE=tuple([255,255,255]);
var df=pd.DataFrame(s);
a/b;
print(Temperature.identifier);
a.py_get(1);
self.webview.setWebViewClient(self.wvc);
d.hexdigest();
var ax=fig.add_subplot(111);
len(data);

var df=df.append(h,__kwargtrans__({ignore_index:true}));
var photo=models.ImageField(__kwargtrans__({upload_to:photo_path,blank:true}));
var index=self.model.index(0,0,QtCore.QModelIndex());
bins.append(x0);
export var group_list=grouped.map(function __lambda__(x){return list(x[1])});
var myfile=open(os.path.join(MEDIA_ROOT,f.Audio.path)).read();
export var full=os.path.join(os.path.dirname(module.__file__),thing);
var parsed=urlparse.urlparse(url);
var b=np.array([5,6]);
x+1;
signal.alarm(0);
var b=np.dot(X.T,(mask*Y).T);
var df=pd.DataFrame(ls).set_index(0);
sizer.Add(self.log,1,wx.ALL|wx.EXPAND,5);
var cc=Country.objects.all();
var s=pickle.dumps(function __lambda__(x,y){return x+y});
newax.imshow(im);
266248;
sys.path.insert(0,pluginsDir);
diff(nges_uneval,n[5]).doit();
self._window=gtk.Window();
var m=pat.match(s);
listener.bind(tuple([HOST,PORT]));
var G=nx.DiGraph();
var freqs=np.fft.fftfreq(len(w));
request;
var py_items=re.findall(itemfinder,html);
Py_DECREF(key);
logging.root.addHandler(file_handler);
print(dp(n,left)[1]);
index+=1;
self.sock.connect(tuple([self.host,self.port]));
urllib.request.install_opener(opener);
X[np.abs(X)<.1]=0;
exit(1);
b.fly();
var address=ws.Cells(row,col).Hyperlinks.Item(1).Address;
data.__getitem__([tuple([0,null,1]),1]);
var args=sys.argv;
export var new_bar=updated(bar,extra);
var r=function(){var __accu0__=[];for(var i of r)__accu0__.append(i/s);return __accu0__}();
print(id(a));
df;
var result=max(py_iter(d.py_items()),__kwargtrans__({key:function __lambda__(x){return x[1]}}));
kthsmallest(A.__getslice__(0,i,1),B.__getslice__(j,null,1),k-j);
digs[0];
export var npa=np.asarray(a);
export var filtered_string=function(){var __accu0__=[];for(var x of myStr)if(__in__(x,string.printable))__accu0__.append(x);return __accu0__}();
c.setopt(c.URL,host_url);
var a=Addressbook();
print(allimports.sum(1,1));
df.id.apply(str);
export var current_vertex=graph[0][0];
__in__(true,(start<date&date<finish).unique());
export var jsonobj=json.loads(jsonstr);
export var log_handler2=logging.handlers.RotatingFileHandler(file_2,...args);
myFunction();
var ax=plt.axes(__kwargtrans__({projection:ccrs.PlateCarree()}));
exec(urllib.request.urlopen(x),__all__);
var fig=plt.figure();
categories.extend(animal.categories.all());
IT.chain.from_iterable(function(){var __accu0__=[];for(var r of rvals)__accu0__.append(IT.combinations(s,r));return py_iter(__accu0__)}());
export var v_box=QtGui.QVBoxLayout();
perm(prefix+[rest[i]],rest.__getslice__(0,i,1)+rest.__getslice__(i+1,null,1));

db.close();
plt.subplot(121);
it.chain.from_iterable(function(){var __accu0__=[];for(var i=1;i<5;i++)__accu0__.append(it.repeat(i,i));return py_iter(__accu0__)}());
export var box=ax.get_position();
var idx=np.argmin(np.abs(sw-sCut));
var z=np.ones(tuple([nr,nc]));
var args=parser.parse_args();
GL.glRectf(-.8,-.8,.8,.8);
var ticks=np.linspace(0,1,num_ticks);
var a=np.array([[5,4]]);
tuple([CE,BD,BE,BF,BC]);
var v=list(d.py_values());
f.set_axis_off();
self.root.destroy();
var parser=argparse.ArgumentParser();
fn(...args,__kwargtrans__(kwargs));
clf.estimators_;
partitions.append([e]);
var a=[Foo(),Foo(),Foo()];
var queue=collections.OrderedDict();
self.glade=gtk.Builder();
ax.bar(x,y,__kwargtrans__({log:1}));
len((a>10).tostring());
sum+=distance(randoms[offset][0],randoms[offset][1]);
session.execute(i);
self.x=x_;
var final_image=Image.fromarray(np.uint8(im.clip(0,255)));
pyqt5.vext;
MasterObject.__init__(a,b,c);
tuple([(Sxy*N-Sy*Sx)/det,(Sxx*Sy-Sx*Sxy)/det]);
f.write(content);
np.mean(counts);
var image=Image.open(buffer);
f.write(l);
var my_list=list(N.py_values());
var client=paramiko.SSHClient();
var res=function(){var __accu0__=[];for(var i=0;i<len(myLists);i++)__accu0__.append(-1);return __accu0__}();
var A=diag(arange(0,10,1));
subsymbtree;
print(item);
var N=np.logspace(2,5,4);
var w=csv.writer(f);
print(soup);
plt.plot(t,s,__kwargtrans__({c:seaborn.color_palette()[2]}));
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
print(query);
self.show();
var cur=con.cursor();
var local_dt=timezone.localize(dt);
var result=defaultdict(int);
var r=s.post(URL,__kwargtrans__({data:login_data}));
print(list(roundrobin(...groups)));
print(string);
var df=pd.DataFrame();
var doc=xee.fromstring(data);
export var logresults=log_stream.getvalue();
var sc=SparkContext(__kwargtrans__({conf:sconf}));
out.__setitem__([tuple([0,null,1]),0],np.repeat(arrays[0],m));
var data=dict(zip(labels,function(){var __accu0__=[];for(var x of starf)__accu0__.append(int(x));return __accu0__}()));
p.start();
print(lst2[0]);
my_engine.commit();
t1.stop();
var weekly=numpy.sum(by_week,__kwargtrans__({axis:1}));
memory_file.seek(0);
f[i]=0;
var p=np.array([[1.5,0],[1.4,1.5],[1.6,0],[1.7,1.8]]);
result.append(str.__getslice__(last_end,null,1));
self.gravity=982;
parser.print_help();
check(my_list.__getslice__(0,start,1),__kwargtrans__({tracking:tracking}));
var idx=np.where(m.any(1),idx0,np.nan);
var b=np.zeros(a.shape,__kwargtrans__({dtype:a.dtype}));
export var hi_result=hi();
_sum(iterable,start);
days.index(inp);
var df2=pd.concat([df,df1],__kwargtrans__({axis:1})).sort_index(__kwargtrans__({axis:1}));
var data=f.read(block_size);
var results=dict({});
AppHelper.runEventLoop();
Process.__init__(self);
grid();
var foo=Foo();
django.db.transaction.leave_transaction_management();
py_typeof(self)==py_typeof(other)&&self.value==other.value;
yaxis.set_minor_locator(MinorSymLogLocator(.1));
var fig=plt.figure();
var data=np.random.random(numdense);
var __left0__=tuple([map(itemgetter(0),my_list),map(itemgetter(1),my_list)]);var lis1=__left0__[0];var lis2=__left0__[1];
Base.metadata.create_all(engine,__kwargtrans__({tables:[DeclarativeTestModel.__table__]}));
Bar()<Foo();
var Z=np.arange(2E3).reshape(20,100);
print(str(obj.node));
var group=groupby([1,2,2,2,2,1,1,1,2,2,1,1]);
np.log(gev.pdf(data,...fit0)).sum();
PyQt4.QtCore.QPoint(1509,549);
process_f();
export var dtype2=np.dtype(function(){var __accu0__=[];for(var py_name of fields)__accu0__.append([py_name,arr.dtype.fields[py_name]]);return dict(__accu0__)}());
help(re);
sleep(1);
sIO.__init__(self,...args,__kwargtrans__(kwargs));
b.sum(__kwargtrans__({axis:1}));
clock.tick(20);
v_box.addWidget(self.box_two);
object.__eq__(self,other);
var digits=len(foo.py_split(dec_pt)[-1]);
ax.add_patch(patch2b);
var attr=getattr(self.obj,py_name);
a1.yaxis.tick_left();
B_process.stdin.close();
self.iterator=py_iter(generator);
response;
plt.show();
var py_name=models.CharField();
time.sleep(1);
conn.send(data);
[nan]==[nan];
image.load();
do_something_here(...args,__kwargtrans__(kwargs));
var fig=plt.figure();
var fp=np.polyder(f);
export var bdm=boto.ec2.blockdevicemapping.BlockDeviceMapping();
F[np.triu_indices(n,1)]=0;
self.root=Tkinter.Tk();
var transport=TTransport.TBufferedTransport(socket);
var X=np.random.rand(100);
compile(expr,filename,mode,PyCF_ONLY_AST);
append();
form.instance.created_by=self.request.user;
[l];
lattice[i]=mksite(pair[0],pair[1]);
[];
var Base=sqlalchemy.ext.declarative.declarative_base();
print(df_means.head());
obj2.decrypt(ciphertext);
export var ModelID=Column(Integer,__kwargtrans__({primary_key:true,autoincrement:true}));
self.changeLayout(QtCore.Qt.Horizontal);
var tagger=nltk.UnigramTagger(nltk.corpus.brown.tagged_sents());
var ax=fig.add_subplot(111);
print(result[0]);
py_values.append([a,a+200]);
export var y_neg=np.where(y<0)[0];
e.sum(__kwargtrans__({axis:0})).shape==tuple([2,2]);
g();
var br=mechanize.Browser();
var b=B();
var a=[1,2];
launchVim();
existing(self,...args,__kwargtrans__(kw));
var rnd=2*np.random.rand(n);
var root=elem.getroot();
zip(...function(){var __accu0__=[];for(var elem of inputs)__accu0__.append(islice(cycle(elem),max_length));return py_iter(__accu0__)}());
print(a);
numpy.lib.stride_tricks.as_strided(stacked,shape,strides);
new_url;
export var v1fColor=NP.array(lst,__kwargtrans__({dtype:NP.uint8}));
var fig=plt.figure();
print(tuple([i,j,k]));
print(hex(id(w)));
var arr=np.array(im);
tuple([os.path.relpath(datastore.__file__,here)]);
var B=[2,6,5,4,2];
[0,0,0,0];
print(a);
a().method();
var py_items=map(dicttolatex,items_to_clean);
csv_in.close();
cv.WarpPerspective(cv.fromarray(im),out_2,cv.fromarray(h));
print(b);
t.__setslice__(0,null,null,np.arange(4).reshape(2,2));
abs(gTob(a)-gTob(b))==1;
var fig=plt.figure();
list(gexpr);
var full=np.random.randint(1,99,__kwargtrans__({size:tuple([8,8])}));
d.groan();
print(x);
obj.get_object();
arcpy.RefreshActiveView();
var x=np.random.standard_normal(n);
print(item);
var fig=plt.figure();
var rows=np.array([0,1]).reshape(-1,1);
my_task.delay();
var c=function(){var __accu0__=[];for(var _f of function(){var __accu1__=[];for(var sublist of a)__accu1__.append(list(set(sublist).intersection(set(b))));return __accu1__}())if(_f)__accu0__.append(_f);return __accu0__}();
var b=a.__getslice__(0,null,1);
f.close();
var c=ctypes.cast(pBuf,ctypes.POINTER(ctypes.c_char));
export var my_code=get_my_code(ParentA);
list(deque(fin,n));
[1,1,2];
gc.collect();
var node=character.ENodeId(int(node+1));
var client=paramiko.client.SSHClient();
new_a*b;
parser.print_help();
var app=Flask(__name__);
hax2.set_axis_off();
export var readx=select.select([proc.stdout.fileno()],[],[])[0];
pickle.dump(obj,file,__kwargtrans__({protocol:4}));
print(line.strip().upper());
var x=0;
self.pkwargs=pkwargs;
var N=A.shape[0];
foo(1,2);
re.findall(notes+accidentals+chords+additions,line);
self.memo[id(obj)]+=1;
sub_df;
stream.stop_stream();
(b-a).days;
ax.xaxis.set_minor_locator(plt.FixedLocator([50,500,2E3]));
var new_a=np.empty(a.shape);
var sizer=wx.BoxSizer(wx.VERTICAL);
msg.attach(attachment);
setattr(cls,k,v);
export var short_desc=forms.CharField(__kwargtrans__({widget:forms.Textarea}));
avgs.append(total/count);
print(line);
sys.setrecursionlimit(Math.pow(10,6));
export var knnres=KNN(lowdimtrain,trainY,lowdimtest,k);
visited.add(self);
export var fff=os.path.join(working_folder,f);
stop_event.wait(random.randint(0,5));
action.visit(this);
print(testfunc(1));
export var iris=datasets.load_iris();
arr[i][j]=numpy_arr[i][j];
var a=np.array([true,true,false]);
logging.Handler.__init__(self);
plt.xticks(__kwargtrans__({rotation:90}));
sympy.nextprime(50);
slice(k>6?n:k);
zip(a,b);
s.py_sort(__kwargtrans__({reverse:true}));
sys.stdout.encoding;
setattr(self.obj,self.method,self.orig_method);
ax.set_yticklabels(yticklabels,__kwargtrans__({minor:false}));
res.py_sort();
var img=Image.open(sys.argv[1]);
some_exit_code;
false;
self+[fillvalue]*(n-len(self));
os.path.exists(sys.stdin.py_name);
tuple(flatten(args));
mock(...args,__kwargtrans__(kwargs));
new_arr.shape;
cpy.seek(0);
datetime.utcfromtimestamp(dt64.astype(int)*ns);
os.setpgrp();
df;
var data=self._fp.read();
var a=np.zeros(tuple([N,N]),a.dtype);
b.append(i?i:b[-1]);
var data=json.load(f);
logging.getLogger().setLevel(getattr(logging,FLAGS.logging_level));
ax.set_xticks(ind+width);
self.refresh();
var parser=etree.XMLParser(__kwargtrans__({remove_blank_text:true}));
export var imgBoth=np.dstack(tuple([a,b]));
var filename=os.path.basename(url);
var writer=csv.writer(output_file);
var df=DataFrame(resoverall.fetchall());
var root=tk.Tk();
export var bestfit=bettermodel;
list(function(){var __accu0__=[];for(var t of list(d1.py_items()))if(t[1]==m)__accu0__.append(t);return __accu0__}())[0][0];
export var test_suite=unittest.TestSuite(suites);
df;
threading.Thread.__init__(self);
export var unq_first=np.concatenate(tuple([[true],a_sorted.__getslice__(1,null,1)!=a_sorted.__getslice__(0,-1,1)]));
loop.close();
export var upp=np.array([.1,-.2]);
export var mf=mmap.mmap(f.fileno(),0);
sock.sendall(msg);
var title=title_search.group(1);
gf.seek(-4,2);
print(tuple([k,g]));
self.testbed.deactivate();
var process=Popen(command,__kwargtrans__({stdout:PIPE,stderr:PIPE,bufsize:1}));
print(t.getvalue());
conn.shutdown(2);
export var zip=zipfile.ZipFile(zipinmemory);
print(dollars);
output.addPage(page);
axes[0].imshow(z);
sh.setLevel(logging.DEBUG);
locale.atof(num);
EAGAIN||EWOULDBLOCK;
app.run(__kwargtrans__({port:9001}));
le.inverse_transform([0,0,1,2]);
export var x_a=np.linspace(-8,0,60);
sum(switch_path)<sum(stay_on_path)?switch_path:stay_on_path;
export var hugeData=json.load(f);
var retval=ser.readline();
mydb.commit();

print(response1.text);
sqrt(2,precision(100));
print(s.unpack_from(y));
args.command(subparsers.choices[sys.argv[1]],args);
a.__setslice__(0,null,null,da.__getslice__(0,null,1));
subcats.extend(dirnames);
self._ssh=paramiko.SSHClient();
var tree=ET.fromstring(content,__kwargtrans__({parser:ET.HTMLParser()}));
var value=getattr(self,key);
self._s=socket.socket(socket.AF_INET,socket.SOCK_DGRAM);
s.head(10);
ax.set_yticks([]);
o.a;
export var ptext=h[0].text_content();
desk.picture.set(mactypes.File(f.py_name));
var __left0__=p.communicate();var output=__left0__[0];export var errors=__left0__[1];
var lines=proc.stdout;

export var orig_dev=os.stat(path).st_dev;
var label=gtk.Label();
self.master.after(1E3,self.change_label);
var x=np.linspace(-5,5,100);
op.pow(a,b);
getattr(self,py_name);
var options=parser.parse_args();
arrayList.append(wM);
utils.formatdate(nowtimestamp);
sum(it.imap(doSomething,originalList),[]);
var data=[tuple([1,2]),tuple([40,2]),tuple([9,80])];
var Base=declarative_base();
a.registerCallback(listener2);
var post_data=urllib.parse.urlencode(post_data);
self.beep.emit(i);
print(function(){var __accu0__=[];for(var elem of a_list)__accu0__.append(__mod__(elem,2)==0?elem*2:elem);return __accu0__}());
var pool=Pool(__kwargtrans__({processes:8}));
export var dict_data=json.loads(venues);
print(b.shape);
ax.grid(false);
time.sleep(1);
kill(proc.pid);
mt.roundrobin(...[py_iter(list1)]*(n-1)+[list2]);
py_next(self.it);
method(__kwargtrans__(keywords));
export var frame_size=cv.GetSize(frame);
table.create();
1;
var out=np.count_nonzero(m.__getslice__(1,null,1)>m.__getslice__(0,-1,1))+m[0];
w.resize(600,400);
export var handled=pygame.mouse.get_pressed()[0];
new_list.py_pop();
var chunk=fp.read(BUFSIZE);
to_search[NAME];
TEST_RUNNER.run(TEST_SUITE);
sorted(function(){var __accu0__=[];for(var x of res)if(x<limit)__accu0__.append(x);return __accu0__}());
export var relative_path=os.path.relpath(local_path,local_directory);
var t=threading.Thread(__kwargtrans__({target:f}));
water_held+=(pos-stack[-1].pos)*well_height;
d.cards.remove(card);
[0,0,1,1];
help(distutils.version);
out.close();
bpy.utils.unregister_class(customToolshelfPanel);

tuple([id(s.index),id(s.py_values)]);
plt.title(slope);
dict({});
pprint(ddiff,__kwargtrans__({indent:2}));

export var correlations_array=np.asarray(df.corr());
other_f(other_f(s.__getslice__(1,null,1)))+s[0];
time.sleep(4);
var data=collections.defaultdict(list);
list(self.data.py_keys());
var word=s.__getslice__(0,end+1,1);
var __except0__=urllib.error.URLError(err);__except0__.__cause__=null;throw __except0__;
self._choices=[];
var df2=df.copy();
print(tuple([c.id,c.title,__in__(c,u.channels)]));
export var shift=max(function(){var __accu0__=[];for(var t of legend.get_texts())__accu0__.append(t.get_window_extent().width);return __accu0__}());
print(df.groupby(Math.floor(df.A/2)).A.apply(pd.Series.sample,__kwargtrans__({n:1})));
HiPRIOpoller.register(socket_0_pull,zmq.POLLIN);
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
var bins=[0,.1,.9,1];
handler[cookie[0]]=cookie[1];
[2]+function(){var __accu0__=[];for(var i=1;i<Math.floor(n/2);i++)if(sieve[i])__accu0__.append(2*i+1);return __accu0__}();
new set([1])&new set([1]);
urllib.request.install_opener(opener);
bool(-1);
some.development.host;
print(d[str]);
point_buffer.__getitem__([tuple([0,null,1]),0])*.5;
(function(){var __accu0__=[];for(var egg of eggs)if(egg!=0)__accu0__.append(1/egg);return __accu0__})();
export var log_handler1=logging.handlers.RotatingFileHandler(file_1,...args);
self.src[-1].insert(0,itemtoshift);
tuple([.6625,sym2,8,5,10,10]);
f(d,py_name);
(function(){var __accu0__=[];for(var t of zip(a,b,c))__accu0__.append(any(t));return __accu0__})();
main();
[0,1,0];
var __left0__=tuple([list[0],list.__getslice__(1,null,1)]);var first=__left0__[0];var rest=__left0__[1];
print(sys.argv[0]);
result.append(a_class);
var x=np.array(x);
export var non_empty=function(){var __accu0__=[];for(var line of lines)if(line.strip())__accu0__.append(line.rstrip());return __accu0__}();
stack.append(s);
var p=psutil.Process(somepid);
var rolled=np.roll(y,1,__kwargtrans__({axis:0}));
sys.exit(1);
self.connection.channel(self.on_channel_open);
var response=requests.py_get(my_url);
export var vis=cv2.cvtColor(vis,cv2.COLOR_GRAY2BGR);
fig.autofmt_xdate();
self.web_view=QWebView();
print(in1d(b,a).all());
var __left0__=tuple([len(out)-1,-1,-1]);var start=__left0__[0];var end=__left0__[1];var step=__left0__[2];
mime_msg.get_payload();
print(sys.argv);
var __left0__=tuple([x,y]);self.x=__left0__[0];self.y=__left0__[1];
do_something_else_2();
max(chain(l_one,l_two));
list(x);
var res=A.__getitem__([tuple([0,null,1]),B]).__getitem__([B,tuple([0,null,1])]);
export var _widget=QtGui.QWidget();
b.decode();
var a=np.arange(10);
self.pushButtonSimulate.clicked.connect(self.on_pushButtonSimulate_clicked);

var s=set(fus_d.py_keys());
var data=dict({});
b.build_purelib;
results.append(common);
is_equal(df,using_precomputation,using_index);
print(df);
fig.patch.set_alpha(.7);
(min(r1.end,r2.end)-max(r1.start,r2.start)).days+1;
do_something(line);
os.startfile(command[input][4]);
tuple(function(){var __accu0__=[];for(var d of deques)__accu0__.append(gen(d));return py_iter(__accu0__)}());
export var classname=self.__class__.__name__;
tornado.ioloop.IOLoop.current().start();
a+-1/L*math.log(1-u*(1-math.exp(-L*b)/math.exp(-L*a)));
decorator;
var df=DataFrame(np.random.randint(0,10,__kwargtrans__({size:100})).reshape(10,10));
var Y=X.__getitem__([tuple([0,null,1]),j]).reshape(tuple([N,1]));
new set([new set([analysis.simple_info])]);
var a=b+a;
export var reverse_fks=my_model._meta.get_all_related_objects();
var __except0__=MyCustonException(attr);__except0__.__cause__=null;throw __except0__;
var __left0__=np.mgrid.__getitem__([tuple([0,149,complex(0,150)]),tuple([0,149,complex(0,150)])]);export var grid_x=__left0__[0];export var grid_y=__left0__[1];
self.current+=1;
locals();
var line=p.stdout.readline();
list(dep.triples());
var __left0__=data.GetPoint(i);x[i]=__left0__[0];y[i]=__left0__[1];z[i]=__left0__[2];
QtCore.QThread.start(self);
self.arg1=arg1;
print(line);
pylab.ylim([len(names)-.5,-.5]);
isinstance(f,types.FunctionType);
export var res1=np.zeros(tuple([ni,nk]));
x.__getitem__([tuple([0,null,1]),tuple([1,2,1])])*y.__getitem__([tuple([0,null,1]),tuple([1,2,1])]);
export var middle=[end_pts[1],end_pts[2]];
l[i]=bar;
Year.add(row[0]);
self.write(File.read());
zip(...lines.__getslice__(1,null,1));
log_capture_string.close();
print(child.read());
outfile.close();
var k=np.tile(k,tuple([1E3,1]));
distutils.log.set_verbosity(distutils.log.DEBUG);
var g=g.map_diag(sns.kdeplot);
index.__setslice__(1,null,null,groups.__getslice__(1,null,1)!=groups.__getslice__(0,-1,1));
var app=web.application(urls,__all__);
var number=py_next(iterator);
(function __lambda__(){return callable(arg)?arg():arg});
[0,0]/0;
var end=lst.index(item,start+1);
var out=a[np.py_sort(sortidx[valid_ind])];
export var last_updated=DateTimeField(__kwargtrans__({required:true,py_default:datetime.now()}));
test(py_name);
_assertSquareness(a);
self.dataChanged.emit(index,index);
max(py_iter(c.py_items()),__kwargtrans__({key:itemgetter(1)}));
var C=np.cumsum(lens);
var i=i+1;
var node=row[0];
var mask=np.cumsum(np.isnan(arr),__kwargtrans__({axis:1})).astype(bool);
[5,6,0,1,2];
cycles.append(list(c));
self.setAcceptDrops(true);
var r=random.randint(0,10);
(function(){var __accu0__=[];for(var n of tuple([degrees,minutes,remainder*60]))__accu0__.append(Fraction(n));return __accu0__})();
FancyArrowPatch.__init__(self,tuple([0,0]),tuple([0,0]),...args,__kwargtrans__(kwargs));
var h=logging.StreamHandler();
var column_widths=[];
[0,0,0,1];
requirements.txt;
setheading(180);
result.append(-1);
model.py_update(__kwargtrans__(kwargs));
var authorization=DjangoAuthorization();
var df=pd.DataFrame(sample);
time.sleep(1E-4);
joined.fillna(-1,__kwargtrans__({inplace:true}));
print(tokens.asDict());
var page=urllib.request.urlopen(urls).read();
map(function __lambda__(e){return urlparse.urljoin(base,e)},es);
var dir=os.path.basename(filepath);
var x=my_list.py_pop();
var b=np.logical_not(a);
self._value=value;
dodgy.append(i);
logging.Handler.__init__(self);
export var old_keys=function(){var __accu0__=[];for(var x of old_vals)__accu0__.append(tuple([x[0],x[1]]));return __accu0__}();
self.data.config(__kwargtrans__({yscrollcommand:self.scrollbar.set}));
browser.set_cookiejar(cookies);
self.timer.start();
i+=1;
self.lom=[];
self.is_active;
(function __lambda__(x){return x});
crsr.close();

(function(){var __accu0__=[];for(var num of list1)__accu0__.append(reduce_num(num));return __accu0__})();
[blas];
bson_obj.decode();
var __left0__=tuple([min(nums),max(nums)]);export var min_num=__left0__[0];export var max_num=__left0__[1];
urllib.request.install_opener(opener);
var S=P_i.sum(__kwargtrans__({axis:1}));
__mod__(WSGIApplicationGroup,new set([GLOBAL]));
f.read(bom_len);
li[-1];
myArray[i]=[i,i+1,i+2];
var temp=models.IntegerField();
b2.grid(__kwargtrans__({row:1,column:4}));
print(sorted(z,__kwargtrans__({key:function __lambda__(x){return x[1]}})).__getslice__(-2,null,1));
widget.setGeometry(200,200,100,50);
r.push(bests[best[1]]);
var t=QtGui.QTableView();
groups.append(tuple([test_size,train_size]));
var cap=cv2.VideoCapture(0);
var __left0__=np.meshgrid(x,y);var X=__left0__[0];var Y=__left0__[1];
var n=mat.shape[0];
self.memo[str];

mismatches.append(seqloc);
final_list.append(tuple_item);
c.__setitem__([i,j],b);
pos+=1;
f.__name__;
QItemDelegate.__init__(self,parentView);
m.span();
var root=Tkinter.Tk();
var a=numpy.array(l);
var line=py_next(i);
import_array();
var app=Flask(__name__);
thefile.flush();
print(cmp(list_1,list_1));
var self=Foo();
0;
np.array(tuple(it.islice(it.cycle(arr),length)));
var flags=fcntl.fcntl(fd,fcntl.F_GETFD);
elem.append(match);
the_table.set_zorder(10);
context.set_source_rgb(0,0,0);
self.py_metatype.get_object_for_this_type(__kwargtrans__({id:self.id}));
export var indent=len(line)-len(line.lstrip());
self.id;
self.callback();
p.text();
f.vals[0]=10;
var draw=ImageDraw.Draw(img);
result+=function(){var __accu0__=[];for(var p of perms(s.__getslice__(0,i,1)+s.__getslice__(i+1,null,1)))__accu0__.append(v+p);return __accu0__}();
profile.print_stats();
sys.stdin=dummyStream();
var a=function(){var __accu0__=[];for(var i of tuple([1,2]))__accu0__.append(function __lambda__(x){return x*i});return __accu0__}();
var py_name=event.GetEventObject().myname;
self.b=b;
var a=np.ma.zeros(tuple([500,500]));
export var minm=np.array([],__kwargtrans__({dtype:int}));
q.put(item);
cls.x=1;
pprint(output);
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
count[0]+=1;
export var current=array.__getitem__([tuple([0,null,1]),i]);
var z=pickle.loads(s);
self.method(key);
var im=Image.fromarray(cm.jet(s,__kwargtrans__({bytes:true})));
np.abs(a-val)<tol;
print(n);
forms.remove(tuple([form,question]));
object.__new__(cls,...args,__kwargtrans__(kargs));
str(self.list);
fh.write(str([data]));
export var ix_j=np.tile(np.arange(x.shape[1]),tuple([x.shape[0],1]));
var levels=np.linspace(-1,1,40);
export var hourly_data=df.py_values.__getitem__([tuple([0,null,1]),tuple([0,null,1])]);
x[0]=Decimal(1);
handle.close();
var indices=rows.nonzero()[0];
getchar();
tuple([MyException,tuple([self.arg1,self.arg2])]);
export var count_arr=np.concatenate(tuple([a.__getitem__([tuple([0,null,1]),1]),b.__getitem__([tuple([0,null,1]),1])]));
self.cursor=self.connection.cursor();
a.test();
var __except0__=web.nomethod(cls);__except0__.__cause__=null;throw __except0__;
var t=np.mean(t,__kwargtrans__({axis:2}));
var X=u.dot(np.diag(s));
list.__delitem__(self,key);
result;
hash-r;
tuple([py_name,path,args,kwargs]);
var email=Column(String);
var myqserver=Qserver();
print(a);
Foo.__init__(self);
result.py_update(dict([[j,[i]]]));
__init__.py;
print(cube(-8));
category[key].append(i);
getLogger().addHandler(StreamHandler(__kwargtrans__({stream:logfile})));
os.mkdir(dir);

s==json.loads(t);
content.append(info);
plt.plot([1,2]);
A[idx[0]];
var host=hosts[host_id];
var __left0__=plt.subplots(2,1,__kwargtrans__({figsize:tuple([12,6])}));var f=__left0__[0];var ax=__left0__[1];
df1.div(df1.sum(1),__kwargtrans__({axis:0}));
var lst=literal_eval(string);
dict.__setitem__(self,val,key);
t.stop();
(function(){var __accu0__=[];for(var i=0;i<5;i++)__accu0__.append(i);return __accu0__})();
dates.append(date);
time.sleep(10);
self.assertEqual(expect,result);
tuple([BananServer,GulServer,SolServer,RymdServer,SkeppServer]);
df;
var im=cv2.imdecode(np.asarray(bytearray(im_data),__kwargtrans__({dtype:np.uint8})),1);
var fig=plt.figure();
logger.addHandler(sh);
export var pickled_value=redis.py_get(key);
plt.colorbar(im);
imarray;
get_type_hints(__main__);
var tree=KDTree(numpy.array(ecef_cities));
export var forced_managed=false;
export var concatenated_df=pd.concat(df_from_each_file,__kwargtrans__({ignore_index:true}));
ax.add_collection(lc);
nn.activate([0,0]);
layout.addWidget(self.datetime);
pd.Series(np.tile(c,n),[i.repeat(m),v.ravel()]).unstack();
var image=wx.ImageFromStream(sbuf);
export var jagged_slice_of_a=a.__getitem__([tuple([0,null,1]),entries_of_interest]).diagonal();
BOOST_PYTHON_MODULE(__main__);
self.ToggleTool(self._NTB2_ZOOM,false);
var pipe=subprocess.Popen(args,__kwargtrans__({stdin:subprocess.PIPE,stdout:subprocess.PIPE}));
export var utc_date=datetime.utcnow().date();
var fig=plt.figure();
export var fexps=list(range(-1,-int(precision+1),-1));
os.makedirs(dest);
var H=np.random.randn(n,n);
get_index(lst,num,index+1);
print(function(){var __accu0__=[];for(var x of g2)if(x[2]>=1.5)__accu0__.append(x);return __accu0__}());
ax2.add_artist(bbox_image);
var text=f.read();
points.intersects(poly.ix[0]);
export var bars=forms.ModelMultipleChoiceField(__kwargtrans__({queryset:Bar.objects.all()}));
export var mdev=np.median(d);
sns.heatmap(__kwargtrans__({data:df2,annot:true,alpha:0}));
self.__dict__==other.__dict__;
var s=s.strip(string.punctuation);
export var dateeastern=dategmt.astimezone(eastern);
var poly=np.polynomial.Polynomial(np.random.rand(d+1));
os._exit(0);
dc.SetBackground(wx.Brush(self.GetParent().GetBackgroundColour()));
start_response(status,response_headers);
var B=numpy.lib.stride_tricks.as_strided(A,__kwargtrans__({shape:newshape,strides:newstrides}));
var aa=N.zeros(tuple([len(br),2]));
print(somelist[index]);
rectangles.add(new_rectangle);
print(myFunction(myCount));
var element=etree.Element(CDATA);
var __left0__=np.meshgrid(np.linspace(-2,2,200),np.linspace(-2,2,200));var x=__left0__[0];var y=__left0__[1];
export var Location4=motion_plan(increasor(0,-1),alternator(0,1));
export var Values=function(){var __accu0__=[];for(var x=0;x<1E3;x++)__accu0__.append(f(x));return __accu0__}();
str(self.karma_delta);
AppHelper.runEventLoop();
sys.stdout.buffer.flush();
any(function(){var __accu0__=[];for(var d of self.digits)__accu0__.append(d);return py_iter(__accu0__)}());
var new_df=df.where(df.date>=last_week);
py_next(a);
df;
var data=urllib.request.urlopen(url).read();
var now=time.time();
sys.stdout=os.devnull;
print(datetime.date.timetuple(t1));
log.addHandler(ch);
count+=1;
newlist.append(l[__mod__(i+j,d)]);
var __left0__=tuple([text_center[0]+height/2,text_center[1]-width/2]);var myX=__left0__[0];var myY=__left0__[1];
client.set_string(key,str(val));
var g=Group.objects.py_get(__kwargtrans__({id:1}));
self[key];
var app=Flask(__name__);
d1[k].append(v);
export var d_keys=list(d.py_keys());
client_sock.send(response_headers_raw);
var locations=Location.objects.all();
self.process_events();
var index=[0,2];
response;

t.extend(t2);
sns.set();
var args=parser.parse_args();
var p2=np.tensordot(p1,w,__kwargtrans__({axes:tuple([[0,2],[0,1]])}));
var df1=df[swapidx];
var __left0__=zip(...ans);var id=__left0__[0];var value=__left0__[1];var _=__left0__[2];
f.write(s);
print(form.errors);
main();
var __left0__=np.unravel_index(np.argmin(a),shp);var r=__left0__[0];var c=__left0__[1];
var __left0__=function(){var __accu0__=[];for(var i=0;i<7;i++)__accu0__.append(object());return __accu0__}();var a=__left0__[0];var b=__left0__[1];var c=__left0__[2];var d=__left0__[3];var e=__left0__[4];var f=__left0__[5];var g=__left0__[6];
var __left0__=zip(...data);var x=__left0__[0];var y=__left0__[1];var z=__left0__[2];
sum(function(){var __accu0__=[];for(var i of list(c.py_values()))if(i>1)__accu0__.append(i-1);return __accu0__}());
self.lock.acquire();
wrapped_decorator;
export var session1=SessionSRC();
c.append(itemgetter(len(b)-i-1)(b));
kmeans.labels_;
var __left0__=np.meshgrid(xi,yi);var X=__left0__[0];var Y=__left0__[1];
module.init();
np.choose(x>0,[-1,1]);
self.Layout();
tuple([function(){var __accu0__=[];for(var [p,i]of l1)if(p)__accu0__.append(i);return py_iter(__accu0__)}(),function(){var __accu0__=[];for(var [p,i]of l2)if(!p)__accu0__.append(i);return py_iter(__accu0__)}()]);
var fig=plt.figure();
var wait=WebDriverWait(driver,10);
var fd=set(d.py_items());
HttpResponse(json.dumps(result));
var pool=Pool(__kwargtrans__({processes:4}));
max(0,min(b,d)-max(a,c));
response.status=falcon.HTTP_404;

export var already_loaded=s.query(A).filter(A.id.in_(random.sample(ids,10))).all();
df;
socket.send(toAddr,zmq.SNDMORE);
var x=ClassName();
export var STARTMSB=[0];
table_name.addParseAction(noWhitespace);
logger.console(s);
critical_code();
var index=pd.MultiIndex.from_tuples(list(product(individuals,time)));
MySQLdb.__version__;
var f=open(input_file);
dict(scores);
var py_items=len(list(group));
all(l);
setattr(self,klass.__name__,DummyClass());
cur.execute(query);
result.append(tuple([int(k),na_list[0]]));
your_application_main();
test_suite;
var ret=func(...args,__kwargtrans__(kwargs));
export var pycrypto_key=Crypto.PublicKey.RSA.construct(tuple([n,e]));
win.scrollok(true);
self.queue=set();
root.mainloop();
var a=np.arange(50);
app.login_manager.init_app(app);
encoded.hexdigest();
self.canv.drawImage(self.img,0,0,__kwargtrans__({height:-2*inch,width:4*inch}));
[l[0]-1]+decr(l.__getslice__(0,1,1));
len(ws.strip());
t.save();
w/w.sum().astype(float);
var y=np.arange(100);
mailserver.quit();
print(tuple([py_name,seq]));
h.hexdigest();
export var fpp=POINTER(c_float)();
var d=dict(l);
list_a[k][j][i];
a.__getslice__(0,null,1).__getslice__(0,null,2);
canvas.setPageSize(landscape(letter));
[-2,0,-2,4,10,4];
model.py;
export var corr_table=pd.concat(function(){var __accu0__=[];for(var t of tups)__accu0__.append(c(...t));return __accu0__}(),__kwargtrans__({axis:1}));
(function(){var __accu0__=[];for(var tuple of temp)__accu0__.append(tuple.__getslice__(1,null,1));return __accu0__})();
var d=Naughty();
export var value_s=locale.currency(value,__kwargtrans__({grouping:true}));
var fig=plt.figure();
var unknown=set(data.py_keys())-set(self.fields.py_keys());
var doc=html.fromstring(body);
var df=pd.DataFrame(sample);
export var pn5=pd.Panel(data,df.columns,df.index.__getslice__(4,null,1),pd.RangeIndex(5));
var gs1=gridspec.GridSpecFromSubplotSpec(1,1,__kwargtrans__({subplot_spec:outer[0]}));
var naive_dt=datetime(2020,10,5,15,0,0);
var s=inspect.getsource(func);
bcrypt.hashpw(passwd_to_check,passwd)==passwd;
pygame.draw.rect(...self.stim[stimType]);
var counter=Counter.objects.get_or_create(__kwargtrans__({py_name:py_name}));
p.print_help();
inputdict[key]=newvalue;
self.destroyed.connect(self.handleDestroyed);
sys.stdout=f;
f_out.write(block);
new_lis.py_sort(__kwargtrans__({key:len}));
print(date.to_ical());
var npage=pdf_im.getNumPages();
outputs.remove(s);
plt.colorbar(sm,__kwargtrans__({cax:cax}));
var j=json.loads(s);
subclass2.bar();
result.remove(a);
df_new;
yag.send(__kwargtrans__({contents:contents}));
self.s=s;
export var DEPENDS=[];
WSGIPythonHome/path/to/python/2.5/exe/directory;
Response(dict({}));
foo.x=0;
export var default_proxy_opener=urllib.request.build_opener();
self.cj.save();
list(triangle(100,.5));
self.data.insert(END,str(i));
var root=pomFile.getroot();
var s=requests.Session();
pygame.event.pump();
mat[x].append(random.random());
var msg=MIMEMultipart();
var row_count=sum(function(){var __accu0__=[];for(var row of fileObject)__accu0__.append(1);return py_iter(__accu0__)}());
var A=np.array(np.random.randn(N,N));
f(10,20);
myfunc();
var c=np.mean(c,__kwargtrans__({axis:0}));
print(value,array2[i]);
var users=db.session.query(User).join(sub,sub.c.ml==User.numLogins).all();
print(outaction.py_default);
deploy();
var bbox=tuple([np.min(a[0]),np.max(a[0]),np.min(a[1]),np.max(a[1])]);
b.index[b.argmax()];
max(function(){var __accu0__=[];for(var [v0,v1]of zip(py_values.__getslice__(0,-1,1),py_values.__getslice__(1,null,1)))__accu0__.append(v1-v0);return py_iter(__accu0__)}());
export var punc=punc.decode();
var py_name=models.CharField(__kwargtrans__({max_length:255}));
s.push(20);
len(first);
source/usr/local/bin/virtualenvwrapper.sh;

self.sizer.Add(self.editname,tuple([1,1]));
ax.grid(true);
len(A);
newfunc;
tuple([[-2,-1,0,1,2]]);
d.py_update(buf);
export var marky=interp(markx,x,y);
a[out.sum(__kwargtrans__({axis:0}))==1];
any(equals);
list_y.remove(ely);
var fig=figure();
f.seek(pos);
var data=np.random.random(tuple([4,10,10]));
root.deiconify();
self.__is_shut_down.wait();
self.axes.set_xlabel(xlabel);
pprint(A);
var position=fin.tell();
var U=np.zeros(tuple([N,N]));
export var div=make_axes_locatable(ax);
var line=py_next(infile);
c.most_common(1);
pdq.append(x1);
var user=django.contrib.auth.get_user(django_request);
nose.main();
array([0,2,5,9]);
var result=numpy.empty(data.shape[0]);
export var upload_date=models.DateTimeField(__kwargtrans__({auto_now_add:true}));
var ts=pd.to_datetime(str(date));
var s=socket.socket();
label.set_fontproperties(ticks_font);
palette.setColor(palette.Light,QtGui.QColor(255,0,0));
count+=1;
var surf=ax.plot_surface(X,Y,mat);
print(cluster2);
1+max(-1,min(a.dateEnd,b.dateEnd)-max(a.dateStart,b.dateStart));
df;
var x=list(range(5));
plt.subplot(121);
a.test();
print(m.__name__);
print(traceback.format_exc());
print(driver.current_url);
export var response_body=response.content;
var py_name=os.path.basename(os.path.abspath(filepath));
self.newString;
_list.append(data);
var result=function(){var __accu0__=[];for(var f of seq)if(bar(x))__accu0__.append(foo(x));return __accu0__}();
main();
barbarbar;
do_something(cell);
var b=np.reshape(a,tuple([np.product(a.shape)]));

print(PlaintextWriter.write(doc).getvalue());
sys.stdout.isatty();
print(x);
var title=models.CharField(__kwargtrans__({max_length:100}));
plot(x,y1);
np.array(y);
export var jfile=json.loads(chunk);
application.listen(8888);
df;
var __left0__=select.select([sys.stdin],[],[],1);var i=__left0__[0];var o=__left0__[1];var e=__left0__[2];
var b=[0,2,4,5];
ax.plot(x,y,__kwargtrans__(__mergekwargtrans__({color:col_dict[class_col[i]]},kwds)));
chardet_detector.result;
dict(__kwargtrans__({y:a.y,z:a.z}));
map(py_metatype,a).count(int);
fig.canvas.draw();
pb.run();
export var rooms=Room.objects.filter(__kwargtrans__({school:self}));
var bs=BeautifulSoup.BeautifulSoup(data);
signal.signal(signal.SIGALRM,function __lambda__(a,b){return sys.exit(1)});
n.parent;
cache.__setitem__([s1,s2],max(lcs(s1.__getslice__(0,-1,1),s2),lcs(s1,s2.__getslice__(0,-1,1))));
f.close();
len(rng);
var fig=plt.figure();
server.login(username,password);
var __left0__=os.path.py_split(path);var newpath=__left0__[0];var tail=__left0__[1];
server.serve_forever();
var tree=dict({});
plt.show();
aDict.py_update(dict(list(element.py_items())));
points.append(tuple([cos(radians(startAngle)),sin(radians(startAngle))]));
ax.set_xlim(-.6,.6);
var a=np.ascontiguousarray(a);
(function __lambda__(x){return f(g(x))});
d==d.to_integral()?d.quantize(Decimal(1)):d.normalize();
tuple([a,b,c]);
ax.hist2d(x,y,__kwargtrans__({bins:tuple([xbins,ybins])}));
logging.getLogger().addHandler(fh);
var result=curs.fetchall();
draw.flush();
lines.append(line);
var x=[1,0];
result;
export var sfi=SHFILEINFO();
ET.tostring(root);
var description=Column(String(100));
sum(sum(l));
[15,8,9,6];
obj._meta.concrete_model._meta.app_label;
var blob_key=files.blobstore.get_blob_key(zip_file);
var method=getattr(my_cls,method_name);
jsonf.write(data);
var __except0__=KeyError();__except0__.__cause__=null;throw __except0__;
var result=days.__getslice__(days.index(weekday),null,1)+days.__getslice__(0,days.index(weekdays),1);
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
[Arthur];
export var data2b=np.array(np.random.uniform(0,1,batchSize));
sock.bind(tuple([source_ip,0]));
var opener=urllib.request.build_opener(urllib.request.HTTPSHandler(__kwargtrans__({debuglevel:1})));
s.__getslice__(-amount,null,1);
var app=wx.App(__kwargtrans__({redirect:false}));
var soup=BeautifulSoup(page);
o.__hasattr__(a);
random.shuffle(words);
print(found[0].text);
call(...args,__kwargtrans__(kwargs));
df.dtypes;
df;
tuple([w,-x,-y,-z]);
self.configMap[key];
o.many2many.add(ModelB.objects.py_get(__kwargtrans__({id:2})));
var ax=fig.add_axes([.12,.12,.68,.78]);
var result_dict=collections.defaultdict(list);
self.right=right;
method.__class__;
self._callback(self._value);
setattr(self,item,value);
s[s.map(py_metatype).ne(str)];
export var rrset=response.authority[0];
var result=[value_if_false,value_if_true][condition];
list(find_creators(f,builtins));
var d=dict({});
pygame.draw.circle(srf,color,tuple([x,y]),radius);
username==line[1].strip();
var bar=Foo();
var xs=np.linspace(0,8,200);
export var Qapp=QApplication(sys.argv);
print(test.__dict__[a_string]);
var parent=elem.getparent();
np.diff(s.py_values);
ModelA.objects.instance_of(ModelB);
ax.set_xticklabels(ax.get_xticks(),__kwargtrans__({fontproperties:font}));
export var tips=pd.read_csv(url);
self.request.send(self.data.upper());
export var pts2_=cv2.perspectiveTransform(pts2,H);
float(v);
var yi=np.array([0,.5,1]);
[dict([[1,2]])];
time.sleep(1);
chapters+=1;
export var cc0=function(){var __accu0__=[];for(var x of cc)__accu0__.append(x);return __accu0__}();
5/2;
i;
export var USE_L10N=true;
var USE_TZ=true;
var y=np.matrix(x);
print(myre.group(0));
freq4[char]+=1;
pprint(FW);
self.n+=2;
var distance_matrix_np=np.array(distance_matrix);
var indices=np.empty(tuple([sizes[-1]]),__kwargtrans__({dtype:np.intp}));
res.append(t);
export var MB_OKCXL=1;
var cbar=plt.colorbar(surf);
t.left(90*random.randrange(4));
var screen=pygame.display.set_mode(tuple([200,200]));
var out=process.stdout.readline(1);
app.debug=true;
var soup=BeautifulSoup(response);
var b=np.random.rand(4);
var new_d=pickle.load(file2);
crawler.crawl(spider);
export var NOTHING=object();
var r=session.post(URL,__kwargtrans__({data:login_data}));
jsonify(__kwargtrans__(request.json));
allocate(tmp(gridsize,gridsize,gridsize));
x[y]+=10;
var height=GetSystemMetrics(1);
print(k);
export var ypxl2=ipart(yend);
unhexlify(s);
self.list.setIndexWidget(index,button);
var product=models.ForeignKey(Product);
regressor.score(X,y);
upload_directory(path,upload_file);
var a=42;
w.start();
var columns=function(){var __accu0__=[];for(var i=0;i<10;i++)__accu0__.append(list());return __accu0__}();
var f=Foo();
plt.contourf(grid);
export var xpointer=ctypes.addressof(asdouble);
extractor.runInParallel(__kwargtrans__({numProcesses:2,numThreads:4}));
sys.exit(app.exec_());
deactivate;
df.columns=columns;
setattr(targetCls,py_name,closure(py_name,func));
line_contents_expr.runTests([sample1,sample2]);
request.start_time=time.time();
var output=proc.stderr.read();
var root=Tk();
os.close(fileHandle);
var __except0__=NotImplementedError;__except0__.__cause__=null;throw __except0__;
init();
self.view.setScene(self.scene);
export var ans_time=time.mktime(dtime.timetuple());
summary[s]=function(){var __accu0__=[];for(var x of list(set(summary[s])))__accu0__.append(int(x));return __accu0__}();
target_dict[key1][key2]=val;
self.results=dict({});
my_set;
self.children.append(kiddo);
print(key);
var element=WebDriverWait(driver,10).until(find);
loop1();
var fd=os.open(os.ctermid(),os.O_RDONLY);
label.set_fontsize(15);
var y=np.outer(np.sin(theta),np.sin(phi));
export var about=About.objects.py_get(__kwargtrans__({id:1}));
count+=1;
export var col_ind=np.argsort(data.py_values,__kwargtrans__({axis:0})).__getitem__([tuple([0,null,-1]),tuple([0,null,1])]);
df.py_replace(to_replace,np.nan);
show();
export var letter=input(prompt).strip();
t.append(z);
source_key.copy(dest_bucket_name,dest_key_name);
export var rms=audioop.rms(data,2);
dict(zip(...[py_iter(List)]*2));
export var particles=function(){var __accu0__=[];for(var i=0;i<5E5;i++)__accu0__.append(Particle(i));return __accu0__}();
f.write(raw_img);
line_number-=1;
MyClass.defaults[key];
var b=Boo();
cls();
v.__setslice__(0,len(tmp),null,v.__getslice__(0,len(tmp),1)+tmp);
export var x_list=numpy.random.random(200);
export var ysize=len(np.unique(lons));
var s2=s1.index.to_series().shift(-1).loc[idx].astype(int);
self.SetSizeHints(__kwargtrans__({minW:-1,minH:hsize,maxH:hsize}));
i+=1;
tuple([markx,marky]);
Thread(__kwargtrans__({target:guiloop})).start();
df;
var ax=plt.gca();
lab.pack();
var ax2=plt.subplot(122);
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
export var phi2=np.linspace(0,5*2*np.pi,1E3);
export var xml_output=response.read();
var __left0__=np.meshgrid(x,y);var xx=__left0__[0];var yy=__left0__[1];
print(list_of_strings);
np.cov(data.T);
ret.reserve(funs.size());
plt.setp(g.ax_heatmap.get_yticklabels(),__kwargtrans__({rotation:0}));
console.start();
mantissas[fixmsk]*=10;
export var reservations=conn.get_all_instances();
visited.append(rule);
np.random.seed(1);
print(tn.read_eager());
y.nonzero();
ax.axis(tuple([0,2,0,2]));
np.testing.assert_almost_equal(x,y);
var df=pd.concat([df,pd.DataFrame(np.tile(np.nan,[len(df),50]))],__kwargtrans__({axis:1}));
self._byhour;
self._byminute;
self._bysecond;
df[sum_columns]=df.groupby(__kwargtrans__({axis:1,level:1})).sum();
var ax2=plt.subplot(2,1,2,__kwargtrans__({sharex:ax1}));
decorator1(f);
self.py_name=py_name;
export var cpid=os.fork();
var b=int(x);
print(t.py_get(__kwargtrans__({timeout:1})));
sublime.get_clipboard();
self.updater.setInterval(10);
print(m_swapped.shape);
sleep(5);
df.index+=17;
export var minmax=function(){var __accu0__=[];for(var [k,v]of groupby(lst,function __lambda__(a){return a<0}))__accu0__.append(k?min(v):max(v));return __accu0__}();
var r=requests.post(endpoint,__kwargtrans__({data:request_parameters,headers:headers}));
np.count_nonzero(y==1);
export var tlist=[];
file.close();
print(self._concrete_method());
var d=sum(li.__getslice__(0,4,1));
(function(){var __accu0__=[];for(var x of xs)for(var y of ys)__accu0__.append(x+y);return __accu0__})();
dis.dis(function __lambda__(x){return str(x)});
h.feed(page);
var value=dictionary[key];
all(map(somePredicate,somIterable));
u.close();
print(res.status,res.reason);
var args=docopt.docopt(_(__doc__));
print(data);
array[1];
print(obj.number);
sess.run(D);
f.close();
clientSocket.send(data.encode());
output.append(tmp);
print(i);
print(data[4].text);
sum(function(){var __accu0__=[];for(var c of L)__accu0__.append(ord(c));return py_iter(__accu0__)}());
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
os.write(out_fd,PASSPHRASE);
export var drawing=numpy.zeros([100,100],numpy.uint8);
var __left0__=zip(...points);var x=__left0__[0];var y=__left0__[1];
help(newImg1.save);
var a=handle.readlines().__getslice__(1,null,1);
export var oldtrace=[sys.gettrace()];
plt.xticks(list(range(ncols)),col_labels);
var driver=webdriver.PhantomJS();
set([pd.Categorical(x,l.__getslice__(0,null,-1),true).max()]);
res.py_setdefault(k,[]);
ha.plot_surface(X,Y,data);
main();
var result=client.service.IsHealthy();
tf.truncated_normal_initializer(__kwargtrans__({stddev:stddev}));
self.session=Session();
var Y=numpy.repeat(X.__getitem__([tuple([0,null,1]),j]),n).reshape(tuple([N,n]));
print(x.bar());
a.py_pop(0);
var results=function(){var __accu0__=[];for(var line of f)if(line)__accu0__.append(line.strip().lower());return __accu0__}();

print(pir(df));
var py_metatype=models.CharField(__kwargtrans__({max_length:255}));
A[0].shape;
mercurial.__file__;
var fig=plt.figure();
print(hash.py_name,hash.hexdigest());
self.observer.join();
leng(s.__getslice__(1,null,1),count);
export var slices_start=np.array(function(){var __accu0__=[];for(var s of slices)__accu0__.append(s.start);return __accu0__}());
var root=tree.getroot();
fig.colorbar(im1);
export var the_queue=multiprocessing.Queue();
self.readonly_fields;
seen.add(found);
cls;
partition(a_,equiv_);
var soup=BeautifulSoup(br.response().read());
origlist.append(t);
export var session_config=tf.ConfigProto(__kwargtrans__({gpu_options:gpu_options}));
var __left0__=train_test_split(df,__kwargtrans__({test_size:.2}));export var train=__left0__[0];var test=__left0__[1];
var app=Flask(__name__);
print(t.timeit());
var a=np.empty(0);
export var Ni=f.shape[0];
var data=json.loads(json_str);
hline.set_ydata(tuple([y,y]));
var ax=plt.subplot(111);
get_result();
var c=conn.cursor();
var client=socket.socket(socket.AF_INET,socket.SOCK_DGRAM);
afun;
s.close();
a(your_list);
export var b_sub=b[mask];
self.gamma=tf.Variable(tf.constant(1,__kwargtrans__({shape:[depth]})));
var z=np.linspace(1,2,20);
lock.acquire();
matplotlib.pyplot.yticks(yint);
self.op=op;
s.post(url,__kwargtrans__({data:user_data}));
fl.close();
comment.save();
john.save();
tile_array(a,2,2);
AlwaysCallable(self.__class__);
var fig=plt.figure();
max(0,min(x,255));
var pool=Pool(8);
self.grid.CreateGrid(25,8);
self.vline.set_xdata(tuple([x,x]));
var now=datetime.now(timezone.utc);
export var conn1=psycopg2.connect(dsn1);
var __left0__=tuple([len(string1),len(string2)]);var len1=__left0__[0];var len2=__left0__[1];
time.sleep(.1);
print(c.fetchall());
pythonbrew_install;
list(d.py_items());
var n=len(l);
pylab.legend();
np.random.shuffle(cols);
var files=pattern.findall(str);
XmlStream.__init__(self);
var screen=curses.initscr();
export var cmd=sys.argv[1];
var x=[0]*51;
self.testbed.init_user_stub();
architecture/webservice_tech;
print(tuple([n,sorted(p)]));
path.append(lastnode);
var data=response.read();
self.lbl.grid();
export var y_vals=np.cumsum([0]+pieces);
db.tbl.insert(__kwargtrans__(db.tbl._filter_fields(newRowAsDict)));
p1.join();
Py_XDECREF(module);
list_of_tuples.append(tuple([x,y]));
var a=np.random.rand(6,4);
var array=function(){var __accu0__=[];for(var i of Split_Line[0])__accu0__.append([0]*len(Split_Line[1]));return __accu0__}();
win.unmaximize();

var app=Flask(__name__);
to_stream.write(processed_buf);
print(d[0]);
next_down(x);
var command=function __lambda__(i,j){if(typeof i=="undefined"||i!=null&&i.hasOwnProperty("__kwargtrans__"))var i=i;if(typeof j=="undefined"||j!=null&&j.hasOwnProperty("__kwargtrans__"))var j=j;return update_binary_text(i,j)};
print(path_buf.value);
weights.dot(features)+bias*len(weights);
var here=function __lambda__(x){return os.path.abspath(os.path.join(os.path.dirname("./P2JSnippets.py"),x))};
var g=sns.pairplot(iris);
var fig=plt.figure();
var image=Image.open(filename);
!function(){var __accu0__=[];for(var v of list(remaining_weights.py_values()))if(v!=0)__accu0__.append(v);return __accu0__}();
export var c_ulong_type=PyTypeObject.from_address(id(c_ulong));
ax.set_ylim(ymin,ymax);
unixtime.days*24*60*60+unixtime.seconds+unixtime.microseconds/1E6;
f.close();
endif;
ax.set_xticklabels(xlabels);
var seen=set();
export var stdin_fileno=sys.stdin.fileno();
var dic=function(){var __accu0__=[];for(var x of lis)__accu0__.append([x,[]]);return dict(__accu0__)}();
win2.destroy();
print(x);
var gray=cv2.medianBlur(cv2.cvtColor(img,cv2.COLOR_RGB2GRAY),5);
var a=np.empty(guess.shape,__kwargtrans__({dtype:int}));
var result=pipe.stdout.read();
self.sys_stdout=sys.stdout;
var now=datetime.now();
cv2.drawContours(close,[cnt],0,0,-1);
print(new_dict);
int(.5+Math.pow(10,(n-1)*K));
matched_data.append(d);
zf.close();
new set([dict({})]);
8595E3;
export var px=pygame.image.load(path);
var A=A.view(A.dtype[0]).reshape(-1,len(A.dtype));
tuple([i,WSSSE]);
var cursor=conn.cursor();
os.abspath(os.path.join("./P2JSnippets.py",os.path.pardir,file_name));
p.start();
export var filedescriptor=urllib.request.urlopen(req);
var reader=csv.reader(f);
numpy.subtract(tuple([10,10]),tuple([4,4]));
str(h);
os.startfile(filepath);

csv.writer(f).writerows(list_of_lists);
wb.ActiveSheet.ExportAsFixedFormat(0,path_to_pdf);
var ax=fig.add_subplot(212);
export var data_stream=Popen(mycmd,__kwargtrans__({stdin:PIPE,stdout:PIPE}));
cap.release();
var zipped=function(){var __accu0__=[];for(var t of zip(x,y))__accu0__.append(list(t));return __accu0__}();
print(e.__traceback__);
export var my_iterator=py_iter(sorted(a+b+c));
var noise=np.random.randn(100);

var CS=ax.contourf(xi,yi,zi,60,__kwargtrans__({cmap:plt.cm.jet,zorder:1}));
print(songs[song_index]);
len(self.nodes);
var s=requests.Session();
var __left0__=parser.parse_args();var options=__left0__[0];var args=__left0__[1];
infile.close();
ws.add_image(img);
reader.Update();
false;
print(link);
[1,2,0];
var x=a.__getslice__(0,i,1);
E+=potential(np.sqrt(np.sum(Math.pow(x[i]-x[j],2))));
var a=np.array([2,6,4,8]);
var matches=function(){var __accu0__=[];for(var i of range(len(b),0,-1))if(b.__getslice__(0,i,1)==a.__getslice__(-i,null,1))__accu0__.append(i);return py_iter(__accu0__)}();
var content=forms.CharField();
nomwe_corpus.append(nomwe.py_split());
var __left0__=plt.subplots(1,2);var f=__left0__[0];var ax=__left0__[1];
export var responses_dir=os.path.dirname(os.path.realpath("./P2JSnippets.py"));
var match=match_obj.group(0);
export var csvfile=StringIO.StringIO();
var ax=fig.add_subplot(111);
seen.add(first);
writer.writerow(row);
self.__str__();
bundle;
export var vector=vector.reshape(1,len(vector));
var d=np.diff(np.asarray(b,__kwargtrans__({dtype:int})));
var app=Flask(__name__);
device.close();
var seq=chain.__getslice__(0,null,1);
k0.lst.append(1);
var host=req.get_host();
false;
py_next(result);
export var src_address=Column(String(16),__kwargtrans__({index:true}));
max(map(commonprefix,pairwise(suffixes)),__kwargtrans__({key:len}));
max(hand,__kwargtrans__({key:function __lambda__(c){return rank_cards_map[c[0]]}}));
var df=df.py_replace(nan,0);
fp.__setitem__([i,tuple([0,null,1])],fp.__getitem__([i+1,tuple([0,null,1])]));
var p=Pool(1);
keybd_event(Key,0,1,0);
export var solar_time=datetime.combine(dt.date(),time(0))+timedelta(__kwargtrans__({minutes:tst}));
df2.L=df2.L.str.strip();
setattr(instance,attr,value);
export var run_time=time.time()-start;
var sess=tf.Session();
1==1+complex(0,0)&&1+complex(0,0)==1;
var nums=np.array([1,1,1,-1-1,1,-1,1,1,-1,-1,-1,1,-1]);
export var fruitdict=dict({});
var __except0__=AttributeError;__except0__.__cause__=null;throw __except0__;
var out=out.__getslice__(0,null,-1);
var app=Flask(__name__);
p.save();
var B=dataset[where[~a_idx]];
df.groupby([df.Type,isnull]).size().unstack();
mydict[k]=mylist.count(k);
value;
export var bg1=cv2.BackgroundSubtractorMOG();
(function(){var __accu0__=[];for(var c of this.s)__accu0__.append(__in__(c,this.d)&&this.d[c]||c);return __accu0__})();
yaml.Loader.yaml_constructors;
(function(){var __accu0__=[];for(var row of array)__accu0__.append(row[column_number]);return __accu0__})();
var year=int(yourString.__getslice__(0,4,1));
var data=np.arange(n_data);
p.children.append(Child(__kwargtrans__({loc:cloc,status:cstat})));
port;
x+y.todense();
tuple([tuple([1,2])==1,2]);
tuple([[true,false,false]]);
var buff=f.read();
tuple([Y.__getslice__(-fc,null,1),alpha,beta,rmse]);
np.sum(function(){var __accu0__=[];for(var p of probs)if(p>0)__accu0__.append(-p*np.log2(p));return py_iter(__accu0__)}());
sys.stdout=St_ampe_dOut();
p.close();
x.append(2.2);
f.read(8);
var y=a[2]*b[0]-a[0]*b[2];
abs(z.T-z);
len(self._data.py_values);
var object_class=models.CharField(__kwargtrans__({max_length:20}));
var x1=np.random.normal(0,10,1E5);
sorted(s,__kwargtrans__({key:function __lambda__(t){return-t[0]*t[1]}}));
export var f_new=pickle.loads(f_string);
pcolor(df1.T);
py_typeof(unicodecontent);
install_hooks.post_install();
threadB.join();
1+x+Math.pow(x,2)/2;
export var figures=function(){var __accu0__=[];for(var x of matplotlib._pylab_helpers.Gcf.get_all_fig_managers())__accu0__.append(x);return __accu0__}();
var Base=declarative_base();
Story.append(paragraph);
palette.extend(tuple([v,v,v]));

print(difft(time(20,40,0),time(18,41,0)));
line_num+=1;
self.id==other.id;
var gray=cv2.cvtColor(img,cv2.COLOR_BGR2GRAY);
var a=models.CharField(__kwargtrans__({max_length:42}));
var color=QtGui.QColor(value);
im.thumbnail(size_maxi,Image.ANTIALIAS);
something();
self._fail(self.failureException(msg));
var meds=df2.median().sort_values();
np.nan;
response;
(function(){var __accu0__=[];for(var [k,v]of list(dct.py_items()))__accu0__.append([offset(k,base),v]);return dict(__accu0__)})();
reactor.listenTCP(8001,server.Site(root));
print(result.column_name);
self.lock=threading.Lock();
mdb.connect(__kwargtrans__(connectParams));
var root=LH.fromstring(text);
var soup=BeautifulSoup(html);
var headers=dict({});
var result=can_count_a*a+can_count_b*b;
print(f.upper());
logger2.addHandler(logfile);
print(key,word_dict[key]);
self.treeview.append_column(self.tvcolumn0);
vals_array.fill(np.nan);
var my_dict=defaultdict(list);
var out=input[binary_matrix.ravel()[lin_idx]==1];
PolarAxes.LogPolarTransform(self._axis,self._use_rmin);
py_iter([data]);
print(df1.T);
var pool=mp.Pool();
export var target_path=imp.find_module(target);
var __left0__=plt.subplots(2,__kwargtrans__({sharex:true}));var fig=__left0__[0];var ax=__left0__[1];
pp.savefig(plt.gcf());
self.happiness=self.wealth/global_wealth;
self._intersections[a][b]+=1;
new set([new set([login.login_date])]);
child.join();
heapq.nlargest(n,py_iter)[-1];
set(l1)&set(l2);
process.join();
var py_items=Item.objects.filter(__kwargtrans__({created_date__gte:aMonthAgo}));
PyType_FastSubclass(Py_TYPE(op),Py_TPFLAGS_LIST_SUBCLASS);
var b=[a];
var b=arr(a);
var py_name=Column(String);
link.next_sibling.next_sibling;
Clock.schedule_once(self.quit_screen,0);
db.session.add(group_from_factory);
word.lower();
var ws=wb.get_active_sheet();
self.parent=weakref.proxy(parent);
var X=np.random.randn(10,4);
var app=QApplication(sys.argv);
var list1=[[-2,0,-2,2,10,2],[-1,0,2,1,5,4]];
pylab.draw();
self.connect(tuple([host,80]));
(function(){var __accu0__=[];for(var i=0;i<10;i++)__accu0__.append(Math.pow(10,i*2/9));return __accu0__})();
a*x+b+c*np.exp((x-d)/e);
self.grid(__kwargtrans__({sticky:N+S+E+W}));
0;
module1.func1=self.old_func1;
spam._original(testcon);
socks.setdefaultproxy(socks.PROXY_TYPE_SOCKS5,ip,port);
cv.WriteFrame(video_out,frame);
isinstance(50,list);

plt.hist(tuple([a,b,c]),__kwargtrans__(common_params));
var ser=serial.Serial(s_name);
list(filter(exists,L));
object.__new__(cls,...args,__kwargtrans__(kw));
query_set.filter(__kwargtrans__({active:false}));
var b=[45,42,0,1,-1,0];
getattr(obj,py_name);
GetCurrentProcessId()==GetWindowThreadProcessId(wnd);
self._a;
new_cmap;
lines[0];
var parsed=urlparse(url);
A.foo();
response.headers;

top.after_cancel(job1);
[0,0,1,0];
var t=time.strptime(line,fmt);
ax1.add_line(copy.copy(line1));
h.file.read();
resultFyle.close();
var b=c_.__getitem__([a,c]);
ax1.set_ylim(-5,5);
df[df!=0].cumsum(__kwargtrans__({axis:1})).min(__kwargtrans__({axis:1}));
var tree=etree.parse(response,htmlparser);
print(html);
var out=dat.__getitem__([tuple([top_left[0],bottom_right[0]+1,1]),tuple([top_left[1],bottom_right[1]+1,1])]);
(function(){var __accu0__=[];for(var f of fs)__accu0__.append(f(0));return __accu0__})();
print(child.tag,child.text);
export var zeta=50;
var pos=nx.spring_layout(G);
self.__dict__.py_update(x.__dict__);
var d=distances.__getitem__([clust[i].id,clust[j].id]);
a.__setslice__(2,7+1,null,b);
response;
var N=len(perms[0][0]);
asyncore.loop();
var s=s.py_replace(hit,chr(entnum));
float(s);
export var sftp_client=ssh_client.open_sftp();
var f=Foo();
pet_food.save();
response;
export var first_sheet=book.sheet_by_index(0);
set(array1)&set(array2);
fnew[0];
export var dire=sys.argv[1];
count;
var conn=engine.connect();
logistic.cdf(.458);
worksheet.fit_num_pages=1;
X.__setitem__([np.arange(len(Y)),Y],1);
var dist=udist.data;
text.draw(fig.canvas.get_renderer());
funcs[2]();
var root=Tkinter.Tk();
result;
var reader=csv.reader(f);
var fig=plt.gcf();
var parser=etree.XMLParser(__kwargtrans__({schema:schema}));
export var mymean=function(){var __accu0__=[];for(var t of np.arange(5))__accu0__.append(np.mean(myarray.__getitem__([t,yy,xx])));return __accu0__}();
var __except0__=MemoryError();__except0__.__cause__=null;throw __except0__;
m_action.add(action1,action2);
var img=img.__getitem__([tuple([c1,c1+25,1]),tuple([r1,r1+25,1])]);
bot.configure(__kwargtrans__({yscrollcommand:vsb.set,xscrollcommand:hsb.set}));
var __left0__=np.linalg.eig(A);var w=__left0__[0];var v=__left0__[1];
writer.writerow([py_name,membership]);
var result=res.py_pop(0);
result;
httplib.HTTPConnection.__init__(self,...args,__kwargtrans__(kwargs));
anobj.amethod(x);
var loop=asyncio.get_event_loop();
var fig=plt.figure();
0;
print(GetUserInput(listOfOptions,true).getInput());
l[0];
xcode-select- -install;
self.server.shutdown();
print(datetime.datetime.fromtimestamp(time.time()));
var result=function(){var __accu0__=[];for(var i=0;i<n;i++)__accu0__.append([]);return __accu0__}();
conn.endheaders();
var img=Image.open(StringIO.StringIO(file_body));
AMOServer.Restore(AMORestoreInfo);
true;
df;
self.transport.loseConnection();
self.window.add(self.button);
actions.move_to_element(element);
points.append(tuple([xs[i],ys[j],zs[k],v]));
data;
show_banner();
isinstance(9,int);
tuple([d2.year-d1.year+(d2.month-d1.month)/12,__mod__(d2.month-d1.month,12)]);
right_thresh.__setitem__([tuple([0,null,1]),tuple([0,w-i,1])],right_thresh.__getitem__([tuple([0,null,1]),tuple([0,w-i,1])])+img.__getitem__([tuple([0,null,1]),tuple([i,null,1])]));
setattr(self,kw,arg);
var config=tf.ConfigProto(__kwargtrans__({log_device_placement:true}));
signal.alarm(10);
plt.imshow(g);
export var some_dict=dict(zip(sample(population,n),sample(list(range(1,1E5)),n)));
var soup=BeautifulSoup(f.fp);
self.content_length=content_length;
d[k].append(v);
l_counts.py_sort(__kwargtrans__({reverse:true}));
var a=numpy.empty(__kwargtrans__({shape:tuple([4]),dtype:object}));
example.print_value_2(s);
py_iter(self._choices);
a[mask]=10;
var response=requests.py_get(URL.format(__kwargtrans__(params)));
var parent=elem.getparent();
f.close();
var jsonObj=json.load(f);
var unq_count=np.bincount(id);
Doc.py_update(__kwargtrans__({set__VAR:Val,set__VAR2:Val2}));
var fig=plt.figure();
self.button1.pack();
print(p.sub(function __lambda__(mo){return d[mo.group(1)]},mystring));
var x=np.random.randint(0,4,__kwargtrans__({size:tuple([8,10])}));
treeaslist.extend(self.makeList(aNode.rChild));
np.allclose(pi.__getitem__([0,0,0]),np.linalg.pinv(b.__getitem__([0,0,0])));
os.close(1);
var r=requests.py_get(url);
plt.ion();
self.__dict__.py_clear();
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
var result=df2.reindex(np.union1d(df1.index,df2.index));
elem.py_clear();
var f=scipy.linspace(0,fs,N,__kwargtrans__({endpoint:false}));
export var sequence2=record2.seq;
var posts=db.ListProperty(db.Key,__kwargtrans__({indexed:false}));
ax.plot([1,2],[1,2]);
export var img_file=Image.open(image_name);
transitions==2;
signal.alarm(0);
print(partsChild.childNodes[0].nodeValue);
py_name.ljust(15);
var dct=json.loads(my_json_str);
print(USAGE);
true;
var fig=plt.figure();
self.crawler_process.start();
export var pinit=[1,-1];
len(set(y));
pd.Series(1,set(x));
var foo=Foo();
gc.collect();
var m=len(df);
var mask=np.ones(len(array),__kwargtrans__({dtype:bool}));
ax.set_yticks(np.arange(AUC.shape[0])+.5,__kwargtrans__({minor:false}));
_generate_range_values(start,end);
var cb=fig.colorbar(cf,__kwargtrans__({cax:cax}));
plt.barh(yvalues,xvalues,__kwargtrans__({figure:fig}));
var a=a.__getitem__([tuple([0,null,1]),tuple([0,null,-1])]);
non_list_items.append(item);
var suite=unittest.TestSuite(l);
myParent.__init__(self,customParam);
A-=A.mean();
var fig=plt.figure();
var soup=BeautifulSoup(urllib.request.urlopen(url).read());
print(len(seq_record));
itertools.compress(d,map(function __lambda__(x){return x>4},a));
var app=QtGui.QApplication(sys.argv);
plt.pause(.02*200);
os.remove(temporarylocation);
log.addHandler(custom_logger.MyHandler());
var user=request.db.query(User).filter_by(__kwargtrans__({id:userid})).first();
print(self.a,self.b);
cls.funky=1;
var x=np.array([u0,phi0]);
parser.print_help();
b.sum(__kwargtrans__({axis:0}));
var __left0__=divmod(n-1,len(digits));var n=__left0__[0];var mod=__left0__[1];
var list_1=function(){var __accu0__=[];for(var item of list_1)if(f(item))__accu0__.append(item);return __accu0__}();
cv2.waitKey(0);
server.sendmail(emailfrom,emailto,msg.as_string());
df1.dot(t);
q.task_done();
var p=readdir(dir_p);
len(x);
var a=np.array([list(range(1,10)),list(range(1,10))]);
heapq._siftup(h,i);
bundle;
full.paste(img,tuple([x*w,y*h]));
self.accept_imports();
false;
df;
export var chunks=function(){var __accu0__=[];for(var i of range(0,len(files),chunksize))__accu0__.append(files.__getslice__(i,i+chunksize,1));return __accu0__}();
random.shuffle(l);
export var data_frame=data_frame.where(data_frame<0,0);
np.median([9,2,0,1,0]);
var text=text.py_replace(key,value);
plt.plot(t,s,__kwargtrans__({color:c}));
pylab.plot(t,s);
print(self.x);

res.append(tasks.process_read_pair.s(r1,r2));
gevent.sleep(.5);
export var BY=np.take(B,y+1);
self.assertEqual(self.expected,isEven(self.num));
db.session.add_all(py_items);
var json_object=json.load(response);
self.conn.set_isolation_level(0);
var app=wx.PySimpleApp();
new set([new set([element.product])])-new set([new set([element.price])]);
var data=s.recv(1024);
figure();
initquacker();
sys.getsizeof(Math.pow(2,99));
self.__dict__.py_pop(...args);
var zi=ml.griddata(x,y,z,xi,yi);
print(nCr(4,2));
var string=json.dumps(lst);
df.iloc.__getitem__([tuple([-6,-1,1]),2]);
pprint.pprint(list(chunks(list(range(10,75)),10)));
print(NL);
var m=np.random.randint(20,100);
x.astype(int);
buffer.open(QtCore.QIODevice.WriteOnly);
print(f.readline());
export var state=models.ForeignKey(USState);
var serializer_class=WdigetSerializer;
work.join();
export var src_proj=src.GetProjection();
df.dot(v2);
fooarray.__setitem__([key1,key2],value);
var d=OrderedDict(function(){var __accu0__=[];for(var x=0;x<10;x++)__accu0__.append([x,x]);return dict(__accu0__)}());
var v=-np.cos(np.pi*x)*np.sin(np.pi*y)*np.cos(np.pi*z);
Quota.extend(lstnans);
random.sample(list(range(100)),20);
c.append(a[k]);
var root=tk.Tk();
cli.cmdloop();
var array=array[mask];
log.addHandler(handler);
f(i);
var dt=datetime(2008,1,1,0,0,0,0);
var D=NP.random.randn(1E4*10).reshape(1E3,10);
var app=Flask(__name__);
w.close();
var search_response=urllib.request.urlopen(url);
deleteL.__getslice__(write_i,null,1);
var d=np.diff(condition);
var http_server=tornado.httpserver.HTTPServer(application);
self.f();
i+=1;
var W=nx.DiGraph();
response;
ax.imshow(gray_data,__kwargtrans__({cmap:cm.gray}));
area+=x[i]*y[i+1]-x[i+1]*y[i];
print(i,repr(time.time()));
self.finish();
export var dat2=np.array([1,2,1,2]);
len(self.m[0]);
var id=Column(Integer,__kwargtrans__({primary_key:true}));
var f=function __lambda__(x){return x*math.cos(x-4)};
var json_data=data.dumps();
do_stuff(line);
heapq.heappop(gens);
out_f.getvalue();
g.ax_joint.plot(row[0],row[1],__kwargtrans__({color:colors[i],marker:markers[i]}));
display.stop();
var request=mechanize.Request(url);
var profile=webdriver.FirefoxProfile();

var f=inspect.currentframe();
screen.fill(tuple([200,100,200]));
print(data);
ax2.plot(dates,data);
export var prime_slices=function(){var __accu0__=[];for(var n=0;n<1E3;n++)__accu0__.append(function(){var __accu1__=[];for(var prime of primes)if(prime<n)__accu1__.append(prime);return __accu1__}());return __accu0__}();
self.rowconfigure(0,__kwargtrans__({weight:1}));
self.sck.recv();
var b=a.__getslice__(0,null,1);
[0,1,2];
var py_name=models.CharField(__kwargtrans__({max_length:100}));

export var white_areas=red==255&blue==255&green==255;
math.pi;
tuple([1,8,1,8]);
(function(){var __accu0__=[];for(var [func,result]of list(results.py_items()))__accu0__.append([func,result.py_get()]);return dict(__accu0__)})();
export var gene=info.__getslice__(this_re.start(0),this_re.end(0),1);
var result=self.func(x);
sys.getsizeof(foo1.__dict__);
var fig=plt.figure();
gf.seek(0);
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
count+=1;
nltk.__version__;
export var k_keys_sorted=heapq.nlargest(k,dictionary);
export var hax=plt.subplot(1,2,1);
session.add(w_1);
test.plus(1);
var console=logging.StreamHandler();
db.session.add(group_from_factory);
self.sock.connect_ex(self.socketpath);
var points=np.random.random(tuple([10,2]));
b[a>80]=funcC(a[a>80]);
Fraction(1,int(xc)+1);
var r=list(range(-int(n/2),int(n/2)+1));
fcntl.fcntl(fd,fcntl.F_SETFL,flags_save&~os.O_NONBLOCK);
self.idImage=self.canvas.create_image(0,0,__kwargtrans__({image:image1}));
s.connect(tuple([host,9]));
l.py_sort();
product.append(i*5);
var a=[4,6,12];
export var db_thread=threading.Thread(__kwargtrans__({target:main_loop,args:tuple([socket_file_name])}));
var data=function(){var __accu0__=[];for(var row of table.getchildren())__accu0__.append(function(){var __accu1__=[];for(var x of row)__accu1__.append(x.text.strip());return __accu1__}());return __accu0__}();
os.path.join(sys._MEIPASS);
var app=Flask(__name__);
request.user&&request.user.is_authenticated();
var form=Product(request.form);
var __left0__=np.indices(A.shape);var i=__left0__[0];var j=__left0__[1];
decompressor.decompress(part);
Vote.objects.filter(__kwargtrans__({choice:self})).count();
kOUT[i]=func(TempLake[i],Z);
py_typeof(foo);
export var read_pdf=PyPDF2.PdfFileReader(pdf_file);
gui.show();
var columns=function(){var __accu0__=[];for(var i=0;i<len(headers);i++)__accu0__.append(list());return __accu0__}();
do_final_thing_with(obj);
pickle.dump(somedata,f);
distance(a,c)+distance(c,b)==distance(a,b);
foo(depth+1);
X.tocsc().__getitem__([tuple([0,null,1]),unique_columns]);
deque(f,__kwargtrans__({maxlen:n}));
csv_contents.append(line);
pd.io.json.dumps(summary);
var numC=random.randint(1,100);
stdout.read();
self.output.reset();
window.reserve_space(0,0,height,0);
var data=sorted(data)+[1E5];
label.show();
var data_loaded=json.loads(data);
var killasgroup=py_true;

export var numeric=function __lambda__(x){return x.isdigit()?int(x):0};
var py_name=db.Column(db.String(100));
text.__getslice__(text.startswith(prefix)&&len(prefix),null,1);
stack.py_pop();
export var subsets=list(range(1,Math.pow(2,n)));
base_pic.save(__kwargtrans__({file:result_pic}));
out_queue.put(result);
print(repr(points));
result;
parse(InfiniteXML());
self.f.flush();
plt.imshow(im_out);
i+=1;
x&=~(1<<index);
sm.stats.lillifors(x);
var handler=logging.FileHandler(filename);
self.dataChanged.emit(QtCore.QModelIndex(),QtCore.QModelIndex());
self.extend(list(args));
print(info.groups());
var window=MainWindow();
img.show();
export var nms=nms.dropna(__kwargtrans__({thresh:2}));
self.player.add(self.source,self.scaler,self.fvidscale_cap,self.sink);
var jfile=json.loads(line);
var l=[1,5,7];
print(Ellipse(tuple([1,-1]),tuple([2,.5])).distance_from_origin());
cls;
self.__dict__;
export var fs2=frozenset([666,42]);
buf.append(data);
app.register_blueprint(admin);
d.my_attr;
wrapper;
isinstance(f,io.IOBase);
var s=socket.create_connection(...args,__kwargtrans__(kwargs));
print(x.data);
findex.fromfile(f,findex[0]);
new set([new set([department.product_count])]);
func(__kwargtrans__(kwargs));
self.a.b.c=value;
print(np.roll(v2,-rot).__getslice__(0,v.size,1));
brush.add_point(tuple([event.x,event.y]));
seq.ratio();
var py_split=function(){var __accu0__=[];for(var i of range(0,len(l),len(l)/cols))__accu0__.append(l.__getslice__(i,i+len(l)/cols,1));return __accu0__}();

var arr=function(){var __accu0__=[];for(var a of arr)__accu0__.append(a<b*10?a*2:-a);return __accu0__}();
var x=bar(x);
delattr(Dummy,attrname);
export var embed=tk.Frame(root,__kwargtrans__({width:500,height:500}));
computed[n];
d[c]+=1;
var rows=function(){var __accu0__=[];for(var row of reader)__accu0__.append(row);return __accu0__}();
var data=json.load(data);
var ind=np.arange(0,12,2);
false;
do_your_subprocess_stuff(temp_file);
export var before=datetime.datetime(year,1,1);
var seen=set();
self.conn.set_isolation_level(old_isolation_level);
dis.dis(function __lambda__(){return str(1E5)});
py_keys.py_sort();
var opener=urllib.request.build_opener(proxy_support);
export var utcnow=Utcnow();
var y=np.interp(t,np.arange(len(y)),y);
tuple([id(df.index),id(df2.index)]);
plt.show();
var Base=declarative_base();
self.py_get(__kwargtrans__({username__iexact:username}));
var x=np.linspace(np.min(roots)-50,np.max(roots)+50,__kwargtrans__({num:1E3}));
export var hov=ActionChains(wd).move_to_element(element);
parse();
export var currdir=os.path.dirname(os.path.abspath("./P2JSnippets.py"));
var soup=BeautifulSoup(content);
var a=np.random.randint(N,__kwargtrans__({size:n}));
var x=np.ravel(A).reshape(tuple([9,1]));
export var get_field=cls._meta.get_field;
foo.method1();
list(A.__dict__.py_keys());
[0,0,0,1];
var w=gtk.gdk.get_default_root_window();
arg_dict[o]=ast.literal_eval(arg);
list(range(start,stop+step,step));
lst.append(old_d[key][i]);
var delta=n/10;
var l=[];
i+=1;
jsonf.close();
len(self._od);
export var noo=Foo();
print(i,foo());
self.Add(self.buttonPanel2,0,wxALL|wxALIGN_LEFT,5);
py_next(bar);
funcs.append(function __lambda__(){return x});
var fig=plt.figure(1);
var hxs=HtmlXPathSelector(response);
export var filteredKeys=function(){var __accu0__=[];for(var key of list(aDict.py_keys()))if(__in__(searchString,key))__accu0__.append(key);return __accu0__}();
d[py_keys];
var json_data=open(json_file);
handler.response.write(content);
pprint.pprint(L);
response;
self.open(self.host,self.port);

self.my_class=my_class;
export var academic_year=models.CharField(__kwargtrans__({max_length:255}));
print(response);
var __left0__=plt.subplots();var fig=__left0__[0];var a=__left0__[1];
x+x;
wrapper;
[1,0,1,0,1,0,1,1,0,0,0,0];
f.read();
outfile.write(file1.read());
plt.plot_date(dates,y_values);
var digits=function(){var __accu0__=[];for(var character of input_string)if(character.isdigit())__accu0__.append(character);return py_iter(__accu0__)}();
map(function __lambda__(k){return nthRootOfr*exp((t+2*k*pi)*complex(0,1)/n)},list(range(n)));
plt.scatter(group.x,group.y,__kwargtrans__({s:sizes[i],alpha:.5,label:labels[i]}));
df;
ipc_event_cmd.buffer.add(data_str);
print(i);
self._tarobj=tarobj;
sample.index=pd.MultiIndex.from_tuples(list(product(list(range(100)),time)));
my_mesh.SetControlPointAt(v,0);
d[i].append(x[i]);
L.remove(M);
self.value;
var obj=MyModel.objects.create(__kwargtrans__({val:1}));
self.list_one.setGeometry(0,0,500,100);
threading.Thread(__kwargtrans__({target:op})).start();
var p=Pool(5);
matplotlib.__version__;

d1.py_update(d2);
self._test=get_initial_value();
tests.append(make_test(i));
bio_tagged_sent.append(tuple([token,tag]));
[1,1,0,1];
var app=Flask(__name__);
ax.xaxis.set_major_locator(plt.FixedLocator(x_coordinates));
print(re.sub(pat,repl,str));
list(x.py_values());
var lengths=function(){var __accu0__=[];for(var [key,value]of d.py_items())__accu0__.append([key,len(value)]);return dict(__accu0__)}();
py_next(generator);
pprint.pprint(fruit);
self._stdout.close();
self.setPath(path);
existing_item.put();
export var cskel=np.logical_not(skel);
li.append(li[-1]+1);
py_typeof(0);
B.__setitem__([2,inverse[A[1]==2]],A.__getitem__([2,A[1]==2]));
self.submit_form(login_form);
var data=[];
indices[tuple(column)].append(index);
var a=[];
max(stats,__kwargtrans__({key:stats.py_get}));
test();
math.ceil(4500/1E3);
my_handler.setFormatter(log_formatter);
export var reshaped_data_m=tranposed_data_m.reshape(25E4,64,64,2);
(function(){var __accu0__=[];for(var x of l)__accu0__.append(x+[nan]*(max_lenght-len(x)));return __accu0__})();
lst.append(i+1);
fileobj.close();
var d=np.arange(1,21);
print(args.a,args.b);
print(sorted(finder.nbest(bigram_measures.raw_freq,2),__kwargtrans__({reverse:true})));
plt.xlim(1.8,9.2);
plt.plot(data2);
s.bind(tuple([HOST,PORT]));
a+=1;
self.template=self.template.lower();
Thread.run(self);
os.fstat(g.fileno()).st_nlink;
var merged=collections.defaultdict(list);
sample_func();
var a=[[0]*10]*10;
var mydict=recursivedict();
export var dataQ=Queue.Queue(__kwargtrans__({maxsize:0}));
do_something(line);
var parser=argparse.ArgumentParser();
tuple([[7,0,7]]);
var __left0__=np.nonzero(img);var y=__left0__[0];var x=__left0__[1];
chars.append(escaped_str[i+1]);
permissions[0].id;
pool.join();
sum(Math.pow(w[i]*(y[i]-s(x[i])),2),__kwargtrans__({axis:0}))<=s;
dict(__kwargtrans__({form:g}));
list(calendar.day_name);
fh.close();
export var yf=np.random.uniform(np.min(y),np.max(y),__kwargtrans__({size:tuple([f])}));
print(str(1).zfill(2));
[1,1,1,0];
subplot(121);
sock.settimeout(.01);
var merged=pd.concat(df_list,__kwargtrans__({axis:0}));
np.array(data.__getslice__(0,null,1)).reshape(shape.__getslice__(0,null,1));
var data=np.tile(data,tuple([50,50]));
self.list.insert(i,v);
var c=array([[1,1,1]]);
print(row);
count+=1;
var __left0__=butter_bandpass(...args,__kwargtrans__(kwargs));var b=__left0__[0];var a=__left0__[1];
tuple([file,line]);
glTexParameterf(GL_TEXTURE_2D,GL_TEXTURE_MIN_FILTER,GL_LINEAR);
d;
self._window.add(vbox);
foo_noniterable(noniterable);
validate_email(email.strip());
session.add(new_prod);
p(1)/2+p(1)/2+1/2;
self.proxy.setSourceModel(self.model);
setattr(self,key,value);
l.append(foo);
cls(list(datadict.py_items()));
var my_list=json.loads(data[0][1]);
var f=x&255;
var username=db.Column(db.String(80),__kwargtrans__({unique:true}));
b.extend([0]*(minlen-len(b)));
self.layers+=[NeuronLayer(self.n_outputs,self.n_neurons_to_hl)];
var m=regex.match(s);
(function(){var __accu0__=[];for(var i of eq2.atoms(Pow))if(i.base==a)__accu0__.append(i);return __accu0__})();
ispower(50,5);
var dftmtx=np.fft.fft(np.eye(N));
var response=urllib.request.urlopen(request_object);
[];
export var nan_idx=np.where(np.isnan(a))[0];
count+=1;
var a=np.array([.1,.2,1,1,1,.9,.6,1,0,1]);
export var json_text=json.load(json_file);
var colors=np.r_.__getitem__([np.linspace(.1,1,5),np.linspace(.1,1,5)]);
print(df);
page.mergePage(new_pdf.getPage(0));
Foo.x=range(1,4);
var format_to_year_to_value_dict=defaultdict(dict);
export var sampleip0=[];
var m=[0]*(Math.pow(N,2)+1);
sendSock.setsockopt(socket.SOL_SOCKET,socket.SO_REUSEADDR,true);
lock.release();
lxml.version;
__in__(row,self.data[column]);
var py_keys=list(dictionary.py_keys());
bin(a&b);
var extension=mimetypes.guess_extension(content_type);
export var updiag=[.5]*n;
var app=Flask(__name__);
var r=q.T.reshape(-1,k,n);
logger.propagate=false;
print(f.root.data.__getitem__([tuple([1,10,1]),tuple([2,20,1])]));
list(islice(set(a).difference(b),100));
out[0];
main();
var splits=list(function(){var __accu0__=[];for(var m of re.finditer(pattern,string))__accu0__.append(tuple([m.start(),m.end()]));return py_iter(__accu0__)}());
w.setLayout(layout);
self.properties=dict({});
self._close_database();
ipshell();
var response=br.submit();
ctx.stroke();
oldmodule.__dict__.py_clear();
poller.register(client_receiver,zmq.POLLIN);
var ax=plt.subplot(111);
print(np.dtype(float).itemsize);
export var tree_selection=treeview.get_selection();
output_notebook();
log.error_log.addHandler(h);
outputfile.write(line);
export var basename=os.path.basename(filename);
log.msg(response);
plt.show();
print(function(){var __accu0__=[];for(var word of lst)if(__in__(word,test))__accu0__.append(word);return __accu0__}());
export var exclude_patterns=[];
var s=Search.from_dict(body);
LB[i]<=x[i]&&x[i]<=UB[i];
logging.config.fileConfig(_log_config_location);
export var poly_verts=[tuple([2,2]),tuple([5,2.5]),tuple([6,8]),tuple([2,2])];
a*x*x+b;
chars+=len(word)+1;
var columns=list(set(columns));
var pixel=walnut.getpixel(tuple([x0,y0])).__getslice__(0,-1,1);
as_strided(A2[0],__kwargtrans__({shape:tuple([2,2,2]),strides:tuple([8,8,4])}));
HttpResponseBadRequest();
object_list.filter(__kwargtrans__({user:request.user}));
com.convert_robj(rdfrm);
p(10);
var __left0__=plt.subplots(1,1,__kwargtrans__({figsize:tuple([9,5])}));var fig=__left0__[0];var ax=__left0__[1];
print(s);
var y=np.cos(angle);
result.result;
var dates=function(){var __accu0__=[];for(var i of row_pos)__accu0__.append(df.index[i]);return __accu0__}();
app.MainLoop();
v_box.addWidget(self.list_one);
plt.colorbar();
export var BLUE_MAX=np.array([50,50,255],np.uint8);
export var FACTORY_FOR=Comment;
threading.Thread(__kwargtrans__({target:tail_forever,args:tuple([fn])})).start();
a.argsort();
var timestamp=time.mktime(foreign_dt).astimezone(pytz.utc).timetuple();
var L=sorted(zip(x,y),__kwargtrans__({key:operator.itemgetter(0)}));
var new_df=multiindex_me(mydf);
false;
bytearray(content.__getslice__(current_pos,final_pos,1));
spamwriter.writerow(row);
list(islice(iterable,n));
-.0121994;
var result=function(){var __accu0__=[];for(var item of get_list()||[])__accu0__.append(item*item);return __accu0__}();
[1,2];
newImage.paste(im,tuple([x1,y1,x1+old_width,y1+old_height]));
var image=ImageGrab.grab();
mymodule.myfunc();
export var single=function(){var __accu0__=[];for(var i of chain.from_iterable(combined))__accu0__.append(i);return __accu0__}();
mng.resize(...mng.window.maxsize());
print(parser.parse_args());
patch_distutils();
self.set_positions(tuple([xs[0],ys[0]]),tuple([xs[1],ys[1]]));
var words=string.py_split();
var py_keys=A.py_keys()&B.py_keys();
var __left0__=sock.recvfrom(1024);var data=__left0__[0];var addr=__left0__[1];
dis.dis(fr.f_code);
thingys.append(x);
wrapper;
var loop=asyncio.get_event_loop();
var line=line.rstrip().py_split(delimiter);
count_2.most_common();
var f=mux41(0,1,1,0);
var b=[4,5,6,7];
self.number_of_employee=number_of_employee;
export var max_list=group_list.map(reduce_by_max).collect();
print(f.read());
export var spl=function(){var __accu0__=[];for(var [x,y]of itertools.groupby(lst,function __lambda__(z){return z==w}))if(!x)__accu0__.append(list(y));return __accu0__}();
var data=f.readlines();
cls.D[t]();
get_something(a);
export var zvalues=f(xvalues,yvalues);
root.lift();
var dy=[.5,.5,.5];
self.obj=obj;
print(df1);
filehandle.truncate();
fig.subplots_adjust(__kwargtrans__({hspace:.1,wspace:.1}));
-ea;
export var xlock=threading.Lock();
gram_matrix;
a.append(5);
df.Name.str.contains(pat);
var df1=pd.DataFrame(d);
print(f());
pimage.putpalette(PALETTE);
dict({});
opener.add_handler(my_handler);
self.scrollbar.grid(__kwargtrans__({row:0,column:1,sticky:tuple([N,S,E])}));
var customer=models.CharField(__kwargtrans__({max_length:150}));
pyplot.show();
export var old_stdout_fileno=sys.stdout.fileno();
frame.pack();

random.shuffle(target);
arg(a,b,c);
Process(__kwargtrans__({target:loop_a})).start();
var app=QtGui.QApplication(sys.argv);
var grid=np.random.random(tuple([10,10]));
self.typemap=dict({});
s.close();
var idx=np.argmax(means);
var root=tree.getroot();
export var maxx=max(dic.py_values());
min(later,__kwargtrans__({key:function __lambda__(d){return get_datetime(d[0])}}));
self._add(val,self.root);
self.view.setDragDropMode(QtGui.QAbstractItemView.InternalMove);
_decorator;
var histo=gg.apply(function __lambda__(x){return x.count()});
arr[i]=get_something_from_database();
var X=np.arange(size);
var fn=sys.argv[1];
print_size(__kwargtrans__(dict));
signal.signal(signal.SIGHUP,handler);
var L=[1,1,2,2,2,2];
export var imported_modules=function(){var __accu0__=[];for(var m of modules_to_import)__accu0__.append([m,importlib.import_module(m)]);return dict(__accu0__)}();
A*x;
var clf=linear_model.LinearRegression();
var __left0__=np.histogram(x,__kwargtrans__({bins:num_bins}));var counts=__left0__[0];var bins=__left0__[1];
np.vectorize(d.__getitem__)(a);
export var existing_category=db.py_get(category_key);
print(clusters.shape);
ElementTree.dump(root);
var W=DFT_matrix(N);
os.mkdir(newdir);
var req=urllib.request.Request(path,mydata);
_autoargs;
false;
admin.autodiscover();
var x=dict(function(){var __accu0__=[];for(var row of cursor)__accu0__.append(tuple([row.SITE_NAME,row.LOOKUP_TABLE]));return py_iter(__accu0__)}());
export var chrome_options=webdriver.ChromeOptions();
f.subs(dict([[x,0]]));
conn.commit();
var title=models.CharField(__kwargtrans__({max_length:100}));
var df=df[df.date1==df.date2];
a[a>.7].min();
p.close();
var B=pd.Series(list(range(1,5)));
numpy.unravel_index(a.argmax(),a.shape);
export var figs=list(map(plt.figure,plt.get_fignums()));
var __left0__=find_image(im,tpl);var y=__left0__[0];var x=__left0__[1];
export var saver=tf.train.Saver();
export var gtk_dlls=[];
frame.Show(true);
export var IsoInB=0;
export var IsoOutA=0;
export var IsoOutB=0;
self.parser.set(self.py_name,attr,str(value));
logger.addHandler(ch);
var df=pd.read_csv(io.StringIO(temp),__kwargtrans__({names:list(range(10))}));
var mapping=dict(zip(lookup.__getitem__([tuple([0,null,1]),0]),list(range(len(lookup)))));
index+=1;
arr.__setitem__([i,j],arr.__getitem__([i,j])+1);
base_value*1/2.54;
var pos=nx.spring_layout(G);
print(is_new_style(old_style));
var A=np.random.uniform(0,2*np.pi);
var x=[[]]*4;
x.add_to_one(__kwargtrans__({b:9}));
self.console.pack(__kwargtrans__({fill:tk.BOTH}));
df;
obj.foo;
__in__(os.path.normpath(path1),list_of_paths);
self.button.clicked.connect(self.handleOpenDialog);
root.mainloop();

export var new_queue=OrderedDict();
profiler.runcall(self._handle,...args,__kwargtrans__(options));
self._advance();
m.set_array([]);
children.append(node.py_keys[i]);

export var recall=np.linspace(0,1,__kwargtrans__({num:42}));
print(os.strerror(e.errno));
export var observation=py_iter(data);
s.ix.__getslice__(x,y,1).asfreq(BDay());
var graph=fig.add_subplot(111);
sys.exit(1);
random.random()>=p;
var f=interpolate.interp1d(x,y);
py_false;
export var all_lines=infile.readlines();
export var functype=ctypes.CFUNCTYPE(restype,...argtypes);
self.matrix.__setitem__(index,item);
stackstr;
var title=models.CharField(__kwargtrans__({max_length:50}));
export var dif=np.setdiff1d(col,a.__getitem__([tuple([0,null,1]),0]));
[snip];
help(foo.myfunc);
export var incrementerBy2=Incrementer(2);
tuple([t2start,t1end]);
tuple([t1start,t2end]);
tuple([t1start,t1end]);
export var lu_obj=scipy.sparse.linalg.splu(a_sps);
sys.stdout=orig_stdout;
result.append(item);
print(estimate_pi(s1,s2));
var data=socket.gethostbyname(d);
plt.imshow(polar_grid,__kwargtrans__({extent:tuple([theta.min(),theta.max(),r.max(),r.min()])}));
ctx.load_verify_locations(__kwargtrans__({capath:sys.argv[2]}));
var __left0__=np.where(hist>0);export var xidx=__left0__[0];var yidx=__left0__[1];export var zidx=__left0__[2];
var t=Thread(__kwargtrans__({target:getabit,args:tuple([pobj.stdout,q])}));
httpd.serve_forever();
c.append(function(){var __accu0__=[];for(var [A,B]of zip(a[i],b[i]))__accu0__.append(A-B);return __accu0__}());
profs.append(user);
print(result);
self.arrays[j][i+shift];
var byte=f.read(1);
finder.apply_ngram_filter(creature_filter);
sleep(5);
var app=QtGui.QApplication(sys.argv);
new_user;
var vals=sorted(function(){var __accu0__=[];for(var i=0;i<1024;i++)__accu0__.append(tuple([sinval(i),i]));return py_iter(__accu0__)}());
sys.argv.insert(1,py_name);
thread.start();
array2.max();
print(function(){var __accu0__=[];for(var i of sentence.lower().py_split())if(!__in__(i,stop))__accu0__.append(i);return __accu0__}());
var __left0__=function(){var __accu0__=[];for(var n of L)__accu0__.append(fgen(n));return __accu0__}();var a=__left0__[0];var b=__left0__[1];var c=__left0__[2];
self.fn(...sub_args);
increment();
var K=np.arange(n-2);
s.send(l);
export var outline=np.array(list(dict(py_reversed(coords)).py_items())+list(dict(coords).py_items()));
var dt_sec=helper(dt);
print(json.loads(thing,__kwargtrans__({object_hook:object_hook})));
writer.save();
mktime(gmtime());
var im=ax.imshow(data);
container.__iter__();
print(repr(dt));
foo[1];
NEWLIST.append(i);
self.saver.save(self.session,fn);
output.write(left+new_delimiter.join(row)+right+newline);
s.add(i);
lc.set_linewidth(2);
self.temperature+=1;
__all__[py_name]=__import__(py_name);
b.extend(s);
[0,0,1,1];
ax2.xaxis.set_major_locator(copy.copy(Locator));
self.exec_();
(function(){var __accu0__=[];for(var l of combine(xs,ys))__accu0__.append(list_to_int(l));return __accu0__})();
logger.info(__name__);
Test.A;
var dist=np.sum(dist,__kwargtrans__({axis:1}));
var tree=dict({});
var match=pattern.match(s);
result.put(target(...args));
var width=self.canvas1.winfo_width();
var ax2=fig.add_subplot(222);
export var abspath=function __lambda__(){var p=tuple([].slice.apply(arguments).slice(0));return os.path.abspath(os.path.join(...p))};
f.write(py_next(rbg));
output.write(line);
self[self.nearest_key(key)];
var x=MyClass(...args,__kwargtrans__(kw));
afile.close();
var ax2=plt.subplot(gs[2]);
self.setPen(QPen(Qt.red,1.75));
var head=models.BooleanField(__kwargtrans__({py_default:true}));
var xml=doc.toprettyxml().__getslice__(len(declaration),null,1);
var sock=socket.socket(socket.AF_INET,socket.SOCK_STREAM);
p.append(tuple(k));
seen_add(element);
var url=urllib.parse.urlunsplit(url);
inst.__dict__[self.py_name];
post.save();
export var fLim=function(){var __accu0__=[];for(var x=1;x<8;x++)__accu0__.append(x/7);return __accu0__}();
(a+b+c^2-(a^2+b^2+c^2))/2;
var df=DataFrame(__kwargtrans__({data:list(result),columns:list(result.py_keys())}));
x-=1;
do_something_with(out);
var l=[0,1,1];
plot(1);
fruit[1]=int(fruit[1])+1;
var tree=parse(BytesIO(some_byte_string));
var logger=logger.YarnLogger();
2-1<0;
print(result.py_get());
export var inArray=np.asarray(inArray,__kwargtrans__({dtype:np.double}));
var data=function(){var __accu0__=[];for(var col=0;col<sheet.ncols;col++)__accu0__.append(sheet.cell_value(0,col));return __accu0__}();
var user=authenticate(__kwargtrans__({username:username,password:password}));
var y=np.random.random(10);
export var communication_set=CommunicationFormSet(request.POST,__kwargtrans__({instance:my_contact}));
a.set_xticklabels(a.get_xticks(),fontProperties);
true;
true;
var saver=tf.train.Saver(__kwargtrans__({sharded:true}));
instance.save();
var b=copy.copy(a);
var user=oauth.get_current_user(SCOPE);
var ax=fig.add_subplot(111);
var arr=numpy.arange(10);
var result=[];
product.listing.save();
output.addPage(page);
var ax=fig.add_subplot(111);
var dt=nofrag_dt.py_replace(__kwargtrans__({microsecond:int(frag)}));
var pos=np.arange(len(alphab));
self.save_object(sub_object);

ax.scatter(x,y);

more_settings.modify(__all__);
result.py_update(dict([[k,v]]));
deleteself.left.__getslice__(0,x,1);
export var doubles=dict();
line_dic[last].append(x);
OrderedDict();
export var df_confusion=pd.crosstab(y_actu,y_pred);
print(user.id,user.email);
os.utime(path,tuple([accessed_time,modified_time]));
var line=line.lower();
func.current_timestamp(__kwargtrans__({type_:types.Time,bind:engine2}));
false;
individual_dict[a.individual].append(a);
np.abs(stats_z)>2;
var result=pickle.load(infile);
parser._actions[0];
-libxml2-dev;
-libfreetype6-dev;
test.sin_2_(byref(x));
var pairs=set(function(){var __accu0__=[];for(var w1 of words)for(var w2 of prefixes[w1.__getslice__(1,null,1)])__accu0__.append(frozenset(tuple([w1,w2])));return py_iter(__accu0__)}());
export var condition=np.abs(x)<1;
console.log(String(i),String(i/10));
var intercept=np.ones(mX.shape[0]).reshape(mX.shape[0],1);
var Base=declarative_base();
touch(os.path.join(root,filename));
results.append(line);

export var ques_type=models.SmallIntegerField(__kwargtrans__({py_default:2}));
df[filter_col];
var state=models.CharField(__kwargtrans__({max_length:100}));
pp.imshow(matrix);
print(sum(1,1));
list(choice(j[user_input]).py_values())[0];
ofp.write(line);
(function(){var __accu0__=[];for(var [part1,part2]of zip(xs.__getslice__(1,null,2),xs.__getslice__(2,null,2)))__accu0__.append(part1+part2);return __accu0__})();
greetings.hello();
var a=np.array([[1,5,np.nan,6],[10,6,6,np.nan]]);
var soup=Soup(open(filename));
df;
var screen=curses.initscr();
var __left0__=py_next(py_iter(list(d.py_items())));export var tag=__left0__[0];var body=__left0__[1];
var app=current_app._get_current_object();
var fig=plt.figure();
var db=SQLAlchemy(app);
var test=Test();
map.seek(0);
print(py_typeof(self));
fig.canvas.draw();
print(a[167]);
export var n_rows=len(list(data.py_keys()));
out.println(msg);
var app=QtGui.QApplication(sys.argv);
dfs_rec(dict([[Sequence1,[Translate]],[Translate,[Sequence1]]]),Sequence1);
print(jsbeautifier.beautify(script.string));
child.sendline(user_password);
var session=Session();
var my_list=in_list.__getslice__(0,null,1);
random.seed(seed);
print(repr(profile));
contourf(X,Y,out);
var capture=cv.CaptureFromFile(filename);
var x=np.zeros(N,N);
export var DTYPE_f64=np.float64;
var c=pycurl.Curl();
B.shape;
np.linalg.matrix_rank(a);
print(match_obj.group(1));
dmap[d]!=dmap[newd];
export var COMPRESS_OFFLINE=false;
var __except0__=TimeoutException(message);__except0__.__cause__=null;throw __except0__;
export var non_unique_column_idx=npi.multiplicity(a,__kwargtrans__({axis:1}))>1;
x[-1];
d[k].append(v);
self.store.append(self.key,df,__kwargtrans__({data_columns:true}));
-next_up(-x);
enc.n_values_;
var __left0__=np.ogrid.__getitem__([tuple([0,n,1]),tuple([0,n,1]),tuple([0,n,1]),tuple([0,n,1])]);var a=__left0__[0];var b=__left0__[1];var c=__left0__[2];var d=__left0__[3];
s.setsockopt(socket.IPPROTO_IPV6,socket.IPV6_V6ONLY,1);
print(ind[A[ind]==value]);
var t=currT;
y.groupby((y!=y.shift()).cumsum()).cumcount()+1;
c.setopt(pycurl.TIMEOUT,10);
categories_w_rand_books.append(tuple([category,collection[category.id]]));
logging.info(line);
argrelmax(y)[0];
print(roundPartial(11.12,.25));
print(roundPartial(5.24,.25));
print(roundPartial(9.76,.25));
bodylist.append(tempset);
res;
var py_items=db.py_get(random_keys);
var __left0__=int_list;var a=__left0__[0];var b=__left0__[1];var c=__left0__[2];
export var rads=atan2(-dy,dx);
var bins=bins.__getslice__(0,-1,1)+(bins[1]-bins[0])/2;
var pixbuf=loader.get_pixbuf();
AT&F0;
time.sleep(.1);
tuple([[p.stdout,p.stderr]]);
sys.stdout.buffer.write(os.urandom(1E6).translate(tbl));
exampleName(row,column,py_name);
print(x);
var queryset=User.objects.all();
myfunc(...mylist);
[0,2,1];
set_.py_update(list(dict_.py_keys()));
plt.legend(__kwargtrans__({loc:0}));
export var sqsregion=sqsregion||SQSREGION;
pythoncom.PumpWaitingMessages();
print(k,v,x);
var a=np.random.random(100);
canvas.itemconfigure(interior_id,__kwargtrans__({width:canvas.winfo_width()}));
false;
print(res);
[];
var instance=SomeClass();
widget.hide();
configure_blueprints(app);
mail.quit();
self.lines.append(self.addLine(xc,0,xc,height,pen));
self.Bind(wx.EVT_TIMER,self.onTimer,timer);
[1,0,1];
print(a);
var ax2=fig.add_subplot(122);
df.columns=cols;
repr(d);
export var split_points=function(){var __accu0__=[];for(var [x,y]of split_points)__accu0__.append(tuple([x,y+1]));return __accu0__}();
ftp_handle.cwd(py_name);
cr.paint();
tuple([[0,0,0,0,0,0,162,1,162,2]]);
tuple([ET.ElementTree(root),ns]);
test_suite.addTest(suiteFilter.suite());
tuple([[false,true,true,true,true]]);
print(files);
[1,1,0,0];
var x=np.random.rand(m,n);
print(df1.date.dtypes);
InterfaceClass(iface.__name__,tuple([iface]),fields);
var b=Counter(0,1,1);
t.daemon=true;
scraps.save();
t.join();
numpy.fix(a).astype(int);
print(df);
do_work();
a.attr.append(1);
print(a+b);
slither/setup.py;
np.fill_diagonal(b,0);
dis.dis(use_floordiv);
print(retrieved_body);
export var newMtx=Mtx.__getitem__([tuple([0,null,1]),nonzero(s.T>0)[0]]);
groups.size().unstack();
export var unique=function(){var __accu0__=[];for(var u of urls)__accu0__.append(urlparse(u).netloc);return set(__accu0__)}();
setattr(cls,py_name,op_hook);
var response=self.client.py_get(url);
print(string2.__getslice__(match.b,match.b+match.size,1));
var __left0__=np.meshgrid(x,y);var X=__left0__[0];var Y=__left0__[1];
var X=np.random.normal(__kwargtrans__({size:tuple([10,5])}));
numpy.lib.stride_tricks.as_strided(a,__kwargtrans__({shape:shape,strides:strides}));
y.groupby((y!=y.shift()).cumsum()).cumcount();
print(word);
export var col2=matrix.__getitem__([tuple([0,null,1]),2]);
extractDefines(TEST4);
x.f();
export var seekpoint=fro.tell();
var y=np.arange(-1,1,.2);
var chapter=form.create(__kwargtrans__({parent:book}));
export var signal_axes=fig.add_subplot(211);
c();
var line=linecache.getline(filename,lineno,traceback.tb_frame.f_globals);
var layout=QtGui.QHBoxLayout();
export var row_as_dict=dict(row);
var client=client(url);
var idx=[val]+df.index.drop(val).tolist();
request.GET._mutable=false;
mydic[key]=[value];
list==[1,2];
a();
Py_Initialize();
my_content.append(data);
var args=parse.parse_args();
var x=np.arange(0,size,1,float);
create_ranges(start,stop,5,__kwargtrans__({endpoint:false}));
export var firstline=py_next(f).py_split();
var col_ind=function(){var __accu0__=[];for(var ids of list(d.py_values()))for(var i of ids)__accu0__.append(i);return __accu0__}();
var indices=function(){var __accu0__=[];for(var [i,x]of enumerate(ar))if(fnmatch.fnmatch(x,pattern))__accu0__.append(i);return __accu0__}();
export var mngr=plt.get_current_fig_manager();
export var new_labels=labels.__getslice__(2,null,1);
var l2=function(){var __accu0__=[];for(var a of l1)for(var i=0;i<len(a);i++)__accu0__.append(a.__getslice__(0,i+1,1));return __accu0__}();
var cipher=AES.py_new(key,AES.MODE_CBC,__kwargtrans__({IV:iv}));
df;
!array[0];
g+=a;
dG.add_node(word);
str(n);
var res1=numpy.array(list(zip(...zip_longest(...a,__kwargtrans__({fillvalue:0})))));
print(len(ids));
var scene=bpy.context.scene;
collection.set_facecolor(face_color);
spl.append([]);
var points=function(){var __accu0__=[];for(var _=0;_<1E3;_++)__accu0__.append(tuple([random(),random()]));return __accu0__}();
var vectors=np.random.rand(100,25);
raw_data+=bytes;
curses.setsyx(-1,-1);
od.py_setdefault(ele[0],[]).extend(ele.__getslice__(1,null,1));
z.close();
heapq.heapify(self._data);
export var y_coord=radius*np.sin(theta)*np.sin(phi);
false;
check_token;
var ax1=plt.subplot(2,1,1);
recvSock.setsockopt(socket.SOL_SOCKET,socket.SO_REUSEADDR,true);
var cursor=self.db.cursor();
out.append(A[0].__getslice__(0,null,-1));
session.expire_all();
var forced_managed=true;
var x=np.array([6.4,6.500000001,6.5,6.51]);
x.append(5);
result.append(word);
conn.quit();
var start=time();
f.cwd(DIRN);
var a=[];
x+=mydict.py_get(count,0);
tuple([x,y]);
var value=df.iloc[5];
var word_list2=sorted(word_list2,__kwargtrans__({key:itemgetter(1),reverse:true}));
print(i+- -+i);
tuple(v);
adobe_to_srgb(image);
QObject.__init__(self,...args,__kwargtrans__(kwargs));
var fig=plt.figure();
self.queue.put(message);
int(number/interval)*interval;
plt.draw();
np.all(x.__getitem__([idx,J,I])==y);
var v=[1,4,5];
var root=Tkinter.Tk();
my_secure_rng.randrange(n,m);
a[inds][mask];
lib/nark;
cashflow;
p.print_help();
application.main.show();
export var colorjh=jmag-hmag;
var map=mmap.mmap(f.fileno(),0,__kwargtrans__({prot:mmap.PROT_READ}));
print(list(squares(5,50)));
export var killer=GracefulKiller();
var worksheet=workbook.add_worksheet();
plotlyjs;
split_string.append(identifier.__getslice__(previous,match.start(),1));
d[x[4]];
f.seek(0);
self.app=MyApplication(param1,param2).getApplication().test_client();
example();
requests_logger.setLevel(logging.DEBUG);
var packet=ip.assemble(ip_packet,0);
df1.columns=df1.columns.droplevel(__kwargtrans__({level:1}));
sim.start();
url_pattern.findall(urls);
print(df);
dataframe[column].value_counts().index.tolist();
var z=list(zip(t,t2));
lookup[key(item)].append(item);
export var property2=ndb.StringProperty();
var dt=nofrag_dt.py_replace(__kwargtrans__({microsecond:int(frag)}));
var b=np.array([a]);
var fig=plt.figure();
2*x;
json.dump(data,jsonfile);
self.end_headers();

var part_number=models.CharField(__kwargtrans__({max_length:10}));
print(df);
export var closest_keys=function(){var __accu0__=[];for(var [k,v]of list(d.py_items()))if(abs(v-target)==min_diff)__accu0__.append(k);return __accu0__}();
main(sys.argv);
export var your_domain=Site.objects.get_current().domain;
var args=[py_iter(iterable)]*n;
"./P2JSnippets.py";
var img=img.smooth();
var b=np.random.randint(l,__kwargtrans__({size:k}));
lay.addWidget(le);
export var setd2=set(d2);
lst.py_sort(__kwargtrans__({key:weight_key}));
response;
defaultdict(ddict);
pprint(data);
var b=[4,5,6];
var server=BaseHTTPServer.HTTPServer(server_address,TestHandler);
export var imputed_array=np.copy(arr);
var s=requests.Session();
[mysqld];
var r=list(csv.reader(file_obj));
B.shape;
export var overlay=mask*image1+-mask*image2;
var match=re.match(regex,thestr);
var dct=dict({});
self.a=a;
out_csv.writerows(in_txt);
results.append(word_length);
self.__fill_left();
p.join();
result+=Data.__getitem__([,0]);
export var ranking=[];
var app=QtGui.QApplication([]);
ax.add_patch(sea_patch);
var buf=StringIO.StringIO(req.read());
(function(){var __accu0__=[];for(var x=0;x<count;x++)__accu0__.append(fn(...args,__kwargtrans__(kw)));return __accu0__})();
~reduce(np.logical_and,map(pred,list(range(A.shape[1])))).any(__kwargtrans__({axis:1}));
successed+=1;
curses.endwin();
var movie=input();
d2[key]=d1[key];
Py_XDECREF(result);
var trainer=DeepBeliefTrainer(net,__kwargtrans__({dataset:dataSet}));
HTTPFound(__kwargtrans__({location:request.application_url}));
daemon_runner.do_action();
[1,0,0,0];
var count=0;
export var progname=sys.argv[0];
newlist.append([alist[i]]);
var X=np.c_.__getitem__([x,np.ones_like(x)]);
var a=np.random.rand(N,N);
zip(...args);
var d=json.loads(j);
sum_chunk(a,2);
ax.hold(true);
curses.resizeterm(y,x);
print(int_no);
rtn_words.append(word_without_exclamation);
plt.bar(bins.__getslice__(0,-1,1),hist,widths);
Response(url,response.status_code,dict({}),response.content);
mm.stop();
zipwrite.writestr(item,data);
layout.addWidget(self.output);
print(a);
random.choice(animals);
JSONEncoder().encode(YourModel.all().fetch());
var combs=[];
print(test.vec()[0]);
Math.pow(Math.pow(t,2)+4,2)/16;
ret;
var py_items=[];
etree.tostring(t);
export var first_arg=sys.argv[1];
export var HAVE_CYTHON=true;
df.as_matrix();
var M=M[M.getnnz(1)>0];
var Z2=function(){var __accu0__=[];for(var k=0;k<10;k++)__accu0__.append(np.dot(X[k],Y[k]));return __accu0__}();
var fixed=function(){var __accu0__=[];for(var [pos,item]of enumerate(py_items))if(item.freeze)__accu0__.append(tuple([pos,item]));return __accu0__}();
var group=Group.objects.py_get(__kwargtrans__({pk:1}));
seen_add(k);
var temp=my_array.__getitem__([tuple([0,null,1]),0]);
getline(cin,input_line);
list.__setitem__(self,i,x);
f.close();
var data=client.recv(1024);
ax.add_patch(clip_path);
a[slice(...a.nonzero()[0].take([0,-1]))]=true;
var f=numpy.vectorize(f);
var char=screen.getch();
export var discoverer=GstPbutils.Discoverer();
game.main();
d[key].append(word);
var resp=urllib.request.urlopen(req);
word.lower()==word.lower().__getslice__(0,null,-1);
export var not_index=np.array(function(){var __accu0__=[];for(var k=0;k<n_b;k++)if(!__in__(k,index))__accu0__.append(k);return __accu0__}());
export var column_label=gtk.Label(column_title);
var app=QtGui.QApplication(sys.argv);
var __left0__=plt.subplots(1,1);var fig=__left0__[0];var ax=__left0__[1];
export var color_data=np.random.random(tuple([numframes,numpoints]));
export var rot_sprite=pygame.transform.rotate(image,angle);
var results=function(){var __accu0__=[];for(var length of b)__accu0__.append(list(islice(c,length)));return __accu0__}();
time.sleep(5);
mainDlg.Show();
export var bands=im.py_split();
var result=f(...args,__kwargtrans__(kargs));
layout.addWidget(vline);
var y=np.array([-2,-1,0,1,2]);
var count=0;
var n=s*Math.pow(zp+z,2)/Math.pow(d,2);
main();
var axis=fig.add_subplot(111);
var value=4294967295;
app.py;
p.start();
outfile.write(__mod__(format,[i]+row));
ch.setLevel(level);
Counter(chain.from_iterable(linewords));
self.fields[str(f.id)]=forms.BooleanField(__kwargtrans__({initial:false,required:false}));
var http=httplib2.Http();
file.close();
var total=0;
print();
var page=opener.open(uri);
self.alertParent(str(key),str(item));

btn.bind(__kwargtrans__({on_press:partial(self.foo,btn)}));
var vals=list(range(1,2E3));
quad(integrand,0,1E3);
writer.writerow(newrow);
var df=DataFrame(dict(function(){var __accu0__=[];for(var [k,v]of list(food2.py_items()))__accu0__.append(tuple([k,Series(v)]));return __accu0__}()));
var buffer=f.read(1024);
var data=pandas.DataFrame(y);
shlex.py_split(text);
print(tds[0].text);
pprint.pprint(d);
plt.close(fig);
export var arr_2=np.array([false,true,false,true]);
var mime_msg=email.message_from_string(msg_str);
export var peaking=np.random.random()<alpha;
var result=dict(mainDict);

var number=sorted(number,__kwargtrans__({reverse:true}));
var py_name=cls.__name__;
layout.addWidget(picture);
export var x0s=imsize*np.random.random(ng);
fs.add_file(file);
var c=np.zeros(tuple([a.shape[0],b.shape[1]]),__kwargtrans__({dtype:DOUBLE}));
var df=pd.DataFrame(my_data,__kwargtrans__({dtype:str}));
print(foo);
bytes.close();
os.chdir(command[input][0]);
export var etime=time.mktime(time.strptime(end,format));
var new_im_vec=new_im.flatten();
false;
var t=threading.Thread(__kwargtrans__({target:self.receive}));
old_init(self,...args,__kwargtrans__(kwargs));
var l=[];
print(Counter(contents));
string;
L.__code__.co_filename;
smtpd.SMTPServer.__init__(...args,__kwargtrans__(kwargs));
dis.dis(afunc);
var __left0__=parser.parse_args();var options=__left0__[0];var args=__left0__[1];

output.add(x);
ptr[2]=color[2];
print(i);
var frame=pd.DataFrame();
len(word)>length?word.capitalize():word;
var ax=fig1.add_subplot(111);
self._bymonthday+self._bynmonthday;
print(py_name);
var all_keys=set(chain.from_iterable(dict_list));
sys.exit();
typing.get_type_hints(Node.__init__);
a.size;
var updated=request.GET.copy();
var __left0__=numpy.histogram(a,__kwargtrans__({bins:100,density:true}));var counts=__left0__[0];var bins=__left0__[1];
var loop=asyncio.get_event_loop();
cv2.drawContours(mask,[best_cnt],0,255,-1);
var y=x.__getslice__(1,5,1);
var __left0__=s.accept();var conn=__left0__[0];var addr=__left0__[1];
var root=tk.Tk();
print(df);
response;
my_df.reset_index(__kwargtrans__({inplace:true}));
export var row_json=json.dumps(row);
print(stealth_check[stealth_roll]);
arr.py_keys;
export var ivalue=Column(Integer);
SimpleXMLRPCServer.SimpleXMLRPCServer.__init__(self,...args,__kwargtrans__(kw));
self.load_results();
np.dot(x,y)/(np.linalg.norm(x)*np.linalg.norm(y));
print(totals.argsort());
n-1;
numOfRuns+=1;
plt.subplot(211);
var parser=argparse.ArgumentParser();
b.foo();
self.window=gtk.Window(gtk.WINDOW_TOPLEVEL);
print(get_image_info(data));
dir();
IedConnection_getServerDirectory.restype=c_int;
var seen=function(){var __accu0__=[];for(var row of r)__accu0__.append(tuple([row[0],row[2]]));return set(__accu0__)}();
show_strings.visit(root);
print(df.dtypes);
df;
1128;
last_inner_append(cont[-1],el);
object.__setattr__(self,attr,value);
panel.draw();
sys.exit(1);
df;
print(random_list);
export var sps_acc=sps.coo_matrix(tuple([rows,cols]));
[1,0,1,1];
db.session.commit();
print(pos,word.lower());
pipdeptree;
__mod__(n,lcm20)==0;
ax.xaxis.set_major_formatter(EpiCycleScalarFormatter());
print(msg);
export var label_sequences=[[0,1,0],[1,0],[1,1,1]];
ctx.set_verify(VERIFY_PEER|VERIFY_FAIL_IF_NO_PEER_CERT,self.verifyHostname);
atexit.register(cleanup);
var a=sin(x);
self.assertCountEqual(self.result,self.expected);
print(time.time()-start);
var root=Tkinter.Tk();
var __left0__=np.histogram2d(x_axis,y_axis,__kwargtrans__({bins:10,weights:z_axis}));var H=__left0__[0];var xedges=__left0__[1];var yedges=__left0__[2];
var lens=np.array(function(){var __accu0__=[];for(var i of data)__accu0__.append(len(i));return __accu0__}());
list(islice(c,size));
(function(){var __accu0__=[];for(var group of np.py_split(S.data,S.indptr.__getslice__(1,-1,1)))__accu0__.append(func(group));return __accu0__})();
gc.enable();
2-1.781216;
print(tuple([first_string,second_string,third_string]));
np.set_printoptions(1);
plt.plot(xf.__getslice__(1,null,1),2/N*np.abs(yf.__getslice__(0,N/2,1)).__getslice__(1,null,1));
export var cv2image=cv2.cvtColor(img,cv2.COLOR_BGR2RGBA);
a===a.astype(int);
var fig=plt.figure();
s[0]*s[1]+s[2];
print(isCircular(bigList,bigList2));
var toss2=np.array(toss);
image.paste(outline,__kwargtrans__({mask:mask}));
var dist=sqrt(sum(function(){var __accu0__=[];for(var x of hist_sel-hist)__accu0__.append(x*x);return __accu0__}()));
var jar=cookielib.CookieJar();
export var df_running=df_change.cumsum();
self._data_filter.py_update(attr_dict);
max(SubDirPath(d),__kwargtrans__({key:os.path.getmtime}));
PySys_SetArgv(argc,argv);
xmlhttp.send();
export var badtuple=tuple(badlist);
-1;
self.get_year_sales(datetime.now().year);
var __left0__=cv2.threshold(img,200,255,cv2.THRESH_BINARY_INV);var retval=__left0__[0];var img=__left0__[1];
var df2=df.apply(pd.to_timedelta);

var l=list(range(1,10));
check(my_list.__getslice__(start+1,null,1),__kwargtrans__({tracking:tracking}));
var a=numpy.float64(numpy.nan);
Xi[0]=Yf[0];
var d=defaultdict(int);
tuple([1]);
var channel=connection.channel();
tuple([_unpickle_method,tuple([func_name,obj,cls])]);
self.peercert=self._connection.sock.getpeercert();
ax.plot([-1,0,1,2],list(range(4)));
foo.db;
f.write(req.content);
s.close();
present-datetime(2E3,4,4);
(new set([2,4])).issubset(chain.from_iterable(x));
data.boxplot();
all(function(){var __accu0__=[];for(var x of ls)__accu0__.append(__in__(x,mystr));return py_iter(__accu0__)}());
buffer;
export var program=tuple([tapjoy-game1,tapjoy-game2]);
print(row[col]);
self.previewImage=QtGui.QLabel(self);
menu.addAction(a);
t1.start();
var group=np.zeros(tuple([len(py_values[0])]),__kwargtrans__({dtype:np.int64}))-1;
Session.query(Record.id,Record).filter(Record.id.between(chunk[0],chunk[-1]));
array([100,1E3,1E4,1E5,1E6,1E7,1E8,1E9]);
root.attrib;
process(chunk);
var f=list(function(){var __accu0__=[];for(var l of a)if(t[0]<=int(l[0])&&int(l[0])<t[1])__accu0__.append(l);return __accu0__}());

print(f);
np.ndarray(arr.shape,dtype2,arr,0,arr.strides);
var py_name=db.Column(db.String,__kwargtrans__({nullable:false}));
np.bitwise_and.reduce(c)==c[0];
f.flush();
var regex=re.compile(regex_txt,re.IGNORECASE);
User.delete_auth_token(user_id,token);
var b=np.array([2,4]);
self.thread.start();
var z=np.logical_or(y,rolled);
process.start();
surf.write_to_png(image_file);
var fig=figure(__kwargtrans__({figsize:tuple([6.5,12])}));
example();
var top=curses.newwin(1,10,0,0);

export var singlet_list=[];
var html=browser.open(url);
var prod=function(){var __accu0__=[];for(var i of lst)__accu0__.append(i*5);return __accu0__}();
parser.print_help();
print(wow);
var id=sa.Column(sa.Integer,__kwargtrans__({primary_key:true}));
var cb=plt.colorbar(im);
bv[0]=1;
var d=dict({});
(function(){var __accu0__=[];for(var k of list(d.py_keys()))if(!d[k])__accu0__.append(k);return __accu0__})();
update_index.Command().handle();
cursor.execute(query_string,query_args);
self.old_handler(...self.signal_received);
ax.legend();
export var firstname=Column(String(50));
dataBitMap.CreateCompatibleBitmap(dcObj,w,h);
cmyk[i].__setitem__([x,y],cmyk[i].__getitem__([x,y])-gray);
x+1;
max_indices.append(i);
export var coll=Elasticsearch();
var env=Environment();
var foo=threading.Event();
var ax=plt.gca();
loop.run_until_complete(client_handler(CTX));
var __left0__=ax.contourf(x,y,z,500);var cont=__left0__[0];
self.root=tk.Tk();
doWork();
var d=QtGui.QDialog(self);
od.py_setdefault(n,[]).append(s);
process.communicate();
var ax=fig.add_subplot(111);
dill.detect.trace(true);
g.output(index);

test(100,50,11);
np.array([np.cos(r),np.sin(r)]);
var output=[6,4,2,2,1,1];
atexit.register(DataBase.close_database);
false;
l[t[0]]=dict({});
help(cv2.HOGDescriptor());
main();
export var plot=fig.add_subplot(111);
var f=self[py_name]._fields.py_get(ftmp);
print(get_decorators(Foo));
lons.append(float(row[2]));
var __left0__=np.linalg.svd(a);var u=__left0__[0];var s=__left0__[1];var v=__left0__[2];
psutil.Process(doc.pid).get_children()[0].kill();
f();
var __left0__=resource.getrlimit(rsrc);export var soft=__left0__[0];export var hard=__left0__[1];
var data=np.where(df.sign==1)[0];

Employee.__init__(self,py_name,wage*26);
var axes=plt.subplot(gs.__getitem__([1,0]));
export var deltas=np.diff(data);
np.array(function(){var __accu0__=[];for(var axs of x2_Kaxs_2.flat)__accu0__.append(ax2_cid[axs]);return __accu0__}(),__kwargtrans__({dtype:object})).shape;
var soup=BeautifulSoup.BeautifulSoup(s);
self.flush();
var date=datetime.now(__kwargtrans__({tz:pytz.utc}));
var obj=c();
var ax=fig.add_subplot(111);
tuple([tuple([])]);
export var output_dim=len(y_train[0]);
self._dynprop=value;
view1[1]=5;
var sum_a=list(map(sum,a));
var writer=csv.writer(outfile);
var ax=s.cumprod().plot();
var user=request.user;
seq.__setslice__(start,end,null,replacement);
f.write(opener.open(request).read());
math.floor(1.5);
var req=urllib.request.Request(starturl,datagen,headers);
print(Dog().speak());
var ssh=paramiko.SSHClient();
np.array(lst);
var queryset=models.Bloop.objects.all();
socket.setdefaulttimeout(timeout);
np.arange(n)[b.__getslice__(0,-1,1)].repeat(np.diff(b));
true;
self.SetSizer(box_sizer);
self.finish();

g.edges();
email.send();
plt.show();
var chunk=py_next(self);
s.add(el);
pool.close();
ys[0]+(x-xs[0])*(ys[1]-ys[0])/(xs[1]-xs[0]);
pl.imshow(z2,__kwargtrans__({extent:[-5,5,-5,5],alpha:.5}));
self.map=dict({});
sys.modules[py_name]=mod;
hdu.writeto(filename);
bool(0);
sign*np.exp(logdet);
calendar.day_name[my_date.weekday()];
server_B_thread.start();
res.append(tuple([x-1,x,x+1]));
df;
signal.alarm(0);
shutil.rmtree(instance.repo);
var data=self.leftover;
self.increment_counter();
print(int((t2-t1).seconds));
bytes(function(){var __accu0__=[];for(var [i,c]of enumerate(byt))__accu0__.append(c^mask[__mod__(i,lmask)]);return py_iter(__accu0__)}());
l.append(b);
tuple([y,x-a/b*y]);
Line2D([0,1],[0,1],__kwargtrans__(__mergekwargtrans__({color:color},kwargs)));
self.rect.top+=self.dir.y*SPEED;
export var proxy_client=SSHClient();
k.press_key(k.left_key);
loop.run_forever();
self.count=0;
print(response.code);
a[index];
self.allClasses=[];
reportlab.platypus.Flowable.__init__(self);
var res=df[df.cluster>=0];
pytz.all_timezones;
set([8,9])&a;
print(slice_coords_by_x(2,4,coords));
Dict[wn+1]=function(){var __accu0__=[];for(var k=0;k<7;k++)__accu0__.append((d+timedelta(__kwargtrans__({days:k}))).isoformat());return __accu0__}();
tuple([_chord.AsyncResult(callback_id),r]);
logging.getLogger(LOG_AREA1).addHandler(stdoutHandler);
pdf.savefig();
list(gen);
pprint.pprint(build_structure(jdata));
t.start();
lcms.cmsCloseProfile(outprof);
export var bigrange=tf.range(-1,rank+1);
print(sum(function(){var __accu0__=[];for(var x of sq_inc)__accu0__.append(x/2);return py_iter(__accu0__)}()));
export var my_norm=matplotlib.colors.Normalize(vmin,mmax);
df;
var node=node.__next__;
var args=parser.parse_args();

plt.show();
print(name_age.py_name);
sum(function(){var __accu0__=[];for(var e of l)__accu0__.append(bool(e));return py_iter(__accu0__)}())==1;
export var CUDA_TRACE=false;
result+=int(i);
np.core.defchararray.add(a1,a2);
self.i;
print(a);
output.stdout;
hash(s);
z2.namelist();
var opener=urllib.request.build_opener(urllib.request.HTTPHandler(__kwargtrans__({debuglevel:1})));
export var num_ones=(y==1).sum();
my_mesh.EndPolygon();
export var laparams=LAParams();
zip(a,b);
text+=elem.strip();
var __left0__=plt.subplots(1,2);var fig=__left0__[0];var ax1=__left0__[1][0];var ax2=__left0__[1][1];
print(data);
view.show();
f.close();
var row=curs.fetchone();
result.save();
do_things(test_image);
zip_longest(...args,__kwargtrans__({fillvalue:fillvalue}));

takewhile(function __lambda__(x){return x<=max},numbers);

arr[mask]=np.nan;
export var standardized_data=StandardScaler().fit_transform(your_data);

pyplot.gca().add_patch(circle);
set(l1).difference(l2);
server_socket.listen(5);
Method(self,key);
print(r.content);
self._canvas.place_forget();
var email_body=data[0][1];
var a=argparse.ArgumentParser();
[0];
Math.pow(u-v,2)*self._norm;
var __left0__=tuple([list[0],list[1],list.__getslice__(2,null,1)]);var a=__left0__[0];var b=__left0__[1];var rest=__left0__[2];
var code=Column(String(20));
var register=template.Library();
map(function __lambda__(p){return myFunc(p,additionalArgument)},pages);
unittest.main();
var start=Math.floor(len(my_list)/2);
str(self.to_dict());
var s=str(n);
time.sleep(0);
Model.objects.filter(Q(__kwargtrans__({m2m_field:1}))&Q(__kwargtrans__({m2m_field:2})));

ZZ.old_poly_ring(x).quotient_ring([Math.pow(x,2)]);
plt.plot(...zip(...testList2));
1<<len(self.array);
var b=np.arange(10);
export var series2=series1.__getslice__(0,null,-1);
sleep(.5);
_iterencode(o,0);
self.files=[];
self.city=city;
t.start();
var ax1=fig.add_subplot(211);
var root=Tk();
var p=subprocess.Popen(cmd,__kwargtrans__({stdout:subprocess.PIPE}));
export var olist=function(){var __accu0__=[];for(var j=0;j<n;j++)__accu0__.append(Foo());return __accu0__}();
print(data);
export var sourcelines=inspect.getsourcelines(cls)[0];
layout.addWidget(self.label);
var queryset=User.objects.all();

var b=np.random.rand(1E3);
ax.plot([1],[1]);
model.sample(1E4);
var p=Process(__kwargtrans__({target:f,args:tuple([num,arr])}));
var password=str(random.getrandbits(8E3));
client.on_message=on_message;
var df=df[~(df==0).any(__kwargtrans__({axis:1}))];
var slug=models.SlugField(__kwargtrans__({max_length:255}));
var ax=fig.add_subplot(111);
np.take(np.cumsum(np.log(np.arange(1,m+1))),n-1);
export var upper_color=np.array([color+sensitivity,255,255]);
print(k);
queue.put(line);
print(line);
G.add_edge(subject_id,object_id,__kwargtrans__({weight:1}));
var result=list(some_complex_algo(source_data));
plt.plot(x,y);
var x=np.arange(9);
var fig=plt.figure();
var aa=arr.ctypes.data_as(ctypes.POINTER(ctypes.c_ubyte*len(str_bytes)));
export var as_list=list(ast.literal_eval(args));
self.__dict__.py_update(new_self.__dict__);
export var cal_window=gtk.Window(gtk.WINDOW_TOPLEVEL);
var newlist=mylist.__getslice__(2,-2,1);
self.widget(field,__kwargtrans__(kwargs));
var mask=np.hstack(tuple([true,np.diff(lid[sidx])!=0,true]));
turtle.goto(x,y);
BaseObject.initialized;
main();
im.wcs;
export var X_train_to_add=X_masked.__getitem__([indices_to_add,tuple([0,null,1])]);
col.set_color(color);
lst.__setslice__(0,null,null,list(range(1,4)));
var x=np.linspace(-1,2,151);
digits.append(digs[__mod__(x,base)]);
var seen=set();
var df=DataFrame(__kwargtrans__({index:list(range(5))}));
leglines.append(legline);
ax.set_ylim(y_min,y_max);
db.session.commit();
random.seed(x[0][0]);
print(sqrt(diag(cov)));
fp.close();
cls(__kwargtrans__(d));
r.close();
mat.__setitem__([tuple([0,null,1]),diag[0],diag[1]],numpy.nan);
var min_value=df[feature_name].min();
module;
setattr(cls,py_name,wrap_method(cls,py_name));
writer.add_document(__kwargtrans__({spelling:item.Title}));
f.readline();
export var col_index=np.isnan(a).argmin(__kwargtrans__({axis:1}));
var lines=function(){var __accu0__=[];for(var row of lines)__accu0__.append(tuple([int(row[0]),row[1]]));return __accu0__}();
var s=List();
self.object.get_absolute_url();
setattr(obj,self.py_name,result);
export var DA=pd.DataFrame(A).T;
pool.close();
var __left0__=self._treeView.get_cursor();var path=__left0__[0];var _=__left0__[1];
var links=linkregex.findall(str(msg));
export var text_list=[];
func();
vline.set_xdata(tuple([x,x]));
b1.pack();
[1,1];
export var row1=py_next(reader);
export var preparser=argparse.ArgumentParser(__kwargtrans__({add_help:false}));
mf.close();
var author=models.ForeignKey(Author);
batch.add(service.animals().list(),__kwargtrans__({callback:list_animals}));
export var lr2=clone(lr1);
print(ftp.getwelcome());
var x=x.rstrip();
var obj=self.__dict__.py_get(key);
var ID=Column(types.Integer,__kwargtrans__({primary_key:true}));
export var board=function(){var __accu0__=[];for(var x=0;x<n;x++)__accu0__.append(function(){var __accu1__=[];for(var x=0;x<n;x++)__accu1__.append(0);return __accu1__}());return __accu0__}();
var s=ttk.Style();
export var init_b=min(y);
shutil.rmtree(d);
numpy.flatnonzero(lst>a&lst<b).__getslice__(0,10,1);
print(item);
var cookies=driver.get_cookies();
Session.begin();
Test.static_method();
df[df.B==B_maxes];
df.dtypes;
var content_type=models.ForeignKey(ContentType);
self.show();
t[-1][1];
XGBClassifier(grid);
pickle.dump(obj,fh);
x.add(2);
ordered.append(t);
np.argsort(p);
export var max2here=pd.expanding_max(ser);
obj.user_set.count();
var array2=np.empty(tuple([20,20])+array1.shape,__kwargtrans__({dtype:array1.dtype}));
self.store.insert(i,tuple([key,value]));
var a1=A.objects.create();
export var axe=fig.add_subplot(111);
print(df);
ids.append(int(x));
Grid.columnconfigure(frame,0,__kwargtrans__({weight:1}));
event.accept();
var logger=logging.getLogger(__name__);
self._value=val;
var x=function(){var __accu0__=[];for(var k of list(d.py_keys()))if(d[k]==1)__accu0__.append(k);return __accu0__}();
P.show();
output.write(outputStream);
var lines=my_file.readlines();
health<max_meath||armor<enemy.attack&&enemy.attack<attack&&attack>enemy.defense;
var d=datetime.utcnow();
var a=function(){var __accu0__=[];for(var f=0;f<n;f++)__accu0__.append(str(f));return __accu0__}();
var a=np.random.randint(2,__kwargtrans__({size:tuple([1E4,6])}));
var a=[];
foo==bar;
pyplot.show();
var config=configparser.ConfigParser();
export var fullpath=os.path.join(path,...paths);
cmd.Cmd.__init__(self);
var xidx=(raw.__getitem__([tuple([0,null,1]),0])-xrange[0]).astype(int);
var py_keys=pygame.key.get_pressed();
var k=__mod__(k+1,len(l));
zip(...[chain(iterable,repeat(padvalue,n-1))]*n);
print(npdata);
var window=Gtk.Window();
export var youget=the_idea;
BOOST_PYTHON_MODULE(get_dir_list);
var b=function(){var __accu0__=[];for(var i=0;i<a.shape[2];i++)__accu0__.append(numpy.vstack(tuple([a.real.T[i],a.imag.T[i]])));return __accu0__}();
a===a[0];
self.x=0;
plt.show();
repo.heads[0].commit.message;
var event=models.ForeignKey(Event);
change_request.save();
a+b;
outputStream.close();
log.put();
x+y;
freq+=lemma.count();
var y=data.__getitem__([tuple([0,null,1]),1]);
var result=pd.DataFrame.from_records(data).mean().to_dict();
self.user=user;
var X=np.ascontiguousarray(X);
export var n_neighbors=tree2.count_neighbors(tree1,__kwargtrans__({r:4.2}));
t*b+a;
memset(id(s)+offset,0,len(s));
var total=sum(counts.py_values());
export var image_string=cStringIO.StringIO(base64.b64decode(rawbase64));
sum(function(){var __accu0__=[];for(var [i,c]of enumerate(self.coef))__accu0__.append(c*Math.pow(x,n-i));return py_iter(__accu0__)}());
print(datetime.datetime.now());
export var joe=tuple([py_name,age,location]);
self.__dict__[key]=item;
var result=[];
print(df);
print(asizeof.asizeof(list(range(N)))/N);
list(x);
var retcode=cmdp.wait();
min(bar);
app.deleteLater();
var root=Tk();
var boo=Boo();
particles1.move();
export var reviewURL=scrapy.Field();
var a=numpy.array([-128,-1,0,1,127],__kwargtrans__({dtype:numpy.int8}));
var dists=sklearn.metrics.pairwise.manhattan_distances(r);
export var percentiles=function(){var __accu0__=[];for(var i of data)__accu0__.append(percentileofscore(data,i));return __accu0__}();
rv.append(tuple([labels[x[0]],x[1]]));
s.commit();

var key=pygame.key.get_pressed();
self.buttons.rejected.connect(self.reject);
var __left0__=minloc;var x=__left0__[0];var y=__left0__[1];
var key=cv2.waitKey(20);
var db=SQLAlchemy(app);
fig.colorbar(cax);
var here=os.path.dirname(os.path.abspath("./P2JSnippets.py"));
len(_);
df1.sort_index(__kwargtrans__({axis:1,level:1,inplace:true}));
print(function(){var __accu0__=[];for(var [k,val]of list(od.py_items()))__accu0__.append([k]+val);return __accu0__}());
df;
sns.heatmap(df);
var app=QtWidgets.QApplication(sys.argv);
var writer=csv.DictWriter(csvfile,fieldnames);
export var image1=Image.open(f);
export var outlist=function(){var __accu0__=[];for(var k of mylist)if(!__in__(k[1],other))__accu0__.append(k);return __accu0__}();
var b=cv2.erode(b,element);
export var dfc=df.copy();
fn;
max(seq);
var s=requests.session();
os.dup2(so.fileno(),sys.stdout.fileno());
var __left0__=sklearnAUC(Y_test,Y_pred);export var auc1=__left0__[0];export var auc2=__left0__[1];
var args=parser.parse_args();
settings.py;
np.argsort(arr+np.random.rand(...arr.shape));
self._list=list();
var vec=DictVectorizer();
var c=a[b];
dot(v1,v2);
user_lon>this_lon-omega&&user_lon<this_lon+omega;
root.mainloop();
main();
print(t.timeit());
root.withdraw();
print(dt.timedelta(__kwargtrans__({seconds:__mod__(hms.seconds,resolution.seconds)})));
var response=conn.getresponse();
print(x);
print_node(node);
var one_week=604800;
py_items.issubset(set([1,2]));
base_classes.Bookcollection=Bookcollection;
observer.start();
false==0;
self.server.shutdown();
var b=np.cumsum(a);
df;
self.idle();
var __left0__=np.mgrid.__getitem__([tuple([0,10,1]),tuple([0,10,1])]);var i=__left0__[0];var j=__left0__[1];
var item=db.py_get(key);
kl.setMath(f.getBody());
export var word_set=set(word_list);
row.append(mapper[row[1]]);
var now=datetime.now();
x.__setslice__(1,null,null,x.__getslice__(1,null,1)*(m.__getslice__(0,-1,1)<m.__getslice__(1,null,1)));
self.takeItem(self.row(item));
var opener=urllib.request.build_opener(urllib.request.HTTPCookieProcessor(cookiejar));
tuple([true,s.__getslice__(1,null,1)]);
a.__setitem__([0,tuple([0,null,1]),tuple([0,null,1])],b);
var x=-1.1111;
var py_values=function(){var __accu0__=[];for(var _=0;_<n;_++)__accu0__.append(random.randint(1,100));return __accu0__}();
var opener=urllib.request.build_opener(BindableHTTPHandler);
self.setFlag(QGraphicsItem.ItemIsMovable);
pd.DataFrame(__kwargtrans__({data:dct})).T.reset_index();
[x[0]]+f(function(){var __accu0__=[];for(var m of x)if(len(m)!=len(x[0]))__accu0__.append(m);return __accu0__}());
var cursor=connection.cursor();
f.seek(0);
var t=list(range(len(x)));
prepdf.xs(sheet).to_excel(writer,sheet_name);
var __left0__=tuple([x2-x1,y2-y1]);var dx=__left0__[0];var dy=__left0__[1];
time.sleep(snooze);
export var header_cell=sheet.cell(__kwargtrans__({row:1,column:j}));
print(l);
var q=multiprocessing.Queue();
var n=sum(function(){var __accu0__=[];for(var line of pd.read_csv(filename))__accu0__.append(1);return py_iter(__accu0__)}());
print(log_contents.lower());
deleteself.thisptr;
var soup=BeautifulSoup(htmlstring);
i+=1;
var b=np.arange(10);
df_new;
TaskBase.__call__(self,...args,__kwargtrans__(kwargs));
a.sum();
self.local_storage._save(py_name,content);
func(b);
var test=sess.run(e);
print(b.py_get());

var log=logging.getLogger(__name__);
var lines=df.plot(__kwargtrans__({ax:ax}));
var tree=ET.fromstring(data);
var term_appearance=Counter(chain.from_iterable(l));
serializers.ModelSerializer.to_representation(self,data);
f.read().splitlines();
foo(a);
print(A[ind]==value);
self.x=1;
var sums=np.add.reduceat(a,reductions).__getslice__(0,null,2);
f();
os.setpgrp();
d.py_update(b);
os.kill(pid,signal.SIGKILL);
plt.figure();
var f=urlopen(url);
[0,0,1,0];
json.dumps(_);
export var switches=[true,false,true];
var tree=ElementTree.ElementTree();
validate(request.json,current_app.config[schema_name]);
export var up=np.genfromtxt(lines.__getslice__(4,null,4),__kwargtrans__({dtype:str}));
deleteinst.__dict__[self.py_name];
var b=np.array(a);
var b=json.dumps(json.dumps(a));
print(sh1.col_values(1));
c.save();

pattern_obj.sub(replacement_string,originalstring);
var u=numpy.linspace(0,2*numpy.pi,100);
result;
plt.legend(__kwargtrans__({loc:0}));
self.exit();
ax.set(__kwargtrans__({aspect:1}));
var root=Tkinter.Tk();
var myList=np.random.random(100);
print(x);
var queryset=queryset.all();
garbage.append(line);
data.apply(function __lambda__(x){return dump_sframe_to_dict(x,a)});
print(CreateTable(table));
sys.stdout.write(reader.read());
var colors=plt.cm.rainbow(np.linspace(0,1,20));
fig.set_size_inches(w,h);
var epoch=datetime.datetime(1991,9,1,0,0,0);
self.py_name+str(self.age);
export var img_np=cv2.imdecode(nparr,cv2.CV_LOAD_IMAGE_COLOR);

export var listD=[];
a_polygon.contains(a_point);
self._results.append(result);
document2.body.append(copy.copy(element));
var b=datetime.now()-a;

var req=urllib.request.Request(starturl);
time.sleep(5);
newopen.write(line);
print([v,w]);
var func=functools.partial(self.on_button,__kwargtrans__({py_name:py_name}));
var request=urllib.request.Request(url,__kwargtrans__({data:data}));
var b=zip(...a);
export var sline=line.py_split();
var input=py_default;
var a=[0,0,1,1,1,0,0,1,0,1,1];
item;
var result=list(toposort2(dep_dict));
M.__getitem__([4,1]);
self.free.append(seq_num);
var new_list=[];
var s=s.py_replace(hit,chr(htmlentitydefs.name2codepoint[py_name]));
h.endheaders();
yaml.dump(d,f,__kwargtrans__({default_flow_style:false}));
worker_thread.start();
data;
help(getattr(dict,me));
export var parsed_input=json.loads(input_data);
background_label.place(__kwargtrans__({x:0,y:0,relwidth:1,relheight:1}));
var d1=function(){var __accu0__=[];for(var x=1;x<6;x++)__accu0__.append([x,x]);return dict(__accu0__)}();
var b=a.reshape(s);
[mindist,tuple([x_coord,y_coord])];
var data=np.loadtxt(input_filename);
4/100;
n?1+__mod__(n-1,9):0;
some_method(my_data);
session.connection().commit_prepared(xid,__kwargtrans__({recover:true}));
ascii_fh.readlines();
i.seek(0);
item;
sh.write(m,1,e2);
app.Dispatch();
Object(self);
var cardValue=card[0];
df;
dict({});
var py_new=interpolate.splev(np.linspace(0,1,500),tck);
py>matrix[2][4];
var b=a.compress(logical_not(z),__kwargtrans__({axis:1}));
len(subs);
down_thresh.__setitem__([tuple([0,h-i,1]),tuple([0,null,1])],down_thresh.__getitem__([tuple([0,h-i,1]),tuple([0,null,1])])+img.__getitem__([tuple([i,null,1]),tuple([0,null,1])]));
sys.stdout=writer;
main();
r.delete(key);
var mask=cv2.GaussianBlur(mask,tuple([BLUR,BLUR]),0);
print(Counter(L));
print(xopt);
f(1,0,0);
export var NullColumn=partial(Column,__kwargtrans__({nullable:true}));
export var last_lines=[];
var epoch=datetime(1970,1,1,__kwargtrans__({tzinfo:timezone.utc}));
var form=playlistform(request,request.POST,__kwargtrans__({instance:playlistmodel}));
1-coeff*Math.pow(z,-2)([0,1,0,0,0,0,0]).take(inf);
export var kingdom=models.ForeignKeyField(Kingdom);
default_mro.__getslice__(1,2,1)+default_mro;
compressor.add(file);
export var cap0=cv2.VideoCapture(0);
d[text.__getslice__(i,i+n,1)].append(i);
var data2=np.empty(tuple([h+2,w+2]));
var result=data.__getslice__(0,Math.floor(data.size/width)*width,1).reshape(-1,width).mean(__kwargtrans__({axis:1}));
var timeout=60;
var d=function(){var __accu0__=[];for(var i of x)__accu0__.append([i,[]]);return dict(__accu0__)}();
fieldnames.extend(reader.fieldnames);
my_db.close();
df.loc[g.groups.py_get(1,[])];
self.cnt+=1;
libadd.Add.argtypes=[ctypes.c_int,ctypes.c_int];
ax.plot(x,y,__kwargtrans__(__mergekwargtrans__({color:col_dict[class_col[i]],label:label},kwds)));
export var op=np.zeros(n.shape[0]);
unittest.main(__kwargtrans__({testLoader:loader,verbosity:2}));
var index=np.argsort(x);
export var D_Didx=np.digitize(D,Dbins);
time.sleep(random.uniform(0,.02));
var vocab_tage=function(){var __accu0__=[];for(var [key,value]of list(tag_vocab.py_items()))__accu0__.append([value,key]);return dict(__accu0__)}();
shutil.copyfileobj(source,temp_file);
var pb=gtk.gdk.Pixbuf(gtk.gdk.COLORSPACE_RGB,false,8,sz[0],sz[1]);
server_thread.start();
var m=defaultdict(function __lambda__(){return defaultdict(list)});
export var liPos=[tuple([2,5]),tuple([8,9]),tuple([18,22])];
matplotlib.hatch._hatch_types.append(CustomHatch);
sum(function(){var __accu0__=[];for(var row of matrix)for(var cell of row)if(cell==WATER)__accu0__.append(1);return py_iter(__accu0__)}());
second_smallest([a,b]+rest);
NULL;
loop.run_until_complete(asyncio.gather(...pending));
data[index];
var B=np.asarray([A]*N);
Test.objects.filter(__kwargtrans__({id:fr})).py_update(__kwargtrans__({id:to}));
np.unique(_25.index.get_level_values(1).dayofweek);
stack.insert(0,x);
output.write(field.ljust(fieldlength));
new set([new set([spygames/games|length*100|round(0)|int])]);
c.clip(a,b);
var t=int(list[i]);
var now=datetime.datetime.now();
var stdin=subprocess.PIPE;
Variance(X);
print(user.py_name);
t.setDaemon(daemonic);
consumer.run();
server.ehlo();
plt.pause(delay);
i+=1;
flask.session.modified=true;
print(a+b);
var __left0__=curve_fit(goal.__call__,xdata,ydata);var popt=__left0__[0];var pcov=__left0__[1];
var result=count(l,4);
export var py_reversed=line.__getslice__(0,null,-1);
var __left0__=[];var item=__left0__[0];
linprog(c,A_ub,b_ub,A_eq,b_eq,__kwargtrans__({options:dict(__kwargtrans__({bland:true,tol:1E-15}))}));
print(l);
export var x_2=odeint(sis,[0,0],t,__kwargtrans__({args:tuple([acel_interp])}));
datafile.save();
registered_plugins.append(shortname);
export var FATAL=5;
export var ycenter=len(y)/2;
BDF.to_excel(writer,__kwargtrans__({sheet_name:B,index:false}));
a2.yaxis.tick_right();
ss.connect(tuple([host,int(port)]));
theList.append(4);
zip(...tuple([x])*n);
var s=map(sum,zip(...[py_iter(s)]*2));
var d=np.eye(foo.shape[1])*foo.__getitem__([tuple([0,null,1]),np.newaxis]);
self.foo=functools.partial(__,self);
print(e.headers);
var mask=np.zeros(len(ar1),__kwargtrans__({dtype:np.bool}));
export var child_count=len(instance.children.all());
var connection=engine.connect();
plt.tight_layout();

var new_data=[];
sock.send(chunk);
var __left0__=p.communicate(scpt);var stdout=__left0__[0];var stderr=__left0__[1];
var port=self.mailport;
var D=D.__getitem__([tuple([0,null,1]),tuple([0,-2,1])]);
[];
var v=-np.cos(np.pi*x)*np.sin(np.pi*y)*np.cos(np.pi*z);
export var n0=a/math.pow(1-math.pow(e*math.sin(phi1),2),1/2);
decorator;
uncompyle2.uncompyle_file(sys.argv[1],f);
model.metadata.create_all(engine);
var html=BeautifulSoup(html);
self.worker=Worker(self);
isclose(a,b,__kwargtrans__({rel_tol:1E-9,abs_tol:0}));
A(self.value+other.value);
export var fitness_landscape=np.random.uniform(0,1,__kwargtrans__({size:tuple([N])+tuple([2])*K}));
var line=line.rstrip();
Fraction.from_float(1/2.54);
export var licenses=set();
hsv.__setitem__([tuple([0,null,1]),tuple([0,null,1]),2],hsv.__getitem__([tuple([0,null,1]),tuple([0,null,1]),2])+value);
file_two.seek(0,2);
n+=1;
queue.append(obj);
user.save();
writer.close();
var __left0__=tuple([y[mask].min(),y[mask].max()]);var ymin=__left0__[0];var ymax=__left0__[1];
var __left0__=curve_fit(func,x,yn);var popt=__left0__[0];var pcov=__left0__[1];
var mylist=[1,2,5,4,7,8];
export var ppxml2=etree.tostring(xml2,__kwargtrans__({pretty_print:true}));
self.p.stdin.close();
yaml.add_representer(str,unicode_representer);
logging.Handler.__init__(self);
SlicableDict(py_items[index_slice]);
var f=test.make_fptr();
var poly=PolyCollection(verts,__kwargtrans__({facecolors:fcs,closed:false}));
chr(_);
text.pack();
P[idx_tuple];
print(Fraction(.25));
[0,0,0,0];
egg2(...argList);
var x=np.random.uniform(__kwargtrans__({high:maxi,size:ntot}));
any(function(){var __accu0__=[];for(var i=0;i<19;i++)__accu0__.append(i>10);return py_iter(__accu0__)}());
self.parser.result.append(word);
self._initializeStream();
print(list(sec));
groups.append(list(g));
map(partitioner,data);
self.stop_process=true;
registry.add_field(cls,self);
export var duplicate_shaders_dict=dict({});
self.container[self.item];
endfor;
plt.imshow(data);
var end_time=datetime.datetime.utcnow()-start_time;
(function(){var __accu0__=[];for(var ch of text)__accu0__.append(is_cjk(ch)?1:0);return __accu0__})();
(function(){var __accu0__=[];for(var [v,ret]of[tuple([a,true]),tuple([0,bret]),tuple([0,cret])])if(ret)__accu0__.append(v);return __accu0__})();
var obj=json.loads(encoded);
shuffle(seq);
d[n].py_update(g.py_values.tolist());
fn(self);
export var unsure_rows=dict.fromkeys(csv_reader.fieldnames,[]);
var result=np.zeros(reference.shape);
local_filename;
var from_date=datetime.now();
cmp(a.__getslice__(10,null,1),b.__getslice__(10,null,1));
do_error();
pool.close();
print(get_deep_text(element_of_interest));
hllDll.wrp_testchar.restype=c_int;
sys.getsizeof(aStrOBJECT);
axes.xaxis.grid(false);
export var hax2=plt.subplot(1,2,2);
self.show();
new_list[jj].append(some_tuple);
var im=Image.open(old_image_path);
json_dict[self._KIND2_PARAM]=self._reader2.to_json();
engine.start();
print(df);
arr.resize(shape,__kwargtrans__({refcheck:false}));
var order=function(){var __accu0__=[];for(var [i,j]of enumerate(sorted(A)))__accu0__.append([A.index(j),i]);return dict(__accu0__)}();
myA.myattribute=9;
export var parse_code_2=compose(2,1,1);
var grid=np.vstack(tuple([grid,np.ones(tuple([1,grid.shape[1]]))]));
unique_features.py_sort();
export var vectorizer=TfidfVectorizer(__kwargtrans__({ngram_range:tuple([1,2])}));
SOAPpy.__file__;

var a=MyOrderedField(0);
var handler=logging.StreamHandler(sys.stdout);
var i=0;
var kOUT=np.zeros(N+1);
p.join();
var Fx=np.random.rand(100,50,10);
csvfile.seek(0);

var m=T.matrix(__kwargtrans__({dtype:theano.config.floatX}));
var t=time.time();
var a=np.column_stack(tuple([x.ravel(),y.ravel(),z.ravel()]));
a==b;
var data=[];
session.flush();
var pid=os.fork();
range_list.append(i);
print(response.json());
var arr=np.delete(arr,np.arange(0,arr.size,4));
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
var board=tuple([[1,1,2,1],[0,2,1,1],[2,2,2,1],[1,0,0,1]]);
dict({});
1;
source/opt/python/run/venv/bin/activate;
var cmap=mpl.colors.ListedColormap(colors);
axes.set_ylim(-.5,9.5);
var it=random.choice(iters);
log.setLevel(loglevel);
var p=zip(t.__getslice__(0,null,2),t.__getslice__(1,null,2));
var data=json.loads(source);
var __left0__=np.where(N[row_idxs]==6);var r=__left0__[0];var c=__left0__[1];
print(csv2);
e.execute(ins);
result;
sys.getdefaultencoding();
var __left0__=bindsocket.accept();export var newsocket=__left0__[0];export var fromaddr=__left0__[1];
var angle=math.atan(float(dx)/float(dy));
userhome+path.__getslice__(i,null,1);
root.withdraw();
client.close();
K.argsort().__getslice__(-5,null,1);
print(key,value);
garbage.append(line);
self.grid();
self.server_bind();
var HAVE_CURSES=false;
func(...args,__kwargtrans__(kwargs));
data.py_sort(__kwargtrans__({key:key}));
main();
print_two();
var x=NP.arange(0,t.shape[0]);
points.append(tuple([px,py]));
deletedict[k];
Dummy.a;
var ax4=plt.subplot(gs.__getitem__([1,tuple([2,null,1])]));
var fs=function(){var __accu0__=[];for(var i=0;i<10;i++)__accu0__.append(function __lambda__(x,_i){if(typeof _i=="undefined"||_i!=null&&_i.hasOwnProperty("__kwargtrans__"))var _i=i;return x+_i});return __accu0__}();
var x=object();
sublist.reverse();
x[x.first_valid_index()];
tuple([self.list1[i],self.list2[i]]);
ssh.connect(remote,__kwargtrans__({username:username,password:password}));
var fig=plt.gcf();
fp.seek(BOMLEN,os.SEEK_CUR);
self._setup_widgets();
var seq=[1,4,6,9,11];
export var querywords=query.py_split();
export var somemodule=importlib.import_module(module_name);
glClearColor(0/255,0/255,0/255,0/255);
sys.path=old_path;
newopen.write(line);
bytearray(function(){var __accu0__=[];for(var i=0;i<len(data);i++)__accu0__.append(data[i]^key[__mod__(i,l)]);return py_iter(__accu0__)}());
np.set_printoptions(__kwargtrans__({precision:17}));
var mask=np.zeros(gray.shape,np.uint8);
var tree=etree.ElementTree(root);
var key=self.window.getch();
var pool=Pool(__kwargtrans__({processes:numProcesses,initializer:initPool}));
var d=function(){var __accu0__=[];for(var [i,x]of enumerate(t))__accu0__.append([x,i]);return dict(__accu0__)}();
result_dict[key]=list(value);
inner;
var output=PdfFileWriter();
len(get_file_contents(filename).py_split());
var df=df[reordered];
var __left0__=interpolate.splprep(data);var tck=__left0__[0];var u=__left0__[1];
var end_date=time.strptime(end_date.__getslice__(0,-ulr,1),fmt);
self.Close();
var a=map(int,function(){var __accu0__=[];for(var x=0;x<20;x++)__accu0__.append(Math.pow(x,.5));return __accu0__}());
tuple([1,int(x)]);
pygame.init();
self.resize(frame.contentsSize());
export var porter=PorterStemmer();
var ax=fig.add_subplot(111);
self.grid=gridlib.Grid(self,__kwargtrans__({style:wx.BORDER_SUNKEN}));
export var cutoff=df.indweight.sum()/2;
np.ix_([0],[0,1,2],[0,2]);
list.append(num);
tt.tm_year*1E3+tt.tm_yday;
var inlines=[BookInline];
var x=np.arange(8);
export var EPOCH_DATETIME=datetime.datetime(1970,1,1);
var __except0__=Timeout();__except0__.__cause__=null;throw __except0__;
var a=[1,2];
export var numberPlate=models.IntegerField(__kwargtrans__({primary_key:true}));
var df=df.iloc[idx];
print(py_typeof(inputList));
matcher.a.__getslice__(match.a,match.a+match.size,1);
rcount(a);
self.sock=socket.socket(socket.AF_INET,socket.SOCK_STREAM);
var result=thirdparty.go();
sys.stdout=old_stdout;
process_count-=1;
meta.add_tags();
var parser=argparse.ArgumentParser();
var m=re.search(r,s);
df[df1.columns.unique()]=df1.groupby(df1.columns,__kwargtrans__({axis:1})).sum();
sys.modules[newk]=sys.modules[k];
locals();
q.join();
p.get_device_info_by_index(4);
window.show();
newList.append(list(range(r[0],r[1]+1)));
var d=defaultdict(dict);
btn.set_style(style);
any(i)&&!any(i);
print(int_list);
lst.append(i);
Base.metadata.create_all(engine);
print(a);
alpha.paste(circle.crop(tuple([0,0,rad,rad])),tuple([0,0]));
var A=np.array([1,nan,nan,2,2,nan,0]);
br.open(url);
print(SequenceMatcher(__kwargtrans__({a:s_1,b:s_2})).ratio());
export var circularity=Math.pow(circumference,2)/(4*math.pi*area);
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
print(i);
var auth=tweepy.OAuthHandler(consumer_key,consumer_secret);
print(posneg([-1,1,-4,5]));
pygame.init();
self.func(self,...args,__kwargtrans__(kwargs));
var a=a.__getslice__(0,-1,1);
y+=.5*y.max()*np.random.random(num);
var f=urllib.request.urlopen(req);
ax.set_ylim(-2,2);
profile.save();
asin(2).rewrite(log);
print(get_long(b,1));
formset;
var created_at=models.DateTimeField(__kwargtrans__({auto_now:true}));
np.sqrt(g,__kwargtrans__({out:g}));
print(a);
var app=Flask(__name__);
index.reshape(-1,k);
float_to_str(.1);
var s=requests.session();
window.add(frame);
var soup=bs4.BeautifulSoup(html);
export var cities=City.objects.all();
export var masks=function(){var __accu0__=[];for(var p of product([0,1],__kwargtrans__({repeat:len(data)})))__accu0__.append(p);return __accu0__}();
stdscr.addstr(i,0,line);
libc.cprogram(wts,res,kks,n,ex);
df.columns;
print(s);
var df1=merge(csv1,csv2,__kwargtrans__(kw1));
digit_product2();
var count=len(s);
var doc=minidom.parse(myXmlFile);
export var im_norm=(im_g-im_g.min())/(float(im_g.max())-im_g.min());
true;
func(...args,__kwargtrans__(kw));
cur_set.py_pop();
result_list.append(queue.py_get());
var ax=fig1.add_subplot(111);
sum(function(){var __accu0__=[];for(var i=0;i<len(s);i++)__accu0__.append(s[i]!=t[i]);return py_iter(__accu0__)}());
t.start();
smtp.starttls();
(function(){var __accu0__=[];for(var [k,v]of list(my_dict.py_items()))__accu0__.append([k,function(){var __accu1__=[];for(var n of v)__accu1__.append(max(function(){var __accu2__=[];for(var a of s)if(__in__(n,a))__accu2__.append(a);return py_iter(__accu2__)}(),__kwargtrans__({key:len})));return __accu1__}()]);return dict(__accu0__)})();
var w=gtk.gdk.get_default_root_window();
var data=[];
self.data[key].add(element);
found_dates.append(m.group(1));
export var rhythmbox_dbfile=os.path.expanduser(dbfile);
self.timer.Stop();

deleteself.all[self._key];
var rect=plt.Rectangle(tuple([i,-.5]),1,1,__kwargtrans__({facecolor:col}));
sum(y);
data;
rand_x_digit_num(10);
var p=mp.Process(__kwargtrans__({target:twitter,args:tuple([])}));
var wb=Workbook();
n-=1;
o.pull();
A.setdiag(b.__getslice__(0,-1,1),__kwargtrans__({k:1}));
export var numerator=sum(function(){var __accu0__=[];for(var x of intersection)__accu0__.append(vec1[x]*vec2[x]);return __accu0__}());
ipsh();
var mask=np.isnan(arr);
var val=np.asarray(imgTk).__getitem__([x,y]);
tuple([content_type,width,height]);
sys._getframe(back+1).f_code.co_filename;
df;
var ll=function(){var __accu0__=[];for(var y of hh)__accu0__.append(function(){var __accu1__=[];for(var x of y)__accu1__.append(x*N);return __accu1__}());return __accu0__}();
var msg=str(_sys.exc_info()[1]);
a[1](1);
var __left0__=tuple([ax.get_xlim(),ax.get_ylim()]);export var xlim=__left0__[0];var ylim=__left0__[1];
var a=datetime.now();
var max_val=max(l);
print(x);
true;
export var cumdims=Math.pow(np.maximum(A.max(),B.max())+1,np.arange(B.shape[1]));
export var ic=image.crop(box);
var cur=con.cursor();
print(asubkey);
var user_id=142187;
var page=urllib.request.urlopen(request);
close(child2father_pipefd[0]);
pyautogui.moveRel(0,10);
to_product.append(function(){var __accu0__=[];for(var l of c)__accu0__.append(tuple([k,list(l)]));return __accu0__}());
self.assertRedirects(response);
var __except0__=py_TypeError;__except0__.__cause__=null;throw __except0__;
new_stack;
uniq.append(x);
self.foo=foo;
x.start();
var result=[];
Counter(map(tuple,a));
self._find(val,self.root);
llslice[1].__setslice__(1,2,null,[10,11,12]);
pd.concat([sales,pd.DataFrame(hours,__kwargtrans__({index:sales.index}))],__kwargtrans__({axis:1}));
var max_value=max(scores.py_values());
res;
print(cookie.py_name,cookie.value);
var sidx=a.argsort();
i+=1;
[];
var lst=function(){var __accu0__=[];for(var [i,grp]of groupby(lst,__kwargtrans__({key:len})))__accu0__.append(list(grp));return __accu0__}();
value.__getslice__(0,2,1);
pylab.ylim(-1.5,2);
var v=pattern.findall(s)?float(s):int(s);
var p=multiprocessing.Pool();
x[0]=100;
export var m4x=np.sum(Z*X4)/np.sum(Z);
export var m4y=np.sum(Z*Y4)/np.sum(Z);
data.splitlines();
self.queue.put_nowait(s);
[1,0,0,0];
ax.set_yticks(list(range(0,9E3,1E3)));
var v=any(function(){var __accu0__=[];for(var c of s)__accu0__.append(__in__(c,chars));return py_iter(__accu0__)}())?float(s):int(s);
x[1]<seq[end-1][1];
var __left0__=divmod(seconds,60);var minutes=__left0__[0];var seconds=__left0__[1];
serializer.save();
Thread(__kwargtrans__({target:write_input,args:tuple([file,process.stdin]),daemon:true})).start();
rabbit_frog;
rabbit_horse;
var offset=__mod__(today.weekday()-2,7);
print(a,b,c);
print(integrate.quad(func2,-pi/2,pi/2,__kwargtrans__({args:tuple([-pi/2,pi/2])}))[0]);
export var helper=np.vectorize(function __lambda__(x){return x.total_seconds()});
var height=rect.get_height();
export var axc=fig.add_axes([.85,.1,.05,.85]);
export var newk=[];
spam(5).__closure__[0].cell_contents;
var f=urllib.request.urlopen(url);
self.val=val;
var fig=plt.figure();
var start=pyqtSignal(str);
(function(){var __accu0__=[];for(var c of s)__accu0__.append(c);return __accu0__})();
n+=1;
var __left0__=np.linalg.qr(X);export var Q=__left0__[0];var R=__left0__[1];
print(np.ma.MaskedArray(Z,__kwargtrans__({mask:~mask})).sum());
print(lucky(10));
struct.unpack(format,frame_data);
self.func(...self.args,__kwargtrans__(self.kwargs));
var indices=numpy.arange(a.size);
tuple([[26.7,8]]);
t2.close();
random.shuffle(combined);
var __left0__=self.sock.accept();var client=__left0__[0];var address=__left0__[1];
self.body=body;
var all_data=pd.DataFrame();
py_metatype.__new__(meta,classname,bases,newClassDict);
export var current_dir=os.getcwd();
layout.deleteLater();
m.captures(4);
Session.commit();
var b=a.__getitem__([tuple([0,null,1]),np.newaxis])*np.ones(tuple([1,7,1]));
var df=pd.DataFrame(np.random.choice([1,np.nan],tuple([1E5,150]),__kwargtrans__({p:tuple([.01,.99])})));
children.add(ast.children.py_get(i));
glMatrixMode(GL_MODELVIEW);
c.execute(q);
termios.tcsetattr(fd,termios.TCSADRAIN,old_settings);
method(self,...args,__kwargtrans__(kwargs));
c.append(a[index]);
export var linkers=[];
self.L.py_sort();
Swallow.i+=1;
mlab.pipeline.volume(grid,__kwargtrans__({vmin:min,vmax:min+.5*(max-min)}));
self.view=QtGui.QTreeView();
MI.Open(directory+file);
a[a<0]=0;
edgar.database.load(quarters);
new_s+=chr(n);
var pool=mp.Pool(__kwargtrans__({processes:4}));
pl.imshow(z0,__kwargtrans__({extent:[-5,5,-5,5],alpha:.5}));
var counts=Counter(list1);
var app=web.application(urls,__all__);
1/0;
base64.b64encode(aes.encrypt(message)).decode();
self.yvel-=self.jump_speed;
var app=Flask(__name__);
set(function(){var __accu0__=[];for(var t of qs)__accu0__.append(t.farm);return __accu0__}());
var result=dict({});
print(stored_file.content_type);
h;
do_error();
validate(input,schema);
channel.exec_command(remote_command);
var r=redis.StrictRedis(__kwargtrans__({connection_pool:pool}));
var x=np.ones(tuple([5,1]));
self.window_list=[];
var __left0__=optimize.curve_fit(piecewise_linear,x,y);var p=__left0__[0];var e=__left0__[1];
print(bar());
np.py_sort(data.reshape(N,-1));
print(o.foo());
cPickle.dump(root.sclX.config(),f,-1);
pickle.dump(tuple([a,b]),f);
var soup=BeautifulSoup(str(response));
var ax=fig.add_axes([1,1,1,1]);
var match=matchre.match(character);
verts.append(zip(xs,ys));
ipshell;
x.__getitem__([tuple([0,null,1]),0,0]);
export var secgen=map(operator.itemgetter(1),gen);
root.mainloop();
total+=int(col);
ranges.append(s);
0;
do_something(arr);
ax4.xaxis.tick_bottom();
dialog.ui=Ui_MyDialog();
J.append(np.arange(start,end));
py_next(g);
pickle.dump(d,f);
row.py_pop(6);
np.array(result);
table(ax,df);
var fig=plt.figure();
var l=function(){var __accu0__=[];for(var x of l)if(x[0]!=last[0]&&x[1]!=last[1])__accu0__.append(x);return __accu0__}();
IPython.Cell.options_default.cm_config.lineWrapping=py_true;
num_chars+=len(line);
self.show_file(self.save_image(image),__kwargtrans__(options));
export var samples=np.empty(tuple([0,100]));
x;
var img=LoadImage(sys.argv[1],1);
fo.close();
var s=sorted(zip(list_2,list_1),__kwargtrans__({reverse:true}));
print(a,b);
var n=0;
export var pwd=os.path.dirname("./P2JSnippets.py");
var app=QtGui.QApplication(sys.argv);
worker.start();
self._timeCreated=time.time();
export var terms=vectorizer.get_feature_names();
print(thing);
var opener=urllib.request.build_opener(proxy,auth,urllib.request.HTTPHandler);
rndseries.head();
html.title;
power(base,exponent-1,result*base);
export var latlong=transform.TransformPoint(x,y);
var image=image.resize(size,Image.ANTIALIAS);
[[]];
logger.setLevel(logging.ERROR);
self.f.write(x);
a[~(a<-100|a>100)];
var __left0__=mylist[0];var train=__left0__[0];var test=__left0__[1];
np.vstack(tuple([unq,unq_avg]));
foo();
export var strs=repr(s);
response;
window.add(image);
f(...a,__kwargtrans__(kw));
data.append(m.groups());
ax.pole(...mplstereonet.vector2pole(x,y,z));
print(repr(process.stdout.readline()));
var b=[4,5,6];
random.seed();
[1,0,1,1];
conn.close();
array([46,62,61]);
var data=zipread.read(item.filename);
var m=stats.trim_mean(X,.1);
var arr=np.array(some_sequence);
var size=f.tell();
var e=ET.ElementTree(ET.fromstring(xml_string));
list(sum(list_,tuple([])));
ancestor.before.remove(descendent);
func(ret,...args);
export var angles=np.arange(0,2*np.pi,d*np.pi/180);
var ax=fig.axes[0];
it.chain(...mt.roundrobin(mt.chunked(list1,n-1),list2));
var minutes=utc_offset/timedelta(__kwargtrans__({minutes:1}));
store_file(new_file,nchunks,hash);
matrix[4][4]=2;
Testing(4/4);
pool.map(worker,list(range(10)));
Test.__init__;
var df=df._get_numeric_data();
repr(bar);
plt.xticks(__kwargtrans__({rotation:90}));
var colors=img.getcolors(256);
var scat=ax.scatter(x,y,__kwargtrans__({c:z,s:200}));
outfile.write(doc.prettify());
ax.set_ylim([.1,.8]);
var __left0__=tuple([int(eval(input())),int(eval(input()))]);var n=__left0__[0];var k=__left0__[1];
Row(...A);
x[np.nonzero(x)];
print(k,list(v));
var from_date=datetime.datetime.today();
turtle.right(90);
nums[1];
var particles=function(){var __accu0__=[];for(var i=0;i<1E5;i++)__accu0__.append(Particle(i));return __accu0__}();
do_something_else(arr);
id(a[1]);
var command=sys.argv[1];
np.random.seed(2015);
export var model_class=self._get_model_class(query);
var ranked=sx.expanding().apply(function __lambda__(x){return ranking(x)});
ccv1;
ccb1;
print(tuple([der_a.a,der_a.z]));
results.extend(result.groups());
print(args);
print(r.findall(s));
print(temp);
var dt=dt.py_replace(__kwargtrans__({hour:0,minute:0,second:0,microsecond:0}));
var mask=np.zeros(image_src.shape,np.uint8);
var file_path=request.url.__getslice__(7,null,1);
plt.setp(ax.xaxis.get_gridlines(),__kwargtrans__({clip_path:circle}));
df;
b[-1]=tuple([b[-1][0],end]);
form.permissions.data=function(){var __accu0__=[];for(var p of user.permissions)__accu0__.append(p.id);return __accu0__}();
threading.Thread(__kwargtrans__({target:self.listenToClient,args:tuple([client,address])})).start();
export var val_to_delete=max(d.py_values());
_lazyprop;
var results=c_char_p*4(addressof(create_string_buffer(7)));
file.seek(0);
curses.wrapper(main);
kernel.__setitem__([1,1],2);
decorator(fn_or_output);
self.logwindow.AppendText(msg);
var ab=np.where(a.__getitem__([tuple([0,null,1]),np.newaxis])==b.__getitem__([np.newaxis,tuple([0,null,1])]));
var process=subprocess.Popen(command,__kwargtrans__({shell:true,stdout:subprocess.PIPE}));
var arr=np.array([false,true]);
var l=sc.recv(1024);
0;
f.write(DATA);
var params=dict({});
var output=capturer.getvalue();
var s=pylzma.compressfile(i);
var decoded=decode_columns(out.indices).reshape(X.shape);
counter.most_common();
var lengths=Counter(function(){var __accu0__=[];for(var v of list(userIdDict.py_values()))__accu0__.append(len(v));return py_iter(__accu0__)}());
w.start();
f(0,0,0);
self.assertEqual(expect,foo);
B_out.__setitem__([tuple([0,null,1]),col_idx],np.add.reduceat(A.__getitem__([tuple([0,null,1]),sidx]),grp_start_idx,__kwargtrans__({axis:1})));
tcpCliSock.close();
self.d=self.m.dict();
export var fnx=function __lambda__(v){return NP.random.randint(0,10,v)};
var my_instance=MyClass();
cert_path;
export var build_base=my/build/dir;
export var screen_names=function(){var __accu0__=[];for(var user of api.lookup_users(__kwargtrans__({user_ids:ids})))__accu0__.append(user.screen_name);return __accu0__}();
t.daemon=true;
myapp.run();
var y=list([0,1]);
[1,0,0,1];
var l=list(range(20));
self.loginPage();
export var yourThread=threading.Thread();
wrapped;
self.sizer=wx.BoxSizer(wx.VERTICAL);
np.sum(x!=y);
var k=np.array([true,false,false,true,false]);
self.start();
event.fire(...args,__kwargtrans__(kargs));
jsonify(u.get_public());
export var img2x=img2.shape[1];
sample_object.users.through.objects.create(__kwargtrans__({user_id:1,sample_id:sample_id}));
var data=inf.read(BLOCKSIZE);
dateData.append(end);
var poly=np.poly1d(coeffs);
var worksheet=workbook.add_worksheet();
export var yrloc=matplotlib.ticker.MaxNLocator(__kwargtrans__({steps:[1,2,5,10]}));
var r=list(range(1E3));
manage.py;
sparsemax(X,Y);
var df=pandas.DataFrame(data);
func(that,session,...args,__kwargtrans__(kwargs));
im.blit(0,0,window.width,window.height);
c[c<0]=0;
pprint(get_driver_name_from_guid(x));
var words=line.py_split();
ar.reshape(ar.shape[0],1);
toolz.valmap(f,my_list);
colorama.init(__kwargtrans__({autoreset:true}));
var f=function __lambda__(x){return map(neg,x)};
export var user_email=instance.email;
self.left=left;
var A=scipy.delete(A,1,0);
isinstance(obj,str);
df.index=df.index.get_level_values(0)+df.index.get_level_values(1);
var key=operator.itemgetter(0);
var t=np.linspace(0,4*np.pi,N);
print(function(){var __accu0__=[];for(var i of lib.make_array().contents)__accu0__.append(i);return __accu0__}());
fibonacci(n-1)+fibonacci(n-2);
noVow(seq.__getslice__(1,null,1));
var seclist=[2,4,6];
var tk=tkinter.Tk();
var serializer_class=SpeakerSerializer;
wedding_obj;
var df=pd.DataFrame(df);
tuple([H,1,0,0,0,1,1,1,0,0,1,0]);
var r1=Range(__kwargtrans__({start:datetime(2012,1,15),end:datetime(2012,5,10)}));
t.render(context);
1-coeff*Math.pow(z,-2)([1,0,0,0,0,0,0]).take(inf);
var result=np.empty(tuple([4,2]),__kwargtrans__({dtype:int}));
var df=df[df.TMP.notnull()];
timer1.stop();
export var mysets=function(){var __accu0__=[];for(var x of MyList)__accu0__.append(set(x.py_items()));return py_iter(__accu0__)}();
export var im_out=np.dstack([r,g,b]);
traceback.print_exc();
str(root);
plt.boxplot(weighted_appearances);
list(spam.py_items());
var x=np.empty(len(a));
ax2.autoscale(false);
b.flags.owndata;
Foo.py;
d[str(k)]=v;
self.optionmenu_b.pack();
var ax1=fig.add_subplot(221);
col.append(row[i]);
export var model1=build_model();
lst.extend(words);
var __left0__=win.GetSize();var w=__left0__[0];var h=__left0__[1];
var triplets=function(){var __accu0__=[];for(var a of listA)__accu0__.append([a]);return __accu0__}();
lines.append(self.context);
[1,1,0];
jobscheduler.configure(__kwargtrans__({jobstores:jobstores}));
export var remote_conn=remote_conn_pre.invoke_shell();
export var old_path=sys.path;
arr.copy();
var mask=~np.any(np.isnan(x),__kwargtrans__({axis:1}));
ax2.scatter(bins_mean,n);
repr(dict);
self._task_handler.start();
s.dropna().plot();
button.Bind(wx.EVT_BUTTON,func);
file.__init__(self,...args,__kwargtrans__(keyws));
self.mainLayout=QtGui.QVBoxLayout(self);
print(line);
plt.subplot(122);
export var yourNewSet=map(set,list(set(map(tuple,yourSet))));
export var range_start=Math.pow(10,n-1);
writer.writeheader();
func(...func_args,__kwargtrans__(func_kwargs));
var x=np.arange(10);
print(c);
plt.plot(x,intg/fullpower);
var b1=np.random.randint(0,100,50);
self.func(...args,__kwargtrans__(kwargs));
a.take(tuple([1]),__kwargtrans__({axis:0}));
self.qa.save();
ax.set_title(label,__kwargtrans__({size:20}));
self.head=tmp.__next__;
s.ioctl(socket.SIO_RCVALL,socket.RCVALL_ON);
print(true);
self.b_set.add(b);
(function(){var __accu0__=[];for(var _f of map(self._func,collection))if(_f)__accu0__.append(_f);return __accu0__})();
var contents=fp.readlines();
id(my_dict);
can.place(__kwargtrans__({relx:.5,rely:.5,anchor:CENTER}));
sorted(iterable,__kwargtrans__({key:natural,reverse:reverse}));
print(len(shared_items));
var inds=np.triu_indices_from(a,__kwargtrans__({k:1}));
var lines=stdout.readlines();
gmm.delta=0;
f.getvalue();
var dt=datetime.datetime.fromtimestamp(jsts/1E3);
var b=a;
count+=1;
random.shuffle(listOfItems);
client2.close();
Whatever().dosomething();

np.where(cnt,hi[ind[cnt-1]],initial);
var dic=dict(zip(lis,lis.__getslice__(1,null,1)));
var c=function __lambda__(a,b){return function(){var __accu0__=[];for(var c of zip(a,b))__accu0__.append(list(c));return __accu0__}()};
s.ioctl(socket.SIO_RCVALL,socket.RCVALL_ON);
L.append(results.py_get());
export var error_class=err.__class__.__name__;
sys.stdout=old;
k.release_key(k.alt_key);
a.clip(0);
print(sum(res));
i+=self.shape[0];
var r=np.minimum(np.arange(n).__getslice__(0,null,-1),np.arange(n));
export var incrementerBy1=Incrementer(1);
dis.dis(greet);
print(list(Foo().foo()));
self.d=dict({});
print();
export var Frequency=Pitch(data);
var fig=plt.gcf();
m.group(2);
do_some_thing();
var t=timeit.Timer(foo);
session2.close();
zip(table,list);
tmp2.__setitem__([tuple([0,null,1]),0],tmp2.__getitem__([tuple([0,null,1]),0])*-1);
main.write(ccode);
print(b.shape);
display.display(pl.gcf());
fw.close();
inMemoryOutputFile.seek(0);
process.get_memory_info()[0]/float(Math.pow(2,20));
plt.imshow(image);
num+=cur.execute(sql,arg);
var client=docker.Client();
test2.reshape(-1,2).__getslice__(0,null,2).reshape(-1,4);
var k=function(){var __accu0__=[];for(var x of set(l))__accu0__.append(tuple([x,l.count(x)]));return __accu0__}();
sum(function(){var __accu0__=[];for(var k of ks)if(k_v1s.py_get(k)!=k_v2s.py_get(k))__accu0__.append(1);return py_iter(__accu0__)}());
var __left0__=map(int,input().py_split());var n=__left0__[0];var p=__left0__[1];
picked.append(random.choice(data));
export var item_length=len(item)+1;
print(test_unicode);
var d=dict({});
var root=Tk();
a[i]=x+4;
x+y;
print(poly.containsPoint(QPoint(1,1),Qt.OddEvenFill));
export var catpcha=find_catpcha(response);
var response=urllib.request.urlopen(request);
app.exec_();
connection.execute(ins,py_values);
self.pack();
var clf=linear_model.LinearRegression();
string.py_split(divs[0]);
print(list(recurse(dirDict)));
sum(row)>.5;
var ordered=OrderedDict();
QtGui.QSystemTrayIcon.__init__(self,icon,parent);
var df=pd.DataFrame(invs);
var s=q.py_get();
var chrome_options=webdriver.ChromeOptions();
all(function(){var __accu0__=[];for(var c of s)__accu0__.append(ord(c)<128);return py_iter(__accu0__)}());
var inputs=[1,1,0,2];
var x=np.linspace(data.min(),data.max(),100);
export var inputarr=sys.stdin.read().py_split();
var tree=etree.parse(testf,__kwargtrans__({parser:parser}));
[hyde];
obj_list.append(obj[i]);
list(range(lowerBound,upperBound+step,step));
fig.autofmt_xdate();
var foo=np.array(foo_array);
count+=1;
a.__setitem__([row,col],a.sum(__kwargtrans__({axis:1}))-a.__getitem__([row,col]));
MonkeyDevice.__init__(self);
Signal.send(sender,__kwargtrans__(kwargs));
print(__mod__(a,np.sign(a)));
copyfileobj(fsrc,fdst);
export var DL_path=os.getcwd();

max(chars,__kwargtrans__({key:chars.count}));
print(i1&16777215,i2);
var surf=pg.Surface(tuple([200,200]),__kwargtrans__({flags:HWSURFACE}));

dct[elem_name];
var py_keys=sorted(sorted(shaders_dict),__kwargtrans__({key:shaders_dict.py_get}));
tick.set_markeredgewidth(2);
parser.argparse.ArgumentParser();
timeit(stmt1,__kwargtrans__({number:100}));
var __left0__=np.mgrid.__getitem__([tuple([0,2*np.pi,complex(0,20)]),tuple([0,np.pi,complex(0,10)])]);var u=__left0__[0];var v=__left0__[1];
var cols=df.columns.py_values;
has_add_permission(self.request.user,self.request);
print(data);
tuple([index,item]);
a[0]+a[1]*.1;
print(repr(packet));
Py_Initialize();
cv2.line(out,tuple([int(x1),int(y1)]),tuple([int(x2)+cols1,int(y2)]),tuple([255,0,0]),1);
var dict_of_lists=defaultdict(list);
var sum=0;
var dllname=os.path.py_split(dllname[0]);
expr.setParseAction(Expr);
print(REGEX.findall(test_string));
var ax=fig.add_subplot(111);
setattr(mod,attr,value);
pubs[0].num_books;
do_something(obj);
json.dump(testarr,test_file);
output.close();
screen.fill(tuple([159,182,205]));
self.nout=a;
var tmp=np.zeros(tuple([height,width]));
data.py_update(a_dict);
var t=np.floor(x);
ans.extend(function(){var __accu0__=[];for(var x of l2.__getslice__(b,e,1))__accu0__.append(tuple([a,x]));return __accu0__}());
print(polygon(4,100));
fd.write(data);
f.writelines(lines.__getslice__(-LIMIT,null,1));
qcookiejar.setCookiesFromUrl(qnetworkcookie_list,QUrl(requested_url));
httplib.HTTPConnection.putheader(self,header,value);
export var loop_start=time.time();
var foo=Foo();
fbhandle.close();
dir(test);
pd.__version__;
var __left0__=pickle.load(f);export var train_set=__left0__[0];export var valid_set=__left0__[1];var test_set=__left0__[2];
var cnxn=pypyodbc.connect(conn_str);
export var login_form=LoginForm(request.POST);

print(py_arguments[i].value);
var pool=multiprocessing.Pool(1);
result;
value;
merged.py_update(obj);
Py_Initialize();
s.append(item[0]+item[1]);
result_data[mask]=np.mean(py_values[mask]);
true;
print(list(all_combos(__kwargtrans__({ceiling:6,target_sum:12,num_cells:4}))));
var im_out=(im_out*255).astype(np.uint8);
op.__dict__.py_update(locals());
PyErr_Print();
train_data.__getitem__([tuple([0,null,1]),indexes[0]]);
plot(times,sin(2*pi*freq*times));
palette_img.putpalette(flat_palette);
var img=feature.canny(img).astype(np.uint8);
print(py_typeof(node),node);
dictionary[x].append(y);
image.save(file_obj,ext);
file.write(i);
output[parts[1].strip()]=parts[2].strip();
var line=plt.plot(t,y)[0];
c.stop();

var x1=np.random.permutation(1E5);
export var one_set=set(one_list);
var splits=list(function(){var __accu0__=[];for(var m of re.finditer(pattern,string))__accu0__.append(m.start());return py_iter(__accu0__)}());
new set([new set([response|safe])]);
var result=re.sub(p,subst,test_str);
existing_alias.put();
var df=pd.DataFrame(data,__kwargtrans__({columns:mux}));
show(p);
var obj=get_object_or_404(CustomModel,__kwargtrans__({id:some_id}));
tuple([.6942,sym2,7,5,10,10]);
var req=urllib.request.Request(url,stream);
np.nanmax(grouped_2Darray,1);
print(a.__dict__);
print(line1.intersection(line2));
locale.nl_langinfo(locale.RADIXCHAR);
ranges.remove(i);
deploy(hosts,command);
base_value*(1/2.54);
var browser=mechanize.Browser();
export var correlations=df.corr();
self.names=set();
df;
var cur=con.cursor();
var a=numpy.array([[2,0,0],[0,2,0],[0,0,4]]);
var popularity=sorted(set(a),__kwargtrans__({key:function __lambda__(x){return-a.count(x)}}));
export var gtxt=function(){var __accu0__=[];for(var b of bloc)__accu0__.append(pat.__getslice__(b[0],b[1]+1,1));return __accu0__}();
export var y_rev=x.size-y-1;
result?result.groups():[];
self.delete();
account.objects.py_get(__kwargtrans__({pk:42})).accounttypeb;
var out=x[idx[count==1]];
lockedmethod.__name__=methodname;
x.visit(t);
print(property.content);
var h=1<<bits-1;
comment_tree.append(create_tree(record,comment_set));
var __left0__=s.accept();var client=__left0__[0];var address=__left0__[1];
var b=1;
Counter(s)==Counter(t);
expressions.append(list(itertools.product(o,v)));
ipshell.mainloop();
np.percentile(data,percents);
attrs;
var m=s.str.len().max();
gevent.spawn(read_stream,p.stderr,stderr);
var df=df.fillna(0);
var d2=myfun(d);
var py_name=models.CharField(__kwargtrans__({max_length:50}));
print(a);
py_typeof(b);
var a=len(may_a);
export var lexer=lex.lex(__kwargtrans__({optimize:1}));
var user=form.save();
var pool=ThreadPoolExecutor(__kwargtrans__({max_workers:40}));
var y=function __lambda__(x){if(typeof x=="undefined"||x!=null&&x.hasOwnProperty("__kwargtrans__"))var x=x;return function(){var __accu0__=[];for(var i=0;i<1;i++)__accu0__.append(x+i);return __accu0__}()}();
var L=dot(diag(Math.pow(D,-.5)),dot(A,diag(Math.pow(D,.5))));
lib.test.argtypes=tuple([POINTER(darray),POINTER(darray)]);
f(5);
curses.endwin();
var S=pd.Series(np.random.normal(__kwargtrans__({size:200})));
print(l);
regex.sub(repl,string);
main();
root.mainloop();
var fig=figure();
print(foo,bar);
triples.append(tuple([i,t1,t2]));
A();
var out=zip(r,c,a.__getitem__([r,c]));
ctypes.sizeof(ctypes.c_uint16);
var L=[1,1,2];
array([6,8]);
tuple([flab_nickers]);
var x=np.random.random(tuple([M,N]));
var row=line.py_split();
var result=function(){var __accu0__=[];for(var [idx,item]of enumerate(a))if(__in__(item,a.__getslice__(0,idx,1)))__accu0__.append(idx);return __accu0__}();
var max_value=a[mask].max();
var rs=function(){var __accu0__=[];for(var u of urls)__accu0__.append(grequests.py_get(u));return py_iter(__accu0__)}();
var nrange=np.arange(n);
export var po=Pool();
mat[0][0]=1;
np.set_printoptions(__kwargtrans__({linewidth:1E3,edgeitems:5}));
var Base=declarative_base();
random_sample(data,__kwargtrans__({timesteps:2,batch_size:2}));
export var ystart=0;
b.getDouble_B();
var e=Environment(__kwargtrans__({loader:fileloader,autoescape:true}));
Math.pow(d(10),Math.pow(d(10),d(10)))==Math.pow(d(10),Math.pow(d(10),d(10)))+1E6;
xml.sax.parse(f,ch);
df_test.loc[idx];
d.py_update(value);
var arr=__mod__(i>>nxn,2);
numpy.asarray([my_list]).shape;
http_server.listen(8080);
self.identity.do_something();
plt.grid(true);
new_list.extend(letters.__getslice__(start_index,start_index+n,1));
export var jsonresponse=json.loads(response.body_as_unicode());
self.func(...func_results);
print(yaml.dump(d));
export var key_fu=function __lambda__(x){return x[0][0]};
print(a.__getitem__([np.newaxis,tuple([0,null,1]),tuple([0,null,1])]).shape);
gca().add_patch(rect);
FirstBase.__init__(self,...args,__kwargtrans__(kargs));
plt.semilogy(xdata,ydata);
print(prng.random());
export var pageContent=urllib.request.urlopen(httpRequest);
df;
var __left0__=tuple([0,0]);var i=__left0__[0];var j=__left0__[1];
print(password);
self.setLayout(layout);
row_names.append(py_name);
var slices=sorted(random.sample(list(range(0,len(index))),2*n));
self.heap=[];
var d=defaultdict(list);
load_file(self.md5);
logging.error(self.headers);
export var line2=LineString([tuple([0,1]),tuple([1,1])]);
write_and_close_docx(word_doc,tree,new_word_doc);
var Lv=np.append(Lv,[last]);
var lst=list(range(4));
var data=json.loads(elevations);
Pdb;
print(page_html+news_script_output);

var td=datetime.timedelta(__kwargtrans__({hours:2}));
cmp(v1,v2);
var dtype2=np.dtype(function(){var __accu0__=[];for(var py_name of fields)__accu0__.append([py_name,arr.dtype.fields[py_name]]);return dict(__accu0__)}());
var arr=np.arange(2E3).astype(float);
A.__dict__;
self.add_widget(widget);
s1.erase(...py_iter);
export var server_url=models.CharField(__kwargtrans__({max_length:255}));
histogram[img.getpixel(tuple([x2,y2]))]+=1;
var loop=asyncio.get_event_loop();
arr;
var out=np.zeros(tuple([maxt,maxdimx,maxdimy]));
list(seen2);
var a=[];
var matches=my_regex.findall(string);
var searchlines=f.readlines();
print(df[inds].to_string());
button.pack();
df.B.ix.__getslice__(0,4,1).last_valid_index();
R.append(psi);
print(stringtest);
stars1==stars2;
true;
(function(){var __accu0__=[];for(var m of method_names)__accu0__.append(gdb.Breakpoint(m));return __accu0__})();
var A=np.zeros(tuple([nr-1,nr]));
plt.plot(x,delay);
var __left0__=p.communicate();var stdoutdata=__left0__[0];var stderrdata=__left0__[1];
Notification.objects.exclude(__kwargtrans__({pk__in:objects_to_keep})).delete();
line.setOpacity(opacity);
var last_index=-1;
print(k[2]);
db.run_in_transaction(txn);
var ans=x/y;
dis.dis(a_long_tuple);
var discoverer=Discoverer(sys.argv[1]);
execute_from_command_line(sys.argv);
np.array([5.6]).dtype.num;
outfile.write(mystring);
export var BoundingBox=cv2.boundingRect(c);
item;
var t=t+tuple([1]);
var parser=argparse.ArgumentParser();
export var mask_idx=~np.in1d(pairs1D,positions1D).reshape(-1,2).all(1);
_render_template(...args,__kwargtrans__(kwargs));
var sh=wb.get_active_sheet();
var i=0;
x+=1;
var size=len(value);
print(sql);
export var nrm=stats.logistic.cdf(1)-stats.logistic.cdf(0);
conn.close();
true;
random.shuffle(b,function __lambda__(){return r});
new set([new set([YOUR_CUSTOM_SETTING])]);
test(1E3,50,11);
var ax=ax.ravel();
double_to_hex(-17.5);
var x=np.interp(t,np.arange(len(x)),x);
list(csv.reader(inf));
var fn=sys.stdin.fileno();
export var finalresults=results.execute();
var alpha=2*math.pi*random.random();
var config=ConfigParser();
export var out_count=np.zeros_like(out_id);
var frame=sys._getframe(1);
skyscrapers[building_number]=AIR;
output.write(encrypted_secret_key);
export var collator=PyICU.Collator.createInstance(PyICU.Locale.getFrance());
deleteelem.getparent()[0];
var x=arange(0,1,1/POINTS);
var __left0__=tuple([[],[],[[]]]);export var row_names=__left0__[0];var col_names=__left0__[1];export var data_table=__left0__[2];
[1,0,0];
export var k1=sorted(dict1,__kwargtrans__({key:dict1.py_get}));
export var handle=models.CharField(__kwargtrans__({max_length:255}));
var mydict=dict({});
export var od2=OrderedDict(sorted(list(d2.py_items()),__kwargtrans__({key:function __lambda__(t){return t[1]}})));
var labels=function(){var __accu0__=[];for(var item of ax2.get_xticklabels())__accu0__.append(item.get_text());return __accu0__}();
main();
export var transposed=zip(...arr);
result[i];
1+len_recursive(s.__getslice__(1,null,1));
to_dict(y);
App().root.mainloop();
var y=function(){var __accu0__=[];for(var [i,v]of enumerate(l))if(is_odd(v))__accu0__.append(i);return py_iter(__accu0__)}();
QtGui.QSystemTrayIcon.__init__(self,icon,parent);
Department.objects.raw(sql);
asyncio.set_event_loop(self.loop);

pd.DataFrame(dict(__kwargtrans__({l1:lp1,l2:lp2})));
__all__[py_name]=ClassFactory(py_name,params);
renWinL.Render();
generate_n_primes(10);
print(item);
str(m);
var __left0__=divmod(remainder,60);var minutes=__left0__[0];var seconds=__left0__[1];
sys.getsizeof(n);
var ax1=fig1.add_subplot(1,1,1);
os.waitpid(pid);
time.sleep(.1);
getattr(self._parent,py_name);
df.head();
var results=sorted(lists,__kwargtrans__({key:function __lambda__(x){return tuple([x[0],int(x[1]),int(x[2])])}}));
var order=np.lexsort(tuple([data,groups]));
show_graph(adjacency);
t5.join();
cfd(treebank.tagged_words());
var s=dff.isnull().apply(sum,__kwargtrans__({axis:0}));
var response=urllib.request.urlopen(crawling);
var s=set([4,5,6]);
var fh=logging.FileHandler(LOG_FILE);
np.asarray(function(){var __accu0__=[];for(var [n,p]of enumerate(b2))__accu0__.append(a.__getitem__([n,tuple([0,null,1]),p]));return __accu0__}());
export var file_date_tuple_list=function(){var __accu0__=[];for(var x of files)__accu0__.append(tuple([x,os.path.getmtime(x)]));return __accu0__}();
pd.get_dummies(s,__kwargtrans__({drop_first:true}));
self.fn(...args,__kwargtrans__(kwargs));
filehandler.write(image_data);
self._s.bind(tuple([self._host_address,port]));
setup2DstuffModelview();
var G=nx.Graph();
export var B_out=np.zeros(tuple([len(A),n_cols]));
curs.close();
c.__getitem__([tuple([0,null,1]),np.concatenate(tuple([[true],c.__getitem__([1,tuple([1,null,1])])!=c.__getitem__([1,tuple([0,-1,1])])]))])[0];
var __left0__=Image.open(imlist[0]).size;var w=__left0__[0];var h=__left0__[1];
var count_list=list(range(1,N+1));
var f=Foo();
export var convolved=np.zeros(tuple([nx,ny,nz]));
print(minimal_dims.shape);
export var the_list=[5,7,6,5,5,4,4,7,5,4];
sys.stdout.encoding;
var df=DataFrame(d);
var ba=bytearray(fh.read());
export var dirpath=sys.argv[1];
var mask=np.hstack(tuple([mask1,mask2]));
var title=models.CharField(__kwargtrans__({max_length:255,unique:true}));
var article=Article.objects.all()[random.randint(1,15)];
export var my_random_bytes=bytearray(randbytes(1E6));
f.close();
shutil.copy2(src_file_name,tf.py_name);
out.append(d);
print(message.format(value));
print(help(a));
var mylist=[];
tuple([a===b,a===c,a===d,c===d]);
self.pack();
record.append(line);
var n=np.prod(shape);
var divider=make_axes_locatable(ax);
full_name.strip();
print(list(p));
var contents=f.read().py_split();
var t=Thread(__kwargtrans__({target:self._run,args:[self]}));
var f=[0]*nfactors;
var py_keys=sorted(d.py_keys());
self.get_year_sales(datetime.now().year-1);
build_matrix(f1,tuple([A,B]));
self.assertItemsEqual(lst1,lst2);
var response=urllib.request.urlopen(request);
p.append(1);
export var dato=forms.DateField(__kwargtrans__({widget:SelectDateWidget(),initial:yesterday}));
shell.interact();
collections.defaultdict(tree);
var ax=df.plot();
var transport=paramiko.Transport(tuple([ssh_host,ssh_port]));
a.dtype.py_metatype===np.string_;
ssl.__file__;
var position=tuple([center[0]-10,center[1]+10]);
var value=self._get_val_from_obj(obj);
true;
var form=YourForm(data);
mythread.start();
export var themod=__import__(themodname);
foo.x;
var sess=tf.InteractiveSession();
form.category.choices=categories;
var text=f1.read();
var result=cur.fetchone();
var a=df.py_values;
urljoin(url,quote_plus(term));
ax.spines[pos].set_edgecolor(color);
new set([new set([formset.management_form])]);
var f=tempfile.NamedTemporaryFile(__kwargtrans__({delete:false}));
_init_func();

var __left0__=ax.get_legend_handles_labels();var handles=__left0__[0];var labels=__left0__[1];
out.close();
var d=feedparser.parse(url);
export var arclen=2*np.pi*r;
true;

main();
ax.contourf(xs,ys,zs,__kwargtrans__({cmap:cm.autumn}));
ax.set_ylim(.5,max(y));
var t=Thread(__kwargtrans__({target:newFunc}));
string.seek(0);
self.send(s);
draw.rectangle(transparent_area,__kwargtrans__({fill:0}));
draw.text(tuple([0,50]),txt);
var contents=output.getvalue();
export var muY=Y.mean(0);
plt.show();
var b=[4,5,6];
var s=pylzma.decompressobj();
np.linalg.det(a);
var __left0__=pickle.load(f);var a=__left0__[0];var b=__left0__[1];
zf.close();
export var rc2f=np.ravel_multi_index(rc2,A.shape);
var results=proc.stdout.readlines();
math.floor(-1.5);
result;
mpp.join();
var my_dict=dict(list(tmp.py_values()));
book.py;
var out=my_array[cond];
var req=urllib.request.Request(url);
numpy.searchsorted(a,v,__kwargtrans__({side:numpy.CONSTANTS.SIDE.RIGHT}));
print(elevation);
threads.append(thread);
var file=os.path.abspath(file);
var good=np.where(np.isfinite(A));
self.parent.Iconize();
output_wave_file.setparams(input_wave_files[0].getparams());
config.py_get(section,py_name);
pickle.dump([obj0,obj1,obj2],f);
action.triggered.connect(self.mapper.map);
tar.addfile(__kwargtrans__({tarinfo:info}));
docs.append(raw_doc);
df;
var foo=1;
var page=f.read();
print(df);
BOOST_PYTHON_MODULE(example);
sum([tuple([1,2]),tuple([1]),tuple([])],tuple([]));
-[a,b,c];
var filepath=os.path.join(path,filename);
export var cp=urllib.request.HTTPCookieProcessor();
max(self.root.left.height(),self.root.right.height())+1;
dW.__setitem__([tuple([0,null,1]),y[ii]],dW.__getitem__([tuple([0,null,1]),y[ii]])-XX.__getitem__([ii,jj,ii,tuple([0,null,1])]).transpose(tuple([2,0,1])));
t.start();
var X=pd.DataFrame(data);
response.peer=self.sock.getpeername();
db.put_async(self);
export var inputproc1=Popen(shlex.py_split(inputcmd1),__kwargtrans__({stdout:PIPE}));
fp.close();
doStuff();
e.property;
surf.fill(BGCOL);
var ax=plt.subplot(111);
var u=User.objects.py_get(__kwargtrans__({id:1}));
unittest.TestSuite.run(self,testResult);
plt.tight_layout();
split_ip(item[0]);
line_count+=1;
my_module;
vbox1.addWidget(self.edit1);
Thread(__kwargtrans__({target:loop})).start();
print(len(results));
var i=np.argsort(a,__kwargtrans__({axis:1}));
var maxlen=max(map(len,data));
np.multiply(normal,-1);
ax.get_xaxis().set_visible(false);
var log=logging.getLogger();
doStuff(self.model.documents);
L.__getslice__(left,right,1);
var C=np.random.rand(N,N);
var draw=ImageDraw.Draw(mask);
DeckForm.__init__(self,...args,__kwargtrans__(kwargs));
Evaluation.EXCLUDE_AND_CONTINUE;
getPermutations(string.__getslice__(0,i,1)+string.__getslice__(i+1,null,1),prefix+string[i]);
export var corrected_link=upper_match.py_replace(match.group(2).upper(),match.group(2));

main(args);
var app=Flask(__name__);
self.labels=self.ax.get_xmajorticklabels();
abs(x)/abs(y)*cmp(x,0)*cmp(y,0);
var worksheet=workbook.sheet_by_name(workbook.sheet_names()[0]);
self.serversocket=socket.socket(socket.AF_INET,socket.SOCK_STREAM);
dist/hello.app/Contents/MacOS/hello;
(function(){var __accu0__=[];for(var f of matplotlib.font_manager.fontManager.afmlist)__accu0__.append(f.py_name);return __accu0__})();
export var yhi=yhi<=imsize?yhi:imsize;
print(function(){var __accu0__=[];for(var r of raw)__accu0__.append(r/psum(raw));return __accu0__}());
len(b);
2-1;
box.pack();
self.a=a;
export var xpxl2=xend;
var x=y[0]*y[1];
py_iter(self._inner);
sys.stdout=file;
var root=lxml.html.fromstring(html);
var cur=conn.cursor();
d.a.__getslice__(i,i+k,1)==d.b.__getslice__(j,j+k,1);
words_found.append(tuple([k,v]));
xml.sax.expatreader;
res.append(Gap(min(random.randint(1,5),l-t)));
print(args);
auto_generate_test_cases(Tester,Testee);
row.append(DataReader[j].ToString());
line+=py_next(f);
inner_nodes.py_sort(__kwargtrans__({key:function __lambda__(n){return len(subtree[n])}}));
var fig=plt.figure(__kwargtrans__({figsize:tuple([6,6])}));
bi_tag.evaluate(cess_sents.__getslice__(train+1,null,1));
notebook.set_tab_reorderable(page2,true);
var register=Library();
var max_x=scipy.optimize.fmin(function __lambda__(x){return-f(x)},0);
os.mkdir(newDir);
response;
var y=np.outer(np.sin(lons),np.cos(lats)).T;
export var statbuf=os.stat(filename);
self.src[i].insert(0,itemtoshift);
var __left0__=ax.plot(x,y);var l=__left0__[0];
sys.stdin=sys.stdin.detach();
self.path=path;
export var SOME_OTHER_CONSTANT=2;
var ws=wb.active;
list(date_range(begin,end,4));
tuple([matches[1].fromy,matches[1].fromx]);
print(funcs[1]());
print(unrooted_tree);
var end_date=datetime.datetime.utcnow();
time.sleep(8);
var then=now-datetime.timedelta(__kwargtrans__({days:90}));
print(json_data);
self.__init__(self.sl);
tuple(a.tolist());
root.grid_columnconfigure(1,__kwargtrans__({weight:2}));
self.fault=fault;
ax4.legend(__kwargtrans__({loc:5}));
var lines=lines.__getslice__(-10,null,1);
self.handleFontChanged(self.font());
self.buf.seek(0,2);
self.a=a;
[1,0,1,0];
response.status;
var r=re.search(lun_q,s);
var lines=file.readlines();
(function(){var __accu0__=[];for(var n=0;n<7;n++)__accu0__.append(truncate(f,n));return __accu0__})();
hash(true);
result.append(tuple([longest_keyword,tuple([])]));

export var random_list=random.sample(list(genes_dict.py_items()),int(length));
var c=conn.cursor();
var r=list(range(1,loopcount));
true;
resultset.append(dict(row));
main();
var et=ET.ElementTree(document);
py_typeof(a);
np.sum(Math.pow(arr,2));
bool(set(fruit_dict2).intersection(fruits));
var start=time.time();
self.destinitions_list.append(destinition);
file.write(dictionary_content);
PrintLn(f);
print(myset);
all(function(){var __accu0__=[];for(var k of list(a.py_keys()))__accu0__.append(nested_equal(a[k],b[k]));return py_iter(__accu0__)}());
export var serial=LadySerializer(tiger,__kwargtrans__({many:false}));
sock.close();
zip_write.writestr(item,data);
timeit.__getitem__([n/100,__mod__(n/10,10),__mod__(n,10)]);
self.cntrlPanel.SetPosition(tuple([0,0]));
a();
var a=[4,2,1,5];
x[i]=x[i]+1;
array.py_sort(function __lambda__(L,R){return R===0?-1:0});
os.dup2(self._devnull,1);
export var purple_count=len(set(list_of_purple_items).difference(list_of_all_items));
self._bar=bar;
re.sub(findthe,function __lambda__(m,r){if(typeof r=="undefined"||r!=null&&r.hasOwnProperty("__kwargtrans__"))var r=py_iter(replacement);return py_next(r)},sentence);
offset+=1;
var profile=webdriver.FirefoxProfile();
result.append(tuple([1,record.id,py_values]));
d2+datetime.timedelta(calendar.monthrange(d2.year,d2.month)[1]);
self._func(...args,__kwargtrans__(kwds));
datetime.time(hour,minute,second);
print(nsmallest(4,indices(),__kwargtrans__({key:keyfn})));
results[key]=params[key];
PyErr_Print();
aa.set_axis_off();
false;
export var northing=1E7-northing;
print(result);
os.kill(p.pid,signal.CTRL_C_EVENT);
self._session;
png_formatter.for_type(Image.Image,display_pil_image);
var p=argparse.ArgumentParser();
_generate_range_values(value,end);
add_colorbar(im);
var logger=logging.getLogger(__name__);
print(df);
emonth1.insert(10,1);
var title=models.CharField(__kwargtrans__({max_length:255}));
[nest(x,n-1)];
var url=url_test.format(i);
method_to_be_executed_in_case_of_exception_or_pk_is_false();
Foo.y;
foo.bar=types.MethodType(partial(foo.bar,__kwargtrans__({qux:1})),foo);
var groups=list(groups);
np.ix_(rows,cols);
var x=np.arange(16).reshape(tuple([4,2,2]));

var D=function(){var __accu0__=[];for(var [v,k]of enumerate(albums_yesterday))__accu0__.append([k,v]);return dict(__accu0__)}();
var session=dryscrape.Session();
var result=dict({});
print(msg.Subject);
print(A.T);
export var sqr=int(math.sqrt(n))+1;
self.after(100,self.updateimage,__mod__(sprite+1,self.num_sprintes));
foo.num+=1;
time.sleep(.2);
chambersinreactor+=1;
var ret=np.concatenate(ret);
pd.DataFrame(self.py_values.copy(),self.index.copy(),self.columns.copy());
rStandalone.reassign(7);
var original=cv2.cvtColor(original,cv2.COLOR_BGR2RGB);
threshold(imgrey,imgrey,100,255,0);
var __except0__=KeyError(key);__except0__.__cause__=null;throw __except0__;
export var __slots__=[];
export var last_friday_at_16=datetime.datetime.combine(last_friday,datetime.time(16));
plt.subplot(2,1,1);
var user_email=db.Column(db.String(128),__kwargtrans__({unique:true}));
zinfo.CRC=CRC;
var writer=csv.writer(out_f);
var idx=arr[arr.hour>=17]+pd.offsets.Day(1);
export var nodaemon=py_true;
surf1.set_alpha(100);
surf2.set_alpha(100);
print(longest_common([a,b,c]));
var soup=BeautifulSoup(markup);
var u=function(){var __accu0__=[];for(var i=0;i<N;i++)__accu0__.append(np.zeros(tuple([n,n])));return __accu0__}();
sum(counts);
print(tuple([m,b]));
app;
print(categorize(event));
addlist.append(item);
export var Sw=np.cumsum(Math.pow(cw.__getslice__(1,null,1),2));
np.take(bins,np.digitize(a,bins,__kwargtrans__({right:true})));
var my_set=set(my_list);
self.panel=wx.Panel(self,wx.ID_ANY);
all_features.py_sort();
ax.broken_barh([tuple([midpoint-.1,.2])],tuple([perc[1],perc[2]-perc[1]]));
print(p.stdout.readlines());
var instance=RemoveNoise();
var app=Flask();
var inlines=[PageFileInline];
(function(){var __accu0__=[];for(var n of list)__accu0__.append(operation(n));return __accu0__})();
self.listbox.pack();
test_settings(self.request.user);
wiringpi2.wiringPiISR(4,wiringpi2.INT_EDGE_BOTH,my_int);
pl.show();
print(df);
export var slen1=len(s);
export var coeffs=np.polyfit(x,y,2);
chain(...map(py_iter,self.children)+[isingle(self.value)]);
var good=df.ix[df.index-sub.index];
export var stop_timeout=20;
var vals=data_rvs(k).astype(dtype);
var ax=plt.gca();
print(df1);
export var testarr=np.asarray(test);
graph.set_ydata(Y);
my_set.add(5);
f(150,150);
var root=Tk();
np.testing.assert_almost_equal(x,y,5);
str(soup);
var Y=np.dot(beta,X.T);
q.put(line.strip());
piexif.insert(data,path);
self.fileobj.seek(offset,whence);
ret.append(Math.pow(i,2));
rec+=connection.recv(1024);
ax.yaxis.set_minor_formatter(matplotlib.ticker.ScalarFormatter());
main();
0;
processBody(line);
self.py_items.py_pop();
export var abbreviation=models.CharField(__kwargtrans__({max_length:4}));
ipc_event_cmd.execute();
indexes.append(idx);
export var y_indices=indices[1];
m_t.bind();
self.connection.settimeout(self.timeout);
[0,2,2];
cssutils.log.setLevel(logging.CRITICAL);
myTurtle.done();
export var cond=np.logical_and(arr.__getitem__([tuple([0,null,1]),0])>=dtx,arr.__getitem__([tuple([0,null,1]),0])<dty);
export var pDF=sqlContext.createDataFrame(pdDF);
print(df[order]);
export var nbits=n.bit_length()+(n<0?1:0);
df.to_html(out,__kwargtrans__({float_format:fmt}));
node0.join();
block_list.extend(sequences.__getslice__(0,null,-1));
tuple([list(range(df.EVALUATION_GRADE.min(),df.EVALUATION_GRADE.max()+1))]);
var timeout=Timeout(seconds,exception);
export var sx=np.sqrt(np.sum(x2*xp)/np.sum(xp));
gram_matrix.__setitem__([i,j],K(x,y));
var d=defaultdict(list);
np.vsplit(a,2);
alpr.is_loaded();
export var testsuite=unittest.TestSuite();
channel.exec_command(COMMAND);
os._exit(1);
result.append(item);
log.err();
QtCore.Qt.CopyAction|QtCore.Qt.MoveAction;
button.setIcon(icon);
self.arrays[j][i-shift];
is_sum_of_numbers(18,numbers);
csvout.writerows(repeat(row.__getslice__(2,4,1),count));
cache.py_get(key);
var list_a=ModelA.objects.all();
var seen=set();
ax.plot(list2);
var idx=mask.__getitem__([xarr,yarr]).astype(bool);
py_iter(obj.py_items());
scatter(X,Y,__kwargtrans__({c:py_next(cycol)}));
map.remove(coord);
_cell.style.alignment.wrap_text=true;
export var lucky=[];
fp.close();
var color=px.__getitem__([x,y]);
len(a);
var counter=collections.defaultdict(int);
s[d[i]]=rearranged_data[i];
a.__getslice__(2,null,1);
var req=urllib.request.Request(url_2,data);
tuple([[0,2,0]]);
var results=cursor.fetchall();
self._callfunc=function __lambda__(s){return s};
self.appExeCB=QtGui.QComboBox();
var __left0__=cv2.threshold(gray,10,255,0);var ret=__left0__[0];var gray=__left0__[1];
var __left0__=ax.get_legend_handles_labels();var handles=__left0__[0];var labels=__left0__[1];
var c=mkunion(a,b);
fig.savefig(filename);
msg.send();
response.peercert=resp.peercert;
f(a);
app.debug=true;
export var blob_reader=blobstore.BlobReader(blob_key);
do_something(vals[key]);
var event=pygame.event.wait();
export var new_usage=function(){var __accu0__=[];for(var [k,v]of groupby(zip2,__kwargtrans__({key:itemgetter(0)})))__accu0__.append(sum(function(){var __accu1__=[];for(var x of v)__accu1__.append(x[1]);return py_iter(__accu1__)}()));return __accu0__}();
tree[0].text;
thread.start();
var py_name=file.filename;
sympy.__version__;
df;
export var m_=np.ma.masked_where(y>2,x);
start_date.py_replace(__kwargtrans__({year:start_date.year+1}));
print(result);
var fig=plt.figure();
self.nodes.append(n);
any(some_list);
mylib.Add.restype=c_int;
var a=numpy.arange(1E3);
print(line);
(function(){var __accu0__=[];for(var i=0;i<16;i++)__accu0__.append(plt.plot(i,0,__kwargtrans__({marker:markers[i],ms:10})));return __accu0__})();
BrotliCompression.Decompress(input,output);
threads[t].start();
export var foo_copy=copy.deepcopy(foo);
py_typeof(self)(self.default_factory,copy.deepcopy(list(self.py_items())));
py_metatype.__setattr__(cls,attr,value);
var list2=list1.py_split();
[0,2,0];
f.seek(2,1);
print(f);
var layout=QtGui.QVBoxLayout(w);
binary.insert(0,bit);
foo(__kwargtrans__(args_dict));
(function(){var __accu0__=[];for(var i of[1,2])for(var z of itertools.filterfalse(function __lambda__(x){return __in__(x,ys)},xs))__accu0__.append(tuple([i,z]));return __accu0__})();
var f=pickle.loads(x);
true;
loggerCent.addHandler(ce);
wrapper_object.close();
var content=conn.getresponse().read();
print(data);
var parser=argparse.ArgumentParser(__kwargtrans__({usage:usage}));
plt.plot(x,f2(x));
df1;
res.py_get();
var d=datetime.timedelta(__kwargtrans__({days:21}));
export var feed=feedparser.parse(url);
export var qry=session.query(Page);
hasher.py_update(block);
dict.__setitem__(self,key,val);
Review.objects.filter(__kwargtrans__({venue__pk:2}));
b();
sleep(1);
var py_items=function(){var __accu0__=[];for(var i of py_items)__accu0__.append(i.py_items());return __accu0__}();
f.write(html);
print(tuple([table,field,row[field]]));
new_list;
var input=input();
export var list_of_numbers=sorted(list_of_numbers);
res.head(10);
self._ngrams.add(ngram);
p2.stdin.write(data);
tick.label1=tick._get_text1();
var fig=plt.figure();
view.py_replace(edit,sublime.Region(0,view.size()),text);
var p=Popen(cmd,__kwargtrans__({stdout:PIPE}));
green_list.append(s[0]-green_start);
var doc=docx.Document(filename);
device.close();
fliplr(flipud(m));
im.show();
self.assertEqual(untrusted,res);
a.sort_index(1,__kwargtrans__({inplace:true}));
explain.my_selfexplaining_method();
var client=paramiko.SSHClient();
export var first_elts=function(){var __accu0__=[];for(var x of my_tuples)__accu0__.append(x[0]);return __accu0__}();
var z=np.zeros(tuple([5,5]));
export var testloader=unittest.TestLoader();
var __left0__=os.path.splitext(filename);export var basepart=__left0__[0];var ext=__left0__[1];
py_replace(list,1,7);
export var sorted_chunk=sorted(islice(input_file,5E4));
var foo=function __lambda__(x){return pd.Series(pd.qcut(x,10,__kwargtrans__({labels:false})),__kwargtrans__({index:x.index}))};
ADOMDConn.Open();
sentencecount+=1;
export var subdict=function(){var __accu0__=[];for(var x of interesting_keys)if(__in__(x,bigdict))__accu0__.append([x,bigdict[x]]);return dict(__accu0__)}();
export var last_key=line.__getslice__(0,-1,1);
self.worker=Worker();
alist.py_sort(__kwargtrans__({key:natural_keys}));
var result=pool.map_async(task,list(range(10)));
print(sess.run(b));
D();
var X=[np.sin(e)*np.cos(a),np.sin(e)*np.sin(a),np.cos(e)];
var df=pd.DataFrame(np.random.randn(1E4,1E4));
feedparser.parse(url);
self.window.setWindowFlags(QtCore.Qt.Widget);
second+=timedelta(__kwargtrans__({days:1}));
var result=[];
srn(my_number);
circle[0];
main();
User.master_query.filter(User.id==1).all();
do_something(fname);
var a1=np.array([[1,1,1],[1,1,1],[1,1,1]]);
var a=np.random.random(tuple([10,10]));
self.assertEqual(1+1,2);
var a=Article.objects.all()[0];
+b*cos(u)*sin(v);
export var r_server=redis.Redis(__kwargtrans__({connection_pool:pool}));
cc.get_violating_points();
var g=g.reset_index();
horizontal.py_sort(__kwargtrans__({key:function __lambda__(x){return x[1]}}));
var start=time.time();
table[i][W-1];
export var rgb_to_hsv=np.vectorize(colorsys.rgb_to_hsv);
print(Crypt.find_crypts(0));
self.view=QtGui.QTreeView();
var response=connection.getresponse();
print(authentry.parseString(text).dump());
export var box_form=workbook.add_format();
var layout=QtGui.QHBoxLayout();
sources.__getslice__(0,MAX_SOURCES,1);
time.sleep(.7);
writer.writerow(newline);
self.centralwidget=QtGui.QWidget(self);
np.where(abcd<=data2a&abcd>=data2b,1,0).sum();
py_items[bisect.bisect(added_weights,random.random()*last_sum)][0];
export var sorted_input=sorted(input,__kwargtrans__({key:itemgetter(1)}));
can.pack();
var d=dict({});
var a=np.array(quantized);
var z=zipfile.ZipFile(some_source);
print(outputStr.__getslice__(0,-1,1));
print(cert.prettyPrint());
export var new_val=sum(function(){var __accu0__=[];for(var d of dicts)__accu0__.append(d[topkey][key]);return __accu0__}());
process.start();
df[columns];
ord(hashlib.md5(s).digest()[0]);
PyErr_Print();
S[col]=int(homescore)-int(awayscore);
var style=wx.DEFAULT_DIALOG_STYLE|wx.RESIZE_BORDER;
var i=np.where(mask)[0][0]+1;
var A=np.random.randint(1,5,tuple([N,N,K]));
ax2.set_xlim(51,56);
self.reader.__iter__();
export var testlist=random.sample(list(range(0,20)),10);
edges.__getitem__([i-2,j]).append(tuple([i+2,j]));
self.creation_date=datetime.datetime.now();
var x=1;
var primes=[];
__bootstrap__();
(function(){var __accu0__=[];for(var i of range(...idx.indices(len(self))))__accu0__.append(self[i]);return __accu0__})();
var writer=csv.writer(fp);
__in__([1,2],new set([1,2]));
var __left0__=select.select(r,w,e,timeout);var r=__left0__[0];var w=__left0__[1];var e=__left0__[2];
ax.plot(scipy.randn(8));
model.add(Dropout(dropout));
var soup=BeautifulSoup.BeautifulSoup(html);
n_lsb(n)&~n_lsb(m);
var counts=Counter(chain(...map(set,mylist)));
b.shape;
self.b.clicked.connect(self.clickHandler);
figure();
nltk.__version__;
export var many=true;
crawler.signals.connect(reactor.stop,__kwargtrans__({signal:signals.spider_closed}));
wp.interpolate();
var b=np.matrix(b).T;
i+=1;
var salt=bcrypt.gensalt();
var __left0__=pl.subplots();var fig=__left0__[0];var ax=__left0__[1];
var result=list(camel.camel_search(text,search_words));
tuple([a.getSingle(),b.getSingle(),b.getSingle_B()]);
var M=Matrix(tuple([[x,y],[a,b]]));
plt.figure();
[1,0,0,1];
var a=datetime.now();
var train_op=optimizer.apply_gradients(capped_gvs);
self.portfolio.append(entry);
plt.show();
var col=np.tile(ii,tuple([a.shape[1]]));
price2;
var start=end+1;
print(cur.fetchall());
var a=representatives[a];
process();
p.close();
result;
var data=conn.recv(1024);
repo.index.commit(commit_message);
export var total_columns=len(the_tuple);
false;
print(selected_option.text);
self.fp.write(buf);
test2.timestamp=datetime.datetime.now()-datetime.timedelta(__kwargtrans__({hours:1}));
var x=[];
stack.py_pop().append(element);
var data=mmap.mmap(f.fileno(),0);
pylab.xlim([min(lefts),max(rights)]);
print(fin.read().strip());
cause.append(n.id);
bool(function(){var __accu0__=[];for(var x of list(results.py_values()))if(set(x)==match)__accu0__.append(x);return __accu0__}());
dfs.append(psql.read_frame(sql,cnxn));
111111;
(function(){var __accu0__=[];for(var p of proc)__accu0__.append(p.join());return __accu0__})();
self.remoteuser=remoteuser;
self.remotehost=remotehost;
var resized_file=orig_image.resize(scaled_size,Image.ANTIALIAS);
x*y;

var window=np.asarray(window);
self.statusItem.setHighlightMode_(TRUE);
var fftf=scipy.fftpack.fftn(f);
export var adlen=ctypes.c_ulonglong(len(ad));
self.recv_buf_i+=4;
var today=datetime.datetime.now();
do_something();
export var com=serial.Serial();
-cr.fetchone();
time.sleep(1);
print(unpickle_regexes(pkl));
value;
var d=dict(l);
len(self._list);
urls.py;
os.utime(fileName,tuple([orgTime,orgTime]));
print(out);
(function(){var __accu0__=[];for(var b of x)__accu0__.append(!b);return __accu0__})();
var line=f.py_next().strip();
powers.append(i);
object_session(self).query(Foo).filter(Foo.bar==self).count();
var a=A();
loop.run_until_complete(run());
fig.set_size_inches(1,1);
server.login(username,passwd);
h2o.auc(best_model,__kwargtrans__({valid:TRUE}));
var current=datetime.date(2010,8,1);
set(deletes+transposes+replaces+inserts);
dict(zip(it1,it2));
session.configure(__kwargtrans__({bind:engine}));
kill_proc_tree(me);
var value=count_list.py_pop();
AxesWidget.__init__(self,ax);
self.sprockets.remove(spr);
km.load_connection_file();
f.write(counter);
df[df.ge(0)].fillna(-9999).where(df<0,df.eq(df.max(1),0).astype(int));
a.foo();
canvas.create_polygon(...coords);
sleep(.1);
export var mro=self.__class__.mro();
1;
self.__offset=timedelta(__kwargtrans__({minutes:offset}));
setattr(TestSequence,testmethodname,testmethod);
draw_ellipse(image,ellipse_box,__kwargtrans__({width:20}));
df;
var channel=connection.channel();
self.py_update(rawdata);
var user=User.objects.py_get(__kwargtrans__({username:username}));
myseries_one.loc.__getslice__(0,2,1);
logger.setLevel(logging.INFO);
print(myglobal);
result;
print(f.__defaults__);
f();
i-=1;
print(df);
export var sorted_ab=zip(...sorted(chain(keyed_a,keyed_b),__kwargtrans__({key:function __lambda__(t){return t[0]}})))[1];
cbar_ax.set_position([posn.x0+posn.width+.01,posn.y0,.04,posn.height]);
dict(ChainMap(...a));
processBody(line);
var line=line.strip();
Function(function __lambda__(x){return self(x)/other(x)});
self.stdout=sys.stdout;
var ax1=fig.add_subplot(111);
var date=dt.datetime(1970,1,1);
df[subset.isin(myList).rolling(2,__kwargtrans__({axis:1})).sum().max(__kwargtrans__({axis:1}))>=2];
export var ch1=stackless.channel();
eval(method_name2);
export var window_name=window.get_wm_name();

1;
m.group(1);
counts[i]=counts.py_get(i,0)+1;
counter[0]-=1;
archive.write(path,relname);
var users=api.lookup_users(__kwargtrans__({user_ids:ids}));
cj.load();
df.dtypes;
var ax=fig.add_subplot(111);
L.__setslice__(a+span2,c,null,L.__getslice__(a,b,1));
export var min_dist=np.empty(n);
main();
export var copy_of_a=list(a);
nl.append(base);
list(zip(a,b));
ax.yaxis.set_major_formatter(FixedOrderFormatter(-9));
var s=open(filename).read(512);
p.insert(0,a);
Test.method_two();
file.close();
self.layoutVertical=QtGui.QVBoxLayout(self);
var __left0__=tuple([function(){var __accu0__=[];for(var x of compound_iter)__accu0__.append(x[0]);return __accu0__}(),function(){var __accu0__=[];for(var x of compound_iter)__accu0__.append(x[1]);return __accu0__}()]);var iter1=__left0__[0];var iter2=__left0__[1];
logging.config.dictConfig(LOGGING);
g.readinto(q);
var ret=float(s);
_a(cos(p[0])*p[1],sin(p[0])*p[1]);
df;
var k=k[k!=test].reshape(-1,2).astype(float);
var bs=BeautifulSoup(html);
export var image_yuv=cv2.cvtColor(image,cv2.COLOR_BGR2YUV);
t.set_priv(true);
retval+=chr(node[1][0][1][0]);
export var palette=imframe.getpalette();
var z=np.logical_or(z,rolled);
np.dot(L1_sums,L2_sums);
var data=s.recv(1024);
var list=[7,6,5,7,6,7,6,6,6,4,5,6];
pygame.time.Clock().tick(10);
var reader=csv.reader(f);
ax.add_collection(col);
var sock=socket_create(AF_INET,SOCK_STREAM,0);
plt.plot(ipl_t,x_i);
d[k]+=v;
tuple([[7,8,9]]);
var __except0__=ConnectionError(err,__kwargtrans__({request:request}));__except0__.__cause__=null;throw __except0__;
dict(d);
export var ransport=random.choice(list(sportDict.py_keys())+[sport]);
distutils.log.set_verbosity(-1);
var __left0__=plt.subplots(1,2,__kwargtrans__({sharey:true,tight_layout:true}));var fig=__left0__[0];var ax=__left0__[1][0];var ax2=__left0__[1][1];
aut.add_word(s,s);
mins.py_sort();
__mod__(self.bar,2)==0;
unquote(value);
new_arr.append(new_val);
session.flush();
var image=Image.open(data);
func.__get__(obj,cls);
nx.draw_networkx_edges(Gcc,pos,__kwargtrans__({alpha:.4}));
ax.set_ylim(-.5,.5);
settings.MYAPP_SETTINGS_1;
save(random.choice(classes),arg);
(function(){var __accu0__=[];for(var x of range(i.start,i.stop,i.step||1))__accu0__.append(self[x]);return __accu0__})();
Object.__getattr__(self,py_name);
print(len(x));
sys_exit.assert_called_with(1);
pylab.plot(list(range(10)));
df;
threads.append(t);
atexit.register(web.quit);
print(sdi);
plt.yticks(np.array([]));
var match=[0]*(len(s)+1);
timeout.cancel();
session.flush();
print(time.clock());
client_socket.send(size);
df[~df.stack().between(.1,1).unstack()].dropna(__kwargtrans__({axis:1}));
export var window_size=np.abs(np.int(window_size));
a+b;
true;
export var image_input=tf.placeholder(tf.uint8,__kwargtrans__({shape:[22500]}));
subprocess.check_output(command).strip();
isinstance(p,list);
print(lst);
var o=Object();
print(match);
self.delete(self.index(Tkinter.INSERT),Tkinter.END);
var __left0__=object();self.tgtkey=__left0__;self.currkey=__left0__;self.currvalue=__left0__;
session.add(new_bike);
setattr(obj,accessor_name,object_list);
var m=a[k];
var message=self.queue.py_get();
export var edgex2=region2^np.roll(nregion2,__kwargtrans__({shift:shift,axis:0}));
var c=formC.save(__kwargtrans__({commit:false}));
print(platform.python_version());
dest.blit(tmp,tuple([0,0]),dest.get_rect().clip(maskrect));
fmt_values;
self.store.remove(key);
var divider=make_axes_locatable(ax1);
pd.crosstab(df.Event,df.Status);
a+=[4];
clusters[-1].append(point);
tmp.seek(0);
branch[1].append(path[-1]);
progress.setValue(100);
x*2;
merge_Sort(list1,list2,new_list);
Z.data*=Y[Z.row];
d[c]=i;
tuple([args,subargs]);
self.factory.echoers.remove(self);
video_window.destroy();
sct.norm.ppf(__kwargtrans__({q:.05,loc:60,scale:40}));
string.__getslice__(string.find(substring)+len(substring),null,1);
var response=requests.py_get(__mod__(_GOOGLE_TRENDS_URL,term));
tuple([0,[true,true,true,true]]);
export var loaded_dict=json.loads(dumped_dict,__kwargtrans__({object_hook:date_hook}));
wx.Panel.__init__(self,parent);
var L=[0,8,5,6,4,5,6,14,8];

myTurtle.forward(size);
myObject.die();
file.seek(currentReadPos);
scene.objects.active=lamp_object;
result[key]=value;
var f1=function __lambda__(x){return np.sum(x)-1};
nested.__closure__[0];
var ax=fig.add_subplot(111);
G.add_edge(parent,child);
self._conn.timeout=timeout;
export var fscale=t/max(t);
df;
var __left0__=pickle.load(f);export var obj0=__left0__[0];export var obj1=__left0__[1];export var obj2=__left0__[2];
export var kwonly=oldcode.co_kwonlyargcount;
var jsondata=JsonData(__kwargtrans__(result));
file_list.extend(function(){var __accu0__=[];for(var f of files)__accu0__.append(join(root,f));return py_iter(__accu0__)}());
var b=np.random.randint(N,__kwargtrans__({size:n}));
var image=Image.open(stream);
print(soup.contents[0].string);
x.cumsum();
export var current_color=px.__getitem__([i,j]);
print(count.most_common());
print(len(match_foo));
export var dt_now=datetime.now();
var result=task.py_get();
db.put(fu_list);
var idx=list(df.index);
print(function(){var __accu0__=[];for(var x of words)if(len(x)>avg)__accu0__.append(x);return __accu0__}());
os.dup2(fd_stdout,1);
print(py_typeof(value));
new set([new set([block_of_text|nl2br])]);
html;
ast.dump(node);
var fig=plt.figure();
var idx=cutoffs.searchsorted(np.random.uniform(0,cutoffs[-1]));
s.intersection(...ip);
heapq.heappush(pqueue,tuple([-atime,fsize]));
result[-1].append(s);
self.set_weights(function(){var __accu0__=[];for(var x=0;x<n_inputs+1;x++)__accu0__.append(random.uniform(0,1));return __accu0__}());
var __left0__=tuple([min_value,max_value]);self.min_value=__left0__[0];self.max_value=__left0__[1];
var im=np.vstack(tuple([im.__getslice__(1,null,1),im[0]]));
var n=len(x);
self.rematch.group(i);
B[idx[1]];
generate_random_data(latitude,longitude,5,file_n);
var l2=[4,5,6];
export var uform=UserForm(__kwargtrans__({data:request.POST}));
var t=threading.Thread(__kwargtrans__({target:worker}));
var x2=np.linspace(0,2,100);
var B=np.rollaxis(A,2);
var draw=ImageDraw.Draw(image);
id(gb1.a);
ax.set_ylabel(label,__kwargtrans__({size:20}));
export var pzi=points.__getitem__([i,2]);
data.append(group);
self.view=QtGui.QTableView(self.centralwidget);
tuple([function(){var __accu0__=[];for(var x of pargs)__accu0__.append(isinstance(x,arg)?x.index:-1);return py_iter(__accu0__)}()]);
titled.append(word);
a;

var content=urllib.request.urlopen(url).read();
self._list=list(data);
df;
d.hexdigest();
s.kill();
memoizer;
obj.companyid.py_name;

export var polygon_coordinates=[[5,10],[7,9],[8,11],[11,20]];
var my_dict=MyDict();
var session=sessionmaker(__kwargtrans__({binds:binds}))();
json.dumps(data,__kwargtrans__({indent:2}));
var __left0__=np.meshgrid(row,row);var X=__left0__[0];var Y=__left0__[1];
export var query_string=urlencode(OrderedDict(__kwargtrans__({data:initial_url,search:search})));
child_list.append(child);
export var old_handler=signal.signal(signal.SIGALRM,timeout_handler);
self.oldglobals=dict({});
f(__kwargtrans__(kwargs));
var __left0__=tuple([x.min(),x.max(),y.min(),y.max()]);var xmin=__left0__[0];var xmax=__left0__[1];var ymin=__left0__[2];var ymax=__left0__[3];
var b=B();
var x=np.linspace(np.min(sample),np.max(sample));
var total=0;
true;
buffer.seek(0);
stat2[k]+=v;
all(lst)||!any(lst);
var C=[];
var array=getarray[i];
print(np.outer(x.__getitem__([10,tuple([0,null,1])]),y.__getitem__([10,tuple([0,null,1])])));
BeautifulSoup(badString,__kwargtrans__({markupMassage:myNewMassage}));
somefile.seek(0,os.SEEK_END);
var __left0__=tuple([current,py_next(self.py_iter)]);var prev=__left0__[0];var current=__left0__[1];
query;
export var lin=np.linspace(0,5,100,__kwargtrans__({endpoint:false}));
df[df.columns.__getslice__(1,null,1)];
var context=dict({});
export var rotated_df=largest_haloes.dot(x);
var group=models.ForeignKey(Group);
export var l_counts=function(){var __accu0__=[];for(var x of set(l))__accu0__.append(tuple([l.count(x),x]));return __accu0__}();
nones.append(ind);
setattr(self,py_name,float(x));
template.format(userinfo);

var s=np.argsort(b);
var k=json.dumps(m);
var n=sum(function(){var __accu0__=[];for(var row of csv.reader(filename))__accu0__.append(1);return py_iter(__accu0__)}());
io.show();
export var sub_arrays=function(){var __accu0__=[];for(var ds of data_slices)__accu0__.append(arr[ds]);return __accu0__}();
+models.py;
var x=np.arange(1*2*k).reshape(2,k);
pprint(h);
export var cleansed=cleaner.clean_html(code);
atexit.register(save_history);
export var curpath=os.path.dirname(os.path.abspath(file));
libcap.cap_to_text.restype=ctypes.c_char_p;
var cols=np.array([1,2]);
pprint.pprint(codes);
wnl.lemmatize(greatest);
self.value.__str__();
print(A.method_c.__func__.__code__.co_firstlineno);
pl.imshow(z1,__kwargtrans__({extent:[-5,5,-5,5],alpha:.2}));
print(list(rand_days));
var a=ctypes.create_string_buffer(Math.floor(lnum.bit_length()/8)+1);
ax1.grid(true);
screen.blit(sys_font.render(l,0,hecolor),tuple([x,y+fsize*i]));
np.stack(np.where(df.py_values)).reshape(-1,2);
thread.start();
export var radii=np.linspace(.5,1,10);
w.head();
var buf=(c_char*n).from_address(p);
var s=pd.Series(words,__kwargtrans__({index:idx}));
data[i]=valuej;
var client_sock=socket.socket(socket.AF_INET,socket.SOCK_STREAM);
A.shape;
var data=f.read();
var template=env.get_template(templatefile);
var p=subprocess.Popen(filepath,__kwargtrans__({shell:true,stdout:subprocess.PIPE}));
layout.addWidget(de);
f.write(chunk);
parser.write(f);
var y=[4,5,6];
Foo.instance_count+=1;
self.py_name;
var line=eval(input());
self.oparg=oparg;
var start=dt-timedelta(__kwargtrans__({days:dt.weekday()}));
var app=wx.PySimpleApp();
cls.__old_init(self,...a,__kwargtrans__(kw));
set(function(){var __accu0__=[];for(var i=0;i<delta.days+1;i++)__accu0__.append(d1+timedelta(__kwargtrans__({days:i})));return __accu0__}());
var y=[4,5,6];
var app=wx.App(false);
var pos=nx.spring_layout(G,__kwargtrans__({fixed:list(fixedpos.py_keys()),pos:fixedpos}));
c.persist();
var delta=timedelta(__kwargtrans__({days:-delta_days,weeks:delta_weeks}));
print(tuple([my_num,my_string]));
var x=x.__iadd__([4,5,6]);
check(float(sys.argv[1]),float(sys.argv[2]));
var __left0__=p.communicate();var out=__left0__[0];var err=__left0__[1];
X.__getitem__([[10],tuple([0,null,1])]);
self.old_handler=signal.getsignal(signal.SIGINT);
excel.Visible=0;
print(tuple([x[N],y[N]]));
regr.fit(chntrain_X,chntrain_y);
var kwargs=dict(kwargs);
stream.close();
self.files+=1;

texter.setPlainText(infile.read());
ss.py_sort(__kwargtrans__({key:function __lambda__(a){return a[1].order}}));
a.a=2;
print(temp.weekday());
destination.set_contents_from_file(myfile);
my_map.bluemarble();
var filename=sys.argv[1];
rowspans[daynum]-=1;
var b=[0,2,4,5];
var output=ps.communicate()[0];
var n=b.shape[0];
child.close();
self.inverse.py_setdefault(self[key],[]).remove(key);
print(x);
repr(test.f_call);
NULL;
var __left0__=tuple([self.width,self.height]);var width=__left0__[0];var height=__left0__[1];
dG.add_node(next_word);
f.__closure__;
self.Bind(wx.EVT_LIST_BEGIN_LABEL_EDIT,self.OnBeginLabelEdit);
export var cumsum=df.indweight.cumsum();
export var Descr=row.Cells(2).Range.Text;
var doc=etree.parse(fp);
var logger=logging.getLogger();
var v=numpy.diff(t);
m_action.perform();
print(combs(sampleip1));
print(combs(sampleip0));
var data=pd.read_csv(filename,__kwargtrans__({names:headings}));
var df=pd.DataFrame.from_records(t,__kwargtrans__({columns:t.columns}));
print(c);
export var data_string=pickle.dumps(data,-1);
new_button.configure(__kwargtrans__({command:callback_factory(new_button)}));
export var img_result=numpy.dstack([img,img,img]);
export var not_contains=~df.isin([.1,1.2]).any(__kwargtrans__({axis:1}));
export var elapsed2s=[];
z;
filepaths.py_sort(__kwargtrans__({key:function __lambda__(filename){return filename[1]},reverse:reverse}));
var base=np.arange(size);
export var gcs_file=gcs.open(filename);
tuple(self.construct_sequence(node));
df;
parser.parse(d);
res.append(defaults[f]);
log.startLogging(sys.stdout);
var now=datetime.now();
c.__setitem__([1,2],5);
print(i+1);
self.response.write(gcs_data.gcs_read_blob(dyn));
var x=np.linalg.solve(a,b);
var src=driver.page_source;
var draw=ImageDraw.Draw(img);
var a=s.__getslice__(0,24,1).uintle;
var site=self.request.db.query(Site).filter_by(__kwargtrans__({id:key})).first();
self.process.finished.connect(function __lambda__(){return self.runButton.setEnabled(true)});
var ssh=createSSHClient(server,port,user,password);
var utc_offset=local_dt.utcoffset();
print(g(x));
[1,2]==[1,2];
self;
var current_line=my_file.readline();
datetime(date.year,date.month,day);
print(max(list(kmer2count.py_items()),__kwargtrans__({key:function __lambda__(k_v){return k_v[1]}})));
map(operator.itemgetter(1),L);
repl+=repl_pattern.__getslice__(len(match_str),null,1);
var ax=plt.subplot(111);
export var display=Xlib.display.Display();
list(chunker(x,2));
t.join();
serializer.object;
var angleInDegrees=atan2(deltaY,deltaX)*180/PI;
var dx=x2-x1;
var result=[];
self.axes=self.figure.add_subplot(111);
pickle.dump(value,f);
grid();
export var outliers=X[labels==-1];
CustomPaginateNode(paginator_class,objects,__kwargtrans__(kwargs));
tally[item].append(i);
var myDict=function(){var __accu0__=[];for(var x of xs)__accu0__.append([x.index,x]);return dict(__accu0__)}();
var key=tuple([row[1],row[2]]);
group_by(input,1);
g.usersview.render();
s.sum(__kwargtrans__({level:1}));
var header=gtk.HBox();
z.insert(0,z.py_pop());
np.random.shuffle(mask);
(function __lambda__(cls){return make_threadsafe(cls,methodnames,lockfactory)});
var idx=np.random.choice(np.arange(len(x)),1E3,__kwargtrans__({py_replace:false}));
Py_DECREF(index);
var lst=sorted(py_iter(d.py_items()),__kwargtrans__({key:itemgetter(1)}));
var http=httplib2.Http();
tuple(function(){var __accu0__=[];for(var slot of self.__slots__)__accu0__.append(getattr(self,slot));return py_iter(__accu0__)}());
var app=wx.App(false);
export var localtime=time.localtime();
export var myIntList=function(){var __accu0__=[];for(var x of myList)if(isinstance(x,int))__accu0__.append(x);return __accu0__}();
print(string[6]);
br.geturl();
temp.append(i);
var __left0__=noglobaltest();var py_name=__left0__[0];var age=__left0__[1];
self._waitready=set();
export var db1=SQLAlchemy(app1);
var w=w.translate(table);
print(folder.py_name);
views.py;
deleted[1];
data.__getitem__([tuple([0,null,1]),0]);
export var new_word=word.__getslice__(0,index,1)+char+word.__getslice__(index+1,null,1);
var __left0__=ssh.exec_command(prepare_command(command));var stdin=__left0__[0];var stdout=__left0__[1];var stderr=__left0__[2];
export var only_words=list(filter(str.isalpha,my_list));
self.py_name=py_name;
print(json.dumps(d,__kwargtrans__({indent:2})));
print(self.treeWidget.currentItem().text(0));
var fexdata=dict({});
export var hash1=hashlib.md5();
print(z);
var s=a.argsort();
var E=np.array(tuple([xp,yp,zp]));
var a=Decimal(str(a));
var rs=q.get_messages(10);
var start=time.time();
export var ang=math.atan2(b[0]-a[0],b[1]-a[1]);
downloadFiles(source,dest);
self.rect.left+=self.dir.x*SPEED;
export var result2=pd.concat([d1,df1],__kwargtrans__({axis:1}));
self.ax=self._fig.add_subplot(111);
client.remove_flags(msg_ids,[SEEN]);
NSScreen.mainScreen().frame().height;
var data=literal_eval(f.read());
self.count+=1;
var args=parser.parse_args();
result.append(dict(__kwargtrans__({py_metatype:key,py_items:list(function(){var __accu0__=[];for(var v of valuesiter)__accu0__.append(v[0]);return py_iter(__accu0__)}())})));
var data=np.zeros([N,4114]);
logging.disable(logging.CRITICAL);
var conn=pycurl.Curl();
new set([new set([forms.render_field(field)])]);
var __except0__=ndb.Return(buildings);__except0__.__cause__=null;throw __except0__;
np.random.shuffle(col0);
export var global_objs=list(__all__.py_items());
print(response.msg);
export var passw=function(){var __accu0__=[];for(var record of records)__accu0__.append(record[1]);return __accu0__}();
print(page.read());
Pdb;
var a=[4,5,0,0,6,7,0,1,0,5];
aList.py_pop(0);
np.nonzero(b);
var me=np.zeros(n.shape[0]);
main();
p.join();
QtGui.QDirModel.setData(self,index,value,role);
print(x);
print(pandas_select(df,select_dict).to_string());
myShape.translate(Base.Vector(2,0,0));
export var stock=data.ix[idx];
(df==window_stop_row).all(__kwargtrans__({axis:1}));
(function __lambda__(self){var args=tuple([].slice.apply(arguments).slice(1));return getattr(self.num,py_name)(...args)});
time_series.append(forecast_append);
var q=manager.Queue();
var t2=threading.Thread(__kwargtrans__({target:thread2,args:tuple([2,t2_stop])}));
self.cursor.execute(sql,tuple([reason,id]));
logging.getLogger().addHandler(fh);
x.append(words[1]);
self.ax.set_thetagrids(self.angles,__kwargtrans__({labels:titles,fontsize:14}));
export var set_lst=set_lst.difference(check_file);
var grid=np.arange(100).reshape(tuple([10,10]));
export var argsdict=dict({});
__mod__(base_string,py_values);
export var std2=1;
PersonQuerySet(self.model);
py_iter(list(itr).__getslice__(1,null,1));
var __left0__=tuple([list[0],list[1]]);var a=__left0__[0];var b=__left0__[1];
parser.print_help();
map(x.count,x);
appended_data.append(data);
A.T;
p.append(2);
(function(){var __accu0__=[];for(var _m of tup)__accu0__.append(atleast_2d(_m));return __accu0__})();
input.close();
var mx=np.matrix(x);
self.layout=QtWidgets.QVBoxLayout();
export var C2=Cookie.SimpleCookie();
imp.find_module(module_name);
var cursor=conn.cursor(cursors.SSCursor);
new set([new set([number])]);
tmp.blit(mask,destpos,maskrect,__kwargtrans__({special_flags:pygame.BLEND_RGBA_MULT}));
widget.layout().addWidget(label);
var n=int(math.sqrt(2*x));
cc.run();
var r=requests.py_get(url);
logging.FileHandler.__init__(self,filename,mode,encoding,delay);
var env=jinja2.Environment();
print(result.py_get(__kwargtrans__({timeout:1})));
f.read(1);
export var modela=models.OneToOneField(ModelA);
params.append(filtervalue);
self.weight=weight;
var heatmap=plt.pcolor(data);
var b=int(a);
consume(function(){var __accu0__=[];for(var x of some_list)if(x>5)__accu0__.append(some_func(x));return py_iter(__accu0__)}());
var r=pd.Series(list(range(len(df)))).__getslice__(0,null,-1)+1;
var value=line.py_split()[-1];
l[i]+=1;
transactions.py_sort(__kwargtrans__({key:operator.itemgetter(0)}));
a+0;
var output=PdfFileWriter();
combined[key1].append(key2);
var screen=pygame.display.set_mode([100,100]);
var counts=np.zeros(__kwargtrans__({shape:arr.shape}));
export var tutorials=function(){var __accu0__=[];for(var tutorial of tutorials)__accu0__.append(frozenset(tutorial));return __accu0__}();
setattr(obj,proxy.value_attr,value);
self.read_events();

self.inner_test=InnerTest();
plt.tight_layout();
df[py_keys]=df[j]-df[from_joint];
h2.setLevel(logging.WARNING);
seen.add(x);
var cap=cv2.VideoCapture(0);
var __left0__=np.polyfit(x,np.log(y),2);var A=__left0__[0];var B=__left0__[1];var C=__left0__[2];
export var arg_dict=dict({});
(function(){var __accu0__=[];for(var [grouper,py_values]of my_groupby_generator)__accu0__.append(tuple([grouper,list(py_values)]));return __accu0__})();
count[word]+=1;
ax.w_zaxis.set_pane_color(tuple([1,1,1,0]));
obj_a.my_method();
axis1.plot(list(range(10)));
blank_image.__setitem__([tuple([0,null,1]),tuple([.5*width,width,1])],tuple([0,255,0]));
[1,0,1,0];
self.__dict__[py_name];
print(foo.args);
var N=col.shape[0];
FIN.seek(random.randrange(length),0);
tuple([[2,0,1]]);
float(timedelta.days)+float(timedelta.seconds)/float(86400);
setattr(obj,self.private_name,result);
dir(parrot.Norwegian);
c1.say_my_name();
ctx.set_line_width(1.5);
var signal=wave_file.read_frames(wave_file.nframes);
var v=A.__getslice__(position,null,1).__getslice__(0,length,1);
self._build_calendar();
self._fileobj.tell()-self._offset;
export var foundwords=[];
PyErr_Print();
output.write(input.readline());
mplrun();
export var upper_white=np.array([180,25,255]);
A.__getitem__([_,tuple([0,null,1])]);
var b=[0,0,0,0,0,0,0,0,0,0,0];
export var parseiter=py_iter(ElementTree.iterparse(rhythmbox_dbfile));
export var quarters=[];
export var d_ini=dict(function(){var __accu0__=[];for(var c of string.ascii_letters)__accu0__.append(tuple([c,0]));return py_iter(__accu0__)}());
n?table[n-1]:1;
var a=1;
tuple([1,1,1,8]);
p.join();
var axes=plt.subplot(gs.__getitem__([0,1]));
var edges=np.reshape(edges,tuple([edges.shape[0]/2,2]));
print(Dog.__bases__);
print(primeslt(int(i)));
export var keep_default=false;
var D=set();
min(compress(my_lookup,my_list),__kwargtrans__({key:my_lookup.py_get}));
n==1;
var root=Tk();
export var clip=Gtk.Clipboard.py_get(Gdk.SELECTION_CLIPBOARD);
p.join();
export var lcls=inspect.stack()[2][0].f_locals;
var r=requests.py_get(url);
var df=json_normalize(data);
ser.plot(__kwargtrans__({ax:axes[0]}));
var d1=pd.concat([d1.loc[[1]].rename(__kwargtrans__({index:dict([[1,0]])})),d1]);
sys.stdout=stdout;
var result=list(product(all_files,all_files));
print(x==247);
var d=date.today();
var py_items=sorted(function(){var __accu0__=[];for(var [k,v]of list(d.py_items()))__accu0__.append(tuple([k.lstrip().lower(),v]));return __accu0__}());
self._result=result;
var app=QApplication(sys.argv);
var k1=0;
var node=lxml.html.fromstring(node);
var y=np.outer(x,k)+b+np.random.normal(__kwargtrans__({size:tuple([50,1E3]),scale:1E-10}));
py_typeof(py_name);
2E10;
list(range(0,len(list1)));
self.transport.write(self.factory.text);
lapack_routine(n,n,tmp,n,pivots[i],0);
self.value=value;
var entry=menu.addAction(item);
print(py_typeof(p));
json.loads(data);
var image=open(filename);
socket.inet_aton(address);
p.apply_async(f,tuple([np.random.rand(1E3,1E3),np.random.rand(1E3)]));
var a=numpy.float64(42);
var a=csv.writer(b);
print(mo.group(0));
tuple([0,1])[1];
export var IsoInA=0;
p.hello();
true;
var title=models.CharField(__kwargtrans__({max_length:255}));
new_row.append(row[column_index]);
count(6);
export var y_tick=np.arange(-.5,.5+unit,unit);
getattr(self.get_query_set(),py_name,...args);
alice.toys=toys;
var soup=BeautifulSoup(page);
var my_model=MyModel.objects.all();

var data=os.read(fd,1024);
var __left0__=tuple([new_x,new_y]);var x=__left0__[0];var y=__left0__[1];
var py_name=models.CharField(__kwargtrans__({max_length:255}));
DBListings();
hash(tuple([self.x,self.y]));
process.stdout.readline();
self.DataPlot.draw();
p.close();
dict[firstName]+=1;
export var max_pub_date_time=datetime.combine(pub_date,time.max);

var y=canvas.canvasy(event.y);
var reader=csv.reader(infile);
socket.gethostbyname(i.strip());
actions.perform();
var lines=lines+1;
export var new_date=old_date+relativedelta(__kwargtrans__({years:1}));
P.figure();
list(all_but_n_last(data,1));
var driver=webdriver.PhantomJS(__kwargtrans__({service_args:args}));
var A=scipy.io.mmread(sys.argv[1]);
var b=pickle.load(handle);
select.order_by(func.random());
sys.exit(app.exec_());
callUponTimeout(...args,__kwargtrans__(kw));
Py_Initialize();
var s=s.__getslice__(n,null,1);
var b=min(function(){var __accu0__=[];for(var n of list2)if(n>i)__accu0__.append(n);return __accu0__}());
print(folder.py_name);

print(soup);
var max=len(lst);
export var flat_y=tf.reshape(y,[-1]);

export var converters=[str.strip]+[float]*(len(headers)-1);
var soup=BeautifulSoup(r.text);
dollars+=1;
var root=tk.Tk();
var key=row[0];
self.stream.write(msg.encode(self.stream.encoding));
child.sendline(mypassword);
top.mainloop();
logger.addHandler(someutils.null_handler);
export var time_list=np.array(time_list);
render_to_csv_response(qs);
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
self.__setattr__(key,value);
var __left0__=zip(...combined);a.__setslice__(0,null,null,__left0__);b.__setslice__(0,null,null,__left0__);
py_next(f);
var x=np.array([1,1,1,2,2,2,5,25,1,1]);
frec(word.__getslice__(len(s),null,1),py_values+[s]);
print(fileinput.filename(),fileinput.lineno(),line);
fW.flush();
session.add(user2);
var curs=conn.cursor();
var __slots__=tuple([]);
df;
output.append(number);
gona.__getitem__([1,tuple([0,null,1])]);
pool.apply_async(test,tuple([k,multi_d]));
arr.view(np.dtype(tuple([np.void,arr.dtype.itemsize*arr.shape[-1]])));
logging.basicConfig(__kwargtrans__({level:logging.INFO}));
export var tracks=function(){var __accu0__=[];for(var i of list(radio.py_items()))__accu0__.append(i[0]);return __accu0__}();
standard_scalerX.fit(X_test);
leng(s.__getslice__(1,null,1),count+1);
var b=[5,6,7,8,9];
str(r);
log.addHandler(journal.JournaldLogHandler());
user_id;
var ax1=plt.subplot(gs.__getitem__([0,tuple([0,2,1])]));
a.py_get(0);
var figure=np.random.uniform(__kwargtrans__({size:tuple([4,4])}));
5-.464188;
addvec2(mat,vec);
self.append(text);
var b=a+b;
self.d=dict({});
var df=df.__getslice__(0,null,-1);
var new_array=array[mask];
export var encoded_pw=base64.b64encode(raw_pw);
var a=np.array([[1,0,1],[0,0,1]]);
f.__setitem__(tuple([slice(5,10),100]),2);
print(poly.intersection(merged_cells).area);
tf.get_default_graph().finalize();
var result=defaultdict(int);
help(enumerate);
export var key_list=sorted(value.py_keys());
0;
child.expect(pexpect.EOF);
var n=len(archive.getnames());
diff(nges,n[5]);
self._fill(index);
list(range(start_val,start_val+10));
var cursor=connection.cursor();
MyPickler(output).dump(thingee);
var dic=dic.py_setdefault(key,dict({}));
var __left0__=cv2.threshold(result_grey,10,255,cv2.THRESH_BINARY);var ret=__left0__[0];var mask=__left0__[1];
self.properties.py_update(attr);
xmlFile.childNodes[0].appendChild(newScript);
shutil.copy(os.path.join(source,fname),os.path.join(dest,fname));
self.transport.loseConnection();
var result=[];
var A=np.arange(24);
var __left0__=list(e.py_items())[0];var key=__left0__[0];var val=__left0__[1];
export var zip_path=os.path.join(zip_subdir,fname);
export var include_dirs=[];
var sel=Selector(response);
self.py_name=py_name;
var it=zip(...[py_iter(L)]*2);
ui.write(e.EV_KEY,e.KEY_LEFTSHIFT,1);
var c=c.ravel();
var content=f.read();
print(new_items);
var ans=Math.pow(x-y,2);
var df=df.loc[mask];
PrintLn(Abs(vi));
script.extract();
print(str(msg));
var newargs=list(funcsig.parameters.py_values());
g.get_all_shortest_paths(0,15);
var w=gtk.Window();
self.py_metatype;
ax.set_ylim(tuple([-1,1]));
time.sleep(1);
print(arg);
d1.py_keys()&d2.py_keys();
result.append(dict(zip(recordset.column_names,row)));
msvc9compiler.VERSION=11;
export var item_dict=json.loads(json_data);
var email=Column(String,__kwargtrans__({primary_key:true}));
x();
var __left0__=tuple([list2,list1]);var list1=__left0__[0];var list2=__left0__[1];
print(k,v,highest_values,len(highest_values));
export var idxs=numpy.where(diff<0)[0];
var __left0__=os.path.py_split(py_name);var dirname=__left0__[0];var filename=__left0__[1];
inner;
driver.switch_to_default_content();
var big=np.arange(Nbig*Nbig).reshape([Nbig,Nbig]);
logger.addHandler(file_handler);
true;
tuple([x,y]);
test2.test();
df.reindex(t.index);
(function(){var __accu0__=[];for(var i of net.activateOnDataset(ts)[0])__accu0__.append(int(round(i)));return __accu0__})();
print(line);
export var datetime=Column(DateTime,__kwargtrans__({primary_key:true}));
plt.legend();
export var dicta=dict(zip(listanum,lista));
var q=multiprocessing.JoinableQueue();
var driver=webdriver.PhantomJS(...args,__kwargtrans__(kwargs));
var d=sqrt((y2-y1)*(y2-y1)+(x2-x1)*(x2-x1));
var soup=BeautifulSoup(html);
var connection=engine.connect();
var __left0__=itertools.tee(iterable);var a=__left0__[0];var b=__left0__[1];
swap_cols(my_array,0,1);
py_typeof(f());
export var ang1=angle(sx1[iseg1],sy1[iseg1]);
export var yb=yum.YumBase();
screen.blit(px,px.get_rect());
0;
mercury_thread.start();
np.round(dfnum);
var y=poly(x)+np.random.rand(n)-.5;
print(add_odd_numbers(10));
c.start();
py_next(mygen);
var value=Column(String);
f.close();
ax.w_xaxis.set_pane_color(tuple([1,1,1,0]));
response;
seq[0]+listSum(seq.__getslice__(1,null,1));
TRY;
copy;
funcs.append(makeFunc(x));
var lons=np.array([102.5,5.5,116.2,102.5,5.5,116.2,102.5,5.5,116.2,100]);
V.reshape(V.shape.__getslice__(0,len(D.shape),1)+tuple([-1]));
stack.append(n);
Py_Initialize();
var it=py_iter(seq);
df;
self.filename=filename;
nameserver;
doctest.testmod();
var opts=dict({});
mybucket/files/pdf/abc4.pdf;
var array=function(){var __accu0__=[];for(var i of range(0,len(array),s))__accu0__.append(array.__getslice__(i,i+s,1));return __accu0__}();
var data=[2,2];
self.func=func;
audio/mpeg;
var reader=csv.reader(input_file);
pickle.dump(dictname,f);
random.shuffle(x);
labels.reshape(data.shape);
var a=[[],[],[]];
var ax=plt.subplot(gs.__getitem__([2,tuple([0,null,1])]));
export var lam_f=sympy.lambdify(x,f(x));
print(dir(data));
print(npstr);
-1;
decorator;
temp_csv.flush();
print(newcorpus.raw().strip());

var py_values=function(){var __accu0__=[];for(var r of result)__accu0__.append(r[1]);return __accu0__}();
var rows=array.shape[0];
export var glo=function(){var __accu0__=[];for(var [k,g]of groupby(lki,__kwargtrans__({key:itemgetter(1)})))__accu0__.append(function(){var __accu1__=[];for(var [x,y]of g)__accu1__.append(x);return __accu1__}());return __accu0__}();
a-b*4;
[np.sum(Math.pow(x,2)+a),2*x];
results.append(res);
var soup=BeautifulSoup(file_h.read());
self.ses.py_get(URL).text;
Shell_NotifyIcon(NIM_ADD,nid);
x+=b;
var df=df.stack().reset_index();
var t=np.linspace(0,u.max(),20);
-__init_.py;
chars.append(escaped_str[i]);
web.setDisabled(true);
callwith5(setanitem);
sizer.Add(self.comboBox1,0,wx.ALL|wx.CENTER,5);
var root=tk.Tk();
s;
var py_values=Value.objects.filter(__kwargtrans__({record:record})).select_related();
var x=somequeryset.query;
params.__getslice__(0,n+1,1);
var s=socket.socket(socket.AF_INET,socket.SOCK_DGRAM);
self.opt.kill();
export var date_after_month=datetime.today()+relativedelta(__kwargtrans__({months:1}));
export var inv_mapping=function(){var __accu0__=[];for(var [i,u]of enumerate(labels))__accu0__.append([i,u]);return dict(__accu0__)}();
print();
pool.close();
d[k]+=v;
t[2];
ax1.scatter(list(range(10)),list(range(10)),__kwargtrans__({c:list(range(10)),alpha:.2}));
var application=bottle.default_app();
var fig=plt.figure();
new_stdout1.seek(0);
math.sqrt(.241*Math.pow(r,2)+.691*Math.pow(g,2)+.068*Math.pow(b,2));
result[mask]=0;
print(set(list2)-set(list1));
export var camcapture=cv.CaptureFromCAM(0);
zip(a,b);
var stderr=ferr.getvalue();
var pb=pb.get_from_drawable(w,w.get_colormap(),0,0,0,0,sz[0],sz[1]);
perform_some_action();
common.get_users();
s.close();
print(i);
signal.signal(signal.SIGINT,term);
print(line);
split_string;
np.arange(n)>=m;
var idx=np.random.permutation(4);
self.list_two.setGeometry(0,0,500,100);
var ax=fig.add_subplot(111);
var soup=BeautifulSoup(file);
var df=dfA[dfA.index.labels!=-1];
var data=function(){var __accu0__=[];for(var row of csv.reader(f))__accu0__.append(map(int,row));return __accu0__}();
arg.upper();
var s=s.__getslice__(k,null,1);
var df1=pd.read_csv(StringIO(df1_text),__kwargtrans__({delim_whitespace:true}));
print(py_next(product(count(1),count(1))));
self.z=z;
example1(x,a,b,D);
export var root_element=xml.get_root();
plate_chars+=str(chr(results[0][0]));
sys.stdout=StringIO.StringIO();
df;
wx.Panel.__init__(self,parent,__kwargtrans__({size:wx.Size(806,450)}));
position.append(0);
f(py_name);
var __left0__=np.histogram(np.random.randint(0,10,100),__kwargtrans__({normed:true}));var hist=__left0__[0];var bin_edges=__left0__[1];
self.get_card(card_id).invert();
var ranges=function(){var __accu0__=[];for(var n of range(start,stop,step))__accu0__.append(tuple([n,n+step]));return py_iter(__accu0__)}();
py_next(self);
timeit[Model.objects.filter(__kwargtrans__({date_created__contains:today}))];
export var y_uspline=uspline(x);
var start=sum(range(n))+1;
var lists=f.readlines();
var new_list=sorted(playlist,__kwargtrans__({key:function __lambda__(L){return py_next(by_artist[L.artist])}}));
interp([9,10],x,y);
client.send(msg);
var __left0__=tee(iterable);var t1=__left0__[0];var t2=__left0__[1];
var root=Tk();
var A=A.reshape(4,6);
var parser=argparse.ArgumentParser();
os.system(c);
plt.grid(true);
my_instance.c();
self.is_active=true;
sum(function(){var __accu0__=[];for(var [c1,c2]of zip_longest(w1,w2))__accu0__.append(c1!=c2?1:0);return py_iter(__accu0__)}());
var match=pattern.match(line);
var new_contact=form.save(__kwargtrans__({commit:false}));
(function(){var __accu0__=[];for(var i of range(key.start,key.stop,key.step))__accu0__.append(self.list[i]);return __accu0__})();
G.add_node(tuple([0,0]));
var g=function __lambda__(a,b){if(typeof b=="undefined"||b!=null&&b.hasOwnProperty("__kwargtrans__"))var b=b;return f(a,b)};
e1.pack();
export var hformats=[];
var contents=f.read();
self.rowconfigure(0,__kwargtrans__({weight:1}));
var __left0__=plt.subplots(1);var f=__left0__[0];var ax=__left0__[1];
var text=p.stdout.read();
export var ADDRESS2=ctypes.create_string_buffer(64);
list(theDict.py_keys()&theList);
pandas.core.frame.DataFrame;
self._parent.AppendUpdate(self.myproc.stdout.readline());
c[k]+=a[j]*b[k+j*K];
readme.close();
py_new.append(a[i]);
w[[a,a+1]]+np.array([0,-2]);
export var geoms=[];
main();
arr;
var start=time.time();
hash(self.py_name);
f.seek(start);
len(md5bytes);
dict_out;
new_grammar._productions.append(nltk.grammar.Production(lhs2,[lhs]));
ax.set_zlim(-1,1);
var cursor=conn.cursor();
var reader=csv.reader(f);
print(res.read());
output[words[0]]=words[-1];
s.py_sort();
export var r_mid=.5*(r_edges.__getslice__(0,-1,1)+r_edges.__getslice__(1,null,1));
export var testmethod=function __lambda__(self){return self.assertEqual(fn(i),output[i])};
var root=lxml.html.fromstring(response.body);
tmp.__setitem__([2,tuple([0,null,1]),tuple([0,null,1])],np.ones(tuple([sy,sz])));
f2.write(line);
print(result);
shuffle.append(newEl);
self.execute(sql);
var cursor=conn.cursor();
var __left0__=tuple([int(event.x),int(event.y)]);self.x1=__left0__[0];self.y1=__left0__[1];
names.append(i);
print(cf.read(99));
var __left0__=cv2.minMaxLoc(result);var min_val=__left0__[0];var max_val=__left0__[1];export var min_loc=__left0__[2];export var max_loc=__left0__[3];
var xmin=logdata.min();
var fd=self.process.stdout.fileno();
self.setCentralWidget(self.text);
print(tuple([date_cand,(datetime.date.today()-date_cand).days]));
print(r.raw._original_response.peer);
print(x);
log_observer.start();
var d=dict(l);
var b=function(){var __accu0__=[];for(var f=0;f<n;f++)__accu0__.append(str(f));return __accu0__}();
list1.remove(item);
self.cond.wait();
self.buf.seek(0,os.SEEK_END);
self.panel.top();
Grid.append([]);
print(my_array+[e]);
var group=models.ForeignKey(Group);
calendar.monthrange(2012,1);
var m=pattern.search(line);
var n=10;
np.exp(np.dot(mX,vBeta))/(1+np.exp(np.dot(mX,vBeta)));
0;
var newList=map(function __lambda__(x){return x/myInt},myList);
main.destroy();
var to=len(list);
self.markdown.htmlStash.store(self.unescape(element));
clf.predict(iris.data[125]);
+apache2;
export var diag_indices=A.indices.__getslice__(idx_begin,idx_end,1);
main();
var z=zipfile.ZipFile(io.BytesIO(r.content));
self.released.connect(self.py_update);
self.f.setsampwidth(sampwidth);
d[k].append(v);
var datetime=dt.datetime.combine(date,time);
self.avail_ranges.remove(ip_network);
bSizer.Add(button1,0,wx.ALL,5);
print(c.html.strip());
_triple_file.close();
str(d);
pip- -version;
export var new_lst=[];
add(1,[]);
var mask=np.all(np.isnan(a)|np.equal(a,0),__kwargtrans__({axis:1}));
print(dict(filter_dict_path(old_dict,sub)));
my_dict[x]=4;
export var IS_SETUP=true;
print(repr(tokzr_QA_non_canonical(inp1)));
print(input[a]);
self.assertListEqual(self.result,self.expected);
var data=f.read().strip();
var lst=numpy.array(function(){var __accu0__=[];for(var _=0;_<1E3;_++)__accu0__.append(random.uniform(0,5));return __accu0__}());
var method=getattr(foo_obj,command);
print(args.doh);
var newlist=[];
columns.append([7,7,7]);
plt.subplots_adjust(__kwargtrans__({left:.2}));
export var axone=plt.axes([.1,.05,.1,.075]);
var distribution=scipy.stats.norm(__kwargtrans__({loc:100,scale:5}));
vals[mask].reshape(-1,out_shape[1]).__getslice__(0,out_shape[0],1);
any(map(bool,list(d.py_values())));
left_thresh.__setitem__([tuple([0,null,1]),tuple([i,null,1])],left_thresh.__getitem__([tuple([0,null,1]),tuple([i,null,1])])+img.__getitem__([tuple([0,null,1]),tuple([0,w-i,1])]));
print(hex2.neighbors());
var __left0__=os.path.py_split(filename);var dirname=__left0__[0];var basename=__left0__[1];
var arr_2=np.array(multidim_list2);
transaction.rollback();
print(window.get_name());
48.1145061659;
time+=1;
self._async_interrupt.wait_for_receive();
var a=A();
x.__getslice__(2,10,1);
var df=s.reset_index();
print(self.companies[index]);
0;
result1.append(x);
var file=sys.argv[1];
help(Test);
self.data.extend(list(other));
var c=a*b.reshape(tuple([b.size,1]));
children.append(node.py_values[i]);
var tokens=nltk.word_tokenize(text);
var line=line.strip();
assert_array_compare(operator.__eq__,x,y,__kwargtrans__({err_msg:err_msg}));
sdl2.SDL_SetRenderDrawColor(renderer,255,255,255,sdl2.SDL_ALPHA_OPAQUE);
list.__getitem__(self,index);
var number=models.CharField(__kwargtrans__({max_length:50}));
var __left0__=np.meshgrid(xedges.__getslice__(0,-1,1)+.25,yedges.__getslice__(0,-1,1)+.25);export var xpos=__left0__[0];export var ypos=__left0__[1];
export var Servername=MYSERVER;
export var axtwo=plt.axes([.21,.05,.1,.075]);
print(any(function(){var __accu0__=[];for(var list_item of fruits)__accu0__.append(__in__(list_item,fruit_dict1));return py_iter(__accu0__)}()));
var root=tix.Tk();
self.edit=QtGui.QLineEdit(self);
lines.append(linecache.getline(filename,curline).rstrip());
var salt=bcrypt.gensalt();
var opener=urllib.request.build_opener(cookies);
var a=np.random.normal(0,1,N);
print(element);
export var hrago=now-timedelta(__kwargtrans__({hours:1}));
var __left0__=tuple([len(subset1),len(subset2)]);export var lensub1=__left0__[0];export var lensub2=__left0__[1];
var pos=entry.get_position();
self.children=[];
var __left0__=[py_iter(x)]*2;var a=__left0__[0];var b=__left0__[1];
print(o.foo());
export var outlen=in1.shape[-1]+in2.shape[-1]-1;
var br=mechanize.Browser();
print(x);
var formatter=logging.Formatter(LOG_FORMAT);
b.py_sort();
print(files);
os.close(rpipe);
export var columnNames=function(){var __accu0__=[];for(var d of cursor.description)__accu0__.append(d[0]);return __accu0__}();
s.set_debuglevel(1);
var blob_reader=blobstore.BlobReader(blob_key);
print(gitpath.root());
np.isnan(x);
export var flatten=function(){var __accu0__=[];for(var sublist of temp)for(var item of sublist)__accu0__.append(item);return __accu0__}();
code_to_profile();
work.append(nope);
var request=Request(url,__kwargtrans__({headers:headers}));
print(d[int]);
main();
curses.noecho();
smprint();
var test_dict=dict({});
retDirs.append(os.path.join(root,i));
setattr(namespace,self.dest,value);
var f=Foo();
self.data=data;
print(etree.tostring(tree.getroot()));
min(function(){var __accu0__=[];for(var x of lst)__accu0__.append(tuple([x,distance(word,x)]));return __accu0__}(),__kwargtrans__({key:itemgetter(1)}));
first.request.SetInParent();
var entry=tk.Entry(self);
sleep(.001);
self.py_name;
self._fileobj.seek(offset);
nx.draw(G,__kwargtrans__({with_labels:false}));
var proc=mp.Process(__kwargtrans__({target:worker,args:[q,arr]}));
hax.set_position([.1,.1,.8,.8]);
var obj=Try();
d[k].append(v);
var L=fo.readlines();
os.rename(tmp,myfilepath);
var twitter=Twython(APP_KEY,APP_SECRET,oauth_token,oauth_token_secret);
[0,2,0,1,0,1,0,1,1,1,2,0];
sys.exit(app.exec_());
print(Type[x][x],len(Type[x][x]));
GameApp().run();
driver.get_screenshot_as_file(screenshot_file_path);
driver.switch_to_frame(iframe);
var dt=datetime.datetime.now();
a.__getitem__([tuple([0,null,1]),0])==1;
r[v].append(k);
var reader=csv.reader(file);
t.start();
var tokens=text.py_split();
calendar.timegm(utc_timetuple);
export var segment_two=csv.reader(file_two);
var cax=ax.matshow(cm,__kwargtrans__({cmap:cmap}));
[[[0,1]]];
sum(function(){var __accu0__=[];for(var c of s)__accu0__.append(c.isalpha());return py_iter(__accu0__)}());
var app=Flask(__name__);
export var stacked_conv_neibs=T.stack(...multiple_conv_out).T;
arg_list;
x+=1;
export var im_temp=im_temp.resize(tuple([250,250]),Image.ANTIALIAS);

b1.grid(__kwargtrans__({row:0,column:0,pady:10,padx:10,sticky:Tkinter.SE}));
export var sorted_tuples=sorted(initial_ranges);
var d=dict(__kwargtrans__({foo:1,bar:2}));

var input_list=set([0,1]);
var dct=json.loads(json_string,__kwargtrans__({object_hook:datetime_parser}));
thisRDD.count();
var root=etree.fromstring(broken_xml,__kwargtrans__({parser:parser}));
var result=list(islice(it,n));
list(dates);
df1;
var df2=pd.DataFrame(data2);
list(unique_everseen(py_items));
var __left0__=plt.subplots(__kwargtrans__({figsize:tuple([20,10])}));var fig=__left0__[0];var ax=__left0__[1];
deepReduce(f,f(y,xs[0]),xs.__getslice__(1,null,1));
splittime/parsetime;
var app=Flask(__name__);
exec(self.raw);
s;
export var lattice=list(range(0,len(inputs)));
palette.append(tuple([0,0,255-i]));
filters.append(Q(__kwargtrans__({tree_id:n.tree_id,lft__gt:lft,rght__lt:rght})));
friendList.append(self);
l?[l[0]-1]+recurseDecrMap(l.__getslice__(1,null,1)):[];
Queue.__init__(self,maxsize);
export var tsp=function(){var __accu0__=[];for(var el of ts)__accu0__.append(tuple([el[0],el[-1]]));return __accu0__}();
export var edgey2=region2^np.roll(nregion2,__kwargtrans__({shift:shift,axis:1}));
some_heavy_calculations();
var i=a.index(p[0]);
print(cv2.isOpened());
export var catalog=dict(function(){var __accu0__=[];for(var [idx,py_name]of names.py_items())__accu0__.append(tuple([py_name,idx]));return py_iter(__accu0__)}());
timeit.timeit(function __lambda__(){return bytearray(os.urandom(1E6))},__kwargtrans__({number:10}));
var form=forms.ChapterForm(request.POST);
var json_str=json.dumps(data);
var env=_Env();
crsr.fetchall();
id(a[1]);
var a=Example();
export var samples2=function(){var __accu0__=[];for(var i of range(0,len(samples2),2))__accu0__.append(samples2.__getslice__(i,i+2,1));return __accu0__}();
app.config_from_object(Config);
var map=base_map.set_a_map();
var cont=ax.contour(X,Y,Z);
unittest.TestSuite(function(){var __accu0__=[];for(var n of numbers)__accu0__.append(DataTestCase(n));return __accu0__}());
var result=[];
merged;
export var CONTINUOUS_INTEGRATION=py_true;
var d=datetime.datetime(2011,8,29);
os.makedirs(dirmk);
export var Fy=np.random.rand(100,10,40);
execlist[index][2]=myx;
export var tz=pytz.timezone(zonename);
list(range(10,20));
var manager=urllib.request.HTTPPasswordMgrWithDefaultRealm();
S.remove(10);
newlist;
expire_events.py;
response.py_replace(__kwargtrans__({body:new_body,encoding:self.encoding}));
proc.start();
var __left0__=tuple([self.list[-1],self.list[index]]);self.list[index]=__left0__[0];self.list[-1]=__left0__[1];
redis-cli;
echo.py;
plot(x,z);
a.__getitem__([I,J]);
tuple.__new__(cls,initialValue);
var mask=cv2.morphologyEx(mask,cv2.MORPH_OPEN,se2);
setup_func(a_cxx_foo);
seq.insert(i,item);
export var zipname=sys.argv[1];
export var diff2=np.sqrt(diff2);
export var nowtuple=nowdt.timetuple();
export var value_counts=df.stack().value_counts();
sleep(time);
- -enable-pythoninterp;
print(c);

results.append(tuple(function(){var __accu0__=[];for(var i of headers)__accu0__.append(row[i]);return __accu0__}()));
plt.plot(data1);
ax.add_collection(coll);
fs.visititems(callback);
export var trends1=api.trends_place(1);
self._pred_map[self];
client_tcp[1].send_data_to_tcp(self.data);
var L1=function(){var __accu0__=[];for(var i of L)if(__in__(i,L1))__accu0__.append(i);return __accu0__}();
export var arr_1=np.arange(10);
logger.addHandler(handler);
clf.fit(X_,vector);
var f=f.reshape(tuple([]));

var test=math.inf;
var diff=ImageChops.difference(im2,im1);
export var utc_time=datetime1-datetime1.utcoffset();
g();
var M=M.__getitem__([M.getnnz(1)>0,M.getnnz(0)>0]);
var y=function __lambda__(u){return Math.pow(u,-2)+8};
func.__get__(instance,cls)(...args,__kwargtrans__(kwargs));
crawler.crawl(spider);
var options=ChromeOptions();
print(len(list(filter(is_div_three,r))));
export var rotated_image=cv2.warpAffine(image,rot_mat,shape,__kwargtrans__({flags:cv2.INTER_LINEAR}));
print(etree.tostring(tree));
widget1.update_idletasks();
count;
hello();
self.timer=QtCore.QTimer();
request.session.cycle_key();
tuple([self.title,self.artist,self.album,self.source,self.dest]);
var x=np.linspace(data.min(),data.max(),100);
np.repeat(arr,rep.flat);
self.py_metatype=py_metatype;
connection.endheaders(request_body);
var q=Queue();
print(r(-1,1));
referrer.append(x);
round(base*round(float(x)/base),prec);
export var x_mean=np.mean(x,__kwargtrans__({axis:1,keepdims:true}));
Py_DECREF(pystdout);
y2.append(random.randint(1,100));
sympy.randprime(0,100);
var kde=stats.gaussian_kde(data);
var Base=declarative_base();
np.hstack(tuple([np.zeros(shape),data]));
print(g.__getitem__([tuple([first_row,last_row+1,1]),tuple([first_col,last_col+1,1])]));
print(user_postition);
ftp.login();
var data=json.load(f);
var now=datetime.datetime.now();
hamming_distance(a,b);
export var copy=df.copy();
auth.save_session();
main.show();
hash(self.py_name);
frame.Bind(wx.EVT_WINDOW_DESTROY,self._unregister);
english_dict[word];
y+=np.random.randn(6)/10;
deps.append(str(py_name));
np.bitwise_and.reduce(a)==a[0];
r.terminate();
export var stoppool=threading.Thread(__kwargtrans__({target:close_pool}));
dsolve(eq);
a.insert(0,i);
sys.stderr=sys.__stderr__;
confusion_matrix(y_true,y_pred);
list(f(doc));
print(num);
var idx=np.argsort(a);
newMethod.__get__(a,A);
table.show();
result.append(x);
var subs=function(){var __accu0__=[];for(var i=0;i<len(s);i++)for(var j of combinations(s,i+1))__accu0__.append(set(j));return __accu0__}();
var __left0__=line.py_split();var py_name=__left0__[0];var score=__left0__[1];
srf.blit(f.render(unistr,true,tuple([255,255,255])),tuple([0,0]));
recall;
len(bin(100))-2;
print(inspect.signature(f).parameters);
sys.stdin=s;
fun(indata,indata.size,outdata);
mod.HelloWorld();
var meta=MetaData(__kwargtrans__({bind:migrate_engine}));
logging.basicConfig(__kwargtrans__({stream:sys.stderr,level:logging.DEBUG}));
pl.plot(x,us(x));
tuple([2,1])(2,1);
propfaid.set_cache(...settings);
A.__getslice__(0,(A<np.percentile(a,90)).argmin(),1).sum();
mins.append(i);
bool(self.value);
self.__add__(-i);
var triplets=list(permutations(lst,n));
var x=true;
s.indices(10);
export var data_ratio=plt.gca().get_data_ratio();
dothat(item);
print(list(my_range(4,20,2)));
d.bar;
var __left0__=plt.subplots(__kwargtrans__({nrows:2,ncols:1,sharex:true}));var fig=__left0__[0];var axes=__left0__[1];
self.do_something(py_name,value);
object._state.db;
time.sleep(self.interval);
self.output_queue=mp.Queue();
var parent=Parent();
cat/etc/nginx/sites-enabled/myapp.conf;
var bool_arr=np.array([true,true,false]);
var index=random.choice(list(range(len(MY_LIST))));
p[0]+p[1]*Math.pow(x,p[2]);
export var mailList=function(){var __accu0__=[];for(var i of urlFile.readlines())__accu0__.append(i.strip());return __accu0__}();
py_typeof(-maxint-2);
draw.line(tuple([i,0,i,100]),__kwargtrans__({fill:random.randrange(256)}));
self.crawler.stop();
var out=x.truncate(__kwargtrans__({before:datetime.datetime(2015,12,2,12,2,18)}));
print(tuple([val,k]));
var b=a.__getitem__([0,1,tuple([0,null,2])]);
export var valid_file=false;
sys.exit(1);
a.add(1);
var txt=self.proc.stdout.readline();
var tag=node.tagName;
spider;
var lines=[];
show();
var result=[];
match.group(1);
persist_file.Save(shortcut_path,0);
export var myfield=QuerySelectField(__kwargtrans__({query_factory:fill_field}));
r.append(blocktag[1]);
np.poly1d(p)(x);
render_user(request);
var browser=spynner.Browser();
ax.matshow(m.__getitem__([0,tuple([0,null,1]),tuple([0,null,1]),j]),__kwargtrans__({cmap:cm.gray}));
sequence.__getslice__(0,len(sequence),2)==sequence.__getslice__(0,len(sequence),2)&&sequence.__getslice__(0,len(sequence),2)==sequence.__getslice__(0,null,2);
self.close();
print(self.value,self.foobar);
var xmldoc=minidom.parse(usock);
list_magicInput.append(letter);
array([5,7]);
s.rollback();
QtGui.QMainWindow.__init__(self);
np.may_share_memory(X2,X2.reshape(X2.shape[0],-1).__getitem__([tuple([0,null,1]),0]));
print(tokenize.untokenize(output));
var x=new_array();
export var vmin=min(map(function __lambda__(x){return min(abs(x))},data));
var b=numpy.array([0]*n+[1]*2);
reactor.callLater(1,heartbeat);
export var created=models.DateTimeField(__kwargtrans__({auto_now_add:true}));
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
py_next(gen);
var output=requests.py_get(url).text;
os.dup2(oldstderr,sys.stderr.fileno());
var ax1=fig.add_subplot(gs.__getitem__([0,0]));
var result=function(){var __accu0__=[];for(var [k,v]of list(my_dict.py_items()))__accu0__.append([k,function(){var __accu1__=[];for(var s of v)__accu1__.append(expand_string(s,all_strings));return __accu1__}()]);return dict(__accu0__)}();
export var non_numeric_chars=string.printable.__getslice__(10,null,1);
var worksheet=workbook.add_worksheet();
setattr(self.obj,self.method,self.called);
unique.append(obj);
var auth_handler=urllib.request.HTTPBasicAuthHandler();
print(x);
var data=parser.parse_args(contents.py_split());
model_subklass(__kwargtrans__(kwargs));
parser.parse_args(args.py_split());
ys.append(y);
f(1);
date.day;
app.jinja_env.globals.py_update(__kwargtrans__({can_access:can_access}));
var __except0__=PartialImport(locals());__except0__.__cause__=null;throw __except0__;
var MIGRATION_MODULES=DisableMigrations();
np.log10(df.timeLength);
export var sow=today-datetime.timedelta(__kwargtrans__({days:now.weekday()}));
fp.__setitem__([tuple([0,null,1]),i],fp.__getitem__([tuple([0,null,1]),i+1]));
curs.execute(sql);
var n=0;
signal.pause();
var profile=webdriver.FirefoxProfile();
self.base.foo=f;
df.dtypes;
var a=models.CharField(__kwargtrans__({max_length:5}));
var x=numpy.random.randint(0,1E3,1E6);
do_stuff(level_lookup[key]);
export var x_indices=indices[0];
df.loc.__setitem__([mask==1,0],200);
export var codepoint=ord(c);
worksheet.setRowCount(worksheet.getRowCount()+1);
quicksort(array,start,i-1);
S==0?1:0;
print(list(inverse_regex.ipermute(data)));
export var triple=line.py_split();
foo(args);
var s=self.fileobj.read(1);
__mod__(x,100)==0?x:x+100-__mod__(x,100);
var result=[];
setofcols.add(tuple(column.A1.tolist()));
todayDate+=datetime.timedelta(7);
req.has_data();
print(df1);
var logger=logging.getLogger("./P2JSnippets.py");
scene.objects.link(lamp_object);
export var color_cycle=ax._get_lines.color_cycle;
var test=coo_matrix(tuple([val,tuple([row,col])]),__kwargtrans__({shape:tuple([nele,nbus]),dtype:complex}));
dict.__delitem__(self,self[key]);
bar.__doc__;
print(line);
importer.find_module(RUN_MODULE).load_module(RUN_MODULE);
np.bincount(ids,__kwargtrans__({weights:data}));
self.parsedData.append(dataRow);
export var date_created=models.DateTimeField(__kwargtrans__({auto_now_add:true}));
plt.imshow(H);
var output=proc.stdout.readline();
var __left0__=split_list(A);var B=__left0__[0];var C=__left0__[1];
print(browser.html);
var cur=con.cursor();
export var batch=service.new_batch_http_request();
export var my_counter=Counter(my_list);
var a=numpy.random.random(__kwargtrans__({size:100}))*100;
var results=pool.map(process_line,source_file,4);
df_no;
sizer.AddSpacer(10);
image_field.seek(0);
var r=r[0].isoformat()+tz;
var serializer_class=UserSerializer;
var result=tocontainer(result);
plt.plot(x,-y);
var c=array([1,1,1]);
export var b2=tf.Variable(tf.zeros([10]));
export var tri=np.zeros(tuple([67,67]));
application.listen(8888);
true;
var __left0__=np.meshgrid(x4,y4);export var X4=__left0__[0];export var Y4=__left0__[1];

export var Astarrs=list(ApStars);
sheet.write(cell,value);
.16515994072;
var body=part.get_payload(__kwargtrans__({decode:true}));
mainwin.set_default_size(200,200);
var wb=Workbook();
print(T(function __lambda__(){return fj(controls)}).repeat(__kwargtrans__({number:REPS})));
[];

self._cards[card_ID].invert();
var numbers=function(){var __accu0__=[];for(var i of names)__accu0__.append(d.py_setdefault(i,py_next(c)));return __accu0__}();
export var coc=CopyOfC();
var x=ax.get_xlim();
self.assertEqual(42,s2);
Area2(a,b,c)<0;
f;
export var publish_date=db.Column(db.DateTime,__kwargtrans__({py_default:tomorrow}));
self.byName[person.py_name].append(person);
var xi=np.linspace(X.min(),X.max(),1E3);
var data=urllib.parse.urlencode(params);
new set([4]);
np.fill_diagonal(product,0);
self.Bind(wx.EVT_CLOSE,self.OnCloseWindow);
response.close();
var eroded=binary_erosion(data,structure,__kwargtrans__({border_value:1})).astype(int);
fig.canvas.print_png(ram);
var py_name=db.Column(db.String());
cr.set_source_rgba(.5,1,0,1);
var fig=plt.figure();
gtk.main();
main();
var sm=plt.cm.ScalarMappable(__kwargtrans__({cmap:my_cmap,norm:plt.normalize(__kwargtrans__({vmin:0,vmax:1}))}));
host;
exit(0);
print_sorted(filename,sort_col);
y.append(ind_2);
library(SnowballC);
print(p.ne(p.shift()).cumsum());
df;
var __left0__=self._get_group_keys();export var left_key=__left0__[0];export var right_key=__left0__[1];export var max_groups=__left0__[2];
var input=[server,sys.stdin];
sys.stdout=StringIO();
var config=configparser.ConfigParser();
var signal=np.sin(50*2*np.pi*x);
var ax1=fig.add_subplot(111);
var b=np.array(b);
var p_values=scipy.stats.norm.sf(abs(z_scores));
f(1);
Frame.__init__(self,master);
pylab.rcParams.py_update(params);
list(it);
py_new.append(recursivereverese(k));
print(x);
var c=orcl.cursor();
X-=np.mean(X,__kwargtrans__({axis:0}));
contained(a,b);
var id=row[0];
x+self.y;
stdout.write(x);
self.img_id=self.canvas.create_image(x,y,__kwargtrans__({image:self.img}));
sess.run(training_net,__kwargtrans__({feed_dict:dict([[inputs,batch[0]],[labels,batch[1]]])}));
export var row0_sum=mat[0]*(len(ixs)-np.count_nonzero(nzmask));
Py_XDECREF(self.members[i]);
x.append(y);
print(row);
tbl[-1].append(str(td.text_content()));
plt.figure(2);
l.set_option(ldap.OPT_DEBUG_LEVEL,255);
s.dt.days;
var f=f_wrapper(_f_call,_f_ptr);
var command=os.path.realpath(command);
export var closex=close.copy();
var count=0;
var response=urllib.request.urlopen(req);
var response=requests.py_get(url);
my_instance.save();
data[header].append(value);
grouped.size();
pprint.pprint(result);
print(ulst);
L.reverse();
Base*get_other_base();
print(out_str);
var data=ser.read(4);
sys.exit();
yappi.start();
var today=date.today();
var count=len(py_values);
var DD=datetime.timedelta(__kwargtrans__({days:-90}));
print(saber);
min(Mylist);
ceo.greets(emp);
var data=pandas.DataFrame(np.transpose(df_std));
var data=string[0];
var __left0__=numpy.indices(J.shape);var t=__left0__[0];var y=__left0__[1];var x=__left0__[2];
print(get_size());
sentence_dict[word]=[];
var result=f(...args,__kwargtrans__(kargs));
var __left0__=w.T;export var m_ind=__left0__[0];export var n_ind=__left0__[1];
export var zvals=np.random.rand(100,100)*10-5;
db.run_in_transaction(txn,cat_alias.keyname_for_category());
s.listen(5);
var plot=ax.plot_surface(X,Y,soln,__kwargtrans__(plot_args));
export var msgBox=QtGui.QMessageBox();
list(chain(...function(){var __accu0__=[];for(var [i,x]of zip(A,B))__accu0__.append([x]*i);return __accu0__}()));
operator.itemgetter(...b)(a);
print(1);
export var fill_color=line.get_color();
var arr=array(arr,__kwargtrans__({copy:false,subok:true,ndmin:2})).T;
var ser=serial.Serial(port,9600);
w.show_all();
var result=[];
os.unlink(f.abspath);
dis.dis(f);
wide;
pool.map(worker,function(){var __accu0__=[];for(var i=0;i<n;i++)__accu0__.append(tuple([i,array]));return __accu0__}());
var py_keys=[wx.WXK_LEFT,wx.WXK_RIGHT,wx.WXK_UP,wx.WXK_DOWN];
pymongo.version;
np.array(...args,__kwargtrans__(kwargs)).view(myarray);
var cr=csv.reader(f);
var wr=csv.writer(myfile,__kwargtrans__({quoting:csv.QUOTE_ALL}));
tokenizer.tokenize(text.strip());
var A=A.astype(int);
im1.set_clim([smin.val,smax.val]);
export var setting1=config1;
self.py_name=py_name;
var x=np.linspace(0,2,N);
export var lightened25=function(){var __accu0__=[];for(var [c,w]of zip(my_color,white))__accu0__.append(lerp(c,w,.25));return __accu0__}();
p.terminate();
export var csvreader=csv.DictReader(inf);
var arr=np.empty(len(lst),__kwargtrans__({dtype:object}));
print(a.shape);
var it=py_iter(iterable);
cw.writerows(csvList);
deactivate;
ans.append(s[0]);
self.readonly_fields;
var p=x.py_pop();

export var module_code=__import__(py_name);
pat.match(s);
sh.write(n,1,col2_name);
self._thread_id=tid;
results.append(out.toString());
var py_keys=list(myDict.py_keys());
export var idx1=np.arange(len(desc1));
pickle.dumps(cycle);
var line2=f.readline();
print(df1.fillna(df2));
x.shape;
axis.__getslice__(0,set_xlim,1)(0,10);
var p=psutil.Process(1694);
var msg=py_next(myproducer);
b.append(i);
var vec=numpy.zeros(num_rows);
main.py;
var r=np.arange(X.shape[0]);
export var cluster=dict();
tuple([id(a[2]),id(b[-2])]);
var myDict=dict({});
print(id(string.__getslice__(0,5,1)));
false;
[freetds];
terminator.cancel();
line.set_ydata(sin(x+i/10));
f.write(decodestring(imagestr));
print([num,diff]);
var data=f.read();
kernel.execute(command);
len(df[np.isclose(df.R,.9)]);
export var inner_qs=table2.objects.all();
r;
var data=np.ascontiguousarray(data);
_to_etree(v,ET.SubElement(root,k));
print(b[0].dtype);
var ax=fig.add_subplot(111);
var py_name=models.CharField(__kwargtrans__({max_length:100}));
_array.__getslice__(0,null,1).__getslice__(1,null,1);
ax.invert_yaxis();
tb.show();
queue.append(item);
var img=Image.fromarray(maxi);
print(update_doc(b));
this_prize;
(function(){var __accu0__=[];for(var m of self.maps)for(var v of m.py_values())__accu0__.append(v);return py_iter(__accu0__)})();
__all__[key]=value;
export var remote_client=SSHClient();
self.test(...self.arg);
print(r);
export var backdrop=pygame.Rect(0,0,SCREEN_X,SCREEN_Y);
self.co=self.sink();
assertTrue(true);
var p=multiprocessing.Pool(2);
var nz=np.nonzero(cells)[0];
str.__new__(str,__kwargtrans__({arg:1}));
app.register_blueprint(child2.child2);
var n=float(n);
print(handle_csrf.__doc__);
f.close();
m?tuple([y,m]):tuple([y-1,12]);
self._1d_array=np.arange(10);
var __left0__=[.25,.6,.2,.2];var left=__left0__[0];export var bottom=__left0__[1];var width=__left0__[2];var height=__left0__[3];
self.output+=data.strip();
var col=array([0,2,2,0,1,2]);
var out=dict({});
df.index=list(range(len(df)));
m.py_update(string);
export var inverse_dict=defaultdict(list);
B.add_nodes_from(cells_list,__kwargtrans__({bipartite:1}));
int(s);
print(self.a);
var X=StandardScaler().fit_transform(X);
PyLong_AsByteArray(lnum,a,len(a),0,1);
var mask=np.in1d(pairs1D,positions1D).reshape(-1,2);
var new_list=list(filter(keep_this_element,l));
var g=function(){var __accu0__=[];for(var i=0;i<100;i++)__accu0__.append(i);return py_iter(__accu0__)}();
min(results,__kwargtrans__({key:test_string.index}));
execute_from_command_line(sys.argv);
var y=y[mask];
var d=dict({});
stackless.tasklet(a)();
ax.broken_barh([tuple([midpoint-.01,.02])],tuple([perc[0],perc[1]-perc[0]]));
sys.excepthook=handle_exception;
export var all_records=NCBIXML.parse(handle);
var ret=os.popen(cmd+file).readline().strip();
df;
var x=random.choice([left,right]*adjpx+[withinx]);
print(df);
var now=datetime.utcnow();
di[pos][1].append(listb[i]);
var colors=function(){var __accu0__=[];for(var v of shade)__accu0__.append(color*(.5+norm(v)*.5));return __accu0__}();
self.bar(__kwargtrans__(args));
export var pos_frame=cap.py_get(cv2.cv.CV_CAP_PROP_POS_FRAMES);
var L=list(range(0,101,10));
n;
export var x_err=np.array(function(){var __accu0__=[];for(var i of x)__accu0__.append(random.random());return __accu0__}());
out[2];
export var form_user=UserForm(request.POST,__kwargtrans__({instance:request.user}));
var link=self.br.find_element_by_link_text(month);
var p=QPixmap.grabWindow(widget.winId());
var b=a.__getslice__(0,-4,1);
var ax4=plt.subplot(gs.__getitem__([-1,0]));
collection[obj.category_id].append(obj);
dis.dis(test4);
var __left0__=set(map(len,list_of_lists));var length=__left0__[0];
var b=a+1;
var b=np.linspace(0,1,16,__kwargtrans__({endpoint:false})).reshape(4,4);
app.installEventFilter(win);
var __left0__=im.getpixel(tuple([i,j]));var r=__left0__[0];var g=__left0__[1];var b=__left0__[2];
var conn=engine.connect();
data.append(integers);
var path=os.path.realpath(path);
flatten(something,a);
export var file_handler=logging.FileHandler(filename);
export var unique_name=models.CharField(__kwargtrans__({max_length:255}));
export var roundedB=b.py_replace(__kwargtrans__({hour:0,minute:0,second:0,microsecond:0}));
var __except0__=StopIteration;__except0__.__cause__=null;throw __except0__;
ard.write(setTemp1);
export var temp_dir=tempfile.gettempdir();
formData.append(py_name,val);
self.seek(-blocksize,1);
var width=label.fontMetrics().boundingRect(label.text()).width();
somemodule.someclass=debug_signals(somemodule.someclass);
(function(){var __accu0__=[];for(var x of gb.groups)__accu0__.append(gb.get_group(x));return __accu0__})();
var out=function(){var __accu0__=[];for(var p of points)__accu0__.append(float(f_interp(...p)));return __accu0__}();
p.map_async(func,iterable).py_get(__kwargtrans__({timeout:1E7}));
a.py_update(b);
var es=Elasticsearch();
(function(){var __accu0__=[];for(var i=0;i<11;i++)__accu0__.append(string+repr(i));return __accu0__})();
driver.py_get(url);
export var Pxx_dB=np.log10(Pxx);
self.text=tk.Text(self,__kwargtrans__({width:40,height:20,yscrollcommand:self.vsb.set}));
var ax=plt.subplot(111,__kwargtrans__({polar:true}));
print(str(x));
var i=patch_instance(x.get_instance());
f(...arg);
seq[int(self.random()*len(seq))];
var result=np.array(function(){var __accu0__=[];for(var i of a)__accu0__.append(function(){var __accu1__=[];for(var j of b)__accu1__.append(f(i,j));return __accu1__}());return __accu0__}());
export var myTurtle=turtle.Turtle();
var __left0__=sys.exc_info();var py_metatype=__left0__[0];var value=__left0__[1];var tb=__left0__[2];
swap(xs,a,b);
self.foo=foo;
self._global_wealth=10;
var test_data=tf.Variable(1E3);
main();
x.append(ind_1);
canvas.Canvas.save(self);
ret[ret>0].sum();
times[-1];
var b=object();
f.truncate();
sum(base_lists,[]);
sys.stderr.write(u);
export var weight_total=sum(function(){var __accu0__=[];for(var item of py_items)__accu0__.append(item[1]);return py_iter(__accu0__)}());
i+=1;
export var yesterday=now-timedelta(__kwargtrans__({days:1}));
var ax=plt.gca();
list(x)===x;
shutil.rmtree(apppath);
new_user.save();
0;
out[k].append(recursive_asdict(item));
df;
var image=image.resize(tuple([nw,th]),Image.ANTIALIAS);
print(line);
var b=py_values(numpy.arange(100));
export var asdf=form.save(__kwargtrans__({commit:false}));
locals().py_update(adict);
var root=lxml.html.fromstring(driver.page_source);
deleteself.weapon;
fp.write(chunk);
py_iter(iterable.py_items());
loop.add_timeout(time.time()+seconds,__kwargtrans__({callback:gen.Callback(some_unique_key)}));
listbox.pack();
var b=np.append(a,[false]);
export var page_next_app_table=template.render();
var txt=wx.TextCtrl(self);
self.data=function(){var __accu0__=[];for(var r=0;r<rows;r++)__accu0__.append(function(){var __accu1__=[];for(var c=0;c<cols;c++)__accu1__.append(0);return __accu1__}());return __accu0__}();
self.noload=unpickler.noload;
main.show();
pprint.pprint(lines_to_dict(d));
py_typeof(dates[0]);
self.frame=Frame(self.root);
- -__init__.py;
var t=np.linspace(-10,10,100);
df;
var data=[];
plt.plot(function(){var __accu0__=[];for(var x=0;x<11;x++)__accu0__.append(x*x*curvature);return __accu0__}());
print(inspect.getsource(Tester));
var a=models.ForeignKey(A);
self._cards[card_ID].invert();
var words=sentence.py_split();
tuple([solution[1],sum(oldmoves[solution[1]]),oldmoves[solution[1]]]);
decorated.py_sort();
true;
axarr[0].plot(x,y);
sys.stdout=stdout;
var result=[];
var lst=function(){var __accu0__=[];for(var val of lst)__accu0__.append(val*2);return __accu0__}();
export var X_kpca=kpca.fit_transform(X);
var y=function(){var __accu0__=[];for(var [v,k]of list(d.py_items()))__accu0__.append(tuple([max(k),v]));return __accu0__}();
sess.run(init);
var date=parser.parse(text);
ser.str.isdigit().sum();
export var max_range=list(range(start,end));
(function(){var __accu0__=[];for(var key of self.order)__accu0__.append(tuple([key,[self[key]]]));return __accu0__})();
diff.__setitem__([y,x],img1.__getitem__([y,x])-img2.__getitem__([y,x]));
json.loads(raw_post_data,__kwargtrans__({object_pairs_hook:KeyWatcher}));
export var private_key=keyfactory.parsePrivateKey(rsa_key);
var result=set();
export var corner2=[1,1,1];
Py_DECREF(result);
var value=list(value);
var contour=numpy.array([[[0,0]],[[10,0]],[[10,10]],[[5,4]]]);
export var modules=map(__import__,myList);
var register=template.Library();
var ax=fig.add_subplot(111);
do_first_thing_with(obj);
PyArray_Descr*descr;
var i=np.array([0,0,1,2,2]);
fr.f_code.co_name;
export var corners=np.squeeze(np.int0(corners));
var e=pygame.event.poll();
graph.append([]);
b[x].append(x);
cx2;
var n=len(txt);
var result1=pool.apply_async(solve1,[A]);
var nums=[6,10,4,8,2,12,10];
self.optionmenu_a.pack();
session.add(doc);
gplt.show();
var app=wx.App(false);
pagination_serializer_class(__kwargtrans__({instance:page,context:context}));
var question=session.query(Question).first();
members[index];
export var cutoffs=np.cumsum(probs);
linepos.append(offset);
var user=models.ForeignKey(User);
var canvas=numpy.zeros(tuple([12,12]),__kwargtrans__({dtype:int}));
df.set_index(rng,__kwargtrans__({inplace:true}));
pprint.pprint(w.fields);
export var overlaycolour=[255,0,0];
var ax2=fig.add_subplot(5,4,2,__kwargtrans__({sharex:ax1}));
(function(){var __accu0__=[];for(var t of data)__accu0__.append(t.__getslice__(0,2,1));return __accu0__})();


var df=pd.DataFrame(np.random.choice([1,np.nan],tuple([1E6,15]),__kwargtrans__({p:tuple([.01,.99])})));
a[a>=-100&a<=100];
print(res);
lmul(ll[0],function(){var __accu0__=[];for(var item of ll[1])__accu0__.append([item]);return __accu0__}());

np.random.seed(0);
export var team=models.ForeignKey(Team);
var c=np.intersect1d(a,b);
var t=et.fromstring(df.to_html());
export var CC1=CC1a*(CC1b+CC1b.T+np.eye(n1));
export var third_friday=first_friday+timedelta(__kwargtrans__({days:14}));
export var sin=np.sin(angles);
var lines=file.read().splitlines();
db.create_tables([Person]);
self.ui=Ui_MainWindow();
tuple(prime_factors(100));
createIndex(row,column);
a(4,5);
var __left0__=c.most_common()[0];var value=__left0__[0];var count=__left0__[1];
ax.set_xticklabels(tuple([]));
arr.tocsr();
real_f.close();
actions.move_by_offset(x_to,y_to);
-setup.py;
var proc=multiprocessing.Process(__kwargtrans__({target:wrapper,args:tuple([queue,bob])}));
mkl_rt.mkl_set_num_threads(ctypes.byref(ctypes.c_int(48)));
var df=df.reset_index(__kwargtrans__({drop:true}));
var parsed=json.loads(your_json);
true;
var a=x.copy_with(__kwargtrans__({y:4}));
hash1==hash2;
a.clip(0,10);
print(user.username);
var sums=itertools.accumulate(seq);
py_metatype.__new__(meta,classname,bases,newClassDict);
tree.query_ball_point([london],__kwargtrans__({r:euclidean_distance(100)}));
np.putmask(array,numpy.random.rand(array.shape)<prob,np.logical_not(array));
var fig1=plt.figure();
os.rename(outfile.py_name,inpath);
var ax2=ax1.twinx();
var l=[];
print(parse(test));
self.draw();
lib.a.A();
lst.py_sort();
tick.label.set_fontsize(14);
[[1],[4,5,6],[10],[15,16,17,18],[22],[25,26,27,28]];
data;
var nt=etree.ElementTree(root);
(function(){var __accu0__=[];for(var S of s)for(var f of[FunkyFunction(a[S])])if(f>0)__accu0__.append(f);return __accu0__})();
var result=[];
print(data);
var contents=output.getvalue();
var m=np.median(foo[foo>0]);
self.mainframe=ttk.Frame(self.root,__kwargtrans__({padding:tuple([6,6,12,12])}));
var Dy=L1[0]*L2[2]-L1[2]*L2[0];
oFig1.add_subplot(4,4,11);
print(filename);
var sums=a.sum(__kwargtrans__({axis:1})).A1;
hashed_passwd.startswith(salt);
print(filename);
export var savek=list(k);
new set([new set([modelform1])]);
new set([new set([modelform2])]);
my_command.py;
p.join();
mp_handler();

var sorted_files=[];
out.__getslice__(1,-1,1);
Map(__kwargtrans__({fold:function __lambda__(f,g){return f(x)},bimap:function __lambda__(f,g){return Left(f(x))}}));
tuple([x,y,p]);
set(lst1+lst2);
lines_counter+=1;
var s=slice(2,4);
var py_values=[5,10,15,20];
var d1=date(2008,9,26);
export var string_dec=str(dec);
var f1=lambdify(x,diff(f(x)));
print(line);
glClear(GL_COLOR_BUFFER_BIT);
float(s);
var tokens=nltk.word_tokenize(raw);
var a=Counter(0,1,2,1);
export var ip_range=netaddr.cidr_merge(ip_range);
f.writelines(function(){var __accu0__=[];for(var datum of data)__accu0__.append(datum+os.linesep);return py_iter(__accu0__)}());
myClass.py;
image.thumbnail(tuple([256,256]),Image.ANTIALIAS);
var response=unirest.post(url,__kwargtrans__({headers:headers,params:params}));
pprint(result.data);
export var static_indices=numpy.ogrid.__getitem__([tuple([0,a.shape[0],1]),tuple([0,a.shape[1],1]),tuple([0,a.shape[2],1])]);
var b=a.__getitem__([index,index]);
sys.getsizeof(test_ordered_dict);
print(tuple([u[i],i,u,len(u)]));
f.set_figwidth(15);
a+=1;
vec/=np.linalg.norm(vec,__kwargtrans__({axis:0}));
sys.stdout=StringIO.StringIO();
orig_import(py_name,...args);
Ainv;
strcat(greeting,py_name);
traceback.print_stack(__kwargtrans__({file:self.stdout}));
export var f_name=func.__name__;
self.fn(...args,__kwargtrans__(kwargs));
var form=ArticleForm(request.POST,__kwargtrans__({instance:article}));
np.random.shuffle(indices);
cls;
a.__getslice__(1,2,1);
mydict[currentid].append(currentvalue);
stefan.append(list(args));
self.__do_layout();
print(sys.version);
[a];
var data=request.GET.copy();
var ax=plt.axes(__kwargtrans__({projection:ccrs.Robinson()}));
var result=dict(pool.map(f,inputs));
var filepath=os.path.join(root,names);
output_wave_file.close();
(function(){var __accu0__=[];for(var x of samples)__accu0__.append(x/sum_samples);return __accu0__})();
y-=2;
models.Field.formfield(self,StringListField,__kwargtrans__(kwargs));
var cols=cols.__getslice__(-1,null,1)+cols.__getslice__(0,-1,1);
platform.release();
ssh.connect(l_host,__kwargtrans__({username:l_user,password:l_password}));
var t=np.arange(-.5,1,1E-5);
var Y=np.array([2,0,1,1]);
export var cval=int(c);
var value=1;
ExampleModel.objects.filter(__kwargtrans__({some_datetime_field__range:[start,new_end]}));
pause(1);
l[x]=l[x].__getslice__(1024,null,1);
file.write(data);
var zipfile=ZipFile(StringIO(url.read()));
self.listWidgetA.currentItemChanged.connect(self.item_clicked);
mat.close();
var U=np.random.rand(n,n);
dict_[methodname]=lockmethodfactory(methodname,lockattr);
loop.run();
var todayDate=datetime.date.today();
result.x;
wb.save(output);
shortset.add(seq.__getslice__(i,i+shortlen,1));
print(b.base===a);
var z=np.polyfit(x,y,1);
A[[0]].shape;
all(map(function __lambda__(x){return x==l[0]},l));
a[i]=int(a[i].__getslice__(0,null,-1));
var data=__all__;
var __except0__=NotImplementedError;__except0__.__cause__=null;throw __except0__;
var a=numpy.empty(tuple([ix.sum(),h5_array.shape[1]]),__kwargtrans__({dtype:float}));
print(avg_positive_speed(speed));
var p=function __lambda__(x,y){return x+y};
self.width=width;
string.punctuation;
plt.ylim(0,2500);
meth;
self.extend(db.py_get(key,[]));
wf.close();
gevent.Greenlet.__init__(self);
bpy.ops.transform.rotate(__kwargtrans__({value:rot.angle,axis:rot.axis}));
var __left0__=plt.subplots(1,2,__kwargtrans__({sharey:true}));var fig=__left0__[0];var ax1=__left0__[1][0];var ax2=__left0__[1][1];
pool.close();
var B=csr_matrix(tuple([5,2]),__kwargtrans__({dtype:int}));
mail.check();
var __left0__=zip(...list(my_dict.py_items()));var py_keys=__left0__[0];var py_values=__left0__[1];
print(ctypes.get_last_error());
var m=np.ma.masked_where(y>5,y);
sys.stdout=devnull;
os.mkdir(corpusdir);
db.add(marker_type);
var p=figure();
var l=[];
cv.SetData(image0,rotated_image.tostring());
export var rotmat=np.array([[0,0,1],[0,1,0],[-1,0,0]]);
self.stack.append(0);
export var higher=Vertex();
text_link.insert_after(is_my);
var i=j+1;
gtk.main();
var grid=[0,5,10,15,20];
result[-1].append(text);
self.columnconfigure(2,__kwargtrans__({weight:1}));
var A=A.T;
var mask=np.tril(np.ones(tuple([4,4]),__kwargtrans__({dtype:bool})));
var fig2=plt.figure();
export var diff_idx=np.flatnonzero(np.linalg.norm(b.__getslice__(1,null,1)-b.__getslice__(0,-1,1),__kwargtrans__({axis:1}))>thresh)+1;
var total=sum(function(){var __accu0__=[];for(var el of list(val.py_values()))__accu0__.append(el);return py_iter(__accu0__)}());
var d=datetime.datetime.utcnow();
writer.writeheader();
export var bearing=math.atan2(y2-y1,x2-x1);
m.move(x,y);
br.set_handle_redirect(true);
self.__dict__=kwargs;
export var im_hsv=cv2.cvtColor(im,cv2.COLOR_BGR2HSV);
var __left0__=StringIO();sys.stdout=__left0__;export var mystdout=__left0__;
PyEval_AcquireThread(myThreadState);
pop_conn.quit();
var new_matrix=[];
var d=dict({});
var p=Point(1,__kwargtrans__({y:2}));
var form=CustomerInfoForm(request.POST);
var img=filedescriptor.read();
dyna_join(df,[0,-2]);
print(config_file[opt_name]);
print(list(build_notes(DF)));
list(someDict.py_keys())&someSet;
self.dummy.x=value;
__mod__(n,10)+digitalSum(Math.floor(n/10));
export var parameter=eval(file_text);
var root=Tk();
var idx=numpy.random.choice(len(choices),4);
var res=function(){var __accu0__=[];for(var i=0;i<bound;i++)__accu0__.append(test.__getslice__(Math.floor((i+1)*i/2),Math.floor((i+1)*(i+2)/2),1));return __accu0__}();
var EMAIL_USE_TLS=true;
py_new.append(graph[i]);
d.nonzero();
st.norm.cdf(1.64);
decoder.decode(s);
dict(__kwargtrans__({add:_add}));
output[lake]=lake.sum()<6;
self.hair=hair;
data.text;
count[0]+=1;
print(b-a,len(numbers));
self.i+=1;
df;
var s=requests.session();
some_thing_that_fails();
print(e.findall(data));
odict[key];
req.setRawHeader(k,v);
var M=np.random.randint(2,__kwargtrans__({size:tuple([h,n])}));
fig.autofmt_xdate();
attachedvolumes();
self._async_interrupt.interrupt();
var conn=engine.commit();
p.start();
var now=datetime.utcnow();
finalizebins(bins,binsize);
export var X_subset=function(){var __accu0__=[];for(var idx of indices)__accu0__.append(X[idx]);return __accu0__}();
os.kill(int(pid_str),sig);
var result=collections.defaultdict(list);
print(i);
df[1]=df[0].diff()>6E11;
var py_keys=list(d.py_keys());
var results=pool.map(do_work,work);
export var datamean=data.mean(__kwargtrans__({axis:0}));
y.byteswap();
lines.append(dict({}));
export var rev_ref=dict(function(){var __accu0__=[];for(var [k,v]of ref.py_items())__accu0__.append(tuple([v,k]));return py_iter(__accu0__)}());
w.add(a);
hashes.append(sha1OfFile(os.path.join(path,file)));
res_lst.append(out_queue.py_get());
print(result);
generations.append(generations[-2]+generations[-1]);
b.py;
t.start();
plt.legend();
kwallet_example.get_password(wallet);
var m=pd.Series(to_filenames.py_values,from_filenames.py_values);
char*saveptr;
var axes=plt.subplot(gs.__getitem__([0,0]));
System.err.println(tmpFunction.getClass());
export var reader_p=Process(__kwargtrans__({target:reader,args:tuple([queue])}));
bin(x);
var c=wmi.WMI();
p.start();
var s=map(set,g);
self.broken=true;
some.unrelated.development.host;
picture.putdata(colors);
session.expunge_all();
export var rle=function(){var __accu0__=[];for(var [k,g]of groupby(li))__accu0__.append(tuple([k,len(list(g))]));return __accu0__}();
test();
job.py_get();
s.astype(np.datetime64).fillna(pd.NaT);
self.size=max(self.size,self.position);
var t=datetime.date.today();
ispower(625,5);
0;
print(str(err));
var fig=plt.figure(__kwargtrans__({figsize:tuple([ncol+1,nrow+1])}));
var f=StringIO();
tuple([x,y,z]);
subprocess.call(commandline);
var X_test=np.array(descs_train);
var cursor=db.cursor(__kwargtrans__({cursor_class:MySQLCursorDict}));
a2.remove(e);
A[row]=[data];
test2();
lib.TessBaseAPIGetUTF8Text.restype=ctypes.c_char_p;
var s=sys.__stdin__.readline();
var authhandler=urllib.request.HTTPBasicAuthHandler(passman);
var data=Column(String(20));
gcf().canvas.draw();
self.happiness=self.wealth/self.data.global_wealth;
driver.execute_async_script(load_jquery_js,jquery_url);
tuple([7,array([4,5,6]),array([8,9])]);
timedelta.days*86400+timedelta.seconds;
var result=pipe.stdout.readline();
export var roster=[];
x.__getitem__([tuple([0,null,1]),x_range,y_range]);
n>>=8;
var queryset=Location.objects.all();
export var total_distance=numpy.hypot(...numpy.diff(numpy.array(points),__kwargtrans__({axis:0}))).sum();
export var kclass=[];

var a=A();
var root=tkinter.Tk();
json.JSONEncoder.py_default(self,obj);
a1.append(int(data[0]));
print_tree(d);
np.fromiter(dropwhile(function __lambda__(x){return x},ar.__getslice__(0,null,-1)),__kwargtrans__({dtype:bool})).__getslice__(0,null,-1);
print(a,b);
var __left0__=arraysums_recursive(tuple([a,b]),__kwargtrans__({lower:5,upper:6}));var result=__left0__[0];var index=__left0__[1];
sys.stdout=f;
var ax=plt.gca();
print(now.strftime(fmt));
var fig=plt.figure();
var r1=np.hstack(tuple([b,w,b,w,b,w,b]));
nx.draw(G,pos,__kwargtrans__({alpha:.75}));
requests.py_get(url,__kwargtrans__({auth:auth}));
var new_dic=dict({});
print(p,p.is_alive());
b.set_clip_on(false);
export var dirName=os.path.abspath(dirName);
np.array(signal);
self.tree_filter.refilter();
response.append(line);
tuple([vertices,np.hstack(tuple([bary,1-bary.sum(__kwargtrans__({axis:1,keepdims:true}))]))]);
var py_values=np.random.rand(1E3);
var connection=pyodbc.connect(connection_string);
n[i]=py_next(iterators[i],done);
g.draw();
edges.__getitem__([i+2,j]).append(tuple([i-2,j]));
model._meta.verbose_name;
export var xpp=(x.ctypes.data+np.arange(x.shape[0])*x.strides[0]).astype(np.uintp);
sums.append(data[groups==group].sum());
letters.remove(chr(part[1]));
dict(__kwargtrans__({one:1,two:2}));
b[x]=1;
ctypes.pythonapi.Py_IncRef(pyo);
fig.delaxes(fig.axes[2]);
export var car2=pygame.transform.rotate(car1,10);
module_a.py;
var k=k+1;
len(self.buffer)>0;
var output=process.communicate();
outfile.write(outline);
export var the_data=json.loads(json_string);
outlist.append([]);
var ssh=paramiko.SSHClient();
print(n.predict(B));
x();
var output=PdfFileWriter();
array([[.5,2.5,4.5],[.5,2.5,4.5],[.5,2.5,4.5]]);
main();
set_state(args.state);
print(ensure_datetime(x));
pygame.camera.init();
var diff=datetime.now()-birthday;
app.run(__kwargtrans__({debug:true}));
export var reps=[tuple([y,Math.pow(x,2)]),tuple([x,2])];
cv2.drawContours(mask,[best_cnt],0,0,2);
print(value);
export var funcname=func.__name__;
var found=false;
main_window.setCentralWidget(enable_window.control);
print(line);
var py_values=np.hstack([np.random.normal(0,1,10),np.random.normal(10,1,100)]);
plot(row,x,y);
glEnd();
ax.draw_artist(col);
fin[i[0][0]]=i[-1];
var dd=dd.py_replace(__kwargtrans__({year:dd.year-100}));
var img=cv2.cvtColor(final_hsv,cv2.COLOR_HSV2BGR);
Matrix(final).expand();
ui.setupUi(Form);

sys.stdin=progA.stdout;
main();
self.send_response(200);
webbrowser.open_new(url);
data.__getslice__(0,-(py_typeof(data[-1])==int?data[-1]:ord(data[-1])),1);
ws.send(json.dumps(dict(__kwargtrans__({received:message}))));
set(b).issubset(set(a));
print(date_dict.py_get(date,[]));
var df=pd.DataFrame(function(){var __accu0__=[];for(var x of outputdata)__accu0__.append(function(){var __accu1__=[];for(var y of x)__accu1__.append(y[0]);return __accu1__}());return __accu0__}(),__kwargtrans__({columns:Molecule}));
var __left0__=zip(...zipped);var b=__left0__[0];var c=__left0__[1];
var x=np.arange(xmax);
self.should_run.py_clear();
complex_process(df.ix[idate],idate);
self.src[-1].append(item);
np.not_equal(c.__getslice__(1,null,1),c.__getslice__(0,-1,1),__kwargtrans__({out:flag.__getslice__(1,null,1)}));
myList[-1];
var d=hashlib.md5();
current_class.append(node.tag);
var s=fh.read(40256);
var times=pd.to_datetime(df.timestamp_col);
print(df_final);
export var client2=socket.socket();
self.__or__(other);
sys.exit(2);
im.set_ylim(tuple([125,1E3]));
var points=np.random.rand(15,2);
entropy;
var img=cv2.merge(tuple([r,g,b]));
export var radius=vor.points.ptp().max();
fake_csv.seek(0);
matrices.append(np.random.random_integers(100,__kwargtrans__({size:tuple([1E3,1E3])})));
var y=10*np.random.normal(mu,sigma,5E3);
pprint(soup.find(__kwargtrans__({text:pattern})).__dict__);
print(my_globals.thing);
help(Foo.bar);
var tables=connection.introspection.table_names();
plt.imshow(green_img);
export var qproc=Process(__kwargtrans__({target:sub_proc,args:tuple([q,fn])}));
var app=Flask(__name__);
ax1.set_xticks([]);
(function __lambda__(){return reqd_email==cherrypy.request.login});
column_widths[i]=len(cell);
l[-1]+=s.__getslice__(0,r,1);
usage();
export var date_requested=DateField();
var data=urllib.request.urlopen(str(i)).read();
var points=np.mgrid.__getitem__([tuple([1,6,1]),tuple([2,5,1]),tuple([8,10,1])]);
newlist[-1].append(alist[i]);
vec<-vector();
stdscr.refresh();
self.counter+=1;
pl.show();
issubclass(instance.__class__,object);
var mask=np.zeros(tuple([all_i.shape[0]])*n,__kwargtrans__({dtype:np.bool}));
print(mystring.format(wash_clothes,clean_dishes));
self.user=auth_user;
var fig=plt.gcf();
export var maxes=(np.diff(np.sign(np.diff(xs)))<0).nonzero()[0]+1;
self._body=self.read();
yaml.add_representer(str,str_presenter);
max(pairs,__kwargtrans__({key:function __lambda__(x){return x[1]}}))[0];
gobject.idle_add(discoverer.discover);
var path=sys.argv[1];
results[__mod__(i,2)].append(e);
var driver=webdriver.Firefox();
var content=response.read();
float(m(256));
dest.addPage(PDF.pages);
export var TESTING=true;
dir(Foo);
dis.dis(empty);
rdd.mapPartitionsWithIndex(remove_header);
export var vectorized_array=vectorized_sparse.toarray();
wsgi.py;
plt.xlim(ax,bx);
var idx=function(){var __accu0__=[];for(var [i,a]of enumerate(arrs))__accu0__.append(np.ones(len(a))*i);return __accu0__}();
le.fit([1,2,2,6]);
var now=datetime.datetime(2009,5,5);
var fig=plt.figure();
found.append(word);
index+=match.group(1);
export var present=datetime.now();
posts.fetch();
var intersection=tuple([max(a[0],b[0]),min(a[1],b[1])]);
set().union(...function(){var __accu0__=[];for(var x of list(periodic_gs.py_values()))__accu0__.append(x.nodes());return py_iter(__accu0__)}());
sys.stderr.flush();
label.setPixmap(pixmap);
dict_writer.writeheader();
1/2;
var p=re.compile(regex,re.U);
export var generators=function(){var __accu0__=[];for(var file of datfiles)__accu0__.append(read_values(file));return __accu0__}();
nb.train(v);
var IS_SETUP=false;
var img=ImageTk.PhotoImage(Image.open(path));
fig.set_size_inches(18.5,10.5);
uexpr.doit();
var idx=[1,4,8,10,22];

[tuple([self._min_x,self._min_y]),tuple([self._max_x,self._max_y])];
job.start();
cv.Copy(img0,newCanvas);
var ax=fig.add_subplot(111);
out.__setitem__([R,C],A[R].multiply(B.__getitem__([tuple([0,null,1]),C]).T).sum(1).ravel());
export var corner1=[0,0,0];
export var mylst=list(range(10,20));
export var list_1_sorted=function(){var __accu0__=[];for(var x of sorted_together)__accu0__.append(x[0]);return __accu0__}();
logger.addFilter(dup_filter);
r.append([d,f]);
print(tfidf.todense());
entry.configure(__kwargtrans__({show:random_char()}));
var shape=tf.shape(image);
export var _create_unverified_https_context=ssl._create_unverified_context;
datetime.datetime(...dt_args);
self.foo_impl(x);
var __left0__=np.triu_indices_from(arr,__kwargtrans__({k:k}));var rows=__left0__[0];var cols=__left0__[1];
var f=float(s);
var ax=plt.axes();
var indices=function(){var __accu0__=[];for(var [i,v]of enumerate(a>=4))if(v)__accu0__.append(i);return __accu0__}();
var meta=MetaData();
logger;
lock.acquire();
hash(self._vals());
print(posneg([6,44,1,-7,-6,19]));
b[2]+=7;
var ax0=plt.subplot(gs[0]);
dump(indata,5,6);
min(points,__kwargtrans__({key:self.compute_distance_to}));
SublimeLauncherApp().run();
get_color(.2);
hash(str(self));
self.cells[index]=new_value;
print(df);
export var b0=tf.Variable(tf.zeros([256]));
file.seek(position);
np.allclose(out1,reduce_after_multiply(M1,M2));
var output=StringIO.StringIO();
df.shape;
dict(iterableOfKeyValuePairs,__kwargtrans__(dictOfKeyValuePairs));
var A=p1[1]-p2[1];

var root=ET.fromstring(xml,parser);
export var importPath=os.path.dirname(path);
plt.grid(true);
export var file_args=compdb.getCompileCommands(source_file_path);
print(new_list2);
var hours=sales.index.hour;
export var pieces=urlparse.urlparse(url);
export var token_dict=keystone.auth_ref;
-libjpeg-dev;
export var tour=[];
var xy=(np.random.random(tuple([10,2]))-.5).cumsum(__kwargtrans__({axis:0}));
print(get_script_dir());
f.close();
hashes[newhash]=newurl;
var li=st.py_split().__getslice__(0,null,-1);
print(result);
ax.plot(list(range(10)));
var df2=df.copy(__kwargtrans__({deep:true}));
var X=np.reshape(lena,tuple([-1,1]));
var a=pandas.DataFrame(np.arange(25,__kwargtrans__({dtype:np.float16})).reshape(5,5));
print(result[0]);
var ax=plt.subplot(111);
f(...arg,__kwargtrans__(kw));
self.index+=1;
var f=Foo();
self._attr_value_to_obj_set[attr_value].add(obj);
(function(){var __accu0__=[];for(var f of orderless_faces)__accu0__.append(needs_flip[f]?f.__getslice__(0,null,-1):f);return __accu0__})();
sys.modules[mod_name]=Mock();
self.tabs[index].append(CQWebView(self));
subset[subset.isin(myList)].stack().duplicated().unstack();
axis.set_ylim(y_min-.1,y_max+.1);
cj.save(__kwargtrans__({ignore_discard:true}));
pprint.pprint(my_structure);
export var arginfo=inspect.getargvalues(s[1][0]);
a2.eliminate_zeros();
var email=db.Column(db.String(120),__kwargtrans__({unique:true}));
ax.plot(list1,list2);
new set([new set([answer.someattribute])]);
self.panel.hide();
context.set_source_rgb(1,1,1);
export var mpu=bucket.initiate_multipart_upload(key);
gen.close();
a.__getslice__(5,0,-1);
matching_solutions.append(sol);
user.save();
p1.stdout.close();
ya.set_major_locator(MaxNLocator(__kwargtrans__({integer:true})));
export var image_content=base64.b64encode(image.read());
var mask=np.isnan(a);
print(tuple([item.subject,item.body,item.attachments]));
ans[-1]+=letter;
__contains__;
var CM=CM.sum(__kwargtrans__({axis:1}));
print(line);
- -tasks;
(function(){var __accu0__=[];for(var [i,j]of graph_data)__accu0__.append(ax4.plot(i,j));return __accu0__})();
p.start();
var __except0__=NotImplementedError();__except0__.__cause__=null;throw __except0__;
logging.Handler.setFormatter(self,fmt);
cls.py_items[item];
next_up(x);
tuple([a.getDouble(),b.getDouble()]);
export var int_array=function(){var __accu0__=[];for(var a of ar)__accu0__.append(int(a,16));return __accu0__}();

math.hypot(self.x,self.y);
export var ai=np.argsort(a);
print(i);
var temp=np.random.randint(1,10,10);
print(nltk.sem.relextract.show_raw_rtuple(rel));
var cursor=db.cursor();
export var lab=color.rgb2lab(rgb);
response;
pipeline.set_state(gst.STATE_PAUSED);
var ind=np.lexsort(tuple([a.__getitem__([tuple([0,null,1]),1]),a.__getitem__([tuple([0,null,1]),0])]));
(text[i]==char?1:0)+count(char,text,i+1);

export var paths=[];
a.data;
var k=bucket.new_key(full_key_name);
print(len(dodgy));
sorted(a);
ax.set_xlim(min(x)-offset,max(x)+offset);
print(X_train_tfidf.shape);
print(x.size);
foo(node,p.copy());
var my_data=function(){var __accu0__=[];for(var i=0;i<5;i++)__accu0__.append(list(range(5)));return __accu0__}();
export var num_bin=num_bin_reversed.__getslice__(0,null,-1);
var app=tornado.web.Application(Router.urls,__kwargtrans__({debug:settings.DEBUG}));
np.dot(m,prior_reci)+np.dot(1-m,.1*prior_reci);
p.terminate();
var key=bytearray([19,0,0,0,8,0]);
var b=pd.DataFrame(a);
export var column_entry=gtk.Entry();
print(data);
self.current=py_next(self.__gen);
TTY/dev/ttyS0;
container[key].py_update(py_values);
lF.grid();
kl.getFormula();
print(my_random_string(6));
export var ttlist=[];
tree.left=self.left;
dictfetchall(cursor);
self.doc=ET.parse(fname);
d.append(t);
Main();
var data=conn.recv(1024);
var __left0__=tuple([x-2,y-2,w+4,h+4]);var x=__left0__[0];var y=__left0__[1];var w=__left0__[2];var h=__left0__[3];
var width=db.IntegerProperty();
output.flat[ind]=res;
var dir=os.path.dirname(path);
conn.setopt(pycurl.WRITEFUNCTION,response.write);
export var end_dt=datetime.date(2005,6,1);
a.__getitem__([0,0]);
var new_list=function(){var __accu0__=[];for(var x of the_list)for(var y=0;y<n;y++)__accu0__.append(x+str(y));return __accu0__}();
var __left0__=tuple([val,index]);export var oldval=__left0__[0];export var oldidx=__left0__[1];
output.addPage(pdfOne.getPage(i));
export var recovered_time_shift=dt[xcorr.argmax()];
var df=pd.read_csv(StringIO(txt),__kwargtrans__({skipinitialspace:true}));
Counter(x)==Counter(y);
ex.show();
keyValues[key].append(value);
export var imc=im.crop(tuple([w-50,h-50,w+50,h+50]));
var client=app.test_client();
fig.axes.get_yaxis().set_visible(false);
types.FunctionType(self.func.__code__,new_globals);
copyData(data,arr);
c.executescript(query);
self.print_usage(sys.stderr);
var dict2=copy.deepcopy(dict1);
any(function(){var __accu0__=[];for(var elem of string)__accu0__.append(__in__(elem,test2));return py_iter(__accu0__)}());
models.DateTimeField(__kwargtrans__({blank:true}));
var B=NP.array([0,1,0,1,0]);
export var sorted_points=sorted(points);
true;
export var INVENV=0;
self.response.write(g.text);
print(itertools.permutations.__doc__);

var url=key.generate_url(__kwargtrans__({expires_in:0,query_auth:false,force_http:true}));
var driver=webdriver.Firefox();
print(str(10).zfill(2));
output[-1]+=char;
fnan<0;
true;
header[key]=function(){var __accu0__=[];for(var x of header[key])__accu0__.append(x.strip());return __accu0__}();
client.close();
export var myObject=myObject.doStuf();
var sigma=np.matrix([[4,10,0],[10,25,0],[0,0,100]]);
i+=1;
var __except0__=ValueError;__except0__.__cause__=null;throw __except0__;
var parser=argparse.ArgumentParser();
export var Gvalue=someoperation(Gnodes);
var app=QApplication(sys.argv);
export var th=np.linspace(0,2*np.pi,M);
var d=d[k];
export var full_dir=os.path.join(home,directory);
axis2.plot(list(range(10,20)));
squre_pts.push_back(R4);
plt.plot(x,y);
print(first(function(){var __accu0__=[];for(var l of lettfreq)if(lettfreq[l]==1)__accu0__.append(l);return py_iter(__accu0__)}()));
export var ax5=plt.subplot(gs.__getitem__([-1,-2]));
var reader=csv.reader(f);
k.delete();
is_linear(eq1,[a,d]);
var i=np.random.randint(0,nrows-1,numdense);
axis([-1.5,1.5,-1.5,1.5]);
var dfs=[df1,df2];
var d=dict({});
print(tuple([fit_alpha,fit_loc,fit_beta]));
plt.contour(np.log(r));
export var re2_matches=re.findall(re2,text);
var key=Key(bucket,filename);
var b=[tuple([10,40]),tuple([40,60]),tuple([60,90]),tuple([90,100])];
var filename=os.path.join(dirname,basename);
result.append(mofile);
print(res[0]);
f.diff(x).diff(x)<0;
var x=np.linspace(0,2*np.pi,100);
show(ptr,0);
var c=np.hstack(tuple([a,np.atleast_2d(b).T]));
fig.canvas.draw();
self.__dict__[key];
c.perform();
np.lib.stride_tricks.as_strided(arr,__kwargtrans__({shape:shape,strides:strides}));
0;
map(operator.itemgetter(0),L);
self.__dict__.py_update(state[0]);
X.tocsc()[indices];
Y.__setitem__([,1],np.clip(np.abs(X)/absmax,0,1));
round_total_digits(x);
IOLoop.add_timeout(deadline,callback);
var __left0__=np.histogram2d(x,y,tuple([xedges,yedges]));var hist=__left0__[0];var xedges=__left0__[1];var yedges=__left0__[2];
export var dayafter=now+timedelta(__kwargtrans__({days:2}));
(function(){var __accu0__=[];for(var x of[4,5,6])for(var p of product(...seqs.__getslice__(1,null,1)))__accu0__.append([x]+p);return __accu0__})();
var img=ImageTk.PhotoImage(Image.open(path));
part.speed=function(){var __accu0__=[];for(var _=0;_<size;_++)__accu0__.append(random.uniform(smin,smax));return __accu0__}();
print(sys.getsizeof(x));
send_from_directory(directory,filename);
var seed=np.zeros(data.shape,__kwargtrans__({dtype:bool}));
help(sys);
print(numpy.nanmean(A));
plt.contour(X,Y,F,[0]);
var r=np.sqrt(Math.pow(x,2)+Math.pow(y,2));
fig.show();
var b=r_.__getitem__([a,c]);
all(function(){var __accu0__=[];for(var i of a)__accu0__.append(i===a[0]);return py_iter(__accu0__)}());
export var py_default=parser.parse_args(args.__getslice__(0,-1,1),__kwargtrans__({namespace:ns}));
print(map(tuple,output_sent));
var k=cv2.waitKey(0);
self.z=z;
var b=[a,a];
var X=np.linalg.solve(A,y);
var t=set([1,2]);
self.listOfVideo;
data;
np.random.seed(0);
export var fibs=function(){var __accu0__=[];for(var i=0;i<fib_n;i++)__accu0__.append(fib(i));return __accu0__}();
rec.set_clip_on(false);
var series2=series1.__getslice__(0,null,-1);
pygame.init();
export var empty_keys=function(){var __accu0__=[];for(var [k,v]of metadata.py_items())if(!v)__accu0__.append(k);return __accu0__}();
var content=result.read();
self._oldstdout_fno=os.dup(sys.stdout.fileno());
fd.floatarr.argtypes=[POINTER(c_int),POINTER(POINTER(c_float))];
utils.py;
total.finish();
var a=[1,2];
var ind=np.column_stack(np.unravel_index(idx,lon.shape)).tolist();
export var new_rows=[];
YourTask.apply_async(__kwargtrans__({args:[some,args,here],eta:when}));
var a=list(a);
var all_keys=set(chain(...function(){var __accu0__=[];for(var x of dd)__accu0__.append(list(x.py_keys()));return __accu0__}()));
var v=np.arange(0,original.shape[0],.5).astype(int);
tree.body[1].names[0].py_name;
ssh.load_system_host_keys();
np.dot(arr,arr);
myNewList[i]+=math.copysign(.01,n);
d.x;
export var encoded_data=urllib.parse.urlencode(data);
mw.show();
fig.colorbar(surf,__kwargtrans__({shrink:.5,aspect:5}));
var t=datetime.datetime.fromtimestamp(float(s)/1E3);
export var runner=unittest.TextTestRunner(f);
var image=Image.open(image_file);
var color=sns.color_palette()[5];
var dt_aware=pytz.timezone(tz).localize(dt_naive);
(function(){var __accu0__=[];for(var tensor of tf.get_default_graph().as_graph_def().node)__accu0__.append(tensor.py_name);return __accu0__})();
cscope-R;
FlakyClient.call();
os.seteuid(os.getuid());
var tree=ET.parse(newfile);

print(funcs[0]());
tuple([datetime.date(2012,11,22),datetime.date(2012,12,25),datetime.date]);
strcpy(cpy,str);
export var modified=function(){var __accu0__=[];for(var [k,v]of list(d.py_items()))__accu0__.append([k,max(v)]);return dict(__accu0__)}();
results.append(line);
int(self)>int(other);
var d=dict(zip(val_old,val_new));
true;
var reader=csv.reader(fin);
var output=pandas.DataFrame(__kwargtrans__({index:outDates,columns:strData}));
self.tapDetected();
signal.alarm(timeout);
df;
Vector(function(){var __accu0__=[];for(var s of self.data)__accu0__.append(s+other);return __accu0__}());
export var nmean=autojit(mean_numba);
var py_name=models.CharField(__kwargtrans__({max_length:255}));
var handler=logging.StreamHandler();
from_date-relativedelta(__kwargtrans__({years:years}));
export var tmp_planes=ax1.zaxis._PLANES;
j+=1;
var result=[];
var array=list(range(10));
None.__cause__=null;throw None;
mysql_cn.close();
var objects=PersonManager();
self.pk;
var word=word.strip();
cv.SetData(cv_im,pil_im.tostring(),pil_im.size[0]);
print(string_numbers);
print(sys.argv[1]);
plot(xdata,ydata);
var fp=webdriver.FirefoxProfile();
zip(list(range(start,stop)),collection);
finalinfo[s]=finalinfo.py_get(s,0)+t;
new_dict;
np.multiply(d,d,__kwargtrans__({out:g}));
a.indices(1);
signals.pre_save.connect(update_timestamp,__kwargtrans__({sender:Post}));
print(doc.to_json());
print(x);
var x=random.random();
var xx=np.linspace(0,1,1E3);
os.close(self.pipe[1]);
h2o.init();
var d=p.dirname(somepath);
table[i-1][j-1]=data[str(i)][str(j)];
result+=function(){var __accu0__=[];for(var i=0;i<len(py_values);i++)if(py_values[i]==sv)__accu0__.append(i);return __accu0__}();
var res=cursor.fetchall();
var __left0__=np.ogrid.__getitem__([tuple([0,n,1]),tuple([0,n,1]),tuple([0,100,1]),tuple([0,n,1])]);var a=__left0__[0];var b=__left0__[1];var c=__left0__[2];var d=__left0__[3];
concurrent_suite.run(testtools.StreamResult());
ylim(10,17.5);
print(key,my_dict[key]);
random.seed(newseed);
var im=numpy.random.randint(0,50,tuple([5,7]));
print(sub_toks);
ui.write(e.EV_KEY,e.KEY_A,1);
ax.plot(xdata,ydata);
test_greet();
t.start();
abspath(getsourcefile(function __lambda__(){return 0}));
Math.pow(10,Math.pow(10,10));
tuple([1,1,8,1]);
[tuple([16,-16]),tuple([40,-40])];
main();
list(closed_range(1,10,2));
export var first_ungrouped_idx=np.where(matching)[0][0];
(function(){var __accu0__=[];for(var l of lst)__accu0__.append(l==value);return __accu0__})();
ax.scatter(x,y,__kwargtrans__({marker:symbol[sign(chg)],s:175}));
print(first_day+relativedelta(__kwargtrans__({months:1})));
export var localrandom=random.Random(id_num);
var y=y+y;
time.sleep(.2);
time.sleep(50/1E3);
var __left0__=plt.subplots(1,1);var fig=__left0__[0];var axs=__left0__[1];
self.rop=rop;
print(data);
var module=__import__(module,__kwargtrans__({fromlist:[py_name]}));
obj.actor.scale=[0,0,0];
var data=np.array([6]);
other+str(self);
outputmapping[idx]=val;
new_stack.append(old_stack.py_pop());
a_thread.join();
customer.save();
stack.extendleft(py_reversed(node.children));
var a=numpy.arange(1E4,__kwargtrans__({dtype:numpy.double}));
self.dot.set_data([[value],[value]]);
var df=DataFrame(__kwargtrans__({columns:list(range(100)),index:list(range(1E3))}));
py_next(op);
var results=[];
self.b=b;
self.py_update();
self.session_store=sessions.get_store(__kwargtrans__({request:self.request}));
self.systemTrayIcon.setVisible(true);
var dict=dict({});
Container(result);
scalemap.__setslice__(0,null,null,scale*xmap);
x==y;
var copy_of_a=a.__getslice__(0,null,1);
emails.append(email.fetch());
map(id,a);
var line=line.rstrip();
var legs=0;
var a=a[0];
export var sinks=sys.argv.__getslice__(1,null,1);
no_vow(seq,index);
axes.bar(x2,y,__kwargtrans__({facecolor:getCycledColor()}));
var df=concat(tp,__kwargtrans__({ignore_index:true}));
var axes=plt.subplot(111);
locals();
df.py_update(df_small);
dropped_copies.append(function(){var __accu0__=[];for(var x of copies[i])__accu0__.append(x[i]);return py_iter(__accu0__)}());
Log.setLevel(level);
var x=np.linspace(-1,1,500);
t/=np.linalg.norm(t);
poison(spam);
var logger=logging.getLogger(__name__);
pool.join();
self.value;
var only_words=function(){var __accu0__=[];for(var token of my_list)if(token.isalpha())__accu0__.append(token);return __accu0__}();
var y_test=np.random.randint(0,10,[50]);
self.value=value;
var b=a();
var data=xmltodict.parse(data);
var DEBUG=true;
object_list.filter(__kwargtrans__({username:request.user}));
export var new_queryset=queryset.none();
fig.canvas.draw();
logger.py;
export var dpi=fig.get_dpi();
f.__closure__[0].cell_contents;
export var strt_dt=datetime.date(2001,1,1);
export var xmean=xwin.mean(__kwargtrans__({axis:1}));
self.hide();
t.stop();
float(s);
bval[q-1]^=1<<r;
loop.close();
np.diff(np.py_sort(a));
var g=io.BytesIO(f.read());
var seconds=value.total_seconds();
self.Bind(wx.EVT_MENU,self.OnMinimize,__kwargtrans__({id:minimize.GetId()}));
[0,1,1];
var im=Image.open(img);
print(rows[len(ray)-idx]);
self._index+=1;
self.img_label.pack(__kwargtrans__({side:tk.TOP}));
np.hstack(tuple([arr.reshape(x*y,z),indices]));
client_receiver.RCVTIMEO=1E3;
print(utc.localize(test2));
var mask=np.ones(a.shape,__kwargtrans__({dtype:bool}));
var res=a[0]*b[0]+a[1]*b[1]+a[2]*b[2];
self.collector=collector;
var msg=xmpp.Message(self.request.POST);
export var search_results=search_response.read();
export var SettableDataBits=TRUE;
var form=UsersForms.UserImage(request.POST,request.FILES);
var foo=my_func(your_func(their_func()));
export var flattened=chain.from_iterable(function(){var __accu0__=[];for(var x of lst)__accu0__.append(isinstance(x,str)?[x]:x);return py_iter(__accu0__)}());
var bus=dbus.SessionBus();
metadata.drop_all();
filt1(signal)*line(dur,0,1)+filt2(signal)*line(dur,1,0);
var j=np.array([[0,0,0],[1,1,1]]);
var display=Xlib.display.Display();
main.show();
print(result);
var line=line.__getslice__(0,-1,1);
print(p1.x.x);
export var last_build=my_job.get_last_buildnumber();
print(total);
var options=parser.parse_args();
cvtColor(img,img_bw,COLOR_BGR2GRAY);
export var consecutive_diffs=function(){var __accu0__=[];for(var [x,y]of pairwise(xs))__accu0__.append(y-x);return py_iter(__accu0__)}();
var path=os.path.join(dir,py_name);
print(py_name);
seen.add(item);
a_test.method_two();
export var n_interior=abs(diff(a,__kwargtrans__({axis:0}))).sum()+abs(diff(a,__kwargtrans__({axis:1}))).sum();
UserSerializer(user).data;
export var arrangement=list(function(){var __accu0__=[];for(var row of itertools.islice(iterator,4))__accu0__.append(list(row));return py_iter(__accu0__)}());
logger.removeHandler(handler);
var df=df.applymap(format);
self.flush();
setattr(self,field.py_name,new_filename);
TextWidget.focus_set();
export var crsr=cnxn.cursor();
print(finder.nbest(trigram_measures.likelihood_ratio,10));
var path=os.path.join(dirpath,filename);
store.close();
export var cleared=[];
false;
export var basis_vecs=sorted_eigvecs.__getitem__([tuple([0,null,1]),tuple([-num_basis_vecs,null,1])]);
digit_to_char(m);
decorator;
self.y+=1;
keyValues[key].append(value);
pickle.load(f);
var CM_tilde=np.mean(data,__kwargtrans__({axis:1}));
export var zinfo=zipinfo;
itertools.chain(f(py_reversed(a.__getslice__(0,i,1))),[a[i]],f(a.__getslice__(i+1,null,1)));
time.sleep(SECONDS_TO_WAIT);
new_path.append(current_neighbour);
code.interact(__kwargtrans__({banner:banner,local:namespace}));
self._a=a;
CALLS+=1;
var list=[];
plt.yticks(yvalues,ylabels,__kwargtrans__({figure:fig}));
var app=Flask(py_name);
var f=urllib.request.urlopen(req);
self._heartbeat=heartbeat;
list(iterable.py_keys());
StartDance(...list(range(5,9)));
driver.py_get(url);
literal_eval(x);
[1,8,6];
var C=A.dot(B);
dir(img);
C.copy(ffi.from_buffer(arr_in),ffi.from_buffer(arr_out),16);
frequencies[character.lower()]+=1;
var b=set(a);
itertools.groupby(list(range(10)),function __lambda__(x){return x<5});
var a=[2,7,9];
export var df_index=np.insert(np.arange(arr.shape[0]),idx+1,idx,__kwargtrans__({axis:0}));
export var corner2Copy=(len(arr)-1)*numpy.array(corner2);
serverSocket.bind(tuple([HOST,PORT]));
print(str);
0;
BOOST_PYTHON_MODULE(s);
p.start();
var B=[[0,0,1,0],[1,0,1,0],[1,1,0,0],[1,0,0,1],[1,0,0,0]];
export var loadedArchive=np.load(outFile);
var found=false;
var tasks=multiprocessing.Queue(1);
print(test(15));
main();
false;
oss.str();
parser;
var screen=pygame.display.set_mode(tuple([800,600]));
var x=np.zeros(2,__kwargtrans__({dtype:dt}));
search(s);
self._cache=dict({});
sys.exit(app.exec_());
b[a];
plt.figure(__kwargtrans__({figsize:tuple([15,5])}));
dict({});
deleteself.list[i];
var __left0__=tuple([set(range(2,n)),2]);var x=__left0__[0];var p=__left0__[1];
x.A.count()*(x.A.count()-1)*2;
export var pqueue=[];
imframe.putpalette(palette);
current_dir.py_pop();
done.add(row[0]);
j2.py_sort();
var ax0=fig.add_subplot(1,2,1);
(function(){var __accu0__=[];for(var t of grouper(s))if(__in__(t[0],vowels))__accu0__.append(t);return __accu0__})();
var config=ConfigParser.ConfigParser();
var result=PyClass();
print(doc.reprJSON());
wave_file.close();
var ext=os.path.splitext(path)[1];
subprocess.Popen(args1);
subprocess.Popen(args2);
x.__getslice__(1,null,2);
var diff=function(){var __accu0__=[];for(var i=0;i<N-1;i++)__accu0__.append(a[i+1]-a[i]);return __accu0__}();
f.close();
t.set_axis_off();
print(str.__getslice__(0,6,1)*2);
var a=np.transpose(a);
tuple([new set([0,1,0,0,0,0,0])]);
var b1=np.array([[5,6],[7,8]]);
d[date]=dict({});
self.kNN=initializekNN();
var server=urllib.request.build_opener(ph);
a*b;
m.predict([1,1,1]);
print(df);
QtCore.QAbstractListModel.__init__(self,parent);
var date_joined=models.DateField();
result.append(tuple([longest_keyword,all_occ[longest_keyword][0]]));
write(file);
export var X_min=np.min(X[idx]);

sys.path=sys.path.__getslice__(0,4,1);
var it=py_iter(it);
var a=np.arange(10);
var fig2=plt.figure(__kwargtrans__({figsize:tuple([4,4])}));
var white=np.array([255,255,255]);
pprint(offset_keys(dct,datetime.date(2015,7,12)));
self.print1();
var cc=np.load(f);
var wr=csv.writer(your_csv_file,__kwargtrans__({quoting:csv.QUOTE_ALL}));
export var besseli_vec=np.frompyfunc(mp.besseli,2,1);
plt.hist2d(new_x,new_y,__kwargtrans__({bins:tuple([50,50])}));
export var decrypted=crypt_object.decrypt(decoded);
pygame.init();
resp;

plt.plot(x,norm_vals);
clients+=1;
p.start();
var __left0__=tuple([x+dx,y+dy]);var x=__left0__[0];var y=__left0__[1];
np.random.seed(1977);
var p4=ctypes.c_int(0);
export var y_growth_flips=np.where(np.diff(np.diff(y)>0))[0]+1;
getattr(urlparse,method).append(scheme);
tuple([[5,2,2,1,4,1]]);
my_user.save();
cv2.drawContours(close,[cnt],0,255,-1);
pool.join();
var f=eval(s);
b.T;
var events=(a[0]+a[-1]+sum(function(){var __accu0__=[];for(var i=1;i<len(a);i++)__accu0__.append(a[i]!=a[i-1]);return py_iter(__accu0__)}()))/2;
self.maps=maps;
tuple([0,1,[t]]);
var menu=Menu(root,__kwargtrans__({tearoff:0}));
db_field.formfield(__kwargtrans__(kwargs));
var test=[[0]*10]*10;
b.__getitem__([tuple([0,null,1]),a]);
deleteposix;
print(image.shape);
echo((foo+bar)*baz/(bar+foo));
scipy.stats.norm(100,12).cdf(98);
printTree(tree,child);
findex.fromfile(f,1);
var args=parser.parse_args();
len(self.datatable.columns.py_values);
version[0]==6&&version[1]==0&&version[8]==VER_NT_WORKSTATION;
ModClass.class_method();
f_new.close();
button.pack();
print(root.getprevious());
cr.set_source_rgb(1,1,1);
var df1=pd.DataFrame(data1);
var py_split=shlex.py_split(s);
var data=urlopen(info_url).read();
out.write(buf[0]);
cyclic_equiv(a,b);
ctx.push();
inF.close();
var uniq=list(OrderedDict.fromkeys(lst,0));
false;
count+=1;
dtype.append(tuple([field,object]));
var c=Counter(list(d.py_values()));
export var numeral=numerals[numeral_index];
var b=int(sys.argv[1]);
export var partners=np.empty_like(X,__kwargtrans__({dtype:int}));
cv.ResetImageROI(newCanvas);
print(form.errors);
str(s);
wx.CallAfter(self.frame.Close);
repr(d);
print(network);
driver.maximize_window();
result;
app.main();
export var _ROOT=os.path.abspath(os.path.dirname("./P2JSnippets.py"));
print(tuple([c.x,c.y,c.z]));
var t=threading.Thread(__kwargtrans__({target:do_work,args:tuple([work,results])}));
tuple([tuple([10,[2,5]])]);
print(m.group(1));
usernametoken.insert(uname);
self.delete(__kwargtrans__({save:false}));
plt.imshow(np.random.randn(100,100));
df;
print(a);
setattr(foo,generatedClass.__name__,generatedClass);
img.__setitem__([data.__getitem__([i,0]),data.__getitem__([i,1])],img.__getitem__([data.__getitem__([i,0]),data.__getitem__([i,1])])+1);
a[1]=np.ma.masked;
timeit.Timer(myTImedClass.square).timeit();
queue.put([e,traceback.format_exc(e)]);
id(a[0]);
obj.set_password(obj.password);
export var aapl_50ma=pd.rolling_mean(aapl,50);
var p=np.poly1d;
result[k]=result.py_get(k,0)+v;
export var user_count=serializers.SerializerMethodField();
self.index+=1;
tuple([f,x,y,z]);
qbtn.move(50,50);
export var means=np.mean(complete_matrix,1);
app.debug=true;
df[cond1|cond2];
generations.append(generations[-2]+generations[-1]-1);
var src=inspect.getsource(target);
self.assertTrue(__in__(element,self.seq));
self.transport.loseConnection();
var a=models.ForeignKey(A);
result.append(p.__getslice__(0,i,1)+[l[0]]+p.__getslice__(i,null,1));
bind_layers(PPPoE_Tag,Padding,__kwargtrans__({tag_type:0}));
f.close();
mydict.py_setdefault(currentid,[]);
suite.run(defaultTestResult());
dir(nodebox);
founds.append(tuple([inters,list_number1,list_number2]));
cell.value=2;

self.renderer0=gtk.CellRendererText();
asyncio.wait(self._set);
app.wsgi_app=LoggingMiddleware(app.wsgi_app);

var __left0__=tempfile.mkstemp();var fd=__left0__[0];var path=__left0__[1];
current+=1;
self.tearDown();
export var L2=tuple([[u,v,w],[x,y,z]]);
main();
event.fire(...args,__kwargtrans__(kargs));
self._q.put(self.o);
var py_name=Column(String,__kwargtrans__({primary_key:true}));
var df=df[df.apply(function __lambda__(x){return __in__(x.A,x.B)},__kwargtrans__({axis:1}))];
var array2=np.broadcast_to(array1,tuple([20,20,2,4]));
min(lis2,__kwargtrans__({key:func}));
sys.stdin.read(1);
export var rlcn=RLCN();
export var hb1=plt.hexbin(x1,y1,__kwargtrans__({norm:norm}));
sp.solve(lst)[0][x];
self.label=QLabel(self);
dis.dis(function __lambda__(){return true==true&&true!=false});
export var find_common=function __lambda__(a,b){return a.intersection(b)};
var elapsed=time.time()-now;
p.join();
f2.close();
cls._bar=value;
random.random()<p?nhb:x;
var y=ax.get_ylim();
self.index+=1;
z.close();
meta.reflect(__kwargtrans__({bind:someengine}));
5-+-+-+2;
var module=import_module(module_name);
a*2;
var X=np.ma.masked_equal(X,0);
1<<100;
var address=models.ForeignKey(Address,__kwargtrans__({blank:true,null:true}));
print(author.first(),author.last());
export var which=numpy.array(list(itertools.combinations(list(range(10)),2)));
tuple([uri,tag]);
(function(){var __accu0__=[];for(var row of zip(outgoing,incoming))__accu0__.append(function(){var __accu1__=[];for(var [x,y]of zip(...row))__accu1__.append(x+y);return __accu1__}());return __accu0__})();
var y=y.reshape(-1,x.shape[0]);
var array=[random.uniform(1.5,12.4),random.uniform(0,5)];
foo(A(),A());
var p=Process(__kwargtrans__({target:MP_Stuff,args:tuple([self,id])}));
p.map(worker,nums);
ilabel.grid(__kwargtrans__({row:1,column:1}));
print(mondays[-1]);
var py_items=list(function(){var __accu0__=[];for(var m of dl)__accu0__.append(some(__kwargtrans__(m)));return py_iter(__accu0__)}());
var f=staticmethod(f);
self._conn=self._pool.py_get();
var line=file_obj.readline();
var __left0__=process.communicate();var out=__left0__[0];var err=__left0__[1];
var fp=webdriver.FirefoxProfile();
do_whatever_else();
connection.commit();
var car2=pygame.transform.rotate(car1,20);
export var dudette=form.save();
foo*a+str(bar);
file.close();
__builtin__.object=orig_object;
fig.colorbar(qmesh,__kwargtrans__({ax:ax}));
img.seek(0);
L[i]=L[idel];
proc.join();
var z=np.outer(np.ones(np.size(lons)),np.sin(lats)).T;
var lines=np.empty(tuple([len(x_range)+len(y_range),2,100]));
var response=self.client.py_get(some_url);
var tree=[];
deleteself.z[-1];
print(platform.python_version());
print(r.text);
setCustomWidth(2);
var result=[];
x+y+z;
traceback.print_exc();
export var el=fromstring(some_string);
[1.000051];
x.py_split();
print(tuple([key,list(grp)]));
var __left0__=p.communicate();var stdout=__left0__[0];var stderr=__left0__[1];

var c=np.concatenate(tuple([a,b]));
var driver=webdriver.Chrome();
var doc=ET.parse(xmlfile).getroot();
pprint.pprint(zip(chain.from_iterable(expressions),results));
f(...args,__kwargtrans__(kwargs));
dict({});
p.map(e.op2,arg_list);
var new_t=function(){var __accu0__=[];for(var item of t)__accu0__.append(names[item]);return __accu0__}();
var __left0__=tuple([my_list.__getslice__(2,4,1),my_list.__getslice__(7,10,1)]);my_list.__setslice__(7,10,null,__left0__);my_list.__setslice__(2,4,null,__left0__);
var new_lst=function(){var __accu0__=[];for(var sublist of lst)__accu0__.append(sorted(sublist));return __accu0__}();
var im=imclearborder(im);
var dc=wx.WindowDC(window);
b.shape;
var xlim=ax.get_xlim();
export var cap1=cv2.VideoCapture(1);
print(utc_date);
np.trapz([-1,0,1]);
item;
spreadsheets_client.ProgrammaticLogin();
self._inner[index];
export var captcha=CaptchaStore.objects.all()[0];
self.py_update(...args,__kwargtrans__(kwargs));
var loop=asyncio.get_event_loop();
var moneyx=float(l);
export var df_list=function(){var __accu0__=[];for(var file of filelist)__accu0__.append(pd.read_table(file));return __accu0__}();
main();
echoer.transport.write(data);
i+=1;
export var end_ts=time.time();
composed;
(vmax-vmin)*np.random.rand(n)+vmin;
print(arr.columns);
df;
export var listtwo=[4,5,6];
var session=requests.session();
my_urls+urls;
var M=np.random.rand(N*10*10).reshape(N,10,10);
var res=np.zeros(reslen,__kwargtrans__({dtype:a.dtype}));
var obj=mlab.imshow(img);
export var nonzeroind=np.nonzero(a)[0];
self.panel.SetScrollbars(1,1,1,1);
var ii=np.where(a.__getitem__([tuple([0,null,1]),0])==b.reshape(-1,1))[1];
print(sorted(function(){var __accu0__=[];for(var xs of itertools.product(...py_values))__accu0__.append(product(xs));return py_iter(__accu0__)}()));
a.helloThere();
biglist.__setslice__(0,null,null,unique(biglist));
var A=1E-7;
rows.append(row);
var rows=cursor.fetchall();
var n=int(line);
self.renderer(py_name,str_value,final_attrs,choices);
np.set_printoptions(2,__kwargtrans__({threshold:100,edgeitems:5,suppress:true}));
1-1-1;
[6,6,6,6,6];
a.__setslice__(0,null,null,b);
var temp=[key,value];
var leg=ax.legend();
export var horizontal=function(){var __accu0__=[];for(var i=0;i<w;i++)__accu0__.append(img.__getitem__([int(h/2),i]));return __accu0__}();
self.assertEqual(2+2,4);
L.__getslice__(0,null,1)[1];
print(result);
output.write(chunk);
exit(0);
var width=2*np.pi/N;
s.hist();
print(map(applyEpsilon,inputList));
print(lh.tostring(doc));
print(item);
a*np.exp(-c*(x-b))+d;
fullDict.py_setdefault(row[0],[]).append(row[1]);
export var h_conv2=tf.nn.relu(conv2d(h_pool1,W_conv2)+b_conv2);
Console.ReadLine();
X.__getitem__([mask1.nonzero()[0],mask2.nonzero()[0]]);
var sidx=a.argsort();

var counts=np.diff(a.indptr);
request.user=User.objects.py_get(__kwargtrans__({id:1}));
export var set1=set(array1);
export var death_year=death_data.py_get(1).value;
var end=time.time();
var chunks=function(){var __accu0__=[];for(var i of range(0,len(bin_string),6))__accu0__.append(bin_string.__getslice__(i,i+6,1));return __accu0__}();
p.suspend();
var height=len(data);
export var the_time=the_time.py_replace(__kwargtrans__({second:0,microsecond:0}));
runrec(new_src,level+1);
var inds=np.arange(A.shape[0]);
r.div(r.sum(1),0).plot.bar();
repr(tuple([self.py_name,self.grade,self.age]));
tuple([x,y]);
var fig=plt.figure();
n+=1;
min(PlayerList,__kwargtrans__({key:function __lambda__(p){return min(p.__getslice__(1,null,1))}}));
sum(function(){var __accu0__=[];for(var [xa,xb]of zip(a,b))__accu0__.append(Math.pow(xa-xb,2));return py_iter(__accu0__)}());
var x=np.random.random(10);
df;
var r=b*sympy.sin(c);
var mro=inspect.getmro(self.__class__);
export var whereclauses=[];
py_next(f);
plt.pcolormesh(gridx,gridy,grid);
var df2=pd.read_table(io.BytesIO(content2));
b.String();
self.render();
print(py_typeof(fh.read(100)));
var x=[1,7];
store.append(tabular_key,store.py_get(key),__kwargtrans__({data_columns:true}));
var buf=f1.read(1024);
export var run_start=time.time();
data_pipeline.close();
closing(inner());
list(join_unescaped(list_1));
export var listStore=gtk.ListStore(int);
self.data;
i+=1;
var a=[1,1,2,1,1,4,5,6];
var t1=threading.Thread(__kwargtrans__({target:thread1,args:tuple([1,t1_stop])}));
var x=linspace(0,2*pi,20);
var total=py_next(it);
app.update_template_context(context);
self.setResizeColumn(0);
var soup=Soup(htmlFile);
signal.alarm(0);
self.n=1;
var val=f.f_back.f_locals[x];
var __left0__=tuple([x[1],x[2]]);x[2]=__left0__[0];x[1]=__left0__[1];
matplotlib.hatch.Shapes.__init__(self,hatch,density);
!sum(function(){var __accu0__=[];for(var i of data2)__accu0__.append(!__in__(i,data));return __accu0__}());
df;
var d=calendar.monthrange(dt.year,dt.month+1)[1];
self.flush();
forks.append(Fork(names,goal,success));
value;
xs.py_sort();
var r=np.random.randint(rows,__kwargtrans__({size:100}));
var __left0__=tuple([0,1]);var a=__left0__[0];var b=__left0__[1];
example();
loop.run_until_complete(user_func());
print(list(m));
sh.write(n,0,v_desc);
export var kalman=cv2.KalmanFilter(4,2);
var W=W.reshape(8,10);
Area2(a,b,c)==0;
var __except0__=NotImplementedError();__except0__.__cause__=null;throw __except0__;
var __left0__=image.shape.__getslice__(0,2,1);var height=__left0__[0];var width=__left0__[1];
list(bcdDigits(characters));
x-=.5*(bins[1]-bins[0]);
(function(){var __accu0__=[];for(var x of self.gomez*n)__accu0__.append(self.cousinitt(x));return __accu0__})();
df.b.loc[s&s!=s.shift(-1)].tolist();
my_button1.bind(__kwargtrans__({on_press:self.changer}));
func;
resultlist.append(M);
sklearn.feature_selection.f_regression(X,Y,__kwargtrans__({center:false}));
var result=dict({});
var py_items=function(){var __accu0__=[];for(var [conv,val]of zip(converters,vals))__accu0__.append(conv(val));return __accu0__}();
deletex;
splitList.py_pop(0);
rgb_values.py_pop(i);
export var rc1f=np.ravel_multi_index(rc1,A.shape);
print(infer_spaces(s));
signal.signal(signal.SIGALRM,alarmHandler);
gevent.spawn(read_stream,p1.stdout);
var decay_rate=5E-6;
exec(code,m.__dict__);
soup.original_1.body.append(b);
self.canvas.repaint();
myOjbect.doStuf().doMoreStuf(arg1,arg2).goRed().goBlue().die();
var indices=list(range(N));

var b=[4,5,6];
var session=sessionmaker(__kwargtrans__({bind:engine}))();
print(network);
self.a();
var item=item.lower();
df;
var app=QApplication(sys.argv);
seps;
self.connections.append(self);
sentences.append(sentence);
print(tuple([val,ty.currentLevel()]));
var quantiles=numpy.array(quantiles);
record._cache.py_update(record._convert_to_cache(py_values,__kwargtrans__({py_update:true})));
var k=i*len(b)+j;
a[x]=a[x][1];
eday1.insert(10,10);
__in__(arg,arg2value);
export var xsgn=np.sign(x);
panel.SetSizer(sizer);
var M=np.random.randint(2,__kwargtrans__({size:tuple([h,n])}));
var index=clang.cindex.Index.create();
x.extend(item);
export var previous=[0]*len(criteria);
foo(parent2);
var layout=QHBoxLayout(self);
Tools|SublimeREPL|Language;
export var wd=webdriver.Remote(server_url,dc);
export var iseq=py_iter(seq);
var lines=ax.plot(list(range(10)),pylab.randn(10),list(range(10)),pylab.randn(10));
root_logger.setLevel(logging.INFO);
len(frozenset(objs))==len(objs);
export var grp=(isone!=idx.to_series().diff().eq(1)).cumsum();

var outdata=numpy.empty(tuple([5,6]));
files.finalize(zip_file);
count_helper(len(text)-1);
df.index=df.index+pd.DateOffset(__kwargtrans__({days:15}));

var username=Martin.Thoma;
np.array(y);
export var db_list=insp.get_schema_names();
var b=datetime.datetime(2015,10,29);
self.fig=pylab.figure();
var l=list(map(itemgetter(0),g));
var page=page.__getslice__(n,null,1);
var test2=test1.astype(int);
endif;
outfile.write(line);
new_instance.put();
total+=1;
var X=np.arange(-2,2,dx);
splitext(path);
var data=fin.read(end_index-start_index);
df.dtypes;
thing.getSecret();
s.get_matching_blocks().__getslice__(0,-1,1);
logger.addHandler(handler);
sum+=x;
write_lamb(sys.argv[1]);
print(x);
foo().baz();
var response=requests.post(url,__kwargtrans__({params:data,headers:headers}));
tuple(l);
y[0];
print(df);
uniques[col]=uniques[col].union(chunk[col].unique());
var text=first_td.renderContents();
var __left0__=divmod(q,l);var q=__left0__[0];var r=__left0__[1];
listSum(ls.__getslice__(1,null,1),result+ls[0]);
print(ignore_upper(a,__kwargtrans__({skip_rows:1,skip_cols:2})));
item.setEditable(false);
get_key(d,10);
df;
console.setFormatter(formatter);
NULL;
var created_at=models.DateTimeField(__kwargtrans__({py_default:timezone.now}));
any(map(my_dict.__contains__,my_list));
var frame=sys._getframe();
a[get_x()];
df;
var y=np.array([1.5E-10,1.5,1500]);
var mask=np.random.random_integers(0,1,N*M).reshape(tuple([M,N]));
export var itit=py_iter(thedict.py_items());
carray.__getslice__(0,5,1);
arr.__setslice__(0,null,null,lst.__getslice__(0,null,1));
f.__setitem__(Ellipsis,100);
s.bind(tuple([HOST,0]));
export var stsets=sorted(stset_string,__kwargtrans__({key:len,reverse:true}));
myLib.RegisterNofityCallback(45454,0,self.getCallbackFunc());
print(list(find(l)));
print(item);
setattr(instance,self.py_name,min(self._max,max(value,self._min)));
export var when=models.DateTimeField(__kwargtrans__({null:false,auto_now_add:true}));
transf1d(f,x,y,out);
System.out.println(value.scriptResult);
QMainWindow(parent);
x.__reduce__()[1];
Counter(str1);
log_file.write(line);
var a=A(b);
endif;
signal.alarm(5);
parser.delete_first_token();
module;
s.py_get(url);
var frame=inspect.currentframe();
export var time2=datetime.datetime.now();
plt.errorbar(x,y,yerr);
httplib.HTTPConnection.debuglevel=1;
var L=[15,16,57,59,14];
var ts=time.mktime(time.gmtime());
ax.imshow(data);
export var list1b=list.__getslice__(5,null,1);
var driver=webdriver.PhantomJS();
fig.savefig(fname,dpi);
export var Z1=np.abs(np.sin(2*Math.pow(X,2)+Y));
bins.append([min]);
newImage.save(new_image_path);
fig.set_dpi(dpi);
-1;
self.planet=Planet.EARTH;
urllib.request.HTTPSHandler.__init__(self);
var l=len(s);
wi.food(2.5);
len(empty);
var __left0__=someprogram.communicate();var output=__left0__[0];var error=__left0__[1];
connection.close();
var df=xl.parse(xl.sheet_names[0]);

node.start();
export var authors=stage2.findall(preliminary);
app.register_blueprint(main);
ol.add(1);
isinstance(result,tuple([collections.Sequence,collections.Iterator]));
groups.py_setdefault(key(sub),[]).append(sub);
var points=np.vstack([x,y]).T.reshape(-1,1,2);
var __left0__=zip(...sorted(zip(xs,ys)));var xs=__left0__[0];var ys=__left0__[1];
visited.add(path);
collections.Counter(df[0]);
print(i[0],list(i[1]));
self.skipTest(MyTestCase);
tuple([1,1,0]);
count+=1;
self.ui.setupUi(self);
tuple([1,8,8,1]);
var M=sparse.lil_matrix(tuple([10,10]));
var app=QtGui.QApplication(sys.argv);
a.__class__;
clientSocket.send(endmsg.encode());
os.remove(tmp_filename);
var max_index=index;
plt.imshow(image);
root.withdraw();
a*b;
set(a);
self.username;
print(result);
df.index.slice_indexer(start_remove,end_remove);
print(content);
p.apply_async(e.op1,arg_list);
mapper.SetScalarVisibility(1);
var soup=BeautifulSoup(doc);
py_typeof(g._productions[-1]);
stream.getvalue();
self.send_response(200);
groups.py_setdefault(len(e),[]).append(e);
df[~df.stack().between(.1,1).unstack()];

np.abs(a[2]-a).max(__kwargtrans__({axis:1}));
var K=abs(A-C)<abs(B-C);
print(stderr);
BaseHandler.__init__(self);
fn();
var new_list=[];
arr.fill(np.nan);
plt.figure();
var t=np.arange(0,4E4,4E3);
print(model_tunning.best_params_);
main();
print(find_subimage(screenshot,subimg_path));
var c=C();
img.__setitem__([tuple([0,null,1]),tuple([0,null,1]),1],50);
print(id(text));
var f=open(path);
export var img_data_ndarray=cv2.imdecode(file_bytes,cv2.CV_LOAD_IMAGE_UNCHANGED);
var ax1=fig.add_subplot(111);
export var is_file_like=!isinstance(fp,str);
export var minutes_id=models.IntegerField(__kwargtrans__({blank:true,null:true}));
var d=d.month+1;
arr[slices];
self.value=value;
_wrapper;
connection.start();
s.listen(10);
_authentication_required;
var logger=sc._jvm.org.apache.log4j;
dingo;
f;
export var xstring=infile.readlines();
export var selected_item=self.main_window.widget_layers.selectedItems()[0];
model.load_weights(weights_path);
n-1;
settings.py;
var filename=os.path.splitext(os.path.basename(sys.argv[0]))[0];
var block=f.read(bufsize);
copytree(srcname,dstname,symlinks,ignore);
fig.colorbar(surf);
print(C());

f.close();
os.linesep;
var a=np.arange(1E3);
cls.open_files();
pdb.set_trace;
py_typeof(z);
fp.close();
print(pool.map(f,list(range(10))));
print(word);
p[0]>p[1]&&p[1]>p[2];
result;
var idx=np.where(a[i]>0);
var data=source.get_data();
ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy());
py_typeof(py_name);
any(function(){var __accu0__=[];for(var x of mylist)__accu0__.append(__mod__(x,2)==0);return py_iter(__accu0__)}());
export var rec_dd=function __lambda__(){return defaultdict(rec_dd)};
var img=PIL.Image.open(file_like);
foo.__code__.co_consts[1].co_consts;
print(item);
tuple([CD,BF,BE,BC,BD]);
tuple([2,2,2,.1]);
export var grpA=np.empty(mask.shape);
var query=query.filter(table_a.id==table_b.id);
print(itertools.__doc__);
myFunc(2);
export var related_classes=function(){var __accu0__=[];for(var prop of relation_properties)__accu0__.append(prop.mapper.class_);return __accu0__}();
data2.__setitem__([tuple([0,-1]),tuple([0,null,1])],np.nan);
var result=match.group(1);
var p=Process(__kwargtrans__({target:editDict,args:tuple([mlist[i],mlist,i])}));
__in__(py_name,dir(__builtins__)+kwlist);
var children=dict({});
var data=df.loc.__getitem__([mask,tuple([0,null,1])]);
self.a=a;
var im=ImageGrab.grab();
py_typeof(k);
x.__getitem__([tuple([-1,4,1]),tuple([-1,4,1])]);
np.allclose(a.__getitem__([tuple([0,null,1]),tuple([0,null,1]),tuple([0,null,1]),0]),collapse_dims(a).__getitem__([tuple([0,null,1]),tuple([0,null,1]),tuple([0,2,1])]));
export var current_dt=datetime.datetime.now();
var sorted_a=a[np.argsort(a.__getitem__([tuple([0,null,1]),1]))];
self.axes.draw_artist(self);
var image=Image.open(source_path);
var table=function(){var __accu0__=[];for(var x=0;x<count;x++)__accu0__.append(function(){var __accu1__=[];for(var x=0;x<count;x++)__accu1__.append(0);return __accu1__}());return __accu0__}();
export var sieve=[1,1]+[0]*(R-1);
export var first_list=[];
pdb._runscript(mainpyfile);
main();
export var valid_utf8=false;
np.bitwise_or.reduceat(m,ind.ravel()).__getslice__(0,null,2);
a.__getslice__(1,4,1);
export var firstName=db.StringProperty();
b;
py_next(lines);
tuple([point[0]+k*vec[0],point[1]+k*vec[1]]);
print(time.clock()-start);
export var timer_thread=Thread(__kwargtrans__({target:start_timer}));
var response=urllib.request.urlopen(urllib.request.Request(self.pubmed_url));
fW.write(y);
self.verbosity;
self.log.removeHandler(handler);
var regressions=np.polyfit(X,A2,degree);
var __left0__=meshgrid(x,y);var X=__left0__[0];var Y=__left0__[1];
myseries_two.loc.__getslice__(0,2,1);
var form=form_class(data);
- -start;
var list=[];
var file_content=f.read(1);
sys.exit(app.exec_());
exit(0);
export var DOT11_CIPHER_ALGO_CCMP=4;
c[0].set_color(time_color);
var result=cv2.warpPerspective(img2,Ht.dot(H),tuple([xmax-xmin,ymax-ymin]));
tuple([zsum,areasum]);
export var W_o=tf.Variable(tf.random_normal([num_units,input_size],__kwargtrans__({stddev:.01})));
export var time_tuple=dt.timetuple();
var res=function(){var __accu0__=[];for(var t of zip(...list(res1.py_values())))__accu0__.append(dict(zip(res1,t)));return __accu0__}();
var data=line.py_split();
self.assertGreaterThan(len(foo.config.mock_calls),0);
var s=list(iterable);
export var vmax=max(map(function __lambda__(x){return max(abs(x))},data));
var field=QtGui.QLabel(text,self);
response.url;
pool.join();
dict(zip(spec.args.__getslice__(-len(spec.defaults),null,1),spec.defaults));
s[pd.isnull(s)]=n;
var nmask=sparse.csr_matrix(~mask.A);
var ax=fig.add_subplot(1,1,1);

time.sleep(.25);
var delta=numpy.eye(5);
self.c.set(SERV_SECTION,SERV_DESC,SERV_DESC_DEFAULT);
dir(string);
export var gd_client=gdata.photos.service.PhotosService();
b.ques_type;
var jar=Cookie.SimpleCookie();
var results=mysql_cursor.fetchone();
var ax1=fig.add_axes([.05,.8,.9,.15]);
compose(compose(f,f),f);
var __left0__=tee(iterable);var a=__left0__[0];var b=__left0__[1];
plt.hold=true;
var ax=plt.axes();
export var preview=Preview();
var t2=datetime.now();
var ax=fig.add_subplot(n_rows,n_cols,n+1);
var py_name=self.aliases.py_get(py_name,py_name);
print(df);
var s=requests.Session();
item.save();
inspect.getargspec(foo);
response;
sys.exit(segmentation.exec_());
var df=df.join(s);
p.py_pop();
locals().py_update(f());
pylab.show();
export var dtoff=datetime.timedelta(__kwargtrans__({days:1}));
print(root_tree);
var f=lambdify(t,a);
export var gmaps=GoogleMaps(API_KEY);
login(self.request,new_user);
var x=1.2876;
print(sline[-1]);
self.left=[];
kernel/=kernel.sum();
list_result;
var form=FooForm;
self.response.out.write(template.render(path,template_values));
var y=np.arange(100).reshape(10,10);
var p=Pool();
export var output_lambda=df.apply(function __lambda__(x){return[x.value_counts().to_dict()]});
sqrt(Math.pow(v1[0],2)+Math.pow(v1[1],2)+Math.pow(v1[2],2));
list(d.py_items());
django.db.transaction.managed(true);
plt.figure();
NULL;

ax.yaxis.get_major_locator().base(2);
print(lst[0]);
ceiling_key(d,6);
po.apply_async(mine_page,tuple([filepath]),__kwargtrans__({callback:save_data}));
export var ranks1=dict(map(py_reversed,enumerate(sorted(dict1,__kwargtrans__({key:dict1.py_get})))));
var s=np.argsort(ab);
form.instance.author=self.request.user;
var top=np.argpartition(myBigArray,num,__kwargtrans__({axis:1})).__getitem__([tuple([0,null,1]),tuple([0,num,1])]);
_get_elements_by_tagName_helper(node,py_name,rc);
export var by_val=function(){var __accu0__=[];for(var [v,ks]of itertools.groupby(py_keys,shaders_dict.py_get))__accu0__.append(tuple([v,list(ks)]));return __accu0__}();
var index=self.get_index();
overlay_pic.close();
PyErr_Print();
export var transitions=transitions+array[0]+array[-1];
tk.LabelFrame.__init__(self,root,__kwargtrans__(options));
pprint_on();
var matches=dict({});
var __left0__=tuple([REGION.max.x+1,REGION.max.y+1]);export var imgx=__left0__[0];export var imgy=__left0__[1];
getattr(obj,attribute);
atexit.register(cleanup);
__init__.py<- - -empty;
export var location_out=list(splot(location_in));
var arr=random.random(N);
product(L.__getslice__(1,null,1),tmp+[i]);
print(random.choice(verb_list));
var x=np.arange(1,15.1,.1);
export var newclass=getattr(amodule,classname);
setattr(self,member[0],withx(member[1]));
var a=np.argsort(dist,__kwargtrans__({axis:1}));
ex.show();
l._legmarker.set_xdata(l._legmarker.get_xdata().__getslice__(1,2,1));
!sys.stdin.isatty;
fff(index);
timezone.utcoffset(dt);
var description=models.TextField();
show();
var id=Column(INTEGER,__kwargtrans__({primary_key:true}));
tmp.seek(0);
var args=parser.parse_args(args,namespace);
var path=os.path.join(root,fname);
export var current_base=len(rest_digits);
export var id_s=function(){var __accu0__=[];for(var [i,c]of enumerate(set(list)))__accu0__.append([c,i]);return dict(__accu0__)}();
graph.add_edge(node_number,random.choice(graph.nodes()));
np.log2(x);
export var dow=my_date.weekday();
new set([new set([your_python_data|as_json])]);
x+y;
self.timer.start();

library.func.argtypes=[c_void_p];
file_like_io.seek(0);
plt.ion();
var A=np.random.random_sample(1E4);
screen.nodelay(false);
ctx.move_to(-x_bearing,-y_bearing);
var cax=fig.add_axes([.12,.1,.78,.8]);
py_typeof(myObj)();
colmax+=i;
file.close();
var result=rec(a);
stream.close();
CHECK_RE.match(mystring);
var result=np.vectorize(operator.le)(lhs,rhs);
export var accounts=function(){var __accu0__=[];for(var x of user_list)__accu0__.append(Account(x));return __accu0__}();
slice(0,0,1);
zip(...[chain(iterable,repeat(padvalue,n-1))]*n);
var __left0__=np.meshgrid(x,y);var X=__left0__[0];var Y=__left0__[1];
str(self.contract);
var task=AsyncResult(task_id);
pdb.gimp_image_delete(image);
df.a=df.a.astype(float);
draw.text(tuple([10,25]),txt,__kwargtrans__({font:font}));
var matches=list(filter(fulfills_some_condition,lst));
tuple([false,false,false,false,false,false,false,false,false]);
self._store_aggregation_timer.cancel();
self.append(self._fx());
var x=plot(t,x);
var lock=threading.Lock();
svc.fit(X_train,y_train);
export var z_indices=indices[2];
export var simulation_params=simulations.py_get();
var newdata=json.loads(myData.text());
var start=time.time();
print(line);
self.SetBackgroundColour(wx.Colour(0,0,0));
var city=models.CharField(__kwargtrans__({max_length:75}));
var buff=StringIO.StringIO();
var new_list1=function(){var __accu0__=[];for(var v of decorated)__accu0__.append(v[0]);return __accu0__}();
print(i);

export var name_value_dict=dict(itertools.zip_longest(names,py_values));
print(urllib.parse.urlencode(params,true));
var df=df.set_index(index_name);
export var tableWidget=QtGui.QTableWidget(10,2,self);
print(df);
find(query);
app.setQuitOnLastWindowClosed(false);
export var oldstdout_fno=os.dup(sys.stdout.fileno());
c.setopt(c.HEADER,1);
var x=int(input());
var c=Counter(function(){var __accu0__=[];for(var letter of message)if(letter.isalpha())__accu0__.append(letter);return __accu0__}());
var cursor=dbapi_conn.cursor();
self.clients.remove(client);
cv2.circle(out,tuple([int(x2)+cols1,int(y2)]),4,tuple([255,0,0]),1);
var chrome=webdriver.Chrome(__kwargtrans__({chrome_options:chrome_options}));
export var sorted_files_with_size=sorted(files_and_sizes,__kwargtrans__({key:operator.itemgetter(1)}));
f.writelines(res);
shortcut.save();
var old_stdout=sys.stdout;
export var pairwise=np.empty(tuple([n,n]),__kwargtrans__({dtype:np.float}));
var link=f.read();
logging.debug(pprint.pformat(ds));
self.size+=1;
num*=1;
deque.extend(words.__getslice__(0,n-1,1));
self.newText.tokens.py_clear();
export var dll_excludes=w9xpopen.exe;

q.put(tuple([key,count]));
fp.close();
export var formset=WorkoutInlineFormSet(__kwargtrans__({instance:workout}));
plt.semilogy(x);
var im2=cv2.cvtColor(im,cv2.COLOR_BGR2RGB);
var s=socket(AF_INET,SOCK_DGRAM);
set(c)<set(b);
print(adam);
self.driver=WebDriver(__kwargtrans__({firefox_profile:profile}));
x.run();
var count=1;
var proc=pool.apply_async(processfile,__kwargtrans__({args:[filename,cursor,end]}));
export var rng2=reikna_norm_rng(1,100,1E4,0,1);
print(key);
var v=function(){var __accu0__=[];for(var i=0;i<n;i++)__accu0__.append(random.gauss(0,1));return __accu0__}();

export var matcher=difflib.SequenceMatcher(__kwargtrans__({a:string_a,b:string_b}));
true;
var Base=declarative_base();
var message=models.CharField(__kwargtrans__({max_length:100}));
new set([new set([formset.management_form])]);
value;
logger.addHandler(stream_handler);
None.__cause__=null;throw None;
Py_Finalize();
particle.speedy=int(circle.speedy);
self.data+=[val];
exec(fh.read());
f.__code__=g.__code__;
print(tuple([x,timeit.timeit(function __lambda__(){return h.py_update(data)},__kwargtrans__({number:100}))]));
export var new_row=temp;
var mat=pat.search(os.path.py_split(x)[-1]);
var inds=np.where(np.isnan(a));
5.8;
fig.canvas.manager.window.raise_();
var myList=[];
tuple([self,self.__class__(other)]);
var resp=make_response(f(...args,__kwargtrans__(kwargs)));
export var searchable_file=FileSearcher(file_to_search);
getcontext().prec=6;
job.hour.every(4);
png.load();
pprint(get_connection_name_from_guid(x));
x.extend(compress(a,a));

test.eval.restype=ctypes.c_double;
t.write();
ax.set_ylim(__kwargtrans__({bottom:0}));
driver.py_get(url);
var bucket=conn.get_bucket(bucket_name);
ax.yaxis_date();
export var row_pointers=Ks.indptr;

env.use_ssh_config=true;
signal.alarm(0);
export var code_out=StringIO.StringIO();
var sline=i.py_split();
plt.clim(-4,4);
var v=tk.StringVar();
s.__getslice__(-2,null,1);
[0,0,2,1];
var fig=plt.figure();
var y=a*Math.pow(t,alpha)+b;
var page=br.open(base_url,__kwargtrans__({timeout:10}));
logger.setLevel(logging.INFO);
plt.show();
server.serve_forever();
var A=np.asarray(AList);
var df=pd.DataFrame(s,__kwargtrans__({columns:heirIndex}));
cache[key]=fun(...args,__kwargtrans__(kwargs));
self._logger;
exit();
pyplot.gca().add_line(line);
print(overall_structure.parseString(test).asList());
var output=list(range(input+1));
var xi=np.linspace(xmin,xmax,numx);
var result=function(){var __accu0__=[];for(var x of result)for(var y of pool)__accu0__.append(x+[y]);return __accu0__}();
print();
print(os.path);
y1.append(random.randint(1,100));
csv_w.writerow(columns);
register_openers();
fig.colorbar(surf,__kwargtrans__({shrink:.5,aspect:5}));
list((y-x).elements());
var d=defaultdict(list);
df;
setattr(self,key,value);
fig.set_size_inches([5,5]);
result.append([]);
intArray_getitem(mylibrary.V,0);
var app=Flask(__name__);
var local_dt=datetime.fromtimestamp(expiration_utc_ts);
export var __getitem__=object.__getattribute__;
var k=k.parent();
var x=etree.fromstring(body);
i+=1;
os.chdir(file_path);
var CS=plt.contourf(xi,yi,zi,15,__kwargtrans__({cmap:plt.cm.rainbow,vmax:zmax,vmin:zmin}));
deletesprocket;
glLoadIdentity();
mkstring(10);
var sorter=numpy.argsort(py_values);
[a]+li;
export var integer=int(str_dec);
self.dealloc_cb_p(self.p,self.l,self.dealloc_cb_arg);
arr.__setitem__([tuple([0,null,1]),tuple([1,null,1])],float(10));
db_crsr.execute(_stmt);
var df=PD.concat(data,__kwargtrans__({axis:1,py_keys:function(){var __accu0__=[];for(var s of data)__accu0__.append(s.py_name);return __accu0__}()}));
var t=np.linspace(0,2*np.pi,100);
print(myfun(l,0));
nlargest(1).reset_index();
var id=ndb.ComputedProperty(function __lambda__(self){return self.key.id()});
var table=dict({});
var grouped=df.groupby(function __lambda__(x){return x.day});
var root=lh.tostring(sliderRoot);
var x2=np.random.permutation(1E5);
export var fit0=so.curve_fit(model0,xdata,ydata,__kwargtrans__({p0:tuple([p1,p2])}))[0];

export var html_parser=HTMLParser.HTMLParser();
self.send_response(200);
t1.join();
var where=function(){var __accu0__=[];for(var m of re.finditer(sub,string))__accu0__.append(m.start());return __accu0__}()[n-1];
self.msgs.add(record.msg);
time.sleep(.2);
export var dictonary=dict(function(){var __accu0__=[];for(var i of drug_list)__accu0__.append(tuple([i,[]]));return py_iter(__accu0__)}());
Py_DECREF(myfunc);
print(result);
fileHandler.setFormatter(format);
s.__getslice__(4,6,1);
var s=function(){var __accu0__=[];for(var item of s)__accu0__.append(item.capitalize());return __accu0__}();
plt.imshow(data);
var mySet=set();
var stdin=sys.stdin.read();

self.data=function(){var __accu0__=[];for(var col of columns)__accu0__.append([col,set()]);return dict(__accu0__)}();
str(my_uuid);
var t=datetime.now();
var full=np.random.random(tuple([1002,1004]));
export var headrev=revlog[0].revision.number;
plt.ylim(1E-6,1);
__in__(letters.lower(),ascii_lowercase);
var parser=argparse.ArgumentParser(description,usage);
test(0,10,20);
var result=re.sub(pattern,substitute,string);
print(df.loc[mask]);
var data=list(reader);
new_stepListB.extend([pathList[n][0],pathList[n][2]]);
var t=my_date.weekday();
var inv=ax.transData.inverted();
var objects=models.GeoManager();
var B=np.where(np.isfinite(A),A,f(inds));
G.add_nodes_from(rank_of_nodes);
print(a,b,c,d);
var __left0__=divmod(n,10);var n=__left0__[0];export var remainder=__left0__[1];
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
export var okays=function(){var __accu0__=[];for(var r of results)if(success_condition(r))__accu0__.append(r);return __accu0__}();
export var devnum=10;
df;
var json_str=json.dumps(json_object,__kwargtrans__({indent:4,sort_keys:true}));
__all__[py_name]=some_decorator(getattr(some_module,py_name));
export var a_set=set();
export var cache_file=os.path.join(__cache_dir__,cache_key);
something.jpg;
print(user.screen_name);
var req=con.getresponse();
var img=Image.open(infilename);
color_bar.draw_all();
MyTimeDelta(__kwargtrans__({hours:12}))/MyTimeDelta(__kwargtrans__({hours:2}));
region_dict[a.region].append(a);
datetime.timedelta(__kwargtrans__(dict([[interval_type,interval_num]])));
r(a.__getslice__(0,i,1)+m+a.__getslice__(i+1,null,1));
var __left0__=img.getSize();export var iw=__left0__[0];export var ih=__left0__[1];
df_possible_dup.apply(function __lambda__(x){return worker(x,fuzz_ratio)});
self.currentStack=[];
app.request_class=MyRequest;
foo.mymethod=mymethod;
var __left0__=np.meshgrid(x,y);var xv=__left0__[0];var yv=__left0__[1];
export var brr=brr.__getslice__(0,null,-1);
var result=tuple(islice(it,n));
var ctr=Counter(function(){var __accu0__=[];for(var x of a)__accu0__.append(frozenset(x));return py_iter(__accu0__)}());
df;
var choice=get_input();
export var exns=[];
var tck=interpolate.splrep(x,y,__kwargtrans__({k:2,s:0}));
var master=Tk();
0;
text_file.seek(os.path.getsize(filename)-len(os.linesep));
self.set_val(val);
print(new_list);
var b=a;
var __left0__=cv2.boundingRect(c);var x=__left0__[0];var y=__left0__[1];var w=__left0__[2];var h=__left0__[3];
django.setup();
lock.acquire();
fit_result[-1];
deleteself._cache[self._job];
my_array[my_array>255]=255;
cw.writerow(one_line_of_data);
thefile.seek(0,2);
im.set_data(data);
np.allclose(a.__getitem__([tuple([0,null,1]),tuple([0,null,1]),tuple([0,null,1]),1]),collapse_dims(a).__getitem__([tuple([0,null,1]),tuple([0,null,1]),tuple([2,4,1])]));
print(x,y);
ln-s/proc/self/fd/dev/fd;
y();
writer.writerow(data);
var __left0__=l.py_split();var x=__left0__[0];var y=__left0__[1];
list(range(5)).__getslice__(4,5,1);
export var outputPDF=PdfFileWriter();
false;
self.axes.set_ylabel(ylabel);
a.foo();
print(list(merge(times)));
inputfile.close();
time.sleep(2);
var newList=[];
np.dot(mX.T,logit(mX,vBeta)-vY);
var i=Image.open(StringIO(r.content));
var vect=TfidfVectorizer(__kwargtrans__({vocabulary:emoticons}));
export var cwd=os.getcwd();
self.draw_figure();
decorator;
app.Documents.Open(word_file);

ax.add_collection(lines);
print(list(spamreader));
image_without_exif.putdata(data);
workbook.Close();
zerostr(s);
start();
export var base_parser=argparse.ArgumentParser(__kwargtrans__({add_help:false}));
tuple([np.median(rdd.collect()),quantile(rdd,.5)]);
print(sys.argv);
zip_longest(...args,__kwargtrans__({fillvalue:fillvalue}));
var y=np.random.random(10);
s+=x;
Color(255,255,255);
anadict.py_sort();
var d2=datetime.datetime.strptime(d_string,fmt);
var c=a.astype(float).cumsum();
glLoadIdentity();
export var cout=np.empty_like(arr);
shutil.rmtree(dirname);
export var accmask=np.cumsum(mask,__kwargtrans__({out:mask,axis:1}));
f.close();
(np.diff(np.sign(data)[np.nonzero(data)])!=0).sum();
self.all_items.add(item);
dict(zip(I,I));
[pypi];
print(find_matches(im_haystack,im_needle));
tuple([df.shift(1).min(1)]);
var coords=np.stack(np.meshgrid(...args),__kwargtrans__({axis:-1}));
var __left0__=plt.subplots(1,1);var fig=__left0__[0];var ax=__left0__[1];
var dct=dict(function(){var __accu0__=[];for(var item of lst)__accu0__.append(splt(item));return py_iter(__accu0__)}());
test_login();
var module=sys.modules[thing.__module__];
loss(y,y_pred);
x/=numpy.linalg.norm(x,__kwargtrans__({axis:1})).__getitem__([tuple([0,null,1]),numpy.newaxis]);
next_link.__class__.__name__;
export var is_even=generate_is_even(reject_zero);
export var c_double_p=POINTER(c_double);
export var argmax=function __lambda__(py_keys,func){return max(map(function __lambda__(key){return tuple([func(...key),key])},py_keys))[1]};
i.save();
handle.write(sort_by);
menu.appendItem(fileItem);
o.first_item();
var env=Environment(__kwargtrans__({ENV:os.environ}));
app.mainloop();
print(x);
(function(){var __accu0__=[];for(var item of my_list)__accu0__.append(int(item==max_val));return __accu0__})();
output_logger.error(line);
var result=dict({});
dset.resize(row_count+chunk.shape[0],__kwargtrans__({axis:0}));
var __left0__=np.rollaxis(quaternion0,-1,0);var x0=__left0__[0];var y0=__left0__[1];export var z0=__left0__[2];export var w0=__left0__[3];
round_to_1(19);
py_new.append(num);
p.map_async(f,[slice(stop_f)]*M);
var coo=coo_matrix(tuple([data,tuple([row,col])]));
print(a.value);
tuple([1062,1062,1062,1062,1062,1125,1E3,1125]);
sess.run(train,__kwargtrans__({feed_dict:dict([[X,batch[0]],[y_,batch[1]]])}));
var a=b;
h.__getitem__([a,b,c]).append(value);
log.start(__kwargtrans__({loglevel:log.DEBUG}));
daemon.restart();
var out=optimize.leastsq(errfunc,pinit,__kwargtrans__({args:tuple([logx,logy]),full_output:1}));
var nk=min(function(){var __accu0__=[];for(var k of self)__accu0__.append(k);return py_iter(__accu0__)}(),__kwargtrans__({key:function __lambda__(k){return NearestDict.__dist(key,k)}}));
now();
var x=df[cols].ix[0]>0;
var d=date(year,1,1);
self.func;
plt.draw();
list(thedict.py_keys());
var age=int((date.today()-birth_date).days/days_in_year);
HttpResponseRedirect(reverse(contact_details,__kwargtrans__({args:tuple([new_contact.pk])})));
normalizedscores[u]=float(l)/maxscore;
new set([new set([inner2()])]);
os.close(fd);
var __left0__=plt.subplots(1);var fig=__left0__[0];var ax=__left0__[1];
var inds=np.ones(rng[-1],__kwargtrans__({dtype:np.int}));
var ax=fig.add_subplot(111);
a.__dict__;
var result=[];
[];
Second/Third/Fourth/Fifth;
var d=dict({});
restart();
var url=urljoin(response_url,url);
move(y,x);
myDict[key]=10;
var ax=fig.add_subplot(111);
py_typeof(cls.__name__);
print(X[0],Y[0],calc_slow(X[0],Y[0]));
export var solns7=solve(smin,smax,coef1,coef2);
print(checksum,hex(checksum),chr(checksum));
export var lemmas=set(chain.from_iterable(function(){var __accu0__=[];for(var word of synonyms)__accu0__.append(word.lemma_names());return __accu0__}()));
var files=function(){var __accu0__=[];for(var f of files)__accu0__.append(os.path.join(os.getcwd(),f));return __accu0__}();
printFoo();
print(mm.filled(np.nan));
sleep(random.randint(10,1E3)/1E3);

main.show();
NULL;
root.mainloop();
colors.remove(c);
cursor.execute(query,__kwargtrans__({station_id:id}));
var result=[];
print(line);
var opener=urllib.request.build_opener(handler);
total/(len(py_items)-1);
var b=np.zeros(tuple([nx,nz]));
q.join();
o.close();
var x=np.array([6,1,7,6,9,0,8,2,1,8]);
print(fmt.format(...container[0]));
var a=numpy.random.random(100);
var state=self.__dict__.copy();
numpy.vstack([test,test.__getslice__(0,null,-1)]);
htmlcolor(.1,1,.9);
self._filename=filename;
export var teams=collections.defaultdict(list);
[2];
var soup=BeautifulSoup(html);
export var rand_index=random.randint(0,len(graph[unmatched_woman])-1);
export var unmanhattan=manhattan.envelope.symmetric_difference(manhattan);
var root=Tkinter.Tk();
sum(function(){var __accu0__=[];for(var [i,j]of i.izip(s_1,s_2))__accu0__.append(i!=j);return py_iter(__accu0__)}());
var py_name=models.ForeignKey(School);
self.process.terminate();
var pool=list(Content.objects.all());
var columns=line.py_split(column_separator);
var autorestart=py_true;
export var autostart=py_true;
f.close();
var colors=[tuple([0,0,255]),tuple([0,255,0]),tuple([255,0,0])];
tableWidget.setRowCount(len(entries));
export var instances=formset.save(__kwargtrans__({commit:false}));
export var tentativeLength=len(json.dumps(row));
x.add_row(row);
print(e.args);
list(common_entries(da));
var end=datetime.datetime(2009,2,10,16,0);
export var ea=LinearRing(a);
var a=[somestuff];
cv.GetQuadrangleSubPix(image,output_image,map_matrix_cv);

b[i]+=x[i];
value&=~(1<<10);
var py_name=models.CharField(__kwargtrans__({max_length:100}));
export var src_geotrans=src.GetGeoTransform();
export var ptw=fR.tell();
mls.geom_type;
df.py_values[mask]=s[s.index.searchsorted(df.index)].repeat(mask.sum(1));
var fig=plt.figure();
deleteresult[-1];
output.append(s);
ax1.plot(np.array([1,5])*i,__kwargtrans__({label:i}));
libc.syscall(186);
sum(cents_list)==500;
nx.draw(G);
math.atan2(0,0)==math.atan2(-0,0);
py_typeof(y[0]);
self.counter+=db.run_in_transaction(_tx);
dates1[mask];
var labels=np.arange(1,num_labels+1);
therest.append(para);
unrooted_paths.append(path);
var y=np.ravel(B).reshape(tuple([9,1]));
d[k]+=int(v);
triang.vertices;
map(csv_writer.writerow,json_dict[entity]);
ax2.set_ylim(0,1500);
var fig=plt.figure();
var ax=fig.add_subplot(111);
ax.add_patch(p);
print(request.error_code);
1;
pool.join();
deletedict_del[k];
export var m_normalized=m/m.sum(__kwargtrans__({axis:1})).reshape(tuple([m.shape[0],1]));
df;
result.append(c);
var linspace_x=np.linspace(x_range[i],x_range[i],100);
result.append(position);
var predictions=results.predict(data.__getslice__(half,null,1));
export var profile_text=pattern.search(script.text).group(1);
cert.decode(der);
true;
var lookup=collections.defaultdict(list);
sys.stdout.write(frame.tostring());
self.__dict__=somearg.__dict__.copy();
os.makedirs(dir_name);
export var memory=defaultdict(list);
i+=1;
increment();
tuple([t[0],tuple([])])+t.__getslice__(2,null,1);
export var days_in_month=calendar.monthrange(start_date.year,start_date.month)[1];
func;
filename.__getslice__(len(root),null,1).lstrip(os.path.sep).lstrip(os.path.altsep);
aList[i]=0;
export var stars=set(random.sample(range(n+k-1),k));
date_before_leaps-timedelta(__kwargtrans__({seconds:leap(date_before_leaps)}));
C.__setitem__([x,y,z],C.__getitem__([x,y,z])+A.__getitem__([x1,y1,z1])*B.__getitem__([x2,y2,z2]));
a.__setslice__(0,null,null,function(){var __accu0__=[];for(var x of a)__accu0__.append(x+2);return __accu0__}());
print(tags);
takewhile(bool,function(){var __accu0__=[];for(var _ of count())__accu0__.append(list(islice(stream,size)));return py_iter(__accu0__)}());
f(add,10,7);
axis(2);
is_separately_linear(eq1,[a,d]);
var result=cv2.matchTemplate(image,template,method,__kwargtrans__({mask:transparent_mask}));
tornado.auth.TwitterMixin.get_authenticated_user(self);
print(username);
oba.py_name;
target.append(idx);
var data=clientsocket.recv(1024);
count+=1;
export var iB=0;
glLoadIdentity();
self._mod.__dict__[attrname];
var h1=hyst(y,-.5,.5);
var resp=json.loads(json_str);
export var rdr=csv.reader(source);
var temp=function(){var __accu0__=[];for(var [k,v]of list(rays_starters.py_items()))__accu0__.append([v[1],[k]+v]);return dict(__accu0__)}();
_mkdir(miniature);
df;
blockwise_times.append(best);
var D=L1[0]*L2[1]-L1[1]*L2[0];
PyEval_InitThreads();
f[0].data;
var student=form.save(__kwargtrans__({commit:false}));
var a=np.random.random_integers(__kwargtrans__({low:0,high:1<<10,size:2*n})).reshape(-1,2);
endfun;
export var posn=ax.get_position();
img.im_feeling_lucky();
vertices.py_clear();
self.ser.read();
os.killpg(pro.pid,signal.SIGTERM);
var hsv=cv2.cvtColor(frame,cv2.COLOR_BGR2HSV);
var y=Math.floor((x+1)/2);
self.master.bell();
root.mainloop();
py_values.append(float(value));
a.remove(b);
var people=Person.objects.all();
var m=X.mean(__kwargtrans__({axis:1,keepdims:true}));
var t=TestClass();
var poly=GeoSeries([Polygon([tuple([0,0]),tuple([0,2]),tuple([2,2]),tuple([2,0])])]);
var out=np.zeros(x.shape,__kwargtrans__({dtype:int}));
var data=[];
var match=re.search(regexp,str);
datarows.append(row);
export var body_content=message.body;
print(get_nesting_level());
heapq.heappop(heap);
new set([new set([docimage.image.url])]);
var xi=np.linspace(0,5,10);
12568;
df;
dict(ChainMap(...ds));
x[x<0]=new_value_for_neg;
unique_rows(a);
self.foo=5;
d_next+=datetime.timedelta(__kwargtrans__({weeks:1}));
export var indexes=np.arange(len(labels));
my_list.append(abe);
self.request_log.append(suffix);
var predicted=classifier.predict(X_test);
var result=[];
var open_cv_image=numpy.array(pil_image);
self.nesting=0;
var z=numpy.array([[.1,.1,1],[1,.1,.09],[.1,1,.2]]);
var dct=OrderedDict();
self.show_progress(test_progress_bar.value);
print(b[0]);
print(frames_to_timecode(26));
df;
var encoded=base64.b64encode(cipher.encrypt(msg_text));
grandFather.removeChild(father);
setattr(obj,k,v);
ipaddress.ip_address(ipv6);
var x=1;
export var id_counter=Counter(function(){var __accu0__=[];for(var dct of my_list)__accu0__.append(dct.py_get(k));return py_iter(__accu0__)}());
a.flat[idx];
self.datadex=function(){var __accu0__=[];for(var f of foo)__accu0__.append([f,42]);return dict(__accu0__)}();
self.parent.iadd_x(val);
f(__kwargtrans__(dict([[kw,true]])));
t.daemon=true;
decorator(method_or_name);
var br=mechanize.Browser();
name_son1.parents_backref.append(name_father1);
var timediff=datetime.datetime.now()-time_posted;
var s=p.stdout.readline();
destination_ou.com_object.MoveHere(str(user.as_string()),str(user.Name));
A.__getitem__([tuple([0,null,1]),second,third]).flatten();
time.sleep(x);
var y=numpy.random.rand(2);
var __left0__=intersections(a,b);var x=__left0__[0];var y=__left0__[1];
var err=random.randint(0,4);
print(x[0]);
var Dx=L1[2]*L2[1]-L1[1]*L2[2];
var result=ImageOps.colorize(gray,tuple([0,0,0,0]),color);
cax.get_yaxis().set_visible(false);
s.__getslice__(1,null,1)+s.__getslice__(0,1,1);
var xs=s.strip();
export var matplotlib_fig=plt.figure();
UTF-8;
var a180=a.__getitem__([,tuple([0,null,-1]),tuple([0,null,-1])]);
var c=pymongo.MongoClient();
var field1=models.TextField();
tuple([seq.__getslice__(0,i,1),seq.__getslice__(i,null,1)]);
audio.add_picture(image);
var root=Tk();
(function __lambda__(x){return func(rec_func(x))});
var ends=np.hstack(tuple([nonoverlapping,[-1]]));
var entries=nltk.corpus.cmudict.entries();
dict(__kwargtrans__({message:message}));
export var x_max=xs.max();
s1.is_valid();
foo.method(2);
a.__getslice__(5,7,1);
var s=np.cos(t);
y[1]=4;
export var formatted=function(){var __accu0__=[];for(var r of m)__accu0__.append(function(){var __accu1__=[];for(var v of r)__accu1__.append(format(v));return __accu1__}());return __accu0__}();
exch(k,k/2);
device.send_command(CMD_BLINK,100);
var message=messages.GetFirst();
var content=self._request.read();
var cb=plt.colorbar(p,__kwargtrans__({shrink:.5}));
export var tr2=np.fft.rfft(in2,n);
var result=self.output.getvalue();
var __left0__=tempfile.mkstemp();export var outfd=__left0__[0];export var outsock_path=__left0__[1];
var count=1;
var ax1=plt.figure(1).add_subplot(211);
var k=json.loads(j);
print(f.data);
export var binplace=np.digitize(avgs,bins);
export var masked_diff=np.ma.masked_array(diff,mask);
var x=np.linspace(0,np.pi,100);
config_parser.read(config_files);
var parser=argparse.ArgumentParser();
df;
process1.wait();
df;
print(check_for_triangle(tri1,lines));
p.join();
frame.f_locals.py_clear();
var form=MyForm;

self.log.SetBackgroundColour(self.bgColor);
(function(){var __accu0__=[];for(var x of links)__accu0__.append(Request(x,__kwargtrans__({callback:self.parse_link})));return __accu0__})();
print(line);
var result=[];
batch.delete();
groups[len(e)].append(e);
var address=models.ForeignKey(Address);
result.append(sorted_intervals.py_pop());
var meta=MetaData(__kwargtrans__({bind:engine}));
var data=Column(String);
y.__setitem__([tuple([0,null,1]),0],0);
Xcum.__setitem__([t-H,tuple([0,null,1])],np.sum(X.__getitem__([tuple([t-H,t,1]),tuple([0,null,1])]),__kwargtrans__({axis:0})));
var buffer=cStringIO.StringIO();
timerthread[0].cancel();
print(a,b,c);
export var x_min=xs.min();
var its=function(){var __accu0__=[];for(var l of lists)__accu0__.append(py_iter(l));return __accu0__}();
rlist.append(tuple(tuple([k,tuple(function(){var __accu0__=[];for(var gg of g)__accu0__.append(gg.__getslice__(1,null,1)[0][0]);return py_iter(__accu0__)}())])));
print(df);
print(data);
time.timezone;
signal.connect(self._checkSignal);
print(img_tf.get_shape().as_list());
self[key]=self.__class__();
var active=models.BooleanField(__kwargtrans__({py_default:true,editable:false}));
export var last_value=0;
C.__setitem__([tuple([0,null,1]),tuple([0,null,1]),0,0],a.__getitem__([tuple([0,-1,1]),tuple([0,-1,1])]));
m[i]=tuple([int(row[0]),int(row[1])]);
arry.append(-1);
var a=[1,0,0,2,0];
print(L);
s.connect(tuple([host,int(port)]));
(function(){var __accu0__=[];for(var i=start;i<argc.value;i++)__accu0__.append(argv[i]);return __accu0__})();
export var theclass=TheClass();
df2;
export var decoded_string=base64.b64decode(encoded_string);
response;
print(datetime.datetime.now());
x[0];
var L=[1,2];
self.dataobj=dataobj;
var __left0__=os.path.splitext(self.file.py_name);var py_name=__left0__[0];var extension=__left0__[1];
var aux=matriz.__getslice__(0,null,1);
var foo=df.groupby(__kwargtrans__({level:0})).mean();
var serializer_class=EstablecimientoSerializer;
-Evan;
fields;
export var displays=function(){var __accu0__=[];for(var i=0;i<wx.Display.GetCount();i++)__accu0__.append(wx.Display(i));return py_iter(__accu0__)}();
p.__getslice__(0,i,1)+[l[0]]+p.__getslice__(i,null,1);
var d=pd.DataFrame(randint(1,10,tuple([n_rows,8])));
print(repr(process_line(line).strip()));
var list2=np.zeros(len(lis));
i+=1;
attrnames.append(py_name);
var min_distance=min(min_distance,distance(p0,p1));
export var baseFile=os.path.basename(url);
SSL_CTX_set_options(ctx,flags);
var abc=myFunction;
response;
b.int;
var ii=np.where(a.__getitem__([tuple([0,null,1]),0])-b.reshape(-1,1)==0)[1];
export var addresses=session.query(address_table).filter(address_table.c.retired==1);
doctest.testmod();
(function(){var __accu0__=[];for(var person of self.__pList)if(person.match(__kwargtrans__(kwargs)))__accu0__.append(person);return py_iter(__accu0__)})();
df_l.append(pandas.DataFrame([val],__kwargtrans__({index:MI})));
export var dx_intersect=-dx/(z.__getslice__(1,null,1)-z.__getslice__(0,-1,1))*z.__getslice__(0,-1,1);
var sess=tf.Session();
export var df_stops=df_stops.reindex(full_index,__kwargtrans__({fill_value:0}));
Page.objects.public();
plt.show();
2*11-(2+10);
dna.lstrip(string.uppercase);
doc.close();
dict[1]=a[0];
settings.INSTALLED_APPS+=tuple([app_name]);
plt.yticks(list(range(nrows)),row_labels);
var B=np.zeros(A.size);
self.text.append(data);
export var cell_format=self.workbook.add_format(cell_format_dict);
py_next(next_lines);
export var wsgi_app=create_your_wsgi_app();
var img=Image.open(imlist[i]);
export var _kls=Klass();
var x=[x];
print(ax.get_xticks());
self.func=func;
f1.close();
item;
m.groups();
var arr=coo_matrix(tuple([data_f,tuple([row_f,col_f])]),df.shape,__kwargtrans__({dtype:np.float64}));
np.random.seed(1);
var cnxn=pyodbc.connect(databasez);
false;
a+b;
arr.append(inner);
export var coupler=function(){var __accu0__=[];for(var [idx,[x,y]]of coupled_idx)if(x!=y)__accu0__.append(idx);return py_iter(__accu0__)}();
var s2=pd.Series(new_items);
var result=np.reshape(result,tuple([chunk_length,channels]));
L[i]=result;
var result=MyTask.AsyncResult(task_id);
var date=datetime.strptime(date_string,fmt).py_replace(__kwargtrans__({tzinfo:tzinfo}));
round(2.500000001);
var pid=os.fork();
var coll=db.test_collection;
var df=pd.read_csv(filename[0]);
var keyPub=RSA.importKey(keyDER);
print(df);
q.put(function(){var __accu0__=[];for(var j=0;j<100;j++)__accu0__.append(list(range(200)));return __accu0__}());
createIndex(sourceIndex.row()+1,sourceIndex.column());
print(value);
var a=Foo();
var body=f.read();
print(args.foo);
var parser=argparse.ArgumentParser();
var pattern=np.ones(N,__kwargtrans__({dtype:int}));
time.sleep(4);
export var Nj=f.shape[1];
second_largest([10,7,10]);
export var x_mid=xs.__getslice__(0,-1,1)+np.diff(xs)/2;
t.join();
var my_dict=recursively_default_dict();
f.show();
var c=getattr(cls,c);
var imgray=cv2.cvtColor(aframe,cv2.COLOR_BGR2GRAY);
QAbstractTableModel.headerData(self,section,orientation,role);
export var buttonwin=tk.Frame(root,__kwargtrans__({width:75,height:500}));
print(stdout);
mem.Blit(0,0,size[0],size[1],screen,0,0);
var f=Foo();
var image=cv2.resize(image,dim,__kwargtrans__({interpolation:cv2.INTER_AREA}));
circle1.destroy();
trace.text=str(a_numpy_array);
f.close();
self.a.b.c=10;
self.lda[self.tfidf[bow]];
[0,0,1];
0<8&&8<-9;
var myDict=defaultdict(int);
test_printFoo();
Y.__setitem__([,2],np.clip(np.abs(X)/absmax,0,1));
b[-1]=b[0]+b[1];
now-then>timedelta(__kwargtrans__({days:1}));
plt.scatter(x,y,__kwargtrans__({c:z}));
m.drawcountries();
s.getvalue();
var py_keys=function(){var __accu0__=[];for(var i of py_keys)__accu0__.append(i.strip());return __accu0__}();
result.extend(function(){var __accu0__=[];for(var v of vals)__accu0__.append(v*v);return py_iter(__accu0__)}());
p.join();
g();
self.z=z;
var Z2=np.abs(np.cos(2*Math.pow(Y,2)+Math.pow(X,2)));
remove_common(x,y);
1-1;
var last=MyModel.objects.count()-1;
var sigma=np.matrix([[20,10,10],[10,25,1],[10,1,50]]);
var ax=fg.add_subplot(1,1,1);
scores.append(subcheckio(nstones,left,rite+stones[0]));
plt.title(date);
export var ct=ContentType.objects.get_for_model(GRmodel);
Image.open(strio);
var __except0__=ndb.Return(true);__except0__.__cause__=null;throw __except0__;
df;
(function(){var __accu0__=[];for(var letter of letters)__accu0__.append(tuple([letter,matches.count(letter)]));return __accu0__})();
dill.dumps(f);
self.rect=Rectangle();
parser.print_help();
f(2,range(5));
pprint(get_info(soup.li));
self._rooms.py_clear();
var __left0__=np.ogrid.__getitem__([tuple([-10,10,complex(0,20)]),tuple([-10,10,complex(0,20)]),tuple([-10,10,complex(0,20)])]);var x=__left0__[0];var y=__left0__[1];var z=__left0__[2];
var a=[];
self.value=value;
1-10;
new set([new set([form.content])]);
new set([new set([form.as_p])]);
var a=[];
linecache.clearcache();
-betaln(1+n-k,1+k)-np.log(n+1);
var matches=tokens.__getslice__(1,null,2);
a_label.pack();
print_tree(tree);
self.response=app.py_get(...args,__kwargtrans__(kw));
print(py_typeof(tuple([1])));
print(s.strip());
var p=Popen(shlex.py_split(job),__kwargtrans__({stdout:PIPE}));
self.wordList=list(wordList);
print(f.read());
(function(){var __accu0__=[];for(var x of l)__accu0__.append(x+tuple([z.py_get(x[0])]));return __accu0__})();
export var y_mean=np.mean(y,__kwargtrans__({axis:1,keepdims:true}));
foo(A(),B());
var list_size_2=[];
p.map(f,itertools.chain(function(){var __accu0__=[];for(var x of females)__accu0__.append(tuple([0,x]));return py_iter(__accu0__)}(),function(){var __accu0__=[];for(var x of males)__accu0__.append(tuple([1,x]));return py_iter(__accu0__)}()));
formfield.queryset=Cars.objects.filter(__kwargtrans__({owner:person}));
var b=a.copy();
np.count_nonzero(np.eye(4));
table.style=style;
classifier.predict(datum);
prodmap.__setslice__(0,null,null,np.memmap.dot(xmap,ymap));
plt.plot(a);
Qt/QtGui/__init__.py;
df;
foo().wrong;
interpreter.process_page(page);
vbox.addWidget(linetext);
x-x.mean(axis);
var mask=np.ones(a.size,__kwargtrans__({dtype:bool}));
var c=np.array(function(){var __accu0__=[];for(var [i,j]of zip(a,b))__accu0__.append(np.linspace(i,j,12));return __accu0__}());
print_ephemeris_for_month(year,month,bodies);
var row=array([0,0,1,2,2,2]);
d.rectangle([tuple([80,0]),tuple([150,20])],__kwargtrans__({fill:tuple([220,0,0])}));
true;
logger.addHandler(gm);
var x=np.sin(angle);
df;
w.setEditable(true);
var app=wx.App(false);
soup.contents[0].py_name;
var result=func(...args);
print(bar.a);
form;
var mynums=function(){var __accu0__=[];for(var i of s.py_split())__accu0__.append(int(i));return __accu0__}();
input_with_timeout(5);
var q=Comment.query.filter(any_(11,Comment.path));
sample_func();
self.map.key;
z1.namelist();
r<-raster(mat,__kwargtrans__({xmn:0,xmx:n,ymn:0,ymx:m}));
print(n);

shuffle(x);
var M=max(function(){var __accu0__=[];for(var x of list(foo.py_values()))__accu0__.append(max(x));return py_iter(__accu0__)}())+1;
m.drawcoastlines();

print(item);
generate([list(range(1,11)),list(range(10,21))],100);
var my_dictionary=json.loads(args.my_dict);
paths[T];
self.assertTrue(user.username==iunicode(testuser.upper()));
py_iter(x);
datetime.datetime.utcfromtimestamp(u);
new set([0,0,0,0,0,0,0]);
b[-2]+=[10];
inverted_dict.add(actor);
self.store.save();
var data=urllib.parse.urlencode(forms,__kwargtrans__({doseq:true}));
print(df);
var __left0__=np.meshgrid(np.linspace(-7,7,500),np.linspace(-7,7,500));var xx=__left0__[0];var yy=__left0__[1];
print(np.asarray(testdataset).shape);
export var DOT11_CIPHER_ALGO_WEP104=5;
pylab.plot(tst_xdata,tst_ydata);
export var filedata=imgstr.read();
export var rhs=dict(function(){var __accu0__=[];for(var D of rhs)__accu0__.append(tuple([D[k],py_pop(D,k)]));return __accu0__}());
var df=df.convert_objects(__kwargtrans__({convert_numeric:true}));
var out=out.reset_index();
process_b.start();
print(file.character_count());
var row=dict(function(){var __accu0__=[];for(var [py_name,val]of row.py_items())__accu0__.append(tuple([name_map[py_name],val]));return py_iter(__accu0__)}());
bytes===str;
var c=BinominalCoefficient(2*n,n);
var tags=django.forms.CharField(__kwargtrans__({required:true}));
session.add(obj1);

print(A.shape);
var sock=socket(AF_INET,SOCK_STREAM);
s.close();
lock.release();
os._exit(0);
parser.print_help();
df;
var indices=np.nonzero(X);
var cursor=self.conn.cursor();
var my_list=[];
f.write(data);
gmpy2.isqrt(Math.pow(Math.pow(10,100)+1,2)-1);
d[key].append(word);
holes.append(tuple([int((x1+x2)/2),int((y1+y2)/2)]));
self._observers=[];
var b=numpy.array(function(){var __accu0__=[];for(var x of a)__accu0__.append(conv[x]);return __accu0__}(),__kwargtrans__({dtype:numpy.uint8}));
self._insert(bisect.bisect_left(self,value),value);
tree.printTree();
var m=numpy.swapaxes(m,2,axis);
exec_globals.py_update(frame.f_globals);
PyObject_HEAD_INIT(NULL);
var created=models.DateTimeField(__kwargtrans__({auto_now_add:true}));
var x=[65]*9999999;
var py_name=traceback.tb_frame.f_code.co_name;
(function(){var __accu0__=[];for(var [py_name,grp]of age)__accu0__.append(list(permutations(grp.index)));return __accu0__})();
self.RUNNING=JOBSTATE_RUNNING;
self.FINISHED=JOBSTATE_FINISHED;
export var hessian=np.empty(tuple([x.ndim,x.ndim])+x.shape,__kwargtrans__({dtype:x.dtype}));
proc.wait();
export var others=function(){var __accu0__=[];for(var n of G.neighbors(tuple([1,1])))if(n!=neighb)__accu0__.append(n);return __accu0__}();
file.seek(position,0);
Py_XDECREF(pFunc);
self.test_panel.SetSizer(self.panel_sizer);
var x=kbfunc();
var reader=csv.reader(csvfile,dialect);
export var new_time=newdt.time();
export var zedges=np.linspace(-10,10,10);
m.drawstates();
var utc_date=date(2008,1,1);
test();
instance.is_initialized=true;
i+=1;
var ax=plt.subplot(111);
close(father2child_pipefd[1]);
export var line_new=word[0].rjust(10)+word[1].rjust(10)+word[2].rjust(10);
triplets[iT].append(listB[iB+1]);
var pool=multiprocessing.pool(args);
var __left0__=plt.subplots(__kwargtrans__({figsize:tuple([7,7])}));var f=__left0__[0];var ax=__left0__[1];
list.append(calc);
var s=pd.Series(test);
var dates=function(){var __accu0__=[];for(var i=0;i<value;i++)__accu0__.append(nextdate(i));return __accu0__}();
var x=[];
var Z=tf.pow(Z,2);
stdout.write(beeString);
(function(){var __accu0__=[];for(var x of seqs[0])__accu0__.append([x]);return __accu0__})();
var offset=py_values[0][1]-datetime.fromtimestamp(py_values[0][0]*factor);
exec(pyCode,global_namespace,lobaca_namespace);
var x=np.arange(0,10);
m_list;
self.bind(__kwargtrans__({a:self.set_c}));
var sizes=np.concatenate(tuple([[0],np.cumsum(sizes)]));
export var solns=sympy.solve(sym_df);
var x=np.linspace(0,50,100);
export var level=operator.itemgetter(1);
i<len(self._list)&&self._list[i][0]==k;
proxy.ProxyRequest.process(self);
cache[args];
var c=np.random.randint(m,__kwargtrans__({size:k}));
var num=int(line);
p.start();
var __except0__=StopIteration();__except0__.__cause__=null;throw __except0__;
self.map=dict({});
tuple([code_obj.co_stacksize,code_obj.co_flags,code_obj.co_code]);
plt.figure(__kwargtrans__({dpi:dpi}));
print(sub_k_list(a,k));
df_dict[col_index[j]].append(cell.value);
var sorted_dict=SortedDict(__kwargtrans__(unsorted_dict));
isinstance(Ham1(),Ham2);
var results=Result.objects.all();

L.append(a);
self.rtype=rtype;
INSTALLED_APPS+=tuple([]);
n-=1;
CONVERSION_DICT[source](temp);
s.__getslice__(start,end,1);
tuple([points_unique.__getitem__([tuple([0,null,1]),0]),points_unique.__getitem__([tuple([0,null,1]),1])]);
ax.set_xlim(xmin,xmax);
fhandle.seek(0);
print(n);
print(k,mydict[k]);
print(a.__getitem__([2,1]));
var left=a.__getslice__(max(0,index-num_neighbor),index,1);
0-0;
sorted(function(){var __accu0__=[];for(var x of obj)__accu0__.append(ordered(x));return py_iter(__accu0__)}());
export var X_train_pca=estimator.fit_transform(X_train);
overlap(0,50,0,50);
new_stepListA.extend([pathList[n][1],pathList[n][2]]);
export var quote=m.group(1);
export var pub=Publication.objects.all()[random.randint(1,2)];
print(L);
var y=butter_bandpass_filter(x,lowcut,highcut,fs,__kwargtrans__({order:6}));
logger_1.addHandler(hdlr_1);
var b=(a.__getitem__([,np.newaxis])>np.arange(n)).astype(int);
processor.start();
res.append(arr);
readline.set_pre_input_hook(rl_autoindent);
export var transposes=function(){var __accu0__=[];for(var [a,b]of splits)if(len(b)>1)__accu0__.append(a+b[1]+b[0]+b.__getslice__(2,null,1));return __accu0__}();
conn.set_debuglevel(false);
var body=json.loads(request.content.read());
max_depth.py_update(dict([[i,find_depth(dep,MyDict[i])]]));
matplotlib.rcsetup.validate_backend(py_name);
main(...sys.argv.__getslice__(1,null,1));
export var memview=memoryview(buffer);
var frame=inspect.currentframe();
mutex.acquire();
sys.exit(1);
[2,2,1];
export var yTrain=np.array([[0],[1],[1],[0]]);
export var cbar1=fig.colorbar(im1,__kwargtrans__({cax:cax1}));
var result=[];
var y=np.array(function(){var __accu0__=[];for(var i of data)__accu0__.append(int(i[0]));return __accu0__}());
f+f;
get_all_object_keys(bucket,prefix,last_key,py_keys);
var arr=numpy.array(list(itertools.zip_longest(...lst,__kwargtrans__({fillvalue:numpy.nan}))));
var now=datetime.datetime.now();
ts2[0]=99;
export var area_dict=dict(zip(lakes.area,lakes.count));
export var form_args=dict(__kwargtrans__({username:dict(__kwargtrans__({validators:[no_root_allowed]}))}));
plt.xticks(indexes+width*.5,labels);
export var genedata=OneOrMore(genebit).parseString(fastasrc);
tuple([parts_dict,list_of_parts]);

os.getcwd();
self.assertEqual(handler.request.recv.call_args[0],1024);
var result=defaultdict(list);
export var cost=tf.reduce_mean(losses);
self._locals;
bodylist.append([edge[0],edge[1]]);
var foo=models.ForeignKey(Foo);
self.sum=0;
print(string_set(string_list));
result.py_get();
print(x,y,z);
cls._instances.append(instance);
tuple([filterfalse(pred,t1),list(filter(pred,t2))]);

self.table.setHorizontalHeader(HeaderView(self.table));
B.__getitem__([0,0]);
self._format(object.foo,stream,indent,allowance+1,context,level);
self.adjacencyList=[];
Repeat.count+=1;
vbox1.addWidget(self.button);
np.hstack(tuple([vector1.__getitem__([tuple([0,null,1]),np.newaxis]),matrix2]));
self.fp.write(zinfo.FileHeader());
writer.writerow(payload);
f(__kwargtrans__(args));
deletemylist;
f.close();
root.withdraw();
ax.set_xlim(x_min,x_max);
cast(v.vendorName,c_char_p).value[7];
loop.run_until_complete(asyncio.wait(tasks));
fig.subplots_adjust(__kwargtrans__({hspace:0}));
print(df);
g.write(new_entry);
export var master_indices=dict(function(){var __accu0__=[];for(var [i,r]of enumerate(csv.reader(master)))__accu0__.append(tuple([r[1],i]));return py_iter(__accu0__)}());
var indptr=np.zeros(tuple([2]),__kwargtrans__({dtype:np.intp}));
print(line);
var serializer_class=UserSerializer;
self.assertEqual(12*12,144);
var x=np.arange(0,n*len(A),n);
var body=response.read();
export var summary=conn.get_account_summary();
w;
t.seek(0);
m[0][0]*m[1][1]-m[0][1]*m[1][0];
security.insert(usernametoken);
var byweekday=tuple([tuple([TU,WE])]);
self.py_name.lower();
var chunk=f.read();
var __left0__=tuple([L[0],L[-1]]);var start=__left0__[0];var end=__left0__[1];
var lines=text_file.readline();
var t=py_typeof(x);
fn(...args,__kwargtrans__(kwargs));
var pool=multiprocessing.Pool(__kwargtrans__({processes:pool_size,maxtasksperchild:4}));
out[mask]=np.concatenate(L).ravel();
heapq.nlargest(2,x);
print(repr(m_float));
print(isPower(1,1));
greet_self();
export var revbin=bin_n.__getslice__(0,null,-1);
export var rawImage=f.read();

DistutilsInstall.run(self);
ax.set_ylim(ymin,ymax);
var d1=pd.concat([df.loc[[1]].rename(__kwargtrans__({index:dict([[1,0]])})),df]);
self.size-=1;
var l=threading.Lock();
np.count_nonzero(y==2);
var x=np.random.rand(50);
[4,4];
best[n][1];
bk.show(p);
var __left0__=np.indices(shape);export var Xi=__left0__[0];export var Yj=__left0__[1];
print(c.Pear);
print(c.Fish);
self.canvas.move(oid,dx,dy);
cPickle.dump(root.config(),f,-1);
f2();
var c=np.dstack([r,g,b]);
var r1=Range(__kwargtrans__({start:date(2016,1,1),end:date(2016,2,5)}));
cr.fill_preserve();
var count=0;
var __left0__=tuple([A[j],A[i]]);A[i]=__left0__[0];A[j]=__left0__[1];
var y=np.array([2,4,6]);
self.py_popitem();
var merged=merge(string1.lower(),string2.lower());
var y=np.sin(x)+np.random.random(100)*.2;
tuple([[0,1,0]]);
Test().__init__;
export var COV=np.divide(C,V+1E-119);
dec;
np.linalg.matrix_rank(b);
export var delimiter=firstline[1][-1];
GPIO.setup(7,GPIO.IN,__kwargtrans__({pull_up_down:GPIO.PUD_DOWN}));
var dic=dict(function(){var __accu0__=[];for(var x of lis)__accu0__.append(tuple([x,0]));return py_iter(__accu0__)}());
df;
var df_out=pivoted.cumsum()+(pivoted==-1);
print(res);
var z=eval(y);
var df=pd.read_json(json.dumps(dictionary_example)).T;
t.daemon=true;
var fig=plt.figure();
shutil.rmtree(tempdir);
export var close_button=gtk.Button();
var array=np.tile(np.arange(1,4),tuple([N,1]));
var f2=function __lambda__(x){return np.dot(x,P)-760};
all(function(){var __accu0__=[];for(var i=0;i<19;i++)__accu0__.append(i>10);return py_iter(__accu0__)}());
pylab.grid(true);
var res=defaultdict(function __lambda__(){return defaultdict(function __lambda__(){return defaultdict(list)})});
self.py_name=py_name;
self._buf+=py_next(self._file).strip();
self.qux();
print(response);
float(n)/1<<n.bit_length()-1;
column.append(row[key]);
((days*24+hours)*60+minutes)*60+seconds;
var app=wx.App();
all_rosters.append(roster.__getslice__(0,null,1));
var pool=multiprocessing.Pool(__kwargtrans__({processes:numthreads}));
HttpResponse(data,__kwargtrans__(response_kwargs));
self._dict[key];
plt.plot(a);
new_string+=char;
print(xquery.execute());
flush();
p.close();
f;
print(min(matches,__kwargtrans__({key:len})));
var filtered=function(){var __accu0__=[];for(var i of full)if(!regex.search(i))__accu0__.append(i);return __accu0__}();
var xi=np.linspace(0,2,10);
var timestamp=calendar.timegm(utc_dt.timetuple());
output[contig]+=1;
value;
var loop=asyncio.get_event_loop();
var parser=etree.XMLTreeBuilder();
session.flush();
sess.run(training_op,__kwargtrans__({feed_dict:dict([[X,X_batch],[y,y_batch]])}));
__all__[k]=MyDict(v);
var country=models.CharField(__kwargtrans__({max_length:100}));
gtags-f/tmp/list;
self.assertEqual(user.username,testuser);
strs.__getslice__(ind,ind1,1);
export var pyobj=json_pkloads(json_str);
min(r1.end-r2.start,r2.end-r1.start).days+1;
np.maximum.at(diam,data.__getitem__([tuple([0,null,1]),0]),dist_to_center);
show_all.set(true);
Node.__init__(self,identifier);
self.parent().setCursor(Qt.PointingHandCursor);
var a=randint(0,10);
export var bcw=csv.writer(bc,csv.excel,b.encoding);
var splitted=my_string.py_split();
var __left0__=zip(...data);var samples=__left0__[0];var labels=__left0__[1];
var img=misc.imread(fp);
export var Blue=RGBint&255;
var new_dict=dict({});
self.detach_webview();
var app=wx.App(false);
export var infilename=os.path.join(folder,filename);
abclass;
Nfeval+=1;
export var shared_row=theano.shared(numpy.zeros(tuple([1,10])),__kwargtrans__({broadcastable:tuple([true,false])}));
User.create_table();
var theta=np.arctan2(y,x);
export var _members_=dict({});
s-set([4,5]);
var s=pd.Series(t2.index.get_level_values(1),t2.index.get_level_values(0));
var driver=webdriver.PhantomJS();
var __left0__=tuple([s.index.get_level_values(0),s.index.get_level_values(1)]);var idx=__left0__[0];var val=__left0__[1];
py_values[1]=py_values.__getslice__(0,null,1);
self._assert(cap);
old_a.f();
var a=numpy.zeros(10,__kwargtrans__({dtype:str}));
x.subs(ordereddict.OrderedDict([tuple([x,y]),tuple([y,z])]));
var y=x.swapaxes(-1,-2);
var command=os.path.abspath(command);
ax.contourf(np.random.rand(10,10),5,__kwargtrans__({cmap:plt.cm.Oranges}));
print(add2(10));
partition(X,my_relation);
var f=fileinput.input(filename,__kwargtrans__({inplace:1}));
export var sorted_keys=sorted(function(){var __accu0__=[];for(var x of d)__accu0__.append(x);return __accu0__}());
nlines+=1;
dis.dis(foo);
show();
var ax=fig.gca();
print(queue1.py_get());
len(self.inner)<len(other.inner);
self.mainLayout.setMargin(10);
var ax=fig.add_subplot(111);
var G=nx.DiGraph();
var comp=wmi.WMI();
print(np.ma.compressed(m));
var object_id=models.PositiveIntegerField();
os.dup2(0,1);
(function(){var __accu0__=[];for(var i=0;i<20;i++)__accu0__.append(unrank(list(range(5)),2,i));return __accu0__})();
var x_train=np.array(function(){var __accu0__=[];for(var i of data)__accu0__.append(i.__getslice__(1,null,1));return __accu0__}());
var diff_idx=np.where(np.any(np.diff(sorted_arr,__kwargtrans__({axis:0})),1))[0];
result.append(item);
county_colors.append(colors[idx]);
time.clock();
var myList=list(f);
process.start();
df;
export var csv_out=csv.writer(out);
var c=wmi.WMI();
xml.sax.saxutils;
var year=sorted(set(map(function __lambda__(x){return x[0]},file_contents_values)));
var pool=mp.Pool();
var x=np.random.randn(N);
plt.show();
exit(a);

print(new_d);
var socket=context.socket(zmq.PUB);
true;
figure(1);
pool.close();
export var measure=function __lambda__(x){return-x.count_ops()};
lis.append(function __lambda__(){return 1});
var e2=tk.Entry(self);
export var uf=np.frompyfunc(function __lambda__(a,b){return a+(b-a)*.5},2,1);
f.close();
platform.platform();
var x=np.array([0,1,2]);
gtk.main_iteration(false);
ws.set_panes_frozen(true);
sleep(10);
Thread(__kwargtrans__({target:begin})).start();
var py_values=np.random.uniform(__kwargtrans__({low:0,high:1,size:ages.shape}));
print(sub.recv(zmq.NOBLOCK));
var d=function(){var __accu0__=[];for(var i of a)__accu0__.append([tuple(i),a.count(i)]);return dict(__accu0__)}();
export var tuple_dict=dict({});
var opener=urllib.request.build_opener(urllib.request.HTTPCookieProcessor(cj),authinfo);
(nonzero_array.__getslice__(0,-1,1)*nonzero_array.__getslice__(1,null,1)<0).sum();
print(parser.format_help());
tar.addfile(info,data);
sys.exit(1);

self.numbers[-i-1]=num==9?0:num+1;
export var loss=tf.reduce_sum(tf.abs(tf.sub(x,y_)));
self.c=cv2.VideoCapture(0);
res_ols.params;
var B=np.random.randint(k,__kwargtrans__({size:tuple([n,m])}));
daemon_kenny.start();
var vals=np.empty(len(s));
print(lst);
var password=models.CharField(__kwargtrans__({max_length:100}));
var output=subprocess.check_output(command_line);
xlmodule.CodeModule.AddFromString(strcode.strip());
print(len(chuck));
plt.title(title,__kwargtrans__({figure:fig}));
print(tuple([first,second,third]));
self.Artwork=Label(self.frame,__kwargtrans__({image:self.photo}));
notify_another_process();
print(s);
print(a[167]);
var date_of_appointment=models.DateField();
Point(other.x,other.y);
plt.savefig(outputname,__kwargtrans__({dpi:80}));
print(screen_name(api.lookup_users(i)));
var sizer=wx.BoxSizer(wx.VERTICAL);
print(content);
export var XtX=np.dot(np.transpose(X),X);
wavfile.write(WAVE_OUTPUT_FILENAME,RATE,result);
export var tgrid=np.linspace(times.min(),times.max(),100);
var maxm=np.array([]);
var minm=np.array([]);
print(Expression(4));
setattr(self,attr,val);
A.py_sort();
var draw=ImageDraw.Draw(img);
var a=np.arange(10);
self.flush();
var worksheet=workbook.add_worksheet();
numbers.append(my_alphabet.index(letter));
[4,8,7];
var my_dict=dict({});
var data=EXIF.process_file(f);
__import__(sys.argv[1]);
thread.join();
var line_list=list(self.readlines());
export var hy=T.hessian(y,[A,b,c]);
var id=db.Column(INTEGER(__kwargtrans__({unsigned:true})),__kwargtrans__({primary_key:true}));
walk(path);

var app=Flask(__name__);
train_op.run();
urls.append(page.url());
export var match_ds=gdal.Open(match_filename,gdalconst.GA_ReadOnly);
export var dfnew=pd.concat([dfnew,dfnondup],__kwargtrans__({axis:0}));
var opener=urllib.request.build_opener(auth_handler);
var __left0__=mpl_plt.subplots(2,1);var fig=__left0__[0];export var axes_1=__left0__[1][0];export var axes_2=__left0__[1][1];
var b=date(2011,11,17);
stdout_lines.append(line);
question.id=str(question.key().id());
var A=np.zeros(tuple([5,100]));
stack[-1].append(item);
true;
self.timer=QtCore.QTimer();
var L=list(range(-10,10));
export var AI2=0;
var colors=np.outer(.5+norm(shade)*.5,color);

var d=collections.defaultdict(int);
var pattern=re.compile(regex_txt,re.IGNORECASE);
var window=screen.get_active_window();
var queryset=Experiment.objects.all();
doit();
[0,0,2,0];
export var crypt_object=AES.py_new(__kwargtrans__({key:key,mode:AES.MODE_CBC,IV:iv}));
var worker=Worker();
var lines=function(){var __accu0__=[];for(var span of spans)__accu0__.append(span.get_text());return __accu0__}();
N.__setitem__([row_idxs[r],c],0);
logsum+=log(x);
var data=f1.read(chunk);
w.join();
fh.setFormatter(formatter);
stream.truncate();
self._num_expectations=0;
GObject.threads_init();
var now=datetime.now();
print(df1);
shlex.__init__(self,...args,__kwargtrans__(kwargs));
var wb=excel.Workbooks.Open(doc);
export var fl=fcntl.fcntl(fd,fcntl.F_GETFL);
print(sum(function(){var __accu0__=[];for(var a of fibonacci_iter(4E6))if(!(a&1))__accu0__.append(a);return py_iter(__accu0__)}()));
thirdpartymodule_b.dosomething();
h.py_pop();
var request=scrapy.Request(__kwargtrans__({url:url,callback:callback}));
var response=request.execute();
export var todos=ToDo.objects.filter(__kwargtrans__({user:request.user}));
export var paramstr=urllib.parse.urlencode(params);
transaction.commit();
serial.flushInput();
p.send(message);
var __left0__=sorted([random.random(),random.random()]);export var by1=__left0__[0];export var by2=__left0__[1];
var foo=Foo();
var __left0__=plt.subplots(__kwargtrans__({nrows:2}));var fig=__left0__[0];var axes=__left0__[1];
true;
self.test(...self.arg);
print(encoded);
export var __cache=dict({});
var arr_1=np.array([false,false,true,true]);
self.scroll.setWidgetResizable(true);
sb.palplot(sb.color_palette());
var pool=Pool(4);
var pattern=re.compile(format_to_re(layout));
var flt=lrg[lrg==0];
parseHTML(curRes);
var cheese=make_cheese(Goat().milk());
bool(regex.match(s));
warnings.show_warning(message,category,filename,lineno,file,line);
f.readline();
figure(1);
541;
cov.__setitem__([i,j],calculate_value(i,j));
var sizer=wx.BoxSizer(wx.VERTICAL);
false;
dict.__getitem__(self,x);
var y0=y_indices.astype(np.integer);
pypreprocessor.parse();
run(__kwargtrans__({app:myapp}));
self.br;
var b=[4,5,6,7];
print(choice);
var ax=fig.add_subplot(2,2,i);
print(df.query(qry));
time.sleep(24*60*60);
var words=x.py_split();
q.put(item);
os.chdir(destination);
self.stack.py_pop();
wrapper_object.open();
anotherfile.isatty();
export var ppxml1=etree.tostring(xml1,__kwargtrans__({pretty_print:true}));
var gs=gridspec.GridSpec(4,4);
self.__class__.count+=1;
var d2=function(){var __accu0__=[];for(var x=1;x<6;x++)__accu0__.append([x,x]);return dict(__accu0__)}();
export var leadingzerocounts=[0]*m;
print(df1);
var root=tk.Tk();
print(r.cookies);
export var byte_s=f.read(1);
self.date=self.evaluation_id.date;
end.time();
nextlevel.append(n.right);
export var restorer=tf.train.Saver([w]);
bokeh.io.show(grid);
textview.modify_font(fontdesc);
do_it_lots();
var X=np.matrix([[0,0],[1,0],[0,1],[1,1]]);
do_generator_empty();
sys.exit(0);
n-=1;
var img=pygame.image.load(filepath);
abstrapz([-1,0,1]);
pylab.show();
var ts=time.time();
cummax(a);
plt.ion();
client.sendPreparedMessage(preparedMessage);
self.py_name;
handler.setFormatter(formatter);
cls.initStuff();
TextWidget.pack();
f();
your_plot.set_xticklabels(ticks);
store_to_request(request);
self.put(data);
builder.connect_signals(LoseFocusHandler());
network[x][y]=common;
export var stream_handler=logging.StreamHandler();
render_template(template,__kwargtrans__({mydict:mydict}));
self.A=np.asanyarray(A);
login(request,user);
list1+list2;
a>2;
df.idxmin(__kwargtrans__({axis:1}));
stackless.tasklet(b)();
var out=np.lib.stride_tricks.as_strided(x,__kwargtrans__({shape:shp,strides:tuple([M*n,n])})).ravel();
net.layers[1].blobs[0].diff.shape;
export var Pear=6;
var out=np.empty_like(y);
test_timing();
mpl.rcParams.py_update(pgf_with_pdflatex);
export var RGH=8;
list(partitions(s));
x*self.z;
var layout=QVBoxLayout(self);
print(result);
logfile.write(output);
libraries.__getslice__(0,10,1);
var status=models.CharField(__kwargtrans__({max_length:25}));
len(unequal_pos[0]);
np.save(f,a);
f(...args);
np.random.seed(8);
var a=list(range(10));
out.write(line);
bokeh.io.show(layout);
export var rsp=urllib.request.urlopen(req);
var b=b-1;
np.any(count>1);
connection.cursor();
print(x);
f(xv,yv);
var i=int(f);
c.append(map(sub,a[i],b[i]));
Pdb(def_colors).set_trace(sys._getframe().f_back);
var data=np.random.normal(mu,sigma,1E4);
self.U.__getitem__([tuple([0,null,1]),tuple([0,n,1])])*self.d.__getslice__(0,n,1);
print(keyword,x.strip().__getslice__(0,5,1));
py_next(i);
deleteyshape[axis];
mat1[1][i]=1;
Node.__init__(self,identifier);
print(lt_obj.get_text());
self.doSomething(Notification);
export var nlesser_items=heapq.nsmallest(n,py_items);
pygame.mixer.music.load(wav_path);
self.dict[self.first];
print(df.dtypes);
var x=function(){var __accu0__=[];for(var i=0;i<10;i++)__accu0__.append(i);return py_iter(__accu0__)}();
export var imgB=numpy.array(imgB);
var data=socket.gethostbyname_ex(d);
var T=tri.Triangulation(x,y);
export var lines_gen=islice(infile,N);
var ax1=plt.subplot(gs[1],__kwargtrans__({sharey:ax0}));
print(len(zero_crossings2));
max(function(){var __accu0__=[];for(var i of s)__accu0__.append(i.arity());return py_iter(__accu0__)}());
root.grid_columnconfigure(2,__kwargtrans__({weight:1}));
-Flask-Testing;
self.toolbar=self.CreateToolBar();
var __left0__=img_padded.size;var width=__left0__[0];var height=__left0__[1];
func1(gen1);
[function __lambda__(){return 2}][0]();
var line_count=0;
f.write(line);
replchars[i]=replchars[i].upper();
prod(list);
export var previous_day=read_date-datetime.timedelta(__kwargtrans__({days:1}));
self.__dict__[attr_name];
pp.show();

var addresses=function(){var __accu0__=[];for(var address of addresses)__accu0__.append(address.strip());return __accu0__}();
var A=Matrix([[5,6],[7,9]]);
export var lut2=lut.reshape(-1,4);
var attachment=msg.get_payload()[1];
http_server.listen(8888);
self.src.append([item]);
self.save_object(related_item);
export var PROG=os.path.basename(os.path.splitext("./P2JSnippets.py")[0]);
lines[-1]+=segment;
var soup=BeautifulSoup(response.body);
export var fullPathToFile=os.path.join(root,file);
var __except0__=IndexError();__except0__.__cause__=null;throw __except0__;
self.__ntrue;
ax.set_xlim(0,9);
cj;
lst.append(sp.Eq(i,j));
var app=Flask(__name__);
self.data[self.start+idx];
self.window.set_border_width(10);
export var book_ct=ContentType.objects.get_for_model(Book);
print(Foo.objects.in_a_number_order());
tkmc.set_timeout(timeoutSp);
var old_settings=termios.tcgetattr(fd);
a;
preallocate_file(fn,size);
201112;
py_iter(lookup.py_items());
var x=10*np.random.normal(mu,sigma,5E3);
print(merge(d1,d2));
show();
var x=np.arange(100).reshape(10,10);
print(b);
new set([new set([body])]);
var coords=nx.spring_layout(G);
lines.set_facecolors(cm.jet(np.random.rand(1)));
self.df.log(request,self.spider);
var result=[s+timedelta(__kwargtrans__({days:__mod__(calendar.FRIDAY-s.weekday(),7)}))];
var words=s.py_split();
var __left0__=myfunc();var a=__left0__[0];var b=__left0__[1];var c=__left0__[2];
self.layoutVertical.addWidget(self.canvas);
conn.sendmail(fromaddr,toaddrs,msg.format(txt));
atexit.register(exit_handler);
var b=a;
var __left0__=tuple([b,a]);var a=__left0__[0];var b=__left0__[1];
var rs=function(){var __accu0__=[];for(var url of urls)__accu0__.append(grequests.py_get(url,__kwargtrans__({hooks:dict(__kwargtrans__({args:print_url}))})));return __accu0__}();
var y=[0,0,0];
var __left0__=tuple([func,args]);self.func=__left0__[0];self.args=__left0__[1];
self.iterator;
export var xk=np.arange(7);
s.into_raw();
self.wfile.write(message);
l.py_sort(__kwargtrans__({key:alphanum_key}));
im.size;
lines.append(line.strip());
signal.signal(signal.SIGINT,signal.SIG_DFL);
href;
to_modify[index]=replacement;
export var blog_entry=get_cached(BlogEntry,__kwargtrans__({pk:4}));
ra.append(float(line.py_split()[0]));
false;
df.__getslice__(start,end,1);
vote.delete();
os.setuid(471);
dict(zip(p.__getslice__(0,100,1),p.__getslice__(100,null,1)));
random.sample(WeightedPopulation(population,weights),k);
df.index[-1]+pd.offsets.MonthEnd(0);
self.restart_celery();
foo.error;
re.sub(r,replacer,string);
var result=dict();
export var x_key=keyfunc(x);
print(c);
var averages=function(){var __accu0__=[];for(var [k,v]of list(d.py_items()))__accu0__.append([k]+function(){var __accu1__=[];for(var x of zip(...v))__accu1__.append(sum(x)/len(v));return __accu1__}());return __accu0__}();
[1];
export var l_copy=function(){var __accu0__=[];for(var x of l)__accu0__.append(x);return __accu0__}();
self.worker.moveToThread(self.thread);
show();
var rv=self.next_chunk.__getslice__(0,n,1);
filesystem.GetFileAttributes(filepath).hidden;
var ind=np.indices(myarray.shape)[0];
self.axes.hold(false);
sum(function(){var __accu0__=[];for(var [ea,eb]of zip(ka,kb))__accu0__.append(Math.pow(ea-eb,2));return py_iter(__accu0__)}());
work.join();
total+=ampl*math.cos(cosarg*math.pi/180);
export var origin=tuple([0,0]);
var ff=function(){var __accu0__=[];for(var x=0;x<100;x++)__accu0__.append(functools.partial(function __lambda__(i){return i},x));return __accu0__}();
self._compare(other,__kwargtrans__({segment:-1}));
sign*=np.multiply.reduce(d/absd,__kwargtrans__({axis:1}));
c.py_update(set(v));
foo_noniterable(thing);
export var zero=numpy.zeros(10);
var points=np.hstack(tuple([p1,p2,a,b]));
DataFrame(self.model.predict(X));
var soup=BeautifulSoup(source_code);
b.burn(library,lighter);
results.append(option);
obj;
var soup=BeautifulSoup.BeautifulSoup(content);
f_old.seek(0);
var py_items=function(){var __accu0__=[];for(var i of py_items)__accu0__.append(i.strip());return __accu0__}();
var pool=multiprocessing.Pool(1);
max(function(){var __accu0__=[];for(var [v0,v1]of zip(py_values.__getslice__(0,-1,1),py_values.__getslice__(1,null,1)))__accu0__.append(v1-v0);return py_iter(__accu0__)}());
int(gmpy2.mpz(12));
Application().Run(MyWindow());
var data_dict=json.loads(data);
sys.exit(4);
copy_file(src,self.target_dir);
setattr(self,key,value);
plt.xticks(list(range(width)),alphabet.__getslice__(0,width,1));
f.seek(0);
var im=im.crop(tuple([left,top,right,bottom]));
n_samples+=int(self.smooth_idf);
dt+__mod__(datetime.min-dt,delta);
export var mymap=function(){var __accu0__=[];for(var m of mymap)if(m[0]>0&&m[1]>0)__accu0__.append(m);return __accu0__}();
export var RAWR=lR;
py_next(gen());

result.append(buff);
self.host=host;
print(repr(e));
[-2,0,-2,2,10,4];
loop.run_until_complete(example());
k.open();
export var myseq=tuple(sorted(function(){var __accu0__=[];for(var [k,v]of mydict.py_items())__accu0__.append(tuple([k])+v);return py_iter(__accu0__)}()));
var r1=conn.getresponse();
time.sleep(.1);
var n2=np.random.random(N);
self.username;
ax.bar(pos,vals,__kwargtrans__({width:width,label:cond,color:cm.Accent(float(i)/n)}));
match.index[0];
df.T;
can.save();
str(digit);
var output=[];
c+=1;
var __left0__=plt.subplots(1,1);var fig=__left0__[0];var ax=__left0__[1];
var old_settings=termios.tcgetattr(sys.stdin);
export var managed=false;
clipboard.SetText(data);
module1.Relay(GPIO);
export var max_step=100;
l+=1;
server.bind(tuple([host,port]));
dictionary[parts[0]]+=1;
dd[v].append(k);
argsdict[arg].append(val);
Base.metadata=metadata;
export var data_sum=data.sum();
print(len(allkitties));
show(p);
var N=int(sys.argv[1]);
zip(a,b);
self._ref2=ref2;
self.my_setting=my_setting;
Y.__init__(self);
var a=A();
matches.append([value,py_values[x]]);
layout.addWidget(button);
var dmin=len(trans[0]);
df;
sys.stdout.writelines(merge(...sorted_files,__kwargtrans__({key:second_column})));
process.poll();
[];
yaml.load(_);
fh.flush();
new set([NULL,NULL]);
YourObject.id.generation_time;
var session=sessionmaker(__kwargtrans__({bind:engine}))();
var __left0__=getimageinfo.getImageInfo(imgdata);export var image_type=__left0__[0];var width=__left0__[1];var height=__left0__[2];
self.tag=tag;
sleep(.1);
df.dot(s);
file1.write(toFile);
var o=Observable();
client_sock.close();
two_d[np.ix_(first,second)];
[1,1,1];
count+=1;
export var periods=dict(zip(times,labels));
export var path_file=os.path.join(path_file_dir,file);
var diag=np.arange(M.shape[1]);
[a,b];
i+=1;
tidx+pd.Timedelta(__kwargtrans__({days:15}));
timeit(function __lambda__(){return list(fulldict.py_keys())});
self.current-1;
var L=Linitial;
py_replace(l,1,7);
export var raw_values=function(){var __accu0__=[];for(var o of MyList)__accu0__.append(o.i);return __accu0__}();
os.remove(py_new);
m.add(k,dict1.py_get(k));
d1[1];
export var first_col=np.array([1,0,0,0]);
var parser=argparse.ArgumentParser();
self.py_keys.append(key);
X.toarray();
b.__setitem__([a.__getitem__([tuple([0,null,1]),0]),a.__getitem__([tuple([0,null,1]),1])],10);
var b=np.random.normal(0,1,tuple([N,M])).mean(__kwargtrans__({axis:1}));
export var xd=np.linspace(0,15,100);
print(sheet[0][0]);
df.value1=df.value1.round();
dis.dis(a);
export var procs=function(){var __accu0__=[];for(var _=0;_<10;_++)__accu0__.append(Process(__kwargtrans__({target:f,args:tuple([d])})));return __accu0__}();
fh.write(str(buf));
screen.blit(draw_me,backdrop);
var average=total/count;
sum;
fig.subplots_adjust(__kwargtrans__({hspace:0,wspace:0,top:.925,left:.1}));
pprint(d);
export var hog=cv2.HOGDescriptor();
export var dicc=parse_qs(request.query_string);
df;
tksupport.install(root);
sys.path.insert(0,mysite);
var hours=df_energy2.index.hour;
var img1=cv2.imread(fn1,0);
picklable.append(tuple([r,p,code]));
self.s_in.close();
print(t,expr.parseString(t).asList());
a.x;
var lists=sorted(function(){var __accu0__=[];for(var x of lists)__accu0__.append(sorted(x));return __accu0__}());
print(i);
export var wfloat=wally.astype(float);
h1&4294967295;
st.norm.interval(.95,__kwargtrans__({loc:np.mean(a),scale:st.sem(a)}));
var X=np.ones(tuple([n,2]));
export var my_second_egg=my_related_object.egg;
print(p.mass,p.position,p.velocity,p.force);
proc.start();
clf.fit(X.iloc.__getitem__([train_idx,tuple([0,null,1])]),y[train_idx]);
var groups=list(groups);
export var ca_two=str(sys.argv[2]);
print(self.bar);
export var df_ordered_multi_cols=pd.DataFrame(df_ori,__kwargtrans__({columns:multi_cols}));
var start_time=timeit.default_timer();
actcount+=1;
var d=function(){var __accu0__=[];for(var key of a.names)__accu0__.append([key,a.rx2(key)[0]]);return dict(__accu0__)}();
export var _srcfile=os.path.normcase(_srcfile);
python-i;
var output=p.communicate();
results.append(result);
p.communicate();

print(ET.fixtag(some_node.tag,NS_MAP));
var cookies=requests.utils.cookiejar_from_dict(pickle.load(f));

export var index_start=df.index[-1]+1;
var child=pexpect.spawn(ssh_cmd,__kwargtrans__({timeout:timeout}));
var id=Column(Integer,__kwargtrans__({primary_key:true}));
sparse+.228869672266;
var fig=plt.figure();
self.fed.append(d);
eventloop.run_forever();
Math.pow(f(x),2);
var a=function(){var __accu0__=[];for(var i=0;i<5;i++)__accu0__.append(function __lambda__(){return i});return __accu0__}();
str(self.value);
print(mat.A);
a+=b;
export var tok_gen=tokenize.generate_tokens(sys.stdin.readline);
my_mesh.BeginPolygon();
var process=sp.Popen(shlex.py_split(cmdline),__kwargtrans__({stdout:sp.PIPE,stderr:sp.PIPE}));
os.makedirs(dirmk);
var d=collections.defaultdict(dict);
outcsv.writerow(function(){var __accu0__=[];for(var x of cursor.description)__accu0__.append(x[0]);return py_iter(__accu0__)}());
cmd.append(command);
var axes=fig.add_axes([.1,.1,.8,.8]);
var clf=AdaBoostClassifier(__kwargtrans__({n_estimators:2}));
export var mymod=importlib.import_module(module);
ipython-noconfirm_exit;
export var dev2=os.stat(file2).st_dev;
loop.run_until_complete(main());
print(parser.print_help());
A2[mask]=0;
var res=urllib.request.urlopen(req);
export var _dict=simplejson.loads(json_data);
var a=[4,5,0,0,6,7,0,1,0,5];
var lines=f.readlines();
export var blob_info=blobstore.BlobInfo.py_get(resource);
var __left0__=tuple([seq[end-1],seq[start]]);seq[start]=__left0__[0];seq[end-1]=__left0__[1];
random.shuffle(sequence_containing_z_vals);
export var CALLBACK=CFUNCTYPE(c_int,c_void_p,POINTER(c_char),c_long);

var tree=chunker.parse(postoks);
get_color(.7);
var q=int(a/b);
open_file.close();
var content=f.read();
multiprocessing.Process.__init__(self);
py_keys.append(tuple([h,r]));
sys.getsizeof(dict({}));
print(pd.factorize(np.hstack(df.py_values)));
[babel.extractors];
var L=Linitial.__getslice__(0,null,1);
export var gridsize=(len(lines)-2)/2;
self.root=tk.Tk();
Py_Initialize();
my_view;
var __except0__=StopIteration;__except0__.__cause__=null;throw __except0__;
pylab.grid(true);
var frame=bytearray();
var line=plt.plot(list(range(10)));
np.random.seed(1);
self.errors=errors;
sys.path.insert(0,project_dir);

var z=(df!=0)*1;
bool(p);
a[0]=7;
[flake8];
print(s);
var request=urllib.request.Request(my_url,data);
var context=cairo.Context(surface);
(i&(1<<length-1)-1)<<1|i>>length-1;
var thedir=sys.argv[1];
print(x);

var d=defaultdict(int);
var data=function(){var __accu0__=[];for(var x of frame.py_values)__accu0__.append(tuple(x));return __accu0__}();
print(IOB_to_tree(sentence));
A.__init__(self);
y();
self.sock.setsockopt(socket.IPPROTO_TCP,socket.TCP_NODELAY,1);
export var get_class=function __lambda__(x){return __all__[x]};
len(self.data);
test_func();
request.response.headerlist.extend(headers);
cv2.putText(out,string,tuple([x,y+h]),0,1,tuple([0,255,0]));

ranges.py_pop(0);
var idx=c.index(tuple([1,4]));
var a=math.cos(theta/2);
var result=dict({});
var output=StringIO.StringIO();
tuple([1,0,1]);
var f=figure(__kwargtrans__({figsize:tuple([6.2,5.6])}));
ret.append(tuple([point[0],point[1]-2*(point[1]-BOTTOM_LEFT[1])]));
self.q=Queue(1);
draw.text(tuple([5,0]),title,__kwargtrans__({font:font,fill:tuple([0,0,0])}));
ax.set_yticks([]);
var cache=Cache();
db.run_in_transaction(_tx);
export var zipdata=result.read();
var fig=plt.figure();
drvs;
cv.WriteFrame(writer,frame);
(function __lambda__(x){return a*x+b});
base_close+=timedelta(__kwargtrans__({days:1}));
mouseclickdn(60,100);
var queue=collections.OrderedDict(function(){var __accu0__=[];for(var key of py_keys)__accu0__.append(tuple([key,queue[key]]));return py_iter(__accu0__)}());
__in__(py_typeof(xml.__loader__),CUSTOM_LOADERS);
export var unqID_mask=np.append(true,np.any(np.diff(sorted_coo,__kwargtrans__({axis:0})),__kwargtrans__({axis:1})));
var __left0__=np.meshgrid(x,y);var xs=__left0__[0];var ys=__left0__[1];
np.sum(np.abs(x-y)>1);
var gene=this_re.group(1);
self.view.setSortingEnabled(true);
py_next(b);
var layout=QtGui.QHBoxLayout();
parser.config_files.extend(py_values);
var y=np.arange(len(x));
var spl=function(){var __accu0__=[];for(var x of inputText.py_split())__accu0__.append(func(x));return __accu0__}();
export var photos=json.loads(parsed_photos[0]);
instance.app.amqp.queues.select_add(queue);
output+=cssin.read();
print(pruned);
var y=np.linspace(0,100,100);
var writer=csv.writer(fl);
print(b,repr(b));
print(list(generator_overlap_split_list(l,s)));
mySocket.connect(tuple([SERVER_IP,PORT_NUMBER]));
print(response.read());
export var sampled_df=df.ix[rows];
f(kw);
var qry=session.query(Parent);
var diff=np.diff(a,__kwargtrans__({axis:0}));
export var stripped_line=line.strip();
self.wrong_values=[];
var method=getattr(self.data,py_name);
datetime.datetime.strptime(s_date,pattern).date();
[4,2,9];
print(function(){var __accu0__=[];for(var x of numbers)__accu0__.append(toHex(x));return __accu0__}());
print(value);
var out=merge(left,right);
print(gen_hex_colour_code());
var parent=Parent();
export var func2=somedecorator(func2);
var args=parser.parse_args();

urlretrieve(image_url,outpath);
xml_dict(childnode,py_name,dic);
var index=np.searchsorted(data,py_values);
print(s);
dwg.save();
var ax1=np.histogram2d(x_data,y_data,__kwargtrans__({bins:bins}));
var b=set([9,7,6,5,1,0]);
sum_a[i]+=x;
l_y.append(s[-1]);
var list1=[[-2,0,-2,2,10,2],[-1,0,2,1,5,4]];
find_intersect(x_down,y_down,x_up,y_up);
Deidre;
Felicity;
Harriet;
Craig;
Greg;
Edward;
Andrew;
export var ftp=FTP(host,user,passwd);
var numbers=sum(function(){var __accu0__=[];for(var c of s)__accu0__.append(c.isdigit());return py_iter(__accu0__)}());
sudokupossibilities[1][1][1]=2;
var predicted=classifier.predict(X_test);
[7,2,6];
var __left0__=plt.subplots(1,len(df.columns));var fig=__left0__[0];var axes=__left0__[1];
pow(2,2);
LR_Multi.fit(X_stack.__getitem__([tuple([0,null,1]),tuple([0,half,1])]),y_stack.__getitem__([tuple([0,null,1]),tuple([0,half,1])]));
do_something_with(line);
print(i);
export var employee=sc.parallelize(employee).map(function __lambda__(e){return tuple([e[1],e[0]])});
print(bool(Something()));
var theta=__mod__(theta,2*np.pi);
export var darray=np.array(function(){var __accu0__=[];for(var s of new_shapes)__accu0__.append(distances(s));return __accu0__}());
print(x.format(42));
f.write(s);

var ax=plt.gca();
var xyz=[0,12,4,6,242,7,9];
t();
var fig=plt.figure();
python-V;
export var rolled_view=np.transpose(coords,rolled_axes);
net.layers[1].blobs[0].data.shape;
humansize(1049);
groups[groupcol].add(col);
self.obj[frozenset(tuple([idx]))];
myseries_three.loc.__getslice__(0,2,1);
export var itemset=set(function(){var __accu0__=[];for(var _=0;_<1E5;_++)__accu0__.append(randint(0,X));return py_iter(__accu0__)}());
self.inspector.setPage(self.view.page());
var tri=qhull.Delaunay(xyz);
print(team([1,1,50,50,50,1E3]));
export var mimedata=QtCore.QMimeData();
tuple([label_height,label_standoff,label_text_align,label_text_alpha]);
setterific(larry)==setterific(moe);
var a=numpy.arange(1,15);
zip_longest(...args,__kwargtrans__({fillvalue:fillvalue}));
var frame=Tkinter.Frame(root);
a;
x[1][2];
var soup=BeautifulSoup(str(content));
sleep(time);
var __except0__=ImportError(msg);__except0__.__cause__=null;throw __except0__;
attr(...args,__kwargtrans__(kwargs));
var __all__=[];
DEDENT;
f.close();
py_next(reader);
var b=np.array([1,2,np.py_NaN]);
ax2.xaxis.set_major_formatter(FuncFormatter(fmt_zToEta));
export var class_name=db.Column(db.String(128),__kwargtrans__({unique:true}));
var console_handler=logging.StreamHandler();
var app=create_app(logger);
threading.Thread(__kwargtrans__({target:show_progress_B,args:tuple([win])})).start();
df;
decimal.Decimal(-1200);
PyArray_Descr*descr;
stream.render(__kwargtrans__({out:f}));
Xc.setdiag(0);
l[0];
var s=requests.Session();
print(config_root.log_file);
plt.colorbar(im);
export var set_4=new set([100,20,40,-40,60,-20,-80,0,-60,-100]);
var c=Counter(function(){var __accu0__=[];for(var elem of list1)__accu0__.append(elem[0]);return py_iter(__accu0__)}());
var minm=argrelextrema(y,np.less);
print(itteration);
m1+=np.bincount(a+m.shape[1]*b,__kwargtrans__({minlength:m1.size}));

itertools.cycle.__init__(self,self._iterable);
[0,1,0];
export var oaischema=etree.XMLSchema(schema_doc);
tuple([4,1])(4,1);
most_frequent(function(){var __accu0__=[];for(var [x,y]of Ns.__getslice__(0,self.k,1))__accu0__.append(y);return py_iter(__accu0__)}());
round(f);
df;
word_counts;
good.append([m]);
plt.scatter(roc_x,roc_y);
view.setRootIndex(model.index(QDir.homePath()));
var response=opener.open(request);
pstack.append(i);
newlist.append([val]);
Base*get_base();
print(dsum(x,y));
var arr=function(){var __accu0__=[];for(var k=0;k<5;k++)__accu0__.append(function(){var __accu1__=[];for(var j=0;j<5;j++)__accu1__.append(function(){var __accu2__=[];for(var i=0;i<5;i++)__accu2__.append(i+j+k);return __accu2__}());return __accu1__}());return __accu0__}();
var HOST=socket.gethostbyname(socket.gethostname());
var l=function(){var __accu0__=[];for(var [k,g]of groupby(x,function __lambda__(x){return x.isalpha()}))__accu0__.append(list(g));return __accu0__}();
_to_etree(e,ET.SubElement(root,k));
export var slots=function(){var __accu0__=[];for(var e of slots)__accu0__.append(e?e:py_next(it_A));return __accu0__}();
var rpath=rpath.__getslice__(4,null,1);
var module=new_module(py_name);
var df1=df1.stack();
self.fig=f;
var l=l.__getslice__(1,null,1);
self.button.customContextMenuRequested.connect(self.on_context_menu);
view.setModel(model);
print(key,mydict[key]);
colormap.SetHueRange(.667,0);
context[self.attr_name];
f.write(bitbuf);
com.open();
widget.set_size_request(200,200);
data.shape;
seaborn.set();
pygame.draw.rect(windowSurface,self.color,self.rect);
df;
foo.set_a_to_three(__all__,locals());
var rdd=sparkdf.rdd.zip(new_col).map(process);
var im=Image.open(image_io);
var HAVE_CYTHON=false;
plt.xlim(0,8E3);
print(b.text);
var user=oauth.get_current_user(scope);
pylab.ion();
flat_for(a,function __lambda__(x){return x+5});
var __left0__=minmaxes(triplets);var min_x=__left0__[0];var max_x=__left0__[1];var min_y=__left0__[2];var max_y=__left0__[3];export var min_z=__left0__[4];export var max_z=__left0__[5];
var user=User.objects.py_get(__kwargtrans__({email:email}));
[-1,-1,-1,-1,-1];
np.save(f,b);
__mod__(number,2)!=0;
foo();
self.data=str;
CELL_LIST.append(Cell(v==1,x,y));
var ax=plt.subplot(111);
callable(object)==true;
export var javascript_html=Render(url).html;
e[0];
obj[key]=mod.__dict__[key];
var b=list(function(){var __accu0__=[];for(var i=0;i<10;i++)__accu0__.append(a+i);return py_iter(__accu0__)}());
b.__setslice__(0,null,null,0);
self._name=py_name;
var __left0__=tuple([len(seq)+1,len(sub)+1]);var m=__left0__[0];var n=__left0__[1];
export var kml=simplekml.Kml();
var path=str(path,sys.getfilesystemencoding());
var w=wmi.WMI();
self.db=db;
fmstr.format(...args);
export var clf2=joblib.load(filename);
easy_csv.append([row_preprocessed]);
(function(){var __accu0__=[];for(var s of strings)for(var splt of[s.py_split()])__accu0__.append(tuple([splt[0],splt[1]]));return __accu0__})();
f.write(output_from_parsed_template);
primeList.append(num);
tuple([7,8,9]);
counts[py_name]+=1;
var a=object();
traceback.print_exc();
var x=np.eye(2);
var __left0__=numbers();var a=__left0__[0];var _=__left0__[1];var _=__left0__[2];
mask[indices]=false;
PQRGQQGTSQEGEQKLQNILEIAPRKASSQPGRFCPFHSLAQGATSPSRKDTMSTESMIRDVELAEEALPQKMGGFQNSRRCLCLSLFSFLLVAGATTLFCLLNFGVIGPQRDEKFPNGLPLISSMAQTLTLRSSSQNSSDKPVAHVVANHQVEEQLEWLSQRANALLANGMDLKDNQLVVPADGLYLVYSQVLFKGQGCPDYVLLTHTVSRFAISYQEKVNLLSAVKSPCPKDTPEGAELKPWYEPIYLGGVFQLEKGDQLSAEVNLPKYLDFAESGQVYFGVIAL*REWVFIHSLPSPHSDPFTLTPLLSTPQSPQSVSF*LRKGIMAQGPTLCSELSTTTQKHKMLGQ*PGLWASHAPPSRTQMGFPNSLEPRMSIPEFCKGRVVRLPLSQNEAG*DLRPSYLQTFPDSSLRCNAQPSSQSQPPSIYICTYYLLFIYYLFICL*Math.pow(MYLFGRPGCPGGPSVGSCLQTDMFSVKTELSCPHLASLPCCLLFCLCLKQNIYLTQLS,R)*FGDQAVATSLNLCSPREP*L*SPYGSLREI;
indexes[i]=reference[data[i]];
df.index.dtype;
var x=2;
os.startfile(command[myIraw_inputput][1]);
self.trell.append([word,copy.deepcopy(temp)]);
element.tag;
p.start();
var a=tf.Variable(init_a);
table[0];
var data=np.genfromtxt(f,__kwargtrans__({usecols:list(range(5,num_cols))}));
2;
licenses.add(get_plate());
self.my_table.insert(dict(item));
s.add(2);
loop.run_forever();
wrapper;
o.date=datetime(2012,4,15,1,0,2);
false;
(function(){var __accu0__=[];for(var [b,e]of function(){var __accu1__=[];for(var i=1;i<len(spl);i++)__accu1__.append(tuple([spl[i-1],spl[i]]));return __accu1__}())__accu0__.append(data.__getslice__(b,e,1));return __accu0__})();
dsp.setparameters(AFMT_S16_NE,nc,fr);
var x=data.__getitem__([tuple([0,null,1]),0]);
export var uniqueDF=df.drop_duplicates();
var AB=function(){var __accu0__=[];for(var i=0;i<min(len(A),len(B));i++)__accu0__.append(A[i]+B[i]);return __accu0__}();
new set([new set([YOUR_CUSTOM_SETTING])]);
zlib.decompress(strobj,15+16);
ret.insert(0,r);
export var tweets=line_data.__getslice__(1,-1,1);
export var summed_vals=np.bincount(id_arr,count_arr);
f.read();
plt.hist(data,50);
np.uint64;
chart_toolbar.SetSize(wx.Size(fw,th));
b[0];
SIGN_CHARACTER+num_encode(-n);
fn.__dict__.py_update(f.__dict__);
plt.show();
counts.update_point(r,1);
var DEBUG=true;
print(self.a*self.b*self.c);
self.socket.listen(128);
var blobs=BlobInfo.all().fetch(500);
var s=pd.Series([np.py_NaN,np.py_NaN,1]);
var writer=csv.writer(foutput);
export var themax=arr[0];
var index=bisect(function(){var __accu0__=[];for(var i of my_list)__accu0__.append(i.lower());return __accu0__}(),insert_string.lower());
app_log.removeHandler(hdlr);
var py_items=collections.defaultdict(list);
tuple([true,s.__getslice__(2,null,1)]);
print(args);
np.where(data.__getitem__([tuple([0,null,1]),1])==yr+72);
print(data);
print(row[1]);
server.close();
var start=dt.datetime.now();
foo.bars=[1,2];
df;
plt.show();
var main_loop=tornado.ioloop.IOLoop.instance();
win.show_all();
bcut.on_clicked(_yes);
export var mergedlist=listone+listtwo;
var length=len(list1);
indices.py_sort(__kwargtrans__({axis:axis}));
self.a=a;
f1.close();
print(df);
self.wfile.flush();
session.add(prod);
var a=np.rint(x);
d.py_clear();
var PROJECT_PATH=os.path.realpath(os.path.dirname("./P2JSnippets.py"));
export var target_file_name=os.path.basename(filename);
export var sorted_eigvecs=eigvecs.__getitem__([tuple([0,null,1]),eig_idx]);
var A2=np.random.randint(-4,10,__kwargtrans__({size:tuple([1E5,100])}));
true;
ZZ.old_poly_ring(x).ideal(Math.pow(x,2)+1);
var mask=np.tile(np.any(im,__kwargtrans__({axis:0})),tuple([2]));
the_files.append(target_file_name);
var x=int(x);
ret.append(tuple([point[0]-2*(point[0]-BOTTOM_LEFT[0]),point[1]]));
self.widget.see(END);
app.quit();
fn;
list(a);
var group=list(group);
var __left0__=s.py_split();var k=__left0__[0];var v=__left0__[1];
var a=np.random.randint(0,100,1E5);
time.sleep(SECONDS);
odd.append(num);
var a=df.t.py_values;
fh.level=logging.WARNING;
print(row);
self.render_to_response(context);
sys.exc_info()[1];
var number=int(eval(input()));
do_some_stuff(k,v);
var fitfunc=function __lambda__(params,x){return params[0]*x};
self.data[dataKey].remove(item);
PCO_api.PCO_OpenCamera(ctypes.byref(camera_handle),0);
np.array(list(itertools.zip_longest(...v,__kwargtrans__({fillvalue:0})))).T;
count+=1;
var d=np.empty(n);
var tree=etree.HTML(doc);
py_name[0][0];
btn.Bind(wx.EVT_BUTTON,self._onShowHelp);
var fig=Figure();
var client=oauth.Client(consumer);
var suite=indentedBlock(stmt,indentstack,true);
mydict[index]=+1;
mw.ui.plotWidget.setGeometry(1,1,s.width()-2,s.height()-2);
functools.update_wrapper(wrapper,fn[0]);
obj.b();
is_new_style_class(int);
nodes.append(Node(ndx[k],[]));
var J=sparse.coo_matrix(tuple([np.ones_like(ixs,int),tuple([np.zeros_like(ixs,int),ixs])]));
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];

export var divisors=[];
m1.create_all(conn);
var random_array=np.array(random_array,__kwargtrans__({dtype:np.uint8}));
var __except0__=sqlalchemy.exc.DisconnectionError;__except0__.__cause__=null;throw __except0__;
weeks.count();
d1.__getslice__(start,end,1).value_counts().index[0];
x.__getitem__([1,0,2]);
hash(self.item1)*hash(self.item2);
G.add_edges_from(megalist);
var row=py_next(itertools.islice(csv.reader(f),row_number,row_number+1));
var cj=cookielib.CookieJar();
var first_list=[1,2,2,5];
var user=User();
print(df_expanded);
ax.w_xaxis.line.set_color(tuple([1,1,1,0]));
pygame.quit();
var number=eval(input());
tuple([1,1,0]);
o_func1();
set(function(){var __accu0__=[];for(var t of prerequisites_complete)__accu0__.append(t.id);return __accu0__}())==set([a.id,b.id]);
new_lock.acquire();
var abspath=os.path.join(dirpath,f);
_PIDS.append(pid);
print(f);
self._inner.insert(index,item);
w.wcs_pix2world(100,100,1);
value_to_key[v].append(k);
len(bin(1E3))-2;
do_something_with(line);

l.__setslice__(0,null,null,function(){var __accu0__=[];for(var i of l)if(counts[i]==1)__accu0__.append(i);return py_iter(__accu0__)}());
a.py_sort(__kwargtrans__({reverse:true}));
ipaddress.ip_address(str);
wnd.show_all();
export var dircontainingqueuedotyaml=os.path.dirname(os.path.dirname("./P2JSnippets.py"));
export var CUDA_ENABLE_CURAND=true;
var data=Column(String);
export var settingstime_zone=timezone(settings.TIME_ZONE);
print(d.py_pop(min(d,__kwargtrans__({key:d.py_get}))));
var y=np.add.accumulate(x);
var ax2=np.histogram2d(x_data,z_data,__kwargtrans__({bins:bins}));
self.session.query(self.model).filter(self.model.paid==true);
DF.columns=DataFrame(np.matrix(cursor.description))[0];
db.create_all();
app.exec_();
export var os=__init__.os;
splitS.append(s.__getslice__(start+1,end,1));
self.subframe.Close();
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
self.b.follow_link(link);
float(n_ab)/(n_a+n_b-n_ab);
var opener=urllib.request.build_opener(auth_handler);
plt.subplot(2,1,2);
var data=json.load(infile);
var idx=a.cumsum();
time.sleep(1);
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
diff[key]=merge(lhs[key],rhs[key]);
f(...function(){var __accu0__=[];for(var [_,v]of sorted(newdict.py_items()))__accu0__.append(v);return __accu0__}());
show(fig);
var a=[1,2,5,1,6];
var Ihmf=(Ihmf-np.min(Ihmf))/(np.max(Ihmf)-np.min(Ihmf));
fig.add_subplot(__kwargtrans__({axes:self.traceax}));
var parent_map=dict(function(){var __accu0__=[];for(var p of tree.getiterator())for(var c of p)__accu0__.append(tuple([c,p]));return py_iter(__accu0__)}());
var d=collections.defaultdict(list);
dict_out[key]=value;
d.dtype.names;
export var shift_idx1=np.append(0,np.where(np.diff(idx1.__getitem__([tuple([0,null,1]),0]))>0)[0]+1);
s.value_counts();
self.smtp.close();
print(x.format(42));
g(...args);
var __except0__=NotImplementedError();__except0__.__cause__=null;throw __except0__;
Py_Initialize();
export var p_guess=tuple([np.median(x),np.median(y),1,1]);
var tokens=nltk.word_tokenize(text);
var fig=pyplot.figure();
print(list(squares(4,16)));
var results=zip(function(){var __accu0__=[];for(var x of results)__accu0__.append(x[0]);return __accu0__}(),smoothed);
export var start_of_week=today-start_delta;
words+=len(wordslist);
parse.py;
self.__fpointer;
var a=a.__getslice__(0,null,-1);
str(self.author);
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
isinstance(value,CheckboxInput);
x+=N;
tuple([array([10,14,15,56])]);
var original_rows=[[1,0,1],[0,0,0],[1,0,0]];
var state=models.CharField(__kwargtrans__({max_length:25}));
var b=np.array([4,5]);
row.append(DataReader[j]);
writeFileObject.close();
(1<<x)-1;
export var xz=NNN.mean(__kwargtrans__({axis:1}));
func();
var num=9;
a1_edit.textChanged.connect(function __lambda__(text){return self.TxtChanged(a1_edit,text)});
var ypos=np.searchsorted(x[xsorted],y);
self.sizer.Add(self.button,tuple([2,0]),tuple([1,2]),__kwargtrans__({flag:wx.EXPAND}));
self.log_queue.append(self.format(record));
print(py_name);
print(args_values);
scores.append(subcheckio(nstones,left+stones[0],rite));
signal.signal(signal.SIGTERM,term);
retstr.close();
print(x,y,x*y);
ax.set_xticks(ind+width);
instance.save();
__builtins__.max;
os.chdir(SCRIPT_DIR);
po.join();
random.shuffle(sequence_containing_y_vals);
print(gpsp.get_current_value());
export var sniffer=csv.Sniffer();
req.write(resp.data);
var beta=cov.__getitem__([1,0])/cov.__getitem__([0,0]);
coskew(df);
es_logger.addHandler(es_logger_handler);
plt.show();
self.data=self.request.recv(1024).strip();
plt.show();
out.append(sum);
c.style;
var i=row[0];
chr(ord(c)+x);
driver.set_window_size(1400,1E3);
tuple([geom.LineString(tuple([tuple([1.1,2]),tuple([.1,.4])]))]);
sftp.stat(path);
x.date();
self.children.append(Tree(child,self));
df;
json.JSONEncoder.py_default(self,obj);
export var cookie=urllib.request.HTTPCookieProcessor(cookie_jar);
rows.append(row);
array[0];
var mylist=list(myiterator);
export var b_mock=mock.Mock();
self.queue=[];
xml_file.seek(0);
print(20);
var buf=f.read(1024);
var fig=plt.figure();
var df=pd.read_csv(StringIO(temp));
dialog.ShowModal();
s.close();
var end=len(lst);
var __except0__=RuntimeError(msg.format(this.db_name));__except0__.__cause__=null;throw __except0__;
var parser=argparse.ArgumentParser();
os.unlink(f.py_name);
var app=QtGui.QApplication(sys.argv);
var W=np.random.normal(__kwargtrans__({size:tuple([X.shape[1],1])}));

var age=models.IntegerField();
py_metatype.__new__(cls,py_name,bases,dict_);
var pool=mp.Pool(num_processes);
var results=[];
export var B5=A5+B4;
l.append(k);
var words=function(){var __accu0__=[];for(var line of open(WORDS_FILENAME))__accu0__.append(line.strip());return __accu0__}();
self.session_store=sessions.get_store(__kwargtrans__({request:self.request}));
wx.EVT_TIMER(self,self.belltimer.GetId(),self.OnBellTimer);
x;
consumer.start();
var height=math.sqrt(max(outer_radius*outer_radius-i*i,0));
ls[1]=int(ls[1]);
print(self.layers[2][0].value);
print(A*x);
layout.addWidget(button);
formdata.py_update(data);
var b=np.random.choice(vals,__kwargtrans__({size:w}));
export var property1=ndb.StringProperty();
tuple([4,5,6]);
b.py_sort();
var images=ImageItem.objects.filter(__kwargtrans__({user:user}));
export var donut=numpy.logical_and(circle<6400+60,circle>6400-60);
rng[argunsort(np.argsort(l))];
all(a==z);
export var resultList=[1,2,5,7,9];
self._store_aggregation_timer.start();
export var sortkeys=function(){var __accu0__=[];for(var [k,v]of enumerate(b))__accu0__.append([v,k]);return dict(__accu0__)}();
x._get_numeric_data().apply(__kwargtrans__({axis:0,func:np.log2})).mean();
var ax=fig.add_subplot(1,1,1);
pad(a,b,offset);
var c=Cl();
var filename=os.path.abspath(sys.argv[1]);
errors.append(tuple([srcname,dstname,str(why)]));
DataFrame(simpleObject.exe(),ssqlContext);
plt.show();
self.addLine(xc,0,xc,height);
var path=self.args[0];
s.index=s.index.droplevel(-1);
p.terminate();
var py_values=map(float,f2.read().py_split());
var __left0__=np.meshgrid(np.linspace(0,5,100),np.linspace(0,5,100));var X=__left0__[0];var Y=__left0__[1];
print(c);
self.xoo=x;
os.path.dirname(os.path.realpath(sys.argv[0]));
var im=Image.open(old_image_path);
var thread=threading.Thread(__kwargtrans__({target:your_code}));
result.append([l]);
l[0];
var __left0__=tuple([0,1]);var mu=__left0__[0];export var sd=__left0__[1];
f(1,2);
self;
result[i]=np.random.hypergeometric(colors[i],remaining[i+1],m);
a[0].append(7);
N(h,6,9);
export var stud=session.merge(stud);
Q.set_UVC(U,V);
setattr(instance,key,value);
print(tuple([event.x,event.y]));
var p=ProcessPoolExecutor(2);
json.loads(responseJSON);
var ax=pylab.gca();
cnx.close();
var content=json.load(file_handler);
df2[needed_columns]=df.reindex(__kwargtrans__({index:df2.index,columns:needed_columns}));
var timestamp1=time.mktime(datetime.now().timetuple());
driver.py_get(pageLink);
export var ModelForm=self.get_form(request);
var d=collections.defaultdict(list);
func(self,...args,__kwargtrans__(kwargs));
var dict=pickle.load(file);
var __left0__=tuple([cluster.__getitem__([tuple([0,null,1]),0]),cluster.__getitem__([tuple([0,null,1]),1])]);var x=__left0__[0];var y=__left0__[1];
links.append(t.post_set.distinct());
QtGui.QMainWindow.__init__(self);
export var arrA=np.asarray(A);

export var timer2=fig.canvas.new_timer(__kwargtrans__({interval:50}));
odict[key]=odict.py_pop(key);
self._rooms=dict({});
export var row_result=[];
Atomic.register(str);
true;
self.errors=np.ndarray(0);
np.bincount(r,dists<Math.pow(R,2),__kwargtrans__({minlength:tot_vec}));
var p=Process(__kwargtrans__({target:start_server}));
var nextelem=py_next(licycle);
second.append(4);
var n=np.random.randint(400,800);
- -main.lua;
export var max_area=0;
result.append(prev);
log.close();
var a=read_dict_from_file();
reactor.callLater(timeout,sendelayed,data);
var x_new=np.linspace(np.min(x),np.max(x),x.shape[0]);
output.append(letter);
arr[97][99][98];
node_data.append(node_to_dict(lnode,dict({})));
tuple([numpy.mean(a),numpy.std(a)]);
d.py_update(buf);
var sh=tuple([shape[0],Math.floor(a.shape[0]/shape[0]),shape[1],Math.floor(a.shape[1]/shape[1])]);
self.socket.sendto(data,self.address);
elem.py_clear();
var res=np.zeros_like(arr,int);
print(self.x);
var ans=[];
math.factorial(arg);
self.window.set_border_width(10);
var X=np.random.randn(1E3,5);
pubkey.verify_init();
export var sentence_dict=dict({});
sys.__excepthook__(py_metatype,value,tback);
sizer.Add(btnGreen,0,wx.ALL|wx.CENTER,5);
ax.plot(np.sin(x));
var reader=csv.DictReader(csvfile,__kwargtrans__({dialect:dialect}));
var data=urllib.parse.urlencode(py_values);
a.printout();
print(some_list);
false;
var py_items=match.groups();
pre_save.connect(do_something,__kwargtrans__({sender:MyModel}));
tuple([14,20]).__getitem__([14,15,16,17,18,19]);
bri.close();
py_iter(list(range(expecting(__kwargtrans__({offset:0})))));
self.request=request;
print(yaml.dump(data));
a[tuple(idx.T)]=[5,10,15];
var strings=function(){var __accu0__=[];for(var x of listEx)if(isinstance(x,str))__accu0__.append(x);return __accu0__}();
export var YAR002W=apoptosis;
var parser=xml.sax.make_parser();
var newlist=function(){var __accu0__=[];for(var v of ordering)__accu0__.append(newdata[v]);return __accu0__}();
var tail=list(it);
export var phi0=a[-1];
var list_a=np.array([1,2,4,6]);
self._sub_results[key];
var p=pyaudio.PyAudio();
someModule.init(NECESSARY_DATA);
var out=np.zeros(tuple([m,n]));
var x=pattern.sub(function __lambda__(i){return substitutions.py_pop(0)},some_text);
var data=np.random.normal(0,1,tuple([1,5]));
cleaned_url;
var C=list(Concate.py_keys());
concurrent.futures.wait(futures);
_value;
var data=image.load();
var o=urlparse(url);
k.release_key(k.left_key);
math.pi;

i+=1;
var json_obj=json.loads(res.content);
stuff();
export var fil=os.path.join(fol,fil);
(x1+x2)/2;
t.set_position(tuple([shift,0]));
var colors=cm.RdYlBu(np.linspace(0,1,n));
var L=function(){var __accu0__=[];for(var each of xr)__accu0__.append(sample(xr,5));return __accu0__}();
app.run();
zip_longest(...args,__kwargtrans__({fillvalue:fillvalue}));
df2.iloc.__setitem__([0,0],42);
true;
cursor.execute(some_statement);
var it=py_iter(data);
var slices=function(){var __accu0__=[];for(var sli of function(){var __accu1__=[];for(var i of seclist)__accu1__.append(list(islice(it,0,i)));return py_iter(__accu1__)}())__accu0__.append(sli);return __accu0__}();
list(d.py_items());
a*np.exp(-b*x)+c;
export var s2str=series2.astype(np.str);
var MyList=function(){var __accu0__=[];for(var k of[x,y,z])__accu0__.append(d[k]);return __accu0__}();
exch(k,j);
iters.remove(it);
socket.listen(5);
a[2]=4;
sd.append(step_decay(len(self.losses)));
export var range_end=Math.pow(10,n)-1;
var scat=ax.scatter(x,x,s,c);
var count=0;
plt.legend();
var df=pd.concat([df,pd.read_csv(file)]);
example.get_time();
Child.do_something();
current.append(line.text);
print(item);
var query=select(function(){var __accu0__=[];for(var e of MyEntity)if(e.attr>f(x,200)&&g(x,e))__accu0__.append(e);return py_iter(__accu0__)}());
dec(f,...args,__kwargtrans__(kwargs));
v.py_clear();
numpy.dot(a.T,numpy.cross(b,c));
globals_.py_update(function(){var __accu0__=[];for(var py_name of names)__accu0__.append(tuple([py_name,modict[py_name]]));return py_iter(__accu0__)}());
var results=[];
myData.close();
print(multiprocessing.current_process());
someDict.py_keys()&someSet;
var app=web.application(urls,__all__);
py_items.append(function __lambda__(i){return function __lambda__(){return dump(i)}}(i));
first_loop();
deleteArtofWarCounter[word];
scoreB+=1;
var __left0__=tuple([function(){var __accu0__=[];for(var x of xs)__accu0__.append(x[0]);return py_iter(__accu0__)}(),function(){var __accu0__=[];for(var y of ys)__accu0__.append(y[1]);return py_iter(__accu0__)}()]);var xs=__left0__[0];var ys=__left0__[1];
np.bincount(binNum);
py_values.append(value);
var hxs=HtmlXPathSelector(response);
o.writebits(ord(c),7);
var db=conn.test;
alist==sorted(alist);
var mask=series1>series2;
get_pickling_errors(K);
ax.set_xlim(0,width_of_im);
export var betas=rdf.apply(beta);
self.process=self.process.load();
self._box.close();
var response=br.submit();
print(function(){var __accu0__=[];for(var col of df.columns)__accu0__.append(py_typeof(col)==float?int(col):col);return __accu0__}());
self.errorcount=0;
self.noisycount=0;
Math.pow(x,2);
export var color_radios_ax=fig.add_axes([.025,.5,.15,.15],__kwargtrans__({axisbg:axis_color}));
var __except0__=SystemExit(0);__except0__.__cause__=null;throw __except0__;
var groups=df.groupby(np.digitize(df.a,bins));
var mydict=dict({});
target_f.write(_bytes);
d1[k]=v2;
cartesian(a,b);
var gen=function(){var __accu0__=[];for(var x of tups)__accu0__.append(x[0]);return py_iter(__accu0__)}();
yertle.end_poly();
ModelAdmin.__bases__=tuple([CustomModelAdmin])+ModelAdmin.__bases__;
self.lock=Lock();
export var fg1=bg1.apply(frame);
myList.append(random.randint(0,1));
id(foo.__code__)==id(foobar.foo.__code__);
db.create_all();
tuple([0,0,4,1,0,48,8,1,64,48,7]);
self.rectangle=numpy.hstack(tuple([self.pos,self.size]));
table.py_setdefault(tuple([w1,w2]),[]).append(word.__getslice__(0,-1,1));
np.minimum(b,np.maximum(a,c));
arg_test();
swap(i,0);
object.__new__(Parent._children[k]);
s?f/Math.pow(2,len(b)-s):f;
print(args.xDate);
var channel=self.ssh.invoke_shell();
StringIO.__init__(self,stdout);
export var depth=root.__getslice__(len(path)+len(os.path.sep),null,1).count(os.path.sep);
var temp=map(str,L.__getslice__(j,null,1));
dis.dis(x);
var response=urllib.request.urlopen(req);
deletetest[1];
var output=dict({});
lis.append(x+y);
false;
plt.subplot(211);
m[int(y)+(x-1)*N]=1;
draw.line(tuple([0,i,100,i]),__kwargtrans__({fill:random.randrange(256)}));
crawler_process.start();
primfac.append(n);
var b=np.diff(a);
export var CLOCK_REALTIME=0;
crawler.configure();
print(p.map(function __lambda__(x){return function __lambda__(y){return Math.pow(y,2)}(x)+x},range(10)));
var t=f();
var df=DataFrame(table,__kwargtrans__({columns:headers}));
export var positions=np.vstack([xx.ravel(),yy.ravel()]);
imshow(mycmap(Z1),__kwargtrans__({extent:extent}));
var a_sorted=a[idx];
text;
exit(i);
axes.plot(rx(t),ry(t),t);
food_ctx.add(tuple([alice,likes,chocolate]));
mail.login(SMTP_USERNAME,SMTP_PASSWORD);
new_command;
a.value;
draw();
plt.show();
self.text1.pack(__kwargtrans__({side:TOP}));
client.add_flags(msg_ids,[SEEN]);
a*math.exp(-Math.pow(x-b,2)/(2*Math.pow(c,2)))+d;
var buf=f.read(8192);
outputData.append(str(i));
threshold(gray,bin,127,255,THRESH_BINARY_INV);
df.Tm.cat.set_categories(sorter,__kwargtrans__({inplace:true}));
clf.estimators_[1];
var dt=numpy.dtype(dt);
export var disj_part=list(combinations(nots,k));
export var b_ext=np.row_stack(tuple([b,b.__getslice__(0,-1,1)]));
export var ss=sum(function(){var __accu0__=[];for(var x of data)__accu0__.append(Math.pow(x-c,2));return py_iter(__accu0__)}());
logger.addHandler(ch);
len(self.datatable.columns.py_values);
formatted(1E-21);
self.lock=threading.Lock();
print(solve([fCamel,fCamel,fCamel,gap,bCamel,bCamel,bCamel]));
var new_list=remove_empties(new_list);

self.figure.canvas.flush_events();
punkt.train(fin.read(),__kwargtrans__({finalize:false,verbose:false}));
var bucket=conn.get_bucket(bucket);
print(q.py_get());
var im=function(){var __accu0__=[];for(var i=0;i<len(xs);i++)__accu0__.append(np.zeros(tuple([nums+1,nums+1])));return __accu0__}();
WORKDIR/srv;
deletea[k];
export var lst_as_sets=map(frozenset,lst);
socket.__file__;
os.seteuid(501);
foo.BAR;
var id=fields.String();
self.close();
m_list[i]=v.union(m_list.py_pop(j));
mfg/recommend;
var __left0__=plt.plot([]);export var ln=__left0__[0];
var ax=fig.add_subplot(111);
print(self.data);
bg.close();
var b=models.CharField(__kwargtrans__({max_length:5}));
var idx=bisect(fst,2);
[0,0,2];
export var PnP=1;
s.__getslice__(1,null,1)+s[0];
var foo=Foo();
sortToFile.write(line);
export var cur_num=int(os.path.basename(files[-1]).__getslice__(6,-4,1));
var numbers=list(range(1,11));
p.leading=120;
list(closed_range(10,1,-1));
var d=visdel();
km.fit(some_data);
print(result);
var xy=np.vstack([x,y]);
memory_zip.write(parent_zip.open(child_zip_path).read());
print(item);
ws.set_paper(9);
var __left0__=np.gradient(Z,.05,.05);var gx=__left0__[0];var gy=__left0__[1];
var beta=scipy.solve_triangular(R,Q.T.dot(y));
diff[key]=list(set(a[key])-set(b.py_get(key,[])));
var c1=Counter(l1);
var __left0__=plt.subplots(1,2);var fig=__left0__[0];var axs=__left0__[1];
var n=len(archive.getnames());
youtube_regex_match.group(6);
export var user_fistName=db.Column(db.String(64));
self.src[-2].insert(0,itemtoshift);
pinf==ninf;
sh.write(m,0,e1);
var a=[true,false,true];



export var scriptable=Scriptable();
results.append(point);
base64.decodestring(self._data);
var n=a.shape[0];
seen.py_update(b);
self._jrdd_deserializer=rdd._jrdd_deserializer;
func(...a_b);
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
instance.do_stuff();
self.textLayout.setMargin(10);
var __left0__=os.path.splitext(os.path.basename(os.path.normcase(FILE_NAME)));var py_name=__left0__[0];var ext=__left0__[1];
diff.append(all);
var number=models.IntegerField(__kwargtrans__({py_default:0}));
execute_from_command_line(sys.argv);
self.roomManager.set_handlers();
plt.savefig(...args,__kwargtrans__(kwargs));
curl.setopt(pycurl.PROXYTYPE,pycurl.PROXYTYPE_SOCKS5);
cls.INVITE_MESSAGE;
mail.send(__kwargtrans__({fail_silently:fail_silently}));
-54.5;
-51.9;
var data=self.fd.read(size);
test(re);
platform.python_compiler();
PLT.show();
var f=figure(__kwargtrans__({figsize:tuple([10,10])}));
var ind=np.nonzero(lo_or_hi)[0];
var data=connection.read();
Makefile;
pl.show();
indata[i]=ctypes.c_double*6();
var l=[0]*n;
var c=np.concatenate(tuple([a,b]),__kwargtrans__({axis:1}));
var address=models.CharField(__kwargtrans__({max_length:50}));
export var ttt=ttt+1;
oldWindow.get_child().reparent(newWindow);
py_next(f);
isinstance(n,numbers.Number);
var results=[];
sys.stdout=s;
plt.yticks(np.arange(.5,len(df.index),1),df.index);
kwargs.py_update(__kwargtrans__({dtype:float128}));
print(any(function(){var __accu0__=[];for(var list_item of fruits)__accu0__.append(__in__(list_item,fruit_dict2));return py_iter(__accu0__)}()));
print(F);
s.login(hostname,username,password);
application.listen(8888);
var py_name=models.TextField(__kwargtrans__({max_length:100}));
var s=frozenset([1,2]);
var transitions=(array.__getslice__(1,null,1)!=array.__getslice__(0,-1,1)).sum();
var q=q.prefetch(Order.supplier);
sign(self.predict(inputs));
list.selection_set(py_items[0]);
self.reader=csv.reader(self.f);
var x=x+K*y;
[1,0,2,0];
print(hello_world);
queue.append(tuple([key,result]));
var __except0__=TimeoutError(error_message);__except0__.__cause__=null;throw __except0__;
fout.write(line);
QtGui.QBrush(QtCore.Qt.darkBlue);
export var xcenter=len(x)/2;
np.random.seed(1);
var bar=staticmethod(foo);
var value=df.loc[5];
Py_DECREF(pName);
var x=canvas.canvasx(event.x);
tuple([[0,1,1,1,1]]);
wrapper;
var lens=np.array(function(){var __accu0__=[];for(var item of v)__accu0__.append(len(item));return __accu0__}());
pf.close();
array([4,6]);
var __left0__=np.histogram2d(x,y,__kwargtrans__({bins:50}));var heatmap=__left0__[0];var xedges=__left0__[1];var yedges=__left0__[2];
d[py_keys[-1]]=value;
var __left0__=line.py_split();var key=__left0__[0];var val=__left0__[1];
[mo.group(1),mo.group(2)];
var w=dict(function(){var __accu0__=[];for(var [i,x]of enumerate(a))__accu0__.append(tuple([x,i]));return py_iter(__accu0__)}());
var y=function(){var __accu0__=[];for(var [k,v]of x)if(d[v]==k)__accu0__.append(tuple([k,v]));return __accu0__}();
image.deleteThumbnail();
var ret=np.maximum.reduceat(csr_mat.data,csr_mat.indptr.__getslice__(0,-1,1));
c.my_property;
tn.write(idpass);
datetime.date(self.year,self.month,self.day);
var b=function(){var __accu0__=[];for(var x of a)__accu0__.append(function(){var __accu1__=[];for(var y of x)__accu1__.append(y==max(x)?y:0);return __accu1__}());return __accu0__}();
var start=time.time();
print(test.f(666));
print(x[5],x[8],x[9]);
- -allow-all-external;
var a=(10*np.random.randn(10,10)+127).astype(np.uint8);
do_three();
var roi=cv2.bitwise_and(source,source,__kwargtrans__({mask:mask}));
PyErr_Print();
self.addCleanup(patcher.stop);
var __except0__=argparse.ArgumentError(self,message);__except0__.__cause__=null;throw __except0__;
var G=nx.DiGraph(input_data.py_values);
dict(function(){var __accu0__=[];for(var c of strg)__accu0__.append(tuple([c,0]));return __accu0__}());
var y=np.repeat(y,100,__kwargtrans__({axis:0}));
var data=json.loads(json_txt);
export var grouped_by_soundex=defaultdict(list);
0-0-0;

sparse_mult(a,b,[tuple([0,0]),tuple([0,4999]),tuple([1999,0]),tuple([1999,4999])]);
c.__setslice__(0,len(a),null,c.__getslice__(0,len(a),1)+a);
self.regularization=j;
var oldval=oldval*random();
var nums=map(bin,map(int,_in.read().py_split()));
var match=sm.find_longest_match(0,len(answer),0,len(prediction));
string;
var a=[];
var d=np.delete(a,np.where(mask==false));
main();
export var F0=numpy.where(mask0,F_mid,F0);
var data=np.random.rand(nrows,ncols,nframes);
var response=urllib.request.urlopen(req1);
var X_train=Xy_train.__getitem__([tuple([0,null,1]),tuple([1,null,1])]);
msg;
Math.pow(np.array(pts),2).sum();
df.AVG_GRADE=list(map(list,zip(df.HOUR,df.AVG_GRADE)));
df;
np.savez(filename,__kwargtrans__(attributes));
var bytes=input();
export var aapl_200ma=pd.rolling_mean(aapl,200);
var __except0__=ValueError();__except0__.__cause__=null;throw __except0__;
var df=pd.DataFrame(np.random.choice([1,np.nan],tuple([1E4,1500]),__kwargtrans__({p:tuple([.01,.99])})));
doc2vecmodel.train(sentences);
print(data.text);
var form=FooForm;
export var pruned=function(){var __accu0__=[];for(var sublist of ls)__accu0__.append(function(){var __accu1__=[];for(var i of sublist)if(i<n)__accu1__.append(i);return __accu1__}().__getslice__(0,sublist_length,1));return __accu0__}();
n^1<<k;
print(elb.getInput());
var df=pd.DataFrame(__kwargtrans__({data:np.random.normal(0,1,tuple([20,10]))}));
XmingProc.wait();
print(item);
obj.__set__(self,value);
zip(a,b);
export var rolling_dd=pd.rolling_apply(s,window_length,max_dd,__kwargtrans__({min_periods:0}));
print(test.__defaults__[0]);
var config=tf.ConfigProto(__kwargtrans__({allow_soft_placement:true}));
print(__mod__(mystring,tuple([wash_clothes,clean_dishes])));
sys.exit(2);
var user_input=input();
export var my_checker=SpellChecker(my_dict);
l.append(id(x));
export var str_num=str(num);
ord1[0]+=1;

sorted(indices);
export var valid_date=datetime.datetime.strptime(date,fmt);
print(queryset.query);
var data=f.readline();
var r=urllib.request.urlopen(urllib.request.Request(url));
var fig=PLT.figure();
[output];
libraries.append(arg.__getslice__(2,null,1));
Tools>Prefences&&Prefences>General;
line.set_data([],[]);
plt.figure(__kwargtrans__({figsize:tuple([18,6])}));
var df=df.astype(int);
print(new_grammar.productions()[-1]);
var app=main(settings);
self.cleaned_data;
var ax=fig.add_subplot(111);
tableWidget.setCellWidget(0,1,ImgWidget1(self));
export var agged=df.x.groupby(df.x.isnull().cumsum()).agg(f);
var key=self.rel.get_related_field().py_name;
export var author_id=Column(BigInteger,__kwargtrans__({nullable:false,index:true}));
a.A;
var cmap=matplotlib.cm.jet;
UserModel().set_password(password);
i+=1;
main();
wx.Bell();
var result=df.loc.__getitem__([first[0],tuple([first[1],last[1],1])]).min();
self.sum+=value;
file_B.do_B_stuff;
b.append(j);

deleteordered[tN];
var value=str(int(value));
threadLimiter.acquire();
response;
var tn=telnetlib.Telnet(HOST,PORT);
element.text=text;
self.FileModel.setCondition(text);
hash(x);
root.destroy();
yet_to_run+=1;
soup.span.renderContents();
a.sum();
head.__setitem__([0,tuple([0,null,1])],16);
f.seek(step,os.SEEK_END);
var num=np.array([1]);
redis.Redis.RESPONSE_CALLBACKS[command](response);
export var logit_val=sess.run(logits);
self.__func__(self.__self__,...args,__kwargtrans__(kwargs));

print(self.x);
var results=Result.objects.filter(__kwargtrans__({id__in:obj.result_set}));
export var d_with_str_keys=dict(function(){var __accu0__=[];for(var [k,v]of d.py_items())__accu0__.append(tuple([str(k),v]));return py_iter(__accu0__)}());
pyplot.savefig(sio,__kwargtrans__({format:format}));
plt.xlim(0,47);
self.i=0;
export var corn=Corn(201212);
var a=numpy.array([d,d,d],__kwargtrans__({dtype:numpy.dtype(decimal.Decimal)}));
var result=function(){var __accu0__=[];for(var m of matches)__accu0__.append(m.group());return __accu0__}();
inner();
print(myformat);
tuple([7,[false,false,false,false]]);
Counter(y)-Counter(x);
export var msg_contant=process_multipart_message(msg);
var s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);
win.add(bro);
py_iter(f.readlines());
print(tuple(exp.findall(st)));
export var ascii_lower=set(string.ascii_lowercase);
df;
reps.append(rep);
export var niceText=pprint.pformat(yourDict);
self.assertEqual(t.render(c),output);
self.is_running=true;
cls(__kwargtrans__({key_name:key_name,delete_when:deadline}));
plt.show();
libraries.__getslice__(4,12,1);
set_request(request);
var req=urllib.request.Request(url,data);
p.join();
var logger=logging.getLogger(__name__);
frequency_list.py_sort(__kwargtrans__({reverse:true}));
export var vectorized_sparse=vectorizer.fit_transform(train_as_dicts);
d.most_common();
bytes+=stream.read(1024);
var arr=np.empty(tuple([initial_guess,M]));
1;
self.children=children;
print(data[0]);
ws.set_horz_split_pos(1);
t[2]+=AddIDemo([5,6]);
var names=Employee.objects.filter();
self.text_area.grid(__kwargtrans__({row:1,column:1}));
var df2=df1.copy();
d.py_setdefault(__mod__(x,10),[]).append(x);
brr.__setslice__(0,null,null,brr[sort_indices]);
var dt=datetime.fromtimestamp(posix_timestamp,tz);
ss.dtype;
sm.OLS(y,X);
export var guess_mean=np.mean(data);
print(function(){var __accu0__=[];for(var k=0;k<4;k++)__accu0__.append(f(k));return __accu0__}());
var __left0__=val;result[i][j]=__left0__;result[j][i]=__left0__;
print(my_content);
var old_stdout=sys.stdout;
plot(y1[1]);
export var raw_value=int(eval(input()));
var json_obj=json.load(response);
d[key].extend(flatten_group(preserve_path(value)));
q+=1;
File.close();
self.right.sillywalk();
var __left0__=np.meshgrid(x,y);var X=__left0__[0];var Y=__left0__[1];
list1.extend(map(str,value));
logging.basicConfig(__kwargtrans__({format:FORMAT}));
log.addHandler(handler);
var size=os.stat(fn).st_size;
var fig=oldfig(...args,__kwargtrans__(kwargs));
export var ix=np.unravel_index(i,ax.shape);
pd.DataFrame(arr);
neighbors.remove(parent);
g.__name__;
var C=numpy.swapaxes(temp,1,2);
n+=1;
var b=a.reshape(-1,N);
pylab.close(fig);
fmt.Println(s);
export var nextB=py_iter(self.Blist);
var s=requests.session();
var args=parser.parse_args();
self._lock=threading.Lock();
var b=pd.Series(pd.np.random.randn(1E5));
cap.set_markeredgewidth(10);
export var short_sha=repo.git.rev_parse(sha,__kwargtrans__({short:4}));
thread.start();
var cols=[2,2];
var objects=models.GeoManager();
var ax2=ax.twinx();
Foo.f=f;
var result=Image.composite(background,foreground,mask);
var form=BlogForm(request.POST);
var __left0__=colorsys.rgb_to_hls(r,g,b);var h=__left0__[0];var l=__left0__[1];var s=__left0__[2];
export var sgn=n<0?-1:1;
export var attr_names=function(){var __accu0__=[];for(var c_attr of inst.mapper.column_attrs)__accu0__.append(c_attr.key);return __accu0__}();
tuple([1,8,1,1]);
var a=np.where(np.isnan(a),b,a);
var a=1;
print(rPM(PROCESS,ADDRESS1,ADDRESS2,64,ctypes.byref(bytes_read)));
var stdscr=curses.initscr();
b2.grid(__kwargtrans__({row:0,column:1,pady:10,padx:10,sticky:Tkinter.SE}));
var a=6.75;
var line=infile.readline();
print(i);
false;
var new_array=a==b;
print(x);
df2;
Queue(__kwargtrans__({maxsize:0}));
print(normalized(A,2));
self._bymonth;
M.append(counter);
print(df);
asyncio.get_event_loop().run_until_complete(wait_first());
var a=A();
export var std_dev=math.sqrt((s0*s2-s1*s1)/(s0*(s0-1)));
export var logo=logo.resize(tuple([100,100]),Image.ANTIALIAS);
var auth_handler=urllib.request.HTTPBasicAuthHandler();
var node=path[-1];
var flattened=np.array(function(){var __accu0__=[];for(var i=0;i<numImages;i++)__accu0__.append(x_data[i].flatten());return __accu0__}());
print(get_title());
l1.__getslice__(0,target_index,1);
outf.write(int(line,16));
var i=1;
print(driver.current_window_handle);
log.write(message);
t.start();
var yi=np.linspace(Y.min(),Y.max(),1E3);
ast.parse(code);
var b=[6,7,8,9,10];
var cur=con.cursor();
export var pickled_string=pickle.dumps(a);
tuple([fit.params[1],fit.params[0]]);
export var dave=person;
var data=np.arange(-50,50).reshape(10,10);
agf(2);
print(out.decode());
var curdir=os.getcwd();
env.AddPreAction(target,action);
s.indices(sys.maxsize+2);
var paw=models.CharField(__kwargtrans__({max_length:2,choices:paws}));
export var wide_df=pandas.read_csv(mockcsv,__kwargtrans__({index_col:[0,1,2],header:[0,1,2]}));
self._post_init(srid);
execute(task,__kwargtrans__({hosts:hosts}));
Delete();
print(x,y);
self.close();
var n=len(lst);
t.start();
print(s);
FigureCanvasWxAgg.__init__(self,parent,-1,self.figure,__kwargtrans__(kwargs));
w.writerows(data);
export var roundedA=a.py_replace(__kwargtrans__({hour:0,minute:0,second:0,microsecond:0}));
self.crawled_urls.py_update(function(){var __accu0__=[];for(var x of cur.fetchall())__accu0__.append(x[0]);return py_iter(__accu0__)}());
json.dumps(dudette.json());
df[cols];
set(a).intersection(set(b))==set(a);
export var n_values=np.hstack([[0],n_values]);
output.close();
var result=dict({});
var q=session.query(myClass);
export var cNorm=colors.Normalize(__kwargtrans__({vmin:0,vmax:py_values[-1]}));
root.mainloop();
print(slugify(text));
transaction.py_get().addAfterCommitHook(redirect_to_trial,__kwargtrans__({kws:kwargs}));
main();
gtk.main_quit(...args);
var input=[server];
print(line_with_keyword);
dict_del;
export var countries_dict=dict(COUNTRIES);
sb.palplot(sb.color_palette(__kwargtrans__({n_colors:8})));
today.year-born.year-1;
yacc.yacc();
__all__.py_update(borrowed_globals);
var a=[-2,-2,0,0,0,0,0];
df.index=pd.to_datetime(df.date);
[5];
testfunc();
export var average_speed=numpy.average(speeds,__kwargtrans__({weights:speeds>0}));
np.random.seed(0);
gc.collect();
var question=Question.objects.py_get(__kwargtrans__({pk:id}));
var __left0__=mpl.colorbar.make_axes(plt.gca(),__kwargtrans__({shrink:.5}));var ax=__left0__[0];var _=__left0__[1];
print(len(Example));
main();
f.write(content);
var driver=webdriver.Firefox();
print(yaml.dump(a));
var X_test=np.concatenate(tuple([X_test,catVar]),__kwargtrans__({axis:1}));
np.ndarray(arr.shape,dtype2,arr,0,arr.strides);
var lg=numpy.where(lg==-numpy.inf,0,lg);
ReturnStatement().act();
256*tup[1]+tup[0];
importlib.import_module(module);
_f_array.__getitem__([a,b]);
var b=attrdict();
var a=pixels.__getslice__(0,num_pixels,1);
s.close();
f.read();
c.close();
big_array[chosen_slice][chosen_part];
self.mouth=1;
var start=datetime(start_year,start_month,1);
export var wnd=gtk.Window();
G_mean1.append(G);
self.setLayout(self.hlayout);
print(df2);
var __left0__=heapq.heappop(heap);var prod=__left0__[0];var x=__left0__[1];var y=__left0__[2];
var hxs=HtmlXPathSelector(response);
var response=client.get_spot_price();
print(serializer.getvalue());

py_metatype.__new__(metacls,py_name,bases,dct);
df;
d[x]=[];
var N=int(eval(input()));
self.window=gtk.Window(gtk.WINDOW_TOPLEVEL);
var fit0=gev.fit(data);
print(sum);
var x=5;
var x=sum(starmap(similarity,product(a,b)));
_compile(pattern,flags).findall(string);
self.request.send(self.data.upper());
process(arg);
f(a);
sb.toString();
var pil_im=Image.fromarray(cv2_im);
var response=requests.post(url,__kwargtrans__({data:data,headers:headers}));
var laparams=LAParams();
var V=(1/r).sum(__kwargtrans__({axis:1}));
tornado.ioloop.IOLoop.instance().start();
var result=dict({});
chr(97);
text;
var cell=sheet.cell(r,c);
export var going=false;
self.add_widget(my_box1);
x_decor.py_sort(__kwargtrans__({key:function __lambda__(itm){return itm[1]}}));
f.close();
self._list.__delitem__(key);
var cursor=conn.cursor();
var args=parser.parse_args();
_clients[py_name];
var data=np.ones(N,__kwargtrans__({dtype:dtype}));
heapify();
codecs.unicode_escape_decode(x)[0];
plt.plot(xx,piecew(xx));
net.addConnection(FullConnection(hidden0,hidden1));
var loc=ax.xaxis.get_major_locator();
print(op(1,2));
export var polygon=plt.Rectangle(tuple([x,y]),w,h,__kwargtrans__({color:c}));
var y=defaultdict(function __lambda__(){return defaultdict(function __lambda__(){return 0})});
a==b;
var out=[];
x;
request.user.is_authenticated()&&request.user.is_admin;
Logger.manager.getLogger(py_name);
plt.colorbar();
M.sum(tuple([0,1]));
self.left.sillywalk();
export var print_lock=threading.Lock();
var __left0__=np.linalg.eig(np.cov(xy));var eigvals=__left0__[0];var eigvecs=__left0__[1];
var d=json.loads(h);
activation.undo();
do_something(server.local_bind_port);
cups_lib.cupsFreeDests(num_dests,dests_p);
scheduler.start();
ids.extend(list(range(int(xr[0]),int(xr[1])+1)));
var ax=fig.add_subplot(111);
table.wrapOn(c,width,height);
a==b|a!=a&b!=b;
export var OPTION_C=1<<2;
dir(parrot);
var a=A();
var child_count=instance.children.count();
self.stream.write(msg.encode(self.stream.encoding));
_members_[key]=value;
root.wait_visibility();
var nums=[1]*n;
var image=cv2.cvtColor(img,cv2.COLOR_GRAY2BGR);
tree.parse(source,parser);
client.auth_token=gdata.gauth.OAuth2TokenFromCredentials(credentials);
t.join();
var B=np.where(A==value)[0];

var points=[tuple([0,10]),tuple([10,20]),tuple([20,40]),tuple([60,100])];
var b=randint(0,10);
var arr=[[]];
np.array([u[1],-u[0]+np.sqrt(u[0])]);

list(range(len(list1),2));
true;
var out=(mask*prior_reci+~mask*(.1*prior_reci)).sum(1);
BaseObject.x;
canvas.create_image(Math.floor(image.size[0]/2),Math.floor(image.size[1]/2),__kwargtrans__({image:image_tk}));
df[numeric_cols].apply(zscore);
tk.Tk.__init__(self);
c[c<0]=0;
order_array.dtype;
self.i=i;
var __left0__=np.ogrid.__getitem__([tuple([0,500,1]),tuple([0,500,1]),tuple([0,500,1])]);var x=__left0__[0];var y=__left0__[1];var z=__left0__[2];
var style=window.get_style();
var b=numpy.power(a,2);
self.write_cell(sheet_name,cell,existing_value,updated_format);
src/Makefile;
var ax1=fig.add_subplot(212);
tuple([min(start1,start2),max(end1,end2)]);
array_of_strings.__getitem__([0,0]).__getitem__([0,0]);
print(list(zip(x,y)));
new_dic_defaultdict[1][2]=5;
df;
sys.modules[module_name]=module;
var T=numpy.linspace(-10,10,100);
!(true==0);
event.Skip();
print(d);
original_init(self,a);
var data=function(){var __accu0__=[];for(var [h,v]of zip(header,zip(...py_values)))__accu0__.append([h,v]);return dict(__accu0__)}();
tuple([entropy(data)-weighted_ent,subset1,subset2]);
new_string;
var df=pd.DataFrame(data2);
var frame=cv.RetrieveFrame(cap);
sift(0,i);
a.__setslice__(1,4,null,[9,7]);
jython;
var C=np.dot(A,B);
var __left0__=np.histogram(data,__kwargtrans__({bins:50}));var hist=__left0__[0];var bins=__left0__[1];
var c=list(zip(...b));
deletesieve.__getslice__(0,null,item);
var my_dict=dict(function(){var __accu0__=[];for(var k of input_list)__accu0__.append(tuple([k,some_func(k)]));return py_iter(__accu0__)}());
screen.nodelay(true);
var http=cred.authorize(httplib2.Http());
export var FFT_FREQS_INDS=-numpy.ones_like(FFT_FREQS);
var result=_addup(n);
hets.append(1-pf);
fh.write(bytes);
var t=threading.Thread(__kwargtrans__({target:self.handle_request,args:tuple([c])}));
s.truncate(0);
self.background_color=[1,1,1,1];
self.logger.error(error.message);
pp.show();
export var first_length=len(first)+1;
plt.gca().add_collection(coll);
l1.__getslice__(0,target_ibdex+1,1);
Math.pow(x,m*n);
work_with_cube(array.__getitem__([x,y,z]));
__all__[module_name]=m;
export var logkde=kde.score_samples(Vecpoints);
var auth=OAuthHandler(consumer_key,consumer_secret);
export var ygrid=np.linspace(y.min(),y.max(),100);
print(number_string.__getslice__(0,2,1));
export var nearest=min(sources,__kwargtrans__({key:function __lambda__(s){return distance(s,demand)}}));
export var target_metadata=Base.metadata;
var source=urllib.request.urlopen(url).read();
var times=list(range(8,21,4));
bool(tuple([]));
print(felf.__name__,felf.__doc__);
var d=datetime.datetime(2011,2,28);
Py_DECREF(args);
print(sys.version);
pl.figure(__kwargtrans__({figsize:tuple([10,5])}));
event.canvas.draw();
ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy());
print(match.group());
ax2.grid(false);
print(calendar.month(2011,8));
Contexts;
var app=QtGui.QApplication(sys.argv);
file_handle.write(text);
index.append([keyword,[url]]);
var suite=eval(sys.argv[1]);
var xyz=np.array(tuple([x,y,z]));
self.members.append(person.key);
sites[parts[0]].append(fname);
export var some_value=new_value;
var r=tf.reduce_sum(A*A,1);
var y=random.random();
faction;
true==1;

object.__new__(cls,...args,__kwargtrans__(kwargs));
self.height=height;
celery.current_app.control.inspect().ping();
df2.A.plot();
self;
var match=regex.match(line);
export var x_coord=radius*np.sin(theta)*np.cos(phi);
export var conds=[x<0,x>0&x<1,x>1&x<2,x>2];
var obj=Test();
img1_k.append(0);
conn.send(chunk);
d.append(x.kpc);
word.istitle();
var B=np.array([[7,8,9],[10,11,12]]);
readline.clear_history();
total+=nested_sum(item);
var channel=client.invoke_shell();
print(x);
export var common=len(set(left)&set(right));
export var wa=np.bincount(a);
var folder=FTPTree();
smtp.connect(mx[1]);
var b=A(20);
self._seed=tuple([int(x)+1,int(y)+1,int(z)+1]);
print(thetd.string);
var b=a+tuple([4,5,6]);
var x=foo();
var writer=csv.writer(fin);
x.py_pop(l-i);
ax.invert_yaxis();
Decimal.__round__;
var t=np.arange(0,1,.001);
B.append(a);
client.set_missing_host_key_policy(AllowAllKeys());
export var preproc=image/average;
Page.__init__(self,...args,__kwargtrans__(kwargs));
self.assertDictEqual(dict1,dict2);
print(d);
print(Xfit_mono);
var matches=function(){var __accu0__=[];for(var x of lst)if(fulfills_some_condition(x))__accu0__.append(x);return __accu0__}();
np.sum(v);
int(argv[1]);
angle+=2*math.pi;
var axes=fig.add_subplot(1,1,1);
print(f.__dict__);
us.append(dict(zip(fs,t)));
print(a===b);
var result=doc.getvalue();
minList.append(a);
deletepak[IP].chksum;
self.show();
var py_name=StringField();
pr.disable();
var m=int(n*(log(n)+log(log(n))));
tuple([[false,true,false]]);
var x=frozenset(x);
var L=function(){var __accu0__=[];for(var each=0;each<5;each++)__accu0__.append(list(range(5)));return __accu0__}();
self.thisobj=obj.thisobj.clone();
export var final=np.zeros(tuple([6*N,6*N]),__kwargtrans__({dtype:A.dtype}));
var ax=plt.gca();
print(converted_value,py_typeof(converted_value));
var data=json.loads(st);
var author_id=models.AutoField(__kwargtrans__({primary_key:true}));
db.collection.py_update(criteria,objNew,upsert,multi);
a.__getitem__([j,i]);
cdf.append(total);
email;
var A=.5*((1-s)*np.cos(a-b)+(1+s)*np.cos(a+b));
self.object_list=self.get_queryset();
np.maximum.at(diam,data.__getitem__([tuple([0,null,1]),0]),dist_to_center);
export var vif=minv.dot(corr).dot(minv);
var y=numpy.array([4,5]);
var n=ord(b);
var fd=sys.stdin.fileno();
var regex=re.compile(regex_string,re.MULTILINE);
logger.handlers.py_pop();
print(tuple([item,others]));
tuple([hours,minutes,seconds]);
view_func(request,authenticated_by_ip,...args,__kwargtrans__(kwargs));
df.sum();
var data=function(){var __accu0__=[];for(var x=0;x<data_size;x++)__accu0__.append(math.sin(2*math.pi*freq*(x/frate)));return __accu0__}();
var X=np.array(function(){var __accu0__=[];for(var n of cell)__accu0__.append(tuple([n.x,n.y,n.z]));return __accu0__}());
var result=function(){var __accu0__=[];for(var [k,g]of groupby(lst,f))for(var i of k?g:tuple([sum(g)]))__accu0__.append(i);return __accu0__}();
print(sys.version);
export var death_month=death_data.py_get(2).value;
var module=__import__(module_name);
dreload(myCoolModule);
print(server.div(10,2));
py_typeof(filt);
resize_canvas();
export var features=tf.parse_example(batch_serialized_examples,feature_to_type);
var __except0__=ValueError(msg.format(a,b,c,len(L)));__except0__.__cause__=null;throw __except0__;
export var recurddict=function __lambda__(){return defaultdict(recurddict)};
cache.product_part_number;
config;
self.axes=self.fig.add_subplot(111);
pygame.init();
list(OrderedDict(function(){var __accu0__=[];for(var tup of data)__accu0__.append([frozenset(list(Counter(tup).py_items())),tup]);return py_iter(__accu0__)}()).py_values());
K.mean(K.pow(y_true-y_pred,2)*W);
calculator.show();
var today=date.today();
index+=1;
beeper();
export var lr=LinearRegression(__kwargtrans__(params));
var fig=plt.figure();
tuple([rows,cols]);
exampleItem.exampleName(row,column,py_name);
dot(self.Vt.__getslice__(0,n,1).T,(self.dinv.__getslice__(0,n,1)*p).T).T;
NULL;
var soup=BeautifulSoup.BeautifulStoneSoup(s);
var server_url=app_identity.get_default_version_hostname();
print(line);
print(word);
var __left0__=tuple([a[b],a[mask]]);var x=__left0__[0];var y=__left0__[1];
set.add(item);
var names=np.random.choice(np.arange(N),__kwargtrans__({size:100,py_replace:false}));
print(repr(strs));
var AFMT_S16_NE=ossaudiodev.AFMT_S16_LE;
self.countdown(10);

print(browser.url);
export var logging_thread=threading.Thread(__kwargtrans__({target:logData,args:tuple([input_queue])}));
ret[l[1]].add(l[0]);
l.append(v);
self.y_without_NaNs=y.copy();
var a=np.random.randn(100,2500);
var a=np.random.randint(0,100,1E3);
plt.subplot(122);
0;

var metadata=sa.MetaData();
self.right.py_pop();
var soup=BeautifulSoup(HTML);
Foo.initStuff();
index.py_sort();
var D=C.reshape(tuple([1,8]))[0];
print(pd.DataFrame(d1));
var input_file=sys.stdin;
var now=dt.datetime.utcnow();
ax.yaxis.set_major_formatter(EpiCycleScalarFormatter());
item_q.put(StopIteration);
var data=file_.read();
var py_values=function(){var __accu0__=[];for(var e of CommonNames)__accu0__.append(e.value);return __accu0__}();
var a=[0]*10;
print(x.__getitem__([0,tuple([0,null,1])]));
var draw=ImageDraw.Draw(im);
print(key,value);
print();
ax.axis([1,1E4,1,1E5]);
var b=jpeg.read(1);
readline.set_completer(MyCompleter().complete);
A-mean;
something;
work();
self._log_handler;
var schema=etree.XMLSchema(schema_root);
var p=figure(__kwargtrans__({width:400,height:400}));
self.app.exec_();
var G=function(){var __accu0__=[];for(var [_,x]of groupby(enumerate(L),function __lambda__(i_x){return i_x[0]-i_x[1]}))__accu0__.append(list(x));return py_iter(__accu0__)}();
var found=false;
yaml.load(s);
fhandle.seek(1,1);
np.sum(Math.pow(r,2)-r)*4;
a.__dict__;
export var rand_num=random.randint(0,99);
var logger=logging.getLogger("./P2JSnippets.py");
var basis=function(){var __accu0__=[];for(var n of[0,1,2])__accu0__.append(function __lambda__(x,n){if(typeof n=="undefined"||n!=null&&n.hasOwnProperty("__kwargtrans__"))var n=n;return n*x});return __accu0__}();
im.set_data(arr);
var canvas=Canvas(master);
os.path.splitext(fname)[0].__getslice__(8,null,1);
var temp=function(){var __accu0__=[];for(var line of datfiles[0])__accu0__.append(line.py_split());return __accu0__}();
print(list(l));
export var TOP=os.path.dirname(os.path.dirname(your_application.__file__));
a[key]=b[key];
keybd_event(Key,0,2,0);
f.encoding;
var conn=session.connection();
print(key,value);
var fig=plt.figure();
var df=grouped.aggregate(function __lambda__(x){return tuple(x)});
time.sleep(5);
self.bcount=0;
current+=os.path.getsize(path);
outputStream.close();
var grouped=df.groupby(py_keys);
x[-1];
var y=list(range(h));
a.dtype;
event.accept();
count+=1;
tuple([xcen,ycen]);
pickle.loads(pickle.dumps(x));
var pos=available[random.randint(0,len(available)-1)];
var idx=a.cumsum();
var G=nx.DiGraph();
sleep(.1);
tf.random_uniform_initializer(-init_range,init_range);
event.canvas.draw();
os.lseek(fd,0,os.SEEK_END);
self._global_wealth=value;
s[positives].mean();
var i=0;
var length=len(string);
listOf[elem].append(idx);
var b=a.ravel();
plt.setp(ax2.get_yticklines(),__kwargtrans__({visible:false}));
sys.exit(app.exec_());
true;
w.start();
self.b=b;
true;
var fig=pyl.figure();
var a=collections.OrderedDict();
HTMLParser().unescape(s.get_data());
var out=np.bincount(id[mask1]-1,x[mask1]);
im.putalpha(mask);
export var slen0=len(s);
asyncore.loop();
explore();
print(repr(s));
py_next(f);
secondTest();
pd.isnull(y);
list(A.instances);
var x=[[1,2],1,1,[2,1,[1,2]]];
signal.alarm(seconds);
var app=Application(__name__);
tuple([2,2,2,2,2,2,2,2]);
types_dict[t].py_setdefault(k,[]).append(v);

getattr(self,py_name);
f(__kwargtrans__({x:2}));
var myDict=defaultdict(int);
self.delete_async().get_result();
degrees(acos(distance))*69.09;
var v1=e.args[0];
998;
to_translate.translate(translate_table);
var myfile=opener.open(myurl);
var __left0__=np.histogram2d(y,z,__kwargtrans__({bins:50}));var h=__left0__[0];var yedges=__left0__[1];var zedges=__left0__[2];
var df=df.reset_index();
g();
ax2.grid(false);
L[i]+=L[i-1];
export var cased=function __lambda__(c){return c.upper()!=c||c.lower()!=c};
print(random_array.dtype);
self.queue=queue;
l.append(42);
print(p,np.nonzero(rowsum==p)[0]);
seenstrings.add(s);
var result=input(msg).strip();
var x=np.random.random(50);
stuff();
user_sessions.append(session.pk);
unittest.TestSuite(function(){var __accu0__=[];for(var [num,expected]of data)__accu0__.append(MyTest(num,expected));return py_iter(__accu0__)}());
ax.xaxis.major.formatter._useMathText=true;
1(a,c);
analytics_data;
g.add_edge(p,from_p);
var A=sp.lil_matrix(tuple([5,5]));
print(foo.output);
var numbers=function(){var __accu0__=[];for(var ni of names)__accu0__.append(d[ni]);return __accu0__}();
var result=[];
total_count+=1;
export var b_result=[];
round(2.4);
dill.detect.badtypes(f,__kwargtrans__({depth:1}));
self.current+=1;
self._app=app;
any(function(){var __accu0__=[];for(var x of mylist)__accu0__.append(x>4);return py_iter(__accu0__)}());
r_getname();
export var sf=pd.DataFrame(data,__kwargtrans__({index:[0]}));
bad.getparent().remove(bad);
q.task_done();
var now=datetime.datetime(2009,5,5);
dict([[t.tag,map(etree_to_dict,t.iterchildren())||t.text]]);
export var lines_list=file_handle.readlines();
myapp/__init__.py;
var __left0__=np.linalg.svd(a,__kwargtrans__({full_matrices:false}));var U=__left0__[0];var s=__left0__[1];export var Vh=__left0__[2];
var gen=function(){var __accu0__=[];for(var x of a)for(var y of b)__accu0__.append(tuple([x,y]));return py_iter(__accu0__)}();
export var o1=np.argsort(arr1);
export var pro=subprocess.Popen(cmd,__kwargtrans__({shell:true,preexec_fn:os.setsid}));
var r=requests.py_get(get_url,__kwargtrans__({auth:auth}));
var font=ImageFont.truetype(font_path,font_size);
agf(1);
export var cust=models.ForeignKey(Customer);
numpy.save(memfile,a);
np.power(x1,x2);
export var ax6=plt.subplot(gs.__getitem__([2,tuple([2,null,1])]));
self.setFocus();
var py_keys=list(d1.py_keys())&l1;
var browser=webdriver.Chrome();
Evaluation.INCLUDE_AND_PRUNE;
var y=np.load(filename);
client.logout();
t.cancel();
stack.append([]);
self.output_pipe.close();
var cipher=AES.py_new(key,AES.MODE_CBC,iv);
self.sock=sock;
writer.writerow(row);
export var rails=list(range(numrails-1))+list(range(numrails-1,0,-1));
main();
set_children_clip_box(cbar_ax,hdl.get_clip_box());
print(group_names(names,num_pages));
var white=tuple([255,255,255]);
tz._transition_info;
print(N,i,sum/(N*Math.pow(2,i)));
logger.addHandler(fh);
sorted(value,__kwargtrans__({key:sort_by,reverse:reverse}));
newarray[ivec[j]]=averank;
a+b;
var box=tuple([70,70,100,100]);
now+=datetime.timedelta(__kwargtrans__({days:7}));
a[a==255]=1;
export var child_queue=queue_manager.Queue();
var new_time=time.time();
var output=buf.getvalue();
Y[i]=Y[i-1]*decay;
var driver=webdriver.Firefox(firefox_profile);
imgdata.seek(0);
export var collection=PatchCollection(patches,__kwargtrans__({cmap:plt.cm.hsv}));
np.rec.fromarrays(test2.T,mytype);
var p=Pool(1);
list_.append(df);
var u=np.array([1,0,0]);
print(item);
self._initialize(result);
export var Final_Product=A.reshape(-1,R).dot(Combinations.T).T.reshape(-1,M,N);
print(core.publish_string(text));
var opener=urllib.request.build_opener(urllib.request.HTTPCookieProcessor(cookie_jar));
self._queue.put(line);
page.mainFrame().load(QUrl(url));
outf.truncate();
var p=pyaudio.PyAudio();
print(df2);
abort(404);
var response=self.browser.submit();
var app=QApplication(sys.argv);
any(function(){var __accu0__=[];for(var t of threads)__accu0__.append(t.start());return py_iter(__accu0__)}());
var a=tf.Variable(a0);
pent_new(i);
1-y|2-n|1-n|1-n;
var d1=function(){var __accu0__=[];for(var [i,[key,value]]of enumerate(d.py_items()))if(__mod__(i,2)==0)__accu0__.append([key,value]);return dict(__accu0__)}();
export var y_itp=r*np.outer(np.sin(theta_itp),np.sin(phi_itp));
export var provided=set();
plt.show();
log(e);
tuple([self.__dict__,self.__class__.PARAM]);
var z=r*cos(phi);
(fn(x+delta)-fn(x))/delta;
var w=QtGui.QWidget();
self.sys_stderr=sys.stderr;
set(larry)==set(moe);
c[0];
kwargs.append(params);
var sentence=[];
s.__getslice__(0,null,2)+s.__getslice__(-1-__mod__(len(s),2),null,-2);
driver.quit();
found.add(item);
os.dup2(self.prevfd,self.fd);
doSomething();
var hash=hashlib.md5();
df.date2=pd.to_datetime(df.date2);
var application=QtGui.QApplication(sys.argv);
self._succ_map[self];
print(oct(stat.S_IMODE(mode)));
user;
B.__setitem__([tuple([0,null,1]),I],A.__getitem__([tuple([0,null,1]),L==I]).sum(__kwargtrans__({axis:1})));
tuple([cmd,call(cmd,__kwargtrans__({stdout:outputfile,stderr:STDOUT}))]);
test;
var response=br.submit();
self.filter(__kwargtrans__({age__gte:min,age__lt:max}));
export var six_months=date.today()-relativedelta(__kwargtrans__({months:+6}));
test();
var item=self.listWidget.takeItem(self.listWidget.currentRow());
export var startTime=time.time();
self.get_queryset();
_a(arctan2(c[1],c[0]),Math.pow(Math.pow(c,2).sum(0),.5));
mat.reshape(m,-1).__setitem__([tuple([0,null,1]),np.arange(r)*(r+1)],np.nan);
array;
py_metatype.__new__(mcs,py_name,bases,dict);
shlex.py_split(command);
10<a&&a<20;
int(argv[1]);
var seconds=int(time.time()-time_start)-minutes*60;
var matrix=np.array(function(){var __accu0__=[];for(var i=0;i<24;i++)__accu0__.append(i);return __accu0__}()).reshape(tuple([6,4]));
Atomic.register(bytes);
fd.floatarr(pointer(ip),pointer(fpp));
var d=np.sqrt(Math.pow(n-n.T,2)+Math.pow(m-m.T,2));
var gray=cv2.equalizeHist(gray);
export var prefix=a[0].__getslice__(0,prefix_len,1);
var x=0;
cax.get_xaxis().set_visible(false);
export var itemtypes=meta.ManyToManyField(ItemType);
lSongs.append(info);
D.__bases__;
print(format_exception(e));
export var date_set=set(date_list);
export var beginx=0;
var x=numpy.arange(20).reshape(tuple([4,5]));
export var widemapIV=dict(function(){var __accu0__=[];for(var x of zip(normal,wide))__accu0__.append(tuple([ord(x[0]),x[1]]));return py_iter(__accu0__)}());
w.setCompleter(c);
self.submit.grid(__kwargtrans__({row:1,column:2}));
instance.project=Project.objects.py_get(__kwargtrans__({title:offset}));
var df=DataFrame(np.arange(25).reshape(5,5));
[self.from_db_value];
var json_dict=json.load(f);
print(instance.Field1);
tuple([new set([0,0,0,0,0,0,0])]);
WSGIScriptAlias/khdx/home/galdosd/khdxweb/rel/khdx/apache/django.wsgi;
plot(arange(44));
a.__setitem__(x,tuple([a[x],a[y]]));
export var mindist=numpy.min(pdist(x));
setattr(obj,py_name,value);
w.close();
x+y+z;
var vals=redis.hgetall(key);
var __left0__=plt.subplots(__kwargtrans__({nrows:2,ncols:2}));var fig=__left0__[0];var axes=__left0__[1];
plot(dayswanted,y,__kwargtrans__({label:label}));
var s=socket.socket();
client.service.Method(parameter);
export var _objects=models.Manager();
export var new_rrule_object=pickle.loads(serial_str);
export var fnn=buildNetwork(trndata.indim,5,trndata.outdim,__kwargtrans__({outclass:SoftmaxLayer}));
list(upper.__getslice__(upper.index(strs[0]),upper.index(strs[-1])+1,1));
add(a,b);
export var funcs=[run,jump];
plt.plot(a);
item_q.put(item);
axes.set_xlim(min(latencies),max(latencies)*1.01);
print(i,l[i]);
export var array_data=array([1,-1,1,-1,1,-1,1,-1,1,-1]);
l[i]+=10;
print(xml_files[-1]);
var data=numpy.random.random(tuple([nx,ny]));
datetime.datetime.fromtimestamp(dt).isoformat();
var A=np.unique(A);
var shape=a.shape.__getslice__(0,-1,1)+tuple([a.shape[-1]-window+1,window]);
(function(){var __accu0__=[];for(var arg of inspect.getargspec(foobar).args)__accu0__.append(locals()[arg]);return __accu0__})();
var cols=df.columns.tolist();
var d=function(){var __accu0__=[];for(var [k,g]of groupby(data,__kwargtrans__({key:itemgetter(0)})))__accu0__.append([k,dict(function(){var __accu1__=[];for(var x of g)__accu1__.append(x.__getslice__(1,null,1));return py_iter(__accu1__)}())]);return dict(__accu0__)}();
c.notify_all();
var root=tk.Tk();
self.loop.start();
M.add_edge(1,2,__kwargtrans__({weight:7}));
cv.WriteFrame(writer,frame);
endwhile;
var df1=df.copy();
var q=Queue.Queue();
print(self.path);
ch.setLevel(logging.ERROR);
print(words);
seed+=1;
random.shuffle(unfrozen_set);
var A=py_next(rng1);
d[i]+=1;
cmp(self.value,obj.value);
list(dic.py_values());
print(test.class_method());
tuple([a.x,a]);
self.a=1;
logging.basicConfig(__kwargtrans__({level:logging.INFO}));
var b1=B.objects.create();
ast.literal_eval(max(lengths,__kwargtrans__({key:len})));
cursor.execute(cmd);
plt.setp(ax.yaxis.get_gridlines(),__kwargtrans__({clip_path:circle}));
var __except0__=KeyError;__except0__.__cause__=null;throw __except0__;
var root=tk.Tk();
i+=1;
self.height*self.width;
subplot(122);
map(itemgetter(0),_);
process(line);
var z=np.random.random(tuple([len(ra),1]));
i+=1;
var ax2=fig2.add_subplot(1,1,1);
D.__setitem__([i,j],abs(x[i]-x[j]));
collection.append(item);
var left=int(input());

url;
processes.append(row[2]);
MyMixin.__mro__;
a.__getslice__(8,9,1);
print(c.fetchall());
ret[l[1]].add(l[1]);
var d1=p[1]-b[1];
var b=function(){var __accu0__=[];for(var i=0;i<20;i++)if(__mod__(i,2)==0)__accu0__.append(i);return __accu0__}();
export var facecolor=plt.gcf().get_facecolor();
var img2=cv2.merge([r,g,b]);
help(itertools);
d1[k_d1]=b1[k_d1];
var s=date(d.year,d.month,15);
a*x*x+b;
self.append(py_next(self._num_gen));
var request=urllib.request.Request(url);
client_socket.shutdown(1);
var x_fit=np.linspace(x[0],x[-1],1E3);
var browser=Firefox();
var result=[productcode,amountentered]+changecoins;
self.create_main_frame();
var __except0__=NotImplementedError;__except0__.__cause__=null;throw __except0__;
_realssl.sslwrap_simple(sock,keyfile,certfile);
var g=s.groupby([s.index.year,s.index.month]).mean();
df2;
var path=sys.path.copy();
np.apply_along_axis(nGauss,-1,x1,mu,cov);
result.append(perfect_corr);
buf.append(line);
self.mps_in_process.remove(kill_id);
[1.85,9.6];
key;
var gb=df.groupby(group);
export var newstdout=os.dup(1);
var response=memcache.py_get(request.my_name);
img.size=tuple(function(){var __accu0__=[];for(var i of img.size)__accu0__.append(i*10);return py_iter(__accu0__)}());
export var roll_right=np.roll(img,i,__kwargtrans__({axis:1}));
var a=np.random.rand(dim,dim);
random.shuffle(sequence_containing_x_vals);
export var for_js=int(time.mktime(d.timetuple()))*1E3;
var cols=function(){var __accu0__=[];for(var ele of cols)__accu0__.append(ele.text.strip());return __accu0__}();
np.array(set.union(set(a),b));
f.seek(block_number*BLOCK_SIZE,2);
var b=function(){var __accu0__=[];for(var x of a)if(l.count(a[x])==1)__accu0__.append(x);return __accu0__}();
findContours(maskCirc.clone(),vertices,CV_RETR_LIST,CV_CHAIN_APPROX_NONE);
row.append(model.get_value(dragged_iter,i));
export var MAIN_SURF=pygame.display.set_mode(tuple([x,y]));
print(o.x+5);
__all__[targetclass]();
self.widget.bar();
mask[sample_indexes]=0;
get_long_path_name(str(short_path_name),buffer,BUFFER_SIZE);
export var sindata=np.sin(data);
export var keyValList=function(){var __accu0__=[];for(var i=0;i<10;i++)__accu0__.append(tuple([i,i*2]));return __accu0__}();
var b=[2,6,7];
jinja2.Markup(scrubber.Scrubber().scrub(text));
self.data.__getitem__(key);
norm(5,5).pdf(7);
var j=Job.objects.py_get(__kwargtrans__({pk:1}));
var __except0__=ctypes.WinError();__except0__.__cause__=null;throw __except0__;
var sidx=ids.argsort();
self.initialized();
plt.subplot(121);
var count=sum(function(){var __accu0__=[];for(var f of files)__accu0__.append(__in__(os.path.splitext(f)[-1],extensions));return py_iter(__accu0__)}());
self.start_urls.append(urllib.parse.unquote_plus(link[0]));
var d2=threading.Thread(__kwargtrans__({target:dep2}));
var model=Sequential();
export var ctpMocks=[mock.Mock(),mock.Mock()];
ret.append(tuple([point[0],point[1]-2*(point[1]-TOP_RIGHT[1])]));
self.__dict__[key];
var indices=rng.random_integers(0,len(y_pred)-1,len(y_pred));
ax.yaxis.set_major_formatter(y_format);
tuple([1,0,0]);
var args=parser.parse_args(argv.__getslice__(1,null,1));
self.buffer=[1]*size;
var bar=[4,5,6];
self.start_urls=start_urls;
dict([[x,-y-1],[z,2]]);
export var y_bin_midpoints=y_bins.__getslice__(0,-1,1)+np.diff(y_bins)/2;
loop.close();
self.get_queryset().hard_delete();
export var prefixes=function(){var __accu0__=[];for(var i=0;i<len(key);i++)__accu0__.append(key.__getslice__(0,i+1,1));return py_iter(__accu0__)}();
var z=2*round(y/2);
print(the_matrix[0][1][2]);
screen.blit(circle_surface,POS);
var root=Tk().withdraw();
var board=[];
var url=sel.select(item_url_xpath).extract()[0];
children.append(parse_inner(toks));
response;
var nums=function(){var __accu0__=[];for(var x of sys.argv.__getslice__(1,null,1))__accu0__.append(float(x));return __accu0__}();
print(title.text);
lcms.cmsDoTransform(xform,byref(inbuf),byref(outbuf),1);
newRow.append(row[i]);
var output=dict({});
var data_string=json.dumps(data);
dss.delete(py_keys);
var __left0__=np.linalg.lstsq(x,y);var a=__left0__[0];var _=__left0__[1];var _=__left0__[2];var _=__left0__[3];
print(tuple([a,b,c]));
myfoto.write(block_of_data);
forward_tunnel(local_port,remote_host,remote_port,transport);
main.show();
var flags=FLAG1|FLAG8;
print(request.path);
var a=np.array([1,2,np.py_NaN]);
var a=[];
new set([new set([inline_admin_form.pk_field.field])]);
var b=np.zeros(tuple([N,n]),a.dtype);
glViewport(0,0,self.width,self.height);
self._fileobj.__exit__(...args);
var string=fp.read();
ATE0;
export var polB=patches.Polygon(xyB,__kwargtrans__(kwargsB));
primes.append(a[0]);
s.index=pd.DatetimeIndex(s.index);
to_translate.translate(translate_table);
cgitb.enable();
p.join();
grp.div(grp.shift(-1)).groupby(__kwargtrans__({level:0})).nth(0);
var df=pd.DataFrame(__kwargtrans__({data:data.__getslice__(1,null,1),columns:data[0]}));
self.should_run.set();
len(self.__dict__);
q.put(e);
var y=array([[[2.5]],[[6.5]]]);
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
var filename=wget.download(url);
self.stream.write(self._convert_row(row));
var b=len(may_b);
a.b;
func.__code__.co_argcount;
insert(d,keyList1,value1);
ylim([0,25]);
parentView.setMouseTracking(true);
ax2.yaxis.set_tick_params(__kwargtrans__({size:0}));
export var tdlist=[];
false;
x+=1;
print(ret[-2].__getslice__(6,null,1));
var a=pd.Series(pd.np.random.randn(1E5));
var reader=csv.reader(f);
obj_as_dict;
print(len(connection.queries));
var ax2=ax1.twinx();
var __left0__=sys.exc_info();var py_metatype=__left0__[0];var value=__left0__[1];export var traceback=__left0__[2];
np.append(xs,remain);
Func(function __lambda__(x){return self(x)-other(x)});
i+=1;
f.write(data);
stack[-1][-1][-1]+=token;
getattr(self,self._attr_name);
print(findItem(a,b));
pathqueue.put(path);
true;
f.quit();
collatz(12);
py_next(it);
ch.setLevel(logging.DEBUG);
np.percentile(S,[0,100]);
export var lifetime=models.IntegerField();
var a=[7,14,0,9,19,9];
- - - -APP1;
self.inbox=self.outlook.Folders(folderindex);
np.maximum(one,two);
print(user.last_message_time);
print(char);
py_next(it);
5-.5615;
plt.show();
writer.writerow(line);
print(x.__getslice__(0,null,-1));
var d=dict({});
start_date.py_replace(__kwargtrans__({month:start_date.month+1}));
attr(...args,__kwargtrans__(kw));
var extension=os.path.splitext(file_name)[1];
export var house_list=[];
var now=datetime.now();
var start=time.time();
t.join();
window.show();
wx.lib.pdfwin;
client.set_options(__kwargtrans__({wsse:security}));
local.py;
self.logger.log(self.level,message);
r/np.sqrt((r*r).sum(0));
result[nearest].append(demand);
a==b;
root.mainloop();

self.ui.PoseBtn_GridLayout.setColumnMinimumWidth(4,4);
x;
var soup=BeautifulSoup(html_google);
export var col_combos=cartesian([py_new.columns.__getslice__(1,null,1),master.columns.__getslice__(1,null,1)]);
self.value;
print(x);
Py_DECREF(result);
print(new_arr);
var a=np.array(function(){var __accu0__=[];for(var _ of y)__accu0__.append(np.array(list));return __accu0__}());
getattr(self.__class__,method).__code__.co_argcount-1;
p.close();
print(soup.prettify());
self.__dict__.py_update(dill.loads(obj).__dict__);
var f=s.makefile();
var resp=make_response(df.to_csv());
var ind=np.array(list(range(59022)));
loop.call_soon(watch_for_file,args.file_path);
var b=Counter(a);
var f=urllib.request.urlopen(req);
j.set_color(colors[i]);
your_file.py;
var y=np.cos(x);
var app=Flask(__name__);
paths.extend(find_all_paths(graph,node,end,path));
session.add(f);
sorted(strings,__kwargtrans__({key:collator.getSortKey}));
var x=12;
var app=Tk();
letters.reverse();
item;
ctrlText.SetBackgroundColour(wx.BLACK);
var __left0__=np.histogram(datas,bins);var hist=__left0__[0];var bin_edges=__left0__[1];
rconsole;
writer.write_table();
show(layout);
var ax=plt.gca();
export var small_primes=primes.__getslice__(0,bisect.bisect(primes,n),1);
doSomething(a);
results.append(list(itertools.product(allfiles,allfiles)));
export var clientImage=np.asarray(bitmapBits,__kwargtrans__({dtype:np.uint8})).reshape(height,width,4);
export var pen=QPen(QColor(255,0,100),1,Qt.SolidLine);
var df_list=pool.map(reader,file_list);
self.zimg_id=self.canvas.create_image(event.x,event.y,__kwargtrans__({image:self.zimg}));
a*b;
print(df.apply(assign_metric_vals,1));
var size=len(data);
dis.dis(haskey);
var a=np.arange(11);
var result=[];
fn(Af,rc1f,rc2f);
var data=urllib.parse.urlencode(forms);
var x=np.mgrid.__getslice__(-2,5,complex(0,120));
os.strerror(2);
true;
PyMODINIT_FUNC;
var user=cursor.fetchone();
q.append(item);
export var myHist=plt.hist(data,100,__kwargtrans__({normed:true}));
ax.autoscale(true);
tag.py_update();
count+=1;
div(self.rop,self.lop);
tuple([1,2]);
[1,2,1];
(function(){var __accu0__=[];for(var [i,j]of zip(data,data.__getslice__(1,null,1)))if(i.__getslice__(0,-1,1)==j.__getslice__(0,-1,1))__accu0__.append([i,j]);return dict(__accu0__)})();
export var ncols=sheet.ncols;
f[1].data;
cls.x=value;
export var STARTLSB=[0];
print(str(py_keys));
subprocess.call([cmd,your_executable_to_check_here]);
Foo.__class__=Base;
replaced.append(text.__getslice__(pos,m.start(),1));
self._table=[];
print(item);
var info=dict({});
a(1,2,__kwargtrans__({x:10,y:20}));
notify.uninit();
word_list.append(line.rstrip());
B[i][j]=[i,j];
var l=sc.recv(1024);
dis.dis(my_fun);
prctl(PR_SET_PDEATHSIG,SIGHUP,0,0,0);
manager.start();
Author.objects.all();
var water_held=0;
ipca.partial_fit(data.__getslice__(i*chunk_size,(i+1)*chunk_size,1));
var __left0__=np.where(r)[0][[0,-1]];export var rmin=__left0__[0];export var rmax=__left0__[1];
export var only_singulars=function(){var __accu0__=[];for(var w of noun_list)if(w==en.noun.singular(w))__accu0__.append(w);return __accu0__}();
partition(list(range(105)),10);
var obj=jsonpickle.decode(result.content);
pool.apply_async(parallel_worker);
database.py;
print(end_date);
var x=np.arange(-1,1,.2);
var __left0__=np.meshgrid(x,x);var X=__left0__[0];var Y=__left0__[1];
page+strplus(1);
df;
result.add(now);
print(num);
f.readline();
fib(x-1)+fib(x-2);
python-V;
[2,4,6,8];
var tree=html.fromstring(page_as_string);
myservice.listen();
4;
OrderedDict().monkey();
outputFile.close();
export var garbage=[];

var output=check_output(cmd,__kwargtrans__({shell:true,stderr:STDOUT})).lower();
self.transport.write(line);
print(a);
export var factory=APIRequestFactory();
points.set_data(x,y);
obj.isoformat();
fut.set_exception(e);
export var list_dir=os.listdir(path);
var center=vor.points.mean(__kwargtrans__({axis:0}));
a|b|(x|y);
var set1=set(list1);
event.widget.tk_focusNext().focus();
var img_file=BytesIO();
libfile.py;
var n=np.empty_like(df);
response;
ax2.yaxis.tick_right();
var py_values=list(i.py_values());
var a_list=list(map(int,query.py_split()));
export var avg_round2=float(sum(function(){var __accu0__=[];for(var [_,_,b]of players)__accu0__.append(b);return py_iter(__accu0__)}()))/len(players);
imp.load_module(py_name,f,path[0],info);
mat2[1][i]=0;
sock.close();
[];
export var text_area=Text(frame);
deletetokens.__getslice__(0,null,1);
is_even(0);
button.grid(__kwargtrans__(buttons[b]));
var x=min(function(){var __accu0__=[];for(var [key,value]of list(d.py_items()))__accu0__.append(tuple([key,abs(value-v)]));return py_iter(__accu0__)}(),__kwargtrans__({key:function __lambda__(k_v){return k_v[1]}}))[0];
var __left0__=linwcs(np.amin(glon),np.amax(glon),len(glon));export var cdeltaX=__left0__[0];export var crvalX=__left0__[1];
self.daemonize();
celery.worker.job.RESULT_MAXLEN=1048576;
count[letters]+=1;
thread.interrupt();
var wb=load_workbook(filename,__kwargtrans__({use_iterators:true}));
var u=json.loads(s,__kwargtrans__({object_hook:json_util.object_hook}));
columnindex+=bytechunk/sizeof(double);
self.value;
dir(foo);
export var vfunc=np.vectorize(func);
var res=res.add(c,__kwargtrans__({fill_value:0}));
pprint.pprint(r.__dict__);
cropped_example.show();
do_sth_with(i,item);
delattr(this,n);
s[s!=0];
list(d);
print(pix.__getitem__([x,y]));
var b=function(){var __accu0__=[];for(var x of b)__accu0__.append(float(x));return __accu0__}();
re(integrate(1/(x-y+I*eta),tuple([x,-1,1]))).simplify().subs(dict([[eta,0]]));
var out=function(){var __accu0__=[];for(var x of a)for(var y of b)__accu0__.append(tuple([x,y]));return __accu0__}();
var a=[4,5,0,0,6,7,0,1,0,5]*1E3;
pairwise.fill(np.nan);
sh.write(n,0,col1_name);
export var step_1=pd.concat([df,just_dummies],__kwargtrans__({axis:1}));
self.assertEqual(val1,val2);
self._validate_unique(self);
var r=n-len(s);
var data=sorted(data,__kwargtrans__({key:keyfunc}));
var df=pd.DataFrame(ts);
(1+1+1)*1/10;
session.auth=tuple([username,password]);
var im=Image.open(sys.argv[1]);
print(list(split_text(d)));
df.a=df.a.astype(float).fillna(0);
r(sys.argv[1]);
A.__setslice__(0,null,2,A.__getslice__(0,null,2)+.1);
ax.zaxis.label.set_rotation(a);
M.__setitem__([i,tuple([0,null,1])],M.__getitem__([i,tuple([0,null,1])])*-1);
colNameList.append(desc[0]);
f();
self.buffer=[1]*size;
self.clear_cache();
db.system.users.find();
print(len(content));
var result=func(...args,__kwargtrans__(kwargs));
var s=set(function(){var __accu0__=[];for(var dic of lis)for(var val of list(dic.py_values()))__accu0__.append(val);return py_iter(__accu0__)}());
Counter(dict(zip(vocab,counts)));
sys.excepthook=info;
self.data4undo=[rowstart,colstart,text4undo];
print(tuple([dict1,dict2]));
var fig=plt.figure();
self.overrideredirect(true);
var r=csv.reader(f);
var labels=function(){var __accu0__=[];for(var item of ax.get_xticklabels())__accu0__.append(item.get_text());return __accu0__}();
functools.reduce(function __lambda__(x,y){return str(x)+sep+str(y)},x);
np.diff(np.insert(np.where(np.diff(a)==1)[0]+1,0,0)).__getslice__(0,null,2);
lat.py_iter().zip(lon.py_iter());
true;
foldl(f,f(head,acc),tail);
student.save();
var filename=askopenfilename();
true;
plt.show(plot);
self._lock.release();
var doc=QtGui.QTextDocument();
var m=np.ma.masked_where(np.isnan(array),array);
print(x);
show(p);
var bar=models.CharField();

var x=[.1,.2,np.nan,.4,.5];
0;
export var uid=pw.pw_uid;
mix_matrices(A,B);
var form=cgi.FieldStorage();
var y=np.sin(u)*np.sin(v);
var mylist=function(){var __accu0__=[];for(var x of mylist)__accu0__.append(math.isnan(x)?0:x);return __accu0__}();
p.py_name;
var idx=np.where(mask.ravel());
sum+=value;
export var prediction=tf.nn.softmax(logits);
var x=[0]*a.count(0);
var data=vals.__getslice__(8,null,1);
print(resp.status);
Package-2/namespace/__init__.py;
var x=Foo();
export var extra_field=db.Column(db.Integer);
print(Foo().get_counter());
app;
var products=models.ManyToManyField(Product,__kwargtrans__({through:ProductQuantity}));
var d=dict([[1,[1]]]);
var ax=plt.axes(__kwargtrans__({polar:true}));
irenR.Initialize();
pylab.figure();
export var watcher=Watcher();
export var inqueue=mp.Queue();
var target_path=os.path.join(TARGETDIR,member.filename);
result.append(array[mask]);
do_action();
var __left0__=tee(iterable);var a=__left0__[0];var b=__left0__[1];
var py_keys=sorted(py_keys);
var created=models.DateTimeField(__kwargtrans__({auto_now_add:true,db_index:true}));
x+=np.random.randn(6)/10;
var pixels=pygame.surfarray.pixels2d(srf);
var y=x;
self.feed(data);
export var blog_post_mapper=mapper(BlogPost,blog_post_table);
pickle.dump(d,f1);
df.dtypes;
ax.xaxis.tick_top();
print(custom_sort(population));
self.before.append(other);
tuple([1,1,1]);
export var running_median=function(){var __accu0__=[];for(var k=0;k<total_bins;k++)__accu0__.append(np.median(Y[idx==k]));return __accu0__}();
circles1.detectcollision(particles1);
var args=parser.parse_args();
export var myfunc=itertools.cycle([0,1]).__next__;
var dists=np.sqrt(Math.pow(data_sorted.__getitem__([tuple([0,null,1]),tuple([1,null,1])])-seed_ext.__getitem__([tuple([0,null,1]),tuple([1,null,1])]),2).sum(1));
time.sleep(1+random.random()*5);
export var dropbox_path=os.path.join(dropbox_destination,relative_path);
var queryset=User.objects.all();
var f=urllib.request.urlopen(link);
print(x);
var __left0__=a.shape;var h=__left0__[0];var w=__left0__[1];
var title=models.CharField(__kwargtrans__({max_length:225}));
var columnNames=function(){var __accu0__=[];for(var d of cursor.description)__accu0__.append(d[0].lower());return __accu0__}();
print(df);
self.start();
var resource=WSGIResource(reactor,reactor.getThreadPool(),app);
print(s.recvfrom(65565));
var __left0__=tuple([ulst[i],ulst[j]]);ulst[j]=__left0__[0];ulst[i]=__left0__[1];
frame.Show();
each.make_noise();
n+=1;
smtp.connect();
srf.blit(f.render(unistr,true,tuple([0,0,0])),tuple([0,0]));
export var tai_timestamp=(gps_time_as_tai-tai_epoch_as_tai).total_seconds();
export var accepted_eula=models.BooleanField();
date;
var r=requests.py_get(url);
l.extend(other);
map(int,strnumbers);
timeit(function __lambda__(){return list(fulldict.py_keys())});
export var withiny=random.randrange(y1,y2+1);
suds.client.Client(URL,__kwargtrans__({transport:https}));
zip(...[py_iter(seq)]*n);
httpd.serve_forever();
self.check_all();
np.bincount(c);
self.model.fit(...args,__kwargtrans__(kwargs));
true;
count[x]+=1;
self.num=num;
export var month_end=month_dates[-1];
var image=image.resize(tuple([1E3,800]),Image.ANTIALIAS);
p.join();
var height=max_height*len(lines);
var Z=clf.predict(np.c_.__getitem__([xx.ravel(),yy.ravel()]));
func();
export var mySmallSquareIterator=cycle(function(){var __accu0__=[];for(var i=0;i<10;i++)__accu0__.append(i*i);return py_iter(__accu0__)}());
!CHECK_INV_RE.search(mystring);
export var child_strs=function(){var __accu0__=[];for(var child of self.children)__accu0__.append(child.display());return __accu0__}();
var xticks=ax.xaxis.get_major_ticks();
font.setPointSize(20);
var start_urls=[];
self.con.write(data);
plt.figure();
a&&b||c;
runUntil(end);
export var joined=pd.concat([master,other_data],__kwargtrans__({axis:1}));
c[1].append(2);
comb_dict.py_setdefault(key,0);
var __left0__=tuple([B,A]);var A=__left0__[0];var B=__left0__[1];
output;
var bins=np.arange(256).reshape(256,1);
var counts=Counter(x);
export var lats=np.linspace(-90,90,bm.shape[0]).__getslice__(0,null,-1)*np.pi/180;
f[0];
1.1-int(1.1);
var seen=set();
export var half=(x.max()-x.min())/2;
random.random();
var words=line.py_split();
export var other_list=[];
py_iter(self.list);
socks.setdefaultproxy(socks.PROXY_TYPE_SOCKS4,proxy_ip,port,true);
d.append(Distance(_,__kwargtrans__({unit:u.kpc})).value);
var im=cvt2cga(imgfn);
BOOST_PYTHON_MODULE(hello);
var a=cyclicallist([0,1,2]);
f();
file.close();
self.kNN.fit(X2,y2);
export var assigned_to=models.ManyToManyField(__kwargtrans__({to:User}));
var l=[1,0,-2,0,0,4,5,0];
var cursor=cnxn.cursor();
var __left0__=tuple([byweekno]);export var byyearday=__left0__;var byyearday=__left0__[0];export var byeaster=__left0__[1];var byeaster=__left0__[0];export var byweekno=__left0__[1];
sys.excepthook=exception_handler;
export var MSE=Math.pow(Y-EY,2).sum()/(n-X.shape[1]);
p.search(s).group();
export var grand=os.path.join(agrandie,filename);
1/__mod__(i,2);
var s=socket.socket();
bin(a|b);
export var anim=animation.FuncAnimation(fig,animate,__kwargtrans__({frames:Nt}));
result.append(element);
var c=0;
export var y_series_2=[1,2,5,6,7];
var df=pd.DataFrame.from_dict(d_collapsed);
var parser=xml.sax.make_parser();
plt.xlim(0,160);
var l=list(s);
timeout_timer.start();
beats.reverse();
export var ignore=np.zeros([b.shape[0]-1,a.shape[0]-1],__kwargtrans__({dtype:bool}));
export var cumprobs=function(){var __accu0__=[];for(var p of cumprobs)__accu0__.append(p/cumprobs[-1]);return __accu0__}();
jobs.append(p);
app.debug=true;
ts2.head();
map.put(i,i);
tuple([args[0],args[1],args.__getslice__(2,null,1)]);
var a=Swallow();
NP.insert(T,4,c,__kwargtrans__({axis:1}));
var reader=csv.reader(f);
changewriter.writerow(result);
export var Al=A.tolil();
widget.layout().addWidget(label);
var __left0__=np.histogram(x,__kwargtrans__({bins:20,density:true}));var hist=__left0__[0];var bins=__left0__[1];
var sh=logging.StreamHandler();
relaxng.validate(doc2);
callback(arg,self);

transport.close();
s1*s2.py_values;
var listy=function(){var __accu0__=[];for(var item of data)__accu0__.append(item[1]);return __accu0__}();
do_something(logf);
print(py_name);
export var cv=Canvas(root);
export var row_order=np.argsort(r,__kwargtrans__({axis:1})).__getitem__([tuple([0,null,1]),tuple([0,null,-1])]);
s;
self.model=cv2.SVM();
export var s1=function(){var __accu0__=[];for(var i of range(0,11,2))__accu0__.append(i+10);return __accu0__}();
var first=np.mean(arr.__getslice__(0,toslice,1).reshape(-1,stride),__kwargtrans__({axis:1}));
clear_mappers();
section.insert(0,table);
pyplot.show();
export var reloadkeys=set(globaldict)&set(sys.modules);
var result=[];
print(sys.maxsize);
py_typeof(b);
outputs.set_shape(inputs.get_shape());
self.a=a;
int(val);
var fig=figure();
t.close();
var fig=plt.figure(__kwargtrans__({figsize:figsize,dpi:dpi}));
var myset=set();
export var a_thread=threading.Thread(__kwargtrans__({target:get_a}));
export var StartupNotify=py_true;
false;
var sorted_list=sorted(my_list);
file_toload.close();
var t2=function(){var __accu0__=[];for(var [a,b]of zip(t,t.__getslice__(1,null,1)))__accu0__.append(a+b);return __accu0__}();
yacc.restart();
export var ycenters=ychunks.mean(__kwargtrans__({axis:1}));
var minmax=function(){var __accu0__=[];for(var [k,v]of groupby(lst2,function __lambda__(a){return a<0}))__accu0__.append(k?min(v):max(v));return __accu0__}();
base.extend([ii]*count);
plt.yticks(list(range(len(corr.columns))),corr.columns);
aaB;
self.flush();
var brr=np.reshape(arr,arr.shape[0]*arr.shape[1]);
var it=function __lambda__(){return list(chain(...tupleOfTuples))};
true;
var parser=argparse.ArgumentParser();
np.where(np.any(np.isnan(df.convert_objects(__kwargtrans__({convert_numeric:true}))),__kwargtrans__({axis:1})));
my_trigger();
var y2=np.array(function(){var __accu0__=[];for(var t of time)__accu0__.append(f(t,50).real);return __accu0__}());
game.process();
var r=self.build_response(request,resp);
1|MD5;
Column(_groupConcat(_to_seq(sc,[col],_to_java_column)));
var x=datetime.timedelta(__kwargtrans__({hours:hours,minutes:minutes,seconds:seconds}));
help(plt.ylim);
self.assertLengthIsOne(self.seq);
Frame.__init__(self,parent);
757;
760;
761;
pygame.draw.circle(surface,tuple([0,0,0]),tuple([10,10]),15,0);
var Al=[0,x,x,x,x,x];
var times=[800,790,780,770];
example.__getitem__([tuple([1,5,1]),tuple([10,15,1])]);
print(urow_avg);
export var monthToNumber=dict(function(){var __accu0__=[];for(var [i,py_name]of enumerate(months))__accu0__.append(tuple([py_name,i+1]));return py_iter(__accu0__)}());
var t=threading.Thread(__kwargtrans__({target:task,args:tuple([sc,i])}));
characters+=len(word);
export var datafilter=datafilter&Q(__kwargtrans__({publish_date__month:now.month}));
var __left0__=np.meshgrid(thetas,radii);var theta=__left0__[0];var r=__left0__[1];
plt.grid();
var results=parse_jid(sys.argv[1]);
export var sprockets_to_dealloc=self.sprockets.copy();
plt.show();
print(render_user(userinfo));
Z[test.__getitem__([tuple([0,null,1]),tuple([0,2,1])]).T.tolist()]=test.__getitem__([tuple([0,null,1]),2]);
pprint(_);
py_typeof(my_set);
np.concatenate(out);
self.Bind(wx.EVT_TIMER,self.NextFrame);
_*2-math.pi;
var b=formB.save(__kwargtrans__({commit:false}));
var minutes=__mod__(int(secs/60),60);
self.send_response(500);
self.subplot.py_clear();
print(signed_url);
var result=[];
export var sort_index=numpy.argsort(vals);
self.send_response(200);
var s2=df.groupby([function __lambda__(x){return x.year},function __lambda__(x){return x.month}]).sum();
var Z=tf.sqrt(Delta_tilde);
float*cfloats;
getsizeof(json.dumps(my_dictionary));
export var cast=models.ForeignKey(Casts,__kwargtrans__({null:true}));
var d=function(){var __accu0__=[];for(var [i,x]of enumerate(set(a)))__accu0__.append([x,i]);return dict(__accu0__)}();
var a=A();
var fig=plt.figure();
print(len(binary_split_array.tobytes()));
var page=bokeh.plotting.gridplot([[fig],[current_selection]]);
fd.write(data);
var data=clientsocket.recv(1024).decode();
self.loop.stop();
var module=REVERSE_MAPPING[module];
self._set(__kwargtrans__(kwargs));
new_list.append(item+10);
names.append(py_name);
a[np.isnan(a)]=b[np.isnan(a)];
var y=object();
export var num_processes=multiprocessing.cpu_count();
decorator;
print(alist);
var image=tf.cast(image,__kwargtrans__({dtype:tf.uint8}));
dill.detect.badtypes(f);
generate_n_primes(10,1E3);
var count=max(0,len(sequence)-n+1);
cls;
export var pub_key_der=b64decode(pub_key_pem);
self.sync_string(node);
var x=np.linspace(0,2*np.pi,10);
var metadata=MetaData();
grayed_rgb_color;
fdst.write(buf);
self.f=f;
self.item_id=item_id;
var curOuter=db.cursor();
plt.close(fig);
adjlist_find_paths(a,n,m);
var result=contains_sequence(test_iterable,search_sequence);
goto(x,y);
cxt.mount();
new set([new set([message])]);
os.dup2(0,2);
var C=zip(A,B);
p.line(50,660,560,660);
export var inputLayer=[neurons[0],neurons[1]];
export var klass=getattr(mod,py_name);
clips.Reset();
s+=l[i];
print(ret.read());
deletions.append(keepers[key][0]);
var path=os.path.join(directory,fl);
var counts=Counter(zip(predicted,gold));
a[1]=4;
process_messages();
tar.addfile(__kwargtrans__({tarinfo:info,fileobj:string}));
plt.close(fig);
scrollbar.config(__kwargtrans__({command:self.data.yview}));
phrase.capitalize();
var results=q.fetch(10);
export var initial=np.random.rand(1E3);
pl.ylim(-1.2,1.2);
tuple([[8,9,10,11]]);
float(s);
plt.plot(b);
var __metaclass__=ModelBase;
df.plot(__kwargtrans__({ax:ax1}));
(function(){var __accu0__=[];for(var [n,t]of enumerate(zip(...iterables),start))__accu0__.append(tuple([n])+t);return py_iter(__accu0__)})();
schedule_once(tasks.some_task_a,__kwargtrans__({interval:60*5}));
log.append(p.url);
print(a.__getitem__([0,1]));
df.dtypes;
var A=np.random.randint(2,__kwargtrans__({size:tuple([n,n])}));
yaml.add_representer(folded_unicode,represent_folded_unicode);
export var argparser=argparse.ArgumentParser();
file.close();
render_to_response(renderer,py_values);
new_image.show();
var manager=mp.Manager();
var fig=figure();
var queryset=Company.objects.all();

plot(t,s1);
var fig=plt.figure(1,__kwargtrans__({figsize:tuple([figwidth,figheight])}));
eigs(A,n);
Thread(__kwargtrans__({target:read_stdout,args:[process]})).start();
triplets[iT].append(listB[iB]);
f.write(z);
var cursor=connection.cursor();

Math.pow(x,m*m);

var csv_reader=csv.reader(count_file);
var request=urllib.request.Request(url);
x*x*x;
export var np_d_spiky=np.vectorize(d_spiky);
var file_size=py_values[0];
textlist.append(str(a));
var people=result.fetchall();
app.exec_();
var n=np.empty(tuple([1]),__kwargtrans__({dtype:object}));
var R=dot(u,vh);
var messages=Message.objects.all();
var R=random.randint(1,8);
np.lib.stride_tricks.as_strided(a,__kwargtrans__({shape:shape,strides:strides}));
export var item_forms=items_formset();
list(gen_all_substrings(string));
export var kl=KineticLaw(2,4);
test_file.write(bytearray(binary_data));
tuple([1,2]);
numpy.logspace(0,2,10);
self.current-1;
print(a+b+c);
canvas.tag_raise(object);
var start=pd.datetime(2016,5,22,8,0,0);
var b=set(counts.py_keys());
print(i,line.strip());
json.JSONEncoder.py_default(self,obj);
d[key]=dict({});
lst.append(element);
self.fc2=FigureCanvas(self._fig);
foo(bar);
var __left0__=tuple([a.mean(),a.std(__kwargtrans__({ddof:1}))]);var mean=__left0__[0];var sigma=__left0__[1];
round(x,sig-int(floor(log10(x)))-1);
pd.DatetimeIndex(df.t).normalize();
prime_form(11,1,0);
export var current_dict=current_dict.py_setdefault(letter,dict({}));
plotter(im,i);
print(new_a);
a.run();
var b=datetime.timedelta(__kwargtrans__({minutes:1,seconds:1}));
var n=len(points)-1;
var m=random.randint(0,1E6);
blocks.append([]);
P.show();
foo+bar;
print(l);
msglist.append(chunk);
var node=Node(node,category,py_name);
setattr(F,py_name,TextField(py_name.title()));
sess.run(init);
export var newshapes=np.diag(np.array(shape)-1)+1;
gevent.spawn(read_stream,p1.stderr);
list.append(self,x);
print(np.all(rs.__getitem__([find_map_sorted(r2.__getslice__(0,-10,1),rs),tuple([0,null,1])])==r2.__getslice__(0,-10,1)));

deleteresult[key];
plt.plot(function(){var __accu0__=[];for(var x=0;x<11;x++)__accu0__.append(x*slope);return __accu0__}());
var now=datetime(datetime.now().year,datetime.now().month,1);
chr(26);
var x=np.asanyarray(x);
train_idxs.append(X_train_1.__getslice__(i_1,i_1+1,1).index);
var f1=plt.figure();
var response=HttpResponse(__kwargtrans__({content_type:mimetype,status:206}));
var arr=np.empty(function(){var __accu0__=[];for(var a of arrays)__accu0__.append(len(a));return __accu0__}()+[la]);
plt.__getslice__(0,show,1)();
tuple([rank,v.__getslice__(rank,null,1).T.copy()]);
var now=datetime.now();
fp.write(decompressor.decompress(chunk));
self.result=[];
time.sleep(1);
export var mult=np.hstack(tuple([np.repeat(4,p1.shape[0]),np.repeat(2,p2.shape[0]),1,1]));
var tb=e.__traceback__;
print(py_typeof(b));
subnets;
export var db_instance=db_instance_qs.py_get();
main();
export var tabin=function(){var __accu0__=[];for(var char of tabin)__accu0__.append(ord(char));return __accu0__}();
Tkinter.Text.__init__(self,parent,cnf,__kwargtrans__(kw));
var gs=gridspec.GridSpec(1,2,__kwargtrans__({width_ratios:[10,1]}));
var d=dict({});
var persons=function(){var __accu0__=[];for(var x of my_strings)__accu0__.append(re.match(pattern,x).groups()[0]);return __accu0__}();
var y=np.empty(tuple([Ndown,Ndown]));
myfunc();
var theta=x[1];
models.Model.__new__(cls,...args,__kwargtrans__(kwargs));
ingredient_list.append(ingredient);
var expanded=os.path.expanduser(dirpath);
client(clientsocket,address);
y.__setslice__(0,null,null,np.where(mask,np.nan,np.log(r)*np.sin(t)));
var log=logging.getLogger();
a[index]=1;
a.show();
var line=line.strip();
sleep(1);
var l=p.stdout.readline();
self._val+=1;
os.chdir(curdir);
plt.boxplot(data);
a.__setitem__([tuple([1,4,1]),tuple([1,4,1])],np.nan);
print(df1);
print(a.calculate(1));
export var coeffs2=np.corrcoef(a.todense(),b.todense());
ax.draw_artist(ellip);
var pixels=img.load();
print(find_centroid(im,1));
self.x+other;
var time=rrdMetric[0][0];
n*fact(n-1);
var A=np.linspace(0,100,200);
zip(a,b);
plt.bar(ind,dat,__kwargtrans__({color:col,bottom:bot}));
deleteoutputter;
var a=int(part);
child.interact();
do_something_else();
b.B();
var __left0__=train_test_split(X,y,__kwargtrans__({test_size:.2}));var X_train=__left0__[0];var X_test=__left0__[1];var y_train=__left0__[2];var y_test=__left0__[3];
a.denominator;
var labels=ax2.get_xticklabels();
webElement.py_clear();
var x=[[1,2],1,1,[2,1,[1,2]]];
self.app(environ,start_response);
export var len_arrayIN=arrayIN.shape[0];
self.col0=[1,0,0,1];
print(x[n-1]);
var F=treecomp(T,L);
(function(){var __accu0__=[];for(var i=0;i<len(L)-sep;i++)__accu0__.append(L[i]+L[i+sep]);return __accu0__})();
r.content;
export var tempShape=tuple(function(){var __accu0__=[];for(var [i,j]of zip(finalShape,mults))__accu0__.append(i*j);return __accu0__}());
self.nodes[self.get_index(key)];
ret.append(tuple([point[0]-2*(point[0]-TOP_RIGHT[0]),point[1]]));
q.put(i);
args.insert(0,sys.executable);
print(textwrap.dedent(s));
foo.__new__(foo,__kwargtrans__({arg:1}));
d4.py_update(d2);
time.sleep(self.timeout);
data.py_pop(word.__getslice__(i-1,i,1));
var rest=function(){var __accu0__=[];for(var i=0;i<len(factors);i++)if(!__in__(i,which_is))__accu0__.append(factors[i]);return __accu0__}();
token.authorize(client);
s.upper();
~Q(Q);
var test=np.random.normal(0,1,1E3);
f(f,...p,__kwargtrans__(kw));
system/__init__.py;
export var field_class=forms.ModelMultipleChoiceField;
ax[1].plot(dates,list(range(10)));
self.quit(file);
BisBigger.data=np.where(BisBigger.data<0,1,0);
sum;
export var UTC_OFFSET_TIMEDELTA=datetime.datetime.utcnow()-datetime.datetime.now();
var ax=fig.add_subplot(111);
var __left0__=zip(...create_matchs(list1,list2));var new_list1=__left0__[0];var new_list2=__left0__[1];
swap(L.__getslice__(0,null,1));

plt.figure();
var client=Client(url);
var user_input=eval(input());
var form=ImportExcelForm(request.POST,request.FILES);
s.ix.__getslice__(x,y,1);
export var spade=4;
var w=png.Writer(len(s[0]),len(s),__kwargtrans__({greyscale:true,bitdepth:1}));
var result=input(s);
connect_signal2_to_slot2();
self.page=QWebPage(self);
data[i].py_pop(pos);
np.allclose(method1,method2);

x.extend(a);
var columns=len(py_next(reader1));
sum+=number;

pool.join();
export var ls=function(){var __accu0__=[];for(var l of ll)__accu0__.append(set(l));return __accu0__}();
self.assertEqual(Foo.query.count(),0);
foo.do_interesting_stuff();
export var lstB=[number_list[i]];
var tcpcounter=0;
var udpcounter=0;
var sums=function(){var __accu0__=[];for(var [i,v]of enumerate(tab))if(i+4<=len(tab))__accu0__.append(sum(tab.__getslice__(i,i+4,1)));return __accu0__}();
var d=dict({});
y.__setslice__(1,null,null,x.__getslice__(1,null,1)-x.__getslice__(0,-1,1));
f.write(FOOTER);
var flags=re.MULTILINE|re.DOTALL;
glMatrixMode(GL_MODELVIEW);
var new_df=new_df.fillna(0).astype(int);
true;

logging.basicConfig(__kwargtrans__({stream:sys.stderr,level:logging.DEBUG}));
var field2=models.TextField();
var d=dict({});
pattern.search(t);
pd.DataFrame(function(){var __accu0__=[];for(var [cn,cv]of zip(colnames,col_iterator))__accu0__.append([cn,cv]);return dict(__accu0__)}());
System.out.println(i);
self.worker=Worker(self.spinbox.value());
var result=list(zip(...withspaces));
var b=[tuple([10,40]),tuple([40,60]),tuple([60,90]),tuple([90,100])];
print(hex2(-1));
var arr=eval(repr([[0]*5]*10));
self.py_name=py_name;
basicConfig(__kwargtrans__({level:log_level}));
var df2=df1.copy();

var last=row[1];
tuple([44.44444444444444,55.55555555555556,66.66666666666667]);
size-=len(data);
img.save(file_out);
a.py_update(b);
var x=np.arange(10*10).reshape(tuple([10,10]));
print(shortcut.Targetpath);
json.dumps(serialize(obj));
var days=df.groupby(diffs).size();
df;
var df1=df.copy();
rectangle.draw();
true;
iterate_file(file_name);
dev1==dev2;
var rows=results(exec_immediate(connection,sql));
start_date.py_replace(__kwargtrans__({month:1}));
var data=res.read();
export var MAKE_NOISE=false;
document.write(xmlhttp.status+xmlhttp.statusText);
var gen=get_line();
b.f();
frame.Show();
var red=np.random.hypergeometric(nred,ngreen+nblue,m);
export var toc=time.clock();
var p=pyaudio.PyAudio();
export var his=np.histogram(a,__kwargtrans__({bins:list(range(5))}));
dst.copy_key(k.key.py_name,src,k.key.py_name);
export var secs=x.total_seconds();
var a2=A.objects.create();
self.__getattribute__(key);
acos(cos_x)*EARTH_RADIUS_IN_MILES;
self.value=1/(1+math.exp(-x));
export var test_Dict=dict({});
p.join();
var a=np.random.rand(10,10,10);
os.makedirs(self.cache_location);
func(...args);
var r=view(request,...args,__kwargtrans__(kwargs));

root.after(0,download_chunk);
export var long_desc=forms.CharField(__kwargtrans__({widget:forms.Textarea}));
var fig=matplotlib.pyplot.figure();
filename;
ax.set_xticks(ind+width+width/2);
a2.append(s);
export var combinedRDD=zdd1.join(zdd2).map(function __lambda__(k_v){return k_v[1]});
var new_row=row;
self.comovingdist(z)/(1+z);
triple(square(x));

print(path);
var response=opener.open(request);
result.append(current_string_split);
plt.legend();
var fig=plt.figure();
print(self.__ordered_fields__);
var desired_list=list(d.py_values());
var app=QtGui.QApplication(sys.argv);
(function(){var __accu0__=[];for(var [k,v]of list(py_items.py_items()))__accu0__.append([k,len(v)==1?v[0]:v]);return dict(__accu0__)})();
characters.append(char_image);
secondbut.pack();
export var col_order=np.argsort(r,__kwargtrans__({axis:0})).__getitem__([tuple([0,null,-1]),tuple([0,null,1])]);
x+y;
self._load();
extract_file.write(bytearray(binary_data));
do_stuff;
c.save();
self.tin=wx.TextCtrl(self,__kwargtrans__({size:wx.Size(600,400),style:wx.TE_MULTILINE}));
var A=np.random.randn(1E3,2E3);
var pdf=FPDF();
t.setDaemon(true);
var lens=function(){var __accu0__=[];for(var col of zip(...s))__accu0__.append(max(map(len,col)));return __accu0__}();
var result=set();
py_metatype.__call__(A);
var d=dict({});
self.tab.removeTab(index);
listofzeros;
frags.append(py_items[0]);
create_object(__kwargtrans__({form_class:FooForm}));
abcba;
abcdcba;
abcdedcba;
py_items.append(function __lambda__(i){if(typeof i=="undefined"||i!=null&&i.hasOwnProperty("__kwargtrans__"))var i=i;return dump(i)});
var x=[];
print(v);

new set([new set([formset.empty_form.as_p])]);
tuple([4,[false,true,true,false]]);
binop.setParseAction(function __lambda__(t){return ops[t[1]](t[0],t[2])});
pool.join();
var elements=(len(xedges)-1)*(len(yedges)-1);
cache[args]=f(...args);
ax2.plot(list(range(1,10,1)));
var mydict=dict();
var app=QtGui.QApplication(sys.argv);
var cur=fromdb.cursor();
print(df);
p.html();
OrderedDict(sorted(l));
export var uinfo=user.get_profile();
export var mgr=urllib.request.HTTPPasswordMgrWithDefaultRealm();
len(str(py_name));
var list1=[];
var infilename=os.path.join(path,folder,filename);
export var recursivedict=function __lambda__(){return defaultdict(recursivedict)};
x*x;
[1.000049];
len(n);
var a=numbers()[0];
export var kind2=params.py_get(cls._KIND2_PARAM);
var utc_date=date_aware_la.astimezone(pytz.utc);
self.assertEqual(FooCycle.query.count(),0);
var df=df[col_order];
self.indexdict[r];
chunks.append(chunk);
num+=1;
df;
self.irenL.Render();
1/(x+1);
py_iter(self.__dict__);
var currdir=os.getcwd();
model.setItem(row,column,item);
sys.meta_path.append(self.collector);
track1.play_forever();
var merged=dict();
time.sleep(wait);
root.quit();
flist.append(func);
var b=models.CharField(__kwargtrans__({max_length:42}));
print(mylist);
var out=check_output(args,__kwargtrans__({stderr:t}));
print(np.arange(100).itemsize);
export var kv=function(){var __accu0__=[];for(var i=0;i<len(bits)-1;i++)__accu0__.append(tuple([bits[i][-1],bits[i+1][0]]));return __accu0__}();
logger.addHandler(fhandler);
print(a,b);
o.join();
print(x);
var index=nanargmin(zfit,__kwargtrans__({axis:1}));
sess.run(init);
f.close();
instance._prefetched_objects_cache[instance.children.prefetch_cache_name];
locals().py_update(d);
queue.put(result);
var a=time.time();
self.cub2=cub2;
self.setPixmap(pic);
self.exns.add(node.py_name);
export var callback=tsum.subtask();
my_module.my_reload();
__in__(py_name,self.archive.getnames());
var p=Process(__kwargtrans__({target:instance.start_listener}));
traceback.print_exception(py_metatype,value,tb);


f(__kwargtrans__(kwargs));
var u=np.linspace(0,2*np.pi,50);
var a=5;
vector;
var __left0__=np.mgrid.__getitem__([tuple([min(x),max(x),complex(0,100)]),tuple([min(y),max(y),complex(0,100)])]);var grid_x=__left0__[0];var grid_y=__left0__[1];
export var server_A_thread=threading.Thread(__kwargtrans__({target:server_A.serve_forever}));
Package-1/namespace/__init__.py;
i+=1;
var merged=pd.concat(tuple([df1,d_teams]),__kwargtrans__({axis:1}));
bind(myfn,arg(1),17,arg(0))(19,14);
var fig=plt.figure();
row.append(SchemaTable.Rows[i][j].ToString());
var client=paramiko.SSHClient();
f.seek(4,1);
ax.set_position([box.x0,box.y0,box.width*.8,box.height]);
gc.disable();
var model=QtGui.QStandardItemModel(rows,columns,self.table);
cursor.close();
var a=A.__new__(A,...args,__kwargtrans__(kwargs));
serialize(obj.__dict__);
var __left0__=tuple([axis.get_xlim(),axis.get_ylim()]);var xlim=__left0__[0];var ylim=__left0__[1];

var __left0__=os.path.splitext(filename);var root=__left0__[0];var ext=__left0__[1];
var s=function(){var __accu0__=[];for(var i=0;i<100;i++)__accu0__.append(i);return __accu0__}();
plt.xlim(bin_edges.min(),bin_edges.max());
export var icon=wx.Icon(path,wx.BITMAP_TYPE_PNG);
export var nexts=cycle(function(){var __accu0__=[];for(var it of iterables)__accu0__.append(py_iter(it).__next__);return py_iter(__accu0__)}());
str(int(other).__add__(self));
tuple([al.spline1dcalc(s,val),func(val)]);
var lines=file.readlines();
var now=datetime.now(__kwargtrans__({tz:timezone(zonename)}));
var kOUT=np.zeros(N+1);
timeout_decorator.timeout(GLOBAL_TIMEOUT)(unittest.main)();
nodes[0]=tuple([1,2]);
var d=dict({});

var writer=csv.writer(outfile);
var batch=function(){var __accu0__=[];for(var [i,val]of enumerate(my_deque))if(__in__(i,idx_batch))__accu0__.append(val);return __accu0__}();
tuple([[false,false,false]]);

dis.dis(lis[0]);
main();
wb.SaveAs(newFileName,constants.xlHtml);

self.py_items.append(item);
self.__pList=[];
re.search(self.regex,text);
print(tempfile.gettempdir());
print(data);
a[np.in1d(np.mod(np.arange(a.size),5),idx+offset)]=100;
var t=urllib.parse.unquote_plus(s);
setattr(targetCls,py_name,closure());
var cumsum=function __lambda__(a){return function(){var __accu0__=[];for(var [i,x]of enumerate(a))__accu0__.append(sum(a.__getslice__(0,i+1,1)));return __accu0__}()};
78E4;
txnbkwrfkpkmiexloxrifdsnjumkex;
xlnmlhobtsswjvmqnjupaybkspptpo;
export var difference_in_years=relativedelta(end_date,start_date).years;
S==[]?[]:[S];
var curs=conn.cursor();
df;
f.levels;
var data=json.loads(obj.to_ecma());
setattr(args,self.dest,strategy);
M.__setitem__([tuple([0,null,1]),j],M.__getitem__([tuple([0,null,1]),j])*s);
mutex.release();
widget.setLayout(layout);
export var app1=Flask(__name__);
l.pack();
response;
deleteself[key];
var json=urlopen(request).read().decode();
B().do_something();
HttpResponse(tmplt.render(context));
print(rd[4]);
dis(f);
t.show_all();
turtle.done();
q.put(1);
shuffle(numbers);
print(f(a));
df.py_values;
list(one_duplicate(4));
C-.120282;
var r=np.empty(n,__kwargtrans__({dtype:np.int64}));
rIndex.reassign(9);
df;
self.aws.send(data);
export var five_months_ago=datetime.datetime.now()-relativedelta(__kwargtrans__({months:5}));
cleanfile.append(line);
pool.close();
d[t[0]]=d.py_get(t[0],0)+int(t[1]);
context;
var email=EmailField(__kwargtrans__({required:true}));
export var ustyle=nl.create_userstyle();
var b=np.array([int]);
var x1=(x-x0)*cos(theta)-(h-y-y0)*sin(theta);
self.data=[];
HttpResponseNoContent();
var features=function(){var __accu0__=[];for(var i of tree.tree_.feature)__accu0__.append(feature_names[i]);return __accu0__}();
Point(1,2);
abort(404);
score_pairwise(seq1,seq2,blosum,-5,-1);
df;
var content=db.StringProperty(__kwargtrans__({multiline:true}));
my_func(42);
x();
somelist.remove(x);
nth_element(my_list,4,__kwargtrans__({key:f}));
x.__setitem__([0,1,1],111);
var col=scipy.array([2,4,6,8,10]);
f.write(decodestring(b64data));
socket.inet_ntoa(unpacked);
[[],[]];
y[1][0]=4;
new set([new set([link.href|escape])]);
df.b.loc[s&s!=s.shift(-1)];
var df=pd.DataFrame(rslt[0]);
var C=np.hstack(C);
row.py_pop(4);
var img2=ImageTk.PhotoImage(Image.open(path2));

df;

var root=Tk();
var app=Bottle();
export var holidays=[datetime.date(2012,5,1),datetime.date(2012,6,1)];
print(fileSystemNameBuffer.value);
turtle.forward(n);
print(render());
var request=response.wsgi_request;
print(QWidget);
var res=func(...args,__kwargtrans__(kwargs));
var data=list(range(4E6));
tuple([[0,0,0,0,164,1,161,2,161,4]]);
pt.plot.bar();
getattr(prototype,py_name);
var matrix=function(){var __accu0__=[];for(var _=0;_<M;_++)__accu0__.append(np.random.rand(N));return __accu0__}();
export var unested=function(){var __accu0__=[];for(var sub of nested)__accu0__.append(list(itertools.chain(...sub)));return __accu0__}();
var ax2=ax1.twiny();
Area2(a,b,c)>0;
strmap[string];
button1.pack();
var stdscr=curses.initscr();
w[i]=-1;
f;
export var startingmods=modules.copy();
logOutput.setReadOnly(true);
var z=function(){var __accu0__=[];for(var _=0;_<8;_++)__accu0__.append(function(){var __accu1__=[];for(var _=0;_<8;_++)__accu1__.append(0);return __accu1__}());return __accu0__}();
print(results[0]);
data.append([py_name]+function(){var __accu0__=[];for(var key of obs_keys)__accu0__.append(dct[key]);return __accu0__}());
true;
var reader=csv.DictReader(csvfile);
var index=letters.index(letter);
tuple([[7,14,21]]);
bins.append([min,max]);
fly.rect.y+=fly.vspeed;
var zz=file.readline();
frame1.axes.yaxis.set_ticklabels([]);

self.button.clicked.connect(self.handleTest);
var sc=ax.scatter(x,y,...args,__kwargtrans__(kwargs));
queue.append(new_path);
plt.plot(x,y);
os._exit(0);
print(row);
s.shutdown(socket.SHUT_WR);
print(msg.Body);
result.append(next_third_friday(result[-1]));
weights;
var money=price.quantize(cents,decimal.ROUND_HALF_UP);
print(x);
test[0][0]=1;
export var where_mask=arr.__getitem__([tuple([0,null,1]),tuple([0,null,1]),ind_vals])==py_values;
export var noop=logging.NullHandler();
vals==tuple([0,1]);
(function(){var __accu0__=[];for(var row of m.__getslice__(0,i,1)+m.__getslice__(i+1,null,1))__accu0__.append(row.__getslice__(0,j,1)+row.__getslice__(j+1,null,1));return __accu0__})();
dict.fromkeys(range(4E6));
follow(open(filename));
var __left0__=os.path.py_split(os.path.realpath(sys.executable));export var pythonpath=__left0__[0];var top=__left0__[1];
myThread.setDaemon(py_true);
df;
var serializer=self.get_search_pagination_serializer(page);
var A=np.cos(a)*np.cos(b)-np.sin(a)*np.sin(b)*np.sin(c-d);
import_array();
var x_max=tf.reduce_max(weights);
[];
var row=len(row_names)-1;
getattr(self._wrapped,attr_name);
stdout;
var display=Display(__kwargtrans__({visible:0,size:tuple([800,600])}));
var pyobj=json.loads(json_str,__kwargtrans__({object_hook:as_python_object}));
var z=10*np.random.normal(mu,sigma,5E3);
visited_ids.add(node_a_id);
b[0]=-1;
sns.reset_orig();
reraise_with_context(__kwargtrans__({key:key}));
var new_df=pd.DataFrame();
pp.pprint(tup);
var html=markdown(some_html_string);
(function(){var __accu0__=[];for(var num=0;num<n;num++)if(A[num])__accu0__.append(num);return __accu0__})();
var x=[1,1,0,0,0];
set_time_limit(0);
observer.start();
a==2;
result[feature_name]=(df[feature_name]-min_value)/(max_value-min_value);
pFact.append(num);
export var layer2=[];
var result=float(node.text_content().lower().count(word));
var y1=scipy.sqrt(1-Math.pow(abs(x)-1,2));
print(df2);
export var zero_crossings=numpy.where(numpy.diff(numpy.sign(a)))[0];
print(df);
hold(true);
tuple([1,0,[t]]);
self.connected=true;
var ix=function(){var __accu0__=[];for(var i of df.index)if(!__in__(i,blacklist))__accu0__.append(i);return __accu0__}();
var k=0;
var d=-np.dot(np.array(point),np.array(normal));
app.url_map.strict_slashes=false;
dis.dis(foo.__code__.co_consts[1]);
p.move();
export var creds=tools.run_flow(flow,store);
var y0=self.canvas.canvasy(0);
var oct_num=oct(int(oct_string,8));
var s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);
var output=[[]];
value;
Session.add(f);
fig.canvas.draw();
var gray=im.sum(__kwargtrans__({axis:-1}));
obj.reprJSON();
zip(a,chain(b,[py_next(b)]));
np.dtype(float);
var g=g[g.date>=g.beg_date&g.date<=g.end_date];
export var lst1=[1,2];
delattr(mod,modname);
thefile.write(replacedText);
self.setSelectionMode(QtGui.QAbstractItemView.ExtendedSelection);
0;
sizer.Add(btnRed,0,wx.ALL|wx.CENTER,5);
var b=np.bincount(a);
ax.w_zaxis.set_major_locator(LinearLocator(10));
request.notifyFinish();
packetcount;
writer.grab_frame();
show();
var __left0__=cap.read();var ret=__left0__[0];var frame=__left0__[1];
self.assertEqual(user.username,testuser.upper());
zip(...[py_iter(iterable)]*n);
z().visit(t);
var x=plt.colorbar(__kwargtrans__({ticks:v}));
writer.writerow(line);
var x=X();
bmpf.seek(start);
self.set_encoding(encoding);
var event=threading.Event();
print(cls);
Pagination(query,page,per_page,total,py_items);
sleep(.1);
export var transform=etree.XSLT(etree.XML(xslt));
ret.append(work_on);
export var u_new=np.linspace(u.min(),u.max(),1E3);
export var random_sample_input=random.sample(f.read().py_split(),10);
+- - -__init__.py;
tuple([mailhost,port,self.username,self.password,self.fromaddr]);
var cbar=fig.colorbar(CS,__kwargtrans__({ax:ax}));
A.__init__(self,a);
df_list.append(f);
var response=urllib.request.urlopen(req);
f.write(res);
true;
sys.version_info;
var button=QtGui.QPushButton();
export var prototype=c.CFUNCTYPE(c.c_double,c.c_double,c.c_double);
conn.connect();
django.db.transaction.enter_transaction_management();
itergroup([0,0],0);
ax.plot(xx,yy,zz);
print(q);
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
sps_a.toarray();
tix.Label.__init__(self,parent,__kwargtrans__(kwargs));
var __left0__=np.meshgrid(x,y);var X=__left0__[0];var Y=__left0__[1];
a.__setitem__([i,tuple([0,null,1])],map(float,line.py_split()));
print(list(M.py_keys()));
var server=smtplib.SMTP(smtpserver);
print(self.crawler.stats.get_stats());
items_view.show();
map(second_lowest,lst);
var result=function(){var __accu0__=[];for(var tup of result)__accu0__.append(tuple(function(){var __accu1__=[];for(var item of tup)__accu1__.append(item+minval);return __accu1__}()));return __accu0__}();
var employee=json.loads(j,__kwargtrans__({object_hook:class_mapper}));
create_grid(4,5);
var formset=QuoteFormSet();
wb.save(output);
whos;
dict.__init__(self);
rows*array_shape[1]+cols;
count+=1;
x<1;
print(df1.assign(__kwargtrans__({sum:df1.sum(__kwargtrans__({axis:1}))})));
tuple([8,1,8,8]);
df1.T.max()-df1.T.min();
var mask=(B==i).astype(int);
res[v]+=1;
roots.add(target);
var my_date=datetime.strptime(test_date,date_format);
var __left0__=tuple([a[y],a[x]]);a[x]=__left0__[0];a[y]=__left0__[1];
QListIterator(self);
add_str_to_lines(__kwargtrans__({f_name:f_name,str_to_add:str_to_add}));
os.mkdir(folder_location);
job.delete();
tableWidget.setCellWidget(1,1,ImgWidget2(self));
BaseHTTPServer.test(CORSRequestHandler,BaseHTTPServer.HTTPServer);
export var elem=ElementTree.parse(file);
export var lhs=dict(function(){var __accu0__=[];for(var D of lhs)__accu0__.append(tuple([D[k],py_pop(D,k)]));return __accu0__}());
export var namespace=parser.parse_args();
json.dump(doc,fw,__kwargtrans__({indent:4}));
var f=itemgetter(0);
print(r.getc);
a.extendleft(b.__getslice__(0,null,-1));
var __left0__=plt.gca().get_legend_handles_labels();var handles=__left0__[0];var labels=__left0__[1];
var count=diff.nonzero()[0];
df.dic.apply(pn.Series);
var py_name=models.CharField();
json.dumps(self._items);
s;
test.tell();
var matrix=function(){var __accu0__=[];for(var i=0;i<size;i++)__accu0__.append([0]*size);return __accu0__}();
__builtins__[attr]=getattr(module,attr);
self.output_pipe.close();
result.__setitem__([np.arange(len(x)),inv],1);
l.py_sort(__kwargtrans__({key:function __lambda__(x){return x.lower()}}));
sizer.Add(btn);
result.append(current_set);
your_csv_file.close();
msg;
print(inputList);
var letters=function(){var __accu0__=[];for(var i=97;i<last_letter;i++)__accu0__.append(chr(i));return __accu0__}();
var __left0__=tuple([xgrid[arr==255].mean(),ygrid[arr==255].mean()]);export var xcen=__left0__[0];export var ycen=__left0__[1];
var fd=sys.stdin.fileno();
all_other_cases(param);

to_translate.translate(translate_table);
var ls=[1,7,0,4,9,6,150];

var start=start+math.log(random.random())/i;
logging.basicConfig(__kwargtrans__({level:logging.INFO}));
var a=np.arange(1,1E4,__kwargtrans__({dtype:int}));
var queryset=queryset.filter(__kwargtrans__({py_name:py_name}));
out[int(n)].append(tuple([val,v]));
log_add2(logB,logA);
len(output);
id(a.bar);
np.diff(data.value.index.py_values);
export var path_lengths=nx.single_source_dijkstra_path_length(G,node);
var desired_ages=np.array([1,4,16,29,80]);
print(char1,len(char1),len(char1[0]));
i.append(x);
var __left0__=process.communicate();var stdout=__left0__[0];var stderr=__left0__[1];
index_list.append(i);
var y=a[2]*b[0]-a[0]*b[2];
var xedges=np.linspace(0,N,nbin);
var c=cv.WaitKey(10);
deletetag[attribute];
[x]+xs;
f.__getslice__(0,null,1);
var a=numpy.random.randint(0,10,10)*1;
merge(a,b,function __lambda__(in_a,in_b){return in_a||in_b});
var a=NoBCArray([[1,2]]);
stock_values[stock][days];
interpolator(tuple([lats,lons,alts,time]),data,point);
export var compressedString=zlib.compress(originalString,9);
var tree=etree.iterparse(xml_file);
y.__setitem__([tuple([0,null,1]),tuple([0,null,2])],0);
driver.close();
y.append(x);
p.stdin.close();
indices.append(idx);
data_dict[regNumber]=details;
export var modifiers=QtGui.QApplication.keyboardModifiers();
export var d_view=function(){var __accu0__=[];for(var [k,v]of d.py_items())__accu0__.append(tuple([v,k]));return __accu0__}();
var response=urllib.request.urlopen(req,__kwargtrans__({timeout:int(TIMEOUT)}));
export var eq2=TestableEq();
var args=tuple([CallableWrapper(args[0])]);
int(key);
ax.yaxis.set_major_formatter(ptick.ScalarFormatter(__kwargtrans__({useMathText:true})));
var axe=fig.add_axes([.4,.4,.2,.2]);
func();
var cv_image=img_as_ubyte(any_skimage_image);
Rule(SgmlLinkExtractor(__kwargtrans__({process_value:delete_random_garbage_from_url})));
client.service.GetServiceById(arg1,arg2);
var packet=f.read();
find_merged_group(date_time-1,date_time+1);
df;
f_myfile.close();
sio.seek(0);
ax2.imshow(Z);
print(user.screen_name,user.followers_count);
self.op._getsymbols();
do_something(i);
var df=function(){var __accu0__=[];for(var e of data)__accu0__.append(DataFrame(e));return __accu0__}();
var response=urlopen(url);
export var docfile=open(path);
var groups=conn.get_all_security_groups();
var ax1=fig.add_subplot(111);
pydevd.GetGlobalDebugger().setExceptHook(Exception,true,false);
var cimg=cv2.cvtColor(img,cv2.COLOR_GRAY2BGR);
post_save.disconnect(my_post_save_handler);
natsorted(x,__kwargtrans__({key:function __lambda__(y){return y.lower()}}));
Python-virtualen;
pool.join();
new_cipher.append(letters[letters.index(letter)-shift]);
export var modict=module.__dict__;
_Py_ReleaseInternedStrings();
var a1=sheet.cell_value(__kwargtrans__({rowx:0,colx:0}));
ax.plot(np.cos(x));
print(dict(zip(headers,py_values)));
foo.__getslice__(0,null,1);
var res=np.py_split(idx_sort,idx_start);
os.remove(str(file_path)+xfile);
sympy.simplify(Lagrange(Lx,Ly));
var parser=argparse.ArgumentParser(__kwargtrans__({formatter_class:CapitalisedHelpFormatter}));
var regex=re.compile(re.escape(before),re.I);
var ch=logging.StreamHandler();
var a=int(round(a*255));
self._metadata=MetaData();
list(parser);
var digits=digits.__getslice__(1,null,1);
-Math.floor(-x/500)*500;
var result=np.empty(tuple([m,n]),__kwargtrans__({dtype:np.float}));
var pos=nx.spring_layout(G,__kwargtrans__({fixed:[1,2]}));
print(int(floor(f1)));
export var output_wb=copy_workbook(input_wb);
res.append(0);
temp.append(i.__getitem__([0,j]));
(function(){var __accu0__=[];for(var index=0;index<12;index++)__accu0__.append(get_column(pyQueryRow,index));return __accu0__})();
writer.writerows(function(){var __accu0__=[];for(var row of reader)__accu0__.append(row+[0]);return py_iter(__accu0__)}());
inner();
calendar.timegm(aprilFirst.timetuple());
var html=response.read();
var mod=getattr(mod,comp);
m.load();
export var yourlist=[[0,0,0],[0,1,1],[1,0,2]];
var ax=fig.add_subplot(111);
line_segments.append(function(){var __accu0__=[];for(var [x,y]of vor_.vertices[simplex])__accu0__.append(tuple([x,y]));return __accu0__}());
var __left0__=np.mgrid.__getitem__([tuple([0,2*np.pi,.2]),tuple([0,2*np.pi,.2])]);var X=__left0__[0];var Y=__left0__[1];
export var source_key=source_bucket.get_key(source_key_name);
var out=np.zeros(tot_vec,__kwargtrans__({dtype:int}));
cum.tail(1);
py26;
self.func=func;
var ss=s.py_split();
self.sTitle=os.path.basename(self.fileName);
a+b;
var height=self.canvas1.winfo_height();
var h=function(){var __accu0__=[];for(var i of c.description)__accu0__.append(tuple([i[0],int]));return __accu0__}();
export var fsq=np.fft.rfft(xstep);
logger.setLevel(logging.DEBUG);
end[r[1]].add(r[2]);
l.append(val);
self.statusItem.setEnabled_(TRUE);
unittest.main(__kwargtrans__({argv:unittest.sys.argv}));
export var metadata1=MetaData();
var df=df.append(dff);
waitKey();
var y=10+np.sin(50*2*np.pi*x)+.5*np.sin(80*2*np.pi*x);
concat(dict(__kwargtrans__({A:A,B:B})),__kwargtrans__({axis:1}));
print(longest_common([b,c]));
list(range(5)).__getslice__(5,6,1);
var conn=SSH2();
var user=models.OneToOneField(User);
var f=Foo();
var info=json.loads(urllib.request.urlopen(url).read());
process(line);
export var tic=time.clock();
var self=self.py_setdefault(key,dict({}));
var objects=getattr(a,link).all();
stream.close();
server.test(...[1,2]);
getattr(self,self.object_class);
Model.objects.filter(__kwargtrans__({m2m_field:1}));
export var a_normalized=function(){var __accu0__=[];for(var x of a)__accu0__.append(float(x-min_a)/(max_a-min_a));return __accu0__}();
var serializer_class=UserSerializer;
L.py_sort(my_cmp);
export var examined_modules=[];
export var thislevel=nextlevel;
var __except0__=py_TypeError;__except0__.__cause__=null;throw __except0__;
export var b_minus_a=function(){var __accu0__=[];for(var item of b)if(!__in__(item,a))__accu0__.append(item);return __accu0__}();
var app=config.make_wsgi_app();
print(arr);
export var softmaxval=sess.run(softmax);
MyModel2.mymodel1.through;
var q=m.Queue();
export var USE_SHIPPED_BOOST=true;
var list_2_sorted=function(){var __accu0__=[];for(var e of s)__accu0__.append(e[0]);return __accu0__}();
export var elt=ris[0];
f.__add__(f);
tuple([i,card]);
print(df);
p.parse_args();
-Xmx800m;
dynamic_import_hack(__name__);
import_foo();
print(dingo);
var curs=conn.cursor(MySQLdb.cursors.SSCursor);
var fig=plt.figure();
fn(val1,val2);
max(sum(tableData,[]));
callback(file,mask);
clf.tree_.value;
var p=np.cumsum(np.append(0,z)).__getslice__(0,-1,1);
var _nextkey=0;
result.py_sort();
export var members=models.ManyToManyField(Person);
print(row);
var b=a.__getslice__(0,null,1);
d[x]+=1;
data.show();
export var datum=caffe.proto.caffe_pb2.Datum();
args.append(value);
export var X1D=np.ravel_multi_index(X.T,dims);
A[np.maximum.accumulate(~np.isnan(A))];
yappi.get_func_stats().print_all();
var df2=(df.ix.__getitem__([tuple([0,null,1]),tuple([1,null,1])])-df.ix.__getitem__([tuple([0,null,1]),tuple([1,null,1])]).mean())/df.ix.__getitem__([tuple([0,null,1]),tuple([1,null,1])]).std();
var fig=Figure();
export var tz2=pytz.timezone(tz_string);
export var my_tuples=literal_eval(s);

models.CharField(__kwargtrans__({blank:true}));
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
export var tmpset=set(L2);
set(data)==set(data2);
result;
loss.eval(dict([[input,x],[label,y]]));
a.UID;
ax.scatter(df.index,df.AdjClose);
var __except0__=ImportError;__except0__.__cause__=null;throw __except0__;
var unfiltered=function(){var __accu0__=[];for(var C of originalList)__accu0__.append(tuple([myFunction(C),C]));return __accu0__}();
export var chessboard=Chessboard();
new_test;
self._init_B();
main(sys.argv);
numpy.genfromtxt(io.BytesIO(x.encode()));
ax.set_aspect(1);
a.argmin();
0;
curses.echo();
self.cj.load();
df.shape;
deleteself._dict[key];
Decimal(.2);
var a=1;
A();
var mask=np.random.randint(0,2,a.size);
i+=1;
var indices=heapq.nsmallest(10,np.nditer(arr),__kwargtrans__({key:arr.__getitem__}));
var data=fi.readlines();
var l=s.length;

self.delete(py_name);

base64.encodestring(s);
value;
export var new_ys=function(){var __accu0__=[];for(var point of sorted_points)__accu0__.append(point[1]);return __accu0__}();
var ax2=plt.subplot(gs[1]);
ax.plot(plots[curr_pos][0],plots[curr_pos][1]);
export var manufacturer=models.ForeignKey(production_models.Manufacturer);
var __metaclass__=ValidateType;
export var long_word_set=set(long_word_list.py_split());
data;
var x=x+A.__class__(tuple([xj[w],tuple([w,tempj.__getslice__(0,len(w),1)])]),__kwargtrans__({shape:b.shape,dtype:A.dtype}));
export var small_nda=numpy.arange(25).reshape(5,5)>10;
self.a=a;
var py_items=Item.objects.all();
cub_left.append(points[0]);
var l=s.py_split();
var __left0__=np.unravel_index(indices,full.shape);var x=__left0__[0];var y=__left0__[1];
kwargs;
var y=np.cos(x);
s.quit();
y.insert(0,y0);
var newList=json.load(infile);
ans.append(cur_set.__getslice__(0,null,1));
sys.stdout.flush();
var out=np.zeros(x.shape,__kwargtrans__({dtype:int}));

ranges.append(middle);
Console.WriteLine(test.GetTest());
new set([new set([form.as_p])]);
print(word);
im.thumbnail(size,Image.ANTIALIAS);
export var j_content=json.loads(line);
var ax=plt.gca();
s.groupby(__kwargtrans__({level:0})).value_counts().unstack(__kwargtrans__({fill_value:0}));
export var date_values=xlrd.xldate_as_tuple(cell_with_excel_time,wb.datemode);
true;
time.sleep(delay);
print(oct_num);
export var bin_midpoints=bins.__getslice__(0,-1,1)+np.diff(bins)/2;
tuple([[4,1]]);
self.word_type=str(i);
stream.close();
srand48(100);
var yTrain=np.array([[1],[0],[0],[0]]);
export var nk1=not_allowedclass();
var nk=not_allowedclass();
nopreds.discard(v);
var A=M.sum(0).sum(0);
var id=Column(Integer,__kwargtrans__({primary_key:true}));
print(data);
var grouped=df.groupby(groupbycol);
var pool=Pool(__kwargtrans__({processes:4}));
pig;
var data=f.readlines();
words.append(teens[u]);
var value=dirty_data[key];
print(py_next(reader));
var res=requests.py_get(url);
print(u);
var p=figure();
summer_funcs(py_arguments)(1);
response;
union_set.py_update(...l);
var user=User.objects.py_get(__kwargtrans__({username:username}));
var gen=function(){var __accu0__=[];for(var [i,v]of enumerate(py_reversed(lst)))if(v==elm)__accu0__.append(len(lst)-1-i);return py_iter(__accu0__)}();
chunk_file.writelines(sorted_chunk);
export var length_of_int=int(math.log(x,base));
var array=img.get_array();
export var parents=defaultdict(list);
export var items_view=gtk.TreeView(self.items_store);
current[py_name]=dict({});
tuple([1,2]);
var ret=np.array(arr);
clusters.append([]);
export var iframe_soup=BeautifulSoup(response);
[Frameworks];
self.fmt.format(...self.args,__kwargtrans__(self.kwargs));
res.append(item);
export var hexList=re.findall(reg,hexes);
(function(){var __accu0__=[];for(var [a,m]of mapped)if(m==minVal)__accu0__.append(a);return __accu0__})();
var app=QtCore.QCoreApplication(sys.argv);
pprint.pprint(py_metatype);
myDict[tupleItem[1]]=myDict.py_get(tupleItem[1],0)+tupleItem[2];
var pool=Pool(__kwargtrans__({processes:5}));
var v=np.ma.array([10,11,0],__kwargtrans__({mask:[0,0,1]}));
Py_INCREF(IorFError);
timeit(function __lambda__(){return py_iter(fulldict.py_keys())});
var __left0__=divmod(minutes,60);export var hour=__left0__[0];export var minute=__left0__[1];
var graph=GraphAPI();
false;
var records=cursor.fetchall();
var text=Column(String);
counter+=1;
newFile.writerow(midterm1Scores);
export var pAUC=numpy.trapz(tpr_array,fpr_array);
struct.unpack_from(fmt,self.recv_buf,self.recv_buf_i-sz);
var con=pymongo.MongoClient();
var res=set();
var sA=sparse.csr_matrix(A);
var item=list(item);
export var unq=unq.view(my_array.dtype).reshape(-1,my_array.shape[1]);
f[keep_col];
print(marker.group(1));
py_next(tokens);
todict(X);
export var htmltree=lxml.html.fromstring(htmlstr);
tuple([[0,0,1]]);
!(Counter([1,2])-Counter([1,2]));
export var src_files=os.listdir(src);
var uniq=np.unique(data.view(data.dtype.descr*data.shape[1]));
export var aPtr=ctypes.cast(ctypes.pointer(a),ctypes.POINTER(c_void_p));
export var byte_array=client.read_bytes();

alt.write(content);
print(tuple([dirpath,count]));
f.close();
var A=2*np.arange(10);
var app=QtGui.QApplication(sys.argv);
sys.modules[borkenmod.__name__].__file__;
export var timezone=pytz.timezone(tz);
var idx=np.hstack(tuple([X.nonzero(),Y.nonzero()]));
export var dok=SparseDOK();

false;
print(boo,boo);
self._fileobj.__enter__(...args);
var id=Column(Integer,__kwargtrans__({primary_key:true}));
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
tmp.add(tuple(i));

var words=line.py_split();
r.text;
export var inputList=ast.literal_eval(sys.argv[1]);
p.join();
export var k_chars=function(){var __accu0__=[];for(var m of k)__accu0__.append(m[0][0]+m[0][1]);return __accu0__}();
dic1.py_keys()|dic2.py_keys();
var client=oauth2.Client(consumer,token);
var b=[4,5,-10];

var rescaled=(255/data.max()*(data-data.min())).astype(np.uint8);
B.do_your_stuff();
var max_val=l[max_idx];
self.master.mainloop();
var a=np.hsplit(x,np.arange(12,129,12));
_fake_tb();
var p=Popen(cmd,__kwargtrans__({bufsize:1,stdin:open(os.devnull),stdout:PIPE,stderr:STDOUT}));
var root=Tk();
browser.visit(url);
export var keyword=CharField(__kwargtrans__({max_length:100}));
var myarray=numpy.zeros(tuple([N,M]));
var string=df.to_string(__kwargtrans__({header:false,index:false,index_names:false}));
equal.append(x);
var c1=conn.cursor();
testsuite.addTest(unittest.defaultTestLoader.loadTestsFromModule(module));

file;
export var is_approved_by_company_admin=models.BooleanField(__kwargtrans__({py_default:false,null:false}));
export var settings=json.load(f);
isclose(100,97.1,__kwargtrans__({rel_tol:.02}));
s+=fh.read(SOME_CHUNK_SIZE);
lookup.__getitem__([a.__getitem__([tuple([0,null,1]),0])-1,tuple([0,null,1])]);
export var Weight=celltext(columns[2]);
list(RecursiveList.flatten(self))[index];
py_new.__setitem__([i,j],xy[i][j]);
argsdict[arg]=[val];
imputed_array;
print(parser.parse_args());
getCards(subList);
export var data_files=tuple([os.walk(path_to_files)]);
var definition=models.TextField();
ax.bar(x_values,log_y_values);
var results=list(csv.reader(inputfile));
bar_from_foo(self.foo(x));
var http_server=tornado.httpserver.HTTPServer(Application());
result.append([]);
char_counts[char]+=1;
var temp=os.walk(sys.argv[1],__kwargtrans__({topdown:false}));
activity.setContentView(self.webview);
var __left0__=tuple([email_message.body]);var subject=__left0__;email_message.subject=__left0__[0];var body=__left0__[1];
var c=function(){var __accu0__=[];for(var r of rgen)__accu0__.append(function(){var __accu1__=[];for(var [i,j]of zip(r.__getslice__(0,-1,1),r.__getslice__(1,null,1)))__accu1__.append(np.s_.__getslice__(i,j,1));return __accu1__}());return __accu0__}();
var buffer=QtCore.QBuffer(array);
print(text);
var string=string.__getslice__(len(to_strip),null,1);
self.handlers=collections.defaultdict(set);
x.executemany(q,itemBank);
self.libc.freelocale(self.ctx);
var infile=open(sys.argv[1]);
p.join();
A_process.wait();
var test_set=set(string_to_teat);
var root=ET.fromstring(TEST);
itertools.product(...list(rc.py_values()));
print(cell_value);
A.__getitem__([0,1,2]);
print(img_tag);
numpy.repeat(vec_row.toarray()[0],numpy.diff(mat_row.indptr));
self.filter(__kwargtrans__({group_set__pk:group.pk}));
print(b1.to_array());
self.create_test_data();
self.height=height;
pre_save.disconnect(pre_save_callback,__kwargtrans__({sender:models.MyModel}));
var im=np.vstack([x]*len(x));
self.element_tree.write(xml_file);
ax.plot_surface(xx,yy,zz,__kwargtrans__({alpha:.5,color:cmap(c)}));
ax.yaxis.get_major_formatter().base(2);
dispatcher.connect(self.dont_close_me,signals.spider_idle);
-1;
export var stopped=false;
var y=np.random.rand(20,10);
var j=np.lexsort(a.T);
pylab.imshow(img);

export var taker=manager.taker();
var fig=pylab.figure();
cmp(self.number,other.number);
response;
export var IFBIsFifo=0;
export var retrieved_a=d[b];
value&~(1<<bit);
export var parsed_object=parser.loads(jsonString);
export var users_count=db.users.count();
Particle[i].AddNeighbor(Particle[j]);
var args=parser.parse_args();
var pil_img=PIL.Image.open(StringIO(data));
stack.py_pop();
cursor.execute(query,params);
var idx=np.argmax(np.abs(w));
print(body_content);
test(n);
print(word);
print(row);

var __left0__=select(L,2,5);var a=__left0__[0];var b=__left0__[1];
t.py_sort();
print(numbers);
var a=list(range(10));
var path=unsearched.py_get();
print(x);
var soup=BeautifulSoup(html_doc);

f();
self.__dict__.py_update(kwds);
export var gamma95=1-Math.pow(.05,1/(edof-1));
var count=0;
var s=list(range(5));
result[key]=value;
true;
var palette=img.getpalette();
var data=[10.01,5.001,4.89,5.1,9.9,10.1,5.05,4.99];
var hash=hashlib.sha1(object_to_cache_as_string).hexdigest();
var l=[4,5,6];
var __except0__=StopIteration;__except0__.__cause__=null;throw __except0__;
var arr2d=np.meshgrid(np.linspace(0,1,6),np.linspace(0,1,11))[0];
render_mpl_table(df,__kwargtrans__({header_columns:0,col_width:2}));
self.change_label();
var output=function(){var __accu0__=[];for(var new_string of output)__accu0__.append(tuple([len(new_string[0]),new_string]));return __accu0__}();
print(key);
var description=models.CharField(__kwargtrans__({max_length:12}));
export var topic=Topic.objects.py_get(__kwargtrans__({pk:1}));
var fields=urlparse.parse_qs(field_data);
var args=sys.argv.__getslice__(2,null,1);
export var DT=Column(DateTime(__kwargtrans__({timezone:true})),__kwargtrans__({py_default:func.now()}));
self._hash;
var box=tuple([x,y,x+w,y+h]);
np.random.seed(42);
waitKey();
var d=dict({});
var parser=argparse.ArgumentParser();
wave_file.writeframes(sample_str);
var remainder=proc.communicate()[0];
var A=A.astype(np.float64);
tbl.append(list());
array.ravel().__getslice__(step,-step,step);
customAction;
a.indices(10);
fout.close();
var response=my_view(request);
show(p);
var rows=function(){var __accu0__=[];for(var [i,d]of enumerate(dates))if(!__in__(i,omit))__accu0__.append(tuple([d,random.random()]));return __accu0__}();
var app=QApplication(sys.argv);
print(neighbors(5,5));
var curdir=os.getcwd();
show();
export var precision=np.random.rand(42)*(1-recall);
list(map(set,out));
var B=expm(A).view(matrix);
[1,2];
project_points(x,y,z,...calc_plane_bis(x,y,z));
export var beats=audio_file.analysis.beats;
sys.exit(0);
a/b;
var __left0__=process.communicate();var stdout=__left0__[0];var stderr=__left0__[1];
export var Nk=f.shape[2];
var rect=self.addRect(r,Qt.white,gradient);
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
var check=np.logical_or(a.__getitem__([tuple([0,null,1]),1])==4,a.__getitem__([tuple([0,null,1]),1])==6);
var cur=function(){var __accu0__=[];for(var [j,k]of zip(rows[14],list(range(15))))__accu0__.append([14,k,j]);return __accu0__}();
sys.stdout.flush();
list.__setslice__(0,null,null,newlist);
print(tuple([i,item,len(line)]));
export var xLim=function(){var __accu0__=[];for(var x=1;x<8;x++)__accu0__.append(x*500);return __accu0__}();
var X=np.arange(1,17).reshape(4,4);
np.random.seed(0);
var im=ax.pcolormesh(phi_itp,theta_itp,d_itp,__kwargtrans__({cmap:plt.cm.coolwarm}));
cft2.append(t.timeit(__kwargtrans__({number:reps})));
var factory=ParentFactory();
hello.hello.restype=ctypes.c_char_p;
var __left0__=points.get_data();var x=__left0__[0];var y=__left0__[1];
df.dtypes;
true;
var result=is_abbrev(abbrev,text);
export var filtervalue=obtain_filter_value_for(filtername);
var t=Test();
df;
export var line_len=len(line);
d1.py_update(d);
print(nx.pagerank(D,__kwargtrans__({max_iter:200})));
var __left0__=tuple([s.__getslice__(0,n,1),s.__getslice__(n,null,1)]);var a=__left0__[0];var s=__left0__[1];
export var task1=threading.Thread(__kwargtrans__({target:do_request}));
export var soln=np.zeros(tuple([size,size]));
var row=np.array([5]);
ax.plot(list(range(100)));
links.append(recursiveUrl(link,0));
set([OriginalExampleObject[A][1],OriginalExampleObject[C][2]]);
df[col]=preprocessing.StandardScaler().fit_transform(df[col]);
var a=[1,2,4];
self.location=0;
df;
var p=ggplot(dat,aes(__kwargtrans__({x:x,y:y,fill:z})))+geom_tile();
var output=np.copy(arr);
1;
fin.close();
5.88199996948;
export var agenda_id=models.IntegerField(__kwargtrans__({blank:true,null:true}));
var args=opt.parse_args();
comp.compile();
agacatacagagacatacagagacatacag;
var form=ProjectAdminForm;
sorted(s);
export var orders=OrderSerializer(__kwargtrans__({many:true}));
var x=datetime.datetime.combine(today,x);
c.join();
export var slcs2=slcs.__getslice__(0,null,1);

(function(){var __accu0__=[];for(var col of i.__table__.columns)__accu0__.append(setattr(j,col.py_name,getattr(i,col.py_name)));return __accu0__})();
var user=User.objects.py_get(__kwargtrans__({username:username}));
var first=word[0];
self.setIconSize(QtCore.QSize(124,124));
var root=Tk();
py_get(remote_path,fd);
path;
var img=ImageTk.PhotoImage(image);
PyMODINIT_FUNC;
self.setLayout(QtGui.QFormLayout(self));
export var lengthy_thingy=Thingy();
export var ma=np.ma.masked_array(a,__kwargtrans__({mask:mask}));
rectangle.erase();
var j=np.unravel_index(i,a.shape);
list(ips_data.py_keys());
var x=(np.random.random(tuple([10,10,20]))+.5).astype(np.int);
var frame=inspect.getouterframes(frame)[1];
print(dist.squareform(dist.pdist(data,function __lambda__(x,y){return ss.pearsonr(x,y)[1]})));
var user=g.get_user();
var d=datetime.date(2010,12,5);
py_next(it);
print(format_table(L_in_columns));
logging_thread.start();
functools.update_wrapper(_d,d);
export var globs=set();
sleep(1);
output_csv.close();
signal.signal(signal.SIGTERM,handle_signal);
export var linkto=os.readlink(srcname);
fig.subplots_adjust(__kwargtrans__({bottom:.2}));
export var midpoint=vor.points[pointidx].mean(__kwargtrans__({axis:0}));
rows.append(row);
self._dump();
var ax=fig.gca();
export var ether=dpkt.ethernet.Ethernet(data);
x.lower();
print(tag.getAlbum());
signal_handler(...args,__kwargtrans__(kwargs));
var t=numpy.arange(81).reshape(tuple([9,9]));
export var part=sock.recv(size-len(msg));
worksheet.hide_gridlines(2);
var x=math.floor((-b-math.sqrt(Math.pow(b,2)-8*i))/2);
var __left0__=tuple([function(){var __accu0__=[];for(var e of zipped)__accu0__.append(e[0]);return __accu0__}(),function(){var __accu0__=[];for(var e of zipped)__accu0__.append(e[1]);return __accu0__}()]);var b=__left0__[0];var c=__left0__[1];
var l=function(){var __accu0__=[];for(var [k,v]of list(stuff.py_items()))__accu0__.append(tuple([k,process(v)]));return __accu0__}();
cls.__name__.lower();
self.left=tree;
export var second_mask=np.zeros(tuple([4,4]),__kwargtrans__({dtype:np.bool}));
text.partition(left_identifier)[2].partition(right_identifier)[0];
var data=dict({});
fclose(retclam);
pool.waitall();
sum(function(){var __accu0__=[];for(var [p,c]of enumerate(arr))__accu0__.append(c*Math.pow(x,p));return py_iter(__accu0__)}());
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];

show();
var mean=cv2.mean(bottom)[0];
var c1=Cookie.SimpleCookie();
var qs=self.model._default_manager.all();
var autostart=py_true;
export var extarg=0;
p.set_array(colors);
vals[i];
listB[0][1];
var c=a+b;
export var time_d_ms=time_d/datetime.timedelta(__kwargtrans__({milliseconds:1}));
cameraL.SetPosition(40,0,200);
p.start();
export var arrB=np.asarray(B);
helpers.bulk(es,actions);
index[axis]=z2.argsort(axis);
chr(pos+97);
var logger=get_task_logger(__name__);
print(item);
print(date.toordinal(date(1971,1,2)));
var d=dict({});
main();
df;
d[parts[0]]=d.py_get(parts[0],[])+[parts[1]];
export var match_geotrans=match_ds.GetGeoTransform();
var con=pymongo.MongoClient();
var counts=idx.__getslice__(1,null,1)-idx.__getslice__(0,-1,1);
export var yinch=ypixels/dpi;
self.msg=msg;
var a=np.linalg.inv(np.dot(X.T,X));
export var mat1=[];
export var mat2=[];
print(datetime.datetime.utcnow());
var __left0__=np.meshgrid(x,y);var X=__left0__[0];var Y=__left0__[1];
var out=function(){var __accu0__=[];for(var x of gona)__accu0__.append(x[0]);return __accu0__}();
var form=CreateUserForm.py_new();
slcs1[i]=slice(0,-1);
ten;
sum(function(){var __accu0__=[];for(var [c1,c2]of zip(string_1,string_2))__accu0__.append(c1!=c2);return py_iter(__accu0__)}());
func(...args,__kwargtrans__(kwargs));
func;
[2]+function(){var __accu0__=[];for(var [i,v]of enumerate(sieve))if(v&&i>0)__accu0__.append(i*2+1);return __accu0__}();
self._data[self._keys[key]];
parseXMLFromString();
make-j4;
var reader=csv.reader(f);
tuple([tuple([16,[2,2,2,2]])]);
export var words_sorted=sorted(my_string.lower().py_split(),__kwargtrans__({key:len}));
self.py_name;
self._realOutput.write(text);
var colors=(np.random.random(tuple([N,4]))*255).astype(np.uint8);
pyplot.show(one.plot());
var __left0__=rgb_to_hsv(base_r,base_g,base_b);export var base_h=__left0__[0];export var base_s=__left0__[1];export var base_v=__left0__[2];
self.write(text);
b[0];
var A=sc.parallelize().map(partial(worker,__kwargtrans__({V:V})));
mkl_rt.mkl_set_num_threads(ctypes.byref(ctypes.c_int(cores)));
export var test_results=ldaModel.transform(wordVecs);
var sizer=wx.BoxSizer(wx.HORIZONTAL);
countup(N,n+1);
my_thread.start();
sys.getwindowsversion();
string.__getslice__(0,string.index(suffix)+len(suffix),1);
self.response=app.post(...args,__kwargtrans__(kw));
print(b.Pear);
var out=s.index[maxidx+np.arange(maxidx.size)];
np.broadcast(...args).shape;
addArray(array);
result;
log_file.write(s);
var __except0__=Exception(tuple([status,reason]));__except0__.__cause__=null;throw __except0__;
L.append(a);
res.append(np.diag(vif));
the_data_model.delete();
var suite=unittest.TestSuite();
func_globals.py_update(_namespace);
v.shape;
var line=line.strip();
var d=dict({});
(function(){var __accu0__=[];for(var x of re.finditer(WORD_REGEX,s))__accu0__.append(cleaned(x));return __accu0__})();
ClassA.__init__(self);
var words=str_.lower().py_split();
var d=dict({});
export var pp=scipy.interpolate.interpolate.spltopp(tck[0].__getslice__(1,-1,1),tck[1],tck[2]);
frame.pack();
PyArray_ITER_NEXT(it1);
self.SetSizer(sizer);
var root=html.fromstring(encapsulated_text);
Tkinter.Tk().withdraw();
var __except0__=Exception();__except0__.__cause__=null;throw __except0__;
forms[1].controls[0].py_name;
var dict=dict({});
a.x;
self.sock=socket.socket(socket.AF_UNIX,socket.SOCK_STREAM);
var words=sorted(counts,__kwargtrans__({key:function __lambda__(word){return tuple([-counts[word],word])}}));
var mylist=function(){var __accu0__=[];for(var _=0;_<1E7;_++)__accu0__.append(random.randint(0,1500));return __accu0__}();
export var parameters=tuple([param7,param8,param9]);
json.loads(json.dumps(members));
var driver=webdriver.Firefox();
index2count[i]+=1;
print(line);
sleep(1);
export var bigset=set(random.sample(range(Max),Setsize));
print(foobar.__name__);
var x=np.arange(10);
var pool=Pool(16);
self.func(v1,v2);
var soup=BeautifulSoup(f);
self.nstep=nstep;
self.form_valid(form,__kwargtrans__(kwargs));
dict({});
var column=int(sys.argv[2]);
export var basePath=os.path.dirname(os.path.abspath(sys.argv[0]));
tuple([20,20,2,2,18,5]);
var records=list(json.loads(df.T.to_json()).py_values());
1-tuple([A,B,E,D]);
grids.__setitem__([idx.__getitem__([i,0]),idx.__getitem__([i,1])],grids.__getitem__([idx.__getitem__([i,0]),idx.__getitem__([i,1])])+1);
plt.pcolormesh(xi,yi,zi);
self.d[k]=v;
f.py_name;
print(sum(map(function __lambda__(x){return Math.pow(x,2)},function(){var __accu0__=[];for(var x of lst)if(__mod__(x,2)==0)__accu0__.append(x);return __accu0__}())));
r.headers;
var n=x.shape[0];
msgBox.exec_();
A.__getitem__([0,1]);
res;
plt.sca(ax);
transport.open();
sys.stdout.write(screen_code);
cython.long;
plugin.plugin_main(...args,__kwargtrans__(kwargs));
dst.copy_key(k.key,src.py_name,k.key);
can.save();
var __left0__=os.path.py_split(path);var path=__left0__[0];var filename=__left0__[1];
ax.plot(list(range(10)),rd.random(10));
var value=blob_reader.read();
Makefile;
var app=WSGIApplication();
print(s.getvalue());
MI.Close();
np.allclose(old,py_new);
var user=models.ForeignKey(User);

var l=[2,6,5,4,2];
__in__(s.lower(),keywords);
temp_path;
var val=np.sum(1-np.cos(a-b));
count+=1;
export var view=QtGui.QTableView();
ax2.set_ylim([-200,200]);
var dic=dic[key];
var __except0__=ctypes.WinError(ctypes.get_last_error());__except0__.__cause__=null;throw __except0__;
result.append(opv);
extend_nums(nums,5);
var r=dict({});
print(tuple([len(perms),perms.__getslice__(0,10,1)]));
var a=np.arange(90).reshape(10,9);
view_fields(a,keep_names);
plt.plot(x,y);
termf.pack(__kwargtrans__({fill:BOTH,expand:YES}));
var now=np.datetime64(datetime.datetime.now());
var mask=__mod__(np.arange(images.shape[0]),6)!=0;
print(serial_ports());
plt.contour(np.log(r/1.2));
list(clusters.py_values());
pygame.time.wait(100);
row.append(field[k][i]);
C.__setslice__(1,null,2,B);
inspect.getargspec(aMethod);
export var tkimage=ImageTk.PhotoImage(image.rotate(angle));
var url=key.generate_url(__kwargtrans__({expires_in:0,query_auth:false}));
ipdb.set_trace=f;
result;
var res=self.func(...args,__kwargtrans__(kwargs));
export var session_key=asymmetric_dec(session_key,prikey);
checker.validate(data,schema);
self.points=function(){var __accu0__=[];for(var _=0;_<numpoints;_++)__accu0__.append(Point(random(),random()));return __accu0__}();
var sample_weight=np.array(function(){var __accu0__=[];for(var i of y)__accu0__.append(i==1?5:1);return __accu0__}());
process_count+=1;
file.seek(pos_dec+word_len);
var styles=getSampleStyleSheet();
npreds[v]-=1;
var __left0__=plt.subplots(__kwargtrans__({figsize:tuple([9,5])}));var fig=__left0__[0];var ax=__left0__[1];
temp.append(num);
print(tuple([location.latitude,location.longitude]));
counter[0]+=1;
var p=Process(__kwargtrans__({target:self.proc,args:tuple([i])}));
tuple([true,true,true,true,true,true,true,true,true]);
activation.done();
heapq.heappush(gens,succ);
var filteredKeys=function(){var __accu0__=[];for(var key of list(myDict.py_keys()))if(__in__(userInput,key))__accu0__.append(key);return py_iter(__accu0__)}();
var ax1=plt.subplot(gs[0]);
var layout=QtGui.QVBoxLayout();

INS;
export var sortedDict=sorted(subjects,__kwargtrans__({cmp:make_comparator(cmpValue),reverse:true}));
var x=list(range(0,7));

var f=sys._getframe();
self.end_headers();
cur.execute(string);
var res=__import__(mod);
var p1=os.path.join(path,p);
mfun;
repr(self.__dict__);
connection.text_factory=str;
nx.draw(G,__kwargtrans__({with_labels:true}));
export var themin=arr[0];
script_elt.extract();
export var dim_array=np.ones(tuple([1,a.ndim]),int).ravel();
var G=C_abs+C_abs.T;
var ordered=sorted(py_iter(colour.py_items()),__kwargtrans__({key:itemgetter(1)}));
chardet.detect(s);
line_list.__getslice__(-lines_2find,null,1);
np.exp(x)+np.sin(y);
true;
cls;
out[k].append(item);
choice(seq);
var rms=sqrt(mean(square(a)));
zip.close();
p.join();
self.assertFailure(d,ValueError);
C.shape;
app.start();
var c=sys.stdin.read(1);
var data=[];
print(row);
sys.exit(1);
var results=a[np.triu_indices(len(x),1)];
var lab=color.rgb2lab(io.imread(each_file));
var d=2;
thread.start();
var dupl=[];
print(nonlinear_invert(f,x,y,z));
var m=r.search(str1);
endfun;
var now=datetime.datetime.now();
pool.close();
var a=__mod__(int(a),2)==0?int(a):int(a)+1;
np.random.seed(101);
(function(){var __accu0__=[];for(var x of string.letters)__accu0__.append(ord(x.lower())-96);return __accu0__})();
ascript;
xa.execute();
__all__[k]=self.oldglobals[k];
print(arr);
draw.text(tuple([0,0]),text,__kwargtrans__({font:font}));
functor();

var username=db.Column(db.String(80),__kwargtrans__({unique:true}));
var __left0__=np.random.random(tuple([2,10]));var x=__left0__[0];var y=__left0__[1];
var response=urllib.request.urlopen(request);
program.py;
var p=etree.HTML(r.text);
is_sub(b,a);
dlg.Destroy();
bob0.save();
x();
self.assertTrue(result>0);
var d=datetime.date.today();
xlock.acquire();
var b=[false,false,true];
com_instance.Quit();
export var droid=android.Android();
var __except0__=py_TypeError(node);__except0__.__cause__=null;throw __except0__;
var resultList=function(){var __accu0__=[];for(var sublist of resultList)for(var item of sublist)__accu0__.append(item);return __accu0__}();
install_all_the_things();
overlap(0,10,80,90);
aes.decrypt(base64.b64decode(encrypted));
df;
self.grid();
send_from_directory(UPLOAD_FOLDER,filename);
export var wdict=words_dict();
var capital=models.CharField(__kwargtrans__({max_length:50}));
my_model;
in_.seek(-min(size,chunk_size),2);
export var do_stuf=fun1(do_stuf);
var l=[4,5,6];
var data=list();
login(request,user);
var wb=Workbook();
bin(2);
var z=np.random.random(tuple([len(r_test),1]));
export var db_session=scoped_session(sessionmaker(__kwargtrans__({bind:engine})));
var t=plt.gca().transData;
base.__dict__[py_name];
qproc.join();
plt.show();
rsum.append(tuple([x[0],rsum[-1][1]+x[1]]));
pool.close();
p.join();
self._channel.basic_ack(basic_deliver.delivery_tag);
var numbers=function(){var __accu0__=[];for(var number of numbers)if(__mod__(number,results[-1])!=0)__accu0__.append(number);return __accu0__}();
export var communicator=Communicator();
export var dests=set();
print(imgray.shape.__getslice__(0,2,1));
print(a.__getslice__(0,4,1));
foo.run_static_method();
var out=write();
export var Gh=NX.Graph();
[2,4,6];
var parent_map=function(){var __accu0__=[];for(var p of tree.py_iter())for(var c of p)__accu0__.append([c,p]);return dict(__accu0__)}();
x+1;
self.callback();
outputfile.write(...args,__kwargtrans__(kwargs));
var start_urls=[URL];
stack.extend(function(){var __accu0__=[];for(var v of self.graph[vertex])__accu0__.append(v);return __accu0__}());
obj.py_pop(i);
var sig2=numpy.interp(t,t2,sig2);
export var small_list_set=set(small_list);
mutex.release();
var image=np.array(image,__kwargtrans__({copy:true}));
[Math.pow(y,1/2),-Math.pow(y,1/2)];
var xx=np.linspace(0,10);
s.format(__kwargtrans__(d));
var n=uniform(0,weight_total);
print(cell);
var samples=[[0,0],[0,1],[1,0],[1,1]];

var df5=df.ix.__getitem__([tuple([0,null,1]),tuple([48,60,1])]);
listbox.insert(0,myTkObject.clipboard_get());
writer.add_document(__kwargtrans__({title:item.Title,content:item.content,url:item.URL}));
print(y);
ip;
z.argmin(1);
res;
export var data_val=np.random.rand(len(data_id));
res.append(1);
l[1];
result.append(p);
a.append(99);
wildfd.inc(tuple([w1,w2]));
export var y_subplot=fig2.add_subplot(2,2,i);
var output=proc.communicate()[0];
py_name;
df;
export var first_set=set([0,1,2]);
test(constrained_combinations);
export var dvalue=Column(DateTime);
var rv=self.parse_statement();
export var current_string=current_string.__getslice__(0,-1,1);
var __left0__=tuple([tb.tb_frame.f_lasti,tb.tb_frame.f_lineno]);p4[8]=__left0__[0];p4[9]=__left0__[1];
var stripped_line=line.strip();
var soup=BeautifulSoup(s);
self.traceback.append(self.col_seq[j-1].lower());
var a=np.ascontiguousarray(A).view(rowtype).ravel();
print(repr(obj),obj.__dict__);
export var word1=equivalence.lemmatize(word1);
fl.close();
export var std_devs=np.diag(np.sqrt(cov));
s+=__mod__(n,10);
export var nondupes=function(){var __accu0__=[];for(var original of allsets)__accu0__.append(original&all_uniques);return __accu0__}();
list(d.py_keys());
(function(){var __accu0__=[];for(var py_name of namespace)if(namespace[py_name]===obj)__accu0__.append(py_name);return __accu0__})();
export var NA=NA_();
np.array(function(){var __accu0__=[];for(var [i,p]of enumerate(A.flatten()))if(i>i/N*(1+N))__accu0__.append(p);return __accu0__}());
var py_new=list(it.imap(int,old));
plot_visible(ax.azim,ax.elev);
numpy.add.reduceat(a,[0,2,4]);
print(data);
sorted(personArray,__kwargtrans__({key:compare_person}));
gc.collect();
var b=np.zeros(100,10);
login_user(user,__kwargtrans__({remember:true}));
plt.show();
export var Mn=set([]);
var bar=Entry(master).grid(__kwargtrans__({row:1,column:1}));
var item=self.combo.model().item(row);
print(config_root.server.version);
render_template_string(template_form,__kwargtrans__({form:form}));
print(request.command);
dict(t);
HTMLParser.__init__(self,__kwargtrans__({strict:false}));
d[0]+=1;
pprint.pprint(Y);
var b=np.ma.masked_where(mymask,a);
inqueue.put(sentinel);
sys.exit(1);
var b=[4,5,6];
myTurtle.goto(0,250);
var __left0__=np.meshgrid(phi_array,theta_array);var phi=__left0__[0];var theta=__left0__[1];
self.initSearch();
foo(line);
var m=X.mean(__kwargtrans__({axis:1}));
sys.stdout=out;
ax.plot(np.arange(0,i*4,i));
n.bit_length()-1;
var __left0__=tuple([1,1]);var a=__left0__[0];var b=__left0__[1];
print(my_func(1,2));
shutil.copyfileobj(open(infile),outfile);
print(listbox.selection_get());
LM2ML(vecs.__getslice__(0,k,1));
var nodes=draw_networkx_nodes(G,pos);
self.is_running=false;
var byte=f.read(1);
(n&1)==0;
var pool=Pool(16);
as_strided(b,tuple([n-1,n+1]),tuple([b.itemsize*(n+1),b.itemsize])).__getitem__([tuple([0,null,1]),tuple([1,null,1])]);
tuple([[6,5,4]]);
path[0];
var res=pd.Series();
var rows=itertools.product(df1.iterrows(),df2.iterrows());
self.initialized();
var result=result.difference(dateRange2[b]);
a.write(str(f)+os.linesep);
var result=d.groupby(__kwargtrans__({level:0})).apply(function __lambda__(x){return pd.value_counts(x.py_values.ravel())});
Y.__setitem__([tuple([0,null,1]),1],1);
var fig=plt.figure();
var soup=bsoup(r.content);
print(x);
yourproject/yourapp/middleware;
to_remove.append(index);
executor.submit(submit_to_gui,f.result());
list(map(set,out));
self._db=db;
x+=1;
var br=mechanize.Browser();
var nums=function(){var __accu0__=[];for(var i of line.strip().py_split())__accu0__.append(int(i));return __accu0__}();
var epoch=datetime.datetime.fromtimestamp(0);
var p=itertools.permutations(l);
pool.append(p);
modules.append(thing);
true;
cur.append(c);
var loop=asyncio.get_event_loop();
str(datetime.now());
export var hsh=urllib.request.HTTPSHandler();
Create(Path.Combine(directory,Path.GetRandomFileName()));
var response=HttpResponse(wrapper,__kwargtrans__({content_type:mime_type}));
new_string+=escape_dict[char];
export var my_contact=Contact.objects.py_get(__kwargtrans__({pk:contact_pk}));
glob.iglob(pathname);
export var dfr=df.ix[rindex];
var cur=con.cursor();
self._cards[card_ID].shift(amount);
var columns=defaultdict(list);
export var json1=json.dumps(dict2,__kwargtrans__({ensure_ascii:false}));
simplejson.dump(data,outfile);
print(my_date);
var summary_dict=function(){var __accu0__=[];for(var col of py_new.columns.__getslice__(1,null,1))__accu0__.append([col,[]]);return dict(__accu0__)}();
r.sendline(line);
var a=a&b;
max(s,__kwargtrans__({key:len}));
var f1=function(){var __accu0__=[];for(var x=0;x<80;x++)__accu0__.append(x+20);return __accu0__}();
export var bitmask=[true]*len(source);
var canvas=Canvas(root,__kwargtrans__({width:640,height:480,bd:0,highlightthickness:0}));
int(aString,8);
export var alphs=string.ascii_lowercase;
vals[bisect.bisect_right(py_keys,.464897)];
id(self._obj);
sum(map(operator.mul,...pairwise(l)));
true;
print(regx.sub(repl,ss));
var mask=np.array(out.sum(__kwargtrans__({axis:0}))).ravel()!=0;
var site=ftplib.FTP(hostname,username,password);
figlegend.show();
var row_count=chunk.shape[0];
doit();
leng.count;
r1.shutdown();
subfn;
attempt(attempt_something,function __lambda__(){return foo(bar)});
var pairs=[];
print(names);
a[not_indices]=888;
var __left0__=np.mgrid.__getitem__([tuple([0,20,.01]),tuple([1,100,1])]);var x=__left0__[0];var n=__left0__[1];
procs.append(p);
var x=np.linspace(0,10*np.pi,1E3);
var start=dt.datetime.now();
self.typemap=dict({});
export var filter=np.array([true,false,true,false]);
export var tmp_dict=cPickle.load(f);
var last_name=models.CharField(__kwargtrans__({max_length:40}));
table.py_setdefault(tuple([w1,w2]),[]).append(stopword);

a==b;
min_time.py_replace(__kwargtrans__({hour:hour,minute:minute}));
ax.add_collection(PC);
var d=dict(self.__dict__);
var a=np.asfarray(a);
var value=func(self);

s.close();
UTF-8;
print(ldamodel.print_topics(__kwargtrans__({num_topics:2,num_words:4})));
[buildout];
defaults.py_update(kwargs);
var a=BitArray(6E6);
var current=[];
start_new_thread(task,tuple([]));
var y=[4,5,6];
main();
export var feet=float(floatfeet||0)+float(feetnum||0)/float(feetdenom||1);
var x=!x;
cherrypy.engine.block();
var __except0__=py_TypeError;__except0__.__cause__=null;throw __except0__;
var client=Client(url,__kwargtrans__({transport:ntlm}));
sys._getframe(back+1).f_lineno;
var args=p.parse_args([]);
pos_list.append(item);
closedir.argtypes=[c_dir_p];
true;
getattr(__builtins__,py_name);
export var IFBIsFastSer=0;
pylab.plot(f,Xdb);
var first_col=np.where(cols==false)[0][0];
var c=get_config();
None.__cause__=null;throw None;
_f;
var app=QtGui.QApplication([]);
export var wolfer=tempdata.__getitem__([tuple([0,null,1]),1]);
df2;
var data=function(){var __accu0__=[];for(var [k,v]of list(dr.py_next().py_items()))__accu0__.append([k,[convert(v,float)]]);return dict(__accu0__)}();
p_surplus+=1;
wiringpi2.wiringPiSetupGpio();
sp.Popen([programName,fileName]);
filtered.append(line);
var f=gen2();
print(significant_1(.45));
var n=df.shape[0];
baz();
bode(f);
(function(){var __accu0__=[];for(var [a,b]of matches)__accu0__.append(a+b+a);return __accu0__})();
A[subset][j]=min(A[subset][j],A[subset^1<<j-1][k]+get_dist(j,k));
__in__(a,new set([0,1]));
logger.propagate=false;
export var rolled_mask=np.roll(np.roll(mask,-2,__kwargtrans__({axis:0})),-2,__kwargtrans__({axis:1}));
new set([x,0,y]);
out[1];
tuple([5E14,6E14,7E14,8E14]);
new_matrix.__setitem__([t,conv.__getitem__([t,z,y,x]),y,x],temp.__getitem__([t,z,y,x]));
r.url;
var sorted_ab=list(zip(...sorted(chain(keyed_a,keyed_b),__kwargtrans__({key:function __lambda__(t){return t[0]}}))))[1];
d[k]+=v;
var b=[4,5,6];
var prev=date.today().py_replace(__kwargtrans__({day:1}))-timedelta(__kwargtrans__({days:1}));
new set([new set([key])]);
shared_time+=(min(t1_stop,t2_stop)-t1_start).total_seconds();
doc_dict.py_update(doc.attrib);
print(testme,len(testme));
base.summary(my_pandas_dataframe);
keyword.kwlist;
var a=function(){var __accu0__=[];for(var [i,aa]of enumerate(a))__accu0__.append(i<20?aa:0);return __accu0__}();
print(c);
x/blub10.txt;
var y=np.random.normal(0,1,num).cumsum();
flask.jsonify(__kwargtrans__({time:time.time(),value:value}));
var xmin=data.min();
export var dictb=dict(zip(listbnum,listb));
var confirmed=get_object_or_404(EmailConfirmed,__kwargtrans__({user:request.user}));
self.archive=py7zlib.Archive7z(fp);
var imgB=imgB.astype(float);
var l2=[2,1];
p.map(unpack_wrapper(merger),mergelist);
sess.run(init_op);
myTurtle.speed(0);
export var ip_address=db.StringProperty();
i+=1;
var x=np.linspace(10,110,1E3);
var rows=cur.fetchall();
var c=ChessBoard();
export var month=SelectField(__kwargtrans__({choices:MONTHS}));
dumper.represent_dict(data.convert_to_yaml_struct());
self.multiply(self.x,self.y);
print(nestedExpr().parseString(data).asList());
getattr(logging,key);
export var adj=widget.get_vadjustment();
var __left0__=plt.subplots(1,1);var fig=__left0__[0];var ax=__left0__[1];
self.pred(obj);
var characters=splitre.py_split(credits);
df;
var b=bytearray(f);
export var measurements=np.random.normal(__kwargtrans__({loc:20,scale:5,size:100}));
var df1=df.T;
var stream=cStringIO.StringIO(value);
tuple([1,2,0,0]);
var V=(np.arange(M*N)/(M*N)).reshape(N,M);
easygui.egdemo();
print(funcs[2]());
var x=1;
dic[a]+=b;
var p_values=scipy.special.ndtr(-z_scores);
df.index=df.index*10;
var names=list(row.py_keys());
timeit(function __lambda__(){return fulldict.py_keys()});
deq.append(p);
var newlist=[];
bin(1);
print(test.g(666));
export var mean2=g.mean();
var options=webdriver.ChromeOptions();
var read=p.stdout.readline();
export var MI=pandas.MultiIndex.from_product([i,j[0]]);
export var SEARCHENGINE=NO;
lg.string;
is_invertible(b);
var xx=np.arange((len(A)-1)*n+1);
options.remove(current_option);

var filelist=ftp.nlst();
namedict[key]=val;
var v=[[1],[1,2]];
print(py_name);
shared_time+=(min(t1_stop,t2_stop)-t2_start).total_seconds();
vbox.addWidget(button);
var r=np.zeros(tuple([rows,rows]));
c.join(l);
export var form_class=self.get_form_class();
export var azi=np.arctan2(X.__getitem__([tuple([0,null,1]),1]),X.__getitem__([tuple([0,null,1]),0]));
self.get_nowait();
print(str(err));
var json_object=json.loads(myjson);
var serializer_class=serializers.UserSerializer;
print(theQ.py_get());
print(status);
(np.cumprod(x)-1)*p[-1];
export var poly_coeff=np.polynomial.polynomial.polyfit(w,v,2);
var i=df.index.py_values;
self.left.insert(othernode);
process_data(data);
composed;
export var carnamit=py_iter(carnames);
q.put(x);
export var mview=memoryview(tmp_buf).__getslice__(OFFSET,AMOUNT,1);
show(p);
self.color=color;
(function(){var __accu0__=[];for(var item of obj)__accu0__.append(serialize(item));return __accu0__})();
b.set_list(list(range(5,10)));
var screen=pygame.display.set_mode(tuple([640,480]),FULLSCREEN);
var index=[];
export var clisocket=socket.socket(socket.AF_INET,socket.SOCK_DGRAM);
seen_add(element);
var auth=OAuth1(API_KEY,API_SECRET,ACCESS_TOKEN,ACCESS_TOKEN_SECRET);
hash(self.x);
tuple([i,self.store[i][0]]);
var f=function __lambda__(a){return function __lambda__(x){return Math.pow(x,a)}}(a);
console_handler.setLevel(logging.DEBUG);
result.__setslice__(1,null,2,list2);
print(parse(stream));
a.save();
newfile.write(line);
print(json2xml(j));
plt.grid(true);
var v=x*np.cos(5)+y*np.sin(5);
var b=[4,5,6];
f(1,covered_list);
app.MainLoop();
var im_data=np.ndarray(__kwargtrans__({shape:tuple([cols,rows]),dtype:np.uint8}));
var y=np.sin(x);
loop.close();
vfoo(I,J,K);
df[0]-df[1];
var v=[7,4,5];
export var exponents=list(range(-1,(-precision-1)*2,-1));
export var entry_date=models.DateTimeField(__kwargtrans__({py_default:datetime.now}));
f.close();
var d=dict();
A[j]=n;
self.f.write(text);
tuple([url,len(response)]);
output_notebook();
file.tell();
self.deadline=self.env.cr.fetchone()[0];
var Y=np.arange(size);
ppc;
cholupdate(R1_,u.copy());
delattr(mod,symbol);
var request=cherrypy.serving.request;
var p=function(){var __accu0__=[];for(var i of range(0,len(l),2))__accu0__.append(l.__getslice__(i,i+2,1));return __accu0__}();
print(msg_str);
export var theState=models.CharField(__kwargtrans__({max_length:64}));
out.flat[np.ravel_multi_index(data.T,dshape)]+=1;
current_string.append(chr(inkey));
t.render(c);
var obj=ref();
foo(42);
decorator;
first_name;
export var maxword=max(function(){var __accu0__=[];for(var x of words)__accu0__.append(len(x));return py_iter(__accu0__)}());
main();
var __left0__=np.histogram2d(x,y,__kwargtrans__({bins:tuple([50,50])}));var hist=__left0__[0];export var x_bins=__left0__[1];export var y_bins=__left0__[2];
var cols=df.iloc.__getitem__([tuple([0,null,1]),tuple([2,null,1])]).columns;
export var bucket_name=settings.AWS_STORAGE_BUCKET_NAME;
dateData.append(date);
export var player_wins=rps();
br.submit();
split_list;
B.__setitem__([tuple([0,null,1]),col],np.prod(A.__getitem__([tuple([0,null,1]),mask]),1));
self.assertEqual(Foo.query.count(),1);
export var si=StringIO.StringIO();
export var idnumber=Int64Col();
tmv.__setitem__([i,j],tmv.__getitem__([i,j])+1);
total+=os.path.getsize(path);
frame.Show(true);
list(function(){var __accu0__=[];for(var [_,gameId,bitrate]of py_reversed(myListOfTuples))__accu0__.append([gameId,bitrate]);return dict(__accu0__)}().py_items());
libadd.Add.restype=ctypes.c_int;
var __left0__=numpy.meshgrid(lons,lats);var lons=__left0__[0];var lats=__left0__[1];
logging_handler_out.setLevel(logging.DEBUG);
dict(__kwargtrans__({user:g.user}));
tuple_foo(t);
print(json.dumps(x,__kwargtrans__({indent:2})));
var ys=np.sin(xs)+np.random.normal(0,yerrs,xs.shape);
self.fig.axes[0].set_title(self.line_edit.text());
q.put(s.__getslice__(-4,null,1));
writer.write_array(output,pixels);
var lines=islice(f,0,2*N-1);
main();
print((d-epoch).total_seconds());
csr.indptr.__setslice__(1,null,null,np.cumsum(nnz_per_row));
img_temp.flush();
hosp_info;
var xy=10*np.random.random(tuple([chunksize,2]));
var __left0__=s.accept();var conn=__left0__[0];var addr=__left0__[1];
ax.view_init(elev,azimuth);
f.close();
var b=np.random.randint(0,5,__kwargtrans__({size:tuple([6,4])}));
logger_2.addHandler(hdlr_2);
losses.append(b.eval());
export var trgtext=trgtext.py_split();
result.__setitem__([i,j],a[i]*b[j]);
self._n=n;
export var search_str=self.text_to_find.get_text();
var idx=random.choice(indices);
export var bsizer=wx.BoxSizer();
export var maxsort=counts.argsort().__getslice__(0,null,-1);
var d=d[partial_key];
cv2.rectangle(char_mask,tuple([x,y]),tuple([x+w,y+h]),255,-1);
df.iloc.__setitem__([tuple([0,null,1]),i],i*df.iloc.__getitem__([tuple([0,null,1]),i-100]));
var G=nx.Graph();
transaction.savepoint_rollback(sid);
var r=random.randint(0,i);
export var parse=argparse.ArgumentParser();
loop.create_task(do_work(envelope,body));
export var n_pages=document.get_n_pages();
isitIn(char,b.__getslice__(0,Math.floor(len(b)/2),1));
var py_name=models.CharField(__kwargtrans__({max_length:128}));
weights.py_pop();
var nums=function(){var __accu0__=[];for(var [a,b]of zip(a,count(a[0])))if(a!=b)__accu0__.append(b);return py_iter(__accu0__)}();
table.row_cells(r)[c].text=cell;
var all_data=numpy.hstack(tuple([A_noisy,B_noisy]));
var out=np.repeat(tmp12,color_occupations.ravel());
data.py_sort(__kwargtrans__({key:function __lambda__(c){return c[1]}}));
export var inblock=nextnl+1;
var rows=np.isnan(g).all(__kwargtrans__({axis:1}));
main();
print(i);
text.__getslice__(0,text.index(c),1).rstrip();
export var PTS=function __lambda__(x){return 1*x};
renWinR.AddRenderer(renR);
export var jump_indices=np.where(jumps)[0];
print(line);
var n=len(a);
NewClass;
map(print_node,node.get_children());
np.random.seed(__kwargtrans__({seed:0}));
(function(){var __accu0__=[];for(var v of arr)__accu0__.append(set(v));return __accu0__})();
var a=np.arange(1*2*2*k*k).reshape(2,2,k,k);
var dom=ET.parse(os.path.join(cd,xmlfile));
b.argsort(1);
self.dialog=QtGui.QDialog(self);
export var interlocked=function(){var __accu0__=[];for(var [word,a,b]of word_gen)if(__in__(a,words)&&__in__(b,words))__accu0__.append(word);return __accu0__}();
var a=Column(Integer,__kwargtrans__({primary_key:true}));
__in__(set(b),set(a));
var data=np.array(function(){var __accu0__=[];for(var line of f.readlines())__accu0__.append(line.strip());return __accu0__}());
export var intree=true;
self._x=value;
f;
response.json();
self.given_server_is_offline();
var matches=function(){var __accu0__=[];for(var i=0;i<len(s);i++)__accu0__.append(r.match(s.__getslice__(i,null,1)));return __accu0__}();
var csvwriter=csv.DictWriter(outf,fieldnames);
var json=response.body;
var ax=fig.add_subplot(221);
var sess=tf.Session();
export var pointers=function(){var __accu0__=[];for(var i=0;i<4;i++)__accu0__.append(ctypes.addressof(ctypes.create_string_buffer(8)));return __accu0__}();
np.nan_to_num(data);
self.py_pop(i);
lsb_release.get_lsb_information();
export var tst=models.ForeignKey(someData);
urllib.parse.urlencode(z);
var cost=function(){var __accu0__=[];for(var i of cost)__accu0__.append(int(i));return __accu0__}();
self.mysignal.emit(text);
self.check_object_permission(request.user,obj);
pool.apply(locale_aware_sort,[strings,loc]);
bodylist.append(body);
var key=tuple([row[0],row[1]]);
var arr=np.array(img);
list.add(1);
p.register(f.stdout);
d[1];
self.__setstate__(s);
var x=S1();
var ax=plt.gca();
export var aresult=q.py_get();
my_decorator;
NULL;
var sample=np.random.uniform(0,1,50);
result;
self.trayIcon.show();
py_keys.py_sort();
Foo().spam;
var size=sys.getsizeof(string)-20;
(function(){var __accu0__=[];for(var s of splits)__accu0__.append(list(map(sub,chain(s,e),chain(b,s))));return py_iter(__accu0__)})();
self.broken=false;
sess.run(init_op);
test.foo(x);
var dir=frob;
export var this_friday=sow+timedelta(__kwargtrans__({days:4}));
indexing_with_clipping_v2(arr,indices,__kwargtrans__({clipping_value:2}));
str(soup);
r.encoding;
tor_process.wait();
export var n_edges=data.shape[0];
var grouped=df.map(function __lambda__(row){return tuple([row.a,tuple([row.major,row.cnt])])}).groupByKey();
print(item);
var result=result.astype(np.bool_);
a.insert(i+1,[0,0]);
var im=rgb2gray(im);
celery.start();
tuple([mock(),mock()]);
print(test.data);
var pool=Pool(__kwargtrans__({processes:8}));
mat.__setitem__([i,j],random.randrange(2));
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
f.seek(0,2);
self._cookies=pickle.loads(string);
export var requestOpener=urllib.request.build_opener();
var c=s.__getitem__([tuple([0,null,1]),[i,j]]);
numpy.hypot(d0,d1);
sys.exit(0);
export var CO=np.corrcoef(X_.T);
var x=np.linspace(-20,20,500);
var __left0__=m(lon2,lat2);var x=__left0__[0];var y=__left0__[1];
var path=os.path.join(savedir,filename);

var mask=np.random.random(tuple([10,10]))<.2;
data.__getslice__(start,start+size,1);
py_false;
img.paste(face,tuple(coord.__getslice__(0,null,-1)),__kwargtrans__({mask:face}));
print(list(function(){var __accu0__=[];for(var w of wordlist)if(prog.match(w))__accu0__.append(w);return __accu0__}()));
export var messageprocessok=false;
dict({});
var A=np.array(a.data).reshape([4,4]);

var idx=A.__getitem__([tuple([0,null,1]),0])>from_date&A.__getitem__([tuple([0,null,1]),0])<=to_date;
fig.add_axes(ax);
topbottom.__setitem__([0,tuple([0,im.shape[1],1])],np.argmax(im,__kwargtrans__({axis:0})));
numpy.add.reduceat(data[f],i);
a.__getitem__([tuple([0,null,1]),1]);
var x=np.array(np.random.normal(__kwargtrans__({size:tuple([4,4])})));
var n=sum(function(){var __accu0__=[];for(var d of str(n))__accu0__.append(int(d));return py_iter(__accu0__)}());
result;
c.head();
var num_overlap=sum(function(){var __accu0__=[];for(var t of zip(list1,list2))if(all(t))__accu0__.append(1);return py_iter(__accu0__)}());
setattr(random,f,our_decorator(getattr(random,f)));
list(self._sections[section].py_keys());
var fig=plt.gcf();
canvas.pack();
OrderedDict(sorted(list(d.py_items()),__kwargtrans__({key:function __lambda__(t){return len(t[0])}})));
print(D.x);
export var d_truncated=datetime.date(dt.year,dt.month,dt.day);
thread.daemon=true;
email.utils.parseaddr(email_address);
np.ma.masked_array(np.interp(value,self._levels,self._normed));
var matrix=vect.fit_transform(traindata);
queue.append(x);
filtered1.append(leftData[i]);
output.append(new_output);
lol(x,7);
var serializer_class=MyModelSerializer;
var x=tuple([a,b,c]);
show();
df_test.py_update(df_update);
self.__f(x+1);
var imgplot=plt.imshow(img);
var ax=fig.add_subplot(1,1,1);
df;
shell();
i+=1;
tuple([x,x+2]);
var xedges=np.linspace(-10,10,100);
var a=asarray(list(s),__kwargtrans__({dtype:h}));
logging.basicConfig(__kwargtrans__({stream:log_stream,level:logging.INFO}));
export var y_sample=y[idx];
2+2;
load(a);
var left=randint(0,len(L)-1);
L[c]+=1;
Base.metadata.drop_all(engine,__kwargtrans__({tables:[DeclarativeTestModel.__table__]}));
var date=dt.datetime(date.year,date.month,date.day)+dt.timedelta(__kwargtrans__({hours:10}));
export var myObject1=MyObject();
repr(.1000000000000999);
new_dc_files.append(dc);
print(numbers);
var x=py_next(stack[0]);
print(f.subs(n,6));
output.append(row);
var fig=plt.figure();
var data=json.loads(request.data);
main();
autodoc.add_documenter(DocsonlyMethodDocumenter);
train_text[11];
vdisplay.stop();
export var user_options=[];
export var ntlm=WindowsHttpAuthenticated(__kwargtrans__({username:user,password:password}));
print(columns[1]);
export var gr=P.Group(P.OneOrMore(key_equal+val));
var html=file.read();
fibpy(x-1)+fibpy(x-2);
var ws=excel.Workbooks.Add().Worksheets(1);
export var rand_list=random.sample(range(1E8),num);
sorted(globs);
os.close(output_fd);
var results=[];
plt.clf();
print(b.x);
df==pd.Series(conditions);
var x=s[1]-s[0];
var ws=wb.active;
Tree();
q1m0[k]=-q0m1[k];
f.seek(randint(10,250));
var d=len(l);
result.py_update(self._attr_value_to_obj_set[attr_value]);
var result=result.__getslice__(0,null,-1);
print(significant_1(1999));
print(significant_1(1945.01));
var py_items=list(d.py_items());
var li=py_iter(object_list);
print(net.num_addresses);
var seen=set();
b();
print(new_random);
var ind=ind[third_mask];
self.func=func;
var data=function(){var __accu0__=[];for(var i of img1_k)__accu0__.append(cmap[i]);return __accu0__}();
diags;
plt.ylim(ymin,ymax);
logging.warning(message,__kwargtrans__({extra:extras}));
levels.py_pop();
export var qapp=QApplication(sys.argv);
t.join();
self.redraw();
var group=models.ForeignKey(Group);
tuple([dosomethingelse()]);
slice(2);
smtp.starttls();
roundup(101);
print(node.getData());
var result=job.apply_async();
var data=json.load(response);
var M=np.arange(1500*2E3).reshape(1500,2E3);
export var old_init=thirdpartymodule_a.SomeClass.__init__;
self.b=b;
self._add(val,node.l);
var q=Queue();
partition.append(justseen);
var __left0__=img.size;var width=__left0__[0];var height=__left0__[1];
pymysql.install_as_MySQLdb();
var start=datetime.now();
data.append(0);
show_children(parse_root(tokenize(example)));
tuple([a,N-a*a]);
iterateFinitely(function __lambda__(y){return y?[f(y)]:[]},x);
a*!p||[sub_k_list(a.__getslice__(0,p,1),k),sub_k_list(a.__getslice__(p,null,1),k)];
var root=tk.Tk();
var module=__import__(modulename);
var z=func(tuple([x,y]),a,b,c)*1+np.random.random(101)/100;
var ip=models.CharField(__kwargtrans__({max_length:200,blank:true}));
m.__getitem__([1,1]);
print(df1);
export var req_json=request.get_json();
[D,[[B,A,C],[F,E,G]]];
find_file(drive,rex);
item.wickets[10]*=2;
var number=Wire.read();
self.dock1.setWidget(QtGui.QTextEdit(self.dock1));
export var idx0=np.where(m,a,np.nanmin(a)-1).argmax(1);
csX.nzmax=X.data.shape[0];
self.field4price=msg.price;
var b=[];
result;
sleep(2);
var args=parser.parse_args();
err();
data[tuple(ind)];
var A=np.random.rand(20,20,2,2,18,5);
mp_handler();
res.py_get();

print(a.shape);
r+=(x[i*DIM+d]-x[j*DIM+d])*(x[i*DIM+d]-x[j*DIM+d]);
py_next(r);
print(__mod__(s,x));
auth.refresh_token();
self._count+=1;
print(parser.parse_args(c.py_split()));
ui.__setslice__(1,null,null,(diff!=0).any(__kwargtrans__({axis:1})));
df1.columns=df1.columns.py_values.astype(str);
bSizer.Add(button2,0,wx.ALL,5);
cpy.write(pgcopy.tostring());
print(df2);
var req=urllib.request.Request(url_1);
var __except0__=Error(key,__kwargtrans__({context:ex}));__except0__.__cause__=null;throw __except0__;
some_list.__getslice__(start,end,step);
var timer=Timer(timeout,timeout_handler);
solve(equations,P,Q,S,T);
export var knownAdds=set(function(){var __accu0__=[];for(var line of infile)__accu0__.append(line.strip());return py_iter(__accu0__)}());
job.start();
time.sleep(.1);
thefile.seek(0,2);
test();
self.set_list(list(range(n)));
export var exampleText=f.read();
cherrypy.engine.start();
var z=np.ceil(x);
false;
var t=threading.Thread(__kwargtrans__({target:my_thread,args:[a_stop_event]}));
entryFrame.grid_propagate(false);
list(range(5)).__getslice__(4,5,1)+[999][0];
self._worker_handler.daemon=true;
response.raise_for_status();
self.assertEqual(99,s1);
export var ssqlContext=sqlContext._ssql_ctx;
var img=np.zeros(tuple([256,256]));
var serializer=self.get_serializer(page,__kwargtrans__({many:true}));
tuple([self.parse]);
Type[int(RNumX+.5)][int(RNumY+.5)].append(tuple([RNumX,RNumY]));
(x>>power2-1)+1>>1;
var ab=function(){var __accu0__=[];for(var o of itertools.chain.from_iterable(function(){var __accu1__=[];for(var x of y)__accu1__.append(genny(x));return py_iter(__accu1__)}()))__accu0__.append(o);return __accu0__}();
get_user_model().objects.py_get(__kwargtrans__({pk:username}));
var conn=xmpp.Client(jid.getDomain());
print(QtCore);
punkt.train(abbrv_sent,__kwargtrans__({finalize:false,verbose:false}));
var a=0;
buf.__setslice__(0,null,null,names);
random.choice(lists[category]);
pl.show();
print(StudentTCI(1,2,10,.99));
self._subs_list(sequence);
var tmp=function(){var __accu0__=[];for(var f of files)if(!__in__(f,exc))__accu0__.append(os.path.join(root,f));return __accu0__}();
1*p(x);
var client=Client(url);
export var last_dir=os.path.dirname(last_dir);
var now=datetime.datetime.now();
bins[1]=bins[1]-bins[1]/2;
lft-=1;
A.__setslice__(0,null,null,new set([1,2]));

print(repr(instance.method));
splitter.show();
var result=urllib.request.urlretrieve(image_url);
var data=infile.read();
print(py_next(spamreader));
export var joystick_count=pygame.joystick.get_count();
result;
d.astimezone(est);

var B=A.__getitem__([tuple([0,null,1]),np.newaxis]);
var register=template.Library();
var sorted_list=sorted(initial_list,__kwargtrans__({key:move}));
var clock=pygame.time.Clock();
export var y_mad=left_mad*np.ones(len(y));
var combo=QtGui.ComboBox();
export var json_doc=json.dumps(doc,__kwargtrans__({py_default:json_util.py_default}));
do_stuff_with(b);
self.draw_counter+=1;
export var train_data=data.__getslice__(0,50,1);
out.__setslice__(start,end,null,a.reshape(-1));
var m=np.random.random(tuple([6,6]));
var x=np.random.rand(10,10);
var im=ax.imshow(z,...args,__kwargtrans__(kwargs));
b[b<0]=0;
self.list=QtGui.QListWidget(self);
[F(N),F(N-1)];

a[indices];
[buildout];
fig.autofmt_xdate();
self.s=s;
var xyz=[0,12,4,6,242,7,9];
tocall(...args);
print([data]);
new_modules;
var r=random.random();
print(find_skew(list(range(256-__mod__(256,26)))));
tuple([x,y]);
print(tag.py_name);
var contact_form=ContactForm(__kwargtrans__({instance:my_contact}));
var __left0__=s.__getslice__(12,15,1);export var camera_pos_x=__left0__[0];export var camera_pos_y=__left0__[1];export var camera_pos_z=__left0__[2];
cursor.skip(4E3);
var r=requests.py_get(zip_file_url,__kwargtrans__({stream:true}));
new_list.append(0);
var merged=collections.defaultdict(set);
false;
self.timestamp=time.time();
parser.add_argument(args1,args2,__kwargtrans__(__mergekwargtrans__({help:desc},options)));
target_file.write(line.translate(trantab));
var output=[];
var dic=function(){var __accu0__=[];for(var x=0;x<10;x++)__accu0__.append([randint(0,100),x]);return dict(__accu0__)}();
var selected=function(){var __accu0__=[];for(var i=0;i<N;i++)__accu0__.append(names[bisect.bisect(cumprobs,random.random())]);return __accu0__}();
var logger=logging.getLogger(__name__);
var i=np.append(np.where(y),n-1);
var __left0__=arr.shape;var x=__left0__[0];var y=__left0__[1];var z=__left0__[2];
var __left0__=tuple([radians(lat),radians(lon)]);var lat=__left0__[0];var lon=__left0__[1];
print(span.text);
show_messages();
c[i].append([]);
sess.run(init);
var buf=buffer.buf;
print(tag.__class__);
export var roll_left=np.roll(img,-i,__kwargtrans__({axis:1}));
var t=numpy.linspace(0,tmax,nsamples,__kwargtrans__({endpoint:false}));
subset[subset.isin(myList)].stack().duplicated();
true;
export var G2=nx.Graph();
max(community.membership);
var __left0__=line.py_split();var py_name=__left0__[0];var val=__left0__[1];
var header=f.read(4);
child.setText(0,str(key));
pp(list(sections()));
print(response.registers);
export var sol=solve(Math.pow(x+I*y,2)-z,tuple([x,y]));
groupdict[key].append(dict([tuple([k,v])]));
var dt=datetime.datetime(__kwargtrans__({year:2012,month:2,day:9}));
self.img_label.configure(__kwargtrans__({image:imgtk}));
print(table.py_name);
export var dur=datetime.timedelta(__kwargtrans__({hours:h,minutes:m,seconds:s}));
var df=df.T.stack();
export var ylo=ylo>=0?ylo:0;
(function(){var __accu0__=[];for(var c of colour)__accu0__.append(51*Math.floor((int(c)+25)/51));return __accu0__})();
console.setFormatter(formatter);
curr_num+=1;

var S=np.sign(dY);
print(i);
layout.addWidget(self.custom_widget);
var i=a.intersection(b);
myseries_one.loc[0];
var inputs=[];
var r2=requests.post(post_url,__kwargtrans__({cookies:r.cookies,data:payload}));
var lines=[];
page.mergePage(py_new.getPage(i));
self._type=classtype;
d[k]=ddict2dict(v);
MainWindow.setCentralWidget(MainFrame);
export var WHAT_BEATS_WHAT=dict([[ROCK,SCISSORS],[PAPER,ROCK],[SCISSORS,PAPER]]);
var rows=function(){var __accu0__=[];for(var line of fp)if(line.strip())__accu0__.append(line.py_split().__getslice__(1,null,1));return __accu0__}();
a.e();
tuple();
comp.compile();
var a=A();
var p=Person.objects.py_get(__kwargtrans__({pk:x}));
a.__getitem__([tuple([0,null,1]),0]);
solutions.append(copy.deepcopy(board));
current_string_split.append(s[j]);
radar.ax.legend();
main.show();
self.copy();
var a=np.sum(np.abs(xs),__kwargtrans__({axis:1}));
aframe.iloc[locs];
var active=models.BooleanField();
var draw=PIL.ImageDraw.Draw(image);
plot(time,y);
f.format(fmt,__kwargtrans__(d));
print(x);
var leg=ax.get_legend();
var __left0__=self.client_address.__getslice__(0,2,1);var host=__left0__[0];var port=__left0__[1];
self.x+=1;
r.write_results();
res[k].append(v);
original_convert(str);
self.buttonCalc.clicked.connect(self.handleCalculate);
book.authors.add(george_author.id);
[tb.format_exc()];
print(diffl,lev,sor,jac);
var img=cv2.imdecode(arr,-1);
[output];
var data=np.random.random(shape);
print(a);
var a=list(range(10));
m.__setitem__([i-1,j-1],1);
df;
f(numpy.array([[[1,2]]]));
var ip_range=netaddr.iter_iprange(ip_start,ip_end);
funs[eggs]();
os.open(py_name,flag|os.O_TEMPORARY,mode);
exec(my_code,mymodule.__dict__);
print(config.DEBUG);
var deltas=function(){var __accu0__=[];for(var [a,b]of zip(zones.__getslice__(1,null,1),zones.__getslice__(0,-1,1)))__accu0__.append(a-b);return __accu0__}();
cursor.add_option(8);
self.spawn();
print(intify(maybeLst));
session_start();
var __left0__=cv2.threshold(gray,250,255,0);var ret=__left0__[0];var gray=__left0__[1];
x+=tuple([y]);
var app=Flask(__name__);
my_array.append(str(i));
var file=forms.FileField();
scipy.version.full_version;
export var candidates=np.where(dY<0)[0]+(len(kernel)-1);
[[0]*len(coef)];
self.id=id;
locals()[k]=getattr(module,k);
var style=xlwt.easyxf(style_string);
PyArray_Descr*descr;
imgBothH.shape;
-pypy;
p.findall(s);
tuple([[11.4,4]]);
var res=numpy.empty_like(arr);
var module=sys.modules.py_get(py_name);
session.delete(a);
x*x;
readline.write_history_file(historyPath);
var notebook=gtk.Notebook();
scores.py_update(dict([[key,int(score)]]));
self._value=value;
p.waitFor();
var s=json.dumps(data,__kwargtrans__({indent:4}));
py_next(g);
list(unique_everseen(a,__kwargtrans__({key:chained(sorted,tuple)})));
var wb=Workbook();
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
export var columnList=list(data.__getslice__(0,null,1));
tuple(pixbuf.pixel_array.__getitem__([0,0]));
var browser=webdriver.Firefox(__kwargtrans__({firefox_binary:binary}));
var luns=function(){var __accu0__=[];for(var lun of luns)__accu0__.append(int(lun));return __accu0__}();
sys.stdout.write(out_str);
var arr=arr.T;
S.Sixth.ABs.Eighth;
var tagger=nltk.TrigramTagger(train_sents,__kwargtrans__({backoff:default_tagger}));
var user=models.OneToOne(User);
list(map(list,out));
logging_handler_err.setLevel(logging.WARNING);
parent_mock._kids[1][2]===child_mock2;
print(generate_chain(409,5));
x+y;
G.add_edges_from(edges);
result[k]=result.py_get(k,[])+[v];
list(_);
bundle;
var x_c=np.linspace(4,6,15).__getslice__(1,null,1);
var b=[6,1,0];
self.d[self.key].value();
export var foos=function(){var __accu0__=[];for(var i=0;i<10;i++)__accu0__.append(Foo());return __accu0__}();
df_out;
(function(){var __accu0__=[];for(var s of A)__accu0__.append(int(s.endswith(t)));return __accu0__})();
export var SPEED=4;
gevent.joinall(tasks,__kwargtrans__({timeout:12}));
msg.attach(basemsg);
msg.attach(signmsg);
var dictionary=json.load(response);
var count=0;
self.threads=[];
export var nfactors=len(factors);
df;
main();
var r=requests.post(url,__kwargtrans__({data:data,allow_redirects:true}));
b.__getitem__([5,6,7,8]);
var A=np.random.rand(M,N,R);
self.tag_test(template,context,output);
var fig=plt.figure();
var ax=f.add_subplot(111);
d[b];
var __left0__=tuple([0,1]);var a=__left0__[0];var b=__left0__[1];
self.left.reverse();
etree.XML(xml);

var n=2;
var probability=np.sum(kd_vals*step);
var b=np.array([[4,np.inf],[np.nan,-np.inf]]);
var bin_n=bin(n).__getslice__(2,null,1);
export var call_logger=function __lambda__(){var a=tuple([].slice.apply(arguments).slice(0));return function __lambda__(f){return f}};
export var some_tag=etree.fromstring(XML);
pprint.pprint(root,__kwargtrans__({width:1}));
export var x_fine=np.linspace(-1,1,2001);
export var mymin=np.min(a);
var x_sorted=x[order];
g.user=user;
graphs_sizer.Add(chart_toolbar,1,__kwargtrans__({flag:wx.ALIGN_CENTER,border:5}));
np.random.seed(0);
print(x);
var fig=bokeh.plotting.figure();
export var kmeans=KMeans(__kwargtrans__({n_clusters:n_cluster})).fit(X);
self.x=x;
export var roll_up=np.roll(img,-i,__kwargtrans__({axis:0}));
var start=random.randint(0,len(partition)-k);
response;
699;
var L=list(itertools.repeat(10,20));
dest.py_update(extra);
__mod__(comp.string.encode(enc),tuple(params)).decode(enc);

self.__dict__[py_name]=value;
print(X_train==X_train_init);
plt.xlim([min(xvals)-.5,max(xvals)+.5]);
set(zip(...function(){var __accu0__=[];for(var i=0;i<n;i++)__accu0__.append(string.__getslice__(i,null,1));return __accu0__}()));
export var desired_shape=np.array(tuple([5,8]));
export var cLoss=sum(function(){var __accu0__=[];for(var [y,x]of enumerate(TLabels))__accu0__.append(1-x*one_zero_sum[dist_[y]]);return __accu0__}());
person_dict[person.last_name].append(person);
var dy=[size2,size2,-size2,-size2,size2];
print(a.shape);
crawler.configure();
to_del.append(y);
p.start();
var temp=np.partition(-test,4);
var image=cv2.cvtColor(image,cv2.COLOR_RGB2BGR);
var capture=cv.CaptureFromCAM(i);
export var ds2=set(function(){var __accu0__=[];for(var line of df2.py_values.tolist())__accu0__.append(tuple(line));return __accu0__}());
var frame=inspect.currentframe();
self.value=value;
var result_dict=dict({});
main();
export var df_formatted=pd.concat([df_fmt,df]);
export var arg2value=dict({});
var sent=BooleanField(__kwargtrans__({py_default:false}));
print(i);
export var enable=tuple([W0601,W0612]);
stats.kendalltau(B[col1],B[col2])[0];
print(m.headers);
var id=Column(Integer,__kwargtrans__({primary_key:true}));
true;
print(max(multiples,__kwargtrans__({key:function __lambda__(a_b){return a_b[0]*a_b[1]}})));
d.seconds;
var sig1=numpy.interp(t,t1,sig1);
var a=np.arange(1,11);
print(i,word);
var result=[];
plt.show();
Py_DECREF(result);
ydata.append(np.exp(-Math.pow(x,2))+10*np.exp(-Math.pow(x-7,2)));
ax.set_xticks(arange(len(genres)));
plt.plot(x,y,x,-.5+h1,x,-.5+h2);
print(result);
var fig=plt.figure();
var input=[input];
var session=create_session(__kwargtrans__({bind:engine}));
DG.add_edge(stnode,ennode,__kwargtrans__({py_name:edge}));
var b=datetime.datetime(2011,8,29);
export var dt_tuple=xlrd.xldate_as_tuple(cell_value,workbook.datemode);
sock.settimeout(prev_timeout);
tuple([[-2,-1,0,-1,-2]]);
export var column_series=pd.Series(list(range(columns)));
data.repeat(5);
export var match_proj=match_ds.GetProjection();
event.widget.master.focus_set();
var env=jinja2.Environment();
rescaled;
subprocess.Popen([program]).wait();
tempcreator.__exit__();
self.le=QLineEdit();
print(tuple([x,y]));
var bucket=conn.get_bucket(your_bucket);
var DEBUG=1;
export var log4jLogger=sc._jvm.org.apache.log4j;
new_dict[length][mykey]=name_num[mykey];
self.dictionary[key][1]=value;
var x=T.dmatrix();
freq4.timeit(10);
logger.setLevel(logging.DEBUG);
torfile.add_url_seed(url_seed);
export var i1=[0,2,4,6];
ignore[np.ma.maximum(y11,y12)<np.ma.minimum(y21,y22)]=true;
HttpResponseRedirect(url);
a[~mask]=999;
var bins=np.histogram(np.hstack(tuple([a,b])),__kwargtrans__({bins:40}))[1];
rle([true,true,true,false,true,false,false]);
self.aws.__aexit__();
true;
(function(){var __accu0__=[];for(var i=0;i<amount;i++)__accu0__.append(i);return __accu0__})();
var tree=etree.parse(metadata,parser);
var blob_info=upload_files[0];
print(str(a));
export var IFAIsFastSer=0;
var model=Bilag;
tester.dothis();
var d=dict(t);
time.sleep(.001);
var b=time.time();
list.append(self,item);
var fig=plt.figure();
var output=tf.transpose(tf.pack(outputs),__kwargtrans__({perm:[1,0,2]}));
export var attrs=function(){var __accu0__=[];for(var x of y)__accu0__.append(hasattr(x)?x.attr:dict({}));return __accu0__}();
var con=pool.get_connection();
export var d4=eastern.localize(datetime(2016,11,5,5,0,0));
ff(x,y);
var paths=function(){var __accu0__=[];for(var path of paths)__accu0__.append(os.path.abspath(path));return __accu0__}();
game_score/max_score*.7+game_score/total_hits*.2+game_score_per_life/hits_per_life*.1;
numpy.nextafter(1,0)-(1-sys.float_info.epsilon);
var o=TestObj2();
self.cur2.executemany(query,self.rows);
export var p_df=pd.DataFrame(data);
plot(times,freq);
lib.test(darray.fromnp(a1),darray.fromnp(a2));
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
print(e.extra_info);
export var error_list=total_error_list(python_filename);
login_form.full_clean();
sentence.append(newword);
upload_fd.write(read_slice);
var pagenos=set();
var klass=getattr(mod,py_name);
os.seteuid(471);
self.dictionary[key]=[index,value];
max_list.append(s);
b.initialize_options();
models.signals.pre_init.connect(self.pre_init,__kwargtrans__({sender:cls}));
acc.extend(py_items);
lines;
self.running=false;
self.assertTrue(__in__(ip1.ip,result_ips));
grp.nlargest(2).div(grp.shift(-1),__kwargtrans__({level:1})).groupby(__kwargtrans__({level:0})).first();
print(current_line);
true;
var __left0__=cgi.parse_header(header);var value=__left0__[0];var params=__left0__[1];
lst.remove(v);
print(linetext.text());
var context=ssl.SSLContext(ssl.PROTOCOL_TLSv1);
df;
db.session.delete(self);
doc.build(story);
df;
Base.metadata.drop_all();
export var system=models.ForeignKey(System);
cPickle.dumps(d);
arr.count(0);
export var basmod=BaseModule(argv[0],argv[1]);
var __left0__=np.histogram(dat,__kwargtrans__({bins:ebins}));export var allhist=__left0__[0];export var allbin=__left0__[1];
var text=Text(root);
var a=A(4);
var __left0__=np.linalg.svd(sigma);var U=__left0__[0];var S=__left0__[1];var V=__left0__[2];
var g=tf.Graph();
var p=Process(__kwargtrans__({target:f,args:tuple([child_conn])}));
var m=function(){var __accu0__=[];for(var x of m)__accu0__.append(csr_matrix(x));return __accu0__}();
var intersection=np.all(params>=0&params<=1,__kwargtrans__({axis:tuple([-1,-2])}));
cursor.execute(query_str);
var params=dict();
var can_delete=false;
var config=bucket.get_lifecycle_config();
var u=urlparse(url);
print(line);
var diag_T=T.diagonal().copy();
df.irow(loc-1);
print(i);
order_by(t1.c.time);
sys.getrefcount(b[-2]);
export var x_n=np.sum(x_n,__kwargtrans__({axis:1}));
ranges.append(new_range);
(dates-dateshift).fillna(0).dt.days.cumsum().describe();
var b=np.repeat(888,a.shape);
var dst=cv2.bitwise_and(image_src,mask);
list(py_reversed(counts.most_common().__getslice__(-to_find,null,1)));
var py_keys=d.py_keys()|d1.py_keys();
var __left0__=np.mgrid.__getitem__([tuple([0,a.shape[0],1]),tuple([0,a.shape[1],1])]);var x=__left0__[0];var y=__left0__[1];
__in__(key,self.g);
var form=self.get_form(form_class);
print(my_string[my_interval]);
x|x<<1;
var app=Flask(__name__);
create_archive(paths,arc_paths,archive);
string.digits;
var __left0__=os.path.py_split(os.path.py_split(pathname)[0]);var head=__left0__[0];var tail=__left0__[1];
buffer.close();
newest_file;
np.isnan(y);
print(str(is_visible_1(link)));
var stop=datetime.datetime.now();
seq[int(self.random()*len(seq))];
var d=BidirectionalDict();
export var centroid=tuple([sum(x)/len(points),sum(y)/len(points)]);
print(l);
urllib.request._urlopener=AppURLopener();
export var my_name=messages.StringField(1,__kwargtrans__({required:true}));
var __left0__=s.accept();export var remote=__left0__[0];var address=__left0__[1];
export var text_string=text_string.splitlines();
var a=zeros(tuple([2,5]));
var a=A(1);
lcd.setPalette(palette);
self.members.add(member);
tuple([[0,1,1,1,1,0]]);
var m=[inner_list]*rows;
NoStringWrappingPrettyPrinter().pprint(yourobject);
export var md5=hashlib.md5();
export var dist_a_b=dist(a,b);
time.sleep(24*60*60);
export var b_in_a=function(){var __accu0__=[];for(var x of a)if(__in__(x,set(b)))__accu0__.append(x);return __accu0__}();
var __left0__=r.groups();export var fullstring=__left0__[0];var py_name=__left0__[1];var number=__left0__[2];
x.loc.__getitem__([x.date.idxmin(),tuple([0,null,1])]);
var one_day=timedelta(__kwargtrans__({days:1}));
var letters=set(string.ascii_letters);
print(first_user.email);
export var date_ints=set(function(){var __accu0__=[];for(var d of dates)__accu0__.append(d.toordinal());return __accu0__}());
result.append(str.__getslice__(last_end,sp[0],1));
int(whole)+fractions.Fraction(frac);
var res=conn.getresponse();
print(value);
var total_loss=l2_loss_sum(function(){var __accu0__=[];for(var j=0;j<self.n_layers;j++)__accu0__.append(layers[j].weights);return __accu0__}());
mpz_set(modulus,n);
pprint(data);
print(string.punctuation);
var d=dict({});
mapper(Orders,orders_table);
var tree=etree.parse(StringIO(text),parser);
var ss=ssl.wrap_socket(s);
var a=np.arange(16).reshape(4,4).astype(float);
plt.plot(t,cos(w*t));
re.sub(pattern,replacer,text);
append(tuple([word,word_offset,running_offset-1]));
var request=opener.open(url);
np.allclose(out1,out2.toarray());
print(said);
var middle=Math.floor(len(strg)/2);
np.vstack(tuple([rlin*first,np.power(rlin,second)]));
locals().py_update(somedict);
var ax2=fig.add_subplot(212);
var __left0__=plt.subplots(1);var f=__left0__[0];var a=__left0__[1];
var parser=etree.XMLParser(__kwargtrans__({remove_blank_text:true}));
bar();
print(q.statement.compile(__kwargtrans__({dialect:postgresql.dialect()})));
var result=self.contained[item];
var field_name=funct();
0;
var row=numpy.array([tuple([1E-4,.002])],__kwargtrans__({dtype:type1}));
var pool=mp.Pool();
p.x=5;
var a=np.array(a);
export var bloop_list=Bloop.as_view();
var soup=BeautifulSoup(html);
var value=key.isdigit()?args[int(key)]:kwds[key];
n[0];
var df_test=df_test.append(rows_list);
export var partials=[];
print(df);
multiset[bin_]+=1;
var app=wx.PySimpleApp();
var d2=datetime.date(2012,1,1);
self.clientSocket.send(data);
setattr(instance,_UNSAVED_FILEFIELD,instance.image);
export var diff_keys=function(){var __accu0__=[];for(var k of A)if(A.py_get(k)!=B.py_get(k))__accu0__.append(k);return __accu0__}();
list(binomial_choice(list(range(5)),1));
keynames[i]=k.__getslice__(1,null,1);
tf.import_graph_def(basegraph.as_graph_def());
export var mx_hosts=DNS.mxlookup(hostname);
var ROOT_PATH=os.path.dirname("./P2JSnippets.py");
var s=al.spline1dbuildakima(x,y);
export var mindate=datetime.date(datetime.MINYEAR,1,1);
x.__setslice__(1,null,null,x.__getslice__(0,-1,1));
print(df_b);
(function(){var __accu0__=[];for(var d of ds)for(var k of d)if(match(k,pat))__accu0__.append(d[k]);return __accu0__})();
nondirectories.append(filename);
all(function(){var __accu0__=[];for(var i of it)__accu0__.append(i==first);return py_iter(__accu0__)}());
var soup=BeautifulSoup(s);
var to_remove=function(){var __accu0__=[];for(var n of outdeg)if(outdeg[n]==1)__accu0__.append(n);return __accu0__}();
var new_list=[];
self.listener.close();
var i=self.obj_type.__mro__.find(self.obj_type);
export var Xt=ax.transData.transform(X);
var i=1;
var results=pool.map(cube,list(range(1,7)));
self._data_filter;
var wb=o.Workbooks.Open(wb_path);
export var mainwin=Tk();
var b=copy(a);
self._storage[key].has_prefix(word.__getslice__(prefix_index,null,1));
var im=img_padded.load();
exec(code,module.__dict__);
var output=PdfFileWriter();
my_set.py_update(new set([6,7]));
nf.close();
print(list(l));
var edges=collections.defaultdict(list);
var ax=pylab.gca();
f.close();
var tree=etree.XML(content);
cls(value);
var app=Flask(__name__);
export var R1=0;
export var nfailed=0;
new1;
var total=0;
d1.py_update(d2);
l[0]===l;
print(a,b);
var B=copy.copy(A);
mail.set_debuglevel(debuglevel);
r<-reduce(Intervals(cbind(start,end)));
var word=Column(String);
cython.int;
var worksheet=workbook.add_worksheet();
var x=df.py_values;
export var setup4=setup2;
export var dr=csv.DictReader(f);
var num1=int(argv[1]);
var __left0__=q.py_get();time[i]=__left0__[0];signal[i]=__left0__[1];
bisect_iter_to_list(str.isalpha,py_iter(l));
c();
export var dupcount=0;
old_init(self,...k,__kwargtrans__(kw));
self.array_pool[i]=np.frombuffer(buf,__kwargtrans__({dtype:self.dtype})).reshape(self.shape);
var numbers=[10,20,1,-11,100,-12];
np.log(gev.pdf(data,...fit)).sum();
var __left0__=build(r,v);var k=__left0__[0];var v=__left0__[1];
self.toolbar.Realize();
var a=s.py_split();
df;
var clf=ensemble.RandomForestClassifier().fit(X.__getslice__(0,100,1),y.__getslice__(0,100,1));
var value_counts=df[col].value_counts();
app.MainLoop();
export var starts=np.zeros(len(counts),__kwargtrans__({dtype:int}));
glLoadIdentity();
df;
var a=A();
print(regx.py_split(DATA));
export var reviews=session.query(Review).filter(Review.id.in_(review_ids)).all();
self.data[index];
var result=getattr(image,method);
var fig=plt.figure();
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
print(py_next(d(myset)));
self.transport=transport;
var data=urlopen(push_url).read();
FormRequest(url,__kwargtrans__({formdata:payload,callback:self.parse_stores}));
var sess=tf.Session();
var f=tar.extractfile(member);
tuple(function(){var __accu0__=[];for(var i of range(0,len(s),4))__accu0__.append(s.__getslice__(i,i+4,1));return py_iter(__accu0__)}());
var ds=SupervisedDataSet(2,1);
export var dm=pdist(X,function __lambda__(u,v){return np.sqrt(Math.pow(u-v,2).sum())});
var __left0__=tuple([np.sqrt(vx),np.sqrt(vy)]);var sx=__left0__[0];export var sy=__left0__[1];
logging.basicConfig(__kwargtrans__({level:logging.DEBUG,filename:logfile}));
var timestamp=db.DateTimeProperty(__kwargtrans__({auto_now_add:true}));
print(Point(1,2));
sudo/usr/bin/somecommand;
export var actual_number=random.choice(list(range(k)));

export var cbar2=fig.colorbar(im2,__kwargtrans__({cax:cax2}));
lines.append(str(self.context_mark));
var y=function(){var __accu0__=[];for(var i=0;i<1;i++)__accu0__.append(x+i);return __accu0__}();
a[i-1];
var t=threading.Thread(__kwargtrans__({target:self.server.shutdown}));
mimetypes.guess_type(path,__kwargtrans__({strict:false}));
mydict[e]+=1;
print(is_admin);
var end_date=dateutil.parser.parse(end);
var df=pd.concat([df,df2]);
overlap(0,50,40,90);
print(res);
pytz.__version__;
export var thumbnail=serializers.ImageField();
tuple([u,urlparse.parse_qs(q)]);
var data=np.random.random(n);
var m=Mock();
prop.__set__(entity,ref_entities[ref_key]);
widget.setGeometry(widget.geometry());
false;
var result=function(){var __accu0__=[];for(var x of result)for(var y of pool)__accu0__.append(x+[y]);return __accu0__}();
var instance=cls(...args,__kwargtrans__(kwargs));
var groups=df.groupby(pandas.cut(df.a,bins));
respawn;
var result=function(){var __accu0__=[];for(var k of sorted(d))for(var x of k*d[k])__accu0__.append(x);return __accu0__}();
var epoch=datetime.datetime.utcfromtimestamp(0);
new set([1,0,0]);
permstr+=permtype.lower();
G.add_node(n1,__kwargtrans__({obj:n1}));
var A=array(a).reshape(len(a)/2,2);
var line=f.readline();
var st=os.stat(filename);
var x=np.random.rand(10,6,7);
m.add(k,dict2.py_get(k));
signal.alarm(2);
mapper.SetInputData(self.vtkPolyData);
session.add(ed_user);
session.save();
var b=numpy.array(list(range(5)));
export var new_dic_defaultdict=defaultdict(dict);
var W=tf.Variable(tf.random_uniform([d,1],-1,1));
var g=map(set,g);
var c=C(2);

print(a);
self.val;
df;
1;
export var b_inv=np.linalg.inv(b);
export var sum_of_two=sum(num_list);
var __left0__=tuple([[],[]]);export var tpp=__left0__[0];export var tdv=__left0__[1];
parser.config_files.append(py_values);
p.join();
var tags=exifread.process_file(f);
var retval=self.my_class.__call__(...args,__kwargtrans__(kwargs));
patch.set_facecolor(color);
print(tuple([a,b,c]));
var df=pd.concat([X]*Math.pow(10,5),__kwargtrans__({ignore_index:true}));
export var sec=glrhs[2];
Py_XDECREF(pName);
two-.444106;
df;
print(names[i]);
self.queue.put(f);

new_tokens.append(translated);
prefixes.py_sort(__kwargtrans__({key:function __lambda__(s){return len(s)}}));
var h=matrix([[-.02],[.05]]);
export var pathA=cheapest_path(path_list,A,[]);
print(result);
var coords=tuple([tuple([0,0]),tuple([0,2]),tuple([2,0]),tuple([2,2])]);
export var int_part=int(abs(x));
var ax=f.add_subplot(1,1,1);
export var parse_tree=etree.parse(StringIO(xml_str));
g.series(x,y,0,0);
self.selenium=webdriver.Chrome(__kwargtrans__({desired_capabilities:CHROME}));
var x=create1m();
var x=create1g();
self._c=c;
var __left0__=imgdata.shape.__getslice__(0,2,1);export var nr=__left0__[0];export var nc=__left0__[1];
old_window[0]=gdk_window.get_screen().get_active_window();
export var test1=array([[true,false,true,false,true]],__kwargtrans__({dtype:bool}));
df1.columns=df1.columns.droplevel(1);
var func=function __lambda__(x){return x+1};
fd.seek(0);
self.loop.call_soon(self.event.set);
print(optimization.curve_fit(func,xdata,ydata,x0,sigma));
var utc_dt=datetime(1970,1,1)+timedelta(__kwargtrans__({seconds:timestamp}));
output.append(str1);
var app=QtGui.QApplication([]);
var p2=Popen(cmd,__kwargtrans__({stdin:p1.stdout,stdout:PIPE,stderr:tempFile}));
areaofpolygon(polygon,i+1);
subplot2.plot(y,x);
result;
sock.setproxy(...self.proxy_info.astuple());
print(match);
self.it=py_iter(range(10));
export var ie=webbrowser.py_get(webbrowser.iexplore);
var G=nx.DiGraph();
var substrings=function(){var __accu0__=[];for(var i=0;i<len(a)-n+1;i++)__accu0__.append(a.__getslice__(i,i+n,1));return __accu0__}();
var grouped=defaultdict(list);
true;
workers.append(child);
var plot=fig.add_subplot(111);
var data=cursor.fetchall();
var c=conn.cursor();
pool.close();
print(chambersinreactor);
print(cardsdiscarded);
sqlContext.createDataFrame(temp_rdd,schema).printSchema;
pic.seek(0);
export var bmarks=json.load(f);
noisycount+=1;
quietcount+=1;
client.loop();
export var ops=random.choice(list(op.py_keys()));
var q=db.Query(PC_Applications,__kwargtrans__({keys_only:true}));
_data[k]=hex(v);
atexit.register(functools.partial(kill_children,c_pid));
plt.show();
monotone_increasing(lst)||monotone_decreasing(lst);
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
nx.draw(G,__kwargtrans__({pos:coords}));
var a=a.__getslice__(0,-1,1);
Bar();
var pool=multiprocessing.Pool(n_workers);
var a=A();
var proc=subprocess.Popen(lstrun,__kwargtrans__({close_fds:true}));
start.insert(0,ind);
print(function(){var __accu0__=[];for(var j of zip(start,repeat(0)))for(var i of j)__accu0__.append(i);return __accu0__}().__getslice__(0,-1,1));
var ch=sys.stdin.read(1);
time.sleep(random.randrange(4));
rtn.append(a);
countup(N,n+1);
self.response.out.write(utils.GqlEncoder().encode(results));
var y_train=self.y[train_mask];
export var now2=la.localize(datetime.now());
self.key;
var l=mpl.pyplot.gca().legend_;
self._add(attr.py_get(),obj);
tty.setraw(sys.stdin.fileno());
plt.colorbar(c);
result.append(tuple([curr[2],self[curr[2]]]));
var d=defaultdict(dict);
file_obj.seek(0);
rand_x_digit_num(5,false);
df;
export var provided_ips=request.access_route;
var bytes=str.encode(my_str);
var time=time_xpath(row)[0].strip();
var a=[];
var request=urllib.request.Request(url);
export var startsecs=5;
installer.install(options);
d;
var tree=function __lambda__(){return defaultdict(tree)};
var f1=f.subs(b,10);
var panel=wx.Panel(self,wx.ID_ANY);
var x=2;
d[k]=function(){var __accu0__=[];for(var column_name of column_order)__accu0__.append(dictionary[k][column_name]);return __accu0__}();
var b=copy(a);
Pdb;
self.buf.read(...args,__kwargtrans__(kwargs));
export var myTaskId=abortable_async_result.task_id;
var node=node[char.upper()];
export var num_cols=len(f.readline().py_split());
print(df);
mixer.init();
datetime.datetime.utcnow();
arr.put(ind,[a,b,c]);
var data=request.data;
numbers.append(i);
self.x=2;
print(a.__getitem__([0,0]));
print(L);
export var hostname=match.group(1);
var y=np.exp(-x/2)*np.sin(2*np.pi*x);
var combs=set();
export var serial_data=ser.readline();
log.flush();
var __left0__=p(l);export var ts1=__left0__[0];export var ts2=__left0__[1];
var z=np.array(tuple([old_val,new_val])).T;
tuple([df.index.__getslice__(9,null,1),df.columns]);
var idx=np.argsort(dst).__getslice__(0,f,1);
list(d1.py_keys())[v.index(max(v))];
cos+=Math.pow(-1,n)*Math.pow(x,2*n)/math.factorial(2*n);
cov.load();

var cookies=urllib.request.HTTPCookieProcessor();
f.close();
var X=np.repeat(X,100,__kwargtrans__({axis:0}));
export var der=ssl.PEM_cert_to_DER_cert(pem);
parser.parse(a_datetime).astimezone(tz);
value;
session.expunge(stud);
var ws=wb.worksheets[0];
export var tag_labels=tag_list(repo);
var f=ET.fromstring(data);
var F=np.array(list(itertools.product([0,1],__kwargtrans__({repeat:n})))).T;
print(l);
cvMerge(realInput,imaginaryInput,NULL,NULL,complexInput);
var __left0__=a.shape;var r=__left0__[0];var c=__left0__[1];
serializer.is_valid(__kwargtrans__({raise_exception:true}));
print(i,f);
np.linalg.norm(sortedA.__getslice__(1,null,1)-sortedA.__getslice__(0,-1,1),__kwargtrans__({axis:1}));
Particle[j].AddNeighbor(Particle[i]);
var chars=[];
export var train_indices=list(range(40))+list(range(50,90));
var death_year=death_data[2];
var adj=gtk.Adjustment(1,1,99,1,1,1);
var z0=z_indices.astype(np.integer);
export var xdata=np.vstack([x,y,z]);
do_something(line);
print(docopt.docopt(__doc__));
putstr(prompt);
export var list_of_bools=[true,true,true,true];
summary[entry[0]]+=entry.__getslice__(1,null,1);
yaml.add_representer(literal_unicode,represent_literal_unicode);
var diff=np.setdiff1d(b,a);
pylab.show();
var schema=etree.XMLSchema(schema_doc);
var result=np.ma.array(yindex,__kwargtrans__({mask:mask}));
index.create(engine);
(1- -1)*np.random.random()+-1;
print(i);
urls.append(url);
export var charlie=NS.charlie;
export var chocolate=NS.chocolate;
export var hates=NS.hates;
export var dislikes=NS.dislikes;
(function(){var __accu0__=[];for(var n of list_to_test)if(isinstance(n,type_of))__accu0__.append(n);return __accu0__})();
self.on_message=on_message;
self.d[k];
print(is_png(data));
os._exit(0);
var __left0__=image.size;var width=__left0__[0];var height=__left0__[1];
var data=plt.cm.jet(data.__getitem__([x_data,y_data]));
cv2.polylines(h,[pts],false,col);
np.dot(af,af).astype(int);
my_list[0][0]=5;
var y=list(x);
self.write(line);
var c=Counter(s);
axis.set_minor_locator(NullLocator());
var df1=df1.apply(closest,__kwargtrans__({axis:1}));
candidates[index]=bases[index]*nums[candidates_indexes[index]];
signal.alarm(5);
var ax=plt.gca();
iregex;
cache[method_name];
var a=np.asanyarray(a);
vbox.pack_start(self.button,false,false,0);
var ind=posx>0&posx<=bins[0]&posy>0&posy<=bins[1];
pl.hist(data,__kwargtrans__({bins:Math.pow(10,np.linspace(np.log10(MIN),np.log10(MAX),50))}));
var C=A*B;
x.foo();
np.exp(x);
pseudocolor(80,0,100);
export var unserialized_data=pickle.load(handle);
self.assertRaises(exc,f,...args,__kwargtrans__(kwargs));
self.index-=1;
decimal.getcontext().prec=6;
self.click_positions.append(event.pos());
a();
remove(argv[0]);
var b=list(a);
a.x;
datos.append(float(item));
l.append(g.py_name);
ax.invert_yaxis();
something();
var contents=self.buf.read(size);
max(S);
var a=np.zeros(42);
var srcname=os.path.join(src,py_name);
x/y;
var dt=datetime.utcnow();
var z=exp(-x);
i+=1;
var a=[];
var cur=conn.cursor();
var rows=json.loads(x);
print(old_s);
reduce(function __lambda__(d,k){return d[k]},py_keys.__getslice__(0,-1,1),result)[py_keys[-1]]=value;
var SCRIPT_DIR=os.path.dirname(os.path.abspath("./P2JSnippets.py"));
var fig=plt.figure(__kwargtrans__({frameon:false}));
dragged_iters.append(model.get_iter_from_string(py_iter));
var data=np.random.randn(N);
print(df);
config.read_string(s_config);
var sqr=col.copy();
outThread.start();
len(dir(aStrOBJECT));
tuple([7,10]).__getitem__([7,8,9]);
self.x=x;
view;
screen.blit(treeImage,pygame.rect.Rect(0,0,128,128));
end_date-start_date-datetime.timedelta(__kwargtrans__({days:number_of_weekends*2}));
print(function(){var __accu0__=[];for(var v of list(anagrams.py_values()))__accu0__.append(v);return __accu0__}());
var y=np.arange(-5,5,.25);
print(repr(testObject));
var a=np.array(list(range(1,10)));
struct.unpack(fmt,data);
var groups=df.groupby(cols);
fig.tight_layout();
var today=date.today();
export var DONT_RESOLVE_DLL_REFERENCES=1;
self.clientSocket.close();
output+=markdown2.markdown(mkin.read());
var res=dict({});
export var derangements=function(){var __accu0__=[];for(var _=0;_<1E4;_++)__accu0__.append(tuple(derange(list(range(n)))));return py_iter(__accu0__)}();
var __left0__=tuple([len(seq),len(sub)]);var m=__left0__[0];var n=__left0__[1];
true;
self.page.mainFrame().load(self.currentUrl());
print(longest_sum([1,2,7,8,11,12,14,15],0,0,10));
db.delete_async(self);
var files=[];
var mask=np.in1d(np.arange(np.max(out_id)+1),out_id);
area;
painter.drawPixmap(event.rect(),self.pixmap);
n;
export var dx_cell=max(abs(lattice_vectors[0][0]),abs(lattice_vectors[1][0]));
output;
[TYPECHECK];
User();

export var labels_one_hot=np.zeros(tuple([num_labels,num_classes]));
www.myurlnumber1.com;
dic[4];
x[a][b].py_update(C);
book.user==bundle.request.user;
sqrt(y-(p[0]+x*p[1])^2+(x-(pinv[0]+y*pinv[1]))^2);
print(recv5.decode());
lock.release();
print(decimal.__version__);
self.width=self.winfo_reqwidth();
tree.takeTopLevelItem(tree.indexOfTopLevelItem(i));
MyTestResult(self.stream,self.descriptions,self.verbosity);
func(request,...args,__kwargtrans__(kwargs));
var __left0__=np.mgrid.__getitem__([tuple([0,10,1]),tuple([0,10,1])]);var y=__left0__[0];var x=__left0__[1];
tuple([c1,c2]);
im.seek(len(seq));
var pixmap=QPixmap.fromImage(image);
var fmin=(N+f2-1)/f2;
var df2=pd.DataFrame(__kwargtrans__({index:idx,columns:idx}));
export var quotes=formset.save(__kwargtrans__({commit:false}));
columnNames.append(str(SchemaTable.Rows[i][0]));
var BASE_DIR=os.path.dirname(os.path.abspath("./P2JSnippets.py"));
set(itertools.product(s1,s1,s1));
print((25.4/10*(1/2.54)).__repr__());
true;
p.terminate();
export var sin_data=np.sin(data);
tuple([4,5,6]);
var data=np.loadtxt(file,__kwargtrans__({skiprows:8}));
var token=gdata.gauth.token_from_blob(saved_blob_string);
var soup=Soup(handler);
qs.filter(__kwargtrans__({is_active:1}));
var json_object=json.loads(myjson);
self.a=a;
var output=PdfFileWriter();
np.array(B);
Model.objects.filter(__kwargtrans__({m2m_field:1})).filter(__kwargtrans__({m2m_field:2}));
print(df);
cj.load();
var sheet=book.active;
print(a._x,a._y);
export var crypts=crypts.__getslice__(1,null,1);
var opener=urllib.request.build_opener(authhandler,urllib.request.HTTPHandler(__kwargtrans__({debuglevel:1})));
export var initials=models.CharField(__kwargtrans__({max_length:20,blank:false,null:false}));
tmp();
export var allowed_domains=[];
ax.autoscale_view();
d[value].append(key);
!any(d.py_values());
var a=[1];
obj.set_x_self();
var queryset=Game.objects.all();
p.feed(xhtml);
sum+=random.randint(0,100);
x.append([x]*5,__kwargtrans__({ignore_index:true}));
var my_thread=QThread();
export var comparison=tf.equal(a,tf.constant(1));
var A1=function(){var __accu0__=[];for(var i of new_order)__accu0__.append(function(){var __accu1__=[];for(var j of new_order)__accu1__.append(A[i][j]);return __accu1__}());return __accu0__}();
var a=list(range(10)).__getslice__(0,null,-1);
var A=A-A.mean(1);
var D=list(Concate.py_values());
var l=fnmatch.filter(string_input.py_split(),pattern);
b.ndim;
self.check_word_type(self,self.filename);
tlist+=ttlist;
template_globals.py_update(__kwargtrans__({render:render_partial}));
hash(self.s);
var x2=np.random.normal(__kwargtrans__({size:N}));
axes.__getitem__([0,0]).set_ylim(0);
dis.dis(myfile);
print(i);
Math.floor(a/1);
print(line);
var ax=plt.gca();
os.chdir(destination.__getslice__(0,len(destination)-1,1)+path);
merge(a,b,function __lambda__(in_a,in_b){return in_a&&!in_b});
axs[i].get_xaxis().set_ticks([]);
export var processHandle=OpenProcess(PROCESS_ALL_ACCESS,false,pid);
var dt=utc_dt.astimezone();
s.boot;
print(result.fetchall());
16777215;
py_metatype.__new__(mcs,classname,bases,dictionary);
self.f.flush();
client.set_missing_host_key_policy(paramiko.AutoAddPolicy());
-Bob;
tuple([])<[];
var x=function(){var __accu0__=[];for(var row of cursor)__accu0__.append([row.SITE_NAME,row.LOOKUP_TABLE]);return dict(__accu0__)}();
var a=Fraction(1,2);
zlib.decompress(compressed);
print(f_x([9,10]));
0;
screen.py_clear();
(function(){var __accu0__=[];for(var i of range(1,len(a)+1,2))__accu0__.append(a.insert(i,a.py_pop()));return __accu0__})();
hashlib.sha512(s).hexdigest();
var lines=f.readlines();
worksheet.update_cell(1,2,form_value_1);
print(uuid.uuid4());
subplots_adjust(__kwargtrans__({top:1,bottom:0,right:1,left:0,hspace:0,wspace:0}));
var d1=datetime.date(2008,8,15);
var __left0__=os.path.splitext(filename);var root=__left0__[0];var extension=__left0__[1];
export var first_ten=df.__getslice__(0,10,1);
tuple([-1,-2]);
print(f.func_count);
my_node.think();
var __except0__=py_TypeError(node);__except0__.__cause__=null;throw __except0__;
a.fn();
print(df);
Orange.data.Table(tdomain,tinsts);
true;
var c=1;
var conn=httplib.HTTPConnection(proxyHost,proxyPort);
self.finish();
new set([new set([fqdn])]);
self.child_pipe.send(result);
var x=Math.floor(len(self.left)/2);
export var a_minus_b=function(){var __accu0__=[];for(var item of a)if(!__in__(item,b))__accu0__.append(item);return __accu0__}();
man.start();
len(self.text);
export var x2fr=min(x2,inarr.shape[0]);
check_matr(a,0);
self.addButton=Gtk.ToolButton();
df;

pickle.dump(db,f);
file.seek(seek);
var rect=rect.move(tuple([x,y]));
inside_points.append(point);
print(line);
self.x-=1;
var d=datetime.datetime.fromtimestamp(posix_now);
cir.draw();
print(field);
var start=datetime.datetime(2009,2,10,14,0);
self.py_metatype=py_metatype;
var z=np.random.random(10);
NAMES.append(py_name);
thread.stop();
var words=line.py_split();
export var opt2=tf.train.GradientDescentOptimizer(1E-4);
var x=np.arange(12).reshape(2,6);
var __left0__=S;var e=__left0__[0];
var thread=threading.Thread(__kwargtrans__({target:read_from_port,args:tuple([serial_port])}));
var full_path=os.path.join(root,fname);
plt.plot(xi,yi);
result[key]=function(){var __accu0__=[];for(var item of group)__accu0__.append(item);return __accu0__}();
cur.execute(sql);
func(...args);
var y=np.ma.masked_where(x==0,x);
egg2(...argList);
foo.foo();
inp.setchannels(1);
var a=np.arange(4);
resonator.py_default;
print(sp.coo_matrix(m.where(m.notnull(),0)));
471;
var n=datetime.now();
any(filter(someDict.__contains__,someList));
var v=-np.cos(np.pi*x)*np.sin(np.pi*y)*np.cos(np.pi*z);
plugin.do_work();
sys.settrace(globaltrace);
var p=multiprocessing.Pool(np);
export var _change=models.IntegerField(__kwargtrans__({py_default:0}));
curPG.execute(sqlCmd);
animal_proxy.make_noise();
d.addCallbacks(callback,errback);

regex.sub(function __lambda__(match){return conv[match.group()]},text);
stdscr.py_clear();
loop.run_until_complete(task);
var c=Counter(list1);
pickle.dump(data,outfile,pickle.HIGHEST_PROTOCOL);
multiprocessing.cpu_count();
pkg_resources.require(requirement);
s.listen(1);
context.enter_context(session);
var r=function(){var __accu0__=[];for(var x of y2d)__accu0__.append(x.sum());return __accu0__}();
print(tuple([x,y]));
numpy.__version__;
ofh.seek(0);
util.run_wsgi_app(application);
var logger=logging.getLogger();
print(tuple([test.a,test.b]));
var end=time.clock();
globals.py_update(frame.f_globals);
self.stop();
hm.HookMouse();
var py_name=forms.CharField(__kwargtrans__({max_length:100}));
print(py_next(c));
form.fileName.file.save(PATH+myFile);
var x=[.2,.2,.8];
tuple([[1,1,1,1,1]]);
var clf=RandomForestClassifier(__kwargtrans__({n_jobs:-1,random_state:42,oob_score:false}));
f(...args,__kwargtrans__(kwargs));
var writer=csv.writer(f,__kwargtrans__({dialect:SomeDialect}));
environment[k].py_update(v);
zip_longest(...function(){var __accu0__=[];for(var i=0;i<n;i++)__accu0__.append(islice(l,i));return py_iter(__accu0__)}());
inner_sum+=dk*f_big(A,k,1E-5,1E-5);
export var mylist1=function(){var __accu0__=[];for(var i of mylist)__accu0__.append(i.strip());return __accu0__}();
var dest=bytearray(10);
var X=vectorizer.fit_transform(lectures);
txt_frm.grid_propagate(false);
install.run(self);
self.request.close();
print(thefile.cleaned_input());
print(name_or_id);
io.py_clear();
print(sess.run(correct_prediction,__kwargtrans__({feed_dict:dict([[x,test_images],[y_,test_labels]])})));
var matches=matches.reshape(tuple([rows,cols,cols]));
d.append(val);
var my_array=rand(int(5E7),1);
dis.dis(foo);
var soup=BeautifulSoup(s);
nli.get_item();
var weights=np.array([16,4,2]);
var index=np.searchsorted(colkeys,py_keys,__kwargtrans__({sorter:sorter}));
block(chr(2944));
f.seek(-offset,os.SEEK_END);
var p=ss.expon.fit(data,__kwargtrans__({floc:0}));
curs.close();
print(s);
sns.set(__kwargtrans__({font_scale:.8}));
out[product_name]=[];
var country=models.CharField(__kwargtrans__({max_length:150}));
print(inst.id);
plt.figure(__kwargtrans__({figsize:tuple([10,5])}));
var fig=plt.figure();
fp.close();
alembic.config.main(__kwargtrans__({argv:alembicArgs}));
inspect.getsource(myfile);
var __left0__=rgb_to_hsv(target_r,target_g,target_b);export var target_h=__left0__[0];export var target_s=__left0__[1];export var target_v=__left0__[2];
var d=defaultdict(list);
df1.div(df2squeeze());
app.run(__kwargtrans__({use_reloader:false}));
var columns=function(){var __accu0__=[];for(var column of mapper.columns)__accu0__.append(column.key);return __accu0__}();
painter.restore();
var new_rows=[];
result.insert(0,l);
len(b);
var df=sc.parallelize(function(){var __accu0__=[];for(var x=97;x<112;x++)__accu0__.append(row(chr(x)));return py_iter(__accu0__)}()).toDF();
var a=test.Array();
print(search_result.group());
var sock=socket.socket();
reverse(x);
scikits.audiolab.play(data,__kwargtrans__({fs:44100}));
x.__getitem__([0,tuple([0,null,1]),tuple([0,null,1])]).__getitem__([tuple([0,null,1]),[0,2]]);
data;
var Y=R*np.sin(THETA)-2;
objs.append(parse_obj());
var c=concatenate(tuple([a,b]));
var product=models.CharField(__kwargtrans__({max_length:150}));
print(newer_grammar.productions()[-1]);
export var builder=gtk.Builder();
object.__getattribute__(self,x);
data.shape=-1;
0;
curdict[item]=dict({});
print(proc.pid);
lockup;
crackdown;
result.append(option);
plt.show();
var COMPRESS_ENABLED=true;
permutations_helper(elements,[0]*n,n-1);
var chars=list(chain.from_iterable(function(){var __accu0__=[];for(var word of l)__accu0__.append(list(set(word)));return __accu0__}()));
export var _f=dill.dumps(f);
print(args.n);
expr;
var col_names=first_reps.columns.get_level_values(2);
print(list(generate_digits_permutation()));
print(mse(model_2_v1.predict(xg_test),y_test));
var ip=get_ip(request);
[2,2,2];
print(list_to_html(toc));
temp.append(j);
min_kmeans.fit(vectors);
[];
export var cookie2=value2;
y-fitfunc(p,x);
a[2][1]=a[2][1]+5;
self.py_name=py_name;
false;
print(a.x,a.y);
a.add_rule(phyrule);
var dates_dict=defaultdict(list);
print(resp.read());
pickle.dump(a,handle,__kwargtrans__({protocol:pickle.HIGHEST_PROTOCOL}));
response;
g.writelines(function(){var __accu0__=[];for(var line of f)__accu0__.append(ss+line);return py_iter(__accu0__)}());
wrapper.__doc__=func.__doc__;
print(match);
var a=matrix(n);
print(true);
set.seed(1);
var parser=argparse.ArgumentParser();
var arr=df1.py_values.__getitem__([tuple([0,null,1]),tuple([0,-2,1])]);
all_subclasses.extend(get_all_subclasses(subclass));
lang.terminology;
pprint(dict(year2students));
var x2=np.random.normal(-15,7,1E5);
scr.exitonclick();
var d=dict({});
a.insert(0,1);
var pid=sys.argv[1];
list_.append(lines[i+j][2]);
os.close(fd);
var diffs=array1-array2;
p.cpu_times();
var kernel=np.zeros(tuple([2*radius+1,2*radius+1]));
loop.run_until_complete(run(__kwargtrans__({loop:loop})));
var lista=[df.columns.__getitem__([tuple([0,null,1])]).py_values.astype(str).tolist()]+df.py_values.tolist();
export var restored=pickle.loads(pickled);
var x=sin(pi*t);
Py_DECREF(keywords);
out+=ser.read(1);
export var reducedQs=reducedQs.filter(__kwargtrans__({participants__id:p.id}));
print(b.shape);
my_date.setTime(time_t*1E3);
self.errorcall(E,...args,__kwargtrans__(kwargs));
var a=[4,5,6];
cv2.circle(img,center,radius,tuple([0,255,0]),2);
self.__dict__=dict(module.__dict__);
foo.something;
print(s,sense2freq[s]);
issubclass(p2,p1);
ogl.CGLGetCurrentContext.restype=ctypes.c_void_p;
dt.py_replace(__kwargtrans__({tzinfo:self}));
mydriver.py_get(baseurl);
A.setdiag(b);
pyplot.grid();
repr(self.val);
G.add_edges_from(edges);
export var time_epoch=time.time();
dict.__setitem__(self,key,value);
gevent.sleep(0);
export var mycursor=db.cursor();
var results=api.lookup_users(__kwargtrans__({user_ids:page}));
plt.title(str(i));
X.foo=67;
num_array.append(int(n));
self.figure=Figure();
print(py_typeof(first_arg_unicode));
l_x.append(len(s)-1);
infile.write(text);
var result=function(){var __accu0__=[];for(var x of l)if(f(x))__accu0__.append(x);return py_iter(__accu0__)}();
py_values.append(tuple([frame,row,col,data.__getitem__([row,col,frame])]));

tuple([[1,0,0]]);
var a=np.random.randint(0,5,__kwargtrans__({size:tuple([6,4])}));
mask;
var myList=function(){var __accu0__=[];for(var item of myList)__accu0__.append(gen_rand(item));return __accu0__}();
true;
f(l);
var weights=np.array(initial_weights);
var arr=[];
main(sys.argv);
var out=np.empty(tuple([m,n,2]),__kwargtrans__({dtype:int}));
toks_with_adjectives.extend(adjs);
do_something_with(self._implementation());
watcher.start();
var reader=csv.reader(f);
np.add.at(grids,tuple([idx.__getitem__([tuple([0,null,1]),0]),idx.__getitem__([tuple([0,null,1]),1])]),1);
print(len(stack));
var x=mu+sigma*np.random.randn(N);
drawdown.plot(__kwargtrans__({legend:true}));
var tag=db.ReferenceProperty(Tag);
var __left0__=tuple([ks[0],ks.__getslice__(1,null,1)]);var first=__left0__[0];var rest=__left0__[1];
self.c+=1;
export var dist_python_DATA=foo.py;
var time=np.random.random(10);
var a=[0];
var data=dict({});
files.py_sort(__kwargtrans__({key:function __lambda__(x){return os.path.getmtime(x)}}));
df;
in_file.seek(seek_offset,os.SEEK_END);
py_typeof(test.f);
var df=df.__getslice__(0,null,-1);
x+=1;
var R1=numpy.linalg.cholesky(V1).transpose();
export var user_lastName=db.Column(db.String(64));
var total=0;
export var c4=sum(function(){var __accu0__=[];for(var i of y)if(.9<i&&i<=1.8)__accu0__.append(1);return py_iter(__accu0__)}())/1E4;
swig_wrapper.py_copy(img,mem,length);
vol.append(volume.__getslice__(start,end,1));
wrapper;
client.load_system_host_keys();
parent.append(self);
new_grammar._productions.append(singapore_production);
gobject.timeout_add(60*1E3,my_timer);
tuple([x,x<=y?y:y,x]);
tornado.web.Application.__init__(self,handlers,__kwargtrans__(settings));
tuple([deleteoutlook,msg]);
var text=open(path).read();
window.add(box);
new_values.append(value);
leftfile2rightfile2;
var user=myuser;
print(is_int(x_));
export var lastname=Column(String(50));
var py_name=person.key().py_name();
var b=int(round(time.time()*1E3));
print(b);
setattr(namespace,self.dest,list);
var manager=multiprocessing.Manager();
statinfo.st_size;
loop.close();
self.output=QtGui.QTextEdit();

var register=template.Library();

manager.operations.util.build_filter=brcd_build_filter;
var s=list(range(10));
var b=numpy.random.randint(0,10,10)*1;
list(range(item.start,item.stop));
demo[0][0]=1;
inst.__dict__[self.attr];
1<<8;
var o1=np.lexsort(arr1.T);
var x=scipy.arange(size);
loop.stop();
Customer.objects.create(__kwargtrans__(validated_data));
self.loop.stop();
var strings=function(){var __accu0__=[];for(var i=0;i<10;i++)__accu0__.append(str(i));return __accu0__}();
export var piece_hash=hashlib.sha1(piece).digest();
print(mytuple[2]);
print(i);
b.join();
do_two();
t+=1;
_recursivePop(tree,nodes.__getslice__(1,null,1));
duplicate_shaders_dict;
var f=itemgetter(0);
c.py_pop(0);
self.value=min(self._max,max(value,self._min));
var writer=csv.writer(buffer);
l1.append(tuple([result1,result2]));
var a=4;
var __left0__=tuple([1,2]);var x=__left0__[0];var y=__left0__[1];
print(id(object()));
value;
print(bilinterp(22E3,2));
var test=models.ForeignKey(Test);
export var inbuf=DblTriplet(60.1,20.2,.5);
var py_values=self.request.get_all(argument);
strio.write(buffer.data());
df[df.T.convert_objects().dtypes!=object];
dcObj.DeleteDC();
var res2=np.sum(a*b,__kwargtrans__({axis:1}));
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
var c=np.random.randint(cols,__kwargtrans__({size:100}));
context.push();
(function(){var __accu0__=[];for(var item of self.many2many)__accu0__.append(item.serialize);return __accu0__})();
export var customer_number=models.IntegerField(__kwargtrans__({py_default:1}));
print(json.dumps(obj,__kwargtrans__({cls:MyEncoder})));
print(x);
df.AVG_MINUTES=list(map(list,zip(df.HOUR,df.AVG_MINUTES)));
self.write(str(i));
np.exp(-Math.pow(x,2));
sh.setFormatter(formatter);
plt.scatter(xx,yy);
getattr(self,self.map[cb])();
var app=Flask(__name__);
var d=defaultdict(list);
l.insert(0,x);
var a=np.array([[2,4],[1,2]]);
print(n_neighbor(G,1));
outputs.append(s);
print(sm2.getName());
var args=parse.parse_args();
dst[0]=tmp;
export var myzipfile=zipfile.ZipFile(zipdata);
curl.perform();

var indices=numpy.indices(shape)[axis];
export var unpickler=Unpickler(file);
var found=re.findall(__mod__(patbase,x),ss,re.DOTALL);
self.validate(parser,value);
rs.py_get();
var idx=df.index.str[0];
atexit.register(exit_handler);
out.write(line);
var data=np.array(data);
A[np.isnan(A)]=np.interp(x,xp,fp);
var d=function(){var __accu0__=[];for(var c of r)__accu0__.append(c.isdigit());return __accu0__}();
reverse.py;
print(repr(decoded));
var answer2=func(remaining_map2);
export var answer1A=func(remaining_map1);
var groups=[df.customer,df.invoice_nr,df.date,df.amount.abs()];
self.functor=functor;
queue.add(my_func,false,somearg,__kwargtrans__({somekwarg:someval}));
self.editname=wx.TextCtrl(self.panel,__kwargtrans__({size:tuple([140,-1])}));
self.request.send(data);
var median=partial(quantile,__kwargtrans__({p:.5}));
self.__dict__=dict;
1+max(depth(exp[0]),depth(exp.__getslice__(1,null,1)));
PP.pprint(x,__kwargtrans__({width:len(x)}));
np.random.seed(101);
Response(__kwargtrans__({status:status.HTTP_205_RESET_CONTENT}));
t.join();
print(df);
b.shape;
self.current=range_list[0];
f.flush();
my_data[my_data==0]=numpy.nan;
l.remove(l);
self.lst.append(x);
var input=raw_input;
export var sqs=SearchQuerySet().filter(__kwargtrans__({content:q_clean}));
var auth=tweepy.OAuthHandler(consumer_key,consumer_secret);
var match=p.search(s);
export var y2fr=min(y2,inarr.shape[1]);
export var train_labels=np.array(function(){var __accu0__=[];for(var x of train_labels)__accu0__.append(labels.index(x));return __accu0__}());
n;
count+=1;
[tuple([i,100,1E3]),tuple([i,100,1001]),tuple([i,100,1002]),tuple([i+1,101,1001])];
self.fnames.append(py_name);
loaded_mm.close();
Point(0,1).wkt;
export var Ybase=medfilt(Y,51);
map(function __lambda__(x){return x?1:0},testList);
a_frame.pack();
var paw_number=np.arange(len(paw_coords));
print(__mod__(hpattern,tuple(headers)));
print(mystring);
var B=scipy.delete(B,2,0);
self.console.configure(__kwargtrans__({state:tk.DISABLED}));
py_typeof(a);
print(f.upper().newMethod().lower());
var a=a.astype(float);
pix.__setitem__([x,y],value);
var k=np.asarray(py_keys);
var s=im.tostring();

export var imageLarger=cv2.pyrUp(image);
export var string2=unique_words(string1);
var x=scipy.linspace(0,pi,100);
self.camera.input_queue.put(self.idle_data_buffers.py_pop());
setattr(self,special_attr,value);
var image=pyexiv2.Image(file_path);
result.__getitem__([0,0,0,0,1]);
list(grps(l,4,2));
var angle=.5*np.arctan(2*u11/(u20-u02));
var starts=np.where(d==1)[0];
self._meta.db_table;
var data=file.read();
var q=Queue.Queue();
ignore[np.ma.minimum(y11,y12)>np.ma.maximum(y21,y22)]=true;
dd[v].add(k);
hops;
cout;
ctx.move_to(0,0);

unittest.TextTestRunner().run(suite);
var root=Tk();

demo(1);
var retcode=proc.poll();
var t=np.linspace(0,2*np.pi,20);
export var dfi=dfi.set_index(my_column);
var results=defaultdict(function __lambda__(){return defaultdict(dict)});
new_file.save();
time.sleep(1);
var instance=BillboardTracker.objects.py_get(__kwargtrans__({id:some_id}));
find([]);
export var DEBUG_PROPAGATE_EXCEPTIONS=true;
var rank=tf.rank(x);
f.seek(8,1);
my_list;
var __except0__=StopIteration;__except0__.__cause__=null;throw __except0__;
sleep(.1);
false;
var content=sock.read();
d.py_setdefault(k,[k]).append(v);
formatted(1E10);
var list_of_bools=[true,true,true,false];
print(Bar.get_counter());
tuple([JM1,JM2]);
f(4);
self.parent().viewport().mapFromGlobal(QCursor.pos());
self.done=true;
var root=Tk();
test(1,2);
var seen=set();
py_next(reader2);
var buckets=sorted(buckets,__kwargtrans__({key:get_index}));
export var input_str_lower=input_str.lower();
set(d.py_items())-set(d2.py_items());
self.xaxis.set_zorder(.5);
func.value;
export var mock=patcher.start();
var browser=mechanize.Browser();
(function(){var __accu0__=[];for(var comment of comments)__accu0__.append(comment.extract());return __accu0__})();
var result=numpy.sin(a);
repr(fs2);
var C=[6,8,7,9,6];
(function __lambda__(){var a=tuple([].slice.apply(arguments).slice(0));return self.command(attr,...a,__kwargtrans__(kw))});
var user=client_form.save();
Ti.UI.setMenu(menu);
var ax1=fig.add_subplot(111);
f.free_symbols;
print(nltk.sem.relextract.rtuple(rel));
print(i.py_name,i.pid);
repr(obj);
var seq=itertools.takewhile(function __lambda__(x){return x<MAXNUM},itertools.count(2));
r[np.all(r==0,__kwargtrans__({axis:1}))];
export var fk=models.ForeignKey(ModelB);
df;
user1.friends[0].added_by;
qp.waitForFinished();
var args=parser.parse_args();
serversocket.close();
traceback.print_stack(sys.stderr);
response;
var autorestart=py_true;
export var feedback=form.save(__kwargtrans__({commit:false}));
sys.excepthook(...sys.exc_info());
out.append(word);
df;
Surface.fill(tuple([255,255,255]));
var c=db.cursor();
max(set.intersection(...matches),__kwargtrans__({key:len}));
py.test.cmdline.main(args);
fig.clf();
var app=Flask(__name__);
chr(65);
var data=f.read(8192);
1-10<0;
var frame=cv2.flip(frame,180);
self.list[i];
print(df1);
export var parsed_message=json.loads(message);
self.pt_plot.set_xdata(x);
logging.captureWarnings(true);
var x=np.arange(__kwargtrans__({start:0,stop:5,step:.1}));
leaf[lst[-2]]=lst[-1];
var __left0__=tuple([[],[]]);var first=__left0__[0];var last=__left0__[1];

user_ids.append(user_id);
export var neighbors=function(){var __accu0__=[];for(var e of neighbors)if(!__in__(e,visited_nodes))__accu0__.append(e);return __accu0__}();

self.assertResultEqual(expected,s);
var img=cStringIO.StringIO(fp.read());
var data=json.loads(data);
[MYSERVER];
var html=response.read();
export var increments=[0]*len(a);
Math.pow(X,2)+Math.pow(Y,2)+Math.pow(Z,2)<Math.pow(radius,2);
item_dict[sample[0]];
var s=sum(ind.__getslice__(0,i-1,1));
var form=ItemForm(request.POST);

var a=np.random.random(tuple([10,10,10,10,10,10,10]));
print(my_tz.normalize(my_tz.localize(dt+delta)));
export var columnsums=numpy.sum(points,0);
mouse_tooltip.show();
(function(){var __accu0__=[];for(var _=0;_<idx;_++)__accu0__.append(ascends.py_pop());return __accu0__})();
__in__(new set([1]),x);
signal.siginterrupt(signal.SIGHUP,false);
df.sum();
self.pipewritestreams=[];
__in__(rec.levelno,tuple([logging.DEBUG,logging.INFO]));
[1];
var register=template.Library();
STOCK_ORIENTATION_REVERSE_PORTRAIT;
np.nan!=np.nan;
self.right=[];
db.session.add(user1_from_factory);
export var joystick=pygame.joystick.Joystick(i);
var idx=np.argmax(a[i]);
self.received_cookies.py_get(key);
s.__getslice__(0,amount,1);
var root=tkinter.Tk();
[a,b-a,c-b,40-c];
export var text2=open(file2).read();
var y=deepcopy(x);
print(isinstance(b,A));
glClearColor(0,0,0,0);
a.__getslice__(0,null,-1)[200]=6;
self.view.teasers=self.prepare_teasers();
self.dg.DataContext=self;
export var CENTROIDS=np.array([0,10,50]);
var b=np.random.random(tuple([2,5]));
var list_1_sorted=function(){var __accu0__=[];for(var e of s)__accu0__.append(e[1]);return __accu0__}();
f(x,A);
var __left0__=s.recvfrom(1024);var msg=__left0__[0];var address=__left0__[1];
var data=numpy.zeros(tuple([x,y]));
var s=str(d);
export var xlbls=ax.get_xmajorticklabels();
var data=list(range(1,11));
happy(vs.unhappy);
var y=500+r*math.sin(theta);
var best=[1]+[0]*n;
var m=sorted(l);
plt.waitforbuttonpress(0);

list((found-expected).elements());
sdict;
f.close();
export var mime=mimetypes.guess_type(file);
g.write(q);
export var letter_set=frozenset(string.ascii_lowercase+string.ascii_uppercase);
list(range(5)).__getslice__(5,6,1)+[999][0];
tuple([n11,n10,n01,n00]);
b(2,5);
export var c2=pickle.loads(pickle.dumps(c));
var address=StringField();
var names=[];
d[word]+=1;
export var receive_newsletter=forms.BooleanField();
HttpResponseNotAllowed(list(table.py_keys()));

var list2=function(){var __accu0__=[];for(var i of list1)__accu0__.append(tuple([i,i*2,i]));return __accu0__}();
var bus=dbus.SessionBus();
tuple([cgi.escape(site_title),cgi.escape(URL)]);
label.mainloop();
w.py_update();
print(md.myfx(arg1));
collections.Counter(l);
mpl.show();
result;
var dt_aware=pytz.utc.localize(dt_naive);
var i=bisect.bisect_right(intvals,x);
export var _byhour=false;
var s=s.__getslice__(0,20,1);
var a=random.randint(0,20);
nosetests- -exe;
var df2=s2.reset_index();
q.set_message_class(RawMessage);
var args=parser.parse_args();
export var Yhat=np.dot(X,bhat);
flist.append(partial(func,i));
var b=[];
data[py_name(row)].append(row);
df;
internet_set_option(0,self.INTERNET_OPTION_SETTINGS_CHANGED,0,0);
var lst=[x,y,numberofcolumns,numberofrows];
self._file.close();
dict(function(){var __accu0__=[];for(var [k,v]of list(self.py_items()))if(fnmatch(k,match))__accu0__.append(tuple([k,v]));return __accu0__}());
var y=sin(x*2)+sin(x+1);
print(list(od.py_values()));
var __left0__=stats.norm.fit(np.log(x));var mu=__left0__[0];var sigma=__left0__[1];
mpu.upload_part_from_file(stream,partCount[0]);
export var rop=str(self.rop);
print(s);
print(row);
var ax=fig.add_subplot(222);
display(bg_img);
FG().f();
var myfile=get_file(path);
var series1=df.iloc.__getitem__([0,tuple([0,null,1])]);
tuple([a]);
hdf.close();
export var resmatrix=function(){var __accu0__=[];for(var i=0;i<len(newresnums);i++)__accu0__.append([newresnums[i],resindices[i]]);return __accu0__}();
txet;
sigmoid(W*(x1+x2)+B);
var r=NumericProperty(0);
var l=l.py_split();
nodes_nummpy_array.__getitem__([tuple([0,null,1]),2]);
sys.float_info;
wn.wup_similarity(dog,car);
print(columns[0]);
var a=int(sys.argv[1]);
export var sub_lst=function(){var __accu0__=[];for(var i of lst)if(isinstance(i,str))__accu0__.append(i);return __accu0__}();
print(i);
len(list(range(max(x[0],y[0]),min(x[-1],y[-1])+1)))>0;
export var DEFAULT_DATE=datetime.datetime(datetime.MINYEAR,1,1);
export var xslt_doc=ET.parse(io.BytesIO(xslt));
var points=np.linspace(x.min(),x.max(),N);
classmethod(bar).__get__(foo)();
var A=function(){var __accu0__=[];for(var i=0;i<4;i++)__accu0__.append(np.random.random(tuple([5,5])));return __accu0__}();
export var old_text=entry.get_text();
var root=tk.Tk();
print(repr(a));
print(df);
var l=list(range(1,10));
var py_name=cls.__name__;
total+=i;
var lens=np.array(map(len,a));
print(sql);
temp.append(v);
var py_items=function(){var __accu0__=[];for(var x of sorted(ps,__kwargtrans__({reverse:true})))__accu0__.append(tuple([x]));return py_iter(__accu0__)}();
var a=numpy.arange(5);
self.updates.add(obj);
json.loads(self.data);
pprint(dict(busbar._asdict()));
self.apply_async(func,args,kwds).py_get();
var dt=datetime.datetime.combine(d,t);

[1,2];
the_dict[b.py_pop(0)]=b.py_pop(0);
export var g1=function(){var __accu0__=[];for(var i=0;i<len(list1)-1;i++)__accu0__.append(tuple([i,i+1]));return py_iter(__accu0__)}();
[k];
var ser=serial.Serial(0);
stream.map(model.MyClassifier.do_something).pprint();
check_for_use(true);
var csv_reader=csv.reader(utf8_data,__kwargtrans__(__mergekwargtrans__({dialect:dialect},kwargs)));
s.close();


ranges.append(group[0]);
pyplot.axis(ex2);
deleteself.__dict__[py_name];
df.join(cs);
self.__dict__.py_update(kw);
setattr(cls._meta.get_field(field),prop,val);
var axes=all_data[ASK_PRICE].plot(__kwargtrans__({figsize:tuple([16,12])}));
var escapesequence=matchobj.group(0);
print(buffer(s,i,j-i));
var A=np.zeros(p);
var i=len(string)-1;
var start=time.clock();
error();
var m=A.mean(__kwargtrans__({axis:1}));
pp(expr);
pandas.concat(ret_list);
install_python_dependencies;
var app=QApplication([]);
self.session_store.save_sessions(self.response);
df;
self.clients.remove(client);
export var studentname=py_name;
random.random();
var A=[[1,0,1,1],[0,1,1,0],[0,1,0,1]];
print(repr(.1));
var user=models.ForeignKey(User);
self.inner_sizer=wx.BoxSizer(wx.HORIZONTAL);
self.cells.append(Cell(self,i));
var a=np.array([2,4,6,8]);
numloss;
export var df8=df.ix.__getitem__([tuple([0,null,1]),tuple([84,96,1])]);
var __left0__=np.rollaxis(quaternion1,-1,0);var x1=__left0__[0];var y1=__left0__[1];export var z1=__left0__[2];export var w1=__left0__[3];
wx.App();
x.add(j);
tuple([[.5,-1,.5,0]]);
var A=np.zeros(tuple([2*(n-1),2*(n-1)]));
req;
print(data);
x==y;
export var someday=datetime.date(2008,12,25);
addChild(image2);
var S=np.cumsum(Math.pow(c.__getslice__(1,null,1),2));
x+=y;
print(self.foo);
hande_file(file);
export var changed=function(){var __accu0__=[];for(var [k,v]of list(self.byName.py_items()))if(id(person)==id(v))__accu0__.append(tuple([k,v]));return __accu0__}();
df;
plt.show();
var l=function(){var __accu0__=[];for(var i=0;i<n;i++)__accu0__.append(0);return __accu0__}();
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
var x=mu+sigma*np.random.randn(1E4);
print(new_text);
parts.append(path);
export var departments=Department.objects.all();
self.p.stdin.write(image.tostring());
print(normalized(A,1));
var __left0__=p1.communicate();export var p1out=__left0__[0];export var p1err=__left0__[1];
sys.stdout.flush();
Gtk.main();
f.write(t);
var x=T.dmatrix();
var serializer=MyPhotoSerializer(__kwargtrans__({data:request.data}));
self.py_items;
mpl.ticker.ScalarFormatter.__call__(self,value,pos);
grammar.load();
var data=fh.read();
var msg=MIMEText(content,text_subtype);
self.wfile.close();
time.sleep(1);
var ei=sys.exc_info();
ip;
tuple([19921.8126944154]);
flush_transaction();
export var my_record=MyModel.objects.py_get(__kwargtrans__({id:XXX}));
destination.write(chunk);
Base.metadata.create_all(engine);
var py_name=models.CharField(__kwargtrans__({max_length:80}));
tmr.stop();
setattr_func(self,attr,value);
var image=Image.open(path);
len(ln)-list(py_reversed(ln)).index(1)-1;
py_typeof(parsed_tree);
var v=np.array([10,11,np.nan]);
var args=parser.parse_args();
pp.savefig(plot2);
mlab.axes();
f.write(source);
tuple([pa-p0,pb-p0,pc-p0]);
var __left0__=scipy.io.wavfile.read(filename);export var fs1=__left0__[0];var y1=__left0__[1];
var a=Question.objects.create();
print(fcst_serie);
var a=np.array(a);
export var transmission_array=[];
self._format(object,self._stream,0,0,dict({}),0);
var py_metatype=models.ForeignKey(ContentType,__kwargtrans__({editable:false}));
driver.switchTo().window(curWindow);
var command=os.path.normpath(command);
var ax=plt.subplot(111);
f.write(text);
py_typeof(self)(self+val);
var x=np.zeros(tuple([200,2E3]),float);
__in__(py_typeof(obj),tuple([py_metatype,py_metatype]));
listening_sockets.append(listening_socket);
response;
var b=tf.Variable(tf.zeros([1]));
var angle=2*math.pi/s;
var mylist=[a,b,c];
os.nonexisting();
print(h.getresponse().read());
picture.pictureClicked.connect(self.anotherSlot);
display(self.fig);
var instance=object.__new__(cls,...args,__kwargtrans__(kwargs));
var data=urllib.request.urlopen(url).read();
self.lines.append(self.addLine(0,yc,width,yc,pen));
client.load_system_host_keys();
var idx=np.random.randint(0,10,tuple([yt,xt]));
print(hash(foo));
export var inc2=functools.partial(add,2);
var f=urllib.request.urlopen(req);
chainCalling(funcs[0](arg),funcs.__getslice__(1,null,1));
lock.acquire();
residuals(p_guess,x,y);
export var packetcount=packetcount+1;
dict(function(){var __accu0__=[];for(var [k,v]of list(result.py_items()))__accu0__.append(tuple([k,sorted(v)]));return py_iter(__accu0__)}());
main();
var data=dict({});
lock.acquire();
print(tuple([MyEnum.a,MyEnum.b]));
test();
formatqn.allow_tags=true;
a.append(x);
admin.site.unregister(User);
var y=x^1<<j-1;
sys.stderr.write(__mod__(message,self.pidfile));
get_model(app_label,model_name,__kwargtrans__({seed_cache:false})).objects.count();
self._odict.__repr__();
var __left0__=latlontopixels(lrlat,lrlon,zoom);export var lrx=__left0__[0];export var lry=__left0__[1];
var session=cluster.connect();
var total=total+int(n);
true;
export var autovivify=function __lambda__(){return defaultdict(autovivify)};
insert_many(l);
df;
var grid=mlab.pipeline.scalar_field(xi,yi,zi,density);
var m=mmap.mmap(fh.fileno(),0,__kwargtrans__({access:mmap.ACCESS_READ}));
os.remove(sockfile);
var created=db.Column(db.DateTime);
print(text);
var content=f.read();
var result=ws.recv();
export var exit_codes=function(){var __accu0__=[];for(var p of tuple([p1,p2]))__accu0__.append(p.wait());return __accu0__}();
self.request_roster();
self.itemChanged.connect(self.changeBG);
btree_container.py_setdefault(Gnodes,[]).append([Hnodes,score,-1]);
delattr(self,py_name);
var matcher=re.compile(myExpression,re.IGNORECASE);

s+=element.tail;
var __left0__=np.random.random(tuple([2,10]));var x1=__left0__[0];var y1=__left0__[1];
export var rng=arr.max()-arr.min();
var combined=list(zip(a,b));
David;
export var alnPDBseq=aln[0];
s+=a;
df;
print(x);
plt.show();
rospy.spin();
self.spider=MySpider();
var value=int(eval(input(prompt)));
lock.release();
var words=s.py_split();
var fig=plt.figure();
f;
2==true;
var api=tweepy.API(auth);
var a=i&1;
print(result);
results.append(row);
var df=pd.read_sql_query(sql,con);
uple1[1][0];
deletesys.argv[1];
export var skip=int(1*total/surplus+.5);
s.bind(tuple([HOST,0]));
ax.fill_between(x,low,high,__kwargtrans__({alpha:.2,color:palette.py_pop(0)}));

var f=io.StringIO();
print(i+ + +i);
var a=asarray(a);
export var updated_on=models.DateTimeField();
x(r);
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
var partslist=good_histograms(nballs,nboxes,minballs,maxballs);
var columns=zip(...original_rows);
print(ceil(lgamma(1E5+1)/log(10)));
root.py_clear();
nosetest;
cache[args]=obj(...args,__kwargtrans__(kwargs));
export var dmesg=dmesgProcess.communicate()[0];
mat.__setitem__([list(range(n)),list(range(n))],list(range(n)));
rounding_swig/testrounding.py;
var data=conn.recv(1024);
ax1.plot(yp,np.linspace(0,len(yp),len(yp)));
var __left0__=im.py_split();var r=__left0__[0];var g=__left0__[1];var b=__left0__[2];
var map=dict(list(token.tok_name.py_items())+list(symbol.sym_name.py_items()));
tuple([datetime.datetime(__kwargtrans__(py_values)),tz]);
print(i);
i.start();
inmap(function __lambda__(x){return Math.pow(x,2)},a);
all(function(){var __accu0__=[];for(var ch of x)__accu0__.append(any(function(){var __accu1__=[];for(var c of it)__accu1__.append(c==ch);return py_iter(__accu1__)}()));return py_iter(__accu0__)}());
result[element]=result.py_get(element,0)+1;
obj.isoformat();
var x=A;
self.window.setCentralWidget(QtGui.QTextEdit(self.window));
export var sshcon=paramiko.SSHClient();
gevent.spawn(self.counter_loop);
db.init_app(app);
x[i]=i;
out[0]=Math.pow(X[0],2)-Math.pow(X[1],2)+params[0]*X[0]+params[1]*X[1];
var temp=sorted(list_of_medals,__kwargtrans__({key:itemgetter(0)}));
print(cache.value.groups());
var distances=pdist(X,wminkowski,2,[1,1,1,10]);
var mask=np.ones(tuple([rows]),__kwargtrans__({dtype:np.bool}));
s2.difference(s1);
self.process.terminate();
var __left0__=tuple([arr.shape[0],arr.shape[1]]);var x=__left0__[0];var y=__left0__[1];
1;
json.dumps(value);
i+=1;
list(data.py_keys());
app.run(__kwargtrans__(__mergekwargtrans__({ssl_context:context},kwargs)));
export var lut=[];
print(re.sub(expr,replace_by,mystr2));
print(myDict);
var w=numpy.random.random(ndims);
var top=random.randrange(0,y1);
i+=1;
print(a);
var x=np.linspace(0,np.pi,nx);
file.readinto(buff);
kth_order_statistic2(r,k-len(l)-len(m));
greeter.greet();
self.start();
r.clipboard_clear();
var data=np.sqrt(Math.pow(x-s/2,2)+Math.pow(y-s/2,2)+Math.pow(2*z-s/2,2));
var age=FloatField();
np.random.seed(1);
var __left0__=zip(..._zips);export var new_list_1=__left0__[0];export var new_list_2=__left0__[1];
var INVENV=1;
result;
var ps=Popen(cmd,__kwargtrans__({shell:true,stdin:PIPE,stdout:PIPE,stderr:PIPE}));
conf.check_python_version(tuple([2,4,2]));
(function(){var __accu0__=[];for(var counter of counters)__accu0__.append(function(){var __accu1__=[];for(var feat of all_features)__accu1__.append(counter[feat]);return __accu1__}());return __accu0__})();
export var caller=inspect.currentframe().f_back;
var root=Tk();
var L=np.array([1,1,1,-1,-1,1,-1,1,1,-1,-1,-1,1,-1]);
var offset=time.clock();
var d=AtomicDict();
AbortSavepoint(self,transaction.py_get());
tuple([1,4,5,6,12]);
var t=np.arange(25,__kwargtrans__({dtype:np.float64}));
df[0]=list(range(15));
var metadata=MetaData();
bar1.__class__.num;
-dtrflow-mdmbuf;
var A=np.asmatrix(np.arange(N)).T;

self.show();
time.sleep(10);
df.to_dict();
var ax=plt.subplot(111);
q.set_callback(cb);
pinot_noir;
help(ContextManager);

var __left0__=parser.parse_known_args();var args=__left0__[0];export var extras=__left0__[1];
hsh.set_http_debuglevel(1);
s.mode()[0];
line.set_xdata(x1);
self.x=x;
export var input_as_vector=tf.reshape(input,[-1]);
self;
Foo.bar();
literal_eval(i);
Serial.println();
var g=df.groupby(function __lambda__(x){return x/60});
export var FORMAT=pyaudio.paInt16;
tuple([plt.xticks([]),plt.yticks([])]);
var self=int.__new__(cls,...args,__kwargtrans__(kwargs));
clientSocket.send(subject.encode());
export var L1_unique_values=set(L1)-unwanted;
myfilter.is_safe=true;
eval(input());
print(get_ax_size(ax2));
int(str(num).__getslice__(0,null,-1));
self.timer=wx.Timer(self);
query;
var w=UICPS();
quad(f,0,1,__kwargtrans__({args:tuple([T])}))[0];
time.sleep(i);
var __except0__=MemoryError();__except0__.__cause__=null;throw __except0__;
print(e.args[0]);
(X-xmin)/(X.max(__kwargtrans__({axis:0}))-xmin);
var result=result.filter(or_(..._filters));
self.server=Flask(__name__);
object.__new__(cls);
plt.subplot(212);
[account2];
var im_hsv=cv2.dilate(im_hsv,element);
var site=request.context;
ignore_list.append(file);
isinstance(other,cls);
json.dump(self.object,file);
cb();
self._value;
self.data[item];
print(item);
var string=repr(lst);
var lst=anything;
var idx=np.zeros(len(m),__kwargtrans__({dtype:np.int}));
A.func=classmethod(func);
var logger=logging.getLogger();
obj.timestamp=current_time();
var r=s.py_get(URL);
writer.save();
logger.addHandler(sh);
sm.ReadConfig(__kwargtrans__({Filename:sys.argv[1]}));
self._c.public();
renL.AddActor(actor);
var thread=Thread(__kwargtrans__({target:handler,args:tuple([result])}));
print(a.text);
cursor;
var new_list=[];
export var assets=Environment(app);

deque(enumerate(itertools.accumulate(x),1),__kwargtrans__({maxlen:1}));
pprint(mydict);
var y=random.choice([top,bottom]);
sys.settrace(tracefunc);
evnt.ignore();
bin8(6);
self.fed.append(d);

neighbors.remove(parent);
2;
var lst=[];
export var showpageno=true;
var data=np.random.randint(1,5,20).reshape(10,2);
c.__setslice__(0,null,null,a+b);
time.sleep(5);
print(df);
df;
var date_ceased_to_act=models.DateField(__kwargtrans__({blank:true,null:true}));
tuple([1,0,1]);
conn.read();
var loss=tf.reduce_mean(tf.square(y_-y));
axs[0].xaxis.set_minor_locator(x_minor_lct);
var b=np.array([9,8]);
QCoreApplication.processEvents();
var __except0__=ValueError;__except0__.__cause__=null;throw __except0__;
var cursor=connection.cursor();
self.yaxis.set_zorder(.5);
s.py_sort();
L.reverse();
var chunk=bytes_to_int(f.read(2));
var last_name=models.CharField(__kwargtrans__({max_length:40}));
ora_conn.close();
var sm=plt.cm.ScalarMappable(__kwargtrans__({cmap:my_cmap,norm:plt.normalize(__kwargtrans__({min:0,max:1}))}));
var soup=bs(r.text);
out_dict[row[0]]=tuple([float(row[1]),float(row[2])]);
print(e);
var b=a.ravel().view(dt);
any(function(){var __accu0__=[];for(var elem of string)__accu0__.append(__in__(elem,test));return py_iter(__accu0__)}());
print(types.IntType());
print(circle.popleft());
export var statv=os.statvfs(rootfolder);
var s=sub.stdout.readline();
remove_pass(v);
PyObject*a;
var temp=tempfile.NamedTemporaryFile(__kwargtrans__({delete:false}));
cls.x;
var root=tk.Tk();
var menu=QtGui.QMenu();
true;
var out=np.concatenate(np.take(a,uind));
print(i.leaves()[-1]);
Msg.Attachments.Add(attachment2);
var omega=det(dstack([a,b,c]));
x+=a;
signal.alarm(timeout);
pd.options.display.max_colwidth=100;
var result=[];
sys.getrefcount(i);
var firefox_profile=webdriver.FirefoxProfile();
var indices=scores.argmax(__kwargtrans__({axis:1}));
neighbours.remove(tuple([i,j]));
g*u+h*v+i*w+g*x+h*y+i*z;
var s=m.group();
np.sum(na,__kwargtrans__({axis:0}));
py_next(function(){var __accu0__=[];for(var [start,end]of regions)if(start<x&&x<end)__accu0__.append(tuple([start,end]));return py_iter(__accu0__)}());
len(context.products)==length;
index+=1;
var full_path=os.path.join(dirname,fname);
x+=1;
itertools.permutations(stuff,4);
buffer.append(duo);
ax.add_artist(ab);
func_new(a);
divide(2,7,70,true);
var __left0__=datasets.make_circles(__kwargtrans__({n_samples:200,factor:.5,noise:.05}));var X=__left0__[0];var y=__left0__[1];
var c=Constants();
df.power200c[7];
tempFileObj.seek(0,0);
source[PATH_TO_YOUR_ENVIRONMENT]/bin/activate;
Decimal(1).exp();
len(self.data);
var cur=conn.cursor();
var x=np.random.rand(N);
result+=text.upper();
pyfiles;
export var founds=[];
sys.stdout=sys.stderr;
var a2=np.array([[2,2,2],[2,2,2],[2,2,2]]);
print(word);
collect()(0).getInt(0);
print(py_next(test));
self.indexdict=dict({});
feet_entry.grid(__kwargtrans__({column:2,row:1,sticky:tuple([W,E])}));
export var actualstdout=sys.stdout;
true;
var fs=fluidsynth.Synth();
result.append(s_copy.__getslice__(0,index,1));
self.py_values=[];
f.seek(random.randint(0,int(unc_size[0])));
a.__getslice__(Math.floor(len(a)/5)*5,null,1).__setslice__(1,4,null,100);
tuple([tuple([4,[2,2]])]);
var resp=make_response(f(...args,__kwargtrans__(kwargs)));
var df=df[col_list];
pool.apply_async(__kwargtrans__({func:worker,args:tuple([i]),callback:callback}));
self.then_client_receives_connection_refused_error();
a.data/=np.repeat(norm_rows,nnz_per_row);
var result=f();
export var filetered=any(function(){var __accu0__=[];for(var i of black_list_2)__accu0__.append(__in__(i,line));return py_iter(__accu0__)}());
ipy;
x*y;
1/Fraction.from_float(2.54);
var p=Process(__kwargtrans__({target:myfunc,args:tuple([child_conn,commands])}));
sess.put(url,__kwargtrans__({data:xmlfile,headers:headers}));
export var x_test=np.random.normal(0,1,[50,10]);
output_list;
m.logout();
l.py_sort();
ts.tm_sec;
export var matching_solutions=[];
file.write(line1);
var data=self.cleaned_data;
self.stackVals.py_pop();
self;
var start=datetime.strptime(start_date,date_format);
df.loc[df.val1.shift(1)!=df.val1|df.val2.shift(1)!=df.val2];
export var myiter=py_iter(list(range(0,10)));
var ret=df.loc.__getslice__(start,end,1);
var start_time=Column(Integer);
(function(){var __accu0__=[];for(var i=0;i<len(start);i++)__accu0__.append(a0.__getslice__(start[i],stop[i],1));return __accu0__})();
var output_lambda=df.apply(ratio).to_dict();
var soup=bs(urlopen(url));
n>0&&(n&-n)==n;
export var target=np.array([-2,100,2,2.4,2.5,2.6]);
var i=arange(len(a)).repeat(a);
plt.close(plt.gcf());
var s=string.__getslice__(0,i,1);
var pdf=file.read();
var worksheet=workbook.add_worksheet();
var ax=fig.add_subplot(111);
var vc=cv2.VideoCapture(0);
dict({});
var A=zeros(D.shape);
print(u.screen_name);
export var stamp=os.stat(self.filename).st_mtime;
var median=np.median(points,__kwargtrans__({axis:0}));
var ser=ser.sort_values();
list(d.py_values());
var distance=np.sqrt(Math.pow(ix-center_x,2)+Math.pow(iy-center_y,2));
n*n;
data[slcs2][repmask]=data[slcs1][repmask];
data[slcs1][repmask]=data[slcs2][repmask];
var __left0__=np.flatnonzero(x.__getslice__(0,-1,1)!=x.__getslice__(1,null,1));var start=__left0__[0];var stop=__left0__[1];
var dt=a.dtype;
var reader=csv.reader(hosts);
print(str(tab.render()));
menu.append(menu_item);
final.append(__in__(word,exceptions)?word:word.capitalize());
var x=np.random.normal(i,.04,__kwargtrans__({size:len(y)}));
sys.stdout=sys.__stdout__;
var users=group.user_set.all();
var t=np.linspace(0,len(x),M);
ctx.text_extents(text);
json.dumps(mydict,__kwargtrans__({cls:DjangoJSONEncoder}));
var D=sparse.csc_matrix(np.diff(np.eye(L),2));
var __left0__=tuple([1,1]);var x=__left0__[0];var y=__left0__[1];
var c=randint(0,10);
sys.exit(app.exec_());
len(data);
result+=str.__getslice__(start,null,1);
logging.Formatter.__init__(self,msg);
var x=np.array(function(){var __accu0__=[];for(var x=0;x<100;x++)__accu0__.append(random());return __accu0__}());
var __left0__=wavfile.read(filename);var fs=__left0__[0];var data=__left0__[1];
candidates_indexes[index]+=1;
(2<<n-1)-1;
export var cls_attr=cls.__dict__;
var __left0__=select.select([p1.stdout,p2.stdout],[],[]);export var rlist=__left0__[0];export var wlist=__left0__[1];export var xlist=__left0__[2];
add_timeout(deadline,callback);
p.wedge(__kwargtrans__({x:0,y:0,radius:1,start_angle:starts,end_angle:ends,color:colors}));
count.most_common()[0];
var model=Item;
print(out);
self.py_clear();
d.py_update(child.dictify());
print(date);
var mod=sys.modules[module];
var lines=i.readlines();
var ans=function(){var __accu0__=[];for(var c of constraints)__accu0__.append(random.choice(c));return __accu0__}();
output_file.close();
var lcl=zzz();
var row=function(){var __accu0__=[];for(var item of row)__accu0__.append(item.decode(encoding));return __accu0__}();
self.parse_response(connection,command_name,__kwargtrans__(options));
var a=test(a);
dtypedict.py_update(dict([[i,sqlalchemy.types.DateTime()]]));
out.truncate(1024*1024*1024);
v;
plt.xticks(ind,a);
t.render(c);
df;
a[index]=item+1;
mats.append(sps.lil_matrix(np.array(df2)));
matches.extend(filenames);
var y=list(range(100));
var pool=mp.Pool();
var __left0__=process.communicate();var output=__left0__[0];export var unused_err=__left0__[1];
tuple([aClk.start(),c.__getitem__([tuple([0,null,1]),tuple([0,null,1])])*c.__getitem__([tuple([0,null,1]),tuple([0,null,1])]),aClk.stop()]);
var cb=functools.partial(self.resp,py_items,iteration);
var r=a+b;
var ax1=fig1.add_subplot(111);
1-ab_sum/sqrt(a_sum*b_sum);
some_object.save();
var __left0__=np.unravel_index(a.argmax(),a.shape);var i=__left0__[0];var j=__left0__[1];
double_to_hex(17.5);
quote_swap(json.dumps(quote_swap(s)));
dataBitMap.SaveBitmapFile(cDC,bmpfilenamename);
export var vector_b=array([1,1,1,1]);
x.__getslice__(f,null,1)+x.__getslice__(0,L+1,1);
django.setup();
var a=1;
var t5=MyObject();
id(a[0]);
ax.add_collection(p);
export var nones=df==n;
e2.pack();
var now=datetime.now();
print(jvdata);
browser.webframe.load(req,QNetworkAccessManager.PostOperation,data);

export var desc=function(){var __accu0__=[];for(var d of curs.description)__accu0__.append(d[0]);return __accu0__}();
print(last_index);
var len1=math.hypot(x1,y1);
export var current_permissions=stat.S_IMODE(os.lstat(path).st_mode);
bar;
f.close();
var file=models.ImageField(__kwargtrans__({upload_to:settings.FILE_PATH}));

queryset;
var url=request.url;
var __left0__=zip(...data_items);var indices=__left0__[0];var data=__left0__[1];
SHAhash.hexdigest();
a.data.nbytes;
listOfElements.__setslice__(0,null,null,function(){var __accu0__=[];for(var el of listOfElements)if(el.MeetsCriteria())__accu0__.append(el);return __accu0__}());
matches.append(st.find(needle,i,i+len(needle)));
stack[-1].append(x);
var result=list(camel.word_emitter(text));
os.chown(filepath,uid,gid);
var layout=QVBoxLayout(self);
tuple([50,.057658,.114725]);
sys.stderr=LoggerWriter(log.warning);
t-=p*(a-an)*(a-an);
tokenizer.tokenize(txt);
x.__setitem__([tuple([0,100,1]),tuple([0,100,1])],np.random.random(__kwargtrans__({size:tuple([100,100])})));
var red=pygame.Surface(tuple([200,100]));
print(x);
parser.disable_interspersed_args();
Feed.drop_collection();
print(b);
var min_x=image_src.shape[1];
A.Multiply(false,V,B);
export var svalue=Column(String);
d[key];
f(__kwargtrans__({x:0}));
var cc=Counter(l);
deletes.__getslice__(-10,null,1);
var job=models.ForeignKey(Job);
bisect.insort(r,i);
np.fill_diagonal(a,-np.inf);
print(reverse_pat.format(__kwargtrans__(matches.groupdict())));
12954124;
my_bigdict.lookup();
newclass;
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
LR.fit(X1.__getslice__(0,half,1),y1.__getslice__(0,half,1));
f(20,__kwargtrans__({b:10}));
self.server_id=server_id;
(df.a<bval).sum()/len(df.a);
sys.meta_path[-1]._suffix=sys.meta_path[-1]._c_ext_tuple[0];
conn.close();
export var rotatedRect=[tuple([minX,minY]),tuple([minX,maxY]),tuple([maxX,maxY]),tuple([maxX,minY])];
self._values[self._key_to_index[key]];
self.assertEqual(actual_output,expected_output);
var conn=psycopg2.connect(conn_string);
export var list_x_set=set(list_x);
export var l_i=l[i];
clean_users.close();
do_stuff(line);
tuple([w2n,n2w]);
pd.Series(x).rank(__kwargtrans__({pct:true})).py_values[-1];
var result=[];
a*b;
var lst2=line.strip();
odo(df,db.myCollection);
found.append(py_name);
plt.plot(x,y,out[0],out[1]);
var img1=numpy.asarray(img1);
var filepath=os.path.join(dirpath,filename);
var X=ma.mask_rowcols(X);
print(r.headers);
string.lowercase.__getslice__(0,14,1);
export var out2D=squareform(out);

print(list(the_subset));
self._waitready.add(sender);
export var CC1b=np.zeros(tuple([n1,n1]));
time.sleep(.5);
main();
var py_name=Column(String);
self.initialize(request,response);
export var vals_array=np.empty(lat_vals.shape+lon_vals.shape);
math.atan2(-0,0);
var nones=[];
var t=threading.Thread(__kwargtrans__({target:dummy}));
remove_your_temp_file(temp_file);
print(guess_seq_len(list_b));
export var Handler=SimpleHTTPServer.SimpleHTTPRequestHandler;
d[j]=j;
ax.plot(x,y,__kwargtrans__(__mergekwargtrans__({color:color},kwargs)));
self.Refresh();
random.choice(self.possible_strings);
original_string.replaceWith(BeautifulSoup(text));
result.append(self.format_option_help(formatter));
arr-=arr.min();
self.path=path;
c.acquire();
[num,num];
var v1=new set([x2-x1,y2-y1]);
ax.broken_barh([tuple([midpoint-.1,.2])],tuple([perc[4],perc[5]-perc[4]]));

self.thread.start();
wf.setframerate(RATE);
export var all_potions=dict({});
self.root=Node(element);
var utc_dt=pytz.utc.localize(datetime.utcnow());
export var d_time=datetime.date(2010,11,12);
var opt=parser.parse_args();
winsound.PlaySound(memory_file.getvalue(),winsound.SND_MEMORY);
start;
export var popped=dict([[key,self[key]]]);
var body=response.body;
var x=Math.floor((x+Math.floor(apositiveint/x))/2);
PyObject_Print(obj_ptr,stdout,0);
print(map(function __lambda__(x){return Math.pow(x,2)},function(){var __accu0__=[];for(var x of lst)if(__mod__(x,2)==0)__accu0__.append(x);return __accu0__}()));
x*100+y;
all(function(){var __accu0__=[];for(var j=2;j<n;j++)__accu0__.append(__mod__(n,j)>0);return py_iter(__accu0__)}());
im.putalpha(mask);
ax.yaxis.labelpad=50;
2(1);
print(result);
export var vline=ax.axvline(1);
var __left0__=py_next(py_iter(list(d.py_items())));var k=__left0__[0];var v=__left0__[1];
var im=im.crop(0,0,int(height_count*width/width_count),height);
dirs.remove(d);
print(x);
shutil.copyfileobj(f1,f2);
var modules=map(__import__,moduleNames);
print(line);
sys.argv.remove(args[0]);
self.subplot=self.figure.add_subplot(111);
var d=OrderedDict();
rand_x_digit_num(5);
sess.run(init);
export var timing=dict();
main();
res[0]=1;
export var data_in_group=np.zeros_like(data_stack);
match.b;
interleave(s,t,res+s[i],i+1,j,lis);
var result=[];
var order=np.argsort(groups);
any();
process(newfiles);
var Y=np.zeros(1E3);
a.first();

b[0]=0;
output.write(py_new);
export var new_li=function(){var __accu0__=[];for(var item of x)__accu0__.append(item.__getslice__(1,null,1));return __accu0__}();
var start=time.clock();
output;
var __except0__=AttributeError(attr);__except0__.__cause__=null;throw __except0__;
self.__dict__[key]=item;
memory_file.close();
(function(){var __accu0__=[];for(var v of obj)__accu0__.append(as_row(v));return __accu0__})();
print(i);
var idx=np.array([true,false,false,true]);
[];
var r=urllib.addinfourl(fp,hdrs,req.get_full_url());
var myHist=ax.hist(data,100,__kwargtrans__({normed:true}));
var __left0__=d[key];var x=__left0__[0];var y=__left0__[1];var z=__left0__[2];
var builder=Gtk.Builder();
var y=np.linspace(-10,10,npts);

webelement.text();
var index=-1;
py_next(I2);
curl.setopt(pycurl.PROXYPORT,SOCKS_PORT);
var r=csv.reader(file_obj);
var epoch=int(time.mktime(time.strptime(d,p)));
self.loader=gtk.gdk.PixbufLoader();
var y=np.random.rand(N);
var cj=CookieJar();
o[-1].append(x);
var response=requests.py_get(token_url).content;
var result=[];
var N=data.shape[1];
var result=c.fetchall();
doctest.testmod();
var myArray=[];
formatdate(time.time());
time.sleep(10);
im.__setitem__([i,j],im.__getitem__([i,j])+1);
var __left0__=generalizedEuclidianAlgorithm(b,__mod__(a,b));var x=__left0__[0];var y=__left0__[1];
var pix=Pix.from_rgba(image);
Serial.println(value);
data-=np.mean(data,__kwargtrans__({axis:0}));
pdf_contents.file.write(pdf);
(function(){var __accu0__=[];for(var mat of combinations(nvectors(n),m))__accu0__.append(array(mat));return py_iter(__accu0__)})();
i+=1;
unpack_list(...list(range(100)));
fb_[i]=zeta[i]/(np.exp(zeta[i])-1);
str(d);
export var start_dict=function(){var __accu0__=[];for(var item of tpl)__accu0__.append([item[0],item]);return dict(__accu0__)}();
l[i+1]=l[i]+Math.floor(n/2);
export var sizeY=sizeX;
var s=socket(AF_INET,SOCK_DGRAM);
print(df);
var py_keys=tuple(data);
var cols=np.isnan(g).all(__kwargtrans__({axis:0}));
var df=pd.DataFrame([1]);
export var foo2=Foo();
h2.encode();
var latest=MyObject.latest();
self.setCentralWidget(self.table);
py_iter.open();
prefix_match(s,taglist);
self.__ParseString(rawdata);
var r=fileobj.read_into(buf);
self.crawler=CrawlerProcess(settings);
window.show();
q.submit();
self.logger.log(self.level,message);
main();
fig.add_subplot(ax);
var client=Client.objects.py_get(__kwargtrans__({pk:1}));
export var x_range=np.linspace(-10,10,100);
var x_range=list(range(-5,6));
var s=b.total_seconds();

export var new_lis1=deepcopy(lis);
list(_);
a[tuple(l.T)]=b;
inner();
var wb=Workbook();
var __left0__=tuple([np.mean(a),scipy.stats.sem(a)]);var m=__left0__[0];var se=__left0__[1];
var __left0__=tuple([width,height]);self.width=__left0__[0];self.height=__left0__[1];
self.__dict__.py_update(attrDict);
print(S1,S2);
var up=upform.save(__kwargtrans__({commit:false}));
print(patient_element.tag);
dyn.put();
request.response.status=400;
var y=py_reversed(x);
print(df);
print(x.py_get());
export var str1=str(dict1);
false;
self.stream.write(data);
plt.yticks([]);
tuple([1,0,0]);
export var exit=Quitter();
var mask=np.random.choice([true,false],__kwargtrans__({size:df.shape,p:[.2,.8]}));
var fig=plt.figure();
export var dout=pd.concat([pd.get_dummies(df),dl,dr],__kwargtrans__({axis:1}));
plt.imshow(train_x[0].reshape(tuple([28,28])),__kwargtrans__({cmap:cm.Greys_r}));
var line=f.readline();
self.clients=[];
var A=np.arange(n).reshape(Math.floor(n/4),4);
HTTPServer.serve_forever(self);
export var last_element=dd.py_pop();
p[np.diag_indices(p.shape[0])]=np.ones(p.shape[0]);
export var djangofile=File(local_file);
self.data.__getslice__(0,key[1]+1,1)+list(key[0].indices(key[1]));
self._content.seek(i);
+i;
self.delta;
my_list[0]();
Wizard.Minimize();
n+u;
fd.close();
export var ftype=0;
export var newlst=[];
var data=ff.read(4);
piecew(np.asarray([2.1]));
print(p.wait());
(function(){var __accu0__=[];for(var [is_key,group]of itertools.groupby(l,key))if(!is_key)__accu0__.append(list(group));return __accu0__})();
df.date_time;
foo(1,11);
df.dtypes;
print(WEEKDAYS.fri);
export var lglobals=sys.modules[lmoduleName].__dict__;
var l=list(s);
var conn=engine.connect();
var client=socket.socket();
var flt=function(){var __accu0__=[];for(var x of sorted(py_keys,__kwargtrans__({key:len,reverse:true})))__accu0__.append([x,0]);return __accu0__}();
list(set(first+second));
var x=np.random.normal(mu,sigma,1E4);
var train_data=tf.Variable(999);
xmlfile.close();
logging.config.dictConfig(logging_config);
var image=pygame.image.load(py_name);
var __left0__=np.mgrid.__getitem__([tuple([0,1,complex(0,100)]),tuple([0,1,complex(0,200)])]);var grid_x=__left0__[0];var grid_y=__left0__[1];
n+=1;
self.aws.receive();
store.append(key,df);
np.mean(arr);
var hxs=HtmlXPathSelector(response);
self._reqId+=1;
print(data);
temp_dict[py_values[1]]=temp_dict[py_values[1]]+1;
var ext=os.path.splitext(f)[1];
ax.legend();
tuple([1,1])(1,1);
export var window_width=int(img.shape[1]*scale);
d.py_setdefault(j,[]).append(i);
df2[i]=0;
print(a_new);
self.tiles=tiles.__getslice__(0,4,1)+tiles.__getslice__(5,null,1);
var members=[];
0;
(function(){var __accu0__=[];for(var i of slice_indices(len(L),start,stop,step))__accu0__.append(L[i]);return __accu0__})();
self.ref_object.method();
print(lst[f]);
all_items(get_location(get_creators(get_surrounding_cities(printer()))));
word_counter[word]+=1;
step(dates,counts);
print(py_metatype.text);
export var rdtype=np.rec.fromrecords(arrs.__getitem__([tuple([0,1,1]),tuple([0,null,-1])])).dtype;
var url=urllib.request.build_opener(HTTPSClientAuthHandler(self.key,self.cert));
export var deletes=function(){var __accu0__=[];for(var [a,b]of splits)if(b)__accu0__.append(a+b.__getslice__(1,null,1));return __accu0__}();
self.py_name=py_name;
x.__getitem__([a.argmin(0),np.arange(a.shape[1])]);
var s=str(n);
var ax2=ax1.twinx();
var data=function(){var __accu0__=[];for(var _=0;_<2500;_++)__accu0__.append(random.choice(tuple([0,1])));return __accu0__}();
instance.user=request.user;
export var wrapped_mod=pickle.loads(p);
var b=np.sqrt(e);
list(compress(arr,mask));
m2.save();
var x=patricia();
yaml.add_representer(str,represent_str);
self.memory[key].append(value);
var counts=[0]*n;
set_color(b,initcolor);
var fig=plt.figure(__kwargtrans__({figsize:tuple([2,2])}));
export var yaxis=np.linspace(-1,1,20);
x+y;
var i=py_iter(list(d.py_items()));
var images=mat2cell(im,size(im,1),split_point*ones(5,1));
print(py_next(g));
phone_book[py_name].append(number);
np.random.seed(101);
export var max_time=max(data[1]);
jsonpickle.encode(Goal(),__kwargtrans__({unpicklable:false}));
plot.append(axMiu);
var chunk=tuple(itertools.islice(it,size));
struct.unpack(format,buffer);
print(function(){var __accu0__=[];for(var i of df)__accu0__.append(i);return __accu0__}());
s&1<<x;
var density=gaussian_kde(data);
var __left0__=myset;var element=__left0__[0];
print(a,b,c);
np.clip(out,0,255);
df[good];
result.append(element);
var app=QtGui.QApplication(sys.argv);
var x=linspace(-1,1,n);
print(field.py_name);
export var row_idx=np.array([1,2]);
2868466484;
1649599747;
2670642822;
1476291629;
self.get_solr_results(solr_sort);
y.remove(item);
output.close();
var __left0__=arr.shape;var rows=__left0__[0];var cols=__left0__[1];
export var theText=f.read();
self._devnull=os.open(os.devnull,os.O_WRONLY);
adjs.append(tok);
var data=json.dumps(options.__dict__);
var i=0;
fh.setFormatter(f);
var now=time.time();
self;
py_new.append(py_new[i-1]*df.A.py_values[i]+df.B.py_values[i]);
wins[py_name]+=1;
export var walls=[true,true,true,false];
var a=np.vstack(tuple([[im],[im.T]])).T;
print(tab.draw());
var l1=[0,1,0,0,1];
export var dims=np.append(maxlen.__getslice__(0,null,-1).__getslice__(0,-1,1).cumprod().__getslice__(0,null,-1),1);
total+=1;
[start]+maxchain;
self.__dict__[key]=value;
self.sqsregion=sqsregion||SQSREGION;
list_of_numbers.reverse();
[];
transmission_array.extend([rand_num]*400*duration);
crawler.crawl(domain_pk);
var vectors=np.array([[0,1],[0,-1],[1,0],[-1,0]]);
var i=np.arange(M).__getitem__([tuple([0,null,1]),np.newaxis]);
export var Digit=OrderedDict(Digit);
coords.__setitem__([tuple([0,null,1]),tuple([1,null,2]),tuple([0,null,1])],coords.__getitem__([tuple([0,null,1]),tuple([1,null,2]),tuple([0,null,-1])]));
var soup=Soup(xml);
export var ydata=list(range(10));
d+=1;
Math.pow(16,1/2);
var u=np.sin(np.pi*x)*np.cos(np.pi*y)*np.cos(np.pi*z);
row+=1;
var tree=dict(__kwargtrans__({py_name:os.path.basename(path),children:[]}));
true;
row.append(SchemaTable.Rows[i][j]);
api/views.py;
var data=np.zeros(tuple([len(ax1),len(ax2)]));
export var day_idx=__mod__(date.weekday()+1,7);
var result=self.a+self.b+self.c;

p.connections();
print(better_uc_hex);
var k=inkey();
Math.floor((np.inner(a,a)-n)/2);
var wtr=csv.writer(result);
var p=ThreadPool(1);
s.__dict__;
args[0];
print(df);
newText.__getslice__(0,-1,1);
a&&b;
ends.reset_index(__kwargtrans__({drop:true,inplace:true}));
export var IFAIsFifo=0;
var results=np.empty(tuple([4,5]),int);
var tmp=np.append(b,[[clipping_value],[clipping_value]],__kwargtrans__({axis:1}));
var b=s.post(url,__kwargtrans__({data:payload,headers:headers,allow_redirects:1}));
var dt=datetime.now();
0;
appList.add(line);
total_cost+=self.session.run(tuple([self.cost,self.train_step]),feed_dict)[0];
toc();
r.url;
var py_name=Column(String);
var BASE_DIR=os.path.dirname(os.path.dirname("./P2JSnippets.py"));
var sidx=np.argsort(searchvals);
[11,5,-12];
merge(r1,r2,function __lambda__(a,b){return a!=b});
self.showNormal();
var r=function(){var __accu0__=[];for(var s of sentence)if(!__in__(s.lower(),hello_dic))__accu0__.append(s);return __accu0__}();
var line=sys.stdin.readline();
print(traceback.format_exception(py_metatype,value,tb));
41149;
var filename=sys.argv[1];
self.f.close();
var dates=matplotlib.dates.date2num(list_of_datetimes);
+__init__.py;
L.reverse();
myFile.close();
py_typeof(x.__getitem__([]));
bool(i);
tabulate(grouplist(list(range(1,11)),4,2));
MyClass().ff[0];
net.addModule(output);
var result=im.copy();
var s=json.dumps(u,__kwargtrans__({py_default:json_util.py_default}));
var ctx=krbV.default_context();
redirect(to,...args,__kwargtrans__(kwargs));
self.sleep_time=value;
var m=mmap.mmap(f.fileno(),0,__kwargtrans__({prot:mmap.PROT_READ}));
func();
var b=Decimal(str(b));
plt.plot(time,signal);
export var mkwargs=function(){var __accu0__=[];for(var x of list(kwargs.py_values()))__accu0__.append(x.__repr__());return __accu0__}();
terminator.start();
var c=ntplib.NTPClient();
threads.append(threading.Thread(__kwargtrans__({target:play_audio})));
funcs.append(function __lambda__(x){if(typeof x=="undefined"||x!=null&&x.hasOwnProperty("__kwargtrans__"))var x=x;return x});
0;
export var point_symbolizer=mapnik.MarkersSymbolizer();
ax.set_ylim(0,7);
gr.add_edges_from(edges);
print(line);
print(args);
myFile.writerows(rows);
self.stopped=true;
var current=[];
instance.register_signals();
var result=__mod__((a-p)*(b-p),p);
export var testauthor=session.query(Users).filter_by(__kwargtrans__({id:test.author_id})).first();
all_pixels.append(bw_value);
Member.objects.in_group(one_group).not_in_group(another_group);
py_values[~valid_mask]=np.min(py_values)-1;
func(np.array([1,2]));
self.help;
self.i==other.i;
s.write(urllib.request.urlopen(self.creative_url).read());
var res=[value]*(2*len(seq)-1);
self.matplotlibWidget.axis.py_clear();
var preprocessed=process.read();
var root=Tk();
var idx=np.searchsorted(sw,sCut);
var b=np.ma.masked_array(a,__kwargtrans__({mask:mask}));
x[0]+=1;
export var metadata2=MetaData();
export var metadata4=MetaData();
a[s];
print(result);
NULL;
print(xml);
var fig=plt.figure();
n;
g._productions[-1];
var window=pygame.display.set_mode(tuple([800,600]));
tuple([LIN.__getitem__([tuple([0,null,1]),tuple([0,d,1])]),e_values,e_vectors]);
data.seek(0);
ag012456789;
py_next(iterator);
m[0]===m[1]&&m[1]===m[2];
export var cumulative=[0]*(len(l)+1);
var norm=tf.sqrt(tf.reduce_sum(tf.square(x),1,__kwargtrans__({keep_dims:true})));
setattr(self,column.py_name,column.py_default.arg);
lst.py_sort();
var context=self.get_serializer_context();
var a=list(chain.from_iterable(npa));
var auth_handler=urllib.request.HTTPBasicAuthHandler(passmanager);
print(arr.__getitem__([5,tuple([0,null,1])]));
self.it=py_iter(it);
Point(midx,midy);
J.sum(__kwargtrans__({axis:0}))*mat;
self.stream.close();
plt.title(cat);
alphabet[0];
var app=QApplication(sys.argv);
main();
print(MySpider.start_urls);
evenmorestuff;
print(df);
frame.pack();
a.intersection(b);
export var theQ=Queue.Queue();
self.user.save();
export var changelist=p4out.readline().py_split()[1];
var word=matchobj.group(0);
var result=[];
wrapper;
var p=Pool(__kwargtrans__({processes:2}));
var input=PdfFileReader(f);
gm.setLevel(logging.ERROR);
self.q.put(new_item,...args,__kwargtrans__(kwargs));
self.finish();
result.extend(replace_with);
self._replace(__kwargtrans__({x:self.y,y:self.x}));
self.instance(...args,__kwargtrans__(kwargs));
self.days=days+7*weeks+Math.floor(self.seconds/86400);
s.iloc.__getslice__(first_valid,null,1);
var url=url.strip();
plt.hist(a,9,__kwargtrans__({weights:b}));
driver.close();
export var threadB=Thread(__kwargtrans__({target:loobB}));
np.__version__;
var email=db.Column(db.String(120),__kwargtrans__({unique:true}));
self.assertTrue(mock_warnings.called);
a==b;
var __left0__=img1.shape.__getslice__(0,2,1);var h1=__left0__[0];var w1=__left0__[1];
var msg=email.message_from_string(j);
export var rand=function(){var __accu0__=[];for(var i of randIndex)__accu0__.append(mylist[i]);return __accu0__}();
self._attr_value_to_obj_set.py_pop(attr_value);
print(replchars.sub(replchars_to_hex,inputtext));
ohandle.close();
var addr=ctypes.addressof(c.contents);
library(sunburstR);
var loop=asyncio.get_event_loop();
var result=dict(dol1,__kwargtrans__(dol2));
print(data);
A.a();
var now_epoch=calendar.timegm(now_tz.utctimetuple());
export var stdev=sqrt(sum_x2/n-mean*mean);
var py_name=Column(String);
print((pp+1).year,(pp+1).month);
10000001E4;
d[1]=5;
print(line.strip());
pprinttable([data]);
ax1.view_init(-10,45);
var doc=docfile.read();
var f=function __lambda__(x){return Decimal(np.mean(x))};
numpy.random.shuffle(shuffled_points);
df2.index=df2.index.map(function __lambda__(x){return get_closest_match(x,df1.index)});
var P=mp.Pool();
do_stuff();
true;
var words=sentence.py_split();
self.id=self.num;
settings.setAttribute(QWebSettings.PluginsEnabled,true);
index.append([keyword,url]);
signal.connect_via(app)(listener);
print(distance(ListOfCoordinates[0],ListOfCoordinates[i]));
window.show();
threads.remove(thread);
[];
transport.open();
obj.bar=obj.foo;
self.set_password(value);
var total_distance=sum(distances);
var old=sys.stdout;
year+=1;
export var trees=self.get_dump(fmap);
self.pack_start(gtksink.props.widget,true,true,0);
bar().baz();
print(row.rstrip(),repr(row));
array(array(1));
a(4);
print(eval(input()));
export var recipe=Recipe.objects.create(__kwargtrans__(validated_data));
var utc_dt=datetime.now(timezone.utc);
fig.append_trace(trace2,2,1);
var ax=function(){var __accu0__=[];for(var g of gs)__accu0__.append(plt.subplot(g));return __accu0__}();
iren.start();
export var coocc=df_asint.T.dot(df_asint);
export var new_pol=ops.cascaded_union(pols);
U.fromstring(B);
a.coeffs();
var root=tk.Tk();
b.A;
export var get_absolute_url=permalink(get_absolute_url);
letters+=1;
self.sizer.Add(self.result,tuple([0,1]));
map(d.py_update,extras);
var st=np.mgrid.__getitem__([tuple([1,101,1]),tuple([1,101,1])]);
df;

self.d[k];
D().f();
thread.start_new_thread(flaskThread,tuple([]));
var py_values=numpy.array([0,1,1,0,0]);
var table=function(){var __accu0__=[];for(var x of table_.__getslice__(1,null,2))__accu0__.append(int(x));return __accu0__}();
plt.plot(b,a);
results.set_value(i,j,v);
self.result=re.search(pattern,text);
var g=nx.DiGraph();
var dst=tk.PhotoImage();
var coll=db.dataset;
self.f.write(e.strip());
var cursor=connection.cursor();
(function(){var __accu0__=[];for(var [key,locs]of list(tally.py_items()))if(len(locs)>1)__accu0__.append(tuple([key,locs]));return py_iter(__accu0__)})();
self.f=f;

data._get_numeric_data();
cache[n];
var c=b.upper();
n.bit_length();
subplots_adjust(__kwargtrans__({bottom:.14}));
print(py_typeof(data_for_browser_retrieverd.json));
var foo=args.one;
a*np.sin(2*np.pi*f*t+p);
var region_el=function(){var __accu0__=[];for(var x of remaining)__accu0__.append(x[0]);return __accu0__}();
multiprocessing.Process(__kwargtrans__({target:uploader,args:tuple([filenames])})).start();
export var rotations=rotations.reshape(tuple([-1,2,2]));
print(row.__getslice__(1,12,1));
var headers=function(){var __accu0__=[];for(var col of py_next(rows))__accu0__.append(col.text);return __accu0__}();
var py_keys=function(){var __accu0__=[];for(var k of list(self.py_keys()))if(__in__(value,k))__accu0__.append(k);return __accu0__}();
self.func=func;
var freq=Counter(function(){var __accu0__=[];for(var i=0;i<len(s);i++)__accu0__.append(tuple(s.__getslice__(i,i+n,1)));return py_iter(__accu0__)}());
var __left0__=StringIO();sys.stdout=__left0__;self._stringio=__left0__;
np.sum(A,__kwargtrans__({axis:0}));
var tmp=[a]*len(a)+[b]*len(b);
winsound.Beep(FREQ,DUR);
export var filtered2=[];
date;
print(list_2);
py_metatype.__new__(cls,clsname,bases,dct);
var c=Counter(words);
df.tail(1).T.assign(__kwargtrans__({passes:df.tail(1).py_values[0]>1}));
var parts=urlparse(url);
print(last_wednesday);
M.__getitem__([0,0]);
export var newfunc=globs[func.__name__];
var a=dict({});
text.set_font_properties(font);
int(self.selenium.is_element_present(xpath1));
img.close();
HOME/anaconda/bin;
p.join(DURATION-time_waited);
tv.set_rules_hint(false);
new_list;
getattr(module,className);
var height=GetSystemMetrics[1];
print(line);
t1+pd.DateOffset(__kwargtrans__({months:k}));
pixel_at(25,5);
self.lists[row].append(value);
sys.stdout=actualstdout;
strobj2==strobj;
(function(){var __accu0__=[];for(var p of database)if(p.y==2)__accu0__.append(p);return __accu0__})();
doWalk(where,why);
foo_view(request);
var new_list=function(){var __accu0__=[];for(var item of old_list)__accu0__.append(item.lower());return __accu0__}();
self.py_name=py_name;
(listScore==listScore[ind]).all(1).sum();
b.__setitem__([tuple([1,2,1]),tuple([1,2,1])],false);
arr.__setslice__(0,2,null,arr.__getslice__(0,2,1)+someVector);
set_alpha_color(alpha_max);
var g=parser.add_mutually_exclusive_group();
var x=np.random.randn(100,200);
os.dup2(devnull.fileno(),1);
var matches=function(){var __accu0__=[];for(var [t,p]of product(targets,prefixes))if(t.startswith(p))__accu0__.append(tuple([t,p]));return __accu0__}();
1;
a.min();
glLoadIdentity();
var parsed=pool.apply_async(Process1,[largefile]);
var x0=np.array([-.72,-.64]);
var A=NP.random.randint(0,10,100);
print(str_repr);
var abc=function __lambda__(){return myFunction()};
var user=models.OneToOneField(settings.AUTH_USER_MODEL);
ss.communicate();
pir(df.x.py_values);
Qt/__init__.py;
item;
some_template_functor<double&&double>some_template_functor_double;
py_values;
var a=function(){var __accu0__=[];for(var i=0;i<5;i++)__accu0__.append(partial(function __lambda__(x){return x},i));return __accu0__}();
MessageBox.Show(str(self.value.value));
var ps=pandas.Series(function(){var __accu0__=[];for(var i of x)__accu0__.append(tuple(i));return __accu0__}());
tuple([a,b,c]);
f.write(string_to_write);
var root=tk.Tk();
self.recent.append(mod);
funny_stuff();
temp.extend(m);
var l=function(){var __accu0__=[];for(var x of g)if(x[0]==9)__accu0__.append(tuple([x[0],list(x[1])]));return __accu0__}();
x.reshape(x.shape[0]/5,5).__getitem__([tuple([0,null,1]),tuple([0,2,1])]);
q.put(random.sample(points,1)[0]);
print(len(test.vec()));
print(tuple([index,second]));
self._thread.start();
request.args[key];
csvwrite.writerow(row);
var urls=[];
var loop=asyncio.get_event_loop();
self.x=x;
new set([new set([team.py_name|e])]);
WSGIRequestHandler.log_request(...args,__kwargtrans__(kw));
self.append(py_next(self.gen));
var screen=pg.display.set_mode(SIZE,HWSURFACE|DOUBLEBUF);
var p=Popen(cmd,__kwargtrans__({stdout:PIPE,stderr:PIPE}));
curses.curs_set(0);
var s=json.dumps(arr.tolist());
export var custers=scipy.ndimage.find_objects(labels);
x+=1;
export var last_state=tf.nn.embedding_lookup(output_rs,last_index);
nges_uneval;
threadLimiter.release();
l.append(2);
ax.set_xlim(__kwargtrans__({xmin:-.5}));
os.waitpid(pid,0);
self.parent._fsb_controllers.remove(self);
print(sum(function(){var __accu0__=[];for(var x of lst)if(__mod__(x,2)==0)__accu0__.append(Math.pow(x,2));return __accu0__}()));
var data=yaml.load(text);
export var thumb_io=StringIO.StringIO();
zlib.decompress(unknown_compressed_data);
result;
var x=numpy.array([[9.5,7.5],[10.2,19.1],[9.7,10.2]]);
var duplicates=function(){var __accu0__=[];for(var i of c)if(c[i]>1)__accu0__.append(i);return __accu0__}();
py_iter(M);
print(fsolve(func,guess,__kwargtrans__({args:tuple([a,b,c,n])})));
Grid.columnconfigure(frame,x,__kwargtrans__({weight:1}));
self.wfile.write(line);
toc();
export var curr_value=SomeModel.objects.py_get(__kwargtrans__({pk:obj.id}));
export var python_script=sys.argv.py_pop(0);
i+=1;
self.__dict__=original.__dict__;
results[i]=[];

var sim=np.sqrt(.5*Math.pow(np.sqrt(dense1)-np.sqrt(dense2),2).sum());
print(b.x,b.y);
stream.filter(__kwargtrans__({locations:GEOBOX_GERMANY}));
p4.connect();
output.write(outputStream);
var t1=time.time();
true;
var html=url.urlopen(s.url).read();
actions.perform();
print(line,py_name);
var __except0__=AssertionError(message);__except0__.__cause__=null;throw __except0__;
some_date.py_replace(__kwargtrans__({day:1,hour:0,minute:0,second:0,microsecond:0}));
df.count();
var max=numpy.max(numpy.abs(T));
np.sum(function(){var __accu0__=[];for(var i=0;i<col_sp;i++)__accu0__.append(tmp.__getitem__([tuple([0,null,1]),tuple([i,null,col_sp])]));return py_iter(__accu0__)}());
export var Forename=Paul;
show(p);
self._x;
self.canvas.widgetlock.release(self.lasso);
var ind=ind[second_mask];
main();
add_method(e,bark);
var fig=plt.figure();
var __left0__=tuple([c.__getitem__([tuple([0,null,1]),0]),c.__getitem__([tuple([0,null,1]),1])]);var a=__left0__[0];var b=__left0__[1];
form.submit();
var object_list=list(list(Content.objects.filter(__kwargtrans__({foo:bar})).py_values()).__getslice__(0,100,1));
write_file(data);
int(n);
var Y=np.fft.fft(y)/n;
i+=1;
var bus=dbus.SystemBus();
set(random.randint(0,100));
[5,6,1,17,9,18,1,16,17,10];
df;
var value=getattr(struct,field);
var list1=[2,7,8,5];
sys.exit(main());
var val=int(userInput);
var food=OrderedDict(function(){var __accu0__=[];for(var [i,v]of enumerate(foods))__accu0__.append(tuple([v[0],tuple([v[1],i])]));return py_iter(__accu0__)}());
len(s)!=l;

duos.append(duo);
list(range(len(iterable)));
self.b=2;
var toAdd=xyzCoord[i].__getslice__(0,null,1);
format_to_year_to_value_dict[format_str][year]=value;
a.attr2;

Models.my_model.MyClassName;
var order=models.IntegerField();
csvwrite.writeheader();
result[offset].append(py_name);
export var Hlow=ifftshift(Hlow);
ucd.py_name(u2[1]);
export var denom=Math.pow(sum(function(){var __accu0__=[];for(var x of list(rec.py_values()))__accu0__.append(Math.pow(x,2));return __accu0__}()),.5);
proc.kill();
var data=df.py_values;
var ax=plt.subplot(gs.__getitem__([x,y]));
print(file.line_count());
export var pickled_object=pickle.dumps(obj);
tornado.options.parse_command_line();
Math.pow(Math.pow(10,.5),2)==10;
dis.dis(fun);
test_n(n);
var m=sparse.lil_matrix(tuple([100,100]));
self.updater.setSingleShot(true);
abort(401);
export var Xfit_mono=zeros(Xfit.size);

fmt.format(msg,lineno,colno,pos);
test(regex);
time.sleep(60*5);
self.fp.__exit__();
imp.acquire_lock();
var a=np.arange(1,10,.5);
point(self.x+oth.x,self.y+oth.y);
x;
c.append([]);
export var filecols=function(){var __accu0__=[];for(var f of files)__accu0__.append(readcol5(f));return __accu0__}();
export var savout=os.dup(1);
var groups=df.groupby(df.L);
list(filter(operator.isNumberType,list_1));
self.ui.gridLayout.removeWidget(self.ui.dragDataEdit);
print(output);
(s.map(py_metatype)!=str).any();
ufmt_str.format(__kwargtrans__(kwargs));
var line=input();
var widget=event.GetEventObject();
os.remove(tempfile);
base.metadata.create_all(engine);
var b=partial(a);
self.app=Flask();
var cbar=fig.colorbar(__kwargtrans__({mappable:plotted}));
var __left0__=tuple([xin-xlim[0],yin-ylim[0]]);export var xdelta2=__left0__[0];export var ydelta2=__left0__[1];
export var band=ds.GetRasterBand(1);
self.forest.append(tree);
mymodule.foobar2;
export var masterReader=csv.DictReader(f1);
var x=np.arange(-5,5,.25);
dispatcher.connect(self.spider_error,__kwargtrans__({signal:signals.spider_error}));
my_own_magic(foo);
pycallgraph.stop_trace();
df.show();
export var hf=plt.figure();
var a=np.array([[1,0],[0,1],[-1,1]]);
vals[i]=abs(np.dot(u,m2));
plt.imshow(zz,__kwargtrans__({extent:tuple([x.min(),y.max(),x.max(),y.min()])}));
curl.setopt(pycurl.SSL_VERIFYPEER,1);
ordered.ordered_fields;
false;
g.LgRnk.rank(__kwargtrans__({pct:true}));
[0];
var output=p.stdout.read();
main();
f.write(data);
var diff=abs(results[i]-value);
valuesCopy.py_update(dict([[state,convergedValue]]));
var __left0__=np.histogram(Z,__kwargtrans__({bins:10,normed:true}));var H=__left0__[0];export var X1=__left0__[1];
var res=urllib.request.urlopen(starturl);
self.fp.close();
pdb.gimp_file_save(image,drawable,file,file);
var arr=np.asarray(bytearray(req.read()),__kwargtrans__({dtype:np.uint8}));
var child=models.ForeignKey(Child);
var fig=plt.figure();
t2.__sizeof__();
var df=pd.DataFrame(data);
export var muX=X.mean(0);
export var trimesh=refiner.refine_triangulation(__kwargtrans__({subdiv:4}));
print(py_typeof(1));
var child=pexpect.spawn(cmd);
temp.append(k);
o.two();
print(t);
self.date_start_processing=timezone.now();
result;
var data=csock.recv(1024);
export var string_size=len(string);
post_save.connect(create_user_account,__kwargtrans__({sender:User}));
var cwd=os.getcwd();
export var hash_md5=hashlib.md5();
require(selectr);
main();
PyErr_Print();
exec(c,m.__dict__);
py_next(fo);
ipdb.set_trace();
scatter(X,Y,__kwargtrans__(__mergekwargtrans__({c:Z},scatter_kwargs)));
print(A().a1());
outputList.append(os.path.join(root,f));
var im2=im.crop(im.getbbox());
handles.append(mpatches.Patch(__kwargtrans__({color:c,label:labels[i-1]})));
var pts=function(){var __accu0__=[];for(var [x,y]of zip(X,Y))__accu0__.append(np.linalg.norm([x-w,y-v])-r);return __accu0__}();
print(np.sum(primes,__kwargtrans__({dtype:np.int64})));
self.points=function(){var __accu0__=[];for(var i=0;i<numpoints;i++)__accu0__.append(Point(i,self.coords));return __accu0__}();
count+=1;
hash.py_update(block);
w.pack();
self.user_id=user.id;
var sheet1=book1.get_active_sheet();
print(row);
var reader=csv.DictReader(theFile);
var result=connection.getresponse();
self._metadata.reflect(__kwargtrans__({bind:self._conn}));
export var insp=sa.inspect(engine);
new_btn.pack();
export var raw=f.read();
__import__(module_name);
var br=mechanize.Browser();
export var search_set=ancestors_descendents&descendents_ancestors;
var input=sys.stdin.read(1024);
var grid=scipy.sparse.coo_matrix(tuple([weights,xyi]),__kwargtrans__({shape:tuple([nx,ny])})).toarray();
self.do_stuff();
var timeout=time.time()+60*5;
print(cmd());
var d=defaultdict(int);
var loss=tf.square(x-y);
summation+=int(letter);
(function __lambda__(x){return exp(x)});
sct.norm.cdf(__kwargtrans__({x:50,loc:60,scale:40}));
m.captures(1);
img_grand.readMetadata();
ss.listen(2);
is_sum_of_numbers(5,numbers);
posts.insert(post);
f.close();
var X=np.arange(200)-100;
connect_signal1_to_slot1();
print(res);
os.execl(python,python,...sys.argv);
var L=[1]*5;
layout.addWidget(ipyConsole);
pool.close();
var devnull=open(os.devnull);
outFile.close();
var a=np.random.random(tuple([20,22]));
count+=len(mapping[y]);
- -docstrings;
var rows=[];
self.session.Logon();
np.ones(Math.pow(10,9),__kwargtrans__({dtype:np.bool}));
var objects=models.Manager();
var message=mailer.Message();
var B=np.where(A<.1,A,0).astype(float);
var gs=goslate.Goslate();
d.py_setdefault(word,[]).append(i);
loop.run_until_complete(main());
i+=1;
tb.activate();
var c=function(){var __accu0__=[];for(var i=0;i<10;i++)__accu0__.append(function __lambda__(i){if(typeof i=="undefined"||i!=null&&i.hasOwnProperty("__kwargtrans__"))var i=i;return i});return __accu0__}();
os.remove(batch_filename);
elem.send_keys(ARROW_DOWN);
var foo=Foo(list(range(10)));
points.append(tuple([-1,-.5]));
print(a);
var b=a[4];
var startupinfo=subprocess.STARTUPINFO();
df.info();
var line=handle.readline();
var out=timeobj.astimezone(pytz.utc);
index+=1;
frame.pack();
export var city_name=city.py_name;
var loop=asyncio.get_event_loop();
export var love_ctx=Graph(conj.store,NS_CTX.love);
print(sympy.__version__);
self.handleError(record);
pl.plot(x,dist.pdf(x));
export var my_hash=self.md5.digest();
tuple([0,0,0,0,0]);
py_keys[key[0]]=py_keys[key[0]]+d[key];
count[s]+=1;
var client=paramiko.SSHClient();
row.extend(sixplus(previous_row));
var x=np.linspace(0,10,100);
user_registered.connect(user_registered_callback);
py_iter.destroy();
worker.moveToThread(self.thread);
print(f);
tuple([new set([new set([i])])]);
var Xs=np.average(Xi);
true==1;
var mtime=os.stat(filename).st_mtime;
(x+y).subs(reps);
var imagem=255-imagem;
var ts2=ts.__getslice__(datetime(2011,1,8),null,1);
print(id(Point(1,2)));
var key1=models.IntegerField();
export var atok=asttokens.ASTTokens(line,__kwargtrans__({parse:true}));
fs.program_select(0,sfid,0,0);
var p=Pool(5);
export var obj_dict=pickle.load(output);
res.append(tuple([s[i],j-i]));
var fig=plt.figure();
var tn=telnetlib.Telnet(HOST,PORT);
df;
hash(self._key());
j+=self.shape[1];
Py_Initialize();
main_program.py;

var alist=[arr.__getitem__([0,tuple([0,-1,1])]),arr.__getitem__([tuple([0,-1,1]),-1]),arr.__getitem__([-1,tuple([0,null,-1])]),arr.__getitem__([tuple([-2,0,-1]),0])];
intersections;
print(df1);
export var filtered_primes=map(int,primes);
var __left0__=NORTH;var dx=__left0__[0];var dy=__left0__[1];
df;
var elem=ElementTree.parse(file);
var data=list(function(){var __accu0__=[];for(var i of data)__accu0__.append(tuple(i));return py_iter(__accu0__)}());
int(builtins.round(number));
var b=itertools.zip_longest(...a);
var t=np.linspace(0,4*np.pi,100);
d[v]=[i];
var cap=cv2.VideoCapture(fn);
self.do_open(self.http_class,req);
true;
attrs.py_update(list(get_choices(attrs)));
__init__;
self.setFlags(QGraphicsItem.ItemIsSelectable|QGraphicsItem.ItemIsMovable);
var X=np.linspace(0,10,100);
res.asList();
var pool=Pool(pool_size);
gona.__getitem__([tuple([0,2,1]),0]);
jobs.append(job);
var x=min(x,1);
print(read_pipe());
sqrt(6*s);
first.nonzero();
openers.append(opener);
var py_name=models.CharField(__kwargtrans__({max_length:100}));
plt.legend();
d[int(key)]=val;
var output=function(){var __accu0__=[];for(var [i,x]of enumerate(args))__accu0__.append(x.reshape(s0.__getslice__(0,i,1)+tuple([-1])+s0.__getslice__(i+1,null,1)));return __accu0__}();
var mtime=os.path.getmtime(py_name);
g.series(tuple([x,y]),tuple([0,0]));
var __left0__=cv2.threshold(im,128,255,cv2.THRESH_BINARY);var ret=__left0__[0];export var im_thresh=__left0__[1];
fs.release();
bounding_boxes.append(tuple([center,tuple([x,y,w,h])]));
mpl.rcParams.py_update(mpl.rcParamsDefault);
var profile=user.get_profile();
i+=1;
print(sli);
list(g(arr,8));
var b=np.arange(0,25,1).reshape(tuple([5,5]));
layer1.__setslice__(0,null,null,layer2);
var lines=f.read_lines();
print(function(){var __accu0__=[];for(var elem of list(d.py_keys()))__accu0__.append([elem,get_linked_list(elem,d,[]).__getslice__(1,null,1)]);return dict(__accu0__)}());
spampwriter.writerrow(tuple([s1,item,i,list1[item-1],er1]));
df;
HTT+=HTTflips;
print(df);
var n=mat.shape[0];
var count=collections.Counter();
ax.broken_barh(xranges,yrange,__kwargtrans__({facecolors:facecolors,alpha:1}));
export var request_object=urllib.request.Request(url,post_data,http_headers);
var foo=Foo();
var Lv=[];
var result=[[]];
var polygon=mplpl.Polygon([tuple([x1,y1]),tuple([x2,y2]),tuple([x2,0]),tuple([x1,0])],__kwargtrans__({color:c}));
export var xlmodule=objworkbook.VBProject.VBComponents.Add(1);
var center=xy.mean(__kwargtrans__({axis:-1}));
list(b.py_values());
var __left0__=im.shape.__getslice__(0,2,1);var row=__left0__[0];var col=__left0__[1];
var r=s.py_get(url);
numpy.dot(a,a);
var result=np.sum(corr_time2(t_output,JM1,JM2),__kwargtrans__({axis:tuple([1,2])}));
var encoded=json.dumps(obj);
method();
HttpResponseRedirect(secure_url);
var results=DataFrame(results,__kwargtrans__({index:df.columns,columns:df.columns}));

self.omega=omega;
os.chdir(curdir);
f.write(chunk);
var dx=POINT2[0]-POINT1[0];
var arr=function(){var __accu0__=[];for(var i=0;i<10;i++)__accu0__.append(bitarray(50));return __accu0__}();
export var I=np.nonzero(np.in1d(abc,c))[0];
py_typeof(100);
print(repr(test.read()));
print(item);
print(ascend_list);
var d=df.column1.diff();
var count=(cdist(listScore,np.atleast_2d([2,0]))==0).sum();
self.setParams(__kwargtrans__(kwargs));
print(x);
var s=stdscr.getstr(0,0,15);
sys.path.append(basepath);
var new_dict=defaultdict(list);
themsg.attach(msg);
var proxy_handler=urllib.request.ProxyHandler(dict([[proxyscheme,proxyurl]]));
export var cur_line=f.readline();
eval(command);
s.add(Math.abs(n));
Py_DECREF(pName);
false;
var data=json.loads(response);
7.12802865169;
print(a.MY_CONSTANT);
grades[i];
export var utc=utc.py_replace(__kwargtrans__({tzinfo:from_zone}));
math.sqrt(2)*erfi(2*p-1);
easy_install- -always-unzip;
ws.set_remove_splits(true);
self.session.startRunning();
print(response.status_code);
cur.rowcount;
plt.subplot(2,2,1);
print(item);
self._whatever=whatever;
export var y_a=np.sin(x_a);
endpoint(...args,__kwargtrans__(kwargs));
Simbad.reset_votable_fields();
cv2.waitKey();
var x=x+5;
y*y;
d[k]=round(v);
var logger=logging.getLogger(__name__);
self.start();
ax.set_yticklabels(yticklabels,__kwargtrans__({minor:false}));
assert_equal(foo,10);
export var maxindex=a.argmax();
incsv.read();
var ax=fig.add_subplot(224);
export var preliminary=stage1.search(text).group(1);
p.map(mp_worker,data);
var fig=plt.figure();
export var my_user=User.objects.py_get(__kwargtrans__({pk:1}));
psutil.wait_procs(children,__kwargtrans__({timeout:5}));
pl.plot(x,blue);
var df=pd.DataFrame(y,__kwargtrans__({index:x}));
self.webview.getSettings().setJavaScriptEnabled(true);
math.degrees(math.atan(x));
sys.getrefcount(sys);
print(tuple([py_name,score]));
result.__setitem__([,0],np.clip(im.__getitem__([,0]),0,threshold));
var df=pd.DataFrame(arr);
vault.set_vault_notifications(vault,notification_config);
export var trel=function(){var __accu0__=[];for(var t of tabs)__accu0__.append(t/tabs[0]);return __accu0__}();
[11,14,15,16,17,18];
self.setAcceptDrops(true);
var a=np.empty(10);
tuple([6,[false,false,true,false]]);
export var lum_img=np.flipud(img.__getitem__([tuple([0,null,1]),tuple([0,null,1]),0]));
export var get_conf=function __lambda__(){return model_name.objects.py_get()};
var arr=arr[~mask];
pyaudio.pa.__file__;
n;
data.__setslice__(0,null,null,function(){var __accu0__=[];for(var i of range(0,2500,50))__accu0__.append(data.__getslice__(i,i+50,1));return __accu0__}());
cython.float;
var __left0__=map(int,tuple([days,hours,minutes]));var days=__left0__[0];var hours=__left0__[1];var minutes=__left0__[2];
export var peaks=freq[mask];
print(x,y);
tuple([pickled_state[0],pickled_state[1],new_state]);
d[i]=l.__getslice__(s,s+i,1);
var shape=tuple([len(arrays)*a.shape[0],a.shape[1]]);
print(py_typeof(first_arg));
var DEBUG=true;
var img2=converter.enhance(.5);
a.__setitem__([2,4],1);
mat.move(-7,-2,0,__kwargtrans__({r:true}));
_multiprocessing.sendfd(parent_pipe.fileno(),socket_to_pass.fileno());

var k=np.random.rand(1E3);
lst.append(1);
print(output);
var qs=self.get_filtered_queryset(qs);
var list2=[2,2,2,2,2];
new set([new set([form])]);
var matrix=np.random.randint(0,10,tuple([5,5]));
var groups=dict();
fields.append(tuple([py_name,field.clone()]));
parser.read([filename]);
var x=np.cos(u)*np.sin(v);
sorted(list(s1))==sorted(list(s2));
counter+=1;
export var avg_time=sum(data[1])/len(data[1]);
py_next(generator);
var module_name=inspect.getmodule(f).__name__;
mapper.SetColorModeToDefault();
self.port=port;
export var idx_c=colorjh>0&colorjh<1;
(function(){var __accu0__=[];for(var x of seqs[0])__accu0__.append([x]+[]);return __accu0__})();
var data=bytearray(os.path.getsize(FILENAME));
export var ur=np.array([bx2,by2]);
subcheckio(stones,0,0);
lock.release();
results.extend(result);
self.assertEqual(delta(9,7),2);
self.initfunc=initfunc;
img.autoscale();
print(url);
this_array;
exit(1);
np.clip(X,self.loclip,self.hiclip,__kwargtrans__({out:X}));

book.unload_sheet(py_name);
var a=A();
random.shuffle(unfrozen_indices);
tuple([tuple([128,0,0]),tuple([0,128,128]),tuple([0,0,255]),tuple([0,204,255]),tuple([204,255,255])]);
streamHandler.setFormatter(formatter);
var n=int(math.ceil(math.log(abs(x2-x1)/epsilon)/math.log(2)));
var p=pyaudio.PyAudio();
var __left0__=norm.fit(datos);var mu=__left0__[0];var sigma=__left0__[1];
var pool=Pool(CONCURRENCY);
Node.tree.filter(q);
var x=0;
ret[np.diff(csr_mat.indptr)==0]=0;
var form=CostForm();
self.window=gtk.Window(gtk.WINDOW_TOPLEVEL);
var data=self.page.mainFrame().toHtml();
self._data.columns.size;
out.__getitem__([,tuple([0,outlen,1])]).copy();
export var idx_end=A.indptr[i+1];
export var generator_code=inspect.getblock(sourcecode.__getslice__(gline-1,null,1));
print(df);
os.unlink(filename_larry);
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
self.filter(__kwargtrans__({is_public:true}));
var t=threading.Thread(__kwargtrans__({target:IOLoop.instance().start}));
self.setBrush(Qt.green);
print(client.fetchAll());
w.pack();
var result2=pool.apply_async(solve2,[B]);
var words=function(){var __accu0__=[];for(var pair of v)__accu0__.append(pair[0]);return __accu0__}();
var A=A.__getslice__(1,null,1).__getslice__(0,null,-1).T;
var title=models.CharField(__kwargtrans__({max_length:255}));
h[i]=h[-1];
var mu=np.array([0,0]);
print(CatalanNumbers(511));
var image=Image.open(filePath);
rec.levelname;
export var min_key=k;
var v=np.linspace(0,np.pi,100);
tuple([low,pivot,high]);
print(Foo.foo_string);
replaced.append(text.__getslice__(pos,null,1));
export var first_row=np.where(rows==false)[0][0];
export var nodeMap=dict();
var app=QtGui.QApplication(sys.argv);
var bets=Math.pow(2,np.cumsum(toss2));
myResponse.raise_for_status();
self.main=MainWindow();
im.set_data(tmp);
(function(){var __accu0__=[];for(var [value,key]of smallest)__accu0__.append(-value);return __accu0__})();
[coslat*math.cos(lon),coslat*math.sin(lon),math.sin(lat)];
print(line);
export var passmanager=urllib.request.HTTPPasswordMgrWithDefaultRealm();
power(function __lambda__(x){return x*2},1)(9);
context.py_update(extra_context||dict({}));
start_response(status,response_headers);
result.__setslice__(1,4,null,np.floor(result.__getslice__(1,4,1)));
artist.add_reviews(review_id);
var out=[];
print(F[1]);
export var y_fit2=func1(x,...popt2);
var bins=NP.array([0,20,40,60,80,100]);
row.py_pop(5);
var lengths=map(len,lists);
var sheet=doc.sheets[0];
transactions.py_sort(__kwargtrans__({key:function __lambda__(date_data){return date_data[0]}}));
var f=urllib.request.urlopen(req);
var l1=[];
layout.set_font_description(font);
process.join();
var ids=function(){var __accu0__=[];for(var row of cursor.fetchall())__accu0__.append(row[0]);return __accu0__}();
food;
var d=dict({});
insanelib.xyz=myxyz;
export var object2=ClassB();
self.queryset=queryset;
var __left0__=observation_points;var x=__left0__[0];var y=__left0__[1];var z=__left0__[2];
var X=2*X;
b[0]=97;
ax.add_patch(p);
pl.xticks(x,xticks);
ret.reshape(self.shape);
export var roles=models.ManyToManyField(Role);
print(b.shape);
(function(){var __accu0__=[];for(var [i,[t,v]]of enumerate(each))__accu0__.append(t?i:v);return __accu0__})();
L.append(np.log(gev.pdf(data,...fit)).sum());
deps.func();
print(line);
fileHandler.setFormatter(formatter);
export var kicks=[0,-5*noise,5*noise];

var __left0__=tuple([copy[j],copy[i]]);copy[i]=__left0__[0];copy[j]=__left0__[1];
qproc.start();
var rank=list(p.py_values());
var line=line.strip(os.linesep);
test();
self.x=x;
s.send(CONNECT);
total+=num;

layer.paste(mark,tuple([(im.size[0]-w)/2,(im.size[1]-h)/2]));
var __left0__=tee(iterable);var a=__left0__[0];var b=__left0__[1];
var a=A();
var count=0;
val+=int(w);
var samples=np.random.lognormal(__kwargtrans__({mean:1,sigma:.4,size:1E4}));
var v=np.exp(2*mu+Math.pow(sigma,2))*(np.exp(Math.pow(sigma,2))-1);
random.seed(0);
var startTime=time.time();
print(tags.tag,tags.text);
var b=np.corrcoef(a);
print(n[-1]);
classdecorator;
result[i]=foo(data[i]);
export var tmap=[];
deletez.__getslice__(2,-1,1);
channel.shutdown_read();
var doc=etree.ElementTree(page);
nltk.data.path;
var result=self._result_queue.py_get();
profiler.stop();
pprint.pprint(solution);
p/=numpy.sum(p);
print(py_values[ind]);
var x=0;
var fig=plt.figure();
var posts=FacebookFeed.get_posts(__kwargtrans__({user:user}));
o.write(line);
var d=function(){var __accu0__=[];for(var x of l1)__accu0__.append([x,[]]);return dict(__accu0__)}();
self._x;
var rgb=io.imread(filename);
var best=function(){var __accu0__=[];for(var _=0;_<n+1;_++)__accu0__.append(tuple([0,[]]));return __accu0__}();
var line=canvas.create_line(0,10,width,10,__kwargtrans__({width:4}));
f(__kwargtrans__({arg_a:0}));
bool(collections.Counter());
graph.html(data);
test(B());
var pix=im.load();
[-5,-5];
pdb.Pdb().set_trace(frame);
print(threading.currentThread().getName(),self.receive_messages);
setattr(args,self.dest,[strategy,path]);
my_list.append(key);
print(info.st_mtime);
var my_dict=defaultdict(dict);
var __left0__=oldDict.py_popitem();var key=__left0__[0];export var valuelist=__left0__[1];
print(f(X,Y));
color+vector*percent;
var target=random.uniform(0,total);
pyplot.legend(newHandles,newLabels);
setattr(self,self._attr_name,value);
export var first_arg_unicode=first_arg.decode(sys.getfilesystemencoding());
A.__getitem__([0,1])*.5;
df.py_values[[np.arange(5)]*2]=0;
M[num_nonzeros!=0];
process_byte(b);
export var vd=dict(function(){var __accu0__=[];for(var v of my_list)__accu0__.append(tuple([v[1],v[0]]));return py_iter(__accu0__)}());
hash(self.py_name);
var bins=algos.quantile(np.unique(ser),np.linspace(0,1,11));
jsonify(__kwargtrans__({count:counter.value}));
list_of_all_primes(start,end);
var context=etree.iterwalk(root);
print(timeit.timeit(function __lambda__(){return py_split(TEST,SEPS)}));
var d=yaml.load(s);
var tt=dt.timetuple();
sys.settrace(self.func);

pp.imshow(paw);
export var k2=sorted(dict2,__kwargtrans__({key:dict2.py_get}));

self.context=context;
print(len(holes));
data[k]=int(v);
var min_y=image_src.shape[0];
var edges=cv2.Canny(gray,CANNY_THRESH_1,CANNY_THRESH_2);
data+(chr(length)*length).encode();
zorder_images.py_sort(__kwargtrans__({key:function __lambda__(x){return x[0]}}));
username;
login(config.username,config.password);
writer.writerow(window.popleft());
string;
print(l);
out+=arr.__getitem__([tuple([0,-2,1]),tuple([1,-1,1])]);
oldget(key);
d.callback(0);
var out=np.nanmax(grouped_2Darray,1);
export var u_idx_x=np.argsort(x);
export var org=Column(Boolean,__kwargtrans__({py_default:false,nullable:false}));
self.queue=Queue();
self.regenTree();
x+y+z;
export var solutions=matching_solutions;
var cax=ax.contourf(theta_mid,r_mid,H.T,10,__kwargtrans__({cmap:plt.cm.Spectral}));
a.append(1);
da.destroy();
export var dupe_rows=dupe_rows.apply(function __lambda__(row){return row.duplicated().any()},__kwargtrans__({axis:1}));
var mat=IndexedRowMatrix(traindf.map(function __lambda__(row){return IndexedRow(...row)}));
blahblah;
top[0].reshape();
export var origlist=list();
B.func();
export var filt=resonator.poles_exp(__kwargtrans__({freq:freq*Hz,bandwidth:bw*Hz}));
d.wup_similarity(g);
print(df);
node_data.append(node[key]);
export var _sounds=function(){var __accu0__=[];for(var [i,code]of enumerate(_codes,1))for(var c of code)__accu0__.append([c,str(i)]);return dict(__accu0__)}();
self[key];
axs[1].plot(clust_data.__getitem__([tuple([0,null,1]),0]),clust_data.__getitem__([tuple([0,null,1]),1]));
tuple([548,410]);
tuple([566,424]);
print(sess.run(x_max));
ex.args=tuple([msg])+ex.args.__getslice__(1,null,1);
1.58164E-4;
x+1;
var data=list();
app.py;
M.add_edge(1,2,__kwargtrans__({weight:19}));
self.a=a;
export var mp=MultiPolygon(list(polygonize(mls)));
var diffs=map(ptdiff,zip(pts,pts.__getslice__(1,null,1)));
result;
f.write(response.content);
newImage.save(new_image_path);
var r=R*cuberoot(u);
var py_name=ndb.StringProperty();
print(timeit(function __lambda__(){return pool.map(mmul,matrices)},__kwargtrans__({number:20})));
var opener=urllib.request.build_opener();
var form=ClientForm(request.POST,__kwargtrans__({instance:client}));
len(host_bytes)==4&&len(valid)==4;
var image=image.convert();
plt.plot(np.arange(10)+i);
self._stream.write(text);
var parser=nltk.RecursiveDescentParser(lgrammar);
var ds=audiere.open_device();
nx.__version__;
P(func);
var m=a.reshape(tuple([a.shape[0],-1]));
plt.figure();
guess_type(filename)[0];
list2.append(t);
close();
G.add_path([10,11,12]);

-1;
cv2.cvtColor(self.cvImage,cv2.COLOR_BGR2RGB,self.cvImage);
print(synset.lemmas[0].py_name);
tuple([item.created.year,item.created.month]);
f.close();
two.py;
var root=ET.fromstring(data);
[2011,5,8];
a[np.isneginf(a)]=inf;
sys.stdout=buffer;
blah();

print(root.filename);
print(e.__context__);
var writer=csv.writer(output_file);
var py_name=py_name.lower();
pseudocolor(20,0,100);
tuple([[6,7,8]]);
export var old_value=getattr(cls,py_name);
export var converted=df.apply(function __lambda__(f){return to_number(f[0])},__kwargtrans__({axis:1}));
Parent.__init__(self,args[0].x,args[0].y,args[0].z);
archive.close();
print(pos[vertex]);

var client=oauth.Client(consumer);
export var MAJ=np.argmax(axes);
fp.close();
self.data=data;

result;
foo.foo();
var image=image.resize(tuple([tw,nh]),Image.ANTIALIAS);
sys.getsizeof(anIntOBJECT);
pygame.quit();
var ax2=fig.add_axes([left,bottom,width,height]);
var query=parse_qs(str.__getslice__(1,null,1));
zip(a,b);
var __left0__=list(d2.py_items())[0];export var first_pair=__left0__[0];export var pair_freq=__left0__[1];
print(get_diagonal(m,1,4,-1));
q.urlencode();
var __except0__=KeyError(key);__except0__.__cause__=null;throw __except0__;
translation.activate(self.old_lang);
var m=np.array(function(){var __accu0__=[];for(var i=0;i<4;i++)__accu0__.append([i]*4);return __accu0__}());
chars.extend([digit,py_next(symbols)]);
var result=[];
print(et.tostring(r.getroot()));
var fullname=os.path.join(root,f);
(function __lambda__(){var a=tuple([].slice.apply(arguments).slice(0));return cls(method(...a))});
var r=s.__getslice__(-1,null,-1);
pylab.show();
var h2=logging.StreamHandler();
deletelines[i];
print(link);
var __left0__=curve_fit(func,x,y);var popt=__left0__[0];var pcov=__left0__[1];
var cbar=plt.colorbar();
var xv=numpy.linspace(0,100,200);
export var sector_count=collections.Counter(function(){var __accu0__=[];for(var item of a)__accu0__.append(item.sector);return py_iter(__accu0__)}());
export var ninja=create_or_update_and_get(NinjaData,data);
t.start();
extruded.__setitem__([list(range(N)),cords.__getitem__([tuple([0,null,1]),2]),cords.__getitem__([tuple([0,null,1]),0])],1);
print(x);
self.webview.clearCache(true);
Py_Initialize();
calendar.day_name[0];
start+=len(sub);
xs.py_sort();
fill_array(arr,my_list);
var content_type=models.ForeignKey(ContentType);
(function(){var __accu0__=[];for(var [i,_]of enumerate(seq,__kwargtrans__({start:start})))__accu0__.append(i);return py_iter(__accu0__)})();
data;
var f=Foo();
var a=2;
export var nf=function(){var __accu0__=[];for(var x of data1)if(__in__(x,data2))__accu0__.append(x);return __accu0__}();
var fig=plt.figure();
value;
var doc=lxml.html.parse(s);
Qux.java;
f(__kwargtrans__({x:1}));
export var py_string=PyString_FromStringAndSize(c_string,1);
var template=self._lookup.get_template(self.template());
export var datab=numpy.empty_like(image_data);
(dates-dateshift).fillna(0).dt.days.cumsum();
np.fromiter(x,int);
false;
var extent=[xedges[0],xedges[-1],yedges[0],yedges[-1]];
var item=heapq.heappop(py_items);
var a=(10*np.random.randn(200,200)+127).astype(np.uint8);
aa.indices.__getslice__(aa.indptr[0],aa.indptr[1],1);
print(jo.key1);
Python-execnet;
zeros_and_ones.__setitem__([x,y],1);
var s=StringIO.StringIO();
var s=np.sin(x_axis_rotations);
random.randint(1,self.sides);
np.multiply(ray_point,0);
x[r]=x[s];
var merged=dict({});
var d=dict(__kwargtrans__({a:a}));
dir(li);
var pkt=pkt[IP];
search(parser.ast2list(st));
imap_utf7.decode(imap_utf7.encode(x));
var array=np.asarray(array);
func1();
print(s);
export var sf_client=beatbox.PythonClient();
var b=klass();
export var rects=faces[0];
sum(answer)/2;
var window=Tk();
mainloop.run();
show();
self.app=app;
export var request_parameters=json.dumps(request_dict);
q.set_message_class(RawMessage);
var f=NamedTemporaryFile(__kwargtrans__({delete:false}));
export var bunch=BunchOFiles(...sys.argv.__getslice__(1,null,1));
eventlet.monkey_patch();
var form=TestForm();
var delta=A[nhb]-A[x];
export var testName=testName.lower();
var n=sparkdf.rdd.getNumPartitions();
export var b_thread=threading.Thread(__kwargtrans__({target:get_b}));
turtle.py_update();
var p=x.ctypes.data_as(ctypes.POINTER(ctypes.c_double));
var schema=f.read();
var pool=Pool();
interact(set_cursor,__kwargtrans__({x:tuple([1,9,.01]),y:tuple([0,5,.01])}));
pyximport.install();
export var deserialized_a=pickle.loads(serialized);
np.int8(128);
floor(0,1);
var __except0__=suppress_context(TheErrorClass());__except0__.__cause__=null;throw __except0__;
var ax=plt.gca();
print(a,b);
export var ciphertext=cipher.encrypt(plaintext+(16-__mod__(len,16))*PADDING_BYTE);
res.py_sort();
other[0][0]=true;

var window=Window(root);
hold_lines.append(row);
var p=np.asarray(prior);
export var newDate=datetime.datetime(2008,11,42);
var row=[];
var ids=function(){var __accu0__=[];for(var row of cursor.fetchall())__accu0__.append(row[0]);return __accu0__}();
var json_dict=json.loads(json);
self.instance=MyAbcClass();
var __left0__=plt.subplots(nrows,2);var fig=__left0__[0];var axes=__left0__[1];
self.ren.GetRenderWindow().Render();
pp.savefig(plot1);
sum(function(){var __accu0__=[];for(var k=1;k<n+1;k++)__accu0__.append(1/Math.pow(k,2));return py_iter(__accu0__)}());
var args=[py_iter(iterable)]*n;
tasks.register(PowersOfTwo);
tuple([len(left),len(sep)+len(right)]);
var l=LineString([tuple([0,0]),tuple([10,10])]);
float(sum)/n;
zip(...results);
i.close();
var chunk=stringio.read(256);
print(function(){var __accu0__=[];for(var i of generator_overlap_split_list(l,s))__accu0__.append(i);return __accu0__}());
var df=df.astype(int);
tuple([1,1,0]);
d[key1]=sheet.cell_value(row_index,column_index);
sorted.__text_signature__;
db.fleas.truncate();
var z=numpy.arange(4*4).reshape(4,4);
print(function(){var __accu0__=[];for(var i of dx_combo)__accu0__.append(py_next(iters[i]));return __accu0__}());
y.__getitem__([1,1,2]);
var arr=np.arange(5);
plt.sca(axes.__getitem__([1,1]));
x.__setitem__([tuple([0,null,1]),[2,1]],x.__getitem__([tuple([0,null,1]),[1,2]]));
result.append(result[-1]+1);
print(traverse(re.sre_parse.parse(regex).data));
leng.count+=1;
-Xms128m;
self.dropbox_fn(filename);
export var lid=np.ravel_multi_index(x.T,x.max(0)+1);
dir(newImg1);
ipdb.set_trace();
dis.dis(swap_xy);
var df=df.reset_index();
repr(eval(self.expression));
global_list.append(x);
self.button.clicked.connect(self.reset_counter);
Electronics|Computers|Laptops;
var b=[2,5,6];
time.sleep(i*10);
print(i.geoms[0].coords[0]);
root.iconbitmap(__kwargtrans__({py_default:datafile}));
Math.floor((d.day-1)/7)+1;
var d=MyDict(__kwargtrans__({a:1}));
self.assertTrue(mock_subproc_popen.called);
var a=[];
var fig=plt.figure();
self.template=template;
(function(){var __accu0__=[];for(var k of self)__accu0__.append(tuple([k,OrderedDict.__getitem__(self,k)]));return __accu0__})();
wrapper;
print(numpy.linalg.norm(y-clf2.predict(X)));
print(xl.__module__);
urlparse.urlsplit(url);
h[0];
var c=a_type(b);
var output=printme.format(__kwargtrans__({user:x,date:y,User:x.capitalize()}));
help(numpy.sin);
self._b=b;
self.button.setIcon(self._icon);
json.dump(data,outfile);
login_manager.unauthorized();
client.set_missing_host_key_policy(paramiko.AutoAddPolicy());
var data=self._fp.read(size);
var l=logging.getLogger(logger_name);
x.py_sort();
var soup=BeautifulSoup(res);
number_of_tries+=1;
BOOST_PYTHON_MODULE(example);
array.append([]);
var __left0__=split_list(my_func());var head=__left0__[0];var rest=__left0__[1];
baz.func();
print(counter.value);
print(list(unpack(data,11)));
col_i+=1;
n-=1;
response.text;
draw();
export var ListenStream=55556;
var filename=db.StringProperty();
(function(){var __accu0__=[];for(var f of self.model._meta.fields)__accu0__.append(f.py_name);return __accu0__})();
cor.loc.__setitem__([tuple([0,null,1]),tuple([0,null,1])],np.tril(cor,__kwargtrans__({k:-1})));
foo.func(bar);
var cr=func(...args,__kwargtrans__(kwargs));
export var reshaped2=sqlContext.createDataFrame(grouped.map(make_row));
libc.prctl(15,byref(buff),0,0,0);
s+=1;
fout.writelines(g);
print(table_name);
print(longest_sum([1,2,7,8,11,12,14,15],[],10));
help(setattr);
var ax=plt.gca();
dt[hr>=10&hr<=16];
process.crawl(MySpider);
export var setA=frozenset(function(){var __accu0__=[];for(var element of listA)__accu0__.append(frozenset(element));return __accu0__}());
self.input.GetValue();
sess.run(init_op);
a.method2();
g.__setslice__(0,null,null,function(){var __accu0__=[];for(var elem of g)__accu0__.append(elem.__getslice__(0,2,1));return py_iter(__accu0__)}());
os.chdir(app_root);
_features[py_name]();
ret.append(link[0]);
System.Security.AccessControl;
C().f();
var b=object_array(a,a,a);
print(df);
var x=np.random.randn(5);
order_cheese();
tuple([max_idx,max_val]);
sku_dict[color_id].append(sku);
var n=len(df[mask]);
var app=Flask(__name__);
log_file.write(s);
a+b==c;
export var sys_ss=scipy.signal.tf2ss([1],[1,2]);
self.layers=[NeuronLayer(self.n_outputs,self.n_inputs)];
var conn=MySQLdb.connect(__kwargtrans__(db_params));
x;
self.parser=ArgumentParser();
var __left0__=ax2.get_ylim();export var miny=__left0__[0];export var maxy=__left0__[1];
can.create_image(tuple([x_coordinate,y_coordinate]),img);
var diam_out=np.maximum.reduceat(dists,shift_idx);
l.py_sort();
var __except0__=Exception(stdout);__except0__.__cause__=null;throw __except0__;
var __left0__=tuple([a[i]*b[j],a[i],b[j]]);var best=__left0__[0];var n1=__left0__[1];var n2=__left0__[2];
var rows=cursor.fetchall();
var data2=pickle.load(pkl_file);
print(cell.value);
var d=datetime.date(tgtdate.year,tgtdate.month,i);
print(list(ip_to_datum_map.py_values()));
pt2.getX()==pt1.getX();
print(sums(listgen(),2E4));
self._x=a._x;
export var new_self=self.__class__.objects.py_get(__kwargtrans__({pk:self.pk}));
export var my_cls=MyClass();
a.__private();
wrapper;
var txt=txt.py_replace(k,v);
results.append(tuple([i,li[i],j-i]));
self.delays[py_metatype]=self.manager.dict();
export var X_reduced_train=pca.fit_transform(X_train);
export var rng1=reikna_norm_rng(0,100,1E4,0,1);
ax.add_patch(circ);
var inp=alsaaudio.PCM(alsaaudio.PCM_CAPTURE,alsaaudio.PCM_NONBLOCK);
self.app(environ,start_response);
qs.none();
self.data=self.request.recv(1024).strip();
export var pixel_position=point[0]+point[1]*w;
get_language();
save_uploadfile_to_disk(a_path,file);
s.bind(i[4]);
b.attr;
download_thread.start();
export var Total=Total+int(number);
imap.logout();
image*=255/image.max();
db_session.add(parent);
var fig=plt.figure();
[pri,sec,tot];
Gtk.init([]);
var rv=self.next_chunk;
server.mail(fromaddr);
var f2=partial(f,42);
var ii=np.argsort(maxvi.__getitem__([tuple([0,null,1]),-1]));
self._attr;
start_response(status,response_headers);
var newlist=[];
var __left0__=ax.get_legend_handles_labels();var handles=__left0__[0];var labels=__left0__[1];
i+=timedelta(1);
var __left0__=plt.subplots();var fig=__left0__[0];var ax1=__left0__[1];

eq_(0,len(instances));
var new_array=np.empty(tuple([len(uinqPos),4]));
print(fp.read());
export var colortype=0;
var df=pd.read_fwf(data_file);
var writer=csv.writer(results);
self[key];
d[year].append(month);
var style=ttk.Style();
original(...args,__kwargtrans__(kwargs));
var msg=MIMEMultipart();
var pool=Pool(__kwargtrans__({processes:4}));
set_color(w,newc);
var file=sys.argv[0];
var surface=pygame.surfarray.make_surface(base);
self.src[-1].extend(py_items.__getslice__(0,remainder,1));
a.a;
var d=json.loads(response.get_data());
self._data.columns[col];
chunked.append(word_pos);
self.spawn(self.listener,get_your_channel_label(message));
self.request.close();
print(numpy.argwhere(a==4));
logging.root.addHandler=tracer(old_addHandler);
x.stdout.close();
var fig=plt.figure();
var response_body=str(Math.pow(int(request_body),2));
QtCore.QEvent.__init__(self,InvokeEvent.EVENT_TYPE);
mGui.mainloop();
optionmenu.config(__kwargtrans__({width:width}));
cv2.line(frame,pred[i],pred[i+1],tuple([0,0,200]));
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
smbus_read_byte.argtypes=[c_void_p,POINTER(SMB_REQUEST)];
var lens=function(){var __accu0__=[];for(var [k,g]of groupby(sorted(l1,__kwargtrans__({key:key})),__kwargtrans__({key:key})))__accu0__.append(len(list(g)));return __accu0__}();
results.__setitem__([i,ind],val);
response;
var a=[1,4,8];
printRecur(root);
plot([0,1,5,2,9]);
var dictionary=dict(zip(...[py_iter(List)]*2));
parser.feed(buffer);
plt.plot(xs);
var arr=np.asarray(points);
result+=1;
[n][n-1][n-1];
var current_dict=current_dict[letter];
self.omega.append(tuple([int(round(event.ydata)),int(round(event.xdata))]));
var cpid=os.fork();
A.shape;
df;
var theta=np.concatenate(tuple([theta1,theta2]));
var fn=os.path.join(base,file);
pygame.quit();
export var curve=plot.plot(list(xdict.py_keys()),y);
dt.timestamp();
var t=cv2.cvtColor(cam.read()[1],cv2.COLOR_RGB2GRAY);
var __except0__=KeyError(key);__except0__.__cause__=null;throw __except0__;
var res=c.fetchall();
count[0];
NULL;
var x=a[1]*b[2]-a[2]*b[1];
var i=0;
var y=func(x);
var seen=set();
var article=models.ForeignKey(Article);
count.__setslice__(1,null,null,count.__getslice__(1,null,1)-count.__getslice__(0,-1,1));
print(key,value);
var dt=datetime.datetime(__kwargtrans__({year:2014,month:5,day:2}));
deleter(root);
plt.show();
var result=dict({});
(function(){var __accu0__=[];for(var i of original)if(i>lower&&i<=upper)__accu0__.append(i);return __accu0__})();
datetime.utcnow()+timedelta(__kwargtrans__({days:1}));
var fig=plt.figure();
print(sp.width,sp.height);
py_values.__setslice__(1,null,null,py_values.__getslice__(1,null,1)-py_values.__getslice__(0,-1,1));
yaml.add_constructor(_mapping_tag,dict_constructor);
var L=[];
list(mem.py_keys());
var f=440;
var r=requests.post(url,__kwargtrans__({data:postdata}));
var q=Queue(__kwargtrans__({maxsize:1}));
var t=set([7,8,9]);
gtk.rc_parse_string(_gtk_styles);
Function(function __lambda__(x){return self(x)/other});
widget.py_clear();
col.append(np.array(num_rows*[i]));
main();
var start=time.time();
resp.group();
export var transformed=assembler.transform(parsedData);
var results=multiprocessing.Pool(number_of_processes).map(createpdf,data);
self.form.save.assert_called_once_with(__kwargtrans__({owner:self.request.user}));
var upper_white=np.array([180,sensitivity,255]);
Languages|LANGUAGES;
var groups=function(){var __accu0__=[];for(var [strt,stop]of zip(strts,stops))__accu0__.append(data.__getslice__(strt,stop,1));return __accu0__}();
plt.plot(x,c);
sys.exit(a.exec_());
var text=node.text.encode(encoding);
var password=input(prompt);
var user=models.ForeignKey(settings.AUTH_USER_MODEL);
var __left0__=fig.canvas.get_width_height();var width=__left0__[0];var height=__left0__[1];
defaultdict(py_metatype);
var __left0__=itertools.tee(py_iter(it));self.it=__left0__[0];self.nextit=__left0__[1];
var __except0__=AttributeError;__except0__.__cause__=null;throw __except0__;
self.app.exec_();
tuple([0,2,1]);

tk.Frame.pack(self);
var application=Cling(get_wsgi_application());
var cursor=connection.cursor().execute(sql);
var grid=np.arange(100).reshape(tuple([10,10]));

total+=(i/j).sum();
handle.read();
var tree=html.parse(url);
var yy=np.hstack([-1*y.__getslice__(0,null,-1),y]);
export var firstDigit=x[0];
var words=list(map(process_group,groups));
var pic=cStringIO.StringIO();
export var data1=pickle.load(pkl_file);
export var zip_ok=0;
print(StudentTCI(1,2,10));
tuple([X,X().foo()]);
deferred.defer(count_colors);
self.upper();
var x_test=np.array(function(){var __accu0__=[];for(var i of test_data)__accu0__.append(i.__getslice__(1,null,1));return __accu0__}());
var sess=tf.Session();
var d=pd.to_datetime(df.last_updated);
emit(doc.location,[meta.id,doc.location]);
print(i.geoms[1].coords[0]);
self.i=0;
self.zipfile.extractall(tmp_dir);
plt.colorbar(myplot,__kwargtrans__({format:ticker.FuncFormatter(fmt)}));
p.join();
export var img_list=os.listdir(path);
imp.reload(module);
M[sorter[index]];
print(cur.getDatabases());
ascii_counts[ord(c)]+=1;
cur.close();
self.theWholeList.append(x);
np.maximum.reduceat(dists,shift_idx);
a.difference(b);
var t=threading.Thread(__kwargtrans__({target:target}));
var data=np.random.randn(100,10);
np.mean(values_sorted[[median_index,next_median_index]]);
var c=Console.getconsole();
print(respose.headers);
self.baseDict=baseDict;
var unique_word_count=len(set(words));
var big_df=big_df.append(df);
smean.on_changed(py_update);
print(h.unescape(s));
export var eltsize=ctypes.sizeof(typ);
var __left0__=scipy.optimize.curve_fit(vcurve,xdata,ydata,__kwargtrans__({p0:[2]}));var popt=__left0__[0];var pcov=__left0__[1];
test1.timestamp=datetime.datetime.now()-datetime.timedelta(__kwargtrans__({hours:2}));
var last_name=models.CharField(__kwargtrans__({max_length:80,blank:false,null:false}));
export var dy_dt=np.gradient(a.__getitem__([tuple([0,null,1]),1]));
f.headers.headers;
canvas.delete(ALL);
bg_img.composite(fg_img,__kwargtrans__({left:100,top:100}));
answer.append(flatResults.py_pop(0));
export var A_exact=20*numpy.random.random(tuple([n_samples,n_inputs]));
var result=result.intersection(s);
export var prevday=theday-datetime.timedelta(__kwargtrans__({days:1}));
export var bw2=thinning(bw2);
var ax=subplot(111);
var cx1=self._gen.random_integers(0,self.N-2);
self.menu.addItem_(menuitem);
col_size[i]=max(col_size.py_get(i,0),len(col));
var __left0__=im.size;var width=__left0__[0];var height=__left0__[1];
logger.addHandler(fh);
var x_min=tf.reduce_min(weights);
var c=np.dot(a,b);
var now=datetime.datetime.now();
var process=subprocess.Popen(command,__kwargtrans__({stdout:writer}));
mlab.close(fig);
var form=ContactForm(request.params);
export var Xd=manifold.LocallyLinearEmbedding().fit_transform(X);
x*x;
var a2=np.empty(tuple([M,2,2]));
cnt[word]+=1;
var __left0__=ax1.get_legend_handles_labels();var h1=__left0__[0];var l1=__left0__[1];
export var sniff_on_connection_fail=true;
var x=np.random.rand(1E3)*10;
export var Vprods=np.multiply.reduceat(py_values,group_changes);
var o=json.loads(s,__kwargtrans__({object_hook:as_person}));
var arr=np.vstack(py_values);
d==1;
export var first_shaders_dict=dict({});
export var z_itp=r*np.outer(np.cos(theta_itp),np.ones_like(phi_itp));
var fields=function(){var __accu0__=[];for(var val of form._fields)__accu0__.append(val);return __accu0__}();
xfiltered;
var opener=urllib.request.build_opener();
var poly=np.polynomial.polynomial.Polynomial(poly_coeff);
df.columns;
var newMtx=Mtx.__getitem__([tuple([0,null,1]),s.A>0[0]]);
image.set_from_pixbuf(pixbuf);
var args=parser.parse_args();
var test2=Test();
var handler=MyHandler;
cls.from_buffer(a,aligned-addr);
export var font_args=[cairo.FONT_SLANT_NORMAL];
tabWidget.load(QtCore.QUrl(url));
Frame.__init__(self,master);
sm_obj.set_x509_stack(sk);

print(one_array,two_array);
var unixtime=dt-datetime.datetime(1970,1,1);
var a1=A.__getitem__([,1]);
foo.__code__.co_argcount;
idx[0]-=1;
self.base=Base();
var op=s.py_pop();
1;
cols.insert(0,x);
print(combination);
self.thisptr.calculate(a);
export var isanimated=true;
var c=function(){var __accu0__=[];for(var i of zip(a.__getslice__(0,-1,1),b))__accu0__.append(i[1]-i[0]);return __accu0__}();
Child().access_eclipsed();
var wait=WebDriverWait(driver,10);
export var mh11=mh10-h1/20+h21/20;
var reader=csv.DictReader(inf);
var z=a[0]*b[1]-a[1]*b[0];
fd.close();
s.send(pickleData);
var pixels=[];
var a=[4,5,0,0,6,7,0,1,0,5]*1E6;
var column_names=[];
do_something_else_2();

export var is_canceled=Column(Boolean,__kwargtrans__({py_default:false}));
hashtags.append(py_name);
var ndarray=np.array(array_wrapper,__kwargtrans__({copy:false}));
export var matriz=np.random.randn(10,10);
l[t]=something;
filechecker();
var page=response.read();
var data=StringIO.StringIO(data);
temp_list.append(a);
main();
d.append(new_row);
individuals.append(individuals.loc[1]).dtypes;
plt.plot(...p.linspace());
var __left0__=np.nonzero(img);var rows=__left0__[0];var cols=__left0__[1];
var _f=sc._jvm.com.blu.bla.MySum().apply;
f.close();
var nll=-lg[mask].sum();
instance.is_initialized=false;
print(row);
request.write(py_values);
var f=function __lambda__(x){return 2*x};
res.append(func(...args));
export var str1_list=list(str1);
export var chromeOptions=webdriver.ChromeOptions();
print(lt.tm_gmtoff/(60*60)-(lt.tm_isdst==1?1:0));
var d=json.load(json_data);
time.sleep(60);
var tree=etree.parse(data);
self.setWindowFlags(Qt.Popup);
var im=Image.open(buf);
(function(){var __accu0__=[];for(var sublist of lst)for(var item of sublist)__accu0__.append(item);return __accu0__})();
q+=1;
var n=n-1;
var new_list=function(){var __accu0__=[];for(var x of filled_list(src_list,100))__accu0__.append(x);return __accu0__}();

var text=sys.argv[1];
item+=[1];
self.db[self.collection_name].insert(dict(item));
print(function(){var __accu0__=[];for(var x of roundrobin(...list(group.py_values())))__accu0__.append(x);return __accu0__}());
var G=nx.MultiGraph();

result.append(py_next(g));
cnx._open_connection();
var b=np.array(function(){var __accu0__=[];for(var line of a.__getitem__([tuple([0,null,1]),0]))__accu0__.append(line);return __accu0__}());
the_dict;
var email=models.EmailField(__kwargtrans__({max_length:50}));
father.appendChild(tag);
stdout.write(choice(ascii_lowercase));
len(self.object_list);
traceback.print_exception(py_typeof(cause),cause,cause.__traceback__);
var streak=0;
flag.Parse();
var image=cv.CreateImageHeader(tiff.size,cv.IPL_DEPTH_8U,1);
var newdf=df.select_dtypes(__kwargtrans__({include:numerics}));
var rows=np.array([1,100,1E3]);
perf_func(child,func,level+1);
var w=2*np.pi*r;
export var cbar4=plt.colorbar(im4,__kwargtrans__({cax:cax4}));
export var flooded=img.copy();
sin(x)+cos(x);
var d=datetime.date(2011,7,2);
var z=np.array([[0+complex(0,0),2+complex(0,1),-1+complex(0,4)]]);
var app=Flask(__name__);
var pilImage=Image.open(inputImage);
a[a>0]=255;
Counter(pop_flat).most_common();
list(helper(parts));
var shape=np.sqrt(np.log(sol));
getattr(handler.request,method).add();
np.clip(dat,0,1,__kwargtrans__({out:dat}));
B.ham==A.ham;
print(x);
cherrypy.quickstart(HelloWorld(),__kwargtrans__({config:conf}));
var data=json.loads(response.body);
var found=set([]);
my_func_called_inside_a_task(__kwargtrans__({celery_callback:true}));
print(data);
var args=docopt(__doc__);
self.comboBox.currentIndexChanged.connect(slotLambda);
ax.add_artist(plt.Circle(tuple([xvals[q],yvals[q]]),rvals[q],__kwargtrans__({color:[0,0,0]})));
export var sequence=function(){var __accu0__=[];for(var element of seq)__accu0__.append(seq2.index(element));return __accu0__}();
var ret=ipcap.geterror();
var indices=np.arange(y.shape[0]);
self.children=[];
var dom=minidom.parseString(xml);
string.Template(tem).substitute(m);
self.axes=fig.add_subplot(111);
Tk.after(parent,1E3,change);

t1.join();
pool.apply(__kwargtrans__({func:py_update,args:tuple([counter,i])}));
data.__getslice__(i-window,i+window+1,1).mean();
-1;
cls._metadata=get_class_metadata(cls);
log.addHandler(txt_handler);
driver.find_element_by_id(id).click();
var assets=[];
var __left0__=plt.subplots(__kwargtrans__({nrows:2}));var fig=__left0__[0];var ax1=__left0__[1][0];var ax2=__left0__[1][1];
s.any()==1;
var z=map(float,z);
export var Result=map(tuple,list(d.py_items()));
export var olApp=gencache.EnsureDispatch(clsid);
s.__getslice__(0,2,1);
imap.login(username,password);
print(key,value,d2[key]);
var db=_get_db();
var fig=plt.gcf();
var recv2=clientSocket.recv(1024);
var recv4=clientSocket.recv(1024);
export var recv5=clientSocket.recv(1024);
lst;
var soup=BeautifulSoup(response);
self.dependency.__exit__(exc_type,exc_val,exc_tb);
pg.QtGui.QGraphicsPathItem.__init__(self,self.path);
self.connection.login(username,password);
var n=_nbits[c].sum();
var ch=logging.StreamHandler(sys.stdout);
p(2)/2+p(2)/2+p(4)/2;
export var appName=NSProcessInfo.processInfo().processName();
self.data=list(data);
wlist.append(proc.stdin);
var __except0__=KeyError(key);__except0__.__cause__=null;throw __except0__;
var __left0__=tuple([os.WEXITSTATUS(status),os.WTERMSIG(status)]);var exitstatus=__left0__[0];export var signum=__left0__[1];
var a=C();
t.set_visible(false);
var my_set=set(first_list);
export var shared_items=set(x.py_items())&set(y.py_items());
print(StringIO(file2.read()).getvalue());
var __left0__=unpack(...seq);var first=__left0__[0];var rest=__left0__[1];
var d=dict([[0,l]]);
export var weighted_sum=np.apply_along_axis(exp_func,0,clipped_background);
export var db_engine=create_engine(DATABASE_CONNECTION_INFO,__kwargtrans__({echo:false}));
export var mybasemodel_set=MyBaseModelField(__kwargtrans__({many:true}));
export var geo=Geometry(0,0,1,1);
json.dumps(d);
var ax5=plt.subplot2grid(tuple([6,1]),tuple([4,0]),__kwargtrans__({rowspan:2}));
var age=db.StringProperty();
hub.wait(watcher);
export var std=np.sqrt(sy2/n-mean*mean);
b+=[c];
abs(n-m);
translater.install(__kwargtrans__({str:true}));
var user=User.objects.py_get(__kwargtrans__({pk:user_id}));
SubClassWithoutDocstring().__doc__;
fly.rect.bottom=hit.rect.top;
var levels=np.linspace(vmin,vmax,200,__kwargtrans__({endpoint:true}));
data;
r?datetime.min+(q+1)*delta:dt;
export var pumpedThread=threading.Thread(__kwargtrans__({target:pumpWx,args:tuple([])}));
final_ensemble;
results.append(left[0]);
df;
Math.floor(-1/2);
datetime.min+math.ceil((dt-datetime.min)/delta)*delta;
plt.scatter(xc,yc,__kwargtrans__({c:cols,label:cla}));

fout.write(line);
a.__setslice__(0,len(b),null,b);
self.queue.put(event);
print(foo);
foo1();
print(repr(path),tuple([newpath,tail]));
export var img_grand=pyexiv2.Image(grand);
print(canonical_form([1,1,1,0,0,2,6]));
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
export var accum0=[];
(function(){var __accu0__=[];for(var x of seq)for(var n of f(x[-1]))__accu0__.append(x+tuple([n]));return py_iter(__accu0__)})();
var socket=pyudt.pyudt_socket();
var others=l.__getslice__(0,index,1)+l.__getslice__(index+1,null,1);
var item=Item();
var a=A();
print(a.current);
var writer=csv.writer(output_file_handle);
lines.append(string.__getslice__(i,i+every,1));
tid;
var ser=pd.Series([-1,1,np.nan]);
f.__name__;

var x=np.linspace(-5,5,101);
_f;
systems.append(system);
x+1;
CrawlSpider.__init__(self);
print(arrayT(data[0],[.29,4.5]));
var __except0__=ConcurrentModificationError(cls.__name__,self.pk);__except0__.__cause__=null;throw __except0__;
df;
export var in_first=set(first_list);
ctx.select_font_face(font,...font_args);
plt.fill_between(x,0,s);
self.Gender=Gender;
str(attribute);
print(getmembers(clf.tree_));
deleter(data);
var DEBUG=true;
file;
var df=df.stack();
var reps=[];
export var ABCD=numpy.concatenate([AB,CD],0);
Expression(__kwargtrans__({body:BinOp(__kwargtrans__({left:Num(__kwargtrans__({n:2})),op:Add(),right:Num(__kwargtrans__({n:2}))}))}));
var s=set([0,1]);
_[0];
two.__setitem__([0,0,0],np.array([[2,2]]));
var arr=np.asarray(str_bytes);
var __left0__=egcd(a,m);var g=__left0__[0];var x=__left0__[1];var y=__left0__[2];
var points=data.__getitem__([tuple([0,null,1]),tuple([2,4,1])]);
var query=users.select().order_by(users.c.id.desc()).__getslice__(-5,null,1);

new_array.__setitem__([i,Y[i]],1);
0;
thread.start_new_thread(do_it,tuple([]));
var a=[1]*50;
export var resultlist=[];
datasets[-1].append(stripped_line);
var x=y;
crawler.crawl(RaEventSpider());
var norm=matplotlib.colors.Normalize(__kwargtrans__({vmin:np.min(Z),vmax:np.max(Z),clip:false}));
print(result);
var w=pyglet.window.Window();
d[j].append(i);
Py_Initialize();
spam_lite.py_update();
self.__dict__.py_pop(k,d);
fly.rect.top=hit.rect.bottom;
None.__cause__=null;throw None;
g.logout();
var sizer=wx.BoxSizer(wx.VERTICAL);
self._protected();
C1.__init__;
M.__setitem__([1,tuple([0,null,1])],M.__getitem__([1,tuple([0,null,1])])*2);
print(__all__===locals());
var d=dict({});
mailserver.ehlo();
var __left0__=tuple([[0,1],[-LHS[0]/LHS[1]]]);export var LHS=__left0__[0];export var RHS=__left0__[1];
var person=Person();
__init__.py;
cls._registry.append(cls);
centroids[i][m]+=row[m]/len_best;
var application=app;
var my_dict=dict(string);
time.sleep(.1);
int(s);
array[0];
self.pipereadstreams.append(readStream);
var a=[[]]*10;
socket.setdefaulttimeout(new_timeout);
var app=Flask(__name__);
outFile.write(buf);
MyModel.timestamp._auto_now=false;
random.shuffle(pool);
print(resource_path);
item.firstChild.replaceWholeText(data[py_name]);
print(df);
print(config_root.server.py_name);
indicies_nonzero.append(index);
print(df);
self.canv.restoreState();
o.write(line+plat[platform]);
var files=os.listdir(directory);

export var source_list=inspect.getsourcelines(my_module);
print(df.reindex(cum.index));
dset_y.append(y_chunk);
var row=df.iloc[0];
p[0];
self.create_response(request,game.start());
plt.matshow(plot_matrix,__kwargtrans__({cmap:colormap}));
var predictions=model.predict(gaussianKernelGramMatrix(Xval,X));
message.attachments=[tuple([attachment_name,attachment.value])];
export var process_handle=OpenProcess(SYNCHRONIZE,false,pid);
var out=os.read(proc.stdout.fileno(),10);
var data_md5=hashlib.md5(bencode.bencode(data)).hexdigest();
df2[column]=list(map(diff,df[column],ref[column]));
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
var dstname=os.path.join(dst,py_name);
print(property.py_name);
print(addsf1);
print(str(datetime.datetime.now()));
var new_time=time.time();
queue.write(json.loads(line.strip()));
self.saturated();
see(x);
data*2;
driver.py_get(target_url);
export var bmp=wx.EmptyBitmap(size[0],size[1]);
true;
export var zeros_and_ones=numpy.zeros([width,height]);
var __left0__=NP.meshgrid(x,y);var X=__left0__[0];var Y=__left0__[1];
newI();
page.close();
other[0][0]=false;
1024;
print(row);
arr.__setitem__([0,-1],100);
interpolator(x);
export var Ml=mat.tolil();
a.py_sort();
result+=letters[index-shift];
py_typeof(my_pandas_frame[100]);
pointCloud.addPoint([0,0,0]);
plt.xticks(np.arange(min(bins)+bin_w/2,max(bins),bin_w),bins,__kwargtrans__(kwargs));
self.song1.setVolume(1-fadevalue);
any(function(){var __accu0__=[];for(var x of self.sets)__accu0__.append(__in__(value,x));return py_iter(__accu0__)}());
crawler.queue.append_spider(another_spider);
export var probabilities=numpy.random.multinomial(n,zip(...pairs)[0]);
var arr=np.py_split(arr,indc,__kwargtrans__({axis:1}));
j+=1;
var result=copy(dateList);
var results=sorted(results_dict.py_items());
var Z=X*Y.T;

var event_date=models.DateField();
singles.append(p);
tuple([self.file,self.filename]);
export var mvv_array=function(){var __accu0__=[];for(var i of mvv_list.collect())__accu0__.append(int(i.mvv));return __accu0__}();
sprites.append(sprite);
QApplication.clipboard().setImage(QImage.fromData(buf.getvalue()));
var Y=EY+np.random.normal(__kwargtrans__({size:n}))*np.sqrt(20);
var __left0__=line.py_split();var x=__left0__[0];var y=__left0__[1];
processes[i]=multiprocessing.Process(__kwargtrans__({target:child_process.run,args:tuple([i])}));
var u=np.empty(n,__kwargtrans__({dtype:np.int64}));
self._queue=q;
var df=pandas.DataFrame(df,__kwargtrans__({dtype:str}));
self.alist.extend(args);
err_ys.append(tuple([y-yerr,y+yerr]));
var password=args.password;
export var denominator=df.sum(0).sum(0);
var profile=Profile.objects.create(__kwargtrans__(__mergekwargtrans__({user:user},profile_data)));
py_update.alters_data=true;
crawler.configure();
- -report_task.py;
l;
pr.enable();
export var supported_file_types=fcb.get_supported_filetypes();
var new_path=list(path);
Math.floor(c/(n+1));
i+=1;
Clock.schedule_interval(self.add_string,.5);
print(outQ.get_nowait());
conn.sendto(some_data,MY_SERVER);
cron.write();
export var new_jk=numpy.random.multinomial(1,numpy.reshape(p,T*S)).argmax();
df.Date=pd.to_datetime(df.Date);
(function(){var __accu0__=[];for(var song of self.allSongs)__accu0__.append(song.album);return set(__accu0__)})();
hstack(tuple([B2,D]));
tuple([flask.jsonify(__kwargtrans__({error:404,text:str(e)})),404]);
getattr(self,method)();
var tokens=deque(f.read().py_split());
update_object(__kwargtrans__({form_class:FooForm,object_id:object_id}));
get_stems_recursive(list(all_stems.py_items()),list(),result);
transferData.upload_file(file_from,file_to);
Book.objects.filter(__kwargtrans__(filters)).__getslice__(0,limit,1);
self.goal.field.add(new_field);
is_word.words=function(){var __accu0__=[];for(var word of f)__accu0__.append(word.strip());return set(__accu0__)}();
output.flush();
a[l[i][0]][l[i][1]]=b[i];
var cal=France();
pygame.init();
print(len(parts));
export var ratio=float(len(a))/float(len(a)+len(b));
print(MyClassFactory.theWholeList);
plt.figure();
self.ready.notify_all();
M.ix[0];
tf.concat(0,data);
test();
r.delete(key);
doc.build(text);
output.write(string_fin);
var a=A();
export var tplsum=np.array(function(){var __accu0__=[];for(var i=0;i<D;i++)__accu0__.append(tpl.__getitem__([tuple([0,null,1]),tuple([0,null,1]),i]).sum());return __accu0__}());
(function(){var __accu0__=[];for(var [ay,be]of zip(a,b))__accu0__.append(ay+be);return __accu0__})();
print(maximal_sum(M));
main_parser.parse_args(replace_dashes_from_args(sys.argv.__getslice__(1,null,1)));
time.sleep(wait);
owner.what=owner.what.__iadd__(2);

var dict_writer=csv.DictWriter(fou,__kwargtrans__({fieldnames:fieldnames}));
any(function(){var __accu0__=[];for(var e of[0,0,1])__accu0__.append(isinstance(e,int)&&e>0);return py_iter(__accu0__)}());
Wizard.NextButton.Click();
(function(){var __accu0__=[];for(var [s,e]of zip(start,end))__accu0__.append(np.arange(s,e));return __accu0__})();
res;
gevent.sleep(.1);
var cols=list(set(result.dtype.names).intersection(a.dtype.names));
foo[0]===boo;
PyEval_RestoreThread(mainThreadState);
self.__dict__.py_update(decoratee.__dict__);
DataFrame;
s.blit(alpha_img,tuple([0,0]),__kwargtrans__({special_flags:pygame.BLEND_RGBA_MULT}));
__in__([1,24,4,5],a);
var gb=df2.swaplevel(0,1,1).sort_index(1).groupby(__kwargtrans__({level:0,axis:1}));
var prefix=decPrefixes[-1];
root.mainloop();

self.sender.disconnect(self.handle);
plt.colorbar();
do_something(my_value);
n/1<<n.bit_length()-1;
tuple([mask1[idx1],mask2[idx2]]);
counter+=1;
print(a);
var tmp=a2.__getslice__(0,x,1).copy();
string[0];
var __left0__=np.where(rows)[0][[0,-1]];var rmin=__left0__[0];var rmax=__left0__[1];
var d=OrderedDict();
dill.detect.trace(false);
parsed_result[py_name].append(value);
self.connected=false;
export var d_time2t_stamp=pd.to_datetime(d_time);
var cookies=cherrypy.response.cookie;
print(results.py_get());
int(21/5)+(__mod__(21,5)>0);
true;
list(fields_660.py_keys());
var years=collections.defaultdict(list);
var s=io.BytesIO();
export var new_shape=tuple([rows/2,cols/2]);
var tk=tkinter.Tk();
clientSocket.close();
var foo=d[x];
!all(row);
gst.element_link_many(self.source,self.scaler,self.fvidscale_cap,self.sink);
keep.append(item);
m[1][0]=99;
var df=pd.read_csv(StringIO(txt1));
seq.append(py_next(it));
setattr(cls,py_name,decorator(m));
entity.after_put();
var a=numpy.random.random(tuple([10,10]));
print(add5(10));
file_handler.setFormatter(formatter);
ctx.restore();
selected.append(perm);
var r=requests.put(post_url,__kwargtrans__({auth:auth,headers:headers,data:json.dumps(doc)}));
self.wv.webview.getUrl();
export var badset=set(badlist);
tag.replaceWith(s);
var __left0__=np.histogram(samples,__kwargtrans__({bins:int(np.sqrt(N)),density:true}));var n=__left0__[0];var bins=__left0__[1];
var data=function(){var __accu0__=[];for(var v of line.py_split())for(var line of file)__accu0__.append(float(v));return __accu0__}();
[s];
pprint.pprint(d);
m_to_M.__setitem__([tuple([1,null,1]),0],-nrange.__getslice__(1,-1,1).reshape(tuple([n-2,1])));
proc.start();
self.data=data;
var d=datetime.date(2011,9,28);
print(list(k));
y[0]=5;
a+b;
self.__class__(__kwargtrans__(py_arguments));
s.py_update(list(range(4)));
var source=s.get_source();
var start=time.time();
var d=date(year,1,4);
var Base=declarative_base();
fig.add_axes(ax);
var formset=QuoteFormSet(request.POST,request.FILES);
var x=1;
[2,1];
a[idx];
export var X_=X-X.mean(0);

py_typeof(true);
var x2=np.interp(width_S,S_values_2.__getslice__(-1,idx-1,-1),F_values_2.__getslice__(-1,idx-1,-1));
addChild(image);
var __left0__=tee(iterable);var a=__left0__[0];var b=__left0__[1];
export var providers=Provider.objects.all();
var tree=etree.fromstring(XML);
self.client=redis.Redis(__kwargtrans__({connection_pool:self.connection_pool}));
new_lists.append([]);
print(content.readlines());
var opener=urllib.request.build_opener();
false;
np.allclose(cdist_split(pairs,positions),XYZ_merged(pairs,positions));
var b=a+b;
mask.__setitem__([tuple([y,y+h,1]),tuple([x,x+w,1])],255);
var fig=figure(__kwargtrans__({width:500,plot_height:500}));
var dates=[20020514,20020515,20020516,20020517,20020520];
print(a.__getitem__([1,tuple([0,null,1])]));
overlaps<-int_overlaps(int[index.__getitem__([1])],int[index.__getitem__([2])]);
ob.stackoverflow();
webcode.html;
var a=foo();
var fig=plt.figure();
cursor.batch_size(1E3);
var output=StringIO();
var data=globalsfiltered();
proc.terminate();
include_dirs.append(arg.__getslice__(2,null,1));
var pos=nx.spring_layout(Gcc);
export var safe_matches=function(){var __accu0__=[];for(var m of matches)__accu0__.append(re.escape(m));return __accu0__}();
mystrategy.example();
var w=wave.open(wave_file);
var num=1;
setattr(self.instance,py_name,value);
i+=2;
var __left0__=divmod(hours,24);var days=__left0__[0];var hours=__left0__[1];
self.totalsize;
len(self.data);
var __except0__=AttributeError();__except0__.__cause__=null;throw __except0__;
var a=b.__getitem__([tuple([0,null,1]),0]).copy();
len(sys.argv)>1&&scan(sys.argv[1]);
print(ws.cell(rx,cx).value,ws.cell(rx,cx).ctype);
print(count_common(l1,l2));
var __except0__=AttributeError(attr_name);__except0__.__cause__=null;throw __except0__;
var df=pd.DataFrame(d.T);
print(myList);
var m=multiprocessing.Manager();
var content=urllib.request.urlopen(base_url+symbol).read();
var a=function(){var __accu0__=[];for(var val of a)__accu0__.append(float(val)/pow(2,15));return __accu0__}();
var py_name=models.CharField(__kwargtrans__({max_length:255,blank:false,null:false}));
s.describe();
line.py_replace(self.ind,self.outd);
print(the_matrix[0]);
var a=np.arange(24);
test_module1.py;

var __left0__=tuple([b.py_name,a.py_name]);a.py_name=__left0__[0];b.py_name=__left0__[1];
hanoi(n-1,start,target,aux);
key.make_public();
master_writer.save();
transaction.savepoint_commit(sid);
var __left0__=py_next(py_iter(list(d.py_items())));var tag=__left0__[0];var body=__left0__[1];
var mask=Math.pow(x,2)+Math.pow(y,2)<=Math.pow(radius,2);
self.lop._getsymbols()+self.rop._getsymbols();
t;
1;
export var enc=base64.b64encode(base64.b64decode(s)).strip();
b.py_values.argmax(1);
var unpickler=cPickle.Unpickler(f);
var protocol=QNetworkProxy.HttpProxy;
var d=collections.defaultdict(int);
export var tcl=Tcl();
var out=np.zeros(tuple([A.shape[0]+len(cut_idx),2]),__kwargtrans__({dtype:A.dtype}));
v.__setslice__(0,null,null,[0,0,0]);
export var combos=it.product(...list(by_parent.py_values()));
var x=f.read();
bin_array.append(int(byte,2));
re.py_split(regexPattern,example);
var a=np.ndarray(__kwargtrans__({shape:tuple([N,0])}));
themodule_foo(PyObject*self,PyObject*args,PyObject*keywds);
export var mylog=logging.getLogger(logname);
print(eastern.localize(test2));
p.wait();
im.axes.figure.colorbar(im,__kwargtrans__(__mergekwargtrans__({cax:cax},kwargs)));
self.sock.connect(self.host);
seen.py_update(rn);
P.drawOn(canvas,doc.leftMargin,10);
export var y16=[];
np.save(f,c);
stats.binom_test(500,1E4);
self.song2=song2;
var ax=fig.add_subplot(1,1,1);
var context=dict({});
py_split[-1][-1].append(r);
var idx=np.flatnonzero(flags);
print(val);
var username=user.username;
var text=subprocess.check_output(command);
export var pythons_psutil=[];
a.apples();
false;
results.append(string.__getslice__(last_stop,start,1));
attr_name_to_attr[attr_name].set(attr_value);
export var boston=load_boston();
var res1=np.dot(A,B);
dictpsl[key]=[];
var obj=np.asarray(input_array).view(cls);
first_a.test();
var dataframe=pd.DataFrame(__kwargtrans__({data:mat.astype(float)}));
self.foriterator(self.start,self.stop,self.step);
res.__setitem__([i,j],dot_product(Aview[i],Aview[j],A.shape[1]));
print(df);
foo.bar=partialmethod(foo.bar,__kwargtrans__({qux:1}));
tuple([result[0],result[-1]]);
var username=models.CharField(__kwargtrans__({max_length:256,null:true}));
export var stretch_unpooling_out=neibs2images(stacked_conv_neibs,self.pl,self.x.shape);
var df=pd.io.json.json_normalize(d);
var ordered=OrderedDict(pairs);
var seconds=dhms_to_seconds(...convert_timedelta(duration));
os._exit();
a.py_sort();
tuple([a,b,c,d]);
u.load();
print(tuple([x,len(seen)]));
export var nextone=min((Math.floor(current/a)+1)*a,(Math.floor(current/b)+1)*b);
var fig=plt.figure();
print(key,count[key]);
export var year_range=np.arange(min_year,max_year+1);
lock.acquire();
id(a)==id(b);
tuple([[],1]);
var __left0__=np.meshgrid(list(range(-1,1)),list(range(-1,1)));var xx=__left0__[0];var yy=__left0__[1];
msvcrt.fflush(msvcrt.stdout);
var out=[];
util1.py;
var data=np.arange(Math.pow(k,n)).reshape(tuple([k])*n);
var x1=np.random.normal(__kwargtrans__({size:N}));
pylab.show();
var path=self.in_queue.py_get();
print(list(l));
new_matrix;
var __left0__=win.get_allocation();var x=__left0__[0];var y=__left0__[1];var w=__left0__[2];var h=__left0__[3];
var blob_info=blobstore.BlobInfo.py_get(resource);
export var treeselection=treeview.get_selection();
res;
var fig=plt.figure(__kwargtrans__({figsize:tuple([ypixels/dpi,xpixels/dpi]),dpi:dpi}));
print(avg);
var ind=np.arange(len(data))+window;
arrays[0].__array_wrap__(numpy.hstack(arrays));
var v=numpy.linspace(-1*numpy.pi/2,numpy.pi/2,100);
var b=c_ulong(2);
print(a);
export var ABSTRACT_FACTORY=true;
export var solution1=(-b-cmath.sqrt(d))/(2*a);
print(combineArs(dict1[dimmKey],dict2[pwfs2Key]));
json.dumps(self);
scipy.misc.imshow(extracted_filter);
22.152261;
.284024;
7.580967;
Bar(income_df,__kwargtrans__({notebook:true})).show();
print(x*10);
plt.legend();

var a=binascii.hexlify(bytes([1,10,15,16,255]));
export var tr=tender_data.py_values.__getitem__([tuple([0,null,1]),tuple([5,null,1])]);
ax.scatter(data.Lon,data.Lat,__kwargtrans__({c:data.Z,s:100,vmin:zi.min(),vmax:zi.max()}));
var a=a+10;
print(df2);
portfolio.append(entry);
var lock=threading.Lock();
recurse();
df.index.inferred_freq;
time.sleep(15);
str(dict(self));
var green=pygame.Surface(tuple([100,100]),0);
test_updates(my_dict);
plt.imshow(pic);
var root=tk.Tk();
var encoded=ohe.fit_transform(orig.reshape(-1,1));
var __left0__=foo();var l=__left0__[0];var d=__left0__[1];
var tmp=np.zeros(tuple([n+1,n+1]),bool);
export var portfolios=list(function(){var __accu0__=[];for(var p of cp)if(sum(p)==100)__accu0__.append(p);return py_iter(__accu0__)}());
var read=p.stderr.readline();
var l=[8,10,4,5,7];
print(date.toordinal(date(1970,1,1)));
export var curr=curr.__getslice__(1,null,1)+tuple([x]);
var __left0__=f_oneway(...list(data.py_values()));var t=__left0__[0];var p=__left0__[1];
export var myobj=MyClass();
var d=NP.digitize(A,bins);
export var crossing=function(){var __accu0__=[];for(var s of signal)__accu0__.append(math.copysign(1,s));return __accu0__}();
print(merge([L1,L2]));
var data=np.abs(data);
var A=A.__getslice__(1,null,1).T.__getslice__(0,null,-1);
cimage.seek(0);
c();
export var procd=function(){var __accu0__=[];for(var c of string)__accu0__.append(c);return __accu0__}();
var y=np.asanyarray(y);
heapify(i,0);
__all__.append(py_name);
var total=np.sum(py_values[mask]);
var im=Image.open(fn);
var req=requests.post(url,__kwargtrans__({data:my_json_data}));
collections.OrderedDict.__init__(self);
var xy=np.random.random(tuple([2,num]))+.01*np.arange(num);
print(i);
var __left0__=p.communicate();var out=__left0__[0];var err=__left0__[1];
export var window_height=int(img.shape[0]*scale);
var __left0__=tuple([dy,dx]);var dx=__left0__[0];var dy=__left0__[1];
var b=copy.copy(a);
export var script_path=os.path.realpath("./P2JSnippets.py");
print(msg.SentOn);
df[col]=df[col].ffill();
crypt.mksalt(crypt.METHOD_SHA512);
y;
tpool.execute(m);
false;
IPython.embed();
p.join();
self.stream.send(p);
Thread(__kwargtrans__({target:volume_switcher})).start();
export var child_midpoints=[];
print(mode(data,__kwargtrans__({axis:0})));
export var client_cmd=client.invoke_shell();
df.FREQ=pd.cut(df.FREQ,__kwargtrans__({bins:bins,labels:labels}));
f_inrange;
None.__cause__=null;throw None;
tuple([x,y]);
array([7,11]);
Q_UNUSED(parent);
Spam.py_update(self);
x[0]=10;
increments_sum+=increments[i];
newfunc.func=func;
shared_str.value;
client_to_server(messag,host,port,size);
export var cThread=Thread(__kwargtrans__({target:c.run,args:tuple([])}));
font.configure(__kwargtrans__({size:max(size,8)}));
export var server_B_thread=threading.Thread(__kwargtrans__({target:server_B.serve_forever}));
app.run();
var root=tk.Tk();
var b=2;
export var clb=plt.colorbar();
self.vtkDepth.Modified();
export var bitlist=[1,0,0,0,0,0,0,0];
tuple([[5,0]]);
var xnew=np.linspace(x.min(),x.max(),__kwargtrans__({num:41,endpoint:false}));
export var mask_inv=cv2.bitwise_not(mask);
var a=my_class();
i+=1;
var y=np.random.normal(0,1,100);
df.loc.__setitem__([tuple([0,null,1]),cols],df[cols].where(df[cols].ge(0),np.nan));
export var sh1=wb.sheet_by_index(0);
0;

var Base=declarative_base();
doc.build(text);
plt.plot(x,val,__kwargtrans__({alpha:.05}));
export var stopx=img2x-img1x+1;
termios.tcsetattr(fd,termios.TCSAFLUSH,attrs_save);
print(date);
cnt.send_msg(data);
var stud=session.query(Student).first();
print(v.data);
var correct_prediction=tf.equal(tf.argmax(y,1),tf.argmax(y_,1));
var description=Column(Text);
var opts=parser.parse_known_args();
n*factorial(n-1);

deletetokens[-1];
var json_object=json.load(response);
var num2=int(argv[2]);
var value=root.A[0].B[0].C[0];
var parsed_url=list(urlparse(url));
obj.__reduce__()[1];
julia>pytype_query(x);
rectangle(maskRoi,roi,Scalar(255),CV_FILLED);
ax.legend_.remove();
var cmap=dict([[1,tuple([255,255,255])],[0,tuple([0,0,0])]]);
pre_save.connect(pre_save_callback,__kwargtrans__({sender:models.MyModel}));
plotter();
__in__(key,self._info_axis);
result.append([v]);
m.shape;
var arr1=np.arange(1E4).reshape(20,10,50);
a+b+c;
var index=py_items.index(item);
self.edit.setText(text);
procs.append(subprocess.Popen(ARGS_GO_HERE));
fig.set_size_inches(6.4,5.12);
self.queue.put(item);
Response(e.message,__kwargtrans__({status:400}));
Fraction(1,int(yc)+1);
int(aString,16);
id_arr.cumsum();
print(py_typeof(domain));
var seen=set();
var __left0__=np.meshgrid(x,y);var X=__left0__[0];var Y=__left0__[1];
export var DecodeAES=function __lambda__(c,e){return c.decrypt(base64.b64decode(e)).rstrip(PADDING)};
i+=1;
tuple([by_bins.py_get(true,tuple([])),by_bins.py_get(false,tuple([]))]);
r.mainloop();
my_worker.moveToThread(my_thread);
var fig=matplotlib.pyplot.figure();
suite.addTest(unittest.makeSuite(Class1));
_f;
var a=np.random.rand(N,N);
var b=datetime(2010,12,7);
var A1=Al.tobsr();
print(list(o));
c+=1;
redirect(list_);
defaultdict(nested);
self.spider=spider;
var path=os.path.dirname(path);
randomword(10);
os.mkdir(path);
tuple([i,i+len(small)]);
sys.stdout.write=inner;
var seen=set();
var d=dict({});
var output=ctypes.c_int();
var curr_num=int(temp_fh.readline().strip());
self.data=data;
try_one(downloader,15);
(function(){var __accu0__=[];for(var item of vqs)__accu0__.append(item);return __accu0__})();
log.setLevel(logging.ERROR);
g.ax_marg_x.set_axis_off();
var s=list(iterable);
var it=py_iter(iterable);
print(result[1]);
s.run();
var data=file.read();
np.cumsum(inds,__kwargtrans__({out:inds}));
self._content.seek(0);
str;
var l1=[1,1,1];
print(len(retval));
Queue.py_get(self,false);
mantissas*=10;
print(basis[0](1));
i-len(list2);
find_leading_zeros(14);
new_result;
glMatrixMode(GL_MODELVIEW);
wr.writerow(RESULT);
print(valchange(a,b));
print(platform.python_implementation());
var d=function __lambda__(a,b){return map(list,zip(a,b))};
x.__getitem__([ix_i,ix_j]);
output.addPage(cover_pdf.getPage(0));
export var y_score=np.array(output).__getitem__([tuple([0,null,1]),1]);
var __left0__=tuple([z_surface.min(),z_surface.max()]);var min_z=__left0__[0];var max_z=__left0__[1];
cls.instances.add(instance);
parsed_result;
MyModel.BLAH_FOODALLY_BOOGALY;
var b=[4,5,6];
var z=np.zeros(700);
e.set_sensitive(false);
export var opcodes=function(){var __accu0__=[];for(var op of list_of_all)__accu0__.append(op[0]);return __accu0__}();
var ei=(1-math.pow(1-e*e,1/2))/(1+math.pow(1-e*e,1/2));
export var Y_test=lb.fit_transform(y_test_text);
var val=label_map[int(x)];
dict(__kwargtrans__({py_name:self.py_name,firstname:self.first,address:self.addr}));
self.fields.py_update(fields_for_model(User,_fields));
ser.isOpen();
print(Sentence.translate(rep_dic));
export var my_items=models.ForeignKey(MyModel);
x_series.append(int(x));
Worker(request_queue).start();
list(range(max(a.start,b.start),min(a.stop,b.stop),1));
var a=np.arange(4);
fd.close();
var __left0__=np.meshgrid(np.arange(nx),np.arange(ny));var x=__left0__[0];var y=__left0__[1];
var __left0__=sess.run([train_op,image_summary_t]);var _=__left0__[0];export var image_summary=__left0__[1];

var last_index=word.index(letter,last_index+1);
var here=os.path.dirname("./P2JSnippets.py");
db.session.commit();
var words=string.py_split();
var city=db.StringProperty();
words[i]=word_list[words[i]];
var start=np.where(A==T1)[0];
var h=plt.plot(x,rv.pdf(x),__kwargtrans__({lw:2}));
(function(){var __accu0__=[];for(var [k,g]of groupby(init,delimiter.__eq__))if(!k)__accu0__.append(tuple(g));return __accu0__})();
zip(...[chain(iterable,repeat(padvalue,n-1))]*n);
new set([members]);
export var the_indices=[2,5,7];
var cell_value=worksheet.cell_value(row-1,i);
self.wtree.start();
print(result);
sC.on_changed(py_update);
var cw=boto.cloudwatch.connect_to_region(Region);
t.join();
var D=np.prod(C.__getitem__([,tuple([1,null,1])]),__kwargtrans__({axis:-1}));
os.chdir(cwd);
var b=str(a);
merge(list1,0,1);
var app=QtGui.QApplication(sys.argv);
abcde;
export var HhighShift=scipy.fftpack.ifftshift(Hhigh.copy());
arr;
1;
pool.imap(func,images);
var b=[a];
var data=client_socket.recv(1024);
lst.remove(what);
pygame.display.py_update();
slots[s]=py_next(it_B);
export var old_val=[1,2];
var timer=QTimer();
var q=queue.Queue();
export var first_type=py_typeof(py_next(iseq));
wrap(text,16);
export var dflist=[df1,df2];
print(output);
print(result);
len(read_file(filename).splitlines());
var py_values=pd.Series(df.py_values,__kwargtrans__({index:index}));
a.py_update([1]);
py_new.append(a[j]);
array[index].append(int(item));
var parser=argparse.ArgumentParser();
patches[2];
sys.exit(0);
var b=np.arange(10,20).reshape(2,5);
var n=len(l);
tuple([[0,0,0,1,1]]);
var c=ws.cell(__kwargtrans__({row:5,column:5}));
ssc.stop();
worker.dowork(lock,processes);
-1*p(x);
x;
defaults.py_update(kwargs);
var numbers=input.__getslice__(2,null,1);
main.py;
export var factors=list(factorGenerator(n));
get_user_model().objects.all();
var x=ET.fromstring(a);
turtle.penup();

var children=function(){var __accu0__=[];for(var n of nodes)if(n.parent==parent)__accu0__.append(n);return __accu0__}();
var dx=r*np.cos(angle);
export var indx=np.ravel(function(){var __accu0__=[];for(var i of r)__accu0__.append(np.where(x==i));return __accu0__}());
export var wxbmp=wx.BitmapFromBuffer(w,h,img);
result.py_pop();
var p=json.loads(x);
print_ephemeris_for_date(datetuple,bodies);
axes[0].append(string1.index(i));
saver.restore(sess,fileName);
show_views_channel[1];
worksheet.write_string(r,c,col);
self.close();
nums[-1];
l[index]=item.strip();
allowed_domains.append(hostname);
ret[key].append(item);
powerpoint.Visible=1;
print(output);
var df2=df.copy();
export var bits_generator=function(){var __accu0__=[];for(var x of itertools.combinations(list(range(n)),k))__accu0__.append(set(x));return py_iter(__accu0__)}();
var stats=pstats.Stats(profile,__kwargtrans__({stream:stream}));
do_something_further_image_processing_to_decrease_size;
d[partial_key]=dict();
var answer=[];
self.not_full.notify_all();
d[x.tag]=x;
print(self.id);
export var seps=[];
print();
security.tokens.append(userNameToken);
export var thedata=r.content;
export var test_string=test_string.lower();
export var final_values=function(){var __accu0__=[];for(var i of max_indices)__accu0__.append(n[i]);return __accu0__}();
var output=p2.communicate()[0];
var i=1;
var ax=fig.add_subplot(111);
computed[n]=fib(n-1,computed)+fib(n-2,computed);
stack.extend(py_iter(v.py_items()));
export var prob_matrix=prob_weights/prob_weights.sum(__kwargtrans__({axis:0,keepdims:true}));
x();
cap.release();
lst.append(0);
actions.move_by_offset(x_from,y_from);
(function(){var __accu0__=[];for(var key of fields)__accu0__.append([key,self.schema[key]]);return dict(__accu0__)})();
tcpCliSock.send(buff[i]);
conn.close();
var l=dict({});
entries_of_interest.choose(a.T);
var p=np.poly1d([1,-1,0,0,-Math.pow(stddev/mode,2)]);
ax.set_xticklabels(xticks);
var y=py_func(x);
ogl.CGLSetParameter(context,222,ctypes.pointer(v));
export var f4=[2,2,2];
main();
print(args[0],args[1]);
var a=df.append(pd.DataFrame(mydict,__kwargtrans__({index:[0]})));
export var search_form=UserSearchForm(request.POST);
__all__[funcname]=func;

var data=np.zeros(num,__kwargtrans__({dtype:dtype}));
sys.stdin=s;
print(tuple([step,sess.run(W)]));
df.iloc.__setitem__([tuple([4,6,1]),1],np.nan);
logfile.write(f.read());
np.random.seed(2015);
var thelist=function(){var __accu0__=[];for(var key of genreOptions)__accu0__.append(tuple([key,genreOptions[key]]));return __accu0__}();
var model=mc.MCMC([mean,std_dev,custom_stochastic]);

export var CELERY_IMPORTS=detect_tasks(project_root);
var t=threading.Thread(__kwargtrans__({target:workon,args:tuple([h])}));
export var checktime=datetime.datetime.today()-datetime.timedelta(__kwargtrans__({days:int(2)}));
self.array[arr.mylog2(index+1)];
pylab.plot(x);
repr(1);
(.01).hex();
export var fulldata=np.append(fulldata,audio_data);
matrices.__setitem__([tuple([0,null,1]),0,0],1);
var cursor=con.cursor();
df.index=function(){var __accu0__=[];for(var i of tup)__accu0__.append([i]);return __accu0__}();
User.objects.py_get(__kwargtrans__({pk:user_id}));
var __left0__=np.py_split(quaternion0,4,__kwargtrans__({axis:-1}));var x0=__left0__[0];var y0=__left0__[1];var z0=__left0__[2];var w0=__left0__[3];
export var current_set=set();
export var stat2=defaultdict(list);
cjson.decode(obj);
var t=Thread(__kwargtrans__({target:enqueue_output,args:tuple([p.stdout,q])}));
sys.exit();
var s=df.a.__getslice__(0,5,1);
export var strab=str(ab);
false;
print(tone1);
click(10,10);
s;
print(all_steps(pathList));
instance.method();
var dests=function(){var __accu0__=[];for(var dest of list_of_all)__accu0__.append(dest[1]);return __accu0__}();
visited.add(node);
Thread.sleep(500);
var root=ET.parse(urllib.request.urlopen(requestURL)).getroot();
var path=os.path.normpath(path);
var c=np.tensordot(A,B.T,1);
map(chars.extend,fd);
var o=RelatingModel.objects.create();
export var begin=time.time();
var d1=date(2008,8,15);
barbar;
self.GetEventHandler().ProcessEvent(event);
var month=calendar.monthcalendar(2010,7);
print(repr(obj),obj.__dict__);
np.put(s,p,i);
cr.fill();
p1.poll();
request.user=user;
secrets.randbelow(n);
export var lines_after_17=f.readlines().__getslice__(17,null,1);
self.body;
print(names[idx]);
dll.myfunc(ca_array,len(ca_array));
index+=1;
p.join();
exiting;
var prefix=commonprefix(tuple([a,b]));
print(tuple([left,right]));
var country=models.CharField(__kwargtrans__({max_length:50}));
export var arclength=scipy.integrate.cumtrapz(sqrt(Math.pow(dydx,2)+Math.pow(dxdx,2)),x,__kwargtrans__({initial:0}));
var l=[];
lang.install();
choice;
axes[0].imshow(img);
s.sendto(NTP_QUERY,tuple([host,port]));
export var area1=.5*sides[0]*sides[1]*math.sin(math.radians(angles[1]));
output.append(tuple([first,last]));
http_server.listen(options.port);
draw_line(event.xdata,event.ydata);
var col=np.array([7]);
var parent=Tkinter.Tk();
var l=s.py_split();
replacement.seek(0);
print(sample_dict);
var subparsers=parser.add_subparsers();
df.show(5);
L.append(chr(i));
var result=output.getvalue();
ax.set_xlim(-1,11);
var o=urlparse.urlparse(self.path);
var obj_list=[];
export var WLAN_AVAILABLE_NETWORK_INCLUDE_ALL_MANUAL_HIDDEN_PROFILES=2;
var k=np.arange(n);
print(z,x,c,v);
chain.from_iterable(function(){var __accu0__=[];for(var r=1;r<len(s)+1;r++)__accu0__.append(combinations(s,r));return py_iter(__accu0__)}());
export var WLAN_AVAILABLE_NETWORK_INCLUDE_ALL_ADHOC_PROFILES=1;
var user=ReferenceField(User);
print(b);
a[a==0]=-1;
var c=congruent.columns.to_series().map(lkp).py_values;
var bool_arr=[true,true,false];
np.linalg.norm(np.asfarray(p1)-np.asfarray(p2));
var loop=asyncio.get_event_loop();

fig.py_clear();
np.nan==np.nan;
true;
print(cmd.group());
var cookies=driver.get_cookies();
export var response_data=dict({});
self._d=d;
main.show();
complex(x,y);
var __left0__=tuple([n,n+1]);var u=__left0__[0];var s=__left0__[1];
s1.difference(s2);
print(self.state);
var d=deque(s);
ax.legend();
var y=list(range(200));
os.close(devnull);
var foo=Foo();
stream.write(data);
my_string;
var diff=dict(function(){var __accu0__=[];for(var [n,k]of enumerate(k1))__accu0__.append(tuple([k,n-k2.index(k)]));return py_iter(__accu0__)}());
var d=dict(__kwargtrans__({a:1,b:2}));
export var my_types=[str,int,float,MyClass];
var lookup=iD-iB-iC+iA;
var container=np.zeros(tuple([N,2]));
output.append(item);
plt.imshow(img2);
var result=method(self,...args,__kwargtrans__(kwargs));
p.process();
deallocate();
foomodule.alist.append(1);
var soup=BeautifulSoup(txt);
res;
var ax=plt.subplot(grid.__getitem__([0,0]));
var conn=l.accept();
self.send_response(200);
self.quit_button.clicked.connect(self.capture.quitCapture);
dic;
var jj=function(){var __accu0__=[];for(var i=1;i<len(ii);i++)if(dd[i-1]>2)__accu0__.append(ii[i]);return __accu0__}();
animal.save();

self.errorcount+=1;
print(c);
tuple([x,y]);
var a=df.py_values;
a.__getitem__([2,tuple([0,2,1]),tuple([2,null,1])]);
gc.get_referents(some_list);
n2w[narrow].add(wide);
var soup=BeautifulSoup(html);
SimpleHTTPServer.SimpleHTTPRequestHandler.do_GET(self);
py_iter.close();
var df=pd.DataFrame(M).convert_objects(__kwargtrans__({convert_numeric:true}));
res[accmap[i]]+=a[i];
(function(){var __accu0__=[];for(var string of string_list)if(len(function(){var __accu1__=[];for(var x of string_list)if(__in__(string,x))__accu1__.append(x);return __accu1__}())==1)__accu0__.append(string);return __accu0__})();
var filtered=MyObject.objects.all().__getslice__(start_point,inc,1);
var opts=dict(__kwargtrans__({page:context}));
dict({});
plt.plot(x,y_fft);
export var callers_namespace=inspect.currentframe().f_back.f_locals;
var col_index=function(){var __accu0__=[];for(var [j,cell]of enumerate(row))__accu0__.append([j,cell.value]);return dict(__accu0__)}();
var opener=urllib.request.build_opener(cert_handler);
var pts=[tuple([1,1]),tuple([1,lim]),tuple([lim,lim]),tuple([lim,1]),tuple([1,1])];
shutil.rmtree(py_name);
L;
unconverged[unconverged]=new_unconverged;
var data=np.random.randn(10,10);
var m_to=db.ReferenceProperty(__kwargtrans__({reference_class:UserModel}));
sys.stderr=mystdout;
Thread(__kwargtrans__({target:reader,args:[process.stdout,q]})).start();
set();
var chunk=response.read(CHUNK);
self.ax=plt.gca();
some_bad_code();
var py_values=function(){var __accu0__=[];for(var col of row)__accu0__.append(col.text);return __accu0__}();
b.__setitem__([1,2],999999);
self._a=a;
result[i].append(e);
betweenness_centrality(G,__kwargtrans__({k:k}));
self.b;
export var tms=function(){var __accu0__=[];for(var v of py_values)__accu0__.append(tuple([v[0],v[1]]));return __accu0__}();
var kwargs=dict({});
var rv=self.jinja2.render_template(_template,__kwargtrans__(context));
ax.ticklabel_format(__kwargtrans__({useOffset:false}));
var shape=[];
df.info();
var __except0__=StopIteration();__except0__.__cause__=null;throw __except0__;
f.truncate();
s1.py_values.append(1);
export var countries=Country.objects.all();
var root=tk.Tk();
plt.show();
print(foo_q.__str__());
text[i]==char?1:0;
var writer=csv.writer(fout);
var right=other.reindex(__kwargtrans__({index:common,copy:false}));
print(c.Bread);
var credentials=GoogleCredentials.get_application_default();
var t1=timeit.timeit(closure,__kwargtrans__({number:Math.pow(10,4)}));
export var serial_out=listener.read(__kwargtrans__({size:1}));
export var lettered=[];
figure(__kwargtrans__({figsize:tuple([10,10])}));
var files=glob.glob(fullpath);
print(s.before);
c.setopt(pycurl.SSL_VERIFYPEER,0);
self.id<other.id;
print(point.x,point.y);
copy.copy(self.pred);
self.X==other.X&&self.Y==other.Y;
var console=logging.StreamHandler();
QNetworkAccessManager.createRequest(self,op,request,device);
var ax=plt.axes();
print(isinstance(b,B));
var BASE_DIR=os.path.dirname(os.path.dirname("./P2JSnippets.py"));
test.debug();
array1.tolist();
var r=conn.getresponse();
c1.acceptor_id=c2.donor_id;
self.py_update(__kwargtrans__({n:starting,b:birthrate,i:imrate,e:emrate,d:deathrate}));
c1.acceptor_id=c2.acceptor_id;
var m=np.random.normal(0,1,__kwargtrans__({size:tuple([5,2])}));
true;
getattr(mod,kls_name);
export var fileobj=cStringIO.StringIO(strobj);
a[index]=float(value);
var kde=stats.gaussian_kde(py_values);
color_segment(polygon_coordinates);
print(dir(p));
deleteself.indexdict[index];
to_sequence(range(5));
var x=0;
sj.load(f);
var __left0__=s.find_longest_match(0,len(s1),0,len(s2));export var pos_a=__left0__[0];export var pos_b=__left0__[1];var size=__left0__[2];
subprocess.Popen(console+cmd);
print(roundPartial(9.74,.1));
GeeElem(self.doc.getroot());
print(py_next(results));
true;

gunicorn==18;
var C=np.outer(A,B);
print(v);
self.memoized=dict({});
tuple(function(){var __accu0__=[];for(var i of tupl[0])__accu0__.append(i/inch);return py_iter(__accu0__)}());
fig.clf();
export var total_seconds=turnaround.seconds+turnaround.days*24*60*60;
export var cut_idx=np.where(np.diff(A.__getitem__([tuple([0,null,1]),1]))>15)[0];
sct.norm.isf(__kwargtrans__({q:.05,loc:60,scale:40}));
print(common_dict(json1,json2));
qmessage;
var resp=conn.getresponse();
doSomething(value);
export var x_itp=r*np.outer(np.sin(theta_itp),np.cos(phi_itp));
var min_val=min(d.py_values());
tuple([self.period,frozenset(list(self.dimensions.py_keys()))]);
var __left0__=match.span();var start=__left0__[0];var end=__left0__[1];
merge(main,0,1);
key;
var filepath=os.path.join(root,py_name);
cap.destroyAllWindows();
var start=time.time();
var bar=request.args.to_dict();
self._results=[];
var a=[5,8,9];
out[i]*=2;
var args=parser.parse_args();
var word=models.CharField(__kwargtrans__({max_length:255,unique:true}));
pdb.post_mortem(traceback);
var val=d2.py_get(k,0);
var salt=models.CharField(__kwargtrans__({max_length:40}));
print(start.dt);
var res=collections.defaultdict(function __lambda__(){return 0});
cd/System/Library/Frameworks/Python.framework/Versions;
filtered_array[area_mask[id_regions]]=0;
d[s];
rows[i].py_pop(pos);
export var expr=Word(ch).setParseAction(function __lambda__(tokens){return[ch,len(tokens[0])]});
printTree(tree,child,nodeMap);
sleep_for_a_bit();
print(self.py_name);

do_something_with(database);
var pyobj=ctypes.py_object(obj);
var x=np.linspace(0,4*np.pi,100);
1(1,40020);
var serializer=UserSerializer(queryset,__kwargtrans__({many:true}));
export var intersected=set(lists[0]).intersection(...lists);
var p=random_derangement(N);
ret.append(result);
var serializer_class=PurchaseSerializer;

XGBClassifier(__kwargtrans__({max_depth:10}));
print(in_[0][i],out[0][i]);
observer.join();
print(k,tally[k]);
plt.figure().show();
export var fit2=sm.tsa.ARIMA(df,tuple([0,0,0]),__kwargtrans__({exog:exogx})).fit();
var p=Pool(12);
export var polynoms=function(){var __accu0__=[];for(var i=0;i<5;i++)__accu0__.append(polyGen(i));return __accu0__}();
!(len(unique_list)==len(set(unique_list)));
d[t]=function(){var __accu0__=[];for(var _=0;_<n;_++)__accu0__.append(py_next(iterator));return __accu0__}();
MyModel(__kwargtrans__({number:i})).save();
var df=pd.DataFrame(l,__kwargtrans__({columns:l[0]._fields}));
self.celery.wait();
a.__getitem__([tuple([0,null,1]),0]);
export var p2y=-tx2*sinang+ty2*cosang+cy;
var minm=np.append(minm,i);
df;
df;
__mod__(x,m);
min(list_date,__kwargtrans__({key:func}));
var categories=function(){var __accu0__=[];for(var d of os.listdir(root))if(isdir(join(root,d)))__accu0__.append(d);return __accu0__}();
var model=db.StringProperty();
generator_fn.__code__.co_flags;
print(row);
gevent.spawn(read_stream,p2.stdout);
var df=pd.DataFrame(dict(__kwargtrans__({A:np.arange(len(tidx))})),tidx);
legline.set_transform(trans);
pywintypes27.dll;
var total=sum(amounts);
count+=1;
var sess=tf.Session();
d[k]=v;
var names=os.listdir(src);
x[x<-1E3]=np.nan;
self.pargs=pargs;
export var mults=[];
var messages=inbox.Items;
var task=getattr(self,next_task_name);
print(columns[0]);
es_tracer.setLevel(logging.DEBUG);
set.union(...l);
users.insert(1,users.py_pop());
var d=defaultdict(list);
curses.use_default_colors();
var g=function __lambda__(x){return x+5};
do_something_with(start_date,list(group));
var py_values=np.asarray(py_values);
args;
export var point=[xF,yF,zF];
export var setofcols=set(function(){var __accu0__=[];for(var x of product.T.tolist())__accu0__.append(tuple(x));return py_iter(__accu0__)}());
l[i];
var a=[];
print();
var root=Tk();
file.write(b);
var res=urllib.request.urlopen(req);
ax.barh(arange(len(x)),x,1);
export var arithmetic_progression=itertools.count(start,step);
f.seek(pos);
var old=np.concatenate(function(){var __accu0__=[];for(var [b,e]of zip(start,stop))__accu0__.append(x.__getslice__(b,e,1));return __accu0__}());
math.sqrt(dot(v,v));
var server_socket=socket.socket();
a^b;
var py_name=MyClass.__DefaultName;
A+=F.__getitem__([i,j])*V.__getitem__([i,tuple([0,null,1])])*V.__getitem__([j,tuple([0,null,1])]);
print(df);
export var root_tree=dict({});
false;
lengthB*=unitPpix.__getitem__([0,0]);
out.__setslice__(nr-1,null,null,col2_2D);
pool.close();
print(d.py_get(42,py_default));
export var contributions=user_profile.contributions_chosen.filter(__kwargtrans__(query_args));
outF.write(inF.read());
var context=inspect.currentframe().f_back.f_locals;
random.seed(4);
x[-9];
var __left0__=np.mgrid.__getitem__([tuple([y.min(),y.max(),complex(0,20)]),tuple([x.min(),x.max(),complex(0,20)])]);var Y=__left0__[0];var X=__left0__[1];
locale.setlocale(locale.LC_TIME,lc);
export var next_run_date=d+timedelta(__kwargtrans__({days:n}));
var num=abs(num);
var A=np.arange(N);
var instance=form.save();
stream_handler.setLevel(logging.INFO);
var ftp=ftplib.FTP();
var ctx=cairo.Context(surface);
ax.cla();
var idx=np.argsort(r);
var y=int(line.strip())+int(line.strip());
print(s.model());
var t=tuple([py_name]);
ax.add_line(self);
str.upper(m.group(0));
export var active_window=GetWindowText(GetForegroundWindow());
server.start();
print(json_files);

print(somelist.__getslice__(start,stop,1));
np.allclose(a.__getitem__([tuple([0,null,1]),tuple([0,null,1]),tuple([0,null,1]),tuple([0,null,1]),0]).ravel(),collapse_dims(a).__getitem__([tuple([0,null,1]),tuple([0,null,1]),tuple([0,200,1])]).ravel());
solve([Eq(int_fx,m),Eq(int_gx,m)],tuple([a,b]));
print(myunique(a));
wrapper;
PyUnicode_IS_COMPACT(op);
export var rot_matrices=np.empty(tuple([angles.shape[0],2,2]));
sm.stats.normal_ad(x);
var doc=libxml2.parseMemory(content,len(content));
var x=np.linspace(0,20,100);
var second=itemgetter(1);
df;
curline+=1;
print(obj.value.T);
np.clip(out,0,255);
export var product_obj=products.all()[0];
hash(str(self));
var timer=threading.Timer(timeout,thread.interrupt_main);
C.__mro__;
self._setup_queues();
var result=[];

export var ranks2=dict(map(py_reversed,enumerate(sorted(dict2,__kwargtrans__({key:dict2.py_get})))));
var BY=np.take(B,y+1);
self._list[index];
treeaslist.extend(self.makeList(aNode.lChild));
wrapper.__dict__=func.__dict__;
my_namedtuple(final,first_step,second_step);
print(sorted(permutations(L),__kwargtrans__({key:space_sum,reverse:true})).__getslice__(0,100,1));
print(line);
var x0=self.canvas.canvasx(0);
c+1;
export var reset_index=np.cumsum(counts1);
d.a.__getslice__(i,i+k,1);
var field2=forms.IntegerField(__kwargtrans__({required:false}));
s.f2();
result.py_clear();
var FACTORY_FOR=User;
print(data);
df.loc[index_list];
-W900- -ignore<catalina.log;
alns_list.append(aln);
print(item);
var tabin=function(){var __accu0__=[];for(var char of tabin)__accu0__.append(ord(char));return __accu0__}();
var __except0__=KeyError(key);__except0__.__cause__=null;throw __except0__;
print(first_user.py_name);
self._log.close();
v1_api.register(UserResource());
desired_capabilities.py_update(options.to_capabilities());
var c=csv.writer(f);
scenario.skip(__kwargtrans__({require_not_executed:true}));
test_suite.addTest(unittest.makeSuite(UserServiceTest));
var app=wx.App();
print(enu.count);
Thread.__init__(self,group,target,py_name,args,kwargs,Verbose);
testit;
print(wx.GetDisplaySize());
export var Output=np.vstack(tuple([Output,data]));
os.umask(0);
do_some_other_thing();
p.data=np.random.choice(np.arange(20)-10,len(p.data))/10;
print(b.shape);
fh.setLevel(logging.DEBUG);
var x=np.random.random(100);
gg.plot(graph.data.py_values(__kwargtrans__({x:dt,y:xcorr})),plotstyles);
self.assertEqual(testuser,user.username);
NotImplemented;
(function(){var __accu0__=[];for(var comment of comments)__accu0__.append(comment.extract());return __accu0__})();
var pool=Pool(4);
var df=s.groupby([s.index.weekday_name,s.index.hour]).sum().reset_index();
var idx=np.arange(m.shape[1]);
ignore[np.ma.maximum(x11,x12)<np.ma.minimum(x21,x22)]=true;
var USE_TZ=true;
(df.location!=df.location.shift()).cumsum();
post_save.connect(invalidate_portfolio_index,__kwargtrans__({sender:Entry}));
func(...args,__kwargtrans__(kwargs));
print(l);
self.py_name;
var __left0__=tuple([w.__getslice__(0,null,2),w.__getslice__(1,null,2)]);var even=__left0__[0];export var odd=__left0__[1];
export var tOut=result[0].time();
print(df);
engine.block();
var f=plt.figure();
var y=Math.floor((x+Math.floor(n/x))/2);
var json_data=json.dumps(model_to_dict(user_obj));
WSGIScriptAlias/sauron/home/galdosd/finalsauronweb/django-root/apache/django.wsgi;
var temp=[];
var cipher=AES.py_new(self.key,AES.MODE_CBC,iv);
smtp_conn.starttls();
all(function(){var __accu0__=[];for(var t of combs)__accu0__.append(sympy.Eq(sympy.diff(expr,...t),0));return py_iter(__accu0__)}());
var lst=[0]*(r+b);
var active_window=screen.get_active_window();
var index=dict(function(){var __accu0__=[];for(var [i,n]of enumerate(leaves))__accu0__.append(tuple([tuple([n]),i]));return py_iter(__accu0__)}());
Testing(8/8);
df.describe();
var f=tar.extractfile(member);
var lines=[];
setattr(namespace,self.dest,mypass);
s.quit();
print(s);
export var sixgrams=ngrams(sentence.py_split(),n);
var it=py_iter(list(range(4)));
var array=np.empty(__kwargtrans__({shape:tuple([2,len(result)]),dtype:float}));
self.bind(__kwargtrans__({b:self.set_c}));
var B=Y.imag;
f(__kwargtrans__({arg_b:0}));
var __left0__=np.meshgrid(xs,ys);var X=__left0__[0];var Y=__left0__[1];
export var newcardID=card.id;
kwargs[field_name]=getattr(model_instance,field_name);
print(list_bars[int(i)-1]);
self.comboBox=QtGui.QComboBox(self);
var lines=py_iter(lines);

py_next(infile);
t.amount+=1;
py_typeof(os.urandom(10));
bSizer.Add(button4,0,wx.ALL,5);
self.projectiles=[];
roundup(100);
cv2.rectangle(img,tuple([x,y]),tuple([x+w,y+h]),tuple([0,255,0]),2);
var x=np.arange(0,1E3);
self.old_headers=self.br.addheaders;
var dic=dict({});
string[n];
var args=inspect.getargspec(f);
np.set_printoptions(1,__kwargtrans__({threshold:100,suppress:true}));
self;
trav(listD);
ax.set_ylim(-1,9);
self.data=self.request.recv(1024);
p.search(s);
false;
var result=np.cumsum(some_array);
print(self.some_param);
var fig=plt.figure(__kwargtrans__({figsize:tuple([11,11])}));
var q=Queue();
len(word)>5;
repeatlist(B,len(A));
var data=[];
greater.append(x);
foo.bars.add(bar2);
self.py_items.extend(other.py_items);
df1.join(df2);
self.linkHovered.emit(anchor);
seen.add(n);
var dom=parseString(data);
conn.endheaders();
var form=SQLFORM(db.foo);
plot(time,y2);
var length=int(s);
outfile.write(out);
var py_name=models.CharField(__kwargtrans__({max_length:64}));
var buf=f.read(8192);
tuple([self.turnnow]);
var app=QtGui.QApplication(sys.argv);
self._host=host;
export var distance_vectors=function(){var __accu0__=[];for(var x of distance_vectors)__accu0__.append(x[0][0]);return __accu0__}();
func(__kwargtrans__({a:2,b:6,c:8}));
var X=iris.data[iris.target==0|iris.target==1];
var app=Flask(__name__);
var handler=logging.StreamHandler();
export var seqlen=len(seq);
canvas.print_png(png_output);
plt.loglog(x,y,__kwargtrans__({basex:np.e,basey:np.e}));
var df=pandas.DataFrame(__kwargtrans__({data:numpy.random.random(tuple([m,n]))}));
print(df);
self.value=value;
print(a+2);
tk.Frame.__init__(self,master);
output[0].lower()+output.__getslice__(1,null,1);
var c1=csv.reader(f1);
print(tuple([a]));
var d=defaultdict(bool);
conn.send(result);
var df=pandas.DataFrame(a).groupby([0]);
list(function(){var __accu0__=[];for(var song of self.allSongs)__accu0__.append(song.album);return set(__accu0__)}());
var x=np.py_sort(x);
movie_dict[actor]=[key];
var sample_size=0;
print(mkl_get_max_threads());
print(etc.__file__);
var py_values=np.atleast_2d(func(points));
var b=function(){var __accu0__=[];for(var k=imin;k<imax+1;k++)__accu0__.append(binsize*k);return __accu0__}();
var entries=function(){var __accu0__=[];for(var entry of entries)__accu0__.append(list(entry));return __accu0__}();
tuple([tuple([2009,1,1]),datetime.date(2009,1,19),datetime.date(2009,2,16)]);
koch_fractal(yertle,2,100);
str(self.matrix);
pool.close();
df2[df2.mi.isin(df2.mi.value_counts()>2)];
var arrays=np.py_split(x,np.where(x==-1)[0]);
tuple([[10,9,8,9,10,11,10,9]]);
result.append(self.visit(z));
var data=yaml.load(txt,yaml.SafeLoader);
var r=f.read();
export var termf=Frame(root,__kwargtrans__({height:400,width:500}));
y.remove(i);
self.children.count();
l1.__setslice__(0,1,null,l2);
tuple([item[0],int(item[1].__getslice__(1,null,1)||0)]);
conn.login(account);
list(dic1.py_keys())|dic2;
df5.head(10);
s.a.b.c.d;
sys.stderr=_LogWriter();
self.remove_unpickleable_attributes();
cmd_parts.append(password);
mahotas.polygon.fill_polygon(pts,canvas);
str(self.__dict__);
export var myhelp=buffer.getvalue();
var id=models.AutoField(__kwargtrans__({primary_key:true}));
self.memo[str]=self.fn(...args,__kwargtrans__(kwds));
ylim([-4.5,4.5]);
method;
1<dict({});
export var pure=np.linspace(-1,1,100);
var ax=fig.add_subplot(111);
conn.login(user,passwd);
l2_copy.remove(i);
var y=np.sin(x)+np.random.random(N)*.2;
export var bufsize=0;
var cert=ssl.PEM_cert_to_DER_cert(cert);
print(template.format(...map(str,l)));
export var nonoverlapping=(ranges.__getitem__([tuple([1,null,1]),0])-ranges.__getitem__([tuple([0,-1,1]),1])>1).nonzero()[0];
export var binsm=(bins.__getslice__(1,null,1)+bins.__getslice__(0,-1,1))/2;
s.prompt();
self.remove_fields_from_representation(representation,remove_fields);
signal.signal(signal.SIGALRM,alarmHandler);
new set([new set([login_form])]);
var parser=HTMLParser(__kwargtrans__({recover:true}));
new_save;
cursor.execute(stmt);
var py_name=models.CharField(__kwargtrans__({max_length:255}));
Decimal(.1);
self.weights=[];
dict(list(kwargs.py_items())+zip(spec,args));
var starts=np.hstack(tuple([[0],nonoverlapping+1]));
var process=subprocess.Popen(command.py_split());
app.exec_();
var loop=asyncio.get_event_loop();
var result=function(){var __accu0__=[];for(var t of targets)__accu0__.append([t,function(){var __accu1__=[];for(var p of prefixes)if(t.startswith(p))__accu1__.append(p);return __accu1__}()]);return dict(__accu0__)}();
var globs=frame.f_globals;
export var new_value=f(function(){var __accu0__=[];for(var base of cls.__bases__)__accu0__.append(getattr(base,py_name));return __accu0__}(),old_value);
var fig=pylab.figure();
var colors=cmap(np.linspace(0,1,len(kinds)));
tuple([x,y,z]);
export var ModelName=Column(Unicode(255),__kwargtrans__({nullable:true,index:true}));
var x=np.linspace(0,1,1E3);
var width=int(cap.py_get(cv2.cv.CV_CAP_PROP_FRAME_WIDTH));
export var app_api=Api(self.app);
colb[n]=0;

var result=map(_fuc1,samplez);
b.A==2&b.B==2&b.C==2;
self.wealth=1;
df.index.freq;
sorted(function(){var __accu0__=[];for(var c of nx.simple_cycles(DG))if(__in__(node,c))__accu0__.append(c);return py_iter(__accu0__)}(),__kwargtrans__({key:len}))[0];
result.append(self.indent(s));

tf.reduce_sum(tf.mul(tensor,identity_matrix(n)),[0]);
aaaa;
export var mvMatrix=glutils.lookAt([0,0,-2],[0,0,0],[0,1,0]);
self.stream.parse(data);
BEGIN;
print(match);
sportDict[ransport].append(py_name);
person.py_items.py_update(other.py_items);
transaction.enter_transaction_management(__kwargtrans__({using:self.db}));
yaml.add_representer(np.ndarray,opencv_matrix_representer);
self.serialc.quit();
print(df);
var y=np.mean(X,0);
binary_insert(r,Node(5));
l[i];
print(os.py_name);
self.cursor.execute(sql,args);
repo.remotes.origin.pull();
export var acc_test=accuracy_score(y_test,y_pred);
var df6=df.ix.__getitem__([tuple([0,null,1]),tuple([60,72,1])]);
main();
var x=np.linspace(1,5,1E4);
test_func();
records.append(record2);
var stdout=sys.stdout;
map(chr,list(range(65,91)));

d[k]=int(v);
scene.camera.location.y=ty;
var q=q.filter(or_(...conditions));
sys.setrecursionlimit(maxint);
print(new_dict);
var sps_acc=sps_acc+sps.coo_matrix(tuple([d,tuple([r,c])]),__kwargtrans__({shape:tuple([rows,cols])}));
var b=2;
var df=tempDF;
print(d1+td(__kwargtrans__({days:i})));
export var sibling=page.find_next_sibling();
myarray[myarray>=2&myarray<5]=100;
os.getcwd();
show();
print(guess_seq_len(list_a));
var c=count_events(e);
(function(){var __accu0__=[];for(var x of X)__accu0__.append(self.combine(x));return __accu0__})();
main();
[server-symlinks];
export var page_sanitized=json.loads(json_util.dumps(page));
var indices=np.vstack(np.unravel_index(np.arange(x*y),tuple([y,x]))).T;
self.a=a;
var temp=function(){var __accu0__=[];for(var sublist of listD)for(var item of sublist)__accu0__.append(item);return __accu0__}();
print(t);
moreVerbs.extend(getVerbsFromConjunctions(moreVerbs));
ax.plot(x,y);
var __left0__=curve_fit(pl,x,y,__kwargtrans__({p0:[0,0,0,0]}));export var popt_pl=__left0__[0];var pcov=__left0__[1];
self_dict[attr];
resid.flatten();
ftp_handle.cwd(original_cwd);
platform.uname();
output.put(tuple([pos,rand_str]));
export var time_in_seconds=int(time());
c.append(itemgetter(i)(a));
getsizeof(dict(function(){var __accu0__=[];for(var n=0;n<5461;n++)__accu0__.append(tuple([n,0]));return py_iter(__accu0__)}()))/5461;
(np.convolve(np.convolve(A,K)>=WSZ,K).__getslice__(L,-L,1)>0).astype(int);
var a=X();
var length=ctypes.c_ulong(0);
ndb.put_multi(users);
process(line);
var page=paginator.page(1);
export var outputdict=sqlcol(df);
var serializer_class=UserSerializer;
filters.append(Q(__kwargtrans__({is_default:false})));
InteractiveConsole.__init__(self);
var y=sum(function(){var __accu0__=[];for(var i of x)__accu0__.append(x>i);return py_iter(__accu0__)}());
self.limit=10;
list(seen_twice);
var arr=sparse.coo_matrix(tuple([data_f,tuple([rows_f,cols_f])]),df.shape,__kwargtrans__({dtype:np.float64}));
print(sys.getrefcount(X));
var html=Template(fp.read());
writer.writerow(row+[to_append]);
yertle.begin_poly();
t.show();
var diag=np.ones(n-1);
t.start();
tuple([x,y]);
var b=datetime.now();
reader.Close();
var wb=Workbook();
asc.append(i);
dt-timedelta(__kwargtrans__({seconds:time_tuple[-1]}));
TYPES[type_name].from_dict(value);
dis.dis(my_fun);
print(filename,lineno,strrepr);
os.setgroups([]);
print(df.star_name);
var df_list=[];
var instance=reservation.instances[0];
export var rate=function __lambda__(t){return t>200?200*exp(-t):400*exp(-t)};
var form=DjForm(__kwargtrans__({data:data}));
document.exitFullscreen();
var a=f()[0];
bar.close();
var idx=np.ravel_multi_index(arr,arr.max(1)+1);
false;
py_typeof(d);
var session=sessionmaker(__kwargtrans__({bind:engine}))();
cap0.set(4,120);
var ax=fig.add_subplot(111);
print(sum(2,4));
var candidates=function(){var __accu0__=[];for(var base of bases)__accu0__.append(base);return __accu0__}();
print();
print(a);
f.write(content);
var st=time.time();
serial.flushOutput();
true;
marshal.dumps(code);
export var new_map=function(){var __accu0__=[];for(var [x,y]of a_map)if(!(x<0||y<0))__accu0__.append([x,y]);return __accu0__}();
export var DOT11_CIPHER_ALGO_WPA_USE_GROUP=256;
HTML(style+df_html);
a[0];
export var news=News.objects.filter(__kwargtrans__({pk:news_id}));
crontab-e;
self.q.put(tuple([true,msg.errorCode,msg.errorMsg]));
result.append(dictionary[last_match]);
setattr(targetCls,py_name,wrap(py_name,func));
var t=d.unique();
_install_lib.run(self);
self[key]=kwargs[key];
print(T(data[0],.29,4.5));
fr.close();
var py_metatype=models.CharField(__kwargtrans__({max_length:255}));
timezone.make_aware(d,timezone.utc);
tocopy_wb.Sheets(1).Cells.Copy();
export var framenp=np.fromstring(framestr,__kwargtrans__({dtype:np.uint16})).reshape(tuple([1024,1280]));
MyArray(function(){var __accu0__=[];for(var k of key)__accu0__.append(tuple([k,self.data[k]]));return __accu0__}());
var length=np.random.random(10);
py_typeof(foo1);
self.module=importlib.import_module(module_name);
print();
self.data[self.size]=x;
self.data[idx]=item;
var y=time.time();
sub_compunds.extend(generate_sub_compound(tok));
var data=file.read(1024);
var input=request.json;
var newlist=[temp[0]]+function(){var __accu0__=[];for(var i of temp.__getslice__(1,null,1))__accu0__.append([0]+i);return __accu0__}();
s.close();
f();
serverEndpoint.listen(factory);
(function(){var __accu0__=[];for(var str of args)__accu0__.append(str.upper());return __accu0__})();
print(metrics.confusion_matrix(y_test,y_predicted));
var Base=declarative_base();
comment.replace_with(tag);
self.master.wait_window(self.w.top);
export var high=len(input)-1;
f(d,py_name);
var list_of_lists=[];
var b=np.arange(0,5);
g+=b;
print(sorted(py_values.py_items()),expr.subs(py_values));
foo.bar;
instance;
sum(function(){var __accu0__=[];for(var i=0;i<n;i++)__accu0__.append(max(function(){var __accu1__=[];for(var i=0;i<6;i++)__accu1__.append(die().roll_until(6));return py_iter(__accu1__)}()));return py_iter(__accu0__)}())/float(n);
self.cs=LockableCursor(self.connection.cursor());
block_list.append(y);
out.stop();
export var current_command=random.choice(commands);
self.filter(__kwargtrans__({owner:owner}));
head(d,10);
export var pairs_by_number_and_list=collections.defaultdict(list);
var mylist=mymethod();
ax.hold(true);
var B=np.vectorize(inds.py_get)(A);
export var foo_dir=os.path.dirname(os.path.join(os.getcwd(),"./P2JSnippets.py"));
self.__setslice__(0,1,null,[]);
a[np.arange(a.shape[1]).__getslice__(0,null,1)>a.__getitem__([tuple([0,null,1]),0,np.newaxis])]=0;
getattr(p,s);
var x_a=points.__getitem__([,tuple([0,-1,1])]).__getitem__([,mask]);
a.shape;
var py_name=models.CharField(__kwargtrans__({max_length:50,null:false,blank:false}));
replacements[mo.group()];
m.show();
var data=os.read(STDIN,1024);
var profile=pform.save(__kwargtrans__({commit:false}));
np.random.seed(0);
older_books.append(books.title);
var x=np.linspace(0,20,500);
f.__dict__;
dis.dis(function __lambda__(){return Foo.bar.add(1,2)});
indexes.append(int(index));
var data=s.readframes(nf);
print(args_dict);
partial(operator.mod,__kwargtrans__({b:i}));
export var createdate=subprocess.check_output(args);
np.conj(x,x);
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
urlparse.urljoin(response.url,extractedLink.strip());
py_next(it2);
export var __DBNAME__=py_name;
ax.stem(x,y);
result;
locale.getdefaultlocale();
self.close_button.pack();
turtle.pendown();
var result=dict(curs.fetchall());
export var date_=date.today();

export var cooMatrix=sparse.coo_matrix(tuple([ones,tuple([edges.__getitem__([tuple([0,null,1]),0]),edges.__getitem__([tuple([0,null,1]),1])])]));
var df=df.swaplevel(0,1,__kwargtrans__({axis:1}));
map(eq,a,b).index(false);
self.parent.vLayout.insertWidget(1,self);
export var quit=true;
self.layout.addWidget(self.btn_run);
cursor.close();
wx.Panel.__init__(self,...args,__kwargtrans__(kwargs));
self.sock.sendall(data);
Kiwi;
run.py;
res;
var layout=QHBoxLayout(self);
df+2;
compose1(f1,f2);
res.fill(np.nan);
var start=datetime.datetime.combine(today,start);
pdf.closed;
var u=User.query.py_get(id);
var article=get_objects_or_404(Article,__kwargtrans__({pk:id}));
export var dsqrd=(y2-y1)*(y2-y1)+(x2-x1)*(x2-x1);
l.__getslice__(0,n,1)+[0]*(n-len(l));
series.fillna(0);
translation.deactivate_all();
var a=np.arange(20).reshape(tuple([4,5]));
var my_data=np.random.random(tuple([210,8]));
print(string1.__getslice__(match.a,match.a+match.size,1));
var angles=np.linspace(0,2*math.pi,n_angles,__kwargtrans__({endpoint:false}));
var __left0__=leggauss(deg);var x=__left0__[0];var w=__left0__[1];
plt.legend();
print(enclosing_class());
texter.show();
var df=pd.read_csv(fo);
sieve();
var fun=self.weak_fun();
bins_labels(bins,__kwargtrans__({fontsize:20}));
self._picked_indices.append(index);
getattr(value,arg);
var result=list(queryset_1)+list(queryset_2);
export var icS=scipy.linalg.inv(cS);

var c=get_redis_connection();
s.add_dependency(tasks[p[0]],tasks[p[1]]);

var ba=bytearray(c);
var handler=logging.StreamHandler();

var groups=[];
list_of_files.push(file);
file.close();
print(x,y);
export var bar_id=Column(Integer,ForeignKey(Bar.id));
n1+=1;
export var replchars=list(replstr);
response;
self.resize(600,400);
price_series.pct_change();

self.filename=tkFileDialog.askopenfilename();
len(results)!=1?results:results[0];
f2.print_world();
img.save(js.framebuffer);
url_queue.put(1);
var y=NP.row_stack(tuple([fnx(),fnx(),fnx()]));
var y=y[indices];
model.add(e);
unique_a.view(a.dtype).reshape(tuple([unique_a.shape[0],a.shape[1]]));
__all__[func_name]=getattr(m,func_name);
var fig=pyplot.figure();
var hist=np.histogram(A,__kwargtrans__({bins:bin_count}));
var results=service.files().list(__kwargtrans__({maxResults:10})).execute();
export var masked_array=np.ma.array(a,__kwargtrans__({mask:np.isnan(a)}));
print(a,b,c);
tt.Index(1).Set(eb);
result;
var axis=PlotAxis(__kwargtrans__({tick_generator:tick_gen}));
var v=np.arange(100).reshape(10,10);
self.d[k]=v;
export var tar=tarfile.open(__kwargtrans__({fileobj:file_like_object}));

logger.info(result.py_get());
result.append(dictionary[match_parts[i]]);
np.frombuffer(mp_arr.get_obj());
export var city_type=db.StringProperty();
plt.xlim(50,70);
var big_df=df.copy();
self.cdfunc=cdfunc;
var __left0__=lu(a,__kwargtrans__({permute_l:true}));var pl=__left0__[0];var u=__left0__[1];
var s=len(l);
var result=np.array(function(){var __accu0__=[];for(var t of t_output)__accu0__.append(np.sum(corr_time1(t,JM1,JM2)));return __accu0__}());
cls;
print(intdate2date(20160618));
tuple([DD,EE,FF]);
f1.close();
var __left0__=np.arange(0,1.01,.01);var xs=__left0__;var ys=__left0__;
len(l);
var G=nx.complete_graph(20);
b.close();
zipdata.write(get_zip_data());
tuple([2,2,5]);
export var sherr=[];
combs+=combinations(remove(e,elems),m-1);
n+=1;
print(dis.dis(f));
var ch=screen.getch();
print(py_name);
pst_dt.strftime(fmt);
var a=20;
var value=value.strip();
getattr(self._queue,py_name);
result;
axs[1].xaxis.set_minor_locator(x_minor_lct);
var y=np.empty(s.size,__kwargtrans__({dtype:np.int64}));
(function(){var __accu0__=[];for(var queue of queues)__accu0__.append(queue.py_get());return __accu0__})();
self.py_name=zipinfo.filename;
var value=datetime.date(1,1,1);
var F=list(S1);
pyperclip.paste();
new_d[key.upper()]+=val;
var field=self.fields[field_name];
_build_ext.finalize_options(self);
df;
lines.append(line);
ipx;
var myList=[];
print(e.inserted_primary_key);
var max_value=value;
1/1024;
random.choice(list(self.__cache.py_values()));
all_keys.add(k);
headers.customContextMenuRequested.connect(self.header_popup);
self.val+=1;
var liPos=function(){var __accu0__=[];for(var [a,b]of liPos)__accu0__.append(tuple([a,b+1]));return __accu0__}();
var x=2;
var __left0__=tuple([x,y]);self.x=__left0__[0];self.y=__left0__[1];
ax.plot(1/u*cos(phi),1/u*sin(phi));

Include/etc/apache2/conf.d/phppgadmin;
var res=OrderedDict();
export var new_soup=bs4.BeautifulSoup(new_html);
var n=-1;
export var GMax_idx=np.where(neg_y_grad==GMaxI)[0][0];
merge_dict(v1,v2);
response;
export var p_file=frame.f_back.f_code.co_filename;
export var tuples_in_nxn=function(){var __accu0__=[];for(var x of numbers_in_nxn)__accu0__.append(divmod(x,n));return __accu0__}();
width;
self.button=QtGui.QPushButton(self);
divs[j][1]+=divs[i][0];
var c=db.cursor();
var fields=[];
print(test[0]);
var im2=Image.fromarray(data);
retval+=chr(node[1][0][1]);
list(range(item.start,item.stop));
var frame=inspect.currentframe();
var args=parser.parse_args();
var rows=cur.fetchall();
var df=areas.apply(multiply_by_demand).unstack(0);
var value=mc.py_get(key);
export var word_len=_len(word);
print(tests.test_002);
button.click();
var __left0__=np.histogram(py_values,__kwargtrans__({bins:[1,4,7,10],weights:freqs}));var hist=__left0__[0];var _=__left0__[1];
print(x);
var y=np.array([1,2]);
var body=[];
var d=defaultdict(list);
decoder.process_raw(buf,false,false);
var B=np.zeros_like(A);

urllib.request.HTTPSHandler.__init__(self);
df;
df;
df;
result;
export var base_d=datetime.strptime(base_date,fmt);
File.Delete(FilePath);
py_typeof([])===list;
df_new;
export var normal=[sin(tF)*cos(pF),sin(tF)*sin(pF),cos(tF)];
df.iloc.__getitem__([tuple([-6,-1,1]),2]).py_values;
self.button.bind(__kwargtrans__({on_release:self.button_click}));
help(scipy.special.erf);
export var sorted_objs=sorted(list(dic.py_values()),__kwargtrans__({key:signature}));
loop.run_until_complete(low_level());
execute_sql(s);
np.diff(np.hstack(tuple([0,run_ends,nums.size]))).max();
export var ndX=PyArray_NDIM(X);
a.__setitem__([0,0,1],[0,0,5]);
var top=min(len(a1)-1,len(a2)-1);
cosine(pink,car);
a.bar;
comma_ending_prettyprint(row,__kwargtrans__({stream:outfile}));
s.get_available_ranges();
var df=pd.read_csv(filename);
do_something(val);
imshow(resultScaled.astype(uint8));
export var object_serializer_class=MyModelSerializer;
index_type();
export var nxt=_st+timedelta(__kwargtrans__({days:1}));
var queryset=User.objects.all();
var driver=webdriver.Chrome(chromedriver);
var l=list(range(100));
sys.stdout.write(session.recv(4096));
print(tuple([count,p]));
app().mainloop();
export var API_ERROR=1;
power(function __lambda__(x){return x*2},2)(9);
clf.fit(iris.data,iris.target);
pd.Series(factors,df.index).apply(np.binary_repr,__kwargtrans__({width:width}));
cur_set.append(A[index]);
var start=time.time();
var lft=function(){var __accu0__=[];for(var i=0;i<n_rows;i++)__accu0__.append([0]*i);return __accu0__}();
map(word_tokenize,texts);
export var someSignal=QtCore.pyqtSignal(int,QtGui.QWidget);
Point(self.x-point.x,self.y-point.y);
var ts=np.concatenate(ts);
d[k]=v;
p.is_running();
var __left0__=cv2.boundingRect(cnt);var x=__left0__[0];var y=__left0__[1];var w=__left0__[2];var h=__left0__[3];
oAccess.Quit();
gg.plot();
export var n_points=len(points);
var L=[0]*10;
os.mkfifo(logfilepipe);
export var lvls=np.concatenate(tuple([lvls.__getslice__(0,-1,1),np.linspace(1E3,1E4,5)]));
var orders=models.ManyToManyField(Order);
export var statement=query.statement;
print(nonsub);
self.environment.handle_exception(exc_info,true);
value[0]+=1;
merge(value,node);
dis.dis(lis[1]);
var len2=math.hypot(x2,y2);
var person=models.ForeignKey(Person);
r.append(-1);
dict([[8,8],[6,6],[7,7]]);
var __left0__=proc.communicate();var stdout=__left0__[0];var stderr=__left0__[1];
var ax1=fig1.add_subplot(221);
numloss+=1;
a;
slice(0,0,step);
popd;
self._classes.__setitem__([cls.__module__,cls.__name__],cls);
var y=[0]*n;
var salt=bcrypt.gensalt();
var t=datetime.now();
var soup=BeautifulSoup(text);
count+=1;
self._fig=Figure();
print(regex.findall(test));
var x=0;
repr(.01);
sns.distplot(x,__kwargtrans__({ax:ax,rug:true,hist:false}));
var edges=zip(rows.tolist(),cols.tolist());
asdas;
export var cluster_lookup=dict(function(){var __accu0__=[];for(var [i,node]of enumerate(graph.nodes))__accu0__.append(tuple([node,i]));return py_iter(__accu0__)}());
shom_im(cir);
res_list.append(res);
export var tz_aware_dt=dt.py_replace(__kwargtrans__({tzinfo:UTC}));
isitIn(char,aStr);
var root=tk.Tk();
count+=countnodes(ele.left,0);
BEHI;
CFHJ;
AC;
thread.start();
var output=function(){var __accu0__=[];for(var [first,[second,count]]of list(d_max.py_items()))__accu0__.append(tuple([first,second]));return __accu0__}();
export var best_merit_yet=merit2;
f.close();
print(repr(x),ucd.category(x),ucd.py_name(x));
var lists=list(filter(len,lists));
var idx=np.floor(input).astype(np.int);
var duplicates=function(){var __accu0__=[];for(var [key_str,py_keys]of reverse_d.py_items())if(len(py_keys)>1)__accu0__.append(py_keys);return __accu0__}();
x[-44];
decorator;
export var input_from_xpath=driver.find_element_by_xpath(path);
var category=models.ForeignKey(Category);
a.insert_node(a.root,2);
var bar=Bar();
QtGui.QDirModel.flags(self,index)|QtCore.Qt.ItemIsUserCheckable;
var dat=gauss(x,amp,cen,sig)+np.random.normal(__kwargtrans__({size:len(x),scale:.1}));
w.grid();
print(parser.prog);
self.im.putpalettealpha(i,a);
var counts=Counter(seq);
np.random.seed(0);
var ip=get_ipython();
var loop=asyncio.get_event_loop();
var res=[];
suite.addTest(unittest.defaultTestLoader.loadTestsFromName(t));
HTH+=HTHflips;
var info=json.loads(details);
export var newArray=copy(theArray);
print(log.text);
repr(self.tokens[0]);
indices[indices>=arr.shape]=clipping_value;
do_staging_stuff();
var serializer_class=MyModelSerializer;
tuple([])(tuple([]));
self.__dict__.py_update(kwargs);
var config=ruamel.yaml.load(open(file_name),ruamel.yaml.RoundTripLoader);
inner;
self.waiters.append(new_lock);
MooBase.metadata.create_all(engine);
[5,17,8,7];
pylab.show();
var value=json.loads(jsonValue);
var app=wx.PySimpleApp();
export var spreadsheet=client.open_by_key(docid);
var __left0__=x+1;var c=__left0__;var x=__left0__;
var total=sum(function(){var __accu0__=[];for(var g of group)__accu0__.append(g[1]);return py_iter(__accu0__)}());
net.sortModules();
var n=[tuple([1.1,5]),tuple([2.4,7]),tuple([5.4,6]),tuple([9.8,14]),tuple([10,4])];
var pix=pixl.get_pixbuf();
var groups=result.groups();
print(f());

var y=numpy.zeros(x.shape);
var arr=shm.zeros(N,__kwargtrans__({dtype:np.uint8}));
user_input.append(entered_text);
deferred.addBoth(callback);
var __left0__=tuple([x+new_dx,y+new_dy]);var new_x=__left0__[0];export var new_y=__left0__[1];

print(mydata);
var ok=true;
print(soup);
var B=A.__getitem__([tuple([0,null,-1]),tuple([0,null,1])]);
self.addCleanup(patcher.stop);
l.insert(0,y_axis[i]);
f(x.__getitem__([tuple([0,null,1]),t-1]),params,x.__getitem__([tuple([0,null,1]),t]));
export var infinitedict=function __lambda__(){return defaultdict(infinitedict)};
alist.append(1);
print(insp.get_table_names());

plt.show();
readRequest+=chr(self.transactionID/256);
sys.stdout.write(c);
self.line=line;
image_db.close();
Color(...[r,g,b]);
B.shape;
json.dumps(f(...a,__kwargtrans__(k)));
var fig=plt.figure();
var data=numpy.fromiter(points,float);
dowrap;
export var REDIS_CONNECT_RETRY=true;
bar();
var two=np.empty(three.shape,__kwargtrans__({dtype:object}));
export var roots=np.polynomial.polynomial.polyroots(poly_coeff-[99,-1,0]);
elem.py_clear();
var df=pd.read_csv(fo);
var z=dict({});
var indices=np.array(list(range(len(a))))[inter];
print(qr.data);
a.dtype=newtype;
main();
var key=bucket.new_key(filename);
print(repr(binary_split_array[0]));
out_put.append(participation_details);
var idx=np.unique(idx);
r.__getitem__([tuple([0,null,1]),0]);
self.obj.my_attr==other.obj.my_attr;
0(1,40020);
ax;
print(dumps(bob));
var body=s.to_dict();
data.shape;
var ax2=ax.twinx();
var smtp=smtplib.SMTP();

var output=cmd.communicate()[0];
var logger=logging.getLogger(__name__);
var words=f.readlines();
connections.append(connection);
var out=np.zeros(tuple([a.shape[0],a.shape[0]]));
main();
var cursor=conn.cursor();
var queue=Queue.Queue();
var total=0;
export var bytesPerSector=ctypes.c_ulonglong(0);
var __left0__=np.py_split(quaternion0,4,__kwargtrans__({axis:-1}));var x0=__left0__[0];var y0=__left0__[1];var z0=__left0__[2];var w0=__left0__[3];
subprocess.Popen(args0);
i+=1;
tuple([G,1,0,0,0,0,0,0,1,0,0,0]);
sub(a).__setslice__(0,null,null,np.ones(tuple([2,2])));
var sentencecount=0;
self.sum;
find(resolved);
conn.close();
var path=Column(ARRAY(Integer));
response;
var m=function(){var __accu0__=[];for(var i=0;i<n_classes;i++)__accu0__.append([0]*n_classes);return __accu0__}();
pprint(d);
self.py_update(...args,__kwargtrans__(kwargs));
obj.my_custom_method();
print(totals[totals.argsort()]);
map(double,list_.__getslice__(1,null,2));
fetch(r);
export var Mx=np.zeros(tuple([n,n]));
var list2=function(){var __accu0__=[];for(var x of list1)if(x)__accu0__.append(x);return __accu0__}();
export var outputlist=[];
var source=ColumnDataSource(__kwargtrans__({data:dict(__kwargtrans__({x:[0,1],y:[0,1]}))}));
ax1.imshow(bw,__kwargtrans__({cmap:plt.cm.gray}));
ibm_db.execute(query_stmt);
MyIterator(list,random.sample(list(range(n)),k));
var lens=np.array(function(){var __accu0__=[];for(var item of v)__accu0__.append(len(item));return __accu0__}());
py_next(self);
canvas.Canvas.showPage(self);
self.assertEqual(result,tuple([self.v.version,self.v.prerelease]));
b[c];
var ax=fig.gca();
field;
export var notes=Notification.objects.filter(__kwargtrans__({user:self.user})).__getslice__(0,4,1);
var y=pow(x,p-2,p);
true!=false!=false;
indices.append(index);
var saver=tf.train.Saver();
print(self.server.conn);
Date(date.year,date.month,date.day);
var autostart=py_true;
clams?_mydecor:_myclassdecor;
hm.start();
var __left0__=function(){var __accu0__=[];for(var s of line.py_split())__accu0__.append(float(s));return __accu0__}();var a=__left0__[0];var b=__left0__[1];
foo_on_scalars(x);
var num=0;
HTMLParser.feed(self,data);
x.isupper();
print(contents);
var arr=np.sum(np.exp(-4*abs(val-val.reshape(len(df.index),-1))),__kwargtrans__({axis:0}));
var __left0__=tuple([Fenwick(len(a)),Fenwick(len(a))]);var counts=__left0__[0];var sums=__left0__[1];
myseries_two.loc[0];
g(arr,numbers,i+1);
cls;
export var USE_X_FORWARDED_HOST=true;
var numsum=sum(list(numbers));
var box=ax.get_position();
var model=QFileSystemModel();
new_func.__code__=code;
var result=tuple(islice(it,n));
mask[np.triu_indices(len(df))]=false;
print(nextfetch);
foo.bar-foo.baz;
var data=np.random.random(tuple([1E3,10]));
var s=list(iterable);
var a=function(){var __accu0__=[];for(var i of tuple([1,2]))__accu0__.append(function __lambda__(y){return function __lambda__(x){return y*x}}(i));return __accu0__}();
var c=Counter(words_to_count);
root.remove(element);
false;
print(optimize.fixed_point(func,0));
var datam=np.zeros_like(data);
export var lines_seen=set();
export var stophttp=threading.Thread(__kwargtrans__({target:httpd.shutdown}));
dump(outdata,5,6);
time.sleep(.01);
print(s);
self._foo=val;
var dt=aware_utc_dt.astimezone(tz);
var y=x.__add__(x);
le.transform([1,1,2,6]);
answer.append(tuple([L1[tuple(row)],i]));
var result=comment.upper();
func2();
hamming_sets[0].add(l[0]+l[1]);
image.data=f.read();
doSomething();
true;
export var bnds=tuple(function(){var __accu0__=[];for(var x of start_pos)__accu0__.append(tuple([0,1]));return py_iter(__accu0__)}());
__all__.py_update(load_dictionary(fpath)[0]);
var o4=__mod__(int(ipnum),256);
x+x;
export var exifdict=im._getexif();
df;
randint(range_start,range_end);
np.vstack(tuple([np.zeros(shape),data]));
tuple([new set([4,5,6])]);
list(map(set,out));
show(p);
var y=foo();
d[key_list[-1]]=params[key];
self._locked;
var draw=ImageDraw.Draw(img2);
fin.seek(start_index);
var b=[6,7,8,9,0];
list(islice(function(){var __accu0__=[];for(var itr of tuple([l,repeat(0)]))for(var x of itr)__accu0__.append(x);return py_iter(__accu0__)}(),n));
bar.set_hatch(hatch);
var a=numpy.array([0,.25,.75,1]);
queryset.py_get(__kwargtrans__({slug:self.slug}));
[MyObject(),MyObject()];
var __left0__=data.T;var x=__left0__[0];var y=__left0__[1];
print(int_array);
df.C;
export var just_object_result=array_result.__getslice__(1,-1,1);
var diff_as_html=ghdiff.diff(markdown1,markdown2);
print(dict_mul(dict1,dict2));
handle_results(proc.stdout);
current_string_split[-1]+=s[j];
var weights=numpy.array([.5,-1]);

np.array(function(){var __accu0__=[];for(var row of vec)__accu0__.append(inner(row,...args,__kwargtrans__(kwargs)));return __accu0__}());
prevnode.left==node.right;
var s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);

first.append(ele);
list(function(){var __accu0__=[];for(var x=0;x<10;x++)__accu0__.append(foo());return py_iter(__accu0__)}());
export var startpos=text.rfind(alpha,0,endpos-len(alpha))+len(alpha);
L.append(x*k);
var primes=function(){var __accu0__=[];for(var p of table)if(p)__accu0__.append(p);return __accu0__}().__getslice__(1,null,1);
pymysql.install_as_MySQLdb();
var found=true;
var data=json.loads(ninja_json);
q.join();
Y+=.1*np.random.random(N);
var k=int(round(n*(float(percent)/100)/2));
a[something];
x.__getitem__([0,tuple([48,52,1])]);
var j=json.loads(data);
form;
app.MainLoop();
var a=1;
socket.send(args.bar);
config.write(fp);
self.q.task_done();
show_error();
set(chain.from_iterable(function(){var __accu0__=[];for(var key of periodic_gs)__accu0__.append(periodic_gs[key].nodes());return py_iter(__accu0__)}()));
var rest=list(it);
Y.append(y);
py_typeof(sys.maxsize+1);
exitonclick();
var response=requests.post(searchUrl,__kwargtrans__({files:multipart,allow_redirects:false}));
NULL;
y.py_sort();
var serializer_class=UserSerializer;
var a=[5,8,9];
var d=OrderedDict();
py_typeof(d);
form.category_select.choices=function(){var __accu0__=[];for(var key of categories)__accu0__.append(tuple([key,categories[key]]));return __accu0__}();
var args=[];
var A=matrix([[0,0,0,1],[0,0,1,0],[0,1,0,0],[0,0,0,0]]);
t.print_exc();
result.add(word);
result.add(item);
print(df.dtypes);
result.append(py_next(g));
thread.join();
var serializer_class=UserSerializer;
self._current_message=qmessage;
self.children=[];
export var price=forms.DecimalField(__kwargtrans__({required:false,max_digits:6,min_value:0}));
ax.plot(arange(10),rand(10));
print(x);
sum(function(){var __accu0__=[];for(var [i,val]of enumerate(inputs))__accu0__.append(val*self.weights[i]);return py_iter(__accu0__)}());
var result=cache.py_get(key);

export var newDict=[];
logging.basicConfig(__kwargtrans__({format:FORMAT}));
159575276;
var m=alen(t);
export var countec=[0]*len(ec2j);
var m=MyModel(__kwargtrans__(data_dict));
entity.after_delete();
var extractedData=data.__getitem__([tuple([0,null,1]),idx_IN_columns]);
export var distancesDF=pd.DataFrame(distances);
root.after(0,download_chunk,readsofar+len(data),chunksize);
print(data);
self.SetTopWindow(frame);
tuple([tuple([0,10])==0,10]);
var result=pool.apply_async(f,[10]);
var row=rows[0];
var as_list=list(eval(args));
var offset=lst.index(element,offset+1);
mypad.scrollok(true);
__import__(modname);
result[last].append(obj);
print(one,two,three);
result|=Counter(d);
int(hex(200-(1<<16)).__getslice__(-4,-2,1),16);
print(f(1,__kwargtrans__({a:-1,b:1,n:4})));
recall_accumulator.append(recall_score(y_true,y_pred,__kwargtrans__(kwargs)));
reactor.connectTCP(host,PORT,BlastFactory());
hover.perform();
var __left0__=lines[i][0];var x1=__left0__[0];var y1=__left0__[1];var x2=__left0__[2];var y2=__left0__[3];
var __except0__=AttributeError;__except0__.__cause__=null;throw __except0__;
hfile.seek(-bsize,os.SEEK_CUR);
var X=np.asmatrix(np.arange(N*N).reshape(N,N));
self.delegate=delegate;
print(a);
export var attributes=inspect.getmembers(MyClass,function __lambda__(a){return!inspect.isroutine(a)});
self.run_console_command(line);
export var cmap_lin=cm.jet;
f.close();
var count=0;
plt.scatter(x,y,__kwargtrans__({c:color,s:90,alpha:alpha}));
var __left0__=cap0.read();export var ret0=__left0__[0];export var frame0=__left0__[1];
Lv.append(last);
i+=n+1;
export var grouped_df=df.groupby(group_id);
print(z.namelist());
export var labels2=plt.clabel(CS,__kwargtrans__({inline:1,fontsize:12}));
self.py_name=py_name;
export var jobs=multiprocessing.Queue();
asyncio.set_event_loop(eventloop);
f.add_done_callback(set_if_success);
_repr(o);
print(np.shape(c));
var result=func(...args,__kwargtrans__(kwargs));
a.py_update(b);
self.loadFinished.connect(self._result_available);
export var do_once=function(){var __accu0__=[];for(var t of output_file_names)__accu0__.append([t,false]);return dict(__accu0__)}();
isinstance(inst,self._decorated);
py_iter(x);
arr.__getslice__(i,size+i,1);
0;
var is_active=models.BooleanField(__kwargtrans__({py_default:false}));
export var parliament=models.CharField(__kwargtrans__({max_length:128}));
shutil.rmtree(self.__str__(),__kwargtrans__({onerror:delete_dir_handler}));
reader.close();

my_global_fun(data);
var start=time.time();
var C=np.empty(N,__kwargtrans__({dtype:int}));
funcList.append(factory(m));
0;
heapq._siftdown_max(heap,0,len(heap)-1);
datalines_str.info();
pool.map(func,input_sequence);
~array;
var counter=Counter(function(){var __accu0__=[];for(var line of fp)__accu0__.append(line.py_split()[0]);return py_iter(__accu0__)}());
var __left0__=py_next(iterator);var k=__left0__[0];var v=__left0__[1];
var serializer=self.get_serializer(queryset,__kwargtrans__({many:true}));
self.__dict__[key]=item;
df.date1=pd.to_datetime(df.date1);
x;
var loop=asyncio.get_event_loop();
IOLoop.instance().add_timeout(time.time()+5,self._process);
self.height=self.winfo_reqheight();
var password=forms.CharField(__kwargtrans__({widget:forms.PasswordInput}));
export var first_day_of_month=datetime(now.year,now.month,1);
var theta=np.deg2rad(angle);
z.close();
var match=pattern.search(lines);
print(client.wsdl);
df;
visited.append(i);
list2.insert(i,x);
time.sleep(.45);
ipython- -matplotlib;
no_background.append(orig.__getitem__([tuple([0,null,1]),i])-np.median(orig,1));
var data=function(){var __accu0__=[];for(var d of data)__accu0__.append(tuple([d[0],dict(__kwargtrans__({size:int(d[1])}))]));return __accu0__}();
print(tuple([a,args[a]]));
self.panel=wx.Panel(self);
var it=py_iter(numbers);
Blob.__init__(self,width,height,color,emphasis,highlight);
export var percentageDifference=100*float(difference)/len(a);
z.close();
var l2=[];
self.grid(__kwargtrans__({sticky:W+E+N+S}));
export var numpy_surface=numpy.frombuffer(surface.get_buffer());
export var amount_to_pad=self.block_size;
deleten_lst[-1];
response;
var df=DF[DF.isin([eq]).any(1)].reset_index(__kwargtrans__({drop:true}));
export var projected_data=np.dot(data,eigenvectors);
plt.xlim(__kwargtrans__({xmax:2}));
func(...args,__kwargtrans__(kwargs));
newobj;
var sts=os.waitpid(p.pid,0);
a[0];
siftDown(A,start,len(A)-1);
var cur=conn.cursor();
print(dt);
d.func1(py_name);
count[w]+=1;
i+=1;
var dot_product=np.dot(normal,unit_ray);
np.random.seed(0);
extractor.runInParallel(__kwargtrans__({numProcesses:2,numThreads:4}));
self.cntrlPanel.Show();
file.seek(sequence_start,0);
print(norm.ppf(y));
sum(function(){var __accu0__=[];for(var [opt,value]of zip(ops,lst))__accu0__.append(opt(value));return py_iter(__accu0__)}());
permutations[tuple(function(){var __accu0__=[];for(var item of py_items)__accu0__.append(sorteditems.index(item));return py_iter(__accu0__)}())]+=1;
var __left0__=tee(iterable);var a=__left0__[0];var b=__left0__[1];
print(group);
value;
var A=np.random.rand(N,N,N);
min(scores);
self.__c;
active_required(my_view);
days.__getslice__(index,null,1)+days.__getslice__(0,index,1);
export var maxsentences=random.randrange(1,5);
var d=dict({});
var lst=[5,20,15];
df_bad_idea.sum();

export var firstLine=infile.readline();
var __left0__=tempfile.mkstemp();var fd=__left0__[0];var filename=__left0__[1];
var x=np.linspace(0,10,20);
var all_data=all_data.append(df,__kwargtrans__({ignore_index:true}));
z.write(os.path.join(absdir,f),os.path.join(zip_dir,f));
var result=[];
self._value+n;
self.assertEqual(200,res.code);
export var mean_of_distribution=numpy.mean(data);
sio.seek(0);
g.head(2);
PorterStemmer().stem_word(word);
vecData.columns=vec.get_feature_names();
list(range(5));
self.notifyObservers(old,self.value);
var f=tempfile.TemporaryFile();
var data=urlfile.read(chunk);
var response=service_request.execute();
var d=function(){var __accu0__=[];for(var [i,j]of t)__accu0__.append([printer(i),printer(j)]);return dict(__accu0__)}();
Add();
self.ses.post(url_auth,__kwargtrans__({data:my_dict}));
var res=dict({});
var d=dict({});
out[-1].append(ele);
export var lilfoo=Foo();
var out=StringIO.StringIO();
self.py_name;
self.my_float_layout.add_widget(self.button);
var a=[];
var p1=figure(__kwargtrans__({plot_width:900,plot_height:500,y_range:[8,10.5],tools:TOOLS}));
export var module_obj=__import__(module);
self.timeout.reset(_timeout);
file.close();
var d=dict([[1,2]]);
self.int2base(self.current-1,self.base);
display.start();
tuple([a,b,c]);
datadex[x]+1;
var val=np.fromiter(list(d.py_values()),int);
var op=s.py_pop();
var foo=MyClass();
var f_set=f[f.year>=2002&f.year<2010];
2<arr^arr<6;
funct(...args,__kwargtrans__(kwargs));
cat.save();
ax.hold(true);
timer.timeout.connect(tick);
settings.py;
export var est=stats.pareto.fit_fr(rvs,1,__kwargtrans__({frozen:[np.nan,locest,np.nan]}));
plot(t,s2);
var obj=C();
self.closefd=closefd;
export var te=time.time();
1;
export var proj_path=os.path.dirname(script_path);
issubclass(bool,int);
x;
var request=HttpRequest();
var args=parser.parse_args();
dothis(item);
print(form);
ch.setLevel(logging.INFO);
a+b+c;
var val=function(){var __accu0__=[];for(var [_,g]of groupby(l))__accu0__.append(len(list(g)));return __accu0__}()[-1];
export var n_component=np.array([curvature*ds_dt*ds_dt]*2).transpose();
tuple([a,c]);
var tokens=astr.py_split();
setup(__kwargtrans__(configuration));
check_thread.start();
ax.scatter(xs,ys,zs);
var b=Swallow();
[];
var result=remove_rows(df);
var cax=fig.add_axes([.27,.8,.5,.05]);
os.kill(pid,SIGTERM);
csvdata.set_index(mergecols,__kwargtrans__({inplace:true,drop:false}));
cPickle.dumps(d,-1);
complements.append(Math.pow(2,depth+2)+1);
fhd.close();
edgePoint.y+=self.bounds.size.height/2-self.center.y;
var file_name=part.get_filename();
var c=get_config();
var __left0__=tuple([[],[]]);var x=__left0__[0];var y=__left0__[1];
parser.print_help();
export var ratings_rdd=transformed.map(function __lambda__(r){return Rating(r.user_id,r.item_id,r.rating)});
var c=function(){var __accu0__=[];for(var i=0;i<n;i++)for(var comb of combinations(x,i+1))__accu0__.append(comb);return __accu0__}();
searchbox.py_clear();
var a=np.arange(N);
points.append(tuple([1,0]));
self.k=min(k,len(train_data));
var __left0__=divmod(int(hhmm),100);var hour=__left0__[0];var minute=__left0__[1];
var seen=set();
GLX.glXMakeContextCurrent(d,w,w,context);
scnt+=1;
var fig=figure();
print(datetime.datetime.now()-now);
var then=time.time();
var arr2=np.zeros(tuple([arr.shape[0],arr.shape[1]+column_pad]));
var obj=dict({});
var fig=plt.gcf();
print(__mod__(format,tuple(row)));
export var frame1=cv.QueryFrame(video1);
print(sum(l,tuple([])));
var domain=splitting[1];
var pen=QtGui.QPen(QtCore.Qt.red);
new_solution.append(data.py_pop());
var c=pycurl.Curl();
virt-install;
var browser=webdriver.Firefox(profile);
df.loc[1];

reverse_d[key_str].append(key);
dotted_notation.setParseAction(name_notation_type);
print(b.build_lib);
var im=im.crop(tuple([left,upper,right,lower]));
export var tidx=pd.to_datetime(tidx).sort_values();
var rcode=response.rcode();
var result=datetime.strptime(date,format);
db.connect();
dol[k].append(d);
export var cv_im=cv.CreateImageHeader(pil_im.size,cv.IPL_DEPTH_8U,1);
export var stemmer=PorterStemmer();
var subset=table[np.in1d(table.IDs,id_list)];
antigravity;
int.__init__(self,...arg,__kwargtrans__(kwarg));
t[n-1];
test_module_1.py;
instance;
process(path);
print(richard);
assert_frame_equal(df1.py_sort(__kwargtrans__({axis:1})),df2.py_sort(__kwargtrans__({axis:1})),__kwargtrans__({check_names:true}));
var c=C(0,1,2);
(function(){var __accu0__=[];for(var x of links)if(x[0]==node)__accu0__.append(x[1]);return __accu0__})();
ax.plot([-1,0,1,2],list(range(4)));
export var NUM_REPEATS=int(sys.argv[2]);
(s.index[0]-s.py_name).total_seconds();
COMMIT;
tf.write(sf.read());
false;
(function(){var __accu0__=[];for(var i=0;i<stream.read_ui16();i++)__accu0__.append(ChildClass(stream));return __accu0__})();
GuiMixin_FunctionalityB.__init__(self);
var a=a.__get__(C);
pacific_now.utcoffset().total_seconds()/60/60;
np.lib.stride_tricks.as_strided(arr,new_shape,new_strides);
var d=dict();
print(answer);
data.append(val);
var __left0__=tuple([sys.argv[1],sys.argv[2]]);var username=__left0__[0];var password=__left0__[1];
driver.init();
var combined=defaultdict(list);
idict[sub_name]=new_dict;
Potato(__kwargtrans__(validated_data));
GL.glShadeModel(GL.GL_FLAT);
source.close();
var a=numpy.array(function(){var __accu0__=[];for(var i of m)__accu0__.append(n+datetime.timedelta(__kwargtrans__({minutes:i})));return __accu0__}());
[FreeTDS];
reimport(module);
tuple([A.__getitem__([tuple([0,null,1]),~drops]),drops]);
m.hexdigest();
ActionChains(context.browser).send_keys(Keys.ARROW_UP).perform();
params;
self.factory.broadcastMessage(message);
var y=pattern.match(x).groups();
pool._processes;
true;
print(sorted(list(func(n))));
var h=ax.plot(x,rv.pdf(x),__kwargtrans__({lw:2}));
m_to_N.__setitem__([tuple([0,null,1]),0],-nrange.__getslice__(1,null,1).reshape(tuple([n-1,1])));
export var column_align=gtk.Alignment(0,0,0,0);
df.index=df.index.map(str);
export var traingraph=tf.Graph();
f.write(libtorrent.bencode(torfile.generate()));
links[word].push_back(word.c_str());
tuple([n,[n]]);
datetime.datetime(2012,10,4,1,0,51,759E3);
[1,2]==[2,1];
var soup=BeatifulSoup.BeautifulSoup(data);
is_ok[idx]=np.logical_or(is_ok[idx],val);
tuple([BaseObject.initialized,ObjectOne.initialized,ObjectOne.x,ObjectTwo.initialized,ObjectTwo.x]);
a+=1;
self.obj=obj;
export var maxIntEl=max(function(){var __accu0__=[];for(var element of elements)__accu0__.append(int(element[0]));return py_iter(__accu0__)}());
deleteself.mapping[key];
tmr.start();
var n=len(points);
nodes.append(key);
(function(){var __accu0__=[];for(var pos of range(0,len(seq),size))__accu0__.append(tuple(seq.__getslice__(pos,pos+size,1)));return py_iter(__accu0__)})();
var smtp=smtplib.SMTP();
var end_time=Column(Integer);
print(l);
df.corr();
total;
self.total+=1;
print(a.shape);
plt.bar(X.__getslice__(0,-1,1),Y,__kwargtrans__({color:C,width:X[1]-X[0]}));
m.p;
var A=sps.coo_matrix(tuple([v,tuple([i,j])]));
print(list(missing_elements(L,0,len(L)-1)));
var __left0__=A.shape;export var D1=__left0__[0];export var D2=__left0__[1];
export var n_tr_1=(y_train!=0).sum();

var r=int(max(0,255*(ratio-1)));
print(first_fifty_results[0].media_url);
var py_name=Column(String);
var username=NullColumn(db.String(80));
self.electric_conductivity=electric_conductivity;
y_sorted;
self._queue=Queue(__kwargtrans__({maxsize:1}));
blocks.append(f.read(BLOCK_SIZE));
var a=np.array([9,9,9,9,9,9,9,9,9,9]);
ax_axis.offsetText.set_visible(false);
var word=word.rstrip();
var __left0__=a.__getslice__(10,40,4);var b=__left0__;var c=__left0__;
__builtin__.__import__=newimp;
pcolor(data,__kwargtrans__({cmap:new_map}));
var len1=len(s);
export var DEVELOPMENT=true;
var f=np.vectorize(f);
print(s);
runrec(srcname);
current_list.append(tuple([header_id,header.string]));
u_x.append(len(s)-1);
options.parse_command_line();
var code=marshal.load(f);
print(results.py_get());
ar.__getslice__(0,0,1);
u_y.append(s[-1]);
do_other_stuff_to_header(line);
var data=get_image_data(infile);
s.__getslice__(-amount,null,1);
y.__setslice__(0,null,null,np.where(mask,np.nan,r*np.sin(t)));
self.__parser.add_section(attr);
formatfunc(thing);
var r2=(x-cx)*(x-cx)+(y-cy)*(y-cy);
var r=re.search(pat,txt);
mysum+=Math.pow(a-b,2);
export var py_version=sys.version_info.__getslice__(0,2,1);
app.route(...args,__kwargtrans__(kwargs))(view_func);
df2;
var diag=[-1]*n+[1]*2;
dict.__delitem__(self,key);
self.m[r][c];
var total=0;
print(i);
math.factorial(6);
cls(__kwargtrans__({py_name:py_name,email:email}));
var array=np.empty(len(args),__kwargtrans__({dtype:np.object}));
print(user_input);
df[cat_columns]=df[cat_columns].apply(function __lambda__(x){return x.cat.codes});
export var sql=__mod__(f.read(),params);
pil_im;
tuple([-9,-5]).__getitem__([-9,-8,-7,-6]);
var ax=s.cumprod().plot();
result2.add(k+1);
hash-r;
a.append(a_t);
print(i);
export var authed=g.get_user();
self.loop=asyncio.new_event_loop();
post_install();
ufmt_str.format(...args);
var b=a[s];
q|=Q(__kwargtrans__({py_nameicontains:merchant}));
var children=list(_get_ordered_child_nodes(node));
export var middle_min=df.iloc.__getslice__(first_row+1,last_row,1).min().min();
var metadata=MetaData();
var value=models.IntegerField();
var number=m.group(1);
export var imgf=ndimage.gaussian_filter(img,blur_radius);
var x=abs(x);
var df=psql.frame_query(sql,cnxn);
export var difference=end_date-start_date.py_replace(end_date.year);
sys.float_info.max;
var __left0__=map(Suppress,tuple([td,tdend,keytd]));var td=__left0__[0];export var tdend=__left0__[1];export var keytd=__left0__[2];
print(sess.run(y));
d[v]+=1;
export var X_neg=X[y_neg];
var location=forms.ModelChoiceField(__kwargtrans__({queryset:Location.objects.all()}));
getattr(self._original,key,value);
var __left0__=np.triu_indices(tot_vec,1);var r=__left0__[0];var c=__left0__[1];
t[0];
q.put(2);
self.some_method=self.some_method;
a.__setslice__(0,1,null,[4]);
py_next(g);
var parsed=ET.parse(url_link);
my_list;
var handler=urllib.request.HTTPHandler();
join(idx,n);
print(uploaded_files);
self.testdata=open(TESTDATA_FILENAME).read();
y[s]=np.arange(s.size);
random.randint(0,1E4);
var labels=[0,1,1,2];
y[nans]=np.interp(x(nans),x(~nans),y[~nans]);
var app=Flask();
var seconds=float(milliseconds)/1E3;
var x=np.empty(5);
var f=Foo();
var console=logging.StreamHandler();
newSingle.getHeader().setField(transacttime);
do_something(chunk);
var today=datetime.datetime.today();
children.add(v);
myobject.__acl__=load_acls(myobject);
var data=json.loads(document);
print(last_array.__getitem__([211147,9]));
l.py_sort(__kwargtrans__({key:alphanum_key}));
clf.estimators_[0];
export var ttaken=time.time()-ttaken;
self.initfunc();
export var payload_hash=hashlib.sha256(request_parameters).hexdigest();
var difference_in_years=date_as_float(end_time)-date_as_float(start_time);
self.dot.set_offsets(tuple([x,y]));
delattr(cls,py_name);
np.array([100-x,x+y,100-y]);
enddef;
channel.settimeout(2);
var sftp=s.open_sftp();
var Base=declarative_base();
var yedges=np.linspace(0,N,nbin);
var person=Person.query.get_or_404(id);
my_instance.a();
var pairs=list(itertools.product(l1,l2));
destination.save();
var output=sys.argv[2];
tuple([string,stream.__getslice__(pos+1+length,null,1)]);
len(block);
export var itrange=list(range(100));
export var local_datetime=datetime.now(local_tz);
d[x]+=1;
var d=datetime.date(2012,2,7);
print(x);
sorted(coursesList,__kwargtrans__({key:len}));
image.write(chunk);
(function(){var __accu0__=[];for(var node of nodelist)__accu0__.append(node.aspython());return __accu0__})();
Architecture;
Management;
(function(){var __accu0__=[];for(var [word,times]of list(anagrams.py_items()))if(times>1)__accu0__.append(word);return set(__accu0__)})();
C[A.nonzero()]=A[A.nonzero()];
export var titles=[];
var __left0__=tuple([matrix.shape[0],matrix.shape[1]]);var rows=__left0__[0];var cols=__left0__[1];
data[n]=line.rstrip();
export var jsonText=json.dumps(arr);
export var encryptionKey=function(){var __accu0__=[];for(var i=0;i<len(s)-5;i++)__accu0__.append([s[i],s[i+5]]);return dict(__accu0__)}();
export var dict_str=json.dumps(my_dict);
setattr(self,unit,value);
false;
show();
var a=float(x);
dis.dis(foo);
var test=sum(tests);
var x=np.arange(Norig*Norig).reshape(tuple([Norig,Norig]));
plt.setp(patches,__kwargtrans__({linewidth:0}));
self.scene.addPolygon(QtGui.QPolygonF(self.click_positions),pen);
threads.remove(thread);
all(function(){var __accu0__=[];for(var x of self.sets)__accu0__.append(__in__(value,x));return py_iter(__accu0__)}());
self.value=value;
export var __rxor__=__xor__;
Foo.bar.__self__===Foo;
parser.print_help();
cur.connection.autocommit(true);
self.val-=1;
thequickbrownfoxjumpsoverthelazydog;
self.send_response(200);
b.compute(date,date);
os.remove(temp_file_name);
ws.write(row,1,row);
do_totally_different_thing();
db.foo.remove(dict({}));
self._s.sendto(str(data),self._server);
weights[k]=0;
file_A.do_A_stuff;
self.mc=wx.media.MediaCtrl(self,__kwargtrans__({szBackend:wx.media.MEDIABACKEND_WMP10}));
session.modified=true;
col_sums.__setitem__([tuple([0,null,1]),j],col_sums.__getitem__([tuple([0,null,1]),j-1])+row_sums.__getitem__([tuple([0,null,1]),j]));
ar[np.bitwise_or.accumulate(~ar.__getslice__(0,null,-1)).__getslice__(0,null,-1)];
export var answer_for_first_set=list(filter_bits);
ipdb>X.__getitem__([k,k]).shape;
var b=pandas.get_dummies(a);
export var tmp2=np.sqrt(Math.pow(scalar1-a.__getitem__([tuple([0,null,1]),tuple([0,null,1]),1]),2)+Math.pow(scalar2-a.__getitem__([tuple([0,null,1]),tuple([0,null,1]),2]),2));
var p=Process(__kwargtrans__({target:worker}));
mod;
var attachment=MIMEText(fp.read(),__kwargtrans__({_subtype:subtype}));
export var new_result=np.zeros(im.shape);
self[i-1][j-1]==1;
peasant.knock_over();
self._s.sendto(str(data),self._addr);
keyfunc;
QtCore.QTimer.singleShot(5E3,self.showChildWindow);
id(df._data);
plt.subplot(2,2,2);
var j=np.random.randint(0,ncols-1,numdense);
var arr=np.random.random(tuple([1E3,1500]));
self.est=est;
var sent=np.zeros(tuple([len(vocab),len(text_idx)]));
len(self._data.py_values);
pp.close();

print(obj.__class__);
var twitter=Twython(APP_KEY,APP_SECRET,OAUTH_TOKEN,OAUTH_TOKEN_SECRET);
diff.py_sort();
a.dtype;
var mask=np.where(array>=x&array<=y,true,false);
var fig=plt.figure();
var combinedRDD=combinedRDD.map(convert);
boto.storage_uri();
a_list;
sum(function(){var __accu0__=[];for(var [a,b]of zip(u,v))__accu0__.append(Math.pow(a-b,2));return py_iter(__accu0__)}());
doSomethingWith(new set([new set([user.username|tojson|safe])]));
export var eff=50-complex(0,10);
df;
value;
var singlet_list=[2];
udf(function __lambda__(c){return label_maker_topic(c,topic_words)});
do_whatever();
self.assertEqual(captcha_count,0);
self.openfile();
__mod__(x,2)==0;
var ans=np.take(myarray,sorted(set(ind)-set(rm)));
a-a;
var t=threading.Thread(__kwargtrans__({target:test}));
f.close();
msg_decorator;
tmp_file.flush();
var found=false;
GL.glClear(GL.GL_COLOR_BUFFER_BIT);
-math.log(theta*beta);
time.sleep(max(requiredDuration-connectionDuration,self._latency));
current.append(label2index[label]);
var cur=con.cursor();
words.py_update(test.py_split());
last_result;
print(x);
print(value);
export var allUuids=[];
print(args.c);
print(qs);
wset.add(narrow);
A[0]=previous_A[1];
_multigen;
print(pat.search(content).group());
get_page_labels(pdf);
var a=Vector(1,2);
var number=0;
np.multiply(arr1[i],arr2,__kwargtrans__({out:out[i].reshape(tuple([1,arr2.size]))}));
a.copyApply(A.foo);
logging.INFO;
toimage(data).show();

d[nan2];
set(function(){var __accu0__=[];for(var x of list(storage.py_values()))if(list(storage.py_values()).count(x)>1)__accu0__.append(x);return __accu0__}());
foo();
f.close();
print(tuple([w,follows(w)]));
print(py_next(self.fibo));
fid.close();
print(max_number(1E3));
tuple([self.x,self.y]);
id(b);
export var blockwise_times=[];
(function __lambda__(func){if(typeof func=="undefined"||func!=null&&func.hasOwnProperty("__kwargtrans__"))var func=self.test;return func()});
login(self.request,form.user);
filters.py_pop();
web.setPage(downloader.page);
var content=db.Column(db.String(255));
print(content);
var abc=myFunction;
true;
var output=PdfFileWriter();
export var uglybuf=src.read(1);
map(function __lambda__(x){return x.extend([0]*(inner_max_len-len(x)))},lst);
p.show();
var r=urllib.request.urlopen(datasrc);
var ax=fig.add_subplot(2,1,1);
self.file.flush();
var indexes=np.zeros_like(data,__kwargtrans__({dtype:int}));
u[s]=np.arange(n);
HttpResponseRedirect(self.get_success_url());
[];
print(a.__getitem__([idx==0,tuple([0,null,1])]));
var Z=np.zeros(tuple([2,2]));
var __left0__=tuple([tuple([255,0,0]),tuple([0,255,0]),tuple([0,0,255])]);export var RED=__left0__[0];export var GREEN=__left0__[1];export var BLUE=__left0__[2];
export var nNew=np.random.random_integers(__kwargtrans__({low:1,high:100,size:1}));
var sts=os.waitpid(p.pid,0);
index.append(start);
var url=sys.argv[1];
res1.__setitem__([tuple([0,null,1]),k],U.__getitem__([tuple([0,null,1]),tuple([0,null,1]),k]).dot(V.__getitem__([tuple([0,null,1]),k])));
var r=[];
print(line);
random.randrange(start*f,stop*f,step*f)/f;
expatparser.Parse(xml);
var title=db.StringProperty();
export var jsonobject=fromJSON(jsonstring);
var pid=os.fork();
cv.Rectangle(image,pt1,pt2,cv.RGB(255,0,0),5,8,0);
Math.floor(number/2);
print(x);
export var running=true;
count(5);
var link=soup.link.nextSibling;
export var lb=tk.Listbox(root,__kwargtrans__({width:50,height:20,yscrollcommand:scrollbar.set}));
t.push(s.py_pop());
var ttaken=time.time();
repo.remotes.origin.push();
var qs=Room.objects.filter(__kwargtrans__({py_name:self.py_name}));
var response=urllib.request.urlopen(sampleRequest);
export var __initialized=false;
var __left0__=im.size;var w=__left0__[0];var h=__left0__[1];
var app=QtGui.QApplication(sys.argv);
url+=urllib.parse.urlencode(self.params);
main();

var data=f.read();
print(query);
t1.start();
print(ast.literal_eval(assignments_removed));
self.sendHello();
df;
var model=treeview.get_model();
bitstring.BitString(__kwargtrans__({uint:i,length:(i.bit_length()+7)/8*8})).bytes;
newshuffle(l);
print(chunk.py_values);
new set([new set([companyForm.locations()])]);
export var fmt_values=function(){var __accu0__=[];for(var x of self.py_values)__accu0__.append(formatter(x));return __accu0__}();
-a.py;
export var Alfa=list(modules.py_keys());
worker_process.start();
app.exit(1);
var window=Gtk.Window();
print(ndimage.map_coordinates(data,[zi,yi,xi]));
print(self.server.arg1);
int(number+.5);
var data=json.dumps(function(){var __accu0__=[];for(var r of csv_reader)__accu0__.append(r);return __accu0__}());
nonRepetitive_x.insert(0,x[0]-1);
var key=min(py_iter(self.py_keys()),__kwargtrans__({key:function __lambda__(x){return abs(x-key)}}));
Chainable(self.data,method);
nx.path.bidirectional_dijkstra(G,1,2);
var cols=[];
var scroll=gtk.ScrolledWindow();
self._task=asyncio.ensure_future(self._run());
generations[-1];
var result=function(){var __accu0__=[];for(var i of diffs)__accu0__.append(i>maximum/2);return __accu0__}();
Audio(__kwargtrans__({url:sound_file,autoplay:true}));
app.logger.setLevel(debug);
self.factory=RequestFactory();
curl.setopt(pycurl.FOLLOWLOCATION,1);
x.__setitem__([[0,2],[1,4]],np.nan);
print(a,b,file2freq.__getitem__([a,b]));
self._cache.append(py_next(self._g));
h.Send();
export var eyecols=np.tile(I,n).T;
var grouped=s.groupby(__kwargtrans__({level:0}));
pool.join();
var file=matplotlib.font_manager.findfont(font);
plot(s.__getitem__([tuple([0,null,1]),0]),s.__getitem__([tuple([0,null,1]),1]),__kwargtrans__({color:dark2[c]}));
export var col_paddings=function(){var __accu0__=[];for(var i=0;i<len(table[0]);i++)__accu0__.append(get_max_col_w(table,i));return __accu0__}();
frame.worker.join();
var __left0__=np.meshgrid(new_row,new_row);var xi=__left0__[0];var yi=__left0__[1];
daemon.start();
y_series.append(int(z));
HttpResponseRedirect(url);
var x=numpy.arange(0,8,.1);
var form=ArticleForm(__kwargtrans__({instance:article}));
print(arreq_in_list(myarr0,mylistarr));
var s1=set(tuple([0,1]));
print(dest_path+filename);
blosum.py_update(function(){var __accu0__=[];for(var [[a,b],val]of list(blosum.py_items()))__accu0__.append(tuple([tuple([b,a]),val]));return py_iter(__accu0__)}());
sys.argv=[str(num)];
np.put(a,np.where(a>1)[0],1);
t.join();

self.webSocket.broadcastMessage(request.content.read());
var wr=csv.writer(your_csv_file,__kwargtrans__({quoting:csv.QUOTE_ALL}));
timeit[Model.objects.filter(__kwargtrans__({date_created__startswith:today}))];
export var ewma=pandas.stats.moments.ewma;
X.mean();
here_using_my_module.py;
print(s2);

dict_df;
tempset.py_update(x);
var client=requests.Session();
sum(matrix.__getitem__([row,tuple([0,null,1])]));
deleteself.data[index];
self.attr2=attr2;
(function(){var __accu0__=[];for(var i of self.columns)__accu0__.append(item[i]);return __accu0__})();
print(img.getpixel(tuple([0,0])));
var score=pickle.load(file);
export var trainY=np.array(function(){var __accu0__=[];for(var j of trainY)for(var i of j)__accu0__.append(i);return __accu0__}());
socketIO.wait_for_callbacks(__kwargtrans__({seconds:1}));

do_stuff(chunk);
export var myhtml=lxml.html.document_fromstring(string);

bool(set(array1)&set(array2));
g();
sys.exit(!result.wasSuccessful());
self.tables.append(self.rows);
datetime.utcfromtimestamp(ts);
var result=Test.objects.filter(__kwargtrans__({actions__contains:kwargs}));
fig.patch.set_alpha(0);
x.f2()(1);
var bar_id=Column(Integer,ForeignKey(Bar.id));
export var dur2=1;
var end=datetime.strptime(end_date,date_format);
self[attr]=value;
server.serve_forever();
export var rozza=Person.objects.first();
layout.addWidget(self.list_widget);
len(s);
value;
print(np.all(Z.A==np.maximum(X.A,Y.A)));
export var region2=thresh2<gryim;
export var serialized_user=yaml.dump(user);
var size=icon.availableSizes()[0];
add(10,5);
fig1.colorbar(im,__kwargtrans__({ax:ax1}));
var b=[9,8,7,6,5];
var p=QPixmap.grabWidget(widget);
var fullpath=os.path.join(root,f);
self.log.Show();
hello(a,b);
export var zaxis=np.linspace(0,1,20);
var form=_get_link_form(request.POST);
print(myFunct());
df2;
var length=len(encoded);
node.left=Node();
print(fn.match.groups());
axes[1].append(string2.index(i));
var t=np.linspace(0,T,N);
unsearched.task_done();
0;
print(serv_resp_body);
Animal.objects.all();
mycode.my_func();
deleteself.dict[item];
print(id(string.__getslice__(-10,-5,1)));
ax1.set_xlim(-4,15);
export var mult_fact=np.ones(shape,__kwargtrans__({dtype:int}));
var request=urllib.request.Request(sys.argv[1]);
df.to_csv(tmp,__kwargtrans__({index:false}));
var length=len(l1)+len(l2);
var cond=np.array([[false,true,true],[true,false,true]]);
self.loop.call_soon_threadsafe(self.loop.stop);
var s=StringIO.StringIO();
increment_deal_count(dbconn,userID);
df.groupby(idx2.astype(object)).sum();
var text=tk.StringVar();
self.save();
export var b_h=tf.Variable(tf.zeros([n_out]));
logger.addHandler(console);
lst1.__getslice__(0,1,1)+interleaveHelper(lst2,lst1.__getslice__(1,null,1));
var order=list(range(len(some_list)));
export var df_wide=df_indexed.unstack().fillna(0);
print(py_typeof(b));
var tf=tempfile.NamedTemporaryFile();
var data=self.data.__getslice__(0,self.size,1);
isinstance(x,number.Number);
export var Arr=np.random.standard_normal([500,201,2,2]);
var logger=get_task_logger(__name__);
var e=Element(qualifiedName,namespaceURI,prefix);
var b=np.sin(theta);
parser.set_defaults(__kwargtrans__({py_metatype:do_stdout}));
var z=tf.matmul(x,y);
var d=defaultdict(int);
!(len(non_unique_list)==len(set(non_unique_list)));
output.append(x);
var img2=np.uint8(np.random.randint(0,255,tuple([480,640])));

index_li.append(idx);
new set([new set([email])]);
zip_longest(...args,__kwargtrans__({fillvalue:fillvalue}));
var l=[];
print(row.text);
-1;
sys.modules.py_update(old_modules);
py_typeof(_);
self.process();
parent.remove(r);
print(commaSeparatedList.parseString(s).asList());
self.after(100*i,change_name);
var model=PandasModel(your_pandas_data);
isinstance(t,str);
print(py_reversed(conn.execute(query).fetchall()));
dict({});
export var neisets=function(){var __accu0__=[];for(var i=0;i<g.vcount();i++)__accu0__.append(set(g.neighbors(i)));return __accu0__}();
rmdir(root);
var headers=dict({});
math.degrees(math.atan(1));
export var nparr=np.fromstring(img_str,np.uint8);
var message=inbox.Messages.GetFirst();
print(emp.py_name,emp.title);
self.root.addHandler(self.qh);
b.__doc__;
rainbow_fill(X,Y);
self.start_time=time.time();
(function(){var __accu0__=[];for(var tuple of tuples)if(__in__(term,tuple))__accu0__.append(tuple);return __accu0__})();
self.__getitem__(k);
fh.setLevel(logging.INFO);
user.save();
df;
export var headline=models.CharField(__kwargtrans__({max_length:100}));
var digits=escapesequence.__getslice__(2,null,1);
foo.close();
z[list(np.indices(z.shape.__getslice__(0,-1,1)))+[a]]=1;
var data=[];
myapp/somelibfile.py;
self.char_y+=10;
var points=function(){var __accu0__=[];for(var _=0;_<1E3*2;_++)__accu0__.append(random());return __accu0__}();
monkey.patch_all();
var x=np.linspace(0,10);
var p=Process(__kwargtrans__({target:f}));
diff(nges_uneval,n[5]);
self.cookies=MyCookieJar();
os.killpg(0,signal.SIGKILL);
allocate(tmp(gridsize,gridsize,gridsize),work(gridsize));
print(strc);
list(d.py_keys());
unpack.append(item);
result;
var new_list=[];
var soup=BeautifulSoup(content);

print(find_skew(list(range(256))));
session.close();
Package-1/namespace/module1/__init__.py;
print(true);
var parser=MyArgumentParser();
compressor.write(chunk);
export var felf=__all__[sys._getframe().f_code.co_name];
var is_admin=os.getuid()==0;
true;
req.setUrl(url);
var fig=plt.figure();
print(n);
callable(elt.text);
PyLong_AsByteArray(lnum,a,a.size,0,1);
var p=MyPickler(f);
ps.image(box,im,dpi);
np.random.shuffle(idx);
email_message;
y[i][j]=x[i][j];
print(today-BDay(4));
key_result[name_key]=groups[0][name_key];
var the_list=numpy.array(list(range(0,101,10)));
print(line1.buffer(EPS).intersects(LineString([pt,pr])));
var s=StringIO();
var y=T.dmatrix();
var birth_years=function(){var __accu0__=[];for(var [idx,nm]of enumerate(py_name))__accu0__.append([nm,year[idx]]);return dict(__accu0__)}();
export var formattedJson=json.dumps(teams,__kwargtrans__({indent:1,sort_keys:false}));
print(Animal.__bases__);
f.__defaults__=tuple([f]);
var ax=fig.add_subplot(1,2,1);
export var sinv=np.sin(x_axis_rotations);
var d=np.diff(x);
fout.write(line);
export var current_script=os.path.realpath("./P2JSnippets.py");
var app=Flask(__name__);
self.globals[key];
var cap=cv2.VideoCapture(0);
export var max_occurrences=max(counter_list,__kwargtrans__({key:itemgetter(1)}))[1];
mlab.surf(subtract.outer(sin(xx),cos(xx)));
d[6]=1;
excel.Visible=false;
var u=np.hstack([[0],u]);
path;
(function(){var __accu0__=[];for(var v of x)__accu0__.append(lower_keys(v));return __accu0__})();
self.directory=os.listdir(...args);
var __left0__=tuple([b,a+b]);var a=__left0__[0];var b=__left0__[1];
var b=Base();
canvas.setPageSize(tuple([lHeight,lWidth]));
sphinx-apidoc-o/my/docs/live/here/my/source/lives/here;
var __left0__=tee(iterable);var a=__left0__[0];var b=__left0__[1];
print(sortSparseMatrix(m));
var result=defaultdict(dict);
var c=b.__getslice__(0,2,1);
export var bad_data=data.__getitem__([0,tuple([0,null,1])])[data.__getitem__([0,tuple([0,null,1])])==0];
b[a==k]=v;
tuple([HTTPRedirectHandler(),urllib.request.HTTPHandler(__kwargtrans__({debuglevel:0}))]);
var neighbors=G.neighbors(root);
var form=CategoryForm;
inputs.remove(s);
self.assertEqual(t[0],str(NumberedVersion(...t)));
list(lower.__getslice__(lower.index(strs[0]),lower.index(strs[-1])+1,1));
export var copy_list=copy.deepcopy(org_list);
limit+=1;
print(randomList);
print(find_parent(D,class_set));
np.PyArray_ITER_NEXT(itf);
self.assertEqual(some_method(),false);
fig.set_size_inches([8,12]);
doit();
var a=Field();
extra_compile_args.append(arg);
parent_map[el].remove(el);
p1.daemon=true;
self.fp.seek(offset,...args);
var a_set=set(a);
export var visible=Column(Boolean,__kwargtrans__({py_default:true}));
var dirname=os.path.dirname;
var shp=L[0].shape;
print(grids[0].dtype,grids[0].nbytes);
export var data_con=bytes.fromhex(data);
f.close();
a.ravel()[5]=99;
var __except0__=StopIteration;__except0__.__cause__=null;throw __except0__;
plt.show();
B.__init__(self,a,b);
var app=params.py_get(cls._APP_PARAM);
export var plain_text=get_plain_text(soup);
var fig=plt.gcf();
var a=int(round(time.time()*1E3));
export var local_beta=tf.identity(self.beta);
self.checkBoxList.append(checkBox);
var content=models.TextField(__kwargtrans__({max_length:250}));
var b=np.array(b);
pprint.pprint(obj);
df.col1=pd.to_datetime(df.col1);
cache[args];
var rs=r1.__getitem__([np.lexsort(r1.T),tuple([0,null,1])]);
var statement=query.statement;
plt.ylabel(ax2_label);
pc.append(Path.CLOSEPOLY);
stuff.py;
cam.release();
self.v=v;
count[c]+=1;
self.get_queryset().in_group(group);

var mask=np.cumsum(mask,__kwargtrans__({out:mask,axis:1}));

self.index-1;
df;
export var maks=max(flows,__kwargtrans__({key:function __lambda__(k){return len(flows[k])}}));
var __left0__=s.py_split();var py_name=__left0__[0];var val=__left0__[1];
var x=Math.floor(len(self.right)/2);
len(dir(anIntOBJECT));
self.fingerprints.add(fp);
list(df[df>df.quantile(.8)].dropna().index);
1/0;
var url=request.build_absolute_uri(request.get_full_path());
utf8.__getslice__(0,i,1);
export var dz=NP.random.randint(1,5,10);
export var dev_sda1=boto.ec2.blockdevicemapping.EBSBlockDeviceType();
out.seek(0);
var s=np.array([20,1E4,1E4]);
shutil.rmtree(dir_name);
var Hvalue=someoperation(Hnodes);
lenIter(s.__getslice__(1,null,1));
print(len(object_keys));
var result=dict(defaults);
var b=np.random.rand(N,1);
var result=[];
newlist.append(word);
var a=np.random.rand(100*100).reshape(tuple([100,100]));
print(stream.py_get(cv.CV_CAP_PROP_FRAME_COUNT));
print(nums.std(__kwargtrans__({axis:1})));
Py_DECREF(pyth_val);
fmap[fid]+=1;
var w=wcs.WCS(__kwargtrans__({naxis:2}));
tuple([_NestedClassGetter(),tuple([WidgetType,self.__class__.__name__])]);
a.somefield=somevalue;
console_handler.setFormatter(log_formatter);
gevent.joinall(jobs);
child.setText(0,str(value));
tuple([[-2,-1,0,1,2]]);
pymysql.install_as_MySQLdb();
df;
curl.setopt(pycurl.SSL_VERIFYHOST,2);
layout.set_font_description(font);
var line_number=random.randint(0,total_num_lines);
var app=flask.Flask(__name__);
ch.setLevel(logging.DEBUG);
self.axes.plot(self.data.__getitem__([0,tuple([0,null,1])]),self.data.__getitem__([1,tuple([0,null,1])]),self.data.__getitem__([2,tuple([0,null,1])]));
plt.xticks(__kwargtrans__({rotation:25}));
tuple([PassengerID,Survived,Pclass,Name,Sex]);
var df=pd.DataFrame(__kwargtrans__({index:missing}));
var c=wmi.WMI();
show(p1);
var html=page.read();
var a=numpy.array([]);
print(df);
someDict[num].append(line);
a+b;
var output=4*np.sum(integrand(a+h*np.arange(1,num,2)),__kwargtrans__({axis:1}));
var loop=asyncio.new_event_loop();
conn.close();
export var cnts=df.sign.iloc[diffs.drop_duplicates().index].value_counts().to_dict();
var widget=InlineButtonWidget();
myA[np.where(myA>val)[0].__getslice__(0,n,1)]=0;
plt.xlim([-1,10]);
servicemanager.Initialize();
export var __modpath__=module_path(main);
Foo.bar==foo;
stream.write(input_array);
var msg=MIMEMultipart();
ls[1]=ls[1]-(ls[1]-ls[0])/2;
var a=calc_a(d1,d2);
var x=np.array([[10,0,10,0],[1,1,0,0],[9,9,9,0],[0,10,1,0]]);
export var noay=word.__getslice__(0,len(word)-2,1);
a1+csr_matrix(tuple([x-a1[ind],tuple([[0]*x.size,ind])]),tuple([1,a1.size])).toarray();
export var outdir=os.path.dirname(outfilename);
py_next(generator());
print(resultMD5);
var a=a.reshape(tuple([-1,1]));
os.close(self.pipe[0]);
logging.setLoggerClass(CustomLogger);
rollback();
count-=1;
s.append(ALPHABET[r]);

var title=models.CharField(__kwargtrans__({max_length:100}));
true;
var m=mmap.mmap(f.fileno(),0,__kwargtrans__({prot:mmap.PROT_READ}));
deleteobj.__dict__[self._name];
var table=d.add_table(numrows,numcols);
export var twodarray=np.array(map(function __lambda__(x){return x.flatten()},threedarray));
PyObject_Print(item,stdout,0);
export var len_part=int(math.ceil(len(data)/float(k)));
print(etree.tostring(html));
var data=urllib.parse.urlencode(py_values);
export var input_zip=ZipFile(input_zip);
sleep(randint(10,100));
sublime.set_timeout(test_progress_bar,100);
df;
print(s);
self.__class__.PARAM;
var x1=min(x_normalised)-1;
var client=self.get_current_client();
daynum+=1;
var start=get_start_input();
zip(ii,y[ii]);
win.setCoords(0,0,10,10);
__mod__(a,10)+digit_sum(a/10);
var url=urlparse.urljoin(url,match.groups()[0].strip());
deletetime.sleep;
var a=dict({});
var output=function(){var __accu0__=[];for(var [k,v]of list(output.py_items()))__accu0__.append(tuple([k])+v);return __accu0__}();
var __left0__=process.communicate();var out=__left0__[0];var err=__left0__[1];
var files=list(function(){var __accu0__=[];for(var x of filePath.iterdir())if(x.is_file())__accu0__.append(x);return py_iter(__accu0__)}());
c(1);
pairLambs[2]();
Queue.put(self,tuple([datetime.now(),item]),false);
tf.file.close();
blocks[0][0];
var ax2=fig.add_subplot(gs[1],__kwargtrans__({sharey:ax1}));
true*2;
color_bar.set_alpha(1);
var a=numpy.random.normal(__kwargtrans__({size:1E4}));
os.makedirs(dest_dir);
var seconds=tdelta.total_seconds();
var count=count==N?0:N+1;
self.events.append(item);
var f=sympy.exp(x+y)-sympy.sqrt(z);
var A=numpy.array([[5,5,5],[8,9,9]]);
var X=numpy.random.normal(__kwargtrans__({size:tuple([100,10])}));
print(clean_text);
var Session=sessionmaker();
np.int(x);
var request=urllib.request.Request(BASE_URL,__kwargtrans__({headers:HEADERS}));
var codepoint=ord(c);
async_list.append(action_item);
len(done)==len(container);
var res=res*scaling_factor;
var args=parser.parse_args();
var l=list(range(10));
b[elem-1].append(indx);
stack.extend(item);
var vec=function(){var __accu0__=[];for(var i of indices)__accu0__.append(random.randint(minval,maxval));return __accu0__}();
__mod__(comp.string.encode(enc),params).decode(enc);
text+=e.strip();
self._reject(request,REASON_BAD_TOKEN);
export var detA=np.linalg.det(A);
print(parsed_values);
export var merged_tuple=tuple([min(c_start,n_start),max(c_end,n_end)]);
var args=command.strip().py_split();
print(sum(score_pairwise(seq1,seq2,blosum,-5,-1)));
plt.plot(dates,py_values);
var end_date=datetime.datetime.today();
http_server.listen(8888);
var __left0__=s.accept();var c=__left0__[0];var addr=__left0__[1];
deleteself._x;
l.append(__mod__(number,base));
p.pretty(key);
result.append(copy(path));
export var new_func=func;
fn(__kwargtrans__(arglist));

var root=tk.Tk();
queue.append(start);
var description=models.TextField(__kwargtrans__({max_length:200}));
math.factorial(temp);
app.debug=true;
lines.append(str(self.problem_mark));
df.assign(__kwargtrans__({z:df.x*df.y}));
pylab.grid();
num+=1;
os.umask(oldmask);
var y=all_lists(negate(x));
var __except0__=KeyError(key,val);__except0__.__cause__=null;throw __except0__;
event.widget.quit();
F.X.__getitem__([tuple([0,null,1]),0]);
unittest.main();
plt.grid(true);
print(df);
var mydict=pickle.load(output);
out+=str(serial.read(1));
array[slices];
y.__getslice__(0,null,2);
var tmp=np.bincount(idx,w);
p.close();
cax.set_array(colorv);
ns.c;
true;
keystone.roles.list();
export var lstatout=str(ftp.lstat(i)).py_split()[0];
var now=datetime.datetime.now();
print(convert(52));
py_typeof(d.day);
print(value);
var t=field.field.widget.__class__.__name__;
elem.tag=elem.tag.__getslice__(i+1,null,1);
self.ui.gridLayout.addWidget(self.ui.dragDataEdit,0,0,1,1);
var i=np.arange(M).__getitem__([tuple([0,null,1]),np.newaxis,np.newaxis]);
list(s.cookies.py_keys());
var draw=ImageDraw.Draw(img1);
tuple([codecs.decode(s,originalencoding,errors),len(s)]);
CM[bmask]=data[bmask];
var z=zipfile.ZipFile(StringIO.StringIO(r.content));
var a=t;
seen.add(field.data);
receiver.interrupt();
var b=np.array([4,5,6]);
var __left0__=numpy.meshgrid(x,y);var X=__left0__[0];var Y=__left0__[1];
var x=uniq(0,[[[0]]*5]*5);
buffer[loc]=line.strip();
cls(len(a),a.ctypes.data_as(c_double_p));
Story.append(p);
event_box.show();
var ch=logging.StreamHandler();
var arr=df.a.py_values;
var X=np.random.randint(0,99,tuple([6,5]));
var t=socket.htons(int(port));
export var svos=[];
(success_condition(r)?okays:errors).append(r);
fig.add_axes(ax);
alters[0];
var p=c_char_p(s);
var foo=decorator(dec_args)(foo);
var row=cur.fetchall();
var main_loop=tornado.ioloop.IOLoop.instance();
var indices=np.arange(data.shape[0]);
var new_queryset=new_queryset|obj.get_ancestors();
self._x=value;
var __left0__=prs.parse_args(cmdlineargs);var argsdict=__left0__[0];var unknownargs=__left0__[1];export var execlist=__left0__[2];
var p=Process(__kwargtrans__({target:f}));
ax.contourf(xi,yi,zi,5,__kwargtrans__({cmap:plt.cm.Oranges}));
nested[outkey][inkey]=val;
sys._argv=sys.argv.__getslice__(0,null,1);
db.session.add(stuff);
var y=map(str,x);
a+step==b;
EmailMessage(subject,message,__kwargtrans__({to:to,from_email:from_email})).send();
var parsed=urlparse.urlsplit(url);
elementwiseApply(add,[4,0],4);
time.sleep(.05);
binvalues.read(file,num_lon*num_lat);
d_sum[topkey][key]=dic1[topkey][key];
self.button.move(250,50);
var y=np.arange(10);
var array2=np.array(zip(...list2));
self._x;
self.val*=2;
authenticate(username,password);
var starts=np.where(xadf==1)[0];
self.lframe.pack(__kwargtrans__({side:tk.TOP}));
export var associations=[];
helper(stack.__getslice__(0,null,1),[]);
num_words+=len(words);
var __left0__=function(){var __accu0__=[];for(var [t,s]of zip(tuple([int,float,bool,str]),input.py_split()))__accu0__.append(t(s));return __accu0__}();var a=__left0__[0];var b=__left0__[1];var c=__left0__[2];var d=__left0__[3];
print(process_backspaces(process_shifts(test_string)));
export var HTTPCACHE_EXPIRATION_SECS=0;
var socket=context.socket(zmq.REP);
self.axes.zz_dataLim.intervalx;
new set([new set([field.errors])]);
s.enterabs(t0+10+i,0,f,tuple([t0]));
var a=np.random.rand(1E5,2);
var y=tf.constant([[1,1],[0,1]]);
var b=[true]*len(a);
print(tuple([one,four,ten]));
var fp=webdriver.FirefoxProfile();
export var reading=ser.readline().decode();
zip(a,a);
pos+=len(char);
add.addtwo(4,5);
self.cool_dict[attr];
var f=interpolate.interp1d(theoryX,theoryY);
doc.build(elements);
it.chain.from_iterable(function(){var __accu0__=[];for(var i=1;i<n+1;i++)__accu0__.append(it.repeat(i,i));return py_iter(__accu0__)}());
var a=[1,2];
export var jpeg=buf.getvalue();
var A=np.random.sample(tuple([n,n]));
freqs[char]+=1;
var res=[];
var im=pl.contourf(data.__getitem__([i,tuple([0,null,1]),tuple([0,null,1])]));
EARTH_RADIUS_KM*c;
textbox.pack();
var A=10*np.eye(10)+np.random.rand(100).reshape(10,10);
print(c.shape);
is_sub_with_gap(b,a);
D.__setitem__([i,j],abs(x[i]-x[j]));
py_sort(less)+equal+py_sort(greater);
var tree=objectify.fromstring(your_xml);
df;
c.perform();
true;
f(__kwargtrans__({x:5}));
review.save();
print(x);
df[date_col_name]=pd.DatetimeIndex(df.index);
var __left0__=P.wrap(doc.width,doc.bottomMargin);var w=__left0__[0];var h=__left0__[1];
bisect.insort_left(l,8);
export var web=QWebView();
autoCov+=(Xi[i+k]-Xs)*(Xi[i]-Xs);
result+=numbers.__getslice__(i,j,1);
var y=eval(x);
var tuples=itertools.zip_longest(...A);
evens.append(i);
var filename=sys.argv[1];
random.randint(1,100);
var r=coo_matrix(tuple([data,tuple([row,col])]),__kwargtrans__({shape:tuple([M,N])}));
pylab.ylim([0,1E5]);
ports_strs.append(str(port));
export var local_ret=local_p.wait();
var elapsed=timeit.default_timer()-start_time;
(function(){var __accu0__=[];for(var [k,v]of list(aliases.py_items()))if(__in__(q,k)||__in__(q,v))__accu0__.append(tuple([k,v]));return __accu0__})();
var __left0__=tuple([Math.floor(width/2),Math.floor(height/2)]);var x=__left0__[0];var y=__left0__[1];
task2.join();
Thread(__kwargtrans__({target:reader,args:[process.stderr,q]})).start();
var result=[];
f(2,covered_list);
square[np.logical_not(has_neighbor)]=0;
false;
print(B.shape);
export var aspect=ih/float(iw);
second_axis.set_yticks([.2,.4]);
DummyRequest.__init__(self,postpath,session);
vals[idx];
py_next(testcsv);
print(a[0]);
some_module.hello_world();
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
SimpleHTTPServer.SimpleHTTPRequestHandler.do_GET(self);
self.lower()==other.lower();
var points=[];
var __left0__=os.path.splitext(original_file);var filename=__left0__[0];export var file_extension=__left0__[1];
1;
mofile;
var __left0__=argv;var a=__left0__[0];var b=__left0__[1];var c=__left0__[2];var d=__left0__[3];
result[0];
reversel.append(orig.py_pop());
self.K=self.P.dot(spsolve2(S.T,C).T);
var offset=datetime.fromtimestamp(epoch)-datetime.utcfromtimestamp(epoch);
var __left0__=precalc(jmat);export var JM1=__left0__[0];var JM2=__left0__[1];
results.append(right[0]);
var arr=np.array(your_list,__kwargtrans__({dtype:np.int16}));
var result=[];
cache[key];
self._index=dict();
var lst=df.A.py_values.tolist();
print(paragraphsep);
dir.append(d);
var p=function __lambda__(x){return sum(function(){var __accu0__=[];for(var phi of phis)__accu0__.append(phi(x));return py_iter(__accu0__)}())};
sdl2.SDL_RenderDrawPoint(renderer,offset.x+x,offset.y-y);
plt.pcolor(X,Y,v,__kwargtrans__({cmap:cm}));
blogpost.tags=new_tags;
condition.notify();
var y=np.zeros(2*len(bins),np.float);
a();
self.imgdir=fcb.get_filename();
var result=f.read();
a.py_sort();
value;
dict.__getitem__(self,key);
export var kpt_data=h_r.reshape(-1,phase.shape[0]).dot(phase);
var a=np.random.random(tuple([16,16]));
context;
chr(97);
var loop=asyncio.get_event_loop();
var __left0__=np.ogrid.__getitem__([tuple([0,n,1]),tuple([0,m,1])]);var i=__left0__[0];var j=__left0__[1];
self.__dict__;
var diff_unique=function(){var __accu0__=[];for(var v1 of diff_list)if(!__in__(v1,set(source_list)))__accu0__.append(v1);return __accu0__}();
var manager=multiprocessing.Manager();
var x=op.inputs[0];
os.dup2(desired_output_file.fileno(),sys.stdout);
var form=AnimalForm(request.POST,__kwargtrans__({instance:animal}));
memset(a.data.as_voidptr,0,len(a)*sizeof(int));
handler.setLevel(level);
export var firstJan=date.today().py_replace(__kwargtrans__({day:1,month:1}));
it.starmap(func,it.repeat(args));
var ax=plt.subplot(111);
traceback.print_exc();
free(my_array);
l.append(val);
col.set_sort_column_id(0);
var result=Queue.Queue();
bloc122.__setitem__([[0,1,2],[0,1,0],[0,2,2]],0);
var te=time.time();
var __left0__=im.get_extent();var x1=__left0__[0];var x2=__left0__[1];var y1=__left0__[2];var y2=__left0__[3];
var root=lxml.html.fromstring(n);
var __left0__=vals.__getslice__(0,8,1);export var dpoints=__left0__[0];export var dloops=__left0__[1];var dtime=__left0__[2];export var bT=__left0__[3];export var sT=__left0__[4];export var hI=__left0__[5];export var LI=__left0__[6];var tm=__left0__[7];
f.add_subplot(2,1,n);
a.append(1);
var a=[0]*(imax-imin+1);
print(data.dtypes);
c.__doc__;
bananas(dingo);
self.pid=pid;
var fig=plt.figure();
var x=[[4],[6,4,9],[4,6],[0],[]];
self.message=message;
self.allowed=self.funcB;
tuple([x,x+1,x+2]);
print();
print(function(){var __accu0__=[];for(var x of uniqList)__accu0__.append(x.classId);return __accu0__}());
d.py_setdefault(i,[]).append(j);
setattr(namespace,k,v);
export var installed_apps=function(){var __accu0__=[];for(var app of apps.get_apps())__accu0__.append(app.__name__);return __accu0__}();
print(strong_tag.text,strong_tag.next_sibling);
self.crawler.engine.pause();
var result=self.send(soapenv);
var tree=etree.fromstring(xml).getroottree();
plt.subplot(212);
var value=int(field);
var event=wait_for_event();
lis.append(function __lambda__(){return 0});
export var coal=Jewel();
print(selectiveEscape);
tuple([np.rad2deg(lat),np.rad2deg(lon)]);
self.mapping[key];
tuple([1,4,false]);
var out=np.concatenate(tuple([pic,separator_str]),__kwargtrans__({axis:1})).tostring();
var s=codeErr.getvalue();
link.cwd(path);
var messages=list(function(){var __accu0__=[];for(var _f of messages)if(_f)__accu0__.append(_f);return __accu0__}());
var l=[true,true,false,true];
deletedict[k];
sf.flush();
(function(){var __accu0__=[];for(var [k,v]of kwargs.py_items())__accu0__.append([getattr(self,k),v]);return dict(__accu0__)})();
print(my_tz.normalize(my_tz.localize(dt)+delta));
crypts;
var p2=np.array([[1,1]]);
ax.set_ylim(min(y)-offset,max(y)+offset);
var a=np.array([true,true,true,false,false]);
saver.restore(sess,dir_path+ckpt_file);
var a=5;
var x=np.asarray(x);
signal.signal(signal.SIGWINCH,update_terminal_width);
Py_DECREF(v);
export var now_timestamp=time.time();
var x=[];
var HSV_tuples=function(){var __accu0__=[];for(var x=0;x<N;x++)__accu0__.append(tuple([x*1/N,.5,.5]));return __accu0__}();
var df=DataFrame(table);
var data=data.decode(encoding,data).encode(new_coding);
false;
var body=Column(UnicodeText,__kwargtrans__({nullable:false}));
logutils.set_up_only_once();
out.append([ele]);
var x=np.random.rand(1E3);
var cur=con.cursor();
print(err.args);
var data=f.read(length);
int(newSave);
var app=wx.App(false);
var draw=ImageDraw.Draw(mask);
var clf=clf.fit(X.__getitem__([tuple([0,50,1]),tuple([0,null,1])]),y.__getslice__(0,50,1));
doStuffStart();
var start=datetime(2015,1,1);
current.append(x);
time.clock();
var result=function(){var __accu0__=[];for(var r of cursor.fetchall())__accu0__.append(SQLRow(cursor,r));return __accu0__}();
var __left0__=spline.roots();var r1=__left0__[0];var r2=__left0__[1];
self.timer.timeout.connect(self.reply);
var d=collections.defaultdict(list);
var __left0__=optimize.curve_fit(f,x,y,tuple([0,0,0,0,0]),__kwargtrans__({sigma:sigma}));var p1=__left0__[0];var _=__left0__[1];
r.content;
export var tmpsize=client_socket.recv(1);
len(c);
reduced.py_pop(key,0);
print(i);
Py_DECREF(it);
var window=gtk.Window();
var dz=[5,4,7];
js[key]=eval(value);
var __left0__=tuple([10,10,10]);var x0=__left0__[0];var y0=__left0__[1];var z0=__left0__[2];
var match=max(d.get_matching_blocks(),__kwargtrans__({key:function __lambda__(x){return x[2]}}));
t.join(timeout);
var today=pd.datetime.today();
self._password;
x[1];
true;
export var shost=self.le.text();
plt.axes([.45,.45,.45,.45]);
save_cookies_lwp(r.cookies,filename);
export var zdd1=rdd1.zipWithIndex().map(function __lambda__(v_k){return tuple([v_k[1],v_k[0]])});
var __left0__=np.meshgrid(np.linspace(-1,1,100),np.linspace(-1,1,100));var x=__left0__[0];var y=__left0__[1];
my_dict[key]=new_value;
process_data(datum);
var coord=tf.train.Coordinator();
prime_form(9,1,5);
thread_.start();
export var pcmat=PCA(trainX,n);
print(f(v,0,sum));
exit();
m.indices=__mod__(indices+1,m.shape[1]);
pl.set_line(line,[p1x,p2x],[p1y,p2y]);
var app=QApplication([]);
var screen=pygame.display.set_mode(SIZE,pygame.RESIZABLE);
output.write(output_compressor.compress(chunk));
var out=[];
tmpfile.write(oldline);
self.STDOUT_FILENO=sys.stdout.fileno();
export var end_index=first_index+len(s1)-1;
var feed=feedparser.parse(content);
var Z=random.random(tuple([50,50]));
var df=drop_col_n(df,2);
var m=adate.month-1;
var c=np.arange(24).reshape(tuple([4,6]));
tuple([s.__getslice__(0,p,1),s.__getslice__(p+1,null,1)]);
var idx0=np.concatenate(I);
img.save(path);
var __left0__=plt.subplots(__kwargtrans__({nrows:4,ncols:4,sharex:true,sharey:true}));var fig=__left0__[0];var axes=__left0__[1];
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
map(word_to_action,w);
sidebar_data_views.append(fn.__name__);
var df=pd.DataFrame.from_records(foo).T;
float.fromhex(new_hex_equiv);
var a=np.arange(15);
print(o.x);
var groups=[];
py_next(it);
Any();
self.im.seek(j);
var a=np.arange(5,__kwargtrans__({dtype:np.double}));
var output=re.sub(regex,subst,output);
var dx=np.diff(np.py_sort(x));
var __left0__=tuple([int(years),int(Math.floor(remainder/avgmonth))]);var years=__left0__[0];var months=__left0__[1];
export var listLen=len(listA)/2;
var A=numpy.array(A);
df;
df;
var users=function(){var __accu0__=[];for(var uid of db)__accu0__.append(User.load(db,uid));return __accu0__}();
print(enc.encode(obj));
var CM=ax2.contourf(XC,YC,YC,__kwargtrans__({levels:levls,norm:LogNorm()}));
var avg=avg-datetime.timedelta(__kwargtrans__({microseconds:avg.microseconds}));
var app=QtGui.QApplication(sys.argv);
ctx.text_path(text);
var window=Gtk.Window();
self.obj[frozenset(idx)];
urlretrieve(urlparse.urlunparse(parsed),outpath);
Map(...maps);
var d=dict({});
export var pred=clf.predict(priv_fea[basic_feature_names]);
self.__missing__(key);
column_align.show();
var a=Foo();
var x=list(range(1,10));
ret.time=self.time.__getitem__(item);
var temp=np.dot(datam.__getslice__(i,null,1),datam[i].T);
var cmyk=[];
var bins=np.linspace(0,1,nbins+1);
var ax=plt.gca();
self;
printMetric();
[5,6];
var data=client.recv(size);
ax.cla();
fo.seek(0);
var __left0__=np.unravel_index(idx_1d,a.shape);export var x_idx=__left0__[0];export var y_idx=__left0__[1];
print(key);
pool.close();
G.remove_node(bad_minor[0]);
var no_integers=list(filter(is_integer,mylist));
float_str;
var instance=reservation.instances[0];
df;
s[-1];
head.read();
z.dtype.names;
var files=function(){var __accu0__=[];for(var fname of filenames)__accu0__.append(stack.enter_context(open(fname)));return __accu0__}();
f();
l.count(true)==1;
A.__init__(self);
clf1.fit(X,y);
arr[x]=row;
reactor.listenTCP(8080,site);
print(msg.CC);
[s];
result.append(word_map.py_get(w,0));
chain.from_iterable(function(){var __accu0__=[];for(var i of args)__accu0__.append(islice(iterable,...i));return py_iter(__accu0__)}());
var age=forms.IntegerField();
var worksheet=workbook.add_worksheet();
pool.apply_async(mytask,tuple([runlist[sendcounter],q]));
A.__setslice__(0,null,null,function(){var __accu0__=[];for(var i of new_order)__accu0__.append(A[i]);return __accu0__}());
self.serv=socket.socket(socket.AF_INET,socket.SOCK_STREAM);
self.buf=cStringIO.StringIO();
var authhandler=urllib.request.HTTPBasicAuthHandler(passman);
export var tlen=len(elidetxt);
f.write(xmlstr);
var y=np.linspace(1,2,101);
print(s.recv(65E3));
var c=numpy.zeros(tuple([4,2,2]));
(function(){var __accu0__=[];for(var [_,x]of nlargest(k,function(){var __accu1__=[];for(var x of it)__accu1__.append(tuple([random.random(),x]));return py_iter(__accu1__)}()))__accu0__.append(x);return py_iter(__accu0__)})();

var groups=function(){var __accu0__=[];for(var [k,g]of groupby(seq,function __lambda__(x){return x!=-1}))if(k)__accu0__.append(list(g));return __accu0__}();
print(e,q);
bins[i]+=1;
process(function(){var __accu0__=[];for(var [i,v]of zip(generator(),counter))__accu0__.append(i);return py_iter(__accu0__)}());
frame[~(b1|b2)]=0;
export var TestCase=decallmethods(login_testuser)(TestCase);
a===a+tuple();
export var sorted=numpy.py_sort(a);
logging.config.dictConfig(LOGGING);
cv2.floodFill(result2,maskborder,seed_pt,tuple([0,255,0]));
var t=pd.DataFrame(dict(__kwargtrans__({val1:[1,2,0,0],val2:[0,0,2,1]})),df1.columns);
var cookie=Cookie.SimpleCookie();
var idx=a.cumsum();
var copy_list=org_list.__getslice__(0,null,1);
var app=Flask(__name__);
var frame=pd.DataFrame(data);
PyObject_Del(self);
print(response.read());
export var plugin_callable=entry_point.load();
var f=open(fn);
list(menu_links.py_items());
var __left0__=[1,2];var item=__left0__[0];
f.seek(0,os.SEEK_END);
round(a,4);
var d=Image._getdecoder(self.mode,d,a,self.decoderconfig);
print(d.__getitem__([,2]));
var i=bisect.bisect_left(float_list,2.5);
connection.close();
0;
print(combine(a,b));
item;
export var kp2=detector.detect(img2);
do_all_the_processing();
frame.py_values.squeeze();
test[5]=6;
var img=Image.open(BytesIO(img));
round(x*4)/4;
current_group.extend(group);
var p=Popen(cmd.py_split(),__kwargtrans__({stdout:PIPE,stdin:PIPE,stderr:STDOUT,bufsize:1}));
export var baz=blar();
outer_sum+=inner_sum*dk;
self.flush();
var __left0__=y;self._y=__left0__;self.y=__left0__;
var serializer_class=ExperimentSerializer;
export var student_detail=Student.objects.all();
test.test_func();
ax.patch.set_alpha(0);
export var local_t=t.astimezone(Local);
textobj.set_text(wrapped_text);
self.cursor=self.conn.cursor();
export var min_index=len(L);
var __left0__=zip(...matches);var b=__left0__[0];var c=__left0__[1];
enable();
export var carx=Car.objects.all();
tuple([len(listing),total]);
var a=C();
var res2=slice_array(arr,4);
var u=np.cumsum(dist);
tuple([[1,1,1,1,0]]);
loop();
obj;
export var file_like_object=io.BytesIO(byte_array);
var now=datetime.now(local_tz);
Foo.lock=threading.Lock();
test1.put();
p.waitFor();
(function(){var __accu0__=[];for(var text of myList)for(var i of textwrap.wrap(text,10))__accu0__.append(i);return __accu0__})();
var painter=QPainter();
var fh=logging.FileHandler(filename);
var answer2=result2.py_get(__kwargtrans__({timeout:10}));
var df=pd.DataFrame(dict(__kwargtrans__({A:np.arange(len(tidx))})),tidx).sort_index();
var out=np.zeros_like(x);
print(link);
var instance=ModClass();
var loop=asyncio.get_event_loop();
var output=ImageOps.fit(im,mask.size,__kwargtrans__({centering:tuple([.5,.5])}));
var __left0__=tuple([[],[]]);export var one_array=__left0__[0];export var two_array=__left0__[1];
s1.__getslice__(0,i,1);
bound_method(...args);
stream.stop_stream();
temp_handle.write(command);
py_typeof(0);
df.Time=pd.to_timedelta(df.Time);
web.Response(self.format_data(data));
Orange.feature.Continuous(str(d.py_name),__kwargtrans__({number_of_decimals:0}));
self.HTMLDATA.append(data);
t.start();
grandFather.appendChild(tag);
var im=cv2.imread(sys.argv[1]);
print(args_name);
help(WebKit.WebView);
topic.users.py_get(__kwargtrans__({pk:1}));
print(e);
var last=value[1];
var left=randint(0,len(L));
print(self.b);
self.file.readline();
var bounds=function(){var __accu0__=[];for(var lst of lists)__accu0__.append(len(lst));return __accu0__}();
A.__setslice__(0,null,null,D[slc]);
var __left0__=ax.pie(np.abs(np.random.randn(5)));export var wedges=__left0__[0];var texts=__left0__[1];
var instances=function(){var __accu0__=[];for(var r of reservations)for(var i of r.instances)__accu0__.append(i);return __accu0__}();
word_list.append(k);
var __left0__=np.mgrid.__getitem__([tuple([-4,4,complex(0,100)]),tuple([-4,4,complex(0,100)])]);var plotx=__left0__[0];export var ploty=__left0__[1];
var __left0__=np.mgrid.__getitem__([tuple([-4,4,complex(0,100)]),tuple([-4,4,complex(0,100)])]);var ploty=__left0__[0];var plotz=__left0__[1];
var row=xy[1];
called.append(true);
soup4.div;
particle.append();
var names=pd.DataFrame();
var obj=json.loads(chunk.group(2));
var json_data=json.loads(urlobj);
len(data);
self.fig=ax.figure;
Grid.columnconfigure(grid,x,__kwargtrans__({weight:1}));
show();
print(df1[mask]);
Clothing|Menswear|Pants|Shorts;
print(Xfit_mono_ind);
header+=file_handle.readline();
p[np.triu_indices(p.shape[0],1)]=pf;
f;
self.close();
count_primes(Math.pow(10,9));
chained.extend(li.py_pop(0));
var b=np.average(a,__kwargtrans__({axis:2}));
var g=g.add_legend();
pprint.pprint(list(gen));
print(t);
var app=QtGui.QApplication([]);
export var recstack=np.r_.__getitem__([arrs.__getitem__([tuple([0,null,1]),tuple([0,null,-1])]),arr1.__getitem__([tuple([0,null,1]),tuple([0,null,-1])])]).view(rdtype).view(np.recarray);
self.count>0;
export var method_code=sys._getframe().f_code;
export var _crawled=[];
list(run(5,5));
np.transpose(np.matrix(data));
var a=np.arange(4).reshape(2,2);
form.show();
new set([new set([page.title])]);
var func_name=method.__func__.__name__;
var x=x+b;
var __left0__=np.where(z)[0][[0,-1]];export var zmin=__left0__[0];export var zmax=__left0__[1];
q.py_get(false);
exec(sys.arg_set);
var files=os.listdir(dir);
r.real=a.real*b.real-a.imag*b.imag;
print(ps.maybe_random_prime_from_range(4E3,4200));
print(sorted_dict.iloc[2]);
var __left0__=tuple([min(y_data),max(y_data)]);export var y_min=__left0__[0];export var y_max=__left0__[1];
self.parent.id;
_pix_write_implied_format(filename,self,quality,progessive);
ipcounter+=1;

var writer=csv.writer(new_a_buf);
var max_range=np.asarray(max_range,__kwargtrans__({dtype:int}));
var parsed_url=urlparse(url);
pwd.len()<minlen;
MyClass.does_something();
var xfmt=ticker.FuncFormatter(xformatter);
export var inited=false;
var session=Session();
dict(__kwargtrans__({posts_page:_posts_page}));
self.method=method;
var py_values=df.Prices*df.Amount;
var url=urllib.parse.urlsplit(url);
l1.append(i);
var value=get_value(value);
var ax=plt.axes(__kwargtrans__({projection:ccrs.PlateCarree()}));
var fileobj=requests.py_get(url,__kwargtrans__({stream:true}));
var current_dict=current_dict.py_setdefault(letter,dict({}));
admin.site.register(MyGroup,MyGroupAdmin);
var a=np.arange(1,n+1).__getitem__([np.newaxis,tuple([0,null,1])]);
print(content);
export var r_ndegen_tile=np.tile(r_ndegen.reshape(1E3,1),1E4);
gc.is_tracked(d);
show();
xs.append(expr);
self.finished.emit();
var cursor=conn.cursor();
s.dt.components.hours;
var df=pd.DataFrame(data_points);
var column_names=function(){var __accu0__=[];for(var d of cur.description)__accu0__.append(d[0]);return __accu0__}();
var parent=element.getparent();
var ints=list(filter(str.isdigit,line.py_split()));
tuple([4,5,6,7]);
var g=f.__globals__;
var list=[];
self.token.join(function(){var __accu0__=[];for(var s of value)__accu0__.append(str(s));return __accu0__}());
sys.exit(1);
c.A7;
count_dict[base]+=1;
export var asset_alert_setting_id=Column(Integer,__kwargtrans__({primary_key:true,autoincrement:true}));
array[array<0]=0;
skyscrapers[building_number]=BUILDING;
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
meta.reflect(__kwargtrans__({bind:someengine}));
table.py_setdefault(tuple([w1,w2]),[]).append(word);
py_typeof(lst);
var __except0__=StopIteration();__except0__.__cause__=null;throw __except0__;
allelts.add(u);
self.swallow=swallow;
var y=np.sin(x*2)+np.sin(x+1);
C.__init__(self,a,c);
print(results);
print(row);
export var serv_resp=urllib.request.urlopen(serv_req);
print(py_name);
print(draw.get_font_metrics(img,artext));
glClearColor(.5,.5,.5,1);
(0*pq.degC).rescale(pq.degF);
func;
self._array=array;
df;
var d=dict([[s,1]]);
tbsCertificate.decode(cert[0]);
thread.join();
val+1;
MyApplication();
self.popup.show();
print(py_name);
var menu=wx.Menu();
export var maps=[dict(),dict(),dict()];
hanoi(pegs,aux,target,n-1);
var writer=csv.writer(f);
print(line);
print(req.text);
print(filename);
df;
self._end=end;
var i=s.find(t);
var coords=np.column_stack(np.nonzero(img));
Fin;
auth.redeem_refresh_token(service_info.service_resource_id);
story.append(image);
var resp_dict=json.loads(resp_str);
p.showPage();
var q=q_key.py_get();
!any(chain.from_iterable(x));
var B=np.asmatrix(np.arange(N)).T;
var y=extrapolator(dayswanted);
sys.exit(1);
print(root.nodes.node[0].PCDATA);
var ts=pd.Series(np.random.randn(len(rng)),__kwargtrans__({index:rng}));
export var b_symm=(b+b.T)/2;
tf.add_to_collection(collection,clip_weights);
var res=[];
var root=tk.Tk();
self(...args,__kwargtrans__(kwargs))+other(...args,__kwargtrans__(kwargs));
stream.close();
var date=sheet.row_values(rownum)[0];
p.print_help();
var __left0__=tuple([1,1,2]);var dx=__left0__[0];var dy=__left0__[1];var dz=__left0__[2];
G.number_of_edges();
export var outGroup=function(){var __accu0__=[];for(var e of py_items)if(!_filter(e))__accu0__.append(e);return __accu0__}();
cls(data);
counter+=1;
img.write(artwork);

pprint.pprint(A);
var image=numpy.array(image);
var pool=multiprocessing.Pool(__kwargtrans__({initializer:init,initargs:tuple([l])}));
print(set1==set2);
export var iexps=list(range(length_of_int,-1,-1));
print(foo()[0]);
math.atan2(0,0);
var dfr=dfr.fillna(dfr.max().fillna(0)+dfr.isnull().cumsum(__kwargtrans__({axis:0})));
export var some_time_num=mpl.dates.date2num(some_time_dt);
var obj=Child();
a1[i]^=a2[i];
print(py_typeof(my_time));
export var dataFT=fft(data,__kwargtrans__({axis:1}));
var team=team_xpath(row)[0];
var console=logging.StreamHandler();
var py_keys=list(i.py_keys());
set_qt_bindings(sys.argv[-1]);
var fig=plt.figure();
export var shootnum=int(shoot);
var a=[12,4,15,11];
print(i);
self.list=TestListCtrl(self.panel,__kwargtrans__({style:wx.LC_REPORT}));
var d1=pickle.load(fp);
d[value].append(index);
self.im=im;

var result=itertools.chain(qs1,qs2);
print(newurl);
self.assertEqual(some_method(),true);
print(colornames[color]);
var result=[];

tuple([[0,1,0]]);
export var received_socket=socket.fromfd(fd,socket.AF_INET,socket.SOCK_STREAM);
pprint(lod);
df;
var data=list(input_file);
var theta=random.uniform(0,2*math.pi);
var bins=np.linspace(0,1,nbins+1);
var sol=r[r.imag==0&r.real>0].real;

lst.append(1);
atexit.register(readline.write_history_file,histfile);
f.write(json.dumps(settings));
count+=1;
self.visit(node.value);
new_lst.append(int_i);

os.close(0);
var a_list=function(){var __accu0__=[];for(var _=0;_<N_ITEMS;_++)__accu0__.append(tuple([randint(0,100),randint(0,100)]));return __accu0__}();
reps;
parser.close();
Matrix(M);
export var data_from_django=new set([new set([my_data])]);
localFile.write(packet);
var angles=[90,95,75,100];
print(line);
print(matplotlib.__version__);
py_next(cr);
export var word_length=len(x);
application.listen(9999);
export var simplex=tri.find_simplex(uvw);
print(value.i);
selflink.allow_tags=true;
export var bf=cv2.BFMatcher(cv2.NORM_HAMMING,__kwargtrans__({crossCheck:true}));
var l=[1,2];
export var perm1_map=dict(function(){var __accu0__=[];for(var [i,v]of enumerate(perm1))__accu0__.append(tuple([v,i]));return py_iter(__accu0__)}());
print(lines);
var matches=function(){var __accu0__=[];for(var m of pattern.finditer(target))__accu0__.append(m);return __accu0__}();
print(d);
var d=dict();
var numbers=remove_indices(numbers,indices);
no_digits.append(i);
print(x);
print(custom.vformat(templatestring,[],valuedict));
fd.read();
var __left0__=ax.get_legend_handles_labels();var lines=__left0__[0];var _=__left0__[1];
l.append(x+1);
var xx=np.random.randint(0,5,1E6);
arr.shape;
var fig=plt.figure();
self.high=range_list[-1];
res.append(dic);
insert(d,keyList2,value2);
export var bts=pytesseract.image_to_string(img);
var z=np.diff(np.append(-1,i));
var numbers=function(){var __accu0__=[];for(var line of integers)__accu0__.append(int(line));return set(__accu0__)}();
var EMAIL_USE_TLS=false;
mylist[i]=Math.pow(item,2);
db.session.add(user2_from_factory);
cursor.append(dict(zip(fieldnames,py_values)));
export var qimg=QtGui.QImage.fromData(image_data);
var m=ma.masked_where([true,false]*5,arange(10));
main(args);
outer_sum;
[1];
self.load();
nArray[nArray==10]=9999;
var a=(zfront+zback)/(zfront-zback);
var __left0__=a.shape;var rows=__left0__[0];var cols=__left0__[1];
patches.append(self.fill(x,y,__kwargtrans__({closed:false,edgecolor:c,fill:false})));
var event=Event.objects.py_get(__kwargtrans__({content_type__pk:ctype.id,object_id:self.id}));
var a=Math.pow(np.linspace(-1,1,4),2);
li.py_sort();
var first_name=CharField();
print(countOccurencesAtTheEndOfTheList([1,2,1,1,1]));
var py_keys=bucket.get_all_keys(__kwargtrans__({prefix:key_prefix}));
scrapy/linkextractors/lxmlhtml.py;
2+value;
var popen=subprocess.Popen(args,__kwargtrans__({stdout:subprocess.PIPE}));
sched.start();
print(instance.public_dns_name);
self.hline.set_ydata(tuple([y,y]));
1558<[1];
var fig=pylab.figure();
var __left0__=min(function(){var __accu0__=[];for(var [player,a,b]of players)__accu0__.append(tuple([min(a,b),player]));return py_iter(__accu0__)}());export var min_score=__left0__[0];export var min_player=__left0__[1];
logging.basicConfig();

var size=len(f.read());
export var endings=numpy.where(diffs==-1);
app.py;
self.text=text;
print(arr.__getslice__(0,null,1));
kclass;
result;
var __left0__=divmod(mnt,60);export var deg=__left0__[0];export var mnt=__left0__[1];
arr1[k]=2;
export var positions1D=np.dot(positions,dims);
export var bsi=4;
var result=model.objects.py_get(__kwargtrans__(kwargs));
s.__getslice__(end+1-best,end+1,1);
c.setopt(pycurl.WRITEFUNCTION,txtcurl.write);
var Index=list(set(list(df1.index)+list(df2.index)));
print(node.toxml());
export var printable_string=function(){var __accu0__=[];for(var x of your_string)if(__in__(x,string.printable))__accu0__.append(x);return __accu0__}();
var page=urllib.request.urlopen(url);
s1.py_values.append(2);
var a=A();
cls(py_name,bases,dct);
var app=wx.PySimpleApp();
shutil.rmtree(tmpdir);
export var sample_data_rdd=file_sample_rdd.repartition(160);
output.paste(0,__kwargtrans__({mask:mask}));
var result=func(x,y);
subsequences.append([data[-1]]);
list.append(Food(4));
var opener=urllib.request.build_opener(handler);
g.__call__;
dir(Bar);
var __left0__=np.meshgrid(A.__getitem__([tuple([0,-1,1]),1]),B.__getitem__([tuple([0,-1,1]),1]));export var y11=__left0__[0];export var y21=__left0__[1];
var __left0__=minmaxes(alist);var min_x=__left0__[0];var max_x=__left0__[1];var min_y=__left0__[2];var max_y=__left0__[3];
var m=p.match(line);
func(context,...args,__kwargtrans__(kwargs));
Math.pow(x,2)+Math.pow(y,2)+Math.pow(z,2)<=1;
soup;
var frame=pylab.gca();
export var fridays=third_fridays(date.today(),2);
self.server=make_server(self.host,self.port,handler,__kwargtrans__(self.options));
var num_rejects=0;
set_trace();
x<-1E3;
var matrix=[];
print(sys.prefix);
print(colnum_string(28));
zipped.close();
__builtin__.object;
var b=a-numpy.fix(a);
false;
var s=Session();
L.extend([4]*10);
var sourcelines=inspect.getsourcelines(func)[0];
self.v=v;
sfile.close();
4805;
var tempCS1=plt.imshow(frame,__kwargtrans__({cmap:plt.cm.gray}));
var __left0__=tuple([int(n_d[0]),int(n_d[1])]);var n=__left0__[0];var d=__left0__[1];
ts.tm_hour;
ignore[np.ma.minimum(x11,x12)>np.ma.maximum(x21,x22)]=true;
var key=get_cache_key(request,__kwargtrans__({key_prefix:key_prefix}));
x.Foo();
var bins=numpy.linspace(-10,10,100);
var rv=func(...args,__kwargtrans__(kwargs));
0;

export var subprocesses=dict({});
doctest.testmod();
var __left0__=tuple([-miny,-maxy]);var miny=__left0__[0];var maxy=__left0__[1];
regexp-assemble;
var count=0;
var xml=ET.tostring(root);
ax.set(__kwargtrans__({axisbelow:true,xticklabels:[]}));
var i=[0]+numpy.cumsum(function(){var __accu0__=[];for(var i of contribs)__accu0__.append(len(i));return __accu0__}()).tolist().__getslice__(0,-1,1);
V.__getitem__([,0])+V.__getitem__([,1]);
var data=np.random.random_sample(tuple([20,10,10]));
df;
var df=pd.DataFrame(data);
mat.numCols();
curses.mousemask(curses.ALL_MOUSE_EVENTS);
c[0]==n?replacement:match.group(0);
export var log2int_fast=math.frexp(x)[1]-1;
var children=set();
var bytes=fcntl.ioctl(fd,_KDGETLED,bytes);
cell.eventson;
export var splitList=match.group().py_split();
dc.annotation.remove();
print(num);
dst.close();
Fun.py_name;
len(m);
var xx=np.lib.stride_tricks.as_strided(xx,shape,strides);
py_typeof(bytes);
var d=HashableDict(__kwargtrans__({a:1,b:2}));
new_pos+=1;
var a=map(str,a);
self._y=self.y;
print(df);
self.__class__(self.func.__get__(obj,py_metatype));
self.tvcolumn0.pack_start(self.text,true);
m.show();
ws.Columns.AutoFit();
file_in_memory.seek(0);
show();
attr_name_to_attr[attr_name].py_get();
request.PUT=QueryDict(request.body).dict();
var utc_time=utc_time.py_replace(__kwargtrans__({tzinfo:pytz.UTC}));
var newR=np.array(newR);
start+nones+end;
apply_vectorized(funcs,a);
var buf=f.read(4096);
var result=sum(map(mult,pairs));
export var length_line=0;
cond.wait(timeout-current_time+start_time);
server.serve_forever();
time_a_method(m,s);
print(result);
var shifts=[1]*(len(pattern)+1);
year_start+datetime.timedelta(__kwargtrans__({days:iso_day-1,weeks:iso_week-1}));
export var strided=as_strided(a,mask.shape,tuple([0,a.strides[0]]));
f;
var instance=TestClass();
print(df);
plt.sca(current_ax);

export var filetime=time.localtime(filetimesecs);

len(final_subnets);
var i=len(words)-1;

tuple([599999900,6E8]);
x.__setslice__(1,null,null,x.__getslice__(1,null,1)+x.__getslice__(0,-1,1));
d;
var p=argparse.ArgumentParser();
var y=function(){var __accu0__=[];for(var [k,v]of x)if(max(d[v])==k)__accu0__.append(tuple([k,v]));return __accu0__}();
o.write(p);
var idx=np.unique(index).tolist();
np.clip(dat,0,1,__kwargtrans__({out:dat}));
var image=pyexiv2.Image(sys.argv[1]);

some_lib.do_something_with(SomeMockObject);
math.sin(x);
var content=gzip.GzipFile(__kwargtrans__({fileobj:some_file})).read();
export var remove=function(){var __accu0__=[];for(var k of mydict)if(k==val)__accu0__.append(k);return __accu0__}();
print(root.attrib);
self.arr[key];
export var first_day_of_current_month=date.today().py_replace(__kwargtrans__({day:1}));
export var bd=os.path.join(b,d);
var x=np.linspace(0,4,50);
signals.post_save.connect(Revision.send_email,__kwargtrans__({sender:Revision}));
export var towers=np.random.rand(n_towers,2);
tuple([ord(a),ord(b)]);
g();
var response=Response(resp.content,resp.status_code,headers);
export var xrat=width/float(MAXSIZEX);
var __except0__=KeyError;__except0__.__cause__=null;throw __except0__;
export var indentstack=[1];
var c=vs.mean(__kwargtrans__({axis:0}));
var data=numpy.arange(0,16).reshape(tuple([4,4]));
var date=models.DateTimeField();
var a=list(range(5));
panel.draw();
var n=1;
resp.sendRedirect(userService.createLoginURL(req.getRequestURI()));
b.append(6);
var char=msvcrt.getch();
tuple([[15,8,9,6]]);
print(ms.group(1).strip());
var s=set();
export var pyDT=from_excel_ordinal(excelDT);
var ids=avgDists.argsort().__getslice__(0,null,-1).__getslice__(0,n,1);
print(do_add(s,4));
print(link.string);

self.start=start;
socket.inet_ntoa(unpacked);
var record=self.browse([NewId()]);
var fp=os.path.join(root,f);
main();
que.put(a*b);
export var JAVADOC_AUTOBRIEF=YES;
app.setWindowIcon(app_icon);
decorator;
export var now_utc=datetime.utcnow().py_replace(__kwargtrans__({tzinfo:pytz.utc}));
var n=len(data);

max(freqs);
var newlist=list(oldlist|addlist);
spiral_ccw(np.arange(nrow*ncol).reshape(nrow,ncol)).__getslice__(0,null,-1);
print(f(4,2));
fp.write(part.get_payload(__kwargtrans__({decode:true})));
a;
movie_dict[actor].append(key);
var t=app.jinja_env.get_template(template_name);
loop.stop();
export var book_author=BookAuthor.objects.py_get(__kwargtrans__({author:georfe,book:great_american_novel}));
var a=[];
self.wait_for_prompt();
df2;
(ds1+ds2).to_netcdf(new_file);
var sp=parser.add_subparsers();
df;
var x=random.random();
functools.update_wrapper(wrapper,fn);
export var excerpt=deferred(Column(Text));
np.random.seed(1);
grp1.append(s);
buff.append(line);
var p=bk.figure();
out.write(chunk);
max(map(len,py_values));
var counts=list(enumerate(uniq_count(words),1));
self.assertEqual(captcha_count,1);
var __left0__=im.size;var width=__left0__[0];var height=__left0__[1];
(arr-amin)*255/rng;
export var output_iter=map(unwrap,heapq.merge(...input_iters));
var f=sys.exc_info()[2].tb_frame;
var key=cv2.waitKey(20);
var __left0__=cmdp.communicate();export var cmdout=__left0__[0];export var cmderr=__left0__[1];
queryset;
print(item);
export var average_values=np.bincount(ID,py_values[sortidx])/np.bincount(ID);
subVal[key];
var pos=function(){var __accu0__=[];for(var [i,j]of enumerate(lst))__accu0__.append(j-i);return py_iter(__accu0__)}();
print(word);
b.instance_a.save();
var a=a.reshape(a.shape.__getslice__(2,null,1));
var __left0__=ds.GetGeoTransform();var x0=__left0__[0];var dx=__left0__[1];export var dxdy=__left0__[2];var y0=__left0__[3];export var dydx=__left0__[4];var dy=__left0__[5];
self.parent._fsb_controllers.append(self);
export var parent_zip=zipfile.ZipFile(parent_zip_path);
var context=ogl.CGLGetCurrentContext();
__old__getattr__(self,py_name);
closedir(dir_p);
var counts=Counter();
var x=np.fromstring(np.random.bytes(n),np.uint8,n);
var c=np.dot(X.T,Y);
py_next(r);
var factor=inversemodp(A.__getitem__([i,i]),q);
HTMLParser.reset(self);
print(bar);
interleave(s,t,res+t[j],i,j+1,lis);

var series=models.CharField(__kwargtrans__({max_length:50}));
export var post_serializer=PostSerializer(posts,__kwargtrans__({many:true,context:context}));
gevent.spawn(read_stream,p2.stderr);
OneOrMore(blockOfText).parseString(bigHonkingString);
Base.metadata.create_all(engine,__kwargtrans__({tables:[SaneTestModel.__table__]}));
sys.getrefcount(empty);
var model=MyModel;
var __left0__=parser.parse_args();var opts=__left0__[0];var args=__left0__[1];
var df_c=df_a.reindex(df_a.index|df_b.index);
plt.ylim(__kwargtrans__({ymin:-1.1,ymax:1.1}));
time.time.__name__;
bodylist.remove(x);
var df=pd.DataFrame([1,2,np.inf,-np.inf]);
mytask.apply_async(args,kwargs,__kwargtrans__({connection:conn}));
var blob_info=upload_files[0];
stdscr.py_clear();
permutes.append(list(permutations(py_values,subset)));
print(res._size());
op(A,B);
tuple([status,result]);
var mask=x*x+y*y<=r*r;
self.update_prop(legline,orig_handle,legend);
var __left0__=plt.subplots(__kwargtrans__({ncols:2}));var fig=__left0__[0];var axes=__left0__[1];
N-(fmin+1)*f2;
pygame.display.flip();

hash(1);
itertools.chain(self.vals,self._gen_iter());
self.systemTrayIcon=QtGui.QSystemTrayIcon(self);
tokenizer.transform(sentenceDataFrame).show();
cls;
iren.Initialize();
np.import_array();
pickle.loads(pickle.dumps(e));
x.pos[int(x.n)];
var pos=networkx.spring_layout(G);
var arr=np.ndarray(tuple([10,4]),__kwargtrans__({dtype:object}));
export var aSrt=np.py_sort(a.flatten());
2*f;
var start_urls=[];
floodfill(painted_map,POINT_STATE[k],255-color);
f.close();
self[key]=other[key];
var df=pd.lreshape(df,d);
ff.seek(0);
A.__init__(self,py_name);
zf.write(fpath,zip_path);
np.uint8(np.abs(np.int16(img1)-img2));
var x=np.random.normal(__kwargtrans__({size:1E3}));
var y=negate(x);
export var registered=models.DateField();
var start=numpy.array([1,5,7],numpy.int16);
var b=make_chess_board();
export var Ay=np.arange(Aymin,Aymax+dy,dy);
var node=jinja2.Markup(html);
food_ctx.add(tuple([alice,dislikes,pizza]));
modules_to_reload.add(py_name);
var reader=csv.reader(afile,__kwargtrans__({dialect:snift}));
value;

reactor.listenTCP(1025,factory);

false;
e.args;
m(1);
var a=a[~np.isnan(a)].astype(int);
rconsole;
stat_queue.task_done();
fields[key]();
fn;
s.add(4);
table.show();
export var o2=np.argsort(arr2);
production.py;
p.feed(s);
cv2.imshow(win,vis);
var n=len(matrix);
t.join();
export var ym_start=12*start_year+start_month-1;
var weights=faces[2];
var data=f.read();
var foo=Foo(1,2);
valid_strings[start]=tuple(seq.__getslice__(start,start+length,1));
var __left0__=tuple([list(range(10)),tuple(range(10))]);var myList=__left0__[0];var myTuple=__left0__[1];
OrderForm(__kwargtrans__({tickets:available_tickets}));
[testenv];
self.__dict__;
self;
var it=py_iter(it);
var cb=plt.colorbar(im);
var e=etree.fromstring(s);
threading.Thread.__init__(self);
r.withdraw();
self.py_name=py_name;
resource.setrlimit(resource.RLIMIT_STACK,tuple([Math.pow(2,29),-1]));
getline(cin,input_line);
a.__add__(b);
count1+=1;
fig.show();
l.__getslice__(0,2,1);
setattr(TestCase,py_name,login_testuser(obj));
var obj=getattr(obj,attr);
var imgdata=urllib.request.urlopen(href);
buf.bind();
var ax=pylab.subplot(111);
var register=template.Library();
print(countOccurencesAtTheEndOfTheList([1,1,2,2,2,2]));
var mask=np.ones([len(x_2)-1],__kwargtrans__({dtype:bool}));
help(foo.bar);
print(result);
self.density_water=.001;
var bounds=function(){var __accu0__=[];for(var [low,high]of zip(xmin,xmax))__accu0__.append(tuple([low,high]));return __accu0__}();
var result=getattr(im,method);
test.paths();
print(string_list);
__main();
convert(f,2);
var a=[1,2];
var env=Environment();
print(test.param1);
self._db_recycles+=1;
(function(){var __accu0__=[];for(var [node,length]of path_lengths.py_items())if(length==n)__accu0__.append(node);return __accu0__})();
var ns=dict({});
pool.map(process_all,pathfile,1);
str(self());
self.tree=[0]*(n+1);
self.py_name=py_name;
self.members=set();
var g=coo_matrix(tuple([ares,tuple([col,row])]),__kwargtrans__({shape:tuple([2,2])}));
var event_date=models.DateField();
var device=TextConverter(rsrcmgr,retstr,__kwargtrans__({codec:codec,laparams:laparams}));
print(line);
s.add(x);
var temp=dict();
var i=a.tolist().index(2);
an_image.point_data.scalars.from_array(colors);
export var yet=false;
exit(1);
isinstance([],collections.Sequence);
ax.add_patch(rect);
export var set_x=frozenset(x);
widget.init(data_from_django);
result.result();
var __left0__=pts.T;var x=__left0__[0];var y=__left0__[1];
var data=urllib.parse.urlencode(py_values);
var dt=tz.localize(datetime.datetime(2011,6,20,0,0,0,0));
self.selenium[browser].quit();
print(tuple([a,b]));
print(conn.list());
sequence[0];
self.__class__.PARAM;
floor(2*(N-i-1),1+4*i);
var y=x*f(x);
var s=list(s);
ims.append([im]);
f.read(6);
handler2.addFilter(MyFilter(logging.ERROR));
querylist.union(wordlists[wordno]);
sum(function(){var __accu0__=[];for(var v of seq)if(pred(v))__accu0__.append(1);return py_iter(__accu0__)}());
(function(){var __accu0__=[];for(var i of range(0,len(seq),length))__accu0__.append(seq.__getslice__(i,i+length,1));return __accu0__})();
var b1=tf.Variable(tf.zeros([256]));
keepers[key]=tuple([i,row[2]]);
Tprime.sum(-1).sum(-1).sum(-1).sum(-1);
var X_test=X[test_indices];
list(dic1.py_keys())-dic2;
var result=[];
image_samples.append(im.crop(box));
opts;
authenticate(bytearray(creds));
coursesList.py_sort();
var blob_info=upload_files[0];
merge(list1,0,2);
var x=np.zeros(n);
var response=urllib.request.urlopen(url);

combis.append(guess);
var fig=p.figure();

result;
print(total);
export var ssplit=string.py_split();
true;
var __left0__=cap.read();var ret=__left0__[0];var frame=__left0__[1];
print(a.add(1,2));
export var value_to_key=collections.defaultdict(list);
lfilter(num,den,a,__kwargtrans__({axis:0}));
var foo=Foo();
results[parent(u,mapping)].add(u);
myTurtle.right(50);
var description=models.TextField();
response;
tuple([718.7747248407644]);
logger.addHandler(log_handler);
export var Ol=list(Os);
df[ops[op](df[col],val)];
export var loc_dt=eastern.localize(datetime(2002,10,27,6,0,0));
S1+=len(set(ids));
export var metainfo=bencode.bdecode(torrent_file.read());
var soup=BeautifulSoup(browser.page_source);
server.daemon=true;
var top=tkinter.Tk();
p.start();
var parser=argparse.ArgumentParser();
var b=np.copy(identity);
var entity=json.loads(data);
print(blah2);

var p=Process(__kwargtrans__({target:crawler,args:tuple([domain])}));
var result=dict(function(){var __accu0__=[];for(var [key,group]of groupby(sorted(words)))__accu0__.append(tuple([key,len(list(group))]));return py_iter(__accu0__)}());
var now=datetime.datetime.now();
export var cfg=dev.get_active_configuration();
print(date);
var username=db.Column(db.String(20));
var p=argparse.ArgumentParser();
var t=time.time();
var parser=optparse.OptionParser();
lines.append(self.note);
s;
bmp.CreateCompatibleBitmap(srcdc,width,height);
encoding_pipeline.fit_transform(fruit_data);
var bits=bin(ord(c)).__getslice__(2,null,1);
repr(self.data);
gc.set_debug(gc.DEBUG_SAVEALL);
l[0];
var b=np.random.rand(100*100).reshape(tuple([100,100]));
node_data;
self.form=Mock();
export var EMAIL_PORT=587;
period+=1;
var mydict=dict({});
var __left0__=im.size;var w=__left0__[0];var h=__left0__[1];
export var counter2=Counter(function(){var __accu0__=[];for(var [k,v]of list(counter.py_items()))__accu0__.append([k,v/2]);return dict(__accu0__)}());
py_typeof(t.__getslice__(0,1,1));
table[i][W-1]=knapsack(i-1,W);
ff.read();
var ax2=ax1.twinx();
var font=cv2.FONT_HERSHEY_SIMPLEX;
db.create_all();
var root=Tk();
var form=Product(request.form,__kwargtrans__({category:2}));
var res=c.spelling;
var c=df.columns.py_values;
var basename=os.path.basename(py_name);
var __left0__=cv2.threshold(roi_gray,250,255,0);var ret=__left0__[0];var gray=__left0__[1];
ClergySerializer(__kwargtrans__({instance:instance})).data;
mkl.set_num_threads(2);
PyList_SET_ITEM(p,i,item);
d[k]=v;
export var old_stderr_fileno=sys.stderr.fileno();
var __left0__=tuple([0,0]);var last=__left0__[0];export var lastG=__left0__[1];
var subparsers=parser.add_subparsers();

var word=line.strip().lower();
var d1=date(2001,5,1);
var p=subprocess.Popen(cmd,__kwargtrans__({stderr:outputfile,stdout:outputfile}));
var msg=server.recv();
var folder=client.GetResources(__kwargtrans__({q:q})).entry[0];
export var reshaped=function(){var __accu0__=[];for(var [x,y]of zip(vs,newshapes))__accu0__.append(x.reshape(y));return __accu0__}();
export var diff_calendar_days=pd.date_range(a,b).size;
parse(matches.group(0));
arr.size();
optionmenu.grid(__kwargtrans__({column:column,row:row}));
var newlist=[];
var end=len(ranges)-1;
var Z=np.sqrt(Math.pow(X,2)+Math.pow(Y,2))+np.cos(Y);
count+=1;
var points=np.random.rand(1E3,2);
var logits=tf.matmul(hidden,W_logits)+b_logits;
print(counter[input_char]);
print(bybuf());
print(byline());
print(a,b,c);
export var audio_fft=np.fft.fft(a,bestFFTlength(len(a)));
export var digest=hashlib.sha256(pubkey).hexdigest();
var my_list=my_list.insert(0,my_string);
A().f2();
QuerySet._filter_or_exclude=_filter_or_exclude;
print(df);
replchars.sub(replchars_to_hex,inputtext);
py_typeof(b);
export var pub_date=date.today();
export var keyed_dict=defaultdict(list);
export var dept_id=models.CharField(__kwargtrans__({max_length:255}));
export var shadow_password=p.communicate()[0].strip();
bin((1<<8|2)<<8);
date.month;
result.join();
ax.scatter(args,__kwargtrans__({color:py_next(palette)}));
var new_pdf=PdfFileReader(packet);
var od=defaultdict(list);
print(sum(df_subset.C*df_subset.E));
export var cen=-.2+1.2*np.random.rand();
syncdb.Command().execute(__kwargtrans__({noinput:true}));
bool(set(fruits).intersection(fruit_dict2));
var ranges=np.concatenate(function(){var __accu0__=[];for(var count of counts)__accu0__.append(np.arange(count));return __accu0__}());
print_set(email.py_get());
export var database=db;
signal.signal(signal.SIGALRM,handler);
_recursivePop(tree,nodes);
tmpfile.close();
true==1;
img.close();
var c=img.layers[0];
py_typeof(x);
print(row.py_name,np.mean(df2));
df;
as_strided(b,tuple([n-1,n+1]),tuple([b.itemsize*(n+1),b.itemsize]));
var a=sorted(a,__kwargtrans__({reverse:true}));
controllers;
helpers;
var queryset=Bloop.objects.all();
main();
method(self,...args,__kwargtrans__(kwargs));
var a=np.array(a);
var M=NP.empty(__kwargtrans__({shape:tuple([10,5]),dtype:float}));
var changed=function(){var __accu0__=[];for(var [k,v]of list(self.byEmail.py_items()))if(id(person)==id(v))__accu0__.append(tuple([k,v]));return __accu0__}();
export var reversed_dict=defaultdict(list);
print(df2[mask]);
var R=array.shape[0];
self.py_items.append(item);
db.put(entities);
var msg=clientsocket.recv(1024);
var entries=re.py_split(regex,allLines);
arr.__setitem__([tuple([0,null,1]),0],int(10));

print(difft(time(20,40,0),time(22,41,0)));
map(numpy.random.shuffle,array);
print(foo.getI());
var object_list=object_list.filter(__kwargtrans__({user__in:request.user.patients.all()}));
var result=cursor.fetchone();
self.__refs__[self.__class__].append(weakref.ref(self));
true;
df;
admin.site.unregister(Group);

var DBSession=scoped_session(sessionmaker(__kwargtrans__({extension:ZopeTransactionExtension})));
var entity=models.ForeignKey(CancellationEntity);
sqldf(q,__all__);
test.open();
dispatcher.connect(reactor.stop,signals.spider_closed);
var b=numpy.array(function(){var __accu0__=[];for(var i of m)__accu0__.append(n+datetime.timedelta(__kwargtrans__({minutes:i})));return __accu0__}());
var info=response.info();
doc.remove(tag);
export var sunday=date-datetime.timedelta(__kwargtrans__({days:day_idx}));
var diam=np.zeros(len(seed));
glViewport(0,0,self.width,self.height);
var result=urllib.request.urlretrieve(self.url);
l[0]=0;
var x=df.ix.__getitem__([0,tuple([5,null,1])]);
export var startTs=time.time();
something_useful();
var http=credentials.authorize(http);
var n_values=np.max(X,__kwargtrans__({axis:0}))+1;
var __left0__=np.mgrid.__getitem__([tuple([0,nrows,1]),tuple([0,ncols,1])]);var y=__left0__[0];var x=__left0__[1];
print(cl.run());
res+=YIELD;
print(f(11));
ipdb.set_trace();
self.users=self.session.query(User).all();
-1;
var r=np.array(function(){var __accu0__=[];for(var _=0;_<1E3;_++)__accu0__.append(random.randrange(1,1E3));return __accu0__}());
Model.objects.count();
var __left0__=tuple([event.x,event.y]);var x=__left0__[0];var y=__left0__[1];
var b=2;
var ws=book.worksheets[0];
var __metaclass__=ModelBase;
m.__setitem__([j-1,i-1],1);
new_tuples;
estimator.fit(X_digits,y_digits);
export var meter_row=sel_cur.fetchone();
cmd.Cmd.py_default(self,line);
export var inner_result=pool.apply_async(setinner,tuple([Q,G,n]));
var seq=difflib.SequenceMatcher(__kwargtrans__({a:a.lower(),b:b.lower()}));
var links=sorted(links,__kwargtrans__({key:function __lambda__(x){return x.popularity},reverse:true}));
d[get_key(f)].append(f);
print(df);
var b=[];
var counts=dict({});
self.print_stats(stats);

reactor.stop();
list(proxy.py_keys());
app.MainLoop();
export var dane=c.fetchall();
y.diff(x);
var app=wx.App(false);
export var my_diag=numpy.zeroes(tuple([2,2]));
con.set_isolation_level(ISOLATION_LEVEL_AUTOCOMMIT);
params.py_sort(__kwargtrans__({key:function __lambda__(k_v){return len(str(k_v[0]))},reverse:true}));
self.frame.Raise();
self.user=user;
myMap[n]=1;
profile_link.allow_tags=true;
var filename=part.get_filename();
false;
psutil.swap_memory();
register.filter(hash);
var A=np.vstack(tuple([x,np.ones(n)])).T;
layout.addWidget(self.datetime);
var py_name=os.path.splitext(os.path.basename(sys.argv[0]))[0];
var py_values=np.array(tuple([0,0,0,0,0]));
var p=[4,10,5];
var b=form.save(__kwargtrans__({commit:false}));
print(s);
l+=t+t2;
export var Ht=array([[1,0,t[0]],[0,1,t[1]],[0,0,1]]);
print(xi,yi,value,color);
export var minsum=min(function(){var __accu0__=[];for(var entry of groupvallist)__accu0__.append(py_iter(entry.py_values()).py_next()[1]);return __accu0__}());
var c=a.__getslice__(0,null,1);
test>1;
export var result_strings=function(){var __accu0__=[];for(var s of http_strings)if(!any(function(){var __accu1__=[];for(var e of exclude)__accu1__.append(__in__(e,s));return py_iter(__accu1__)}()))__accu0__.append(s);return py_iter(__accu0__)}();
var __left0__=tuple([p1[0],p2[0]]);var i1=__left0__[0];var i2=__left0__[1];
root.children.append(t(1));
print(df2);
var a=np.linspace(0,2*np.pi,500);
client.do_handshake();
var xmax=logdata.max();
scipy.version.short_version;
var v=df.stack().unique();
f(phases);
var s=f.read();
patch.stopall();
f.__setitem__(0,1);
stats.strip_dirs();
var data=np.random.randint(1,10,N);
export var stopy=bigary-hereary+1;
d[k]=myfun(v);
var item=py_items.popleft();
df;
export var p1p2_chessboard=max(abs(p1[0]-p2[0]),abs(p1[1]-p2[1]));
bad_os();
var two=Decimal(2);
tuple([protest,1]);
export var dist_lower=distance([triplets[iT][0],listB[iB]]);
thirdpartymodule_a.SomeClass.__init__=new_init;
slices.append(slice(r,r+np.random.randint(1E3)));
print(-np.py_sort(-a));
print(MySubClass().a_property);
df;
var l=sc.recv(1024);

GenPasswd2(8,string.digits)+GenPasswd2(15,string.ascii_letters);
print(schema);
var p=np.arange(256,__kwargtrans__({dtype:int}));
data2.to_csv(filename);
pool.join();
var s=ctypes.cast(s,ctypes.c_char_p);
xlim(0,5.5);
export var publication=get_something_from_db();
var module=inspect.getmodule(inspect.currentframe().f_back);
var x=np.linspace(0,2*np.pi,100);
pympler.asizeof.asizeof(abr);
self.min_set[self.store[key]].remove(key);
[.68800002,.62400001];
matplotlib.rcsetup.all_backends;
var v=np.array([1,2]);
self.orig_method=getattr(self.obj,self.method);
help(so27.myfunc);
var R=np.empty(N,__kwargtrans__({dtype:int}));
var func=cls.__dict__[func_name];
socket.fromshare(share);
var mydict=dict([[a,1]]);
export var past=datetime.now();
logger;
self._check_setup();
print(root.Document.Placemark.Point.coordinates);
var groups=[funA,funB,funC];
result_list;
export var srcBB=ax1.get_position();
export var _testee=Testee();
var message=MessageForm(request.POST);
result.__getitem__([1,0,0,0,0]);
var array=np.array(array);
ax.grid(false);
print(sqc);
var n=sum(function(){var __accu0__=[];for(var line of open(filename))__accu0__.append(1);return py_iter(__accu0__)}());


export var WEIGHTS=np.array([.4,.4,.2]);
pool.spawn(time.sleep,1);
self._expensive_operation;
str(self._data.py_values[index.row()][index.column()]);
myseries_three.loc[0];
print(data_value.text);
export var newick=getNewick(node.get_left(),newick,node.dist,leaf_names);
[pep8];
p.memory_percent();
export var info_data=info.unpack(input.read(info.size));
a.__getslice__(0,null,1);
MSWord.Documents.Open(filename);
fcntl.lockf(file_handle,fcntl.LOCK_EX|fcntl.LOCK_NB);
var lines=f_in.readlines();
var i=0;
export var m_to_N=np.zeros(tuple([n-1,n-1]));
var xy_pixels=ax.transData.transform(np.vstack([x,y]).T);
self.loadFinished.connect(self._result_available);
ax2.set_xticks([]);
var cam=AVTCamera();
fig.colorbar(surf,__kwargtrans__({shrink:.5,aspect:5}));
spark.createDataFrame([row]).dtypes;
print(a.a);
var img=images.Image(__kwargtrans__({blob_key:str(profile.avatar.key())}));
var id=np.where(fdata[1]==fdata[1].min())[0][0];
var response=gss_client.session.py_get(full_feed_url);
G.remove_edge(py_keys[1],b[py_keys[1]]);
print(m.groups());
logsum+=log(p);
p.start();
numpy.finfo(numpy.float64).max;
var list1=map(itemgetter(0),origlist);
sys.exit(make_main(sys.argv));
print(groups.mean().b);
offset+=size1*byte_size;
print(df);
a+=[i];
var cr=func(...args,__kwargtrans__(kwargs));
q.put(url);
export var plot2=plt.plot(x,mlab.normpdf(x,m2,std2));
c.my_stuff;
RFPDupeFilter.__init__(self,path);
export var col_mean=np.nanmean(a,__kwargtrans__({axis:0}));
python-Qnew;
export var ecdf=np.cumsum(counts).astype(np.float64);

var X=dataset.__getitem__([tuple([0,null,1]),tuple([0,60,1])]).astype(float);
export var Sxx=Sxx+x*x;
var all=list(range(1,7));
self.file=zipextfile;
print(get_file_names_from_file_number(fds));
File(file_obj,__kwargtrans__({py_name:py_name}));
a*np.cos(2*np.pi*f*t+p);
iso8601.parse_date(mydate);
print(sdk);
numpy.logaddexp(0,logB-logA)+logA;
int(str);
var d=defaultdict(int);
fflush(stdout);
curses.init_pair(i,i,-1);
response.status_code;
s.py_update(list2);
export var df_br=df_b.reindex(df_a.index|df_b.index);
var __left0__=scipy.ndimage.imread(filepath).shape;var height=__left0__[0];var width=__left0__[1];var channels=__left0__[2];
process(cl);
export var INS=function __lambda__(x){return 72*x};
NULL;
plt.show();
self.events.append(datetime.now());
export var recipient=User.objects.py_get();
export var std1=1;
self.__class__.instances.append(weakref.proxy(self));
var l=max(l,max(function(){var __accu0__=[];for(var elem of list1)__accu0__.append(longest(elem));return py_iter(__accu0__)}()));
var app=Flask(__name__);
var __left0__=sock.accept();export var csock=__left0__[0];var addr=__left0__[1];
hash(tuple(sorted(self.py_items())));
x;
self.fields[key].required=false;
export var currentMatch=pattern.search(remainingStr);
var input=np.array([1,1]);
my_instance.b();
a.b_list.append(B());
export var filemenu=tkinter.Menu(menubar,__kwargtrans__({tearoff:0}));
var output=mp.Queue();
export var loci=loci.__getslice__(1,null,1);
exit();
export var resolutin=250.25;
setattr(self,attr,getattr(other,attr));
session.flush();
var x=np.linspace(0,2*np.pi,400);
http_server2.listen(8081);
self.timestamp=time.time();
var raw=f.read(4);
recvall(sock,msglen);
g.user=current_user.get_id();
var result=_SHGetFolderPath(0,CSIDL_COMMON_APPDATA,0,0,path_buf);
controller.authenticate();
var filtered=scipy.signal.lfilter(b,a,data);
var l2=function(){var __accu0__=[];for(var [index,x]of enumerate(l1))__accu0__.append(TrackedObject(x,index));return __accu0__}();
v.discard(k);
set(t[0]);
export var violations1=function(){var __accu0__=[];for(var [k,v]of list(collections.Counter(df[0]).py_items()))if(v>1)__accu0__.append(k);return __accu0__}();
var lightened25=lerp(my_color,white,.25);
var pred=sess.run([prediction],__kwargtrans__({feed_dict:feed_dict}));
export var dY=np.abs(YY-YY.T).reshape(tuple([1,Math.pow(Y.size,2)]));
var data=np.ones(y.size,__kwargtrans__({dtype:dtype}));
print(bytes);
tri[np.triu_indices(67,1)]=dm;
bad_lines.append(j);
var d=dict({});
self.arg1=arg1;
export var display_name=models.CharField(__kwargtrans__({max_length:255,blank:true,null:true}));
out.__setslice__(k,k+cnt,null,np.arange(cnt));
var t=Timer(20*60,timeout);
x509.parse(s);
print(f.py_name);
value;
stokes_list[i]=stokes_line;
var labels=cls.fit_predict(X_hat);
print(df);
var opener=urllib.request.build_opener(cookie);
args[i]=args[i]*args[i];
var content_type=models.ForeignKey(ContentType);
var filename=args.output.py_name;
serialized.save();
post_save.connect(signals.do_some_stuff_with_mymodel,__kwargtrans__({sender:MyModel}));
print(model_admin.search_fields);
main();
var b=pd.Series([49,54,62,74],__kwargtrans__({index:[2,6,4,0]}));
var soup=BeautifulStoneSoup(xml_str);
wf.setnchannels(CHANNELS);
export var better_errs=model.get_error(betterdata,bettermodel);
export var parse_object=urlparse(url);
hash(key);
f.write(c);
print(dt);
tuple([self.label.width(),self.label.height()]);
var locations=np.arange(0,50,1);
var b=int(max(0,255*(1-ratio)));
yajl.load(f);
ujson.load(f);
var req=urllib.request.Request(url);
self._namescallback[channel][0].append(d);
self[k]=v;
self.z+x;
export var zipinmemory=io.BytesIO(remotezip.read());
print(line);
var s=s.execute();
[float(row_list[0]),int(row_list[1])];
var j=jinja2.Jinja2(app);
print(dir(etc));
doStuff();
var formset=BuyerInlineFormSet;
var app=Flask(__name__);
var result=function(){var __accu0__=[];for(var x of A)if(__in__(x,B))__accu0__.append(x);return __accu0__}();
g.get_group(0);
long_string;
var client=suds.client.Client(my_wsdl,__kwargtrans__({transport:WellBehavedHttpTransport()}));
print(nx.pagerank(D));
var jobs=[];
s.translate(translate_table);
var query=celery.events.state.tasks_by_type(your_task_name);
head.append(i);


var response=requests.py_get(url);
print(x,x===y);
dosomething(alist);
var win=curses.initscr();
scipy.maximum.accumulate(x);
dec;
var settings=propfaid.get_cache();
wallet;
main();
self.response.write(w);
export var sprite=sheet.subsurface(sheet.get_clip());
var ax2=ax.twinx();
signal.setitimer(signal.ITIMER_REAL,seconds);
Py_Initialize();
var im=ax1.pcolormesh(t,r,c.T);
id(1)==id(1);
var ans=np.array(function(){var __accu0__=[];for(var i=0;i<length;i++)__accu0__.append(map(float,mat.py_next().py_split()));return __accu0__}());
var repeated=np.broadcast_to(arr,tuple([1E3,arr.size]));
var dt_aware=timezone.make_aware(dt_unaware,timezone.get_current_timezone());
res[j]=numbers.__getslice__(f,b,1);
var cursor=conn.cursor();
var y_train=Y[train_indices];
main();
var col=pd.MultiIndex.from_product([df.columns,[0,1]]);
A().py_update();
df;
export var exit_status=process.wait();
print(a,b);
var database=myDB;
var app=Flask(__name__);
var x=x.py_replace(k,v);
var inblock=0;
scipy.stats.poisson.interval(.95,data);
var mtime=os.stat(full_path).st_mtime;
writer.writerow([t,u,v,w,targets[t][u][v][w]]);
self.path=path;
export var _exhausted=object();
obj.ds.append(d);
export var df_list_of_list=map(f,row_list.__getslice__(0,-1,1));
deletelang_name[k];
do_something_else_1();
tuple([x,y]);
var vec=function(){var __accu0__=[];for(var i of dim)__accu0__.append(i-1);return __accu0__}();
list(s);
fp.close();
sys.exit(1);
self.code_map[code]=dict({});
axs.add_patch(rect);
lst1+function(){var __accu0__=[];for(var x of lst2)if(!__in__(x,lst1))__accu0__.append(x);return __accu0__}();
x+y+z;
var ax=plt.gcf().gca();
var s=set(range(10));
var a=np.int64(np.random.random_integers(0,_BLOCK_MAX,blocks_per_flush));
var __left0__=tuple([0,len(out),1]);var start=__left0__[0];var end=__left0__[1];var step=__left0__[2];
var args=parser.parse_args();
python;
c.execute(schema);
var x=np.cos(u)*np.sin(v);
s.close();
eq_map.append(tuple([coeff,power]));
var ranges=sum(function(){var __accu0__=[];for(var t of zip(nums,nums.__getslice__(1,null,1)))if(t[0]+1!=t[1])__accu0__.append(list(t));return py_iter(__accu0__)}(),[]);
self;
var client_socket=socket.socket();
len1;
var l=arr.shape[1]/m;

export var finfo64=np.finfo(np.float64);
test();
Math.pow(x,2);
export var loader=unittest.TestLoader();
cv.CvtColor(frame,frame,cv.CV_BGR2RGB);
var foo=choice(elements);
var __left0__=tuple([f(...args,__kwargtrans__(kwargs)),time.time()]);var v=__left0__;self.cache[key]=__left0__;
var form=AuthorForm(request.POST);
var U=(np.arange(M*N)/(M*N)).reshape(M,N);
lst.remove(choice);
int(maybeLst);
var iqr=qhigh-qlow;
export var CJK_Radicals=tuple([11904,42191]);
sys.exit(app.exec_());
print(X_train.shape);
[0,0];
b.sum();
file2.close();
export var inputoutput=ArrayType();
print(function(){var __accu0__=[];for(var co of c)if(!any(function(){var __accu1__=[];for(var st of sts)__accu1__.append(st.issubset(co));return py_iter(__accu1__)}()))__accu0__.append(co);return __accu0__}());
self.params=dict(params||[]);
nil;
self.connection.shutdown(1);
factorial(...[5,6,7]);
export var uvw=np.random.rand(n,d);
print(item);
glColorPointer(2,gl.GL_FLOAT,0,vertices_gl);
var __left0__=tuple([tuple([]),tuple([])]);export var bynweekday=__left0__[0];var byweekday=__left0__[1];
table.rename(__kwargtrans__({index:str}));
print(model_tunning.best_score_);
self.obj=obj;
var lines=function(){var __accu0__=[];for(var line of handle)__accu0__.append(line.strip());return __accu0__}();
grid.addWidget(text_edit);
var B=np.repeat(A.__getitem__([np.newaxis]),4,0);
var bins=np.linspace(X.min(),X.max(),total_bins);
fly.rect.left=hit.rect.right;
py_iter(obj);
self.Bind(wx.EVT_LIST_COL_CLICK,self.OnColumn);
lis[index[6]+1];
true;

int(x);
a.__setitem__([tuple([0,null,1]),1],x);
export var sB=sparse.csr_matrix(B);
self.client_address[0];
export var X_sim=csr_matrix([[1,1,1,1,1,1,0]]);
var result=function(){var __accu0__=[];for(var [i,j]of pairs)__accu0__.append(example.__getslice__(i,j,1));return __accu0__}();
var d=dict(COUNTRIES);
print(a);
add.delay(4,4);
var text=f.read();
loop.run_until_complete(task);
W.shape;
bool(st.st_mode&stat.S_IRGRP);
var r=requests.py_get(zip_file_url);
export var homedir=shell.SHGetFolderPath(0,shellcon.CSIDL_APPDATA,0,0);
var cmap=mpl.cm.Blues;
r.findall(strs).__getslice__(0,-1,1);
var right=randint(left+1,len(L));
ax.add_patch(PolygonPatch(j,__kwargtrans__({alpha:.5})));
a.x=1;

var numbers=map(int,list(filter(str.isdigit,input_string)));
print(list(py_reversed(numbers)));
var lol=function(){var __accu0__=[];for(var i=0;i<5;i++)__accu0__.append(list(range(i)));return __accu0__}();
print(latest_file);
export var inc=incgen();
export var stderr_queue=Queue.Queue();
VARIABLE5;
VARIABLE6;
VARIABLE7;
VARIABLE8;
VARIABLE9;
VARIABLE10;
VARIABLE11;
VARIABLE12;
VARIABLE4;
print(matches.groupdict());
fg.canvas.draw();
setattr(self,attr,self.get_column(pyQueryRow,i));
var im=ax.contourf(xi,yi,zi);
numbers[0];
app.yaml;
print(str(s));
df;
temp_rdd_dense.toDF().show();
var res=[];
dictionary[section][option]=config.py_get(section,option);
var i=cv2.imdecode(np.fromstring(jpg,__kwargtrans__({dtype:np.uint8})),cv2.CV_LOAD_IMAGE_COLOR);
var block=infile.read(BLOCKSIZE);
true;
var length=len(py_items);
a.nbytes;
print(f.vals[0]);
export var tcks=nax.get_yticks();
var out=np.empty(sum(cnts));
print(a,b,err);
c.py_pop();
export var cnt=MyObject.objects.count();
export var img50_nd=scipy.ndimage.interpolation.zoom(img,tuple([.5,.5,1]));

new_bigmat;
var py_keys=[.5,1];
angle*=180/math.pi;
dotime(func,int(argv[1]));
self.view=QtWebKit.QWebView(self);
var db=SQLAlchemy(app);
row_sums.__setitem__([i,tuple([0,null,1])],row_sums.__getitem__([i-1,tuple([0,null,1])])+img.__getitem__([i,tuple([0,null,1])]));
var ind=np.arange(N);
+yak.py_update(locals());
var ax=axes.__getitem__([i,j]);

export var Xm=np.where(missing,np.nan,X);
var ys=np.arange(512);
var s=pickle.dumps(sys);
var __left0__=tuple([[],[]]);var x=__left0__[0];var y=__left0__[1];
y+5*x;
var df=pd.DataFrame(a);
var t0=time.time();
r;
var time=json.loads(json.dumps(time));
screen.force_update();
self.pre_app(environ,start_response);
s*5;
(function(){var __accu0__=[];for(var x of a)__accu0__.append(x);return __accu0__})();
export var bed_info=dict({});
g.append([]);
export var epochdt=datetime.datetime.fromtimestamp(epoch);
1/0;
sys.stdout.flush();

var circles=np.uint16(np.around(circles));
df.gdp=df.gdp.shift(-1);
var target=sys.stdin.readline().strip();
var layout=QHBoxLayout(self);
var days=dict(zip(day_list,list(range(len(day_list)))));
result;
var result=[];
py_next(myIterator);
use(line);
var group=models.ForeignKey(Event);
print(a-b);
l2[4].__getslice__(1,null,1);
var A=coo_matrix(tuple([data,tuple([row,col])]),__kwargtrans__({shape:tuple([4,4])}));
server.test(1,2);
0(a,b);
print(py_next(a));
var q=function __lambda__(x){return tuple(range(x,x+4))};
var p2=os.path.join(relname,p);
doSomethingElseWith(pos.x,pos.y,pos.z);
self.q=queue.Queue();
var fig=plt.figure();
var c=2*atan2(sqrt(a),sqrt(1-a));
var divider=make_axes_locatable(ax);
key;
plt.plot(xdata,ydata);
export var attrValue=attr[1];
true;
var parsed=urlparse.urlparse(url);

pts.append(temp);
var parser=argparse.ArgumentParser();
settings.INSTALLED_APPS.append(app);
var manager=mp.Manager();
var f=plt.figure(__kwargtrans__({figsize:tuple([10,10])}));
self.keyToId=dict({});
print(y.x.i);
total.py_update(sample);
var result=dict(source_dict);
export var D12=round(TOA12*c,2);
self.pred(obj)&&predicate(obj);
fq[n].append(v);
var aa=np.load(f);
X(X,b);
zip(a,b);
out[x]=multidict(...args.__getslice__(1,null,1));
var count=0;
tuple([UglyGen(x+1,y,z),UglyGen(x,y+1,z),UglyGen(x,y,z+1)]);
self.destroyed.fire(self);
var r=tf.reshape(r,[-1,1]);
print(s);
var metadata=MetaData();
var chunk=min(bufsize,length);
print(key);
paths();
sender._meta._field_name_cache.append(self);
getattr(obj,self.private_name);
var z=[1,2,4,5,6];
n+=1;
thread.start();
var z=chain(x,y);
export var us2=td2.microseconds+1E6*(td2.seconds+86400*td2.days);
export var all_second_keys=set(function(){var __accu0__=[];for(var value of d.py_values())for(var key of value)__accu0__.append(key);return py_iter(__accu0__)}());
asdf.owner=request.user;
handle.write(arg.data);
export var session_cookie=SimpleCookie();
var tmp=np.empty(tuple([4,sy,sz]));
gc.collect();
var b=complex(-1,0);
var params=libtorrent.parse_magnet_uri(magnet_uri);
var event=screen.getch();
[];
var n=len(ls);
sys.exit(1);
self.request=request;
var table=table.fillna(0);
export var nb=NB();
map(function __lambda__(){var z=tuple([].slice.apply(arguments).slice(0));return list(z)},...a);
A(obj.get_num());
s;
var fig=plt.figure();
d.extend(x);
shutil.copyfileobj(r.raw,f);
export var new_attrs=old_attrs.__getslice__(0,null,1);
export var desktop=shell.SHGetDesktopFolder();
pandas.__version__;
__library.terminate();
list(map(attrgetter(...fields),listobj));
tuple([wrapper_unpickler,tuple([factory,ParentClass,r[0]])+r[1].__getslice__(1,null,1)])+r.__getslice__(2,null,1);
var answer=[];
var lines=function(){var __accu0__=[];for(var row of lines)__accu0__.append(row.py_split());return __accu0__}();
a+b*x[0]+c*x[1]+d*x[0]*x[1];
encodings.insert(0,enc);
k.append(mydict[item]);
export var logmod_rsquared=logmod.score(x,y);
_write_record_to_csv(row.__getslice__(1,null,1));
self.wfile.write(value);
str(self.recipe);
key.send_file(f);
var dirname=sys.argv[2];
stream.close();
print(x,y,z);
var tup=fin.readlines();
alias.save();
print(cmp(test1,test2));
getname(woohoo);
traceback.print_exc(__kwargtrans__({file:sys.stdout}));
var new_row=row.__getslice__(0,-1,1);
export var number_of_pages=read_pdf.getNumPages();
hamming_sets[0].add(l[1]+l[2]);
var __left0__=optimize.curve_fit(f,x,y,tuple([0,0,0,0,0]));var p2=__left0__[0];var _=__left0__[1];
var now=datetime.now();
var method=getattr(builtins,py_name);
var k=min(n,k);
print(convert_consolodate(ranges));
var y=function(){var __accu0__=[];for(var z of x)if(x.frobnizzle==5)__accu0__.append(z.element);return __accu0__}();
pprint(finalData);
action();
var response=HttpResponse();
client_socket.send(size);
plt.grid(false);
win.py_clear();
Testing(6/6);
res;
s.ehlo();
obj_set.remove(obj);
print(val);
var out=abs(z.T-z);
var b2=[true,false,true,false];
var b=np.ascontiguousarray(my_array).view(dt);
process_item_method(self,item,spider);
var b=dict(enumerate(a));
[uwsgi];
var results=[];
print(list(r));
var max=self.trell[i][1][k][0];
export var n_str=binascii.hexlify(n_bytes);
input.read(128);
var s=re.search(search,fullstring);
Command2;
-codeclimate-test-reporter- -file.coverage;
MSWord.Documents.Open(filename);
var body=self.rfile.read(content_length);
K.set_value(opt.lr,.01);
D.__setitem__([n,s,x],sum(function(){var __accu0__=[];for(var i=0;i<s;i++)__accu0__.append(P(n-i*x,s-i,x-1));return py_iter(__accu0__)}()));

var n=len(data);
df_out;
tuple([x,y,z]);
var __left0__=sys.exc_info();export var ex_type=__left0__[0];var ex=__left0__[1];var tb=__left0__[2];
var s=Sound();
print(np.array(foos));
stderr_lines.append(eline);
var in_memory_blocks=a.view(np.uint64);
-1;
count+=1;
xs.min();
plt.title(title);
var pixbuf=pixbuf.get_from_drawable(rw,rw.get_colormap(),x,y,0,0,1,1);
var y=np.linspace(1,10,20);
tuple([args[0],fun(...args[1])]);
list_display.append(str(x));
setattr(args,self.dest,py_values);
var req=urllib.request.Request(url,data);
var root=Tkinter.Tk();
sha.hexdigest();
export var Perimeter=cv2.arcLength(c,true);
var l=len(list1);
a*Math.pow(x,n)+b*x-c;
Color(r,g,b);
Installed/home/prologic/tmp/hello-py-c;
cur[list[0]]=dict({});
var foo=Foo();
var match=regex.search(content);
var y1=np.random.normal(0,7,1E5)/10;
x.start();
export var jenny=FamilyItem();
export var fds=function(){var __accu0__=[];for(var p of processes)__accu0__.append(p.stdout.fileno());return __accu0__}();
var data2=np.ma.masked_equal(data2,0);
self;
self.assertEqual(BRConfig.WEBROOT,sel.get_location());
var file_contents=the_file.read();
row_sums.__setitem__([i,tuple([0,null,1])],img.__getitem__([i,tuple([0,null,1])]));
var im=ax.imshow(np.arange(100).reshape(tuple([10,10])));
otherfile.txt;
var dist=np.hypot(np.diff(x-x.min()),np.diff(y-y.min())).cumsum();
jpal+=1;
[0,2,1,1,4];
export var lpSystemTime=ctypes.pointer(SystemTime);
print(getname(f.bar));
var packet=sock.recv(n-len(data));
imshow(red);
f.destroyedObjectListener(self);
var title=db.Column(db.String(64));
export var sentRDD=messageRDD.mapPartitions(sendkafka);
var fig=plt.figure();
l[n]=f(i);
var thread=threading.Thread(__kwargtrans__({target:worker,args:tuple([chunk])}));
var a=np.arange(16).reshape(4,4);
salt;
fd.write(chunk);
export var from_zone=tz.tzutc();
lst.py_sort(__kwargtrans__({key:str.lower}));
foo(d);
var Base=declarative_base();
S[a]=m;
db_field.formfield(__kwargtrans__(kwargs));
json_obj;
sum(map(sum_nested,astruct));
var module=make_module_from_file(module_name,program_filename);
print(list(Example));
var count=0;
false;
var groups=GroupSerializer(__kwargtrans__({many:true}));
x[index]=1;
file;
var id_arr=np.ones(idx.sum(),__kwargtrans__({dtype:int}));
post_syncdb.connect(add_user_permissions,__kwargtrans__({sender:auth_models}));
var f=sp.sin(x)*sp.cos(y)*sp.sin(z);
tuple([label_text_font_size,label_text_font_style,label_width]);
(function(){var __accu0__=[];for(var a of list2)if(!__in__(a,set1))__accu0__.append(a);return __accu0__})();
var obj=A.__new__(args);
var c=np.cumsum(a);
var __left0__=pipe.communicate();var stdout=__left0__[0];var stderr=__left0__[1];
c.drawAlignedString(x,y,testo);
var a=tonumpyarray(data,size);
var __left0__=event.pos;var x=__left0__[0];var y=__left0__[1];
var seen=[];
df.value=df.value.astype(int);
S.mean();
export var op_func=ops[op_char];
cblas_matrixproduct(typenum,ap1,ap2,out);
x.close();
stream.stop_stream();
[Service];
d.A>d.C;
ax1.set_ylim(10*np.ceil(y.max()/10),y.min());
var arr=np.ascontiguousarray(arr);
foobar2;
self.x&other.x;
r.append(a);
var data=digits.images.reshape(tuple([len(digits.images),-1]));
print(tuple([test_item.p1,test_item.p2]));
tuple([trip_id,arrival_time,departure_time,stop_id,stop_sequence,stop_headsign,pickup_type,drop_off_type,shape_dist_traveled]);
pdb.runcall(test.foo,1,2);
var c=PublicC();
self.my_init();
print(i);
d.quantize(Math.pow(Decimal(10),-places),__kwargtrans__({rounding:ROUND_DOWN}));
var scale=mode*x;
print(UserCreateForm());
dict({});
Grid.rowconfigure(root,0,__kwargtrans__({weight:1}));
var serializer_class=UserSerializer;
var parser=OptionParser();
data;
var fig=plt.figure();
export var oldtype=a.dtype;
pet_list.append(pet);
a.append(2);
deletepacket.chksum;
sel.start(true);
old_label_image.destroy();
var __left0__=tuple([self.maxI-1,self.maxJ-1]);var i=__left0__[0];var j=__left0__[1];
print(id(c2));
plt.ion();
body.extend(rv);
rpath;
print(decoded);
self.ranges[k]+=1;
var fig=plt.figure();
result.py_setdefault(k,dict({}))[property_str]=v;
start_server();
export var DOT11_PHY_TYPE=c_uint;
print(function(){var __accu0__=[];for(var item of sorted(set(tri_tokens)))__accu0__.append(tuple([item,tri_tokens.count(item)]));return __accu0__}());
t.start();
var y=data.__getitem__([tuple([0,null,1]),1]);
session.remove();
tuple([deleterenWin,iren]);
var arr=numpy.array(im);
pairs+=tuple([s[0],s[-1]]);
var rows=np.random.choice(df.index.py_values,10);
np.random.seed(42);
export var plt1=fig.add_subplot(2,1,1);
var data=[];

img.setPixel(0,0,5);
var value=vinterp(xcenter+r*np.sin(angle),ycenter+r*np.cos(angle));
var soup=BeautifulSoup(source);
var args=parser.parse_args();
getattr(external,py_name);
var parameters=urllib.parse.urlencode(parameters);
var ax=fig.add_subplot(111);
print(is_new_style(new_style));
x>100&&y<50?x:y;
var x=random.gauss(100,50);
var ranked=sx.expanding().agg(function __lambda__(x){return rankdata(x)[-1]/len(x)});
ordered.append(heappop(heap));
export var acceptable=[];
K.py_sort();
var args=parser.parse_args();
print(sorted(d));
tuple([88888888,55555]);
var poly=np.polynomial.Polynomial(params);
myapp.db.drop_all();
m.login(user,pwd);
len(self.datatable.index);
count+=1;
errorcodes.lookup(e.pgcode);
main();
export var file_list=files_to_delete(rootfolder,extension);
autolabel(rects1);
true;
porter.stem(greater);
var response=urlopen(url);
var t1=time.time();
var y=numpy.roll(x,1);
soup.body.append(wrapper);
libc.fopen.restype=c_void_p;
ser.setDTR(__kwargtrans__({level:0}));
1/sigma*(y-func(x,...p));
db.expire_all();
var b=np.ones(tuple([2,2]));
self.assertEqual(1+1,2);
var reversed_dict=collections.defaultdict(list);
print(len(clf.feature_importances_));
var syncdict=manager.syncdict();
var arr=np.fromiter(py_iter(im.getdata()),np.uint8);
DataFrame1.plot(__kwargtrans__({legend:false}));
var gs=gridspec.GridSpec(rows,cols);
false;
export var combiner=function __lambda__(x,y){return np.where(x.isnull(),y,x)};
1244489871;
hamming_sets[0].add(l[0]+l[2]);
collections.defaultdict(Tree);
g.append(el);
py_values.append(int(x));
_HTTPConnection.connect(self);
results[obj].append(size);
var __left0__=divmod(t,60);var n=__left0__[0];var seconds=__left0__[1];
push(tuple([nextbasesquared,nextbase,2]));
var result=SomeResult();
var M=arange(10).reshape(2,5);
results.plot();
self.signal.disconnect(self.receiver);
tuple([1,2]);
var f=urllib.request.urlopen(url);
var t=np.arange(.01,10,.01);

var root=etree.fromstring(xml);
print(d.shape,len(k));

var data=Data();
tuple([[self.x-1,self.y-1],[self.x+1,self.y-1]]);
var data=dict({});
var __left0__=divmod(a,b);var q=__left0__[0];var r=__left0__[1];
var doc=html.fromstring(s);
var book=xlrd.open_workbook(sys.argv[1],__kwargtrans__({formatting_info:1}));
file.open();
G.add_edge(5,17);
var l=line.py_split();
print(py_next(generator));
var a=function(){var __accu0__=[];for(var _=0;_<1E5;_++)__accu0__.append(random.randint(0,1E6));return __accu0__}();
var xlim=ax.get_xlim();
(function(){var __accu0__=[];for(var w of ws)__accu0__.append(sum_vectors(v,w));return __accu0__})();
export var drw=ImageDraw.Draw(img);
__in__(tuple(sorted(widget.py_items())),widget_set);
zip(cycle(tup.__getslice__(0,1,1)),tup.__getslice__(1,null,1));
var py_split=len(l)/2;
instance_method_ref();
var x=i+1;
var z=r*cos(theta);
var i1=[1,2];
export var fetcher=urllib.request.build_opener();
print(z);
print(find_gt(R,x));
print(heapq.nlargest(10,numbers));
var l=[0,1];
my_dict[get_group_from_angle(a)].append(l);
export var user_name=db.StringProperty();
set(dir())-set(dir(__builtins__));
repos.git.add(submodule.path);
var l2=[4,5,7];
export var largest_area=sorted(contours,__kwargtrans__({key:cv2.contourArea}))[-1];
self._items=dict(...args,__kwargtrans__(kwargs));
sqlplus.communicate();
input.py_sort(__kwargtrans__({key:cmp_to_key(cmp_items)}));
print(tuple([item,item*2]));
var out=[py_next(it)];
win.py_clear();
print(normalized(A,0));
imp.load_module(py_name,fh,abs_path,description);
var field1=forms.IntegerField(__kwargtrans__({required:false}));
var __left0__=np.ogrid.__getitem__([tuple([-a,nx-a,1]),tuple([-b,ny-b,1])]);var y=__left0__[0];var x=__left0__[1];
print(width,height);
var out=[];
var x=data.__getitem__([tuple([0,null,1]),0]);
ips.append(i);
self.py_metatype=ContentType.objects.get_for_model(self.__class__);
var A=np.random.random(10);
b*a(a,b-1);
var regex=re.sub(define,function __lambda__(m){return defines[m.group(1)]},regex);
var cap=cv.CaptureFromFile(path);
row.py_update(nominations);
decorator;
var self=tuple.__new__(cls,arc);
var k=item.__getslice__(0,-1,1);
self.device.send_command(CMD_BLINK,100);
ret.append(tuple([s,e]));
var profile=webdriver.FirefoxProfile();
var b=np.arange(n+1).__getitem__([tuple([0,null,1]),np.newaxis]);
var req=urllib.request.Request(authurl);
tuple([[1,5,21]]);
var __left0__=tuple([0,1,1]);var a=__left0__[0];var b=__left0__[1];var c=__left0__[2];
export var shop=models.ForeignKey();
feed.read();
export var lSongs=[];
this_row.append(val);
root.left=self.insert_node(root.left,element);

os.stat(arg);

export var bboxes=[];
y/=sum(y);
len(self.__storage)==0;
var __left0__=Token.objects.get_or_create(__kwargtrans__({user:original_request.user}));var token=__left0__[0];var _=__left0__[1];
var results=expr.parseString(s);
var queryset=User.objects.all();
export var all_idxs=numpy.arange(A_noisy.shape[0]);
var points=np.asarray(points);
print(df);
plt.xticks(list(range(width)),alphabet.__getslice__(0,width,1));
export var input_keys=set(self.initial_data.py_keys());
var instance=cls();
print(resp.info());
export var new_peak=PyPeak();
self.execute();
var times=[];
list(out);
var B=A[idx];
export var pm=svm_parameter(__kwargtrans__({kernel_type:RBF}));
df;
var transform=ET.XSLT(xslt);
new_cols.columns=list(string.ascii_uppercase).__getslice__(0,len(new_cols.columns),1);
var t0=time.time();
print(link);
export var aws_access_key_id=AxxxZ;
turtle.exitonclick();
export var absdists=np.abs(dists);
dir(p);
export var lemmatizer=Lemmatizer();
BaseServer.__init__(self,server_address,HandlerClass);
var n=self._sock.send(data);
var df=df[df.StartTime<=df.Timestamp&df.EndTime>=df.Timestamp];
var l=list(a);
var title=StringField();
var __left0__=tee(iterable);var a=__left0__[0];var b=__left0__[1];
base._subclasses.add(cls);
var listB=function(){var __accu0__=[];for(var i=0;i<2E4;i++)__accu0__.append(20*random.random());return __accu0__}();
page.setLayout(vbox1);
draw.text(tuple([0,100]),txt2);
set|=Set(form2.objects.filter(__kwargtrans__({keyskills:i})));
var parser=argparse.ArgumentParser();
epoch_in.append(x);
false;
var a=np.random.random(tuple([10]));
var pid=os.fork();
q.put(x);
var object2=ClassB(object1);
sshcon.connect(hostname,__kwargtrans__({username:myuser,key_filename:mySSHK}));
d1*Bo;
reactor.stop();
var py_name=models.CharField(__kwargtrans__({max_length:128}));
var renderer=fig.canvas.get_renderer();
var window=QWidget();
simulations_to_run.put(dict({}));
var Ainv=np.matrix(identitymatrix(n),__kwargtrans__({dtype:int}));
var z=numpy.polyfit(x,y,1);
wn.wup_similarity(dog,cat);
var f=(x-d)/_diff.__getitem__([tuple([0,null,1]),index]);
var n=(alen-flen)/struct.calcsize(before_char)+1;
deletemetadata[k];
list(islice(c,i));
keep.append(item);
export var MOUSE_RIGHTUP=16;
vals[i]+=abs(np.dot(u,m[j]));
data;
var sieve=[false]*(limit+1);
var x=np.arange(10);
tuple([8,1,1,8]);
self.appendleft(value);
print(dataframe);
sys.exit(0);
self.response.out.write(template.render(path,template_values));
print(function(){var __accu0__=[];for(var coin of coins)__accu0__.append(coin/100);return __accu0__}());
isnan(a);
var feature_names=np.array(iris.feature_names);
method_to_decorate(self,...args,__kwargtrans__(kwargs));
var a=[random.choice(list(range(1,7)))];
export var pathjoin=os.path.join;
show();
var i=quaternion(0,1,0,0);
var py_values=[];
export var popular_words=sorted(word_counter,__kwargtrans__({key:word_counter.py_get,reverse:true}));
get_thread.start();
var out=dict(map(get_key_value,columns));

var x=np.empty(len(a));
var output=function __lambda__(x){if(typeof x=="undefined"||x!=null&&x.hasOwnProperty("__kwargtrans__"))var x=data[2];return x+x}();
var expr=Forward();
self.lookup_tables[field][value].append(index);
export var my_a=A(__kwargtrans__(params));
var result=dict({});
plt.show(__kwargtrans__({open_plot:true}));
print(caller.f_locals);
py_metatype.__new__(mcs,py_name,bases,dct);
self._x=0;
pygame.display.py_update();
export var dt_obj=datetime.fromtimestamp(timestamp);
export var output_df=output_df.reset_index(__kwargtrans__({drop:true}));
x;
hash(list());
- -ignore<catalina.log;
my_list[index]=new_item;
f.write(c);
output.put(rand_str);
var reader=csv.reader(input_file_handle);
max(py_keys,__kwargtrans__({key:f}));
var cx2=self._gen.random_integers(cx1,self.N-1);
vectorized_array;
var tree=find_dependent_modules();
var entries=function(){var __accu0__=[];for(var fn of os.listdir(dirpath))__accu0__.append(os.path.join(dirpath,fn));return py_iter(__accu0__)}();
self.queue.join();
models.signals.post_init.connect(self.post_init,__kwargtrans__({sender:cls}));
new set([new set([self.title()])])-example.com;
this_week.append(date);
var a=models.ForeignKey(Foo,__kwargtrans__({null:true}));
fig.tight_layout();
path.append(previous);
var r=random.random();
11-2+(11-10);
var p=np.linspace(0,2*np.pi,50);
result;
var rest=map(function __lambda__(x){return urllib.parse.quote(x)},new_base);
Console.WriteLine();
var py_name=cleanco(py_name).clean_name();
plt.subplot(122);
0;
flip_stack_helper(s,t);
self.module;
np.stack(function(){var __accu0__=[];for(var i=0;i<A.shape[1];i++)__accu0__.append(np.outer(A.__getitem__([tuple([0,null,1]),i]),B.__getitem__([i,tuple([0,null,1])])));return __accu0__}());
axdendro.set_yticks([]);
socket.__path__;
py_next(reader);
np.random.seed(101);

export var all_labels=np.array(all_labels);
var remainder=dict(remainder);
self[i]=v;
pool.join();
var __left0__=random.sample(indexes,2);var a=__left0__[0];var b=__left0__[1];
export var pform=UserProfileForm(__kwargtrans__({data:request.POST}));
wrapper.__name__=func.__name__;
threadA.run();
hough_transform_p(img,templates[0],i);
i+=1;
t.start();
d;
image.SetMaskColour(255,0,255);
export var split_at=[2,4,5,8,11];

write_line(indiv,window,coverage,snp);
print(df);
var out=np.column_stack(tuple([starts,stops]))[valid_mask].tolist();
var __left0__=img_file.getpixel(tuple([i,j]));var r=__left0__[0];var g=__left0__[1];var b=__left0__[2];
math.atan2(0,-0);
print(id(a),id(b));
var m=s.model();
export var text_cell=first_sheet.cell_value(row_idx,COL_IDX);
myfunc();
var found=true;
var C=splits[1];
var query=datamodel.User().all();
points.append(tuple([xs[i],ys[j],v]));
var prefixes=function(){var __accu0__=[];for(var line of words)__accu0__.append(line.strip());return __accu0__}();
var mask=np.dstack([mask,mask,mask])/255;
export var test_m=np.concatenate(tuple([test_m,q.py_get()]),__kwargtrans__({axis:1}));
var emp=Employee.objects.py_get(__kwargtrans__({pk:emp_id}));
result_list.append(json2xml(sub_elem,line_padding));
var result=[];
thread.start();
var obj=MyClass();
reactor.iterate();
recursion(i+1);
new_x.append(x[i]);
var main_loop=tornado.ioloop.IOLoop.instance();
trainer.trainEpochs(epochs);
plt.plot(dummy);
var result=rdd.groupByKey().collect();
export var sum_array=np.array(function(){var __accu0__=[];for(var i=0;i<n_points;i++)__accu0__.append(compute(i));return __accu0__}());
var loss=tf.reduce_mean(tf.square(y-y_data));
export var in1=innertype(...list(range(10)));
var W=tf.Variable(tf.random_uniform([1],-1,1));
print(obj);
var w=gtk.gdk.get_default_root_window();
false;
tuple([8,array([5,6,7]),array([9])]);
1020068010;
export var end_months=(dt2.year-dt1.year)*12+dt2.month+1;
print();
var __left0__=make_example_plot();var fig=__left0__[0];var ax=__left0__[1];
var now=datetime.now();
export var qualname=qpid;
var a=TC();
test(0,10);
jobForm.cleaned_data;
print(sess.run(A_upper_triangular,__kwargtrans__({feed_dict:dict([[mask,npmask]])})));
logging.getLogger().setLevel(logging.DEBUG);
lis.append(_);
var it=py_iter(it);
wrapper;
print(myList[0]);
self.events.append(something);
var the_dict=dict({});
export var ldict=locals();
architecture/linux_host_architecture;
var __left0__=fig.get_dpi()*fig.get_size_inches();var X=__left0__[0];var Y=__left0__[1];
print(foo.bar,foo.quux);
shutil.copyfileobj(f,tf);
plt.plot(self.dat);
self.py_name=fn.__name__;
tuple([figure,imshow(label2rgb(ccompv),[])]);
0;
var im=ax.imshow(data);
var py_name=Column(String);
func_wrapper;
var __left0__=tuple([L[0],key(L[0])]);var max_item=__left0__[0];export var max_size=__left0__[1];
(b.ffill()+b.bfill())/2;
print(df);
export var expected=array.__getitem__([tuple([0,null,1]),cols]);
f;
export var numpy_arr=np.asarray(view);
var my_norm=Normalize(__kwargtrans__({vmin:0,vmax:5}));
contents.append(line);
char*cstring;
s.append(a+b);
var addr=sys.argv[1];
list_A.append(arr[current_set]);
var shifts=np.zeros(A.size,__kwargtrans__({dtype:int}));
var b=Point(x+1,y);
var res=function(){var __accu0__=[];for(var [a,b]of zip(listA,listB))__accu0__.append(formula(a,b));return __accu0__}();
profiler.print_stats();
geoms.append(intersect);
var c=[8,9,0,1];
self.plot=pg.PlotWidget();
b.__setitem__([tuple([0,null,1]),tuple([0,null,1]),1],255);
pool.map(do_log,list(range(100)));
var df2=df.copy();
var res1=dict(zip(dicts[0],zip(...function(){var __accu0__=[];for(var d of dicts)__accu0__.append(list(d.py_values()));return __accu0__}())));
var count=0;
var __left0__=itertools.tee(mdtimes);export var dtg0=__left0__[0];export var dtg1=__left0__[1];
var __left0__=l.py_split().__getslice__(0,2,1);export var id0=__left0__[0];export var id1=__left0__[1];
export var shapeX=PyArray_SHAPE(X);
self.matrix=[];
scrw.add(self.tview);
export var image_tk=ImageTk.PhotoImage(image);
var bins=algos.quantile(arr[~mx.mask],np.linspace(0,1,11));
var df2=df.loc[df.area==area];
views/largemodel_view.py;
view.show();
var __left0__=plot(x,sin(x));var line=__left0__[0];
var A=np.ones(tuple([5E7]));
var out=np.empty_like(x);
db.save(doc);
var a=lil_matrix(tuple([4,4]),__kwargtrans__({dtype:int}));
print(b);
pprint(list(py_values));
var py_name=db.Column(db.Unicode(50));
print(tree.leaves());
doTaskA();
var points=[tuple([1,1]),tuple([1,10]),tuple([10,10]),tuple([10,1])];
var layout=QtGui.QHBoxLayout();
data.append(df[col_name].py_values);
print(compiled_code.co_consts);
tuple([g.ra,g.az,g.dec]);
var parser=ElementTree.XMLParser();
Recurse(y,number-1);
print(tuple([event,elem,float(f.tell())/total_size]));
result_pic.close();
var uid=Column(String(80),__kwargtrans__({primary_key:true}));
print(line12);
export var _file=os.path.abspath(sys.argv[0]);
export var cpy_list=[];
p.register(r_fd,POLLIN);
self.replay();
dis.dis(foo);
test();
export var barwidth=1;
var colors=cm.rainbow(np.linspace(0,1,len(ys)));
Review.objects.filter(__kwargtrans__({venue__pk:2}));
tuple([cregex_token_iterator(s.begin(),s.end(),r,-1)]);
var df=pd.DataFrame(__kwargtrans__({data:int_matrix,columns:cats}));
self.root=Tk();
t.start();
var tar=tarfile.open(args[0]);
var p=multiprocessing.Process(__kwargtrans__({target:f}));
time.sleep(int(the_time));
result;
var interp_i=np.linspace(pad,i.max()-pad+1,5*(i.size-2*pad));
self.add_widget(self.my_float_layout);
listener.listen(1);
self.run(statement);
var new_dict=dict({});
export var banned_words=set(function(){var __accu0__=[];for(var word of wordbook)__accu0__.append(word.strip().lower());return py_iter(__accu0__)}());
var numpydata=numpy.hstack(frames);
export var stiff=stiff.applyfunc(function __lambda__(x){return together(expand(x))});
np.min(2*np.arcsin(np.minimum(np.sqrt(a),len(a))))*radius;
var data=json.loads(json_text);
total_length/num_words;
jinja2.get_jinja2(__kwargtrans__({factory:jinja2_factory}));
_get_dict(object).contents.value;
score+=1;
print(net);
self.session=session;
var vol=sum(volume.__getslice__(i+1,j+1,1));
cardservice.connection.connect();
print(stored_file.filename);
print(selection_sort(ran));
self.data=ctypes.cast(raw_seq,ctypes.c_void_p);
print(heapq.nsmallest(10,numbers));
lxc.aa_profile=unconfined;
pl.figure(f1.number);
var df=df[df>0].apply(function __lambda__(x){return x/x.max()},__kwargtrans__({axis:1}));
var __left0__=plt.subplots(1,2);var fig=__left0__[0];var axs=__left0__[1];
var a=b;
export var ToTSize=function(){var __accu0__=[];for(var row of testdata)__accu0__.append(sum(row));return __accu0__}();
var histo=numpy.histogram(num_dates);
asign[sz]=np.roll(asign,1)[sz];
var X=np.random.rand(1,20,40,50);
var idx=s1.loc[s1==-1&s1!=s1.shift(-1)].index;
var lines=function(){var __accu0__=[];for(var line of spamreader)__accu0__.append(line);return __accu0__}();
var obj=str(obj);
export var sz=w.get_size();
self._doc+self.attributes_string();
var json_docs=[];
alias.update_points();
export var ax12=fig1.add_subplot(212);
export var violations2=function(){var __accu0__=[];for(var [k,v]of list(collections.Counter(df[1]).py_items()))if(v>1)__accu0__.append(k);return __accu0__}();
var arr=df.py_values;
print(l[2]);
var n=10;
client.get_string(key);
sched.start();
modul.func=newfunc;
var data=np.load(f);
var b=temp_a+b;
mpb.pack();
image.save(pic,image.format,__kwargtrans__({quality:100}));
half*divmod(number,half)[0];
sum(temp);
i+=1;
var weights=np.array(weights);
start-stop-daemon;
None.__cause__=null;throw None;
self.deletes=set();
var data=np.histogram2d(Y,X,__kwargtrans__({bins:[len(Yr),len(Xr)],weights:Z}));
islice(primes,0,n);
Response(g());
var data=stream.read(chunk);
abababab;
aaabbbc;
abcabc;
var alpha=im.py_split()[-1];
var fig=plt.figure();
print(s.lower());
var t=Thread(__kwargtrans__({target:f,args:tuple([loop])}));
var data=socket.gethostbyaddr(ip);
pprint(d);
var s=pd.Series(np.random.normal(0,100,1E4));
var foo=serializers.CharField();
sum(function(){var __accu0__=[];for(var i of lst)__accu0__.append(i==to_replace?replace_with:[i]);return py_iter(__accu0__)}(),[]);
unittest_main();
np.random.seed(42);
np.asarray(res);
export var cent2ori=np.eye(4);
sys.getsizeof(fs1);
var stamp=mktime(now.timetuple());
main();
var coord=np.random.normal(__kwargtrans__({size:tuple([1E3,1E3,1E3])}));
elements;
false;

array_.__setslice__(0,null,null,rint(multiplied));
var match=true;
dfs.append(df);
var mylst=Session.query(MyList).py_get(1);
print(form.instance.my_field);
new_string.remove(i);
var xml=ET.fromstring(contents);
sys.stdout.write(string_type());
self.client;
var __left0__=np.histogram(series);var count=__left0__[0];var division=__left0__[1];
false;
conn.connect();
yacc.parse(s);
export var l2set=dict();
print(sin_data);
self.send_my_headers();
py_replace(inputList,flat_results);
var app=config.make_wsgi_app();
var X=list(range(1,1E5,1E3));
print(s);
var output=cStringIO.StringIO();
var x2=py_next(y);
export var allobjc=dict({});
export var allatt=dict({});
var msg=self.format(record);
var b=np.random.random_integers(-2E3,2E3,__kwargtrans__({size:tuple([N,N])}));
var obj=self.weak_obj();
bin/gunicorn;
acts;
export var contentdiv=contentnav.getparent();
print(message);
b*=~unified_mask.__getitem__([np.newaxis]);
dict.py_update(dict2);
export var pvt=pvt.unstack(0);
R.add(tuple(x));
ax.set_xticklabels(xticklabels,__kwargtrans__({minor:false}));
var col=len(col_names)-1;
var c=con.cursor();
pylab.figure();
target_device.write(content);
export var fileinput=fopen.read();
export var prevList=Permute(string.__getslice__(1,len(string),1));
var n=len(pattern);
var list1=function(){var __accu0__=[];for(var x of list1)__accu0__.append(int(x));return __accu0__}();
print(sorted(function(){var __accu0__=[];for(var [b,c]of count.py_items())__accu0__.append(tuple([c,b]));return py_iter(__accu0__)}(),__kwargtrans__({reverse:true})));
export var vertices=np.take(tri.simplices,simplex,__kwargtrans__({axis:0}));
conn.close();
false;
__builtin__.set;
A.B(1,2);
test(1);
var clock=pygame.time.Clock();
var args=parser.parse_args();
var reps=[];
df;
monkey.patch_all();
print(sha.hexdigest());
var fig=plt.figure();

dir(MyClass);
var text=str(html);
self.sum=0;
words.inc(word.lower());
cr.paint();
foo.ModClass.class_method();
ogl.CGLSetParameter.restype=ctypes.c_int;
out.show();
print(df);
var __left0__=tuple([im,np.zeros(im.shape,np.uint8)]);var I=__left0__[0];var M=__left0__[1];
zip(bins,count);
var buffer=StringIO(urllib.request.urlopen(url).read());
var result=[];
var fig=plt.figure();
var screen=pygame.display.set_mode(px.get_rect().__getslice__(2,null,1));
bane.view(np.complex128);
s[1]+s[0];
var x=0;
export var ABC=AdaBoostClassifier(__kwargtrans__({base_estimator:DTC}));
html;
b.a;
var clusters=np.zeros(data.shape[0]);
py_typeof(converted.iloc[0]);
template.format(...x,__kwargtrans__({last:y}));
pickle.dump(your_data,handle,__kwargtrans__({protocol:pickle.HIGHEST_PROTOCOL}));
export var myapp=MainWindow();
ax.view_init(45,60);
non_consecutive_combinator(list(range(1,n+1)),r);
export var SYNCHRONIZE=1048576;
set(d2.py_items()).symmetric_difference(list(d.py_items()));
args[i]=random.randint(1,100);
BAEtMAsGCWCGSAFlAwQBAjALBglghkgBZQMEAQUwBwYFKw4DAgcwCgYIKoZIhvcN;
export var Ac=np.triu(Ac);
print(start,start.weekday(),prev,prev.weekday());
NP.ediff1d(x);
var dialog=QtGui.QFileDialog(parent);
print(x);
print(request.url_root);
var D=Counter(words);
match_values.append(_match(query,corpus.__getslice__(m,m-1+qlen,1)));
time(hours,minutes,seconds);
var Base=declarative_base();
var shift_idx=np.append(0,np.nonzero(np.diff(data_sorted.__getitem__([tuple([0,null,1]),0])))[0]+1);
net.load(model_path);
PLT.show();
plt.plot(xdata,ydata);
list(filter(dct.py_get,dct));
count+=lin;
export var resized=cv2.resize(img,tuple([250,250]));
var module=getattr(pkg,item);
var strided=np.lib.stride_tricks.as_strided;
var idx=np.nanargmax(b,__kwargtrans__({axis:0}));
result.__setitem__([tuple([x_offset,a.shape[0]+x_offset,1]),tuple([y_offset,a.shape[1]+y_offset,1])],a);
reactor.listenTCP(8080,web);

the_canvas.show_page();
proxy.soapproxy.config.debug=1;
self.bmp=wx.BitmapFromBuffer(width,height,frame);
var d=dict({});
var cm=2.54;
print(a.max(1));
M.ix.__setitem__([0,0],1);
df.d=df.a+df.b;
(function(){var __accu0__=[];for(var _f of function(){var __accu1__=[];for(var char of string)__accu1__.append(f(char));return py_iter(__accu1__)}())if(_f)__accu0__.append(_f);return __accu0__})();
print(a,b,c);
var res=pd.concat([df]*repetitions);
var y=np.arange(0,10,.1);
print(b.base===a);
show(vform(fig,select));
a.append(1);
vdisplay.start();
tuple([maks_length,maks_key]);
var instance=constructor();
records[k]=0;
L.append(codes[int(num)]);
(vmax-vmin)*np.random.rand(n)+vmin;
codecs.latin_1_encode(x)[0];
model.add(Dense(2,__kwargtrans__({input_dim:2})));

checkinstance(not_allowedclass);
foo.ModClass.static_method();
var G=nx.Graph();
driver.service.process.send_signal(signal.SIGTERM);
var window=sublime.active_window();
var frame=Frame(master,__kwargtrans__({width:200,height:200}));
plt.subplot(_subplots[py_name]);
text+=get_deep_text(subelement);
1/(1+z);
mtrans.Transform.__init__(self);
var p=Process(__kwargtrans__({target:grandchild,args:args}));
len(set(flattened))==len(flattened);
var parent=tk.Tk();
export var BUFSIZE=10;
var __left0__=map(float,line.py_split());var x=__left0__[0];var y=__left0__[1];var p=__left0__[2];var q=__left0__[3];
var d=dict({});
print(previous_line);
strprime;
export var _CURRENT_YEAR=datetime.datetime.now().year;
var a=Assignable();
integer.setParseAction(function __lambda__(t){return int(t[0])});
var json_dict=json.load(filein);
export var pol_ext=LinearRing(poly.exterior.coords);
result.close();
mylist[i]=key;
self.x=2;
a2.set_xticks([]);
order_check(result);
df1.ne(df1.shift().bfill()).any(1).cumsum().add(1);
var __left0__=tuple([b,a]);var a=__left0__[0];var b=__left0__[1];
d_sum[topkey]=dict({});
sys.stdout.write(data);
py_iter(d.py_items());
self.py_name;
print(tuple([TOS1,TOS]));
var ax=subplot(1,1,1);
list(function(){var __accu0__=[];for(var p of arr)if(xmin<p[0]&&p[0]<xmax)__accu0__.append(p);return __accu0__}());
var r=requests.py_get(url);

var a=function(){var __accu0__=[];for(var _=0;_<10;_++)__accu0__.append(numpy.arange(1E5));return __accu0__}();
sys.stdout.write(p.stdout.read());
var __except0__=SomeProblem(value);__except0__.__cause__=null;throw __except0__;
Orange.feature.Continuous(str(d.py_name));
var idx=df1.stack().index;
var zip=zipfile.ZipFile(zipinmemory);
var a=numpy.arange(cols*cols).reshape(tuple([cols,cols]));
app.exec_();
sys.stderr=Logger();
export var forks=[];
res.append(e+1);
len(x);
x*2;
var a=np.random.normal(__kwargtrans__({size:1E3}));
var fig=plt.figure(__kwargtrans__({frameon:false}));
export var new_func_name=my_func;
print(v);
Math.floor(5/-2);
hash.set(x,hash.py_get(target).concat(property));
params;
new set([new set([micro_form.as_p])]);
convert(remain/current_base)+rest_digits[__mod__(remain,current_base)];
var __left0__=sys.exc_info();var py_metatype=__left0__[0];var value=__left0__[1];var tb=__left0__[2];
var mp=numpy.arange(0,max(data)+1);
d[key]=sum(map(operator.itemgetter(1),group));
tuple(res);
current+min(distance_to_a,distance_to_b);
qp.loadFromData(image_data);
var a=A();
export var converter=PIL.ImageEnhance.Color(img);
var __except0__=StopIteration();__except0__.__cause__=null;throw __except0__;
myTurtle.left(25);
var loop=aio.get_event_loop();
print(s);
self.remove_edge_by_id(edge);
var ax1=fig.add_subplot(gs[0]);
export var ancestor=widget.get_parent();
print(Al.A);
export var gridx=np.linspace(-1,1,5);
var pdf=stats.lognorm.pdf(x,s,__kwargtrans__({scale:scale}));


var z=sum(Math.pow(a.__getitem__([tuple([0,null,1]),tuple([0,null,1]),np.newaxis])-b,2),1);
var min_keys=function(){var __accu0__=[];for(var k of d)if(d[k]==min_val)__accu0__.append(k);return __accu0__}();
tup[0]===a;
var subs=function(){var __accu0__=[];for(var [i,[_,sub_df]]of enumerate(gb))__accu0__.append(sample(sub_df,i));return __accu0__}();
ast.dump(_);
p.terminate();
print(x.shape);
sys.stdin=UTF8Reader(sys.stdin);
var a=A();
var h=httplib.HTTPConnection(parsed.netloc);
overlap(0,50,40,45);
ashexstr?hasher.hexdigest():hasher.digest();
export var addx=functools.partial(add,2);
print(counter[0]);
el1.extend([[]]*(len1-len(el1)));
var data=numpy.array(py_values,__kwargtrans__({dtype:dtype}));

var test=record_log(self.logs)(test);
var newImage=Image.py_new(mode,tuple([canvas_width,canvas_height]),new_background);
var rot=im.rotate(angle,__kwargtrans__({expand:1})).resize(size);
th.__getslice__(1,null,1)[th.__getslice__(0,-1,1)&th.__getslice__(1,null,1)]=false;
var d=OrderedDict();
var fig=plt.figure();
var a=ma.masked_array(a,a==fill_value);
print(e);
sleep(5);
var diff_seconds=(mytime-since).total_seconds();
print(tuple([num,data]));
self.close_connection();
var b=a.__getslice__(0,len(b),1);
traverse(node.left);
any(function(){var __accu0__=[];for(var x of range(20,1,-1))__accu0__.append(__mod__(n,x));return py_iter(__accu0__)}());
con.ping(true);
sleep(2);
set(a)&set(xyz);
parser.set_document(doc);
print(i);
dict({});
var fig=matplotlib.pyplot.gcf();
var primes=function(){var __accu0__=[];for(var n of count(2))if(all(function(){var __accu1__=[];for(var d=2;d<n;d++)__accu1__.append(__mod__(n,d));return py_iter(__accu1__)}()))__accu0__.append(n);return py_iter(__accu0__)}();
list(py_reversed(list(range(diamond-1))));
var doc=fromstring(requests.py_get(url).content);
x.normalize();
self.foo(__kwargtrans__({n:n}));
py_typeof(object);
network_select.grid();
self.timer.timeout.connect(self.readData);
var qry=qry.filter(Parent.child_count_ex(stime,etime)>0);
np.array([f0,f1]);
np.random.seed(10);
df2.columns=cols;
show();
messages[0].attributes;
os.chdir(tmp_a);

print(df);
show();
links.append(link);
print(config_root.server.host);
export var not_all_zero=function(){var __accu0__=[];for(var x of columns)__accu0__.append(any(x));return __accu0__}();
var obj=model_class.objects.py_get(__kwargtrans__({py_name:model.py_name}));
var counts=np.fromiter(counts_it,np.intp,nnz);
var X=[[1,-1,2],[2,0,0],[0,1,-1]];
var content=open(match).read();
str(self)+other;
export var by_bins=dict(function(){var __accu0__=[];for(var [k,v]of by_bins_iter)__accu0__.append(tuple([k,tuple(v)]));return py_iter(__accu0__)}());
var col=pd.MultiIndex.from_product([df.columns,[0,1]]);
export var reverse_edge_list=function(){var __accu0__=[];for(var t of edge_list)__accu0__.append(t.__getslice__(0,null,-1));return __accu0__}();
a.filled(0).sum(__kwargtrans__({axis:axis}))*1/counts;
export var sig=np.sin(2*np.pi*f*t);
urllib.request.urlopen(req);
(function(){var __accu0__=[];for(var py_name of names)if(re.match(glob2re(pat),py_name))__accu0__.append(py_name);return py_iter(__accu0__)})();
var chunk=request.read(handler.chunk_size);
response;
self._popup=gtk.Window(gtk.WINDOW_POPUP);
export var newtype=numpy.dtype(dtype);
list.__init__(self,lst);
plt.ylim(__kwargtrans__({ymin:0}));
print(is_perfect_cube(64));
print(dameraulevenshtein(gene_stringify(list1),gene_stringify(list2)));
Py_Initialize();
var xyz=np.vstack([x,y,z]);
logging.debug(e);
traceback.print_exc(sys.stderr);
var __left0__=tuple([x,y]);self.x=__left0__[0];self.y=__left0__[1];
export var btn=Button(frame);
var response=HttpResponse();
var stations=dict({});
self.print_help();
xy[1];
mat.reshape(m,-1).__setitem__([tuple([0,null,1]),np.eye(n,r,__kwargtrans__({dtype:bool})).ravel()],np.nan);
b.__getitem__([0,0]);
var text=text.lower();
starts.__setslice__(1,null,null,np.cumsum(counts.__getslice__(0,-1,1)));
export var constructors=[int,float,str];
tuple([tuple([.8,.6,.6])]);
var A=list(range(10));
plt.plot(numpydata);
mytime+=timedelta(__kwargtrans__({hours:6}));
print(getargspec(f));
var __left0__=process.communicate();var stdout=__left0__[0];var stderr=__left0__[1];
export var foosparse=scipy.sparse.lil_matrix(tuple([N,M]));
self.x=x;
var result=client.read_input_registers(1,1,__kwargtrans__({unit:1}));
self.__fill_right();
var config=ConfigParser.RawConfigParser();
var py_values=json.load(f);
export var TempLake=np.zeros(tuple([N+1,Nlayers]));
ax.set_title(t);
new_page;
self.subplot.py_clear();
self._data[key];
plt.matshow(image);
self.seek(0);
array([Y[1],a*Y[0]+b*Y[1]]);
mysql.commit();
var a=np.arange(24).reshape(4,6);
export var xa=np.hstack([[0],x,[0]]);
export var im0=Image.open(tilefilename);
export var mprev=exists_re.search(currline);
fq[w]+=1;
bar;
self.num_gears=len(self.gears);
print(f.tail(5));
signal.alarm(timeout);
parent.list_child_properties();
a.__setitem__([i,j],random.random());
tuple([0,1])[true];
Dummy();
var s1=Singleton();
export var gps_epoch=datetime(1980,1,6,0,0,0);
var bins=numpy.arange(-1,11);
subprocess.Popen(args);
true;
var arr1=array.__getslice__(0,i+1,1);
sys.exit();
export var last_monday=datetime.date.today()+rd.relativedelta(__kwargtrans__({weekday:rd.MO(-1)}));
django.core.management.setup_environ(settings);
fcntl.ioctl(console_fd,KDSETLED,0);
np.random.seed(1);
sum(function(){var __accu0__=[];for(var i=0;i<1E6;i++)__accu0__.append(generate());return py_iter(__accu0__)}());
var __left0__=tuple([b,a+b]);var a=__left0__[0];var b=__left0__[1];
M.__setitem__([5,5],1);
var d1=threading.Thread(__kwargtrans__({target:dep1}));
var G2=nx.Graph(G);
var out=function(){var __accu0__=[];for(var i of ii)__accu0__.append(f(df.iloc.__getslice__(i,i+N,1)));return __accu0__}();
var is_active=true;
new_data;
var li=[];

var tree=etree.HTML(s);
bar();
res.py_get();
result.astype(int);
print(r.pattern);
var expr=(a+b*x)/(c+d*x);
var formset=QuoteFormset(request.POST);
file.close();
self.color=[1,1,1,1];
L2[1]=5;
var __left0__=tuple([10,25]);var x=__left0__[0];var y=__left0__[1];
var x=np.arange(6);
export var void_p=ctypes.cast(p,ctypes.c_voidp).value+1;
transaction.leave_transaction_management(__kwargtrans__({using:self.db}));
export var deF=789;
zipInfo.external_attr=511<<16;

var cbar_ax=fig.add_axes(datco);
fd.write(chunk);
export var binlims=zip(bin_edges.__getslice__(0,-1,1),bin_edges.__getslice__(1,null,1));
remove_all(v);
db.session.merge(my_new_posts.py_pop(each.id));
output.addPage(review_pdf.getPage(0));
arr.reverse();
n;
export var nullhandler=logger.addHandler(NullHandler());
Vector(function(){var __accu0__=[];for(var [x,y]of zip(self,a))__accu0__.append(x+y);return py_iter(__accu0__)}());
var queryset=Person.objects.all();
export var index_offset=np.arange(num_labels)*num_classes;
Test().seasonal_greeting();
all(a_replaced==a_new);
var result=localtime(some_time_object);
tuple([[false,false,false,false,true]]);
print(index_of_last_nonzero(__kwargtrans__({lst:b})));
x.__setitem__([i,tuple([0,null,1])],np.cos(x.__getitem__([i,tuple([0,null,1])])));
export var get_col=str(worksheet.cell_value(row-1,i));
ydata;
export var DEVICES=[0,1,2];
var c=a+b;
var indices=np.cumsum(n_values);
var __left0__=tuple([xs[1]-xs[0],ys[1]-ys[0],zs[1]-zs[0]]);var dx=__left0__[0];var dy=__left0__[1];var dz=__left0__[2];
copy[alert_status];
df;
out.__setitem__([4,2],1);
var s=s.__getslice__(0,null,-1);
series.hist(__kwargtrans__({ax:ax,bins:100,bottom:.1}));

var form=CustomBarModelForm;
pl.figure();
printList.append(line);
var obj=self.request.user.account;
axicon.set_xticks([]);
print(the_matrix[0][1]);
[arr[cond],arr[~cond]];
client.load_system_host_keys();
self.server_activate();

method.__code__.co_argcount-1;
randomList;
var fig=plt.figure(1,__kwargtrans__({figsize:tuple([5,5])}));
numpy.float64(1)/0;
var count=Counter(x);
var obj=json.loads(line);
my_logger.addHandler(handler);
!bool(+b_count);
cv.EqualizeHist(image,image);

var t=dt*np.arange(num_samples);
new set([new set([data|safe])]);
po.close();
print(hello_ext.greet());
result.append(-1);
np.random.seed(6);
client.set_missing_host_key_policy(paramiko.AutoAddPolicy());
self.children=collections.defaultdict(function __lambda__(){return self.__class__()});
var end=time.time();
model.add(Dropout(.5));
export var l2norm_inv=tf.rsqrt(tf.reduce_sum(x*x,dims,__kwargtrans__({keep_dims:true})));
var dist=Math.pow(om1-om2,2);
var mylist=[];
result.__doc__=cls.__doc__;
frontier_index+=1;
Departure_Date.objects.all();
Y.__setitem__([tuple([0,null,1]),2],2);
imsave(target_path,image);
foo.save();
export var amounts=[];
export var postal_code=db.PostalAddressProperty();
var vect=np.arange(float(N));
var cols=df.columns.difference(unused_cols);
myResult.append(key);
total+=numa;
self.path==other.path&&self.title==other.title;
var sample=random.sample(yourlist,sample_size);
export var optionN=true;
list(ChildForm().fields.py_keys());
var W=np.asmatrix(np.arange(N*N).reshape(N,N));
var qry=session.query(Group).order_by(Group.py_name);
tmax+=2*np.pi;
(function(){var __accu0__=[];for(var g of groupby(iterable,f))__accu0__.append(g[1]);return py_iter(__accu0__)})();
V[i]=np.sum(dV);
var buffer=bytearray(size);
dict(function(){var __accu0__=[];for(var i of groups)__accu0__.append(tuple([py_next(i[1])[0],list(py_next(groups)[1])]));return py_iter(__accu0__)}());
df.index=list(range(i*chunksize,i*chunksize+len(df.index)));
var dice=random.randint(1,6);
self.process.started.connect(function __lambda__(){return self.runButton.setEnabled(false)});
py_items.reverse();
self._data_filter=dict({});
result;
self.Bind(wx.EVT_CHECKBOX,self.onCheckChangeBG,self.cbBG);
var B=A.__getslice__(0,len(A)/2,1);
var res=defaultdict(list);
var x=mu+sigma*np.random.randn(N);
var f=opener.open(req);
s.read();
html4css1.Writer.__init__(self);
var a=QApplication([]);
export var column_index=Ks.indices;
skyscrapers[-i]=AIR;
var ax=fig.axes[0];
quote2.text;
transaction.enter_transaction_management();
pylab.figure();
1/(N-1)*autoCov;
tuple([2,0])-.0182867906276;
var b=np.py_sort(a);
var B=numpy.zeros(len(A),__kwargtrans__({dtype:int}));
var r=s.py_get(url);
var writer=csv.writer(output_file);
var x=np.arange(10);
print(l);
print(df1);
var foo=Foo();
properties.append(val);
do_something;
parser.set_document(doc);
dbCursor.execute(sql);
assocs_exist;
seen_add(k);
-some_project2;
var channel=connection.channel();
image._dump(__kwargtrans__({format:self.get_format(image)}));
export var cC=pd.cut(C,11);
var reader=csv.reader(lines.splitlines(),__kwargtrans__({skipinitialspace:true}));
var C=np.cov([x-x.mean(),y-y.mean()]);
var feed=f.read();
vals.append(frame_from_dict(v,depth-1));
print(quote);
recreatedModel.load_weights(fname);

var a=[];
stiff.simplify();
var b=a;
new_val.append(x[2]);
imageItem.save();
f_inrange;
var count=IntegerField();
self.error_handler.check_response(response);
var n=ctypes.cast(m,ctypes.POINTER(someTime));
export var alts=np.arange(1,1E3,21.717);
export var pos1=ax.get_position();
__mod__(15,4);
f.write(file_data);
var resp=requests.py_get(dls);
export var cls=KMeans(n_clusters,__kwargtrans__({n_jobs:-1}));
self.celery.terminate();
rows.__setitem__([tuple([0,null,1]),tuple([0,null,1])],[255,0,0,255]);
var choices=numpy.array([[0,0,0],[255,255,255]]);
var children=[];
hist[b==bins[0]]=0;
var wb=excel.Workbooks.Add();
var t=range_tuple(1,2);
queue.put(temp);
signal.signal(signal.SIGALRM,function __lambda__(){var args=tuple([].slice.apply(arguments).slice(0));return handle_alarm(self)});
var logger=logging.getLogger(__name__);
plt.scatter(x_arr,y_arr);
tar.addfile(tarinfo,StringIO.StringIO(data));
p.join();

y.shape;
data.append(py_name);
m.set(r,c,0);
redirect(urljoin(static_url,filename));
var n=a.shape[0];
ef;
_write_to_cache(cache_key,value);
(function(){var __accu0__=[];for(var [i,bar]of enumerate(b))__accu0__.append(bar.set_x(bins[i]));return __accu0__})();
d.cards.append(card);
var seen=set();
scatter_plot.set_facecolors(new_facecolors);
var ret=_aligned_array_type(py_name,tuple([aligned_array]),d);
var b=np.ascontiguousarray(B).view(rowtype).ravel();
var ds2=set(function(){var __accu0__=[];for(var py_values of df2.py_values.tolist())__accu0__.append(tuple(py_values));return __accu0__}());
var lines=[];
var gray=cv2.cvtColor(img,cv2.COLOR_BGR2GRAY);
a[i]+=5;
tuple([[0,0,0,0,0,1]]);
var __left0__=curve_fit(fourier,z,Ua,[1]*8);var popt=__left0__[0];var pcov=__left0__[1];
plt.figure();
mantissa*Math.pow(10,exponent);
a.coeffs();
var __except0__=web.nomethod(cls);__except0__.__cause__=null;throw __except0__;
var app=QtGui.QApplication(sys.argv);
int(numre.search(s).group());
var workbook=writer.book;
JTIwQXV0aG9yaXR5KDgpLmNydDBNBggrBgEFBQcwAoZBaHR0cDovL2NvcnBwa2kv;
app.grid();
var cj=cookielib.LWPCookieJar();
var a=models.CharField(__kwargtrans__({max_length:42}));
pub_dict[p.key]=[];
result[key]=list(function(){var __accu0__=[];for(var v of valuesiter)__accu0__.append(v[0]);return py_iter(__accu0__)}());
export var same_edge_id=graph.get_eid(source_vertex_id,target_vertex_id);
var indexes=mydict.py_setdefault(item,[]);
print(numbers);
self.application.pc.connection.channel(self.rabbit_channel_in_ok);
export var weak=weakref.WeakValueDictionary();
main();
var worksheet=XSCRIPTCONTEXT.getDocument().getSheets().getByIndex(0);
var value=m[1];
print(total_length);
export var hashed_array=(base*array).sum();
export var orig_indices=xs.argsort();
var f=function __lambda__(){var args=tuple([].slice.apply(arguments).slice(0));return self.fn(obj,...args,__kwargtrans__(kwds))};
var d=deque(list(range(5)));
var api=restful.Api(app);
PUSH(map);

var data=A.flatten();
Relational(all_on_left,sympy.sympify(0),op);
list(chain_(map(C,chain_(map(B,A())))));
var numbers=map(int,numbers.py_split());
var epoch=datetime.datetime(1970,1,1);
print(lengthy_thingy.__len__(lengthy_thingy));
var py_items=list(range(10));
var __left0__=np.meshgrid(A.__getitem__([tuple([1,null,1]),1]),B.__getitem__([tuple([1,null,1]),1]));export var y12=__left0__[0];export var y22=__left0__[1];
true;
libc.prctl(16,byref(buff),0,0,0);
cv2.destroyWindow(winName);
do_more_stuff();
a.apply(func);
print(solution2);

time.sleep(1);
None.__cause__=null;throw None;
var __left0__=ax.get_ylim();export var low=__left0__[0];var high=__left0__[1];
var arr=_owndata.test();
var x_key=x[1];
export var indice=numpy.where(y!=0);
py_values(np.arange(len(A)));
print(dict([[key1,key2]]));
pylab.ion();
var result=[];
result_ch.send(f(...args,__kwargtrans__(kwargs)));
val;
pprint(res.asList());
args.parser.print_help();
export var princ=cc.principal();
print(r.json());
http_server.listen(port);
var s=timedelta();
var d=dict({});
self.mainLayout.setMargin(10);
var n=json.dumps(m);
export var chan=ssh.invoke_shell();
export var serves_pizza=models.BooleanField();
export var myFile=csv.writer(fp);
a.py;
mtransforms.Transform.__init__(self);
var d=Dummy();
mat.move(7,6,0,__kwargtrans__({r:true}));
self.canvas.add(self.children[0].ig);
print(i);
func();
export var plen=len(lst)/n+(rest>0?1:0);
var py_keys=set(sum(function(){var __accu0__=[];for(var dic of dicts)__accu0__.append(list(dic[topkey].py_keys()));return __accu0__}(),[]));
df;
var username=session.settings.key().py_name();
print(args.files);
_helper();
message;
chid.py;
dict(list(grouped));
export var p0=sy.array([1,1,1]);
export var grayed_rgb_color=hsv_to_rgb(...grayed_hsv_color);
print(listEven);
webpage.close();
export var patterns=zip(...function(){var __accu0__=[];for(var p of group)__accu0__.append(table[p]);return __accu0__}());
export var myimg=models.ImageField(__kwargtrans__({upload_to:img_file_path}));
math.sqrt(x);
Image.open(infile).save(outfile);
tuple([a,b]);
myprocess.stdout.close();
b_bins.agg([mean,median]);
export var exc_info=sys.exc_info();
var listbox=tk.Listbox(master);
var df_test=pd.read_csv(filename,__kwargtrans__({nrows:100}));
print(ch);
print(lines.shape);
o.unschedule_all();
!any(function(){var __accu0__=[];for(var inner of x)__accu0__.append(any(inner));return py_iter(__accu0__)}());
var url=Field();
plt.yticks(y,yticks);
var y=np.vstack(tuple([x-1,x,x+1]));
var data=urllib.parse.urlencode(py_values);
int(zahl);
sys.getrefcount(astrd);
var t=t.py_setdefault(k,dict({}));
os.close(fd);
abs(a-b)<=max(rel_tol*max(abs(a),abs(b)),abs_tol);
print(date-delta);
[0,[0,py_values,2],2];
var a=datetime(2010,12,5);
factorise(4999);
[2,491];
self.x=x;
var L=np.polynomial.legendre.legval(x,np.identity(50));
var clf=RandomForestClassifier(__kwargtrans__({n_estimators:20,max_depth:5}));
print(sys.argv);
var __left0__=tuple([urlat]);export var llcrnrlon=__left0__;export var lllon=__left0__[0];export var llcrnrlat=__left0__[1];export var lllat=__left0__[0];export var urcrnrlon=__left0__[1];export var urlon=__left0__[0];export var urcrnrlat=__left0__[1];
export var Dictionary=dict(Arr);
df;
var ax2=fig.add_axes([.05,.475,.9,.15]);
ancestors_descendents.add(ancestor);
py_typeof(self)(self.default_factory,self);
export var d2_keys=set(d2.py_keys());
Py_Initialize();
var fig=plt.figure();
install_miniconda;
var py_items=[];
print(np.ma.compressed(m_));
print(temp.array.__getslice__(0,null,1));
xor_2str(xor_2str(and_2str(x,y),and_2str(x,z)),and_2str(y,z));
var Session=scoped_session(sessionmaker());
var b_o=tf.Variable(tf.zeros([n_out]));
var maxlen=np.max(pairs,__kwargtrans__({axis:tuple([0,1])}));
var yedges=np.linspace(-10,10,100);
var __left0__=np.linalg.lstsq(G,f);var m=__left0__[0];var _=__left0__[1];var _=__left0__[2];var _=__left0__[3];
result_list.append(input_list[i]*input_list[j]);
var temp=a.__getslice__(0,1,1);
export var batch_size=tf.shape(output)[0];
self.connection.publish(self.key,data);
var s=2*((p1+p2)/2)*(1-(p1+p2)/2);
var args=parse_arguments();
func(...listOfFiles);
print(isPower(5,5));
var count=(i+1)*(n-i);
out+=arr.__getitem__([tuple([1,-1,1]),tuple([0,-2,1])]);
var res=OrderedDict();
var result=[];
unittest.main();
print(data);
var chBuf=create_unicode_buffer(BUFSIZE);
locale.atoi(s);
var result=[];
print(root.getpath(e));
export var ymulti=multiroll(x,shift);
a.__setitem__([tuple([0,null,1]),0],np.min(points,__kwargtrans__({axis:0})));
var __left0__=tuple([b,a+b]);var a=__left0__[0];var b=__left0__[1];
var html=response.read();
var s=pickle.dumps(function __lambda__(x,y){return x+y});
root.children.append(t(2));
count+=pattern==function(){var __accu0__=[];for(var row of area.__getslice__(i,i+nrows,1))__accu0__.append(row.__getslice__(j,j+ncols,1));return __accu0__}();
var a=i*x;
sum(a);
var br=mechanize.Browser();
result;
pdb>pdbs.r();
var doc=ElementTree(node);
CMD+B(OSX);
print(line);
var dt=dateutil.parser.parse(date);
164;
a1<a2?tuple([a1,min(b1,a2,b2)]):tuple([a2,min(b2,a1,b1)]);
var __left0__=plt.subplots(1,1);export var fig0=__left0__[0];var ax0=__left0__[1];
points.append(tuple([-1,.5]));
var fig=gcf();
var lens=np.array(function(){var __accu0__=[];for(var item of v)__accu0__.append(len(item));return __accu0__}());
export var mydict2=dict({});
print(item.py_name,item.birthday);
bagoftricks.bagoftriks.geofind();
var block=f.read(block_size);
root;
print(r);
sys.excepthook=logexception;
total_size+=os.path.getsize(fp);
var A=np.random.rand(N,N,N);
var x=df.__getslice__(milestones_df.index[milestone_index],df.index.max(),1);
self.foo=foo;
var out=np.empty(N);
var midpoint=vor.points[[p1,p2]].mean(__kwargtrans__({axis:0}));
base.Main();
outer_fn();
Like.user_likes_article(request.user,article);
[[n]];
var c=MyClass();
x[x>1]=1;

wrapper;
var threads=[];
export var b_padded=np.append(b,np.zeros(pad_size)*np.py_NaN);
print(list(dict.py_keys()));
n?nest([x],n-1):x;
tuple([stdout,stderr]);
df2;
A_noisy[outlier_idxs]=20*numpy.random.random(tuple([n_outliers,n_inputs]));
false;
mylist.append(t);
s.send(dst_addr+src_addr+ethertype+payload+checksum);
var y=np.ones_like(x);
var seen=list();
self.memo.py_update(json.load(f));
var result=dict({});
process(i);
PyList_Append(list,dict);
self.sleep_time=sleep_time;
var i=sum_a.index(min(sum_a));
d;
tuple([fpr.__getslice__(0,p+1,1),tpr.__getslice__(0,p+1,1)]);
pylab.plot(freq,numpy.abs(Y));
2*t;
[f[value]]+multimap(f[value],f,count-1);
export var pixPunit=trans.transform([tuple([1,0]),tuple([0,1])])-ax.transData.transform(tuple([0,0]));
self._close_database();
export var future_time=utc_time+timedelta(90);
self.py_values=py_values;
var t=t.upper();
getcontext().prec=6;
self.query.get_count(__kwargtrans__({using:self.db}));
df.columns.names=df.columns[0];
d.close();
var c=tuple(map(sub,a,b));
a.__getslice__(0,null,1);

x(1);
var garbage=[];
var b=f.read(1);
var out=np.empty(tuple([m,o]),__kwargtrans__({dtype:np.result_type(A,B)}));
exit(1);
var combined=numpy.zeros(len(neg)+len(pos));
self.getter(instance,self.py_name);
var listOfStuff=tuple([[a,b],[c,d],[e,f],[f,g]]);
var module=inspect.getmodule(fun);
self.x=1;
export var proper_name=py_name.title().py_split();
cache[to_calc];
var __left0__=parser.parse_args();var options=__left0__[0];var args=__left0__[1];
recursive_del(a,keepset);
com.setDTR(false);
current_set.append(item);
var parser=argparse.ArgumentParser();
var __left0__=np.unravel_index(a.ravel().argsort().__getslice__(0,4,1),a.shape);var r=__left0__[0];var c=__left0__[1];
print(StringFormattingParser.getKeyNames(value));
sorted_pairs[0][1];
logger.addFilter(ContextFilter());
show_defaults(foo);
print(mysql_time_epoch);
1;
py_next(self);
var base=urlparse.urlparse(base);
a.__setslice__(1,1,null,b);
var n=py_iter(range(len(L)-1,-2,-1));
var y=np.mgrid.__getslice__(1,9,complex(0,120));
var d=function(){var __accu0__=[];for(var el of c)__accu0__.append(tuple(function(){var __accu1__=[];for(var el2 of el)__accu1__.append(int(el2));return py_iter(__accu1__)}()));return __accu0__}();
mydict2;
var common=set(x[0]);
export var dx_dt=np.gradient(a.__getitem__([tuple([0,null,1]),0]));
var a=formA.save();
output.write(line);
self.lbl.configure(__kwargtrans__({text:data}));
export var needs_pressing=false;
self.pred(obj)||predicate(obj);
people_map[py_name]+=int(number_str);
main();
var created=models.DateTimeField(__kwargtrans__({auto_now_add:true}));
ax1.set_yticks([]);
print(Bar.x);
var a=set();
dir(g);
var l=[];
p.daemon=true;
var server=smtplib.SMTP(SERVER);
var ch=f.read();
var sample=random.sample(rects,NUM_RECTS);
export var ncolors=len(colors);
export var utc_secs=time.ctime(utc_secs);
runit(function __lambda__(){return cube_generator()});
filepaths.append(filename);
floor(0,5);

s[axis]=slice(start,stop);
ret.append(np.zeros(fixed_length));
var mngr=plt.get_current_fig_manager();
print(seq.dump());
dict({});
var b=bytearray(s);
X.mask;
w.Sheets(1).Copy(wb.Sheets(1));
var vectorizer=TfidfVectorizer();
py_typeof(x).__name__;
pyparsing.Optional(aTag);
var __left0__=tempfile.mkstemp();var fd=__left0__[0];var filename=__left0__[1];
export var jsoned=json.loads(x);
var g=abs(g);
data.py_update(value);
export var idx_begin=A.indptr[i];
logOutput.moveCursor(QTextCursor.End);
export var s_as_str=codecs.charmap_encode(s)[0];
export var absp=os.path.abspath(ProgPath);
var iterables=function(){var __accu0__=[];for(var it of iterables)__accu0__.append(py_iter(it));return __accu0__}();
from_date.py_replace(__kwargtrans__({year:from_date.year-years}));
dis.dis(code.co_consts[1]);
export var stack=[[]];
export var _data=self.request.recv(1024);
self.b=b;
tuple([prob_list[sel1][0],prob_list[sel2][0]]);
export var ip_dict=dict(zip(ip_addresses,list(range(len(ip_addresses)))));
count+=1;
samples.append(line);
stdout.write(resultString);
var body=mail.get_payload();
export var r4=py_next(reikna_norm_rng(seed2,rows,cols,mu,sd));
export var Ah=np.vstack(A);
pickle.dump(classifier,output);
var manager=mp.Manager();
var answer=dict({});
rolling_window(b,100);
export var corner12=[0,1];
f(...args,__kwargtrans__(kwargs));
new_style.append(line);
var mylist=[100,2E3,1,5];
data.append(v);
2;
var config=ConfigParser.ConfigParser();
self.calls.append(self.current);
__mod__(a,b);
var __left0__=list(d.py_items());var k=__left0__[0][0];var v=__left0__[0][1];
d.set_state(gst.STATE_PLAYING);
key.upper();
self.char_count.grid();
var y=np.random.rand(100);
signal.alarm(t);
log(Math.pow(x,72))/log(2);
plt.show();
node_to_dict(instance,suds_data);
var pool=Pool(__kwargtrans__({processes:16}));
false;
os.mkdir(dir);
[[current]];
var d=docx.Document();
var __left0__=np.unique(data,true,true);var a=__left0__[0];var b=__left0__[1];var c=__left0__[2];
export var pdf_text_object=canvas.beginText((PAGE_WIDTH-text_width)/2,y);
delattr(obj,self.private_name);
var enc=base64.urlsafe_b64encode(test);
json.dumps(self._items.py_get(py_name));
true;

export var TOA12=Ta-Tb;
ax.set_title(x_str);
self.separator.join(ret);
export var partitions=function(){var __accu0__=[];for(var i of range(0,len(data),n))__accu0__.append(data.__getslice__(i,i+n,1));return __accu0__}();
var i=i+1;
xml.sax.handler;
p.join();
export var overflowed=(number&256)>>8;

false;
var source=browser.page_source;
self.window.set_size_request(200,200);
fail();
var autorestart=py_true;
export var comm=MPI.COMM_WORLD;
by_parent[branch.p].append(branch);
print(field,value);
var d=etree.HTML(s);
var form=CustomForm;

var A=A.__getslice__(0,null,2);
c.wait();
(function(){var __accu0__=[];for(var x of a)if(!__in__(x,b))__accu0__.append(x);return __accu0__})();
result;
export var queue_state=channel.queue_declare(queue,__kwargtrans__({durable:true,passive:true}));
dog.save();
IPython.embed();
export var cstr=ctypes.c_char*BUFSIZE();
var r=requests.py_get(url);
main.object1[0];
var __except0__=AttributeError();__except0__.__cause__=null;throw __except0__;
parent_mock._kids;
export var pxarray=pygame.PixelArray(surface);
print(other.f(1));
export var valid=set(string.ascii_letters);
sum(tupleOfTuples,tuple([]));
Z*=np.exp(complex(0,.25)*np.pi/2);
var words=lst2.py_split();
var x=1;
lcd.setSegmentStyle(QtGui.QLCDNumber.Flat);
self.already_computed[index];
export var ntup=itertools.tee(iterable,n);
false;
var __left0__=p.communicate(__kwargtrans__({input:input}));var stdout=__left0__[0];var stderr=__left0__[1];
var fig=plt.figure();
var driver=webdriver.Chrome(__kwargtrans__({desired_capabilities:d}));
words[last_p].append(word);
proc.communicate();
map_level(double,data,2);
m.press(x,y);
win.refresh();
f.read();
print(word);
fib_to(20);
opener.open;
var city=models.CharField(__kwargtrans__({max_length:150}));
export var last_seen_date=daterow.text;
var result=np.zeros(tuple([len(x),len(uniq)]),__kwargtrans__({dtype:int}));
clientThread.start();
json.dumps(theQuery);
var dt=4E-8;
perm_list.add(tuple(temp));
isinstance(u,Interval)?[list(u.args.__getslice__(0,2,1))]:list(u.args);
cus_Y4o9qMEZAugtnW;
t.create();
wrapper;
func_decorator;
BOW.add(dsc);
house_list[new_house].window_list.append(Window());
export var mongo=PyMongo();
var i=0;
var results=timer.timeit(1E4);
var point=geom.Point(x,y);
out+=arr.__getitem__([tuple([2,null,1]),tuple([1,-1,1])]);
var __left0__=tuple([[0],list(range(1,n)),[n]]);var first=__left0__[0];var middle=__left0__[1];var last=__left0__[2];
np.array(r,__kwargtrans__({dtype:np.integer}));
var data=json.loads(cleaned);
setattr(cls,field_name,field);
test_import.py;
len(np.unique(sample_ix));
export var f_no_opt=types.FunctionType(code,__all__);
(.01).hex();
var caller=inspect.stack()[1][0];
ctx.set_verify(SSL.VERIFY_PEER,verify_cb);
var Qapp=QApplication(sys.argv);
z.T.dot(z);
p+=1;
foo.__code__.co_consts;
tuple([[2,4,1]]);
plot(x,interp(x,x[y!=0],y[y!=0]));
self.listWidget.setSelectionMode(QtGui.QAbstractItemView.MultiSelection);
app.add_autodocumenter(SimpleDocumenter);
var db=SQLAlchemy(app);
xyz(x);
repr(self.val);
results.append(fullname);
p.start();
pl.show();
response+=read_bytes;
Py_Initialize();
var mylist=[];
export var stacked=numpy.vstack(tuple([a,fill,a]));
s.add(i);
l2(1,2);
char;
format(1);
export var yint=list(range(min(y),math.ceil(max(y))+1));
export var w1back=numpy.array(json.loads(w1string));
print(df);
nx.path.bidirectional_dijkstra(G,1,4);
export var npad=tuple([tuple([0,0]),tuple([1,2]),tuple([2,1])]);
var X=boston.data;
stringfier;
var fig=plt.figure(__kwargtrans__({figsize:tuple([8,6])}));
os.mkdir(dirname);
mycounter;
xdebug.remote_enable=1;
self.py_name;
var words=len(word);
wait(time.Millisecond*200);
self.exclude(__kwargtrans__({groups_set__pk:group.pk}));
-1;
self.flip();
var yl=ax.get_ylim();
var index=tf.range(0,batch_size)*max_length+(length-1);
var page=urllib.request.urlopen(root_url).read();
var key=cv2.waitKey(10);
time.sleep(pause);
var __left0__=tuple([b,a+b]);var a=__left0__[0];var b=__left0__[1];
tuple([j.ra,j.az,j.dec]);
export var passphrase=base64.b64decode(passphrase);
context.extend(after_buf);
out.reshape(N,-1).__setitem__([tuple([0,null,1]),5],-sinv);
var xpointer=ctypes.addressof(asdouble);
var result=dict();
var data=eval(input());
reshaped1.show();
quit();
self.modified_date=datetime.datetime.now();
var sigma=np.sqrt(2)/n;
var y=x*x;
array([]);
var command=e.py_get();

var p=figure(__kwargtrans__({x_range:[0,10],y_range:[0,10]}));
save();
text.append(line.__getslice__(0,-1,1));
var N=len(X);
event.Skip();
var res=defaultdict(list);
print(r.json());
var __left0__=np.nonzero(both_top_n);export var row_indices=__left0__[0];export var col_indices=__left0__[1];
print(i,sub_seq(li,i));
objectify.deannotate(root,__kwargtrans__({cleanup_namespaces:true}));
a[i];
true;
export var df_dict=dict({});
var uniq=[];
x+y;
s.quit();
p.close();
job.hour.every(4);
var canvas=Tkinter.Canvas(window,__kwargtrans__({width:image.size[0],height:image.size[1]}));
xfmt.set_useOffset(1E4);
export var spaces=sum(function(){var __accu0__=[];for(var c of s)__accu0__.append(c.isspace());return py_iter(__accu0__)}());
tuple([py_get(true),py_get(false)]);
var cols=[];
export var oname=sys.argv[2];
export var connection_file=os.path.basename(connection_file_path);
a.newMethod();
sys.exit(1);
var py_name=get_name();

L_in.insert(idx,new_v);

var __except0__=MyError();__except0__.__cause__=null;throw __except0__;
MULT(z,table[index],z);
sha.hexdigest();
level.extend(tree(el,indent+2));
self.map[val];
youtube_regex_match;
export var rank_cards_map=function(){var __accu0__=[];for(var [i,c]of enumerate(rank_cards))__accu0__.append([c,i]);return dict(__accu0__)}();
var b=os.read(fd,blksize);
false;
var query=self.session.query(self.model).filter_by(__kwargtrans__({mid:term}));
~np.in1d(Ad,Bd,__kwargtrans__({assume_unique:true}));
export var vecfunc=np.vectorize(myfunc);
cam.start_camera();
var driver=webdriver.Firefox();

var post=np.sum(npseq.__getslice__(i+1,null,1))/(n-i-1);
win.set_colormap(rgba);
py_next(function(){var __accu0__=[];for(var result of comparer_iter)if(result)__accu0__.append(result);return py_iter(__accu0__)}(),0);
nf.write(contents);
ascii_lower.symmetric_difference(candidate_lower);
var loop=asyncio.get_event_loop();
var filename=os.path.splitext(base)[0];
result[widget_type].append(app);
print(str(myList));
self.serversocket.bind(tuple([socket.gethostname(),i_port]));
print(np.mean(figure>.5));
var foo=[1];
var proc=subprocess.Popen(sys.argv[1]);
print(res.getheaders());
email.utils.format_datetime(dt);
export var ec2=boto.connect_ec2();
Ti.App.exit();
var rows=models.ManyToManyField(Row,__kwargtrans__({blank:true}));
export var reductions=np.column_stack(tuple([start,end])).ravel();
print(new_string);
value[0];
weights.append(max_weight*np.random.random(numtimes+1));
tuple(serialize(function(){var __accu0__=[];for(var item of obj)__accu0__.append(item);return __accu0__}()));
np.sqrt(Math.pow(x1-x2,2).sum(__kwargtrans__({axis:0})));
var result=conn.execute(query);
self._content.read();
var f=function __lambda__(x){return x};
self._func=func;
var cell=make_closure_cell(5);
var age=db.IntegerProperty();
axes_1.add_patch(Ellipse1.art());
sorted_pairs[0][0];
foo.bars.add(...pk_list);
var p=Pool(4);
value;
ax.dataLim.update_from_data_xy(xy,__kwargtrans__({ignore:false}));
lista_elegir[indices];
traverse(node.right);
myfunc();
var grid=list(zip(...grid));
print(p(42));
var output=p2.communicate()[0];
true;
export var datadex=get_dict();
var test=Test(sys.argv.__getslice__(1,null,1));
var results=pool.map(starfoo,zip(words,numbers));
self.data=data;
var req=urllib.request.Request(url,data,headers);
writer.save();
os.close(1);
o.subscribe(c.instance_handler);
export var no_proxy_opener=urllib.request.build_opener(no_proxy);
module.__path__=[os.path.dirname(os.path.abspath(file.py_name))];
print(df);
spec.loader.exec_module(foo);
var __left0__=tuple([int(elidelen),len(value)]);export var elen=__left0__[0];export var vlen=__left0__[1];
var axs=plt.subplots(2,2)[1];
export var acl=key.get_acl();
export var sum_y=np.sum(arr.__getitem__([tuple([0,null,1]),1]));
result;

var __left0__=[4,5,6];var b=__left0__;numpy.array=__left0__;
var group=map(itemgetter(1),group);
export var last_col=len(cols)-np.where(cols.__getslice__(0,null,-1)==false)[0][0]-1;
circle(maskCirc,center,radius,Scalar(255),5);
crawler.crawl(RaListSpider());
var y2=np.random.normal(-10,10,1E5)/10;
var r=random.randint(0,i);
wr(n,val);
var col_index=list(np.arange(a.size));
(function(){var __accu0__=[];for(var word of words)__accu0__.append(word[i]);return py_iter(__accu0__)})();
x2_Kaxs[j]=function(){var __accu0__=[];for(var k=0;k<random.randint(1,5);k++)__accu0__.append(random.randint(0,9));return __accu0__}();
var table_name=self.model._meta.db_table;
print(readFileObject.readlines());
handler.setFormatter(formatter);
pprint(B_rref[0].applyfunc(function __lambda__(x){return mod(x,5)}));

var a=datetime.timedelta(__kwargtrans__({minutes:1}));
self._mod=__import__(modname);
print(first_arg_unicode);
ax.autoscale(__kwargtrans__({tight:true}));
self.logentry=[];
form.instance.user=request.user;
var heap=[];
export var no_background=np.array(no_background).T;
var tags=ListField(StringField());
strcpy(cpy,str.c_str());
export var mother=names[0].strip();
BEGIN;
ELSE;
export var pathB=cheapest_path(path_list,B,[]);
zip(a,b);
db.documents.insert(entity);
var root=Tk();
(function(){var __accu0__=[];for(var a of myarray)__accu0__.append(myfunc(a,b));return __accu0__})();
self.right=right;
var __left0__=tuple([seq[0],seq[0]]);var start=__left0__[0];var end=__left0__[1];
var offset=0;
var y=normal(0,1,n);
show(p);
var __except0__=CTError(errors);__except0__.__cause__=null;throw __except0__;
tuple([SERVICE,DESK,ANALYST-IT-Support]);
wm.add_watch(filename,mask);
var ax=fig.add_subplot(111);
lst.__setslice__(0,null,null,range(1,4));
export var phones=PhoneSerializer(__kwargtrans__({required:false,many:true}));
var b2=set(b);
export var django_file=ContentFile(result_pic.getvalue());
m_t.release();
readline.remove_history_item(readline.get_current_history_length()-1);
export var conf=ConfigParser.ConfigParser();
itertools.starmap(func,zip(...args));
var dict=pickle.loads(tcp_recieve());
var fig=plt.figure();
linkers.append(arg);
var e=Entry(win,__kwargtrans__({width:10}));
var j=int(j);
var tree=et.fromstring(xmltext);
mylib.do_something();

self.count=0;
py_typeof(io.BytesIO.read);
var args=request.args.copy();
log.startLogging(sys.stdout);
SGMLParser.reset(self);
var dir=dir.__getslice__(0,-1,1);
print(dframe);
print(rdelta);
baz();
textstring;
print(ctypes.c_char_p(p).value);
connection.execute(log_table.insert(),inserts);
true;
export var stdout_queue=Queue.Queue();
self.menuTasks=QtGui.QMenu();
a+b;
var __left0__=np.histogram2d(glat,glon,__kwargtrans__({bins:[ybins,xbins],weights:Av}));var H=__left0__[0];var xedges=__left0__[1];var yedges=__left0__[2];
list(queue);
print(repo.head.ref);
var args=parser.parse_args();
store.close();
self.randrange(a,b+1);
export var Surface=pygame.display.set_mode(tuple([1E3,600]));
palette.setColor(palette.Background,QtGui.QColor(0,170,255));
var size=file_bytes.tell();
var ws=wb.active();
math.inf;
var ids=dict({});
print(norm(15));
pool.join();
first.stdout.close();
res[f];
sysconfig.get_python_lib();
createtable.ignore(comment1);
export var sheet_rect=sheet.get_rect();
var fig=plt.figure();
export var tensordot=np.tensordot(p,A,tuple([0,0]));
var id=db.Column(db.Integer,__kwargtrans__({primary_key:true}));
self._in(wrapped.__get__(self,cls),...args,__kwargtrans__(kwargs));
export var old_clusters=np.zeros(data.shape[0]);
var l=sorted(l,__kwargtrans__({reverse:true}));
(function(){var __accu0__=[];for(var x=0;x<SET_LENGTH-1;x++)__accu0__.append(new_solution.append(data.py_pop()));return __accu0__})();
var __except0__=ExitCommand();__except0__.__cause__=null;throw __except0__;
var queue=Manager().Queue();
item.addChild(child);
self.zoomcycle+=1;
var entity2_id=Column(Integer,ForeignKey(Entity2.entity2_id));
print(result);
export var CSV_dictionary=file_open(my_file);
var data_files=[];
export var rad=np.linalg.norm(X,__kwargtrans__({axis:1}));
var n=L[0][0];
Form.show();
var x=[0]*51;
df;
export var plat=sys.platform;
print(data.py_values[np.searchsorted(data.ages,desired_ages)]);
sleep(1);
export var MB_YESNO=4;
var result=function(){var __accu0__=[];for(var [k,v]of list(result.py_items()))if(v)__accu0__.append([k,v]);return dict(__accu0__)}();
form.populate_obj(team);
a;
self.lbl.grid();
var grouped=groupby(function(){var __accu0__=[];for(var c of word.lower())if(__in__(c,_sounds))__accu0__.append(_sounds[c]);return py_iter(__accu0__)}());
self.data=dict(...args,__kwargtrans__(kw));
var t=tuple(function(){var __accu0__=[];for(var text of div.stripped_strings)__accu0__.append(text);return py_iter(__accu0__)}());
var dist=min(y)-max(x);
var pid=os.fork();
newdata[a]=[a,b,c];
export var pt0=time.time();
var file=models.FileField(__kwargtrans__({upload_to:get_random_filename}));
print(sys.exc_info());
self.ax.plot(angle,py_values,...args,__kwargtrans__(kw));
var b=x+y;
var fig=plt.figure();
var children=li.findChildren();
export var ig0=itemgetter(0);
var __left0__=zip(...sorted(obj.py_items()));var _=__left0__[0];var py_values=__left0__[1];
var filename=data.filename;
deleteself._inner[index];
var archive=py7zlib.Archive7z(fp);
py_typeof(o);
tuple([label_text_baseline,label_text_color,label_text_font]);
candidates.extend(cchildren);
var ax=plt.gca();
export var Foo=ctypes.POINTER(myStruct)();
foo.foobar=2;
var y=array(100);
var pipe=subprocess.PIPE;
self.symb=symb;
res;

conn.autocommit(true);
var w=np.where(np.isnan(x))[0];
df;
self.a=42;
var m=pd.Series(f[0],f[1]);
var __left0__=np.meshgrid(np.linspace(-5,5,num),np.linspace(-5,5,num));var x=__left0__[0];var y=__left0__[1];
dddcccba;
C.__setstate__(self,ds[0]);
application.listen(8E3);
var y=cos(x)*Math.pow(x,2)+x+sin(x-1);
tracker.save();
tuple([[1,1,0,0,1]]);
dvals.mean();
var cursor=connection.cursor();
importlib.import_module(self.mapToTarget(py_name));
var lists=tuple([a,b,c]);
xml_to_dict(root);
ax.set_xticks(major_locations);
result;
tuple([1]);

p.showPage();
Sender(host,port);
point_neighbors.append(points[index]);
var __left0__=pl.hist(pl.rand(1E3),20);var N=__left0__[0];var bins=__left0__[1];var patches=__left0__[2];
s;
io.seek(0);
process(x.groups());
print(f);
print(child.GetObjectDescription());
var argsdict=dict();
export var lly=lly.flatten();
export var urx=urx.flatten();
export var ury=ury.flatten();
export var final_ensemble=copy(all_ensembles[0]);
myList[0];
export var heights=np.sin(2*np.pi*np.sqrt(Math.pow(X,2)+Math.pow(Y,2))/N);
var title=db.Column(db.String(255));
var __left0__=the_tuple;var domain=__left0__[0];var level=__left0__[1];var url=__left0__[2];var text=__left0__[3];
lines(SL);
options.append(false);
-x+x*Log[x];
var sqs=sqs1|sqs2;
print(a.f1(10));
dict(chain(...map(dict.py_items,dicts)));
(a[ti[0]]==a[ti[1]]).any();
postsort.append(tuple([category,sorteddata]));
export var istream=ZipFile(zname).open(zipextfile);
multi.start();
args.extend(names);
var a=list(range(1,10));
var stdout=subprocess.PIPE;
self.im_data_lock.acquire();
export var fum=Fum();
setattr(namespace,group,groupspace);
mysql.init_app(app);
export var time_info=function(){var __accu0__=[];for(var _f of str_list)if(_f)__accu0__.append(_f);return __accu0__}();
export var subscription_id=db.Column(db.Integer);
var a1=np.array(list(np.zeros(20))+list(np.ones(20))+list(2*np.ones(17)));
var last_row=len(rows)-np.where(rows.__getslice__(0,null,-1)==false)[0][0]-1;
var laparams=LAParams();
var key=path[-1];
var comp=function __lambda__(x,y){return cmp(x.ID,y.ID)};
setup.py;
export var TORNADO_PORT=settings.TORNADO_PORT;
print(a);
len(l)>1?l:l[0];
a[ind];
self.scat=self.ax.scatter(X.__getitem__([tuple([0,null,1]),0]),X.__getitem__([tuple([0,null,1]),1]),X.__getitem__([tuple([0,null,1]),2]),__kwargtrans__({c:c,s:200}));
var result=ws.recv();
export var tfidf=TfidfVectorizer().fit_transform(twenty.data);
var sorted_dict=function(){var __accu0__=[];for(var [k,v]of ordered_kv)__accu0__.append([k,function(){var __accu1__=[];for(var n of d[k])__accu1__.append([n,list(v)]);return dict(__accu1__)}()]);return dict(__accu0__)}();
export var Day=int(current_date.__getslice__(0,2,1));
export var Sxy=Sxy+x*y;
import_array();
var pool=multiprocessing.Pool(THREADS);
b.argmax(1);
sys.stdout.write(text);
var it=py_iter(iterable);
var s=s.__getslice__(1,null,1);
var sess=tf.InteractiveSession();
o.close();
AnonymousUser();
var root=Tkinter.Tk();
var a=math.floor(math.log10(y));
print(key);
var new_list=[];
export var oldperson=Person();
var product=np.dot(A,A.T);

var x=arr[7].max();
point_neighbors_list.append(point_neighbors);
var df=pd.crosstab(df.actual,df.predicted);
run_multiple_jobs();
var loop=asyncio.get_event_loop();
var weights=array(list(range(1,4)));
self.__parse_xml_declaration(xml_file);
data[py_name][attr_name][attr_year]=value;
fig.clf();
ABCD;
var xvals=np.arange(0,10,.1);
var __left0__=np.ogrid.__getitem__([tuple([-radius,radius+1,1]),tuple([-radius,radius+1,1])]);var y=__left0__[0];var x=__left0__[1];
var communication_set=CommunicationFormSet(__kwargtrans__({instance:my_contact}));
var small_primes=itertools.takewhile(function __lambda__(p){return p<n},primes);
export var biggest_label=size.__getslice__(1,null,1).argmax()+1;
server.data(msg);
self.__dict__[field]=value;
dict(count);
export var pads=tuple(function(){var __accu0__=[];for(var i of desired_shape-arr.shape)__accu0__.append(tuple([0,i]));return py_iter(__accu0__)}());
var l=[1,2,5];
export var sorted_=sorted(myList,__kwargtrans__({key:itemgetter(0)}));
var __path__=pkgutil.extend_path(__path__,__name__);
var n=arr.shape[1];
print(xbee.wait_read_frame());
var d=df.py_values;

var s=df.a.__getslice__(0,null,-1).diff().gt(0).rolling(2).sum().eq(2);
var response=urllib.request.urlopen(request);
var folder=folder.strip(path);
print(rsp.raw._fp.fp._sock.getpeername());
var data=in_file.read();
export var TOKENBLANKS=1;

export var part_num=random.randint(0,len(l)-1);
1+x+Math.pow(x,2)/2;
var df=sqlc.read.options(__kwargtrans__({catalog:catalog})).format(data_source_format).load();
df;
controller.send_keys(key);
counter.py_update(d);
export var CAPTCHA_TEST_MODE=true;
export var scalars=np.arange(N);
var dims=np.maximum(B.max(0),A.max(0))+1;
export var imag_part=a.real*b.imag+a.imag*b.real;
increment();
print(np.c_.__getitem__([xx.ravel(),yy.ravel()]).shape);
var buf=cmpr.flush();
var url=models.URLField(__kwargtrans__({max_length:255,unique:true}));
var a=df.iloc.__getitem__([tuple([0,null,1]),tuple([1,4,1])]).ge(df.High,__kwargtrans__({axis:0}));
numerical_bids.py_sort(__kwargtrans__({reverse:true}));
dict_compare(v,db[k]);
export var shot_sequences=product(...[list(range(7))]*len(bird_data));
export var py_get=np.concatenate(tuple([py_get,np.zeros(tuple([1,py_get.shape[1]]))]));
var conv=json.loads(code);
_convert(node_or_string);
print(t.render(__kwargtrans__({py_items:py_items})));
print(the_map);
export var fr=df.groupby([df.index.year,df.index.month]).sum().unstack(__kwargtrans__({fill_value:0}));
request.data;
var d=datetime.strptime(base_date,fmt);
var client=app.test_client();
var filtered=itertools.compress(s,b);
var result=query.first();
line+=self.fileobj.readline();
var res=parser.parse_args();
var dictname=pickle.load(f);
export var n_strings=function(){var __accu0__=[];for(var item of n_strings)__accu0__.append(item.py_replace(number,letter));return __accu0__}();
print(self._concrete_method());
var population=models.IntegerField();
export var indexed=function(){var __accu0__=[];for(var [i,v]of enumerate(sorted(a)))__accu0__.append([v,i]);return dict(__accu0__)}();
shift_axis-=1;
export var ref_sort=reference_array.ravel()[sort_idx];
[];
var curs=orcl.cursor();

export var tf_weight=tf.Variable(tf.zeros([A,B]));
var l=c.recv(1024);
sns.set_color_codes();
var result=js2py.eval_js(js);
aaa;
var counter_list=Counter(a).most_common();
var ctr=np.arange(N);
print(duncan_prestige.__doc__);
var ax=plt.axes();
self.trayIcon=gtk.StatusIcon();
export var size_sample2=len(sample2);
export var pyramid_includes=pyramid_beaker;
var arr=np.delete(arr,-1,__kwargtrans__({axis:0}));
plt.plot(epoch_in,Y_observed);
var py_name=db.StringProperty();
mform;
print(repr(doc));
move(abs_path,file_path);
tuple([8,1,1,1]);
root.mainloop();
dt.datetime.combine(self.date,self.time);
id(b[0]);
var b=[1,2,5,7,2];
var weights=numpy.array(list(range(1,4)));
self._cond.notify();
var data=self.fd.read(self.line_length);
var pipe=sp.Popen(command,__kwargtrans__({stdout:sp.PIPE,bufsize:Math.pow(10,8)}));
d[x]=d.py_get(x,0)+1;
var board=function(){var __accu0__=[];for(var x=0;x<n;x++)__accu0__.append(function(){var __accu1__=[];for(var x=0;x<n;x++)__accu1__.append(0);return __accu1__}());return __accu0__}();
line[0];
self.frame=tk.Frame(self);
x[0]=0;
self.root=tki.Tk();
dt.timestamp();
n.activate();
var im=glumpy.image.Image(M,__kwargtrans__({colormap:glumpy.colormap.Hot}));
true;
self.a=new_a;
var py_name=m.group(1);
export var inter=np.in1d(a,b);
export var ytext=y+(ax.get_ylim()[1]-ax.get_ylim()[0])/20;
export var factor5=0;
form;
subclass2.fun();
print(tmp);
out.append(seq.__getslice__(int(last),int(last+avg),1));
var ax=fig.add_subplot(111);
var l=a.shape?len(a):0;
time.sleep(5);
print(element.text.py_split()[0]);
false;
dataset.create();
export var dfA=pd.DataFrame(A);
var __left0__=py_next(it);var min_key=__left0__[0];var min_value=__left0__[1];
self.password=password;
false;
var b=[45,42,0,1,-1,0];
a.a;
var __left0__=np.unravel_index(py_sort[1],result.shape);var y2=__left0__[0];var x2=__left0__[1];
log.addHandler(ch);
var q=function(){var __accu0__=[];for(var i of list(d.py_values()))if(isinstance(i,dict))__accu0__.append(tuple([i,depth+1]));return __accu0__}();
self._name=func.__name__;
newPathList.append(i);
[dict([[company,[user1,user2]]])];
export var makeGUI=MakeGUI(root);
self.data[key];
var it=np.nditer(tuple([A,B]));
var f2=np.array([1.000051]);
find([-1]);
data.append(row[idx]);
p.drawImage(imagem);
p1.say_my_name();
store[key];
self.value=value;
print(py_typeof(C));
depth+=1;
var temp=np.array(function(){var __accu0__=[];for(var m=0;m<len(p);m++)__accu0__.append(p[m]*A[m]);return __accu0__}());
var i=l.index(v);
wrapper;
result.append(i);
print_names();
self.waiters=collections.deque();
var y=adate.year;
var array1=np.array(list1);
var num=int(str);
var __left0__=tuple([int(n),int(m)]);var n=__left0__[0];var m=__left0__[1];
b.__setitem__([0,0],0);
var py_items=list(d.py_items());
plt.plot(binsm,n);
BeautifulSoup(urllib.request.urlopen(urllib.request.Request(url,__kwargtrans__({headers:header}))));
export var speed=D/(t2-t1);
f(example);
lines2d[0].set_data(oldx+.1,oldy+.2);
cls.setup_test_data();
corrs;
x1.append(t);
var writer=csv.writer(f);
arr2d.shape;
var line_number=random.randint(0,total_num_lines);
run();
var ques_type=models.SmallIntegerField(__kwargtrans__({py_default:2}));
py_next(a);

new set([new set([companyForm.hidden_tag()])]);
self._hash;
traverse(cyclic_graph,Sequence1,process);
var ret=app.exec_();
jsonify(__kwargtrans__({success:false,errors:inputs.errors}));
Base.metadata.create_all(engine);
ast.show();
test(SP,CP);
root.destroy();
sqrt(2);
var lid=Column(String(80),__kwargtrans__({primary_key:true,py_default:_newid}));
export var n_tr_0=(y_train==0).sum();
export var vers2=Math.pow(x,2)+2*x*y+Math.pow(y,2);
self.is_started=true;
var __except0__=PyflakesError(path,w.messages);__except0__.__cause__=null;throw __except0__;
export var axPA=plt.subplot(gs1.__getitem__([2,tuple([0,null,1])]),__kwargtrans__({sharex:axF}));
self.child_win.show();
get_latin1_char(ch);
asyncio.iscoroutine(mock());
var comments=models.TextField(__kwargtrans__({blank:true}));
File(__kwargtrans__({identifier:collection_entity,py_name:py_name})).save();
var response=requests.py_get(zip_file_url);
self.parent&&self.parent.on_thread_finished(self,42);
export var axE=plt.subplot(gs1.__getitem__([1,tuple([0,null,1])]),__kwargtrans__({sharex:axF}));
var thread=threading.Thread(__kwargtrans__({target:func}));
var __left0__=os.path.splitdrive(path);var _=__left0__[0];var path=__left0__[1];
deleteself.thisptr;
print(x,permutation([1,1,2,2,2],x));
self._pcapw.writepkt(self._ethernet,__kwargtrans__({ts:1412977616}));
py_next(i);
show();
var ax=fig.add_subplot(111);
dump.write(json.dumps(arbitrary_data));
kernel2;
export var label_input=tf.placeholder(tf.uint8,__kwargtrans__({shape:[]}));
d[k]=f(v);
self.observer.schedule(self,path,__kwargtrans__({recursive:false}));
currentList.append(line.strip());
print(TestClass());
var parser=MyHTMLParser();

plot(list(range(80)));
var score=len(py_name)+sum(function(){var __accu0__=[];for(var c of py_name.lower())__accu0__.append(__in__(c,vowel));return py_iter(__accu0__)}());
print(self.theConfig);
export var ward_form=WardForm();
var z=dict(Counter(x)+Counter(y));
var initial=tf.constant(.1,__kwargtrans__({shape:shape}));
rPM(PROCESS.handle,ADDRESS1,ADDRESS2,64,0);
var seq=np.arange(counts.max());
fig.scatter(df.icol(0),df.index);
var __left0__=zip(...x);var indices=__left0__[0];var l=__left0__[1];
var arr1=np.array([[1,7],[4,8],[4,0]]);
doc.SaveAs(txtpath,wdFormatUnicodeText);
print(result.py_get(__kwargtrans__({timeout:1})));
print(round(1/7,6));
export var left_depth=self.left?self.left.depth():0;
var data=b.getvalue();

var activity=models.ForeignKey(Activity);
export var video=VideoItem.objects.filter(__kwargtrans__({user:user}));
np.random.seed(42);
var y=5*np.sin(x)+np.cos(2*np.pi*x);
query_params[param_name]=[param_value];
var diff=np.sqrt(diff);
self.full_clean();
result.append(c);
self.active_writer_lock.acquire();
plt.colorbar();
self.trell=[];
print(intersect(b1,b2));
print(sqlparse.sql.TokenList(function(){var __accu0__=[];for(var t of _filter(sql))__accu0__.append(t);return __accu0__}()));
B[-i]+=x;
employee.join(department).map(function __lambda__(e){return tuple([e[1][0],e[0]])}).collect();
res[0]=func(...args,__kwargtrans__(kwargs));
var x=5;
f.close();
var o=MyClass(1,2);
var A=np.random.rand(100,100);
pca.fit_transform(data_scaled);

var id_arr=np.zeros(clens[-1],__kwargtrans__({dtype:int}));
compare();
self.text=text;
var y_pred=pipeline.predict(X_dev);
py_typeof(ts.index);
plot(ax,ay);
result.__setslice__(0,null,2,list1);
i+=step;
a;
thread.start_new(extract_bigrams2,tuple([cpnt,len(text),a+1]));
self.arrays=function(){var __accu0__=[];for(var arg of args)__accu0__.append(arg);return __accu0__}();
fhandle.seek(size,1);
var k=1;
export var ship=collections.OrderedDict(ship);

var __left0__=tuple([0,1]);var a=__left0__[0];var b=__left0__[1];
[];
var p=Pool(4);
new_profile.save();
var new_list=[A_list,B_list,C_list,D_list];
narr_view;
export var dictCursor=dbConn.cursor(MySQLdb.cursors.DictCursor);
var __except0__=Exception();__except0__.__cause__=null;throw __except0__;
var time=Column(TIMESTAMP,__kwargtrans__({server_default:func.now()}));
x.extend(b);
print(soup.prettify());
test_case.assertEqual(set(expected),set(actual));
export var split_string=[];
weighted_errors.append(error);
seq.append(im.copy());
tuple([0,1,1]);
Point(self.x+point.x,self.y+point.y);
var x=inner(x);
self.readsofar+=len(data);
response.status_code=500;
smtpserver.login(gmail_user,gmail_pwd);
a.insert(lo,x);
export var csvout=csv.writer(fout);
var temp=defaultdict(list);
var r=np.arange(0,90,.01);
m.__setslice__(np.searchsorted(np.cumsum(m),stop),null,null,0);
print(bin(value));
print(data);
Permutations(a,t);
hash[word]+=1;
[Frameworks];
var d=defaultdict(int);
export var listForm=list(d.py_values());
var offsets=function(){var __accu0__=[];for(var py_name of names)__accu0__.append(dt.fields[py_name][1]);return __accu0__}();
self._s=value;
merge(main,0,2);
var __left0__=zip(...filtered);export var new_emails=__left0__[0];export var new_other_list=__left0__[1];
false;
var __left0__=os.path.py_split(py_name);var dirname=__left0__[0];var filename=__left0__[1];
var y=np.array([1,1,0,1,1,1,0,0,1,0,1,0,1,0,0,0,1,0,1,0]);
print(os.path.abspath(p));
export var s_tot=s.sum();
var x=np.random.normal(0,1,100);
var demo=[[0]]*2;
sa_query.paginate(page,per_page,error_out);
print(list(sameLevel.py_values()));
export var _clients=dict({});
var A=np.array(list(range(6)));

export var login1=urllib.request.urlopen(request).read();
self.__setitem__(k,v);
export var goodkeys=set(function(){var __accu0__=[];for(var x of flt)if(!x[1])__accu0__.append(x[0]);return py_iter(__accu0__)}());
!(Counter([1,2])-Counter([1]));
var __left0__=A.shape;var m=__left0__[0];var n=__left0__[1];
export var new_query_string=urlencode(query_params,__kwargtrans__({doseq:true}));
var salt=uuid.uuid4().hex;
stack.append(Wall(pos+1,height));
var cells=np.zeros(tuple([side,side,side]),__kwargtrans__({dtype:np.uint}));
export var myData=JSON.parse(myJSONList);
x+=y;
var step=forms.IntegerField();
export var start_dir=os.getcwd();
export var bigsquare=make_square(.5,.5,1,1);
tuple([tmp.__getslice__(0,cut,1),tmp.__getslice__(cut,null,1)]);
var res=function(){var __accu0__=[];for(var f of os.listdir(path))if(m.search(f))__accu0__.append(f);return __accu0__}();
self.send_response(200);
var y=sin(angle)*self.radius.imag+self.center.imag;
var conn=libvirt.open(URI);
print(c.nbytes==len(c.data));
var b=np.array([1,1,0]);
self.visit(node.right);
var result=subprocess.check_call(call);
var parts=[[],[]];

self.calltime=time.time()-self.timeout+value;
var result=defaultdict(function __lambda__(){return defaultdict(str)});
plt.subplot(155);
gzip.wait();
export var my_cmap_r=mpl.colors.LinearSegmentedColormap(py_name,LinearL);
cv.Resize(image,smallImage,cv.CV_INTER_LINEAR);
wx.NO_BORDER;
var time=models.IntegerField();
sum(mat,vec.A);
var a=c.__getslice__(0,5,1);
export var cropped_example=original.crop(tuple([left,top,right,bottom]));
var __left0__=itertools.tee(iterable);var a=__left0__[0];var b=__left0__[1];
export var szr=wx.BoxSizer(wx.VERTICAL);

export var sun=Sun();
print(result);
var tree=et.parse(xmlfile);
var my_instance=qs[0];
cartesian(arrays.__getslice__(1,null,1),__kwargtrans__({out:out.__getitem__([tuple([0,m,1]),tuple([1,null,1])])}));
pl.boxplot(data);
var d=collections.defaultdict(int);
self.lock=threading.Lock();
f(a,a.size);
var index=list(np.ix_(...function(){var __accu0__=[];for(var i of z2.shape)__accu0__.append(np.arange(i));return __accu0__}()));
turtle.right(45);
var a=[2,4,6];
arr;
var height=int(cap.py_get(cv2.cv.CV_CAP_PROP_FRAME_HEIGHT));
os.remove(filename);
__in__(f.__code__,creator.__code__.co_consts);
mycode.things();
var RES=n.zeros(tuple([SPMAT.shape[0]]),__kwargtrans__({dtype:complex64}));
var lock=threading.Lock();
print(x);
interval_df_intersection(mydataframe2,mydataframe1);
new set([self.body()]);
a.shape=tuple([Math.floor(a.size/ncols),ncols]);
export var rlist1=list1.__getslice__(0,null,-1);
var now=time.time();
player.set_media(media);
[np.sum(Math.pow(x,2)+a),2*x];
export var no_proxy=urllib.request.ProxyHandler(dict({}));
li.append(4);
var current=current[py_name];
os.unlink(file_name);
str(.1000000000000999);
var node=rootnode;
writer.save();
var data=simplejson.loads(self.data_string);
logger.addHandler(consoleHandler);
export var row_rank=np.argsort(row_order,__kwargtrans__({axis:1}));
blank_image.__setitem__([tuple([0,null,1]),tuple([0,.5*width,1])],tuple([255,0,0]));
base_pic.close();
py_values[bisect.bisect_left(py_keys,query)];
var page=read_pdf.getPage(0);
var queryset=self.filter_queryset(self.get_queryset());
print(sys.getsizeof(y));
export var detokenizer=MosesDetokenizer();
G.subgraph(to_keep);
context.paint();
print(self.data);
var idx=np.argsort(e_values).__getslice__(0,null,-1);
false;
print(my_test);
sys.stdout=NewOut();
missing_dates.append(test_date);
export var digraphs=defaultdict(list);
export var col_data=col.text_content();
setattr(testcase,test_name,test);
deviceparent;
var matches=words.intersection(pwords);
var bins=[0,.25,.5,.75,1];
export var params_json=json.dumps(params);

mapper._validate_polymorphic_identity(mapper,state,dict_);
var img1=to_grayscale(imread(file1).astype(float));
s.listen(5);
var df=df.join(df_my_ones);
var t1=time.time();
settings.configure();
query;
var soup=BeautifulSoup(html);
4048;
var sizer=wx.BoxSizer(wx.VERTICAL);
p.dump(obj);
self.create_old_data();
text_format.Merge(file_content,graph_def);
newlist1.append(s);
var __left0__=tuple([tuple([0,255,255]),tuple([255,0,255]),tuple([255,255,0])]);export var CYAN=__left0__[0];export var MAGENTA=__left0__[1];export var YELLOW=__left0__[2];
self.x+1;
var fig=plt.figure(__kwargtrans__({figsize:tuple([8,8])}));
Testing(10/10);
np.invert(s);
export var shapes=function(){var __accu0__=[];for(var subseq of seq)__accu0__.append(find_shape(subseq));return __accu0__}();
var b=f.read(2);
prob+=colsums[c]==sum(function(){var __accu0__=[];for(var r of allrows)__accu0__.append(mat[r][c]*rowselected[r]);return py_iter(__accu0__)}());
export var firstNumber=line.__getslice__(0,12,1);

df.index.lexsort_depth;
export var X2tick_location=ax1.xaxis.get_ticklocs();
distance_matrix.__setitem__([i,j],haversine(loni,lati,lonj,latj));
b.set(2);
var __left0__=tuple([-1,len(seq),len(subseq)]);var i=__left0__[0];var n=__left0__[1];var m=__left0__[2];
var value=self.func(obj);
print(value);
f.close();
var y1=xsin(theta)+ycos(theta);

self.person_name=person_name;

print(pattern.findall(document));
timer_process.start();
export var descr=PyArray_DescrFromType(typenum);
LabeledPoint(fl[l-1],fl.__getslice__(0,l-1,1));
self._classes.__getitem__([module,cls_name]).from_dict(dct);
findspark.init();
scipy.stats.norm(100,12).pdf(98);
var distance_vectors=function(){var __accu0__=[];for(var pair of combs)__accu0__.append(cosine_distance([pair[0]],[pair[1]]));return __accu0__}();
jinja2.get_jinja2(__kwargtrans__({app:self.app}));
x[a.nonzero()]+=a.data;
var pool=tuple(iterable);
self.vtkPolyData.SetPoints(self.vtkPoints);
var y=tf.nn.softmax(logits);
var serializer=self.get_pagination_serializer(page);
var logger=logging.getLogger(py_name);
mySet.add(p1);
temp.append(seq.py_pop());
export var larray=[];
var pyobj=json.loads(rjson[0]);
-build-essential;
mydict[mychar]+=1;
var t=np.arange(0,1E4,10);
export var prvy=col[0].string.strip();
self._age;
print(session2.query(Datum).all());
self.do_thing_with_message(val);
var parser=argparse.ArgumentParser(__kwargtrans__({description:description,usage:usage}));
address;
tuple([0,1,2]);
export var religious_order=models.ForeignKey(ReligiousOrder,__kwargtrans__({blank:true,null:true}));
nark;
cython;
pyinstaller;
var ax=fig.add_subplot(1,2,2);
cls.py_items[item]=kls;
var data=dict({});

instance.py_update();
last_dict[l[-1]]=value;
var out=np.hstack([up,low]).ravel();
Frame.__init__(self);
var W=np.power(omega,i*j)/sqrt(N);
var df=dftst.stack(0);
export var all_matching=list(filter(matchCondition,lst));
tuple([f1,f2]);
var id=row[0];
start[r[0]].add(r[2]);
var __left0__=tuple([n.lft,n.rght]);var lft=__left0__[0];var rght=__left0__[1];
print(df);
var __left0__=tuple([l[i],l[1]]);l[1]=__left0__[0];l[i]=__left0__[1];
d.weekday();
export var serialized=json.dumps(dict_obj);
after_buf.py_pop(0);
var tree=parser.parse_string(diagram_definition);
var y=function(){var __accu0__=[];for(var _=0;_<400;_++)__accu0__.append(random.gauss(4,2));return __accu0__}();
var item=get_max(item);
df.head();

list(py_reversed([1,2]));
list(chain.from_iterable(function(){var __accu0__=[];for(var [k,v]of groups)__accu0__.append(k?islice(v,x):v);return py_iter(__accu0__)}()));
export var ticklabs=cb.ax.get_yticklabels();
self.host=host;
var ax=fig.add_subplot(1,1,1);
print(key);
self.layers=[NeuronLayer(self.n_neurons_to_hl,self.n_inputs)];
export var listEven=list1.__getslice__(0,null,2);
line.set_data(x,y);
phantom.exit();
c.close();
tuple([new set([new set([forloop.counter])]),new set([new set([item])])]);
u[i].__setitem__([x,y],1);
print(non_ascii.sub(escape_unicode,line));
var df2=df2.rename(__kwargtrans__({columns:d}));
smtpserver.ehlo;
arr2==arr[0];
export var edgex1=region1^np.roll(nregion1,__kwargtrans__({shift:shift,axis:0}));
df1;
export var my_item=MyItem();
export var uuid=uuid.__getslice__(0,5,1);
text;
res.py_sort();
a.__setitem__([2,2],-999);
var filtered=cv2.filter2D(skel,src_depth,kernel);
var it=itertools.groupby(text,function __lambda__(w){return w.isspace()});
input.iloc[i].X;
var div=int((div-module)/26);
i+=len(node[0]);
var form=FooAdminForm;
internet_set_option(0,self.INTERNET_OPTION_REFRESH,0,0);
var s=StringIO();
time.sleep(.01);
axdendro.set_xticks([]);
var D=yaml.load(f);
result+=numbers.__getslice__(i,null,1);

print(RegisteredNumber.numbers);
var mech=mechanize.Browser();

var C=np.zeros(tuple([dimC,dimC,dimC]));
var x=np.ones(10,__kwargtrans__({dtype:bool}));
var x=random.random();
var phi=np.linspace(0,np.pi,20);
x+y;
finalizer();
export var keywords=set(function(){var __accu0__=[];for(var line of f)__accu0__.append(extract_keyword(line));return py_iter(__accu0__)}());
e.errno==errno.EPERM;
dataset[0].intersection(...dataset.__getslice__(1,null,1));
var elem=etree.XML(xml_str,__kwargtrans__({parser:parser}));
py_false;

!m?Fail:tuple([m.group(1),text.__getslice__(m.end(),null,1)]);

print(row);

HttpResponseRedirect(url);
self.printfiles(result);
tree.write(xmlfile,__kwargtrans__({xml_declaration:true}));
export var maintype=mail.get_content_maintype();
var bar=np.array([4,5,6]);
print(Child.mro());
file_like.seek(0);
var delta=n/10;
heapq.heappush(self._data,tuple([self.key(item),item]));
self.count-=1;
registry.add_field(cls,self);
1401828155;
self.treeAction.triggered.connect(self.printTreeItem);
var __left0__=gradients.T;var x=__left0__[0];var y=__left0__[1];var z=__left0__[2];
self.cls=my_class;
data.__getslice__(0,10,1);
export var prime=false;
var bins=list(range(15,25));

func(self,x+1,func);
export var source_bytes=base64.b64encode(source_image.read());
var z=numpy.array([0,.5,1,0]);
print(py_name,value);
hash(tuple(frozenset(sorted(new_o.py_items()))));
export var le=preprocessing.LabelEncoder();

export var fb_=np.zeros_like(zeta);
s.add(5);
var info=logging.getLogger(__name__).info;
lastelt;

newfunc;
sorted(list_date,__kwargtrans__({key:foo}))[-1];
var fig=plt.figure();
var li=function(){var __accu0__=[];for(var i=0;i<number_of_chunks;i++)__accu0__.append(tuple([filename,i,number_of_chunks]));return __accu0__}();
set(b1).intersection(b2);
var xi=np.linspace(xmin,xmax,nx);
print(i);
var h=function __lambda__(x){return x.apply(g,__kwargtrans__({axis:1})).mean(__kwargtrans__({axis:0}))};
help(re);
entity_manager.add(r);
__in__(item,self.g);
test_logger.addHandler(handler);
pl.imshow(l);
print(py_typeof(savedtweets_datetime));
true;
s;
date(y,m,d).toordinal()-date(2005,1,1).toordinal();
var h=np.random.uniform(-150,150);
var __left0__=meshgrid(x,y);var x=__left0__[0];var y=__left0__[1];
_shared_tasks.add(constructor);
var cursor=connection.cursor();

dis.dis(bar);
app.exec_();
plt.show();
var ssh=paramiko.SSHClient();
pil_im.show();
application.listen(5E3);
self.data.__getslice__(key[0],key[1]+1,1);
out2[0][0];
var w=df.strings.str.py_split();
self.pa=pyaudio.PyAudio();
print(tuple([x,y]));
var z=np.array([2,5]);
self.fd=f.fileno();
print(df);
var __except0__=py_TypeError(msg);__except0__.__cause__=null;throw __except0__;
tuple([[9,4,8]]);
sys.exit(app.exec_());
export var basegraph=tf.Graph();
export var RNumY=.5+10*random();
console_handler.setFormatter(formatter);
var browser=Browser();
var counter=np.count_nonzero(mask);

user_input.append(entered_text);
var list=s.py_split();
var chunk=proc.stdout.read(1);
var a=cplxarr.copy();
var b=function __lambda__(){return a+2};
var fp=A[-np.isnan(A)];
export var setB=frozenset(function(){var __accu0__=[];for(var element of listB)__accu0__.append(frozenset(element));return __accu0__}());
var is_binary=true;
var m=np.ma.array(a,__kwargtrans__({mask:~np.isfinite(a)|a==-999}));
var l=zip(...transposed_l);
var py_values=set(lst);
p.register(f,select.POLLPRI|select.POLLERR);
self.file.read(outputfilename);
var __left0__=m(lons,lats);var x=__left0__[0];var y=__left0__[1];
export var iend=i-1;
export var svg=rsvg.Handle(__kwargtrans__({data:data}));
var c=function __lambda__(){return tuple([a,b])};
var freqs=Counter(words.py_split());
sleep(.025);
s[i]=y;
var count=0;
var parser=etree.XMLParser(__kwargtrans__({remove_blank_text:true}));
[.004-2E-8-.75];
self.write_csv_test_data(temp_csv);
self.thread=threading.Thread(__kwargtrans__({target:self.run,args:tuple([])}));
var channel=0;
print(dict(zip(def_args,defaults)));
var match=a.__getslice__(0,-n,1).copy();
tuple([1,1]);
isclose(1,1.00000000001);
np.round(df.loc.__getitem__([tuple([0,null,1]),msk]),2);
np.array(inds);
ax2.set_xlim(bin_edges.min(),bin_edges.max());
p._x=9;
print(file_name);
DataFrame(entry_frame);
settings.production.py;
node.setPos(QPointF(path.elementAt(i)));
itertools.islice(iterable,stop);
var __except0__=KeyError(k);__except0__.__cause__=null;throw __except0__;
aw1.redraw_plot();
arr[0];
var __except0__=ValueError;__except0__.__cause__=null;throw __except0__;
print(basepairs);
fileobj.seek(0);
obj.address_2_html();
export var matching=np.ones(tuple([len(py_values[0])]),__kwargtrans__({dtype:bool}));
myfunc();
(function(){var __accu0__=[];for(var x of p.get_connections())if(x.status==psutil.CONN_LISTEN)__accu0__.append(x);return __accu0__})();
export var FirstName=db.Column(db.String(40));
export var thetas=np.linspace(0,2*np.pi,20);
sess;
Py_DECREF(temp_p2);
drawMatches(img1,kp1,img2,kp2,matches.__getslice__(0,10,1));
cnp.import_array();
var __left0__=np.meshgrid(x,y);var X=__left0__[0];var Y=__left0__[1];
align_yaxis(ax,np.mean(grp2),ax2,0);
export var my_stuff=[];
var __left0__=curve_fit(func1,x,y);export var popt1=__left0__[0];export var pcov1=__left0__[1];
var __left0__=tuple([d1[0],d1[1]]);var v1=__left0__[0];export var col1=__left0__[1];
Unknown;
sub_dict;
line.set_color(colors[klass]);
isitIn(char,b.__getslice__(Math.floor(len(b)/2),null,1));
df_crawls;
abcde.co.uk;
self.X<other.X&&self.Y<other.Y;
Simplify[A.x];
var a=1;
var x=np.arange(100,__kwargtrans__({dtype:np.float64}));
var x=list(range(0,100));
var __left0__=cap.read();var ret=__left0__[0];var frame=__left0__[1];
root_logger.addHandler(handler);
ds.__setslice__(0,null,null,x);
path.py_pop();
export var menubar=tk.Menu(self);
connection.daemon=true;
t.setModel(m);
var f=ftplib.FTP();
A();
times.map(function __lambda__(x){return x+MonthEnd()});
recursive_iter_map(f,e);
var a=map(int,function(){var __accu0__=[];for(var x=0;x<20;x++)__accu0__.append(Math.pow(x,.5));return __accu0__}());
var params=dict({});
l2[0][0]=1;
queue.put(ip);
var start=time.time();
export var my_func0=my_func_factory(function __lambda__(x){return 2*x},function __lambda__(x){return 2*x});
mutex.acquire();
var old=termios.tcgetattr(fd);
s.close();
frame.f_locals.py_update(self.namespaces.py_pop());
self.Show();
var ret=df.iloc.__getslice__(start+1,end,1);
print(rcv);
bin(4);
export var input_filename=sys.argv[1];
var __left0__=diskpart_handle.communicate();var output=__left0__[0];var _=__left0__[1];
var m=complex(0,2)*math.pi;
export var vec_dict=dict({});
user.user_permissions.add(custom_permission);
var l=multiprocessing.Lock();
export var names_list=function(){var __accu0__=[];for(var y of function(){var __accu1__=[];for(var x of names.splitlines())__accu1__.append(x.strip());return py_iter(__accu1__)}())if(y)__accu0__.append(y);return __accu0__}();
export var LastName=db.Column(db.String(40));
_fix_exception_context(new_exc_details[1],exc_details[1]);
var c=zip(users.__getslice__(0,Math.floor(n/2),1),py_reversed(users.__getslice__(Math.floor(n/2),null,1)));
var indices=list(es.indices.get_aliases().py_keys());
tuple([[1,9,9]]);
var writer=csv.writer(s);
process_list.append(p);
urlpatterns+=api.urls;
signal(SIGPIPE,SIG_IGN);
var x=np.arange(100);
test_suite.addTest(file_tests_main.suite());
var value=process_value(int(raw_value));
var cur=conn.cursor();
var xslt_doc=ET.parse(io.BytesIO(xslt));
var ax=fig.add_subplot(111);
self;
export var vend=vspell[2];
var batch=service.new_batch_http_request(__kwargtrans__({callback:delete_file}));
_ctypes.dlclose(lib1._handle);
result.append(this.d[c]);
print_keyword_args(__kwargtrans__(kwargs));
parse_code_1(...split_secret_code(secret_code_1));
export var items_formset=inlineformset_factory(Parent,Item,__kwargtrans__({form:ItemForm,extra:1}));
export var m_from=ndb.KeyProperty(__kwargtrans__({kind:UserModel}));
st.norm.interval(.68,__kwargtrans__({loc:np.mean(a),scale:st.sem(a)}));
dtypedict.py_update(dict([[i,sqlalchemy.types.NVARCHAR(__kwargtrans__({length:255}))]]));
var uniq=uniq.view(data.dtype).reshape(-1,ncols);
Queue.put(self,item,block,timeout);
r.status_code;
len(s)+2==len(repr(s));
export var week=int(yourString.__getslice__(-2,null,1));
set_interval(func,sec);
self.counter=0;
fig1.show();
export var colormap=window.get_screen().get_rgba_colormap();
var other_field=form._fields.py_get(self.other_field_name);
export var module_filename=inspect.getfile(module);
self.bitmap_1.SetBitmap(wxbmp);
false;
var passman=mechanize.HTTPPasswordMgrWithDefaultRealm();
export var plot1=plt.plot(x,mlab.normpdf(x,m1,std1));
export var csc_matrix=temp_sparse.csc_matrix(temp_matrix);
export var res_ols=sm.OLS(y,statsmodels.tools.add_constant(X)).fit();
true;
a.py_replace(false,np.nan).idxmax(1);
var __except0__=NotImplementedError;__except0__.__cause__=null;throw __except0__;
var __left0__=function(){var __accu0__=[];for(var global_n of L)__accu0__.append(fgen());return __accu0__}();var a=__left0__[0];var b=__left0__[1];var c=__left0__[2];
print(scores.mean());
len(pytz.common_timezones);
AppHelper.runEventLoop();
var simplex=np.asarray(simplex);
post.tags.remove(sometag);
export var l_idx=list(range(len(l)));
self.value=value;
print(np.finfo(np.double).precision);
__mod__(abs(a),abs(b))*sign;
self.bar=bar;
var convert=pound*56/100;
py_replace(stack,[text])[0];
settings.Delete();
findContours(bin.clone(),contours,CV_RETR_LIST,CV_CHAIN_APPROX_NONE);
arr[i]+=1;
var prefixes=my_groupby(py_iter(C.py_items()),__kwargtrans__({key:function __lambda__(k_v){return k_v[0].__getslice__(0,-1,1)}}));
var vc=df.a.value_counts();
key+=str(self._unique);
tuple([[self.x-1,self.y+1],[self.x+1,self.y+1]]);
export var all_s=function(){var __accu0__=[];for(var x of st)if(__in__(x,word))__accu0__.append(x);return py_iter(__accu0__)}();
output;
plot(s);
var key=list(mem.py_keys())[0];
new_module.__file__=filename;
print(df);
export var fp_plain=hashlib.md5(key).hexdigest();
a[Idx];
base_pic.save(__kwargtrans__({file:result_pic}));
f2(A());
export var ownUid=function(){var __accu0__=[];for(var p of psutil.process_iter())if(p.pid==ownPid)__accu0__.append(p.uid);return __accu0__}()[0];
var page=infile.read();
var b=a.swapaxes(axis,-1);
var i=0;
self.value+other;
Math.pow(residuals,2).sum();

var ff=ff.reshape(tuple([5,4,1,1]));

var i=bisect.bisect_left(a,x);
var k2=k.copy(k.bucket.py_name,k.py_name,k.metadata,__kwargtrans__({preserve_acl:true}));
process.shutdown();
unittest.makeSuite(TestSomething);
ack_message();
py_split[-1][-2].append(r);
self._age;
help(me);
connection.close();
searchbox.send_keys(searchkey);
ranges.append(range(group[0],group[-1]));
var pairs=py_reversed(list(my_dict.py_items()));
Math.pow(sum(function(){var __accu0__=[];for(var [x,y]of zip(singlePoint,pointFromArray))__accu0__.append(Math.pow(x-y,2));return py_iter(__accu0__)}()),.5);
nk1;
export var madata=np.ma.MaskedArray(data1,~masks1);
mydir([]);
lol[1][0];
cv.Copy(image,newCanvas);
FilteredObject(obj_id.__getslice__(9,null,1));
var num=ceil(num*100)/100;
fibs.append(fibs[-1]+fibs[-2]);
var __left0__=fa(x,y);var a=__left0__[0];var b=__left0__[1];
var parent=getattr(form,self.parent);
save.close();
var e=sys.exc_info()[1];
py_iter(self._od);
export var template_name=fn();
arr.shape;
velcro.left(140);
d[c]+=1;
var l=list(a);
w.focus_set();
time.time()-start;
self.cache[regex_string];
var B=NP.array(B,__kwargtrans__({dtype:bool}));
Returns;
var c=np.linspace(0,1,1E3);
var results=dict({});
count+=1;
doSomething(line);
export var wid=termf.winfo_id();
var response=http.HttpResponse(response_html);
statvfs(path);
dict_time[key]=value;
true;
var result=a.flat[i[d>TOL]];
self.console.see(tk.END);
s.setDTR(false);
var res=[];
var __left0__=tuple([np.array([]),np.array([]),np.array([])]);var X=__left0__[0];var Y=__left0__[1];var Z=__left0__[2];
os.removedirs(dirname);
var notes=models.TextField(__kwargtrans__({blank:true}));
var __left0__=tuple([r*np.cos(th),r*np.sin(th),angle*r*np.sin(th)]);var x=__left0__[0];var y=__left0__[1];var z=__left0__[2];
self.item.product_name;
var response=requests.post(full_url,json.dumps(data));
max(function(){var __accu0__=[];for(var i=0;i<6;i++)__accu0__.append(die().roll_until(6));return py_iter(__accu0__)}());
export var id_seq=curs.fetchone()[0];
encryptFile(fileName);
var p=ConfigParser.ConfigParser();
self.end_headers();
var x=x+10;
sys.stdout.writelines(diff);
var p2=map(function __lambda__(x){return tuple(chain.from_iterable(x))},product(...lists));
abort(400);
var data=list(s);
var item=row[i];
var pool=multiprocess.Pool(process_count);
export var token_response=requests.py_get(__kwargtrans__({url:cls.token_url,params:cls.params}));
export var pow=function __lambda__(x,y){return _pow(x,y)};
export var OPTION_A=1;
var D=np.sqrt(a+a[np.newaxis].T-2*np.dot(X,X.T));
print(sum_shells(a));
Math.pow(x,2);
circle(im,Point(center.x,center.y),radius,Scalar(0,255,255),2);
frags.append(generate_sample(grammar,prod.rhs()));
var gray=ImageOps.grayscale(src);
export var studentform=StudentForm();
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
et.tostring(t);
do_foo_stuff();
var final_list=[];
var foo=models.ForeignKey(Foo);
var mask=255-mask;
var col=int(m.group(2));
var __left0__=tuple([pickle.load(f),pickle.load(f)]);var key=__left0__[0];var value=__left0__[1];
self.box.current(0);
var sieve=[true]*Math.floor(n/2);
stdscr.keypad(0);
var status=models.IntegerField(__kwargtrans__({choices:STATUS_CHOICES,py_default:REGULAR}));
print(obj);
print(sorted(function(){var __accu0__=[];for(var x of a)if(x<limit)__accu0__.append(x);return py_iter(__accu0__)}()));
bitfield(255);
i+=1;
plt.close();
hilbertC(256,0,0,0,1,0,0,0,1,0,0,0,1);
df;
tuple([df1_a,df1_f,df2_a,df2_f]);
print(p);
py.offline.plot(fig);
total+=multinomial(n,list(Counter(a).py_values()));
export var y_2_val=sample_transform(x_2,y_2);
unique_kpts.append(i);
var sess=requests.Session();
export var z_scattered_evil=fun_evil(x_scattered,y_scattered);
export var last_day_of_month=calendar.monthrange(year,month)[1];
sqlalchemy.orm.session.make_transient(a);
print(b);
functools.update_wrapper(self,target);
count+=int(s[0].isalpha());
print(i);
var colors=[tuple([0,0,0]),tuple([1,1,1])];
map(function __lambda__(p){return preprocess(data,p)},funcs[procid]);
self.buf.seek(oldpos);
var app=Flask(__name__);
export var common_words=set(function(){var __accu0__=[];for(var x of flatten(h))__accu0__.append(x[0]);return py_iter(__accu0__)}())&set(function(){var __accu0__=[];for(var x of flatten(p1))__accu0__.append(x[0]);return py_iter(__accu0__)}());
var a=list(perm_unique([1,1,2]));
false;
data.py_pop();
var tokens=set(s.py_split());
sess.run(init);
fresult.col1=fresult.col1.py_replace(np.inf,100);
export var typ=f.read(1);
Math.pow(sp.j0(r)+sp.jn(2,r),2);
luts+=list(range(256));
plt.imshow(first_array);
sensor.geolocate();
var x=x.strip();
var max_col=int(5E6);
var content=request.get_json(__kwargtrans__({silent:true}));
var py_new=list(text);
amass.delay([],tasks);
export var YAL001C=metabolism;
var t=lxml.html.parse(url);
var buffer=BytesIO(request.urlopen(url).read());
var angle=math.atan2(b,a);
var w=np.fft.fftfreq(N)*N*dw;
export var upload_handlers=request.upload_handlers;
var ax2=plt.subplot2grid(tuple([m,n]),tuple([row_2,col_2]),__kwargtrans__({rowspan:height}));
export var format_u=format_.decode(locale.getlocale()[1]);

var app=pywinauto.application.Application();
var files=sorted(glob.iglob(files_path),__kwargtrans__({key:os.path.getctime,reverse:true}));
print(count);
A.join(B);
var c=wrapper.__code__;
f.seek(0);
var filename=inspect.getframeinfo(inspect.currentframe()).filename;
1;
var s=list(s);
var out=sys.stdout;
print(json.loads(content));
main();

export var price_diff=models.DecimalField(__kwargtrans__({max_digits:10,decimal_places:2,py_default:0}));
var result=HTMLParser.HTMLParser().unescape(urllib.parse.unquote(decoded));
print(a,b,c);
var r=Tk();
np.get_printoptions();
count+=1;
export var myprocess=psutil.Process(process_id);
DictTable(d);
var p1=np.tensordot(v,a,__kwargtrans__({axes:tuple([[0],[0]])}));
extend_array(data,10);


self.__dict__[key]=value;
self.on_change();
tf.nn.softmax(incoming);
var c=C();
var choices=function(){var __accu0__=[];for(var i of choice_indices)__accu0__.append(population[i]);return __accu0__}();
main();
var d=np.array([5,1]);
var cell_value=cell.value;
print(true);
var i=np.random.uniform(1.5,12.4);
seed(_SEED);
var last_name=models.CharField(__kwargtrans__({max_length:50}));
background.paste(foreground,tuple([0,0]),foreground);
run(__kwargtrans__({server:server}));
var title=db.StringProperty();
ax.scatter(xcorners,ycorners,__kwargtrans__({c:zcorners,s:200}));
Math.pow(x,2)+y*2+z;
self.crawled_urls=set();
df;
file.seek(index);
func(__kwargtrans__(d));
f(depth+1);
var adj=numpy.zeros(__kwargtrans__({shape:tuple([n,n])}));
var twitter=Twython();
var ret=ifft(fftx*__conj__(np),__kwargtrans__({axis:1}));
var logger=logging.getLogger(__name__);
TextField(question.text);
n+=1;
colorsys.rgb_to_hsv(r,g,b);
var y=Counter([1,1,2,5,6]);
Server2.__base__+=tuple([PluginA]);
var color=np.sqrt(Math.pow(points,2).sum(__kwargtrans__({axis:1})))/np.sqrt(2);
candidates.append(tuple([lead_obs,other_obs]));
d[x].append(y);
buf.readline();
scatter(X,Y);
logger.addHandler(handler);
deletemodules[modname];
var order=function(){var __accu0__=[];for(var [i,v]of enumerate(a))__accu0__.append([v,i]);return dict(__accu0__)}();
export var lib=ctypes.cdll.LoadLibrary(path);
f2.close();
print(result.py_get());
a.copyApply(A.bar);
memoryview(s.__getslice__(0,null,1))>memoryview(s.__getslice__(1,null,1));
data.value.diff();
foo();
tuple([a,b]);
var user=authenticate(__kwargtrans__({username:username,password:password}));

var hxs=HtmlXPathSelector(response);
my_sat.put();
var req=urllib.request.Request(PP_URL,params);
self.__next__();
print(new_list2);
the_date+=timedelta(__kwargtrans__({milliseconds:milliseconds}));
export var shpinfo=[];
print(v);
export var ret1=tn.read_eager();
qa;
self.user=UserFactory.create();
main();
export var last_indiv=first_line[0];
axes.set_xlim(-.5,9.5);
var results=getSQL();
export var num_of_bits=8;
var files=WidgetFile.objects.filter(__kwargtrans__({widget:self}));
tuple([e.filename,e.lineno,e.offset,e.text]);
print(df.irow(i));
var b=random.sample(range(1E5),1E4);
graph.add_edge(edge);
callable(value)?value():value;
pool.map(preprocess,zip(data,preds));
output.write(outputStream);
p.join();
l1.extend(l2);
os.open(outfile,os.O_RDWR|os.O_CREAT);

writer.commit();
var cols=list(df);
output.write(outputStream);
hello;
time.sleep(2);
export var test_treebank_tagged_words=cfd(chain(...test_set));
dep_field[0].rel.field_name;
print(b===a);
var result=re.search(your_stuff_here);
df;


deletea.a;
export var n_col=A.shape[1];
export var isf=float(iss);
print(find_prev_next(list(range(2)),10));
var i=j+1;
var driver=webdriver.PhantomJS();
image.composite(background,0,0,PythonMagick.CompositeOperator.SrcOverDst);
var img=utils.ImageReader(path);
print(json.loads(line));
print(str(e));
a+weight*(b-a);
os.chown(path,int(uid),int(gid));
export var unqs=data[np.py_sort(ind)];
var value=value.strip();
var b=2;
var threads=function(){var __accu0__=[];for(var i=0;i<20;i++)__accu0__.append(p.apply_async(f,[i]));return __accu0__}();
var country=models.CharField(__kwargtrans__({max_length:2,blank:true}));
test[np.in1d(test,states)]=1;
var qry=session.query(Bar,Bar.foo_count).filter(Bar.foo_count>0);
1/2;
np.finfo(float).eps;
numpy.asarray(result);
pygame.display.list_modes();
var fig=plt.figure();
var v=df.py_values;
PyObject*py_callback;
rf.set_params(__kwargtrans__(g));
a*b;

tuple([[0,0,1,1,0,0]]);
new_data2[~mask]=0;
export var globalcopy=__all__.copy();
jsonify(__kwargtrans__({success:0,error_msg:str(e)}));
main();
var result=[];
var A2=np.random.randint(-4,10,tuple([6,7]));
print(df);
df.shape;
isinstance(v,dict);
content.append(data);
SHEETS.spreadsheets().batchUpdate(__kwargtrans__({spreadsheetId:SHEET_ID,body:DATA})).execute();
wnl.lemmatize(greater);
pd.get_dummies(dummy_col,__kwargtrans__({prefix:dummy_col.py_name}));
print(polygon);
result.append([base_start,base_close]);
print(your_sample_text);
print(about[0].title);
export var dec_idx=np.random.choice(8,N,__kwargtrans__({py_replace:false}));
export var linesB=f.readlines();
jinja2.__version__;
f(i+1);
c+=dict(flatten(d));
var cell=gtk.CellRendererText();
jsonify(dictToReturn);
var events=Event.objects.filter(__kwargtrans__({active:true}));
f.__closure__;
var last_index=tf.shape(output)[1]-1;
var root=Tk();
len(l1);
luhn_residue(getImei(14));
var app=TestApp(self.application);
true;
cls;
print(match[0]);
var fig=pylab.figure();
print(list(j));
list.__delitem__(self,key);
df.index=[df.index,df.Name.notnull().cumsum()-1];
tuple([9,4])-.051971584115;

var window=tk.Toplevel(self);
var df=mylib.load_data();
var __left0__=x;var a=__left0__[0];var b=__left0__[1];
export var __new__=cls.__new__;
var x=np.linspace(0,100,100);
var __left0__=len(a)<len(b)?tuple([dict(a),dict(b)]):tuple([dict(b),dict(a)]);export var ms=__left0__[0];export var mb=__left0__[1];
list[1]=[2.5];
ax.margins(.04);
export var fill=numpy.zeros(tuple([cols-1,cols]),__kwargtrans__({dtype:a.dtype}));
export var XV=np.random.uniform(__kwargtrans__({low:-4,high:4,size:n}));
var result=list(map(run,list(range(100)),list(range(100)),list(range(100))));
var df=sqlContext.createDataFrame(input_iso.map(extract_iso),schema);
input(prompt);
cls;
var value=model.get_value(tree_iter,0);
var im1=ax.imshow(im);
export var oldsysstdout=sys.stdout;
self.treeview.expand_to_path(row.path);
out.getvalue();
http_server.listen(8888);
var a=stream.read(chunk);
export var remaining_stems=stem_sets.__getslice__(i,null,1);
self.setUrl(request.url());
main.quit();
list.append(ord(g2));
self._list.__len__();
var result=json.JSONEncoder.encode(self,o);
var list2=function(){var __accu0__=[];for(var x=2*x1;x<2*x2+1;x++)__accu0__.append(x*.5);return __accu0__}();
print(ans);
var m=multiprocessing.Manager();
var data=self._data;
var date=qdate.toPyDateTime();
cr.set_source_surface(ImageSurface.create_from_png(buffer));
var theta=np.linspace(0,2*np.pi,51);
deletestart_dict[start];
df;
var Y=numpy.resize(X,tuple([4096,9,4]));
print(filled.__getitem__([tuple([0,null,1]),tuple([0,null,1]),5]).astype(np.int));
y.eval();
result;

model.appendRow(item);
python;
console.write(e);
var C=csr_matrix(tuple([5,2]),__kwargtrans__({dtype:int}));
dis.dis(foo);
memorizedPaths[item]=item;
known_words[len(word)].append(word);
var previous=predecessor_map[previous];
tb.activate();
export var karma_delta=models.SmallIntegerField();
export var max_per_dir=int(sys.argv[2]);
var app=Flask(__name__);
var intersection=set_ranlet.intersection(word);
var myList=[];
print(os.read(fd,22));
np.allclose(C1,C2);
print(abacus);
var others=np.vstack(tuple([a,c,d,e])).T;
output.close();
export var testDict=dict({});
var xs=function(){var __accu0__=[];for(var i=0;i<N;i++)__accu0__.append(np.array([i,i,i+1,i+1]));return __accu0__}();
var d1=D.mean(__kwargtrans__({axis:1}));
self.composite_actuator.move(100,-100);
stack.append(tuple([y,d+1]));
export var PAGE_WIDTH=defaultPageSize[0];
a.__setitem__([tuple([0,null,1]),1],np.max(points,__kwargtrans__({axis:0})));
var fig=plt.figure();
var mask=np.ma.less_equal(diff,0);
var colnames=function(){var __accu0__=[];for(var desc of curs.description)__accu0__.append(desc[0]);return __accu0__}();
var video=models.FileField(__kwargtrans__({upload_to:vid_get_file_path}));
export var u_idx_y=np.argsort(y);
queue.put([hdd,line.py_split()[9]]);
f(head,foldr(f,acc,tail));
os.unlink(fifo_path);
var b=__mod__(int(b),2)==0?int(b):int(b)+1;
var id=db.IntegerProperty();
print(x);
y;
numpy.vectorize(test.__contains__)(data);
df;
data_for_browser.put();
do_stuff(data);
var pid=os.getpid();
start_response(status,headers,exc_info);
loop.run_forever();
print(py_typeof(clause));
widgets.append(forms.TextInput(__kwargtrans__({attrs:attrs})));
self.model.stop_training=true;
var end=time.time();
element;
var col_ind=function(){var __accu0__=[];for(var ids of list(d.py_values()))for(var i of ids)__accu0__.append(i);return __accu0__}();
var columns=len(my_dataframe.columns);
export var x_vals=np.arange(-20,21,1);
print(df1);
var path=os.path.join(dirpath,file);
self.get_sum_moves_rec(i,j,self.a[i][j],[tuple([i,j])],ans);
export var POINTS=1980;
var x=[];
d[index]=0;
var __left0__=ax.plot(x,4-y,__kwargtrans__({lw:10}));export var ln2=__left0__[0];
var fp=self.__getid(request.url);
false;
numpy.save(__kwargtrans__({file:f,arr:my_array}));
StreamingHttpResponse(stream_response_generator());
show();
height*np.exp(-Math.pow(x-center,2)/(2*Math.pow(width,2)))+offset;
t.start();
print(id(S1));
with_divisible(7,1,21,function __lambda__(x){return x});
var auth_handler=urllib.request.HTTPBasicAuthHandler();
export var hello=messages.StringField(1,__kwargtrans__({required:true}));
var q=int(s,0);
callback_func(channel,method,properties,body);
var threads=[];
print(a*b*c);
var zipinmemory=cStringIO.StringIO(remotezip.read());
response;
print(zlib.compress(a));
var c=tf.matmul(a,b);
df;
var d=SortedDict(dict([[1,5],[2,5],[4,5]]));
var num=num[0].rstrip();
var char=cv.WaitKey(99);
var my_array=np.random.randint(1,10,tuple([4,5]));
var opener=urllib.request.build_opener(proxy);
__in__(set(),subs);
counts[value[1]]+=1;
wsgiref.handlers.CGIHandler().run(app);
df;
subplot(2,1,1);
var eq2=b*Math.pow(a,2)+d+c;
fin.close();
true;
var results=connection.info();
execute(background_run,your_command);
inner_sum+=dk*f_big_nb(A,k,1E-5,1E-5);
var __except0__=argparse.ArgumentTypeError(msg);__except0__.__cause__=null;throw __except0__;
tuple([file.readline(),new_position]);

res;
mungeddata;
obj.lock();
s.close();
plt.grid(true);
export var zen=np.arccos(X.__getitem__([tuple([0,null,1]),-1])/rad);
print(Contacts.all_contacts);
var ax=plt.gca();
var endDate=startDate.py_replace(startDate.year+1);
export var visited_nodes=set();
var line=scan_process.stdout.readline();
ax1.bar(list(range(l)),Two);
n;
print(character);
var colorjh=jmag-hmag;

var __left0__=plt.subplots(1,1,__kwargtrans__({figsize:tuple([n*size,size])}));var f=__left0__[0];var ax=__left0__[1];
sum;
plt.contourf(x,y,Z);
export var picklable=[];
self.settings=QtCore.QSettings();
settings.INSTALLED_APPS+=tuple([new_app_name]);
loop_thread.start();

sys.path;
output.write(outputStream);
self.__port;
print(train_likes_df.time.dt.time.head());
self.bar=1;
d.py_popitem();
np.corrcoef(data);
var last=py_next(py_reversed(my_iter));
output.addPage(page);
global_method_decorator_list.append(my_callable);
var ax=plt.subplot(1,1,1);
var sample=distribution.rvs(__kwargtrans__({size:1E4}));
var seen=set();
wrapped_func;
person.py;
var window=numpy.ones(int(window_size))/float(window_size);
foo().debug_info();
2*x;
mydictionary[Col1].append(row[0]);
s.__getslice__(0,-len(suf),1);
cls;
export var makes_valid_word=false;
export var all_the_things_i_want_to_do=[triple,square];
bool(0);
export var ladd=[];
export var seq_num=RNG.randint(0,len(self.nodes)-1);
var a=csr_matrix(a);
var chunk=f.read(chunksize);
b[b==0]=-1;
Math.floor((tgtdate-startdate).days/7)+1;
pylab.pcolor(xx,yy,zz);
export var maxi=np.amax(max_array,__kwargtrans__({axis:0}));
res.index=pd.to_datetime(res.date);
print(clean_chunked);
print();
print(self.a);
var fields=map(function __lambda__(x){return x[0]},cursor.description);
self.count=0;
np.maximum.accumulate(without_reset*reset_at);
plt.annotate(labels[i],xy);
ax.plot(np.arange(10)*(i+1));
var b=B();
QuerySet();
client.invoke(args,kwargs);
self.len+=1;
print(repr(x));
find_all_paths_aux(adjlist,start,end,[]);
var output=StringIO.StringIO();
print(event.Position);
meta.Session.add(userChoices);
tasks.put(Task(i));
complex_out.append(comp_row);
print(a+b);
var S=sparse(i,j,s,m,n,m*n);
var users=function(){var __accu0__=[];for(var p of people)__accu0__.append(p.user);return __accu0__}();
var http_server=tornado.httpserver.HTTPServer(application);
self._timer=Timer(self.interval,self._run);
sp_mat-sp_mat.multiply(zero_mat);
print(repr(ba));
export var converged=true;
transport.connect(__kwargtrans__({username:nodeusername,password:nodepw}));
sps_a.nnz;
var screen=wnck.screen_get_default();
var app=web.application(urls,__all__);
libc.printf=_printf;
csvdata.py_update(textdata);
config.make_wsgi_app();
signal.disconnect(self._checkSignal);
cols.append(i);
cnt1;
func;
var cmd=cmd.py_split();
var __left0__=tuple([10,4,6]);var a=__left0__[0];var b=__left0__[1];var c=__left0__[2];
result.__setslice__(len(result)-1,0,-1,result.__getslice__(len(result)-1,0,-1)-result.__getslice__(len(result)-2,null,-1));
print(myA);
var DEBUG=true;
export var entnum=int(py_name);
ax.yaxis_date();
var i=np.argsort(your_permutation);
var table=QtGui.QTableWidget(1,1);
l;
export var mySocket=socket(AF_INET,SOCK_DGRAM);
upperlist.append(l);
-1;
var t=tuple(range(2,129,2));
var y_sorted=y[order];
tuple([sizeof(pycvex_Stitcher_t)]);
var x=np.random.rand(D);
res.x;
var queryset=Question.objects.all();
x.append(x[i-2]+x[i-1]);
var Z=W+lam*D.dot(D.transpose());
tuple([new_string,1,enc]);
var count=0;
a.__setitem__([tuple([0,null,1]),0,0],t1);
lookup[k]=list(v);
len(last_question_marks.search(text).group(0));
result;
b.extend(a);
var __except0__=ValidationError(e);__except0__.__cause__=null;throw __except0__;
self.cbar=self.fig.colorbar(CS1,__kwargtrans__({cax:self.fig.axes[1]}));
do_stuff_to_last(elt);
export var combs2=5165700;
envelope_plot(x,y,__kwargtrans__({winsize:40,ax:ax2}));
var d=function(){var __accu0__=[];for(var i of enumerate(c))if(i[1]>2)__accu0__.append(i[0]);return __accu0__}();
export var LIN=np.dot(d_e_vecs,np.dot(d_e_vecs.T,X_.T)).T;
var curs=conn.cursor();
export var last_window=int(first_line[1]);
pari.pari_close();
var intersected=intersected.intersection(set(range(first,second+1)));
self.portfolio[ticker].extend(list(msg.py_values()));
file.close();
print(getSubStrings(a,1));
var i=j+1;
var __left0__=ax.transData.transform_point([i,i]);var x=__left0__[0];var y=__left0__[1];
var n=len(board)-1;
[1,2,7];
A()==A();
foo(x);
var __left0__=tuple([_cubic(b,1,.6),_cubic(b,0,.2)]);var x0=__left0__[0];var x1=__left0__[1];
JM2.__setitem__([ii,tuple([0,null,1]),ii],0);
export var keptticks=yticks.__getslice__(0,null,int(len(yticks)/10));
var jsonData=json.dumps(data);
clock.tick(15);
var value=ndb.StringProperty();
var __left0__=plt.subplots(1);var fig=__left0__[0];var ax=__left0__[1];
var jobs=function(){var __accu0__=[];for(var i=0;i<10;i++)__accu0__.append(pool.schedule(Check,__kwargtrans__({args:[i],timeout:5})));return __accu0__}();
ret[i]=a[i]+b[i];
var a=ref([1,2]);
a==b;
thismanager.window.SetPosition(tuple([500,0]));
artist.set_visible(!artist.get_visible());
value;
var angle=getAngleBetweenPoints(-1,-1,-2,-2);
original_set_item(self,header,value);
print(pd.concat([table1,table2[table2.columns.intersection(table1.columns)]]));
var number=list(map(int,str(n)));
self.threshold=threshold;
var x=a[1]*b[2]-a[2]*b[1];
[mysqld];
C[i]=full_array[2];
retstr.close();
form.populate_obj(user);
export var tfidf_matrix_train=tfidf_vectorizer.fit_transform(train_set);
fun(__kwargtrans__(dic));
print(a+1);
var test=function(){var __accu0__=[];for(var it of l)for(var _=0;_<2;_++)__accu0__.append(it);return __accu0__}();
print(self.t0[self.event_id].text,millis-self.now-deltaMillis);
Ecliptic(sun).lon;
self.height=event.height;
var found=emojis.findall(search);
var __left0__=np.unravel_index(np.argmin(M2Dr),shp);var r=__left0__[0];var c=__left0__[1];
d[id(b)]=b;
a.__setitem__([rows,cols],0);
var x=y.ravel();
var array=np.array([i,j,k,l,m]);

var result=np.empty(tuple([len(unique_lats),len(unique_lons)]));
var col=prop.columns[0];
var result=func(...args,__kwargtrans__(kwargs));
export var max_indices=[];
var __left0__=operator.itemgetter(1,4,10)(alist);var one=__left0__[0];var four=__left0__[1];var ten=__left0__[2];
export var ArtofWarCounter=Counter(function(){var __accu0__=[];for(var x of ArtofWarLIST)if(!__in__(x,ignore))__accu0__.append(x);return py_iter(__accu0__)}());
print(function(){var __accu0__=[];for(var i of f().contents)__accu0__.append(i);return __accu0__}());
other+self.x;
var schema=avro.schema.parse(schema_string);
printstats(counts);
var a=random.sample(range(1E5),1E4);
pred.append(tuple([int(tp[0]),int(tp[1])]));
fft_axes.set_autoscaley_on(false);
penup();
var __left0__=tuple([root.winfo_screenwidth(),root.winfo_screenheight()]);export var sw=__left0__[0];var sh=__left0__[1];
plt.plot(np.arange(10,0,-1)+i);
fronts;
x[small_indices]=0;
var B=sp.lil_matrix(tuple([5,5]));
var result=original_import(module_name,...args);
cmd_out.seek(0);
var pilImage=Image.open(StringIO(rawImage));
var __left0__=np.unique(c,true);var vals=__left0__[0];var idx=__left0__[1];
var f=Foo();
var x=np.arange(10);
int(x/.05)*.05;
panel.mean();
i.call(1);
print(list(islice(function(){var __accu0__=[];for(var p of postponed_sieve())__accu0__.append(p);return py_iter(__accu0__)}(),n-1,n+1)));
line[x]=child._text.encode(self.codec);
Py_DECREF(arglist);
answer.append(vector);
data.boxplot();
var fields=function(){var __accu0__=[];for(var entity of entities)for(var prop of props)__accu0__.append(tuple([entity,prop]));return __accu0__}();
db.test_collection.drop();
do_some_database_stuff();
var soup=BeautifulSoup(r.text);
ccvv;
ccbv;
var epoch=datetime.datetime.utcfromtimestamp(0);
pytest.fail(exc);
self.finish();
body;
var index=pandas.MultiIndex.from_product([y.index,z.index]);
waitress;
export var land=output.astype(bool);
var im=im[im>167];
var a=1;
var df2=df.copy();
var __left0__=plt.subplots(1,1);var fig=__left0__[0];var ax=__left0__[1];
highest_values.append(v);
var txt=proc.stdout.readline();
arr;
os.listdir(dir_name);
self.b=10;
a.dtype;
_log_to_logger;
var format_to_year_to_value_dict=defaultdict(dict);
data.splitlines().__getslice__(-lines,null,1);
py_items[index_slice]=list(value.py_items());
self.a=a;
var lst2=function(){var __accu0__=[];for(var i=0;i<Math.pow(10,4);i++)__accu0__.append(tuple([i,i,i]));return __accu0__}();
export var zippy=gzip.GzipFile(__kwargtrans__({fileobj:StringIO.StringIO(data)}));
coll.remove(data);
export var cors=CORS(app);
b_in_a.remove(ordered);
print(a_new==expected_a_new);
ps.end_document();
handler.setLevel(logging.DEBUG);
np.r_.__getitem__([x,x.__getslice__(-2,null,-1),mx.__getslice__(1,null,1),mx.__getslice__(-2,0,-1)]);
curses.wrapper(test);
var corpus=Corpus(__kwargtrans__({documents:function(){var __accu0__=[];for(var d of paragraphs)__accu0__.append(Document(d));return __accu0__}()}));
tmean(arr,__kwargtrans__({limits:tuple([lower_limit,upper_limit]),inclusive:tuple([false,false])}));
var property_asel=function(){var __accu0__=[];for(var [x,y]of zip(property_a,good_objects))if(y)__accu0__.append(x);return __accu0__}();
plot.line(x_range,y_range);
export var seed1=df[msk].mean();
f.close();
export var first_int=int(list_of_items_in_line[0]);
var prefix=py_next(function(){var __accu0__=[];for(var p of strings)if(!__in__(p,suffixes))__accu0__.append(p);return py_iter(__accu0__)}());
self.serialize(s);
common_neis.__setitem__([w,u],common_neis.__getitem__([w,u])+1);
var EMAIL_USE_SSL=false;
var __left0__=ax.hist2d(x,y,__kwargtrans__({bins:40,norm:LogNorm()}));var counts=__left0__[0];var xedges=__left0__[1];var yedges=__left0__[2];var im=__left0__[3];
var html=r.frame.toHtml();
export var ShortName=MyReallyBigClassNameWhichIHateToType;
var __left0__=itertools.tee(iterable);var first=__left0__[0];var second=__left0__[1];
save_cookies(r.cookies,filename);
var p=Particle(foo);
!decompose(l)[1];
true;
list(itertools.islice(args[0](),args[1]));
ggplot(df,aes(__kwargtrans__({x:cups_of_coffee,y:productivity})))+geom_line();
deleted[self._key];
pylab.cos(x)+pylab.sin(y);
print(main());
float.__new__(self,value);
export var method_name=method_to_cache.__name__;
i-=1;
a.__setitem__([tuple([0,null,1]),tuple([0,null,1]),0],255);
list(permutations(age.get_group(21).index));
var f1=np.array([1.000049]);
jinja2.escape(a);
var i=0;
self[context].prob(word);
var T=NP.random.randint(0,10,20).reshape(5,4);
fp.getvalue();
baz(5);
export var outputmapping=dict({});
results.append(tuple([sender.py_name,result]));
partitions.append(a.__getslice__(index,null,1));
print(x);
Math.pow(x,2)+self.i;
var a=list();
serverSocket.listen(1);
list(combined.elements());
var c=complex(0,2)*np.pi;
data.py_update(value);
var py_keys=list(toCSV[0].py_keys());
var mask=np.isnan(arr);
sys.exit(0);
array_crator(a,tuple([7,11]));
var files=[];
var __left0__=calendar.monthrange(first.year,first.month);var _=__left0__[0];export var lastday=__left0__[1];
[logger_qpid];
var sha=hashlib.sha1();
var __left0__=line.py_split();var key=__left0__[0];var score=__left0__[1];
Gtk.Grid;
.98;
babel.dates.format_datetime(value,format);
export var BLOCKSIZE=1048576;
self._real_executor=ThreadPoolExecutor(__kwargtrans__({max_workers:cpu_count()}));
etree.cleanup_namespaces(root);
parser.setContentHandler(StreamHandler());
local_time.isoformat();
p.start();
print(item);
some_date.astimezone(timezone(loc.time_zone));
var res=f(...arg,__kwargtrans__(karg));
np.add.at(grids,idx.T.tolist(),1);
var pos=np.where(my_array>5);
out.release();
self.customer=customer;
export var diff_business_days=pd.bdate_range(a,b).size;
var x=fit_df.index.astype(float).py_values;
diff.append(x);
export var fixname=self._fixname;
adj.set_value(adj.upper-adj.page_size);
var user=get_object_or_404(__kwargtrans__({pk:user.id}));
outp.write(out_str);
alarm.start();
var layout=QtGui.QVBoxLayout(self);
export var biverses_reloaded=mycorpus.aligned_sents();
nr_lines+=1;
var pool=multiprocessing.Pool(__kwargtrans__({processes:pool_size}));
var __left0__=np.meshgrid(dx,dx);var X=__left0__[0];var Y=__left0__[1];
dill.detect.trace(true);
var a=np.array([[5,6,1],[6,7,1],[7,8,1]]);
haversine(origin,paris,__kwargtrans__({miles:true}));
var cdf=np.cumsum(prob_matrix.T,__kwargtrans__({axis:1}));
xlApp.Workbooks.Add();
plt.scatter(intersection_points.__getitem__([tuple([0,null,1]),0]),intersection_points.__getitem__([tuple([0,null,1]),1]),__kwargtrans__({s:20}));
print(s);
self._odict.py_update(state);
var df=df.fillna(0);
var seconds=round(seconds,6);
var res=pd.rolling_apply(tmp.ii,50,function __lambda__(x){return gm(x,tmp,5)});
var url=models.CharField(__kwargtrans__({max_length:255,unique:true}));
print(bar.baz);
stream.close();
A[0][2][0].simplify();
len(res);
self.app.quit();
var local_tz=get_localzone();
export var ksort=np.argsort(x);
var x=np.arange(5);
fig.add_axes(ax);
set(d2.py_items())-set(d1.py_items());
getattr(obj,self._attr_name);
A.__setslice__(0,null,null,function(){var __accu0__=[];for(var sub of A)if(st.issubset(sub))__accu0__.append(sub);return __accu0__}());
r.status_code;
f(...a);
glob.iglob(pathname,__kwargtrans__({recursive:false}));
export var a_deciles=pd.qcut(a+jitter(a),10,__kwargtrans__({labels:false}));
var x=numpy.arange(0,1,.05);
var a=self.input.read(1);
list_B.append(arr[current_set]);
print(line1.contains(pr)||line1.buffer(EPS).contains(pr));
t.doX(arg);
res;
var title=models.CharField();
var new_a=np.zeros(tuple([rows,new_cols]));
var notifier=pyinotify.Notifier(wm);
export var walk_dir=sys.argv[1];
serversocket.listen(5);
random.shuffle(l);
var start=datetime.datetime.now();
plt.legend(__kwargtrans__({loc:1}));
a.other=5;
pl.quiver(X,Y,U,V,__kwargtrans__({color:cm.jet(nz(C))}));
pylab.pcolor(xx,yy,zz);
ICD.display(grp);
var arr=np.delete(arr,-1,__kwargtrans__({axis:1}));
var file_path=os.path.join(indir,infile);
do_something(a_map[B_object.string]);

str(x);
tuple([best,jin,jpal]);
export var corner22=[1,1];
var command=input();
var R=function(){var __accu0__=[];for(var i=1;i<n+1;i++)__accu0__.append([i,Vector([SomeCoordinates])]);return dict(__accu0__)}();
export var datagramRecieved=false;
var verts=[tuple([0,0]),tuple([0,1]),tuple([1,1]),tuple([0,0])];
var key_list=list(recursive_dict.py_keys());
var cont=plt.contourf(x,y,z,25);
self.b=2;
cherrypy.request.scoped_session_class.remove();
var queryset=User.objects.all();
var m=p.match(line);
mydict[item]=true;
np.multiply(unit_ray,closest_plane_distance);
print(pt.get_items());
tuple([x,y]);
self.py_keys[idx];
true;
b.Print();

zlib.decompress(compressed);
false;
var x=np.asanyarray(x,__kwargtrans__({dtype:float}));
browser.web_view.load(r);
print(a.f2(10));
var title=db.Column(db.String(255));
7;
var r=defaultdict(list);
percent(.1565,2);
var idx=match.index.get_level_values(0)[0];
mock._callable=_patched_callable;
arr2.__getitem__([tuple([0,null,1]),[min_window,min_window+1]]);
orig_test();
export var SEED=448;
var z=zip(a,b);
self._decoratee=decoratee;
max(szl,szr)+stackSize+1;
var data=Column(BLOB);
cache[param];
area/2;
var a=nltk.word_tokenize(text);
df1;
sympy.exp(x);
var mobile=models.IntegerField(__kwargtrans__({max_length:12}));
power_find(11);
var x=np.linspace(0,1,20);
browser.set_handle_robots(py_false);
var my_list=[];
Bar.x;
etree.tostring(tree.getroot());
n_errors+=1;
signal.alarm(t);
_callg(c,copy_generator(c));
punkt.finalize_training(__kwargtrans__({verbose:true}));
self.progress_bar.pulse();
channel.sendall(read_bytes);
ndprint(x);
do_smth(loop_id,i,k);
export var Fig=plt.figure();
testlist.py_sort();
list(pd.DataFrame(d).dropna().index);
export var tr1=np.fft.rfft(in1,n);
(function(){var __accu0__=[];for(var l of lists)__accu0__.append(list(filterfalse(function __lambda__(w){return w==val},l)));return __accu0__})();
var skip=sorted(random.sample(range(1,n+1),n-s));
funcs.append(partial(callback,source));
response.app_iter=file_streamer();
1;
result.append(x.unpack_from(buf));
layout.setContentsMargins(0,0,0,0);
times.py_sort();
var count=0;
var __left0__=[D[k]];res[k]=__left0__;var j=__left0__[0];
print(df1);
var __left0__=tuple([x[j],x[i]]);x[i]=__left0__[0];x[j]=__left0__[1];
print(result);
print(output);

print(f.bar());
lid_close();
s.py_values;
results.append(s);
var fig=pylab.figure(__kwargtrans__({figsize:tuple([8,8])}));
self.text_strings.text_string;
var sd=copy.copy(d);
urllib2.getproxies=function __lambda__(){return dict({})};
object.__setattr__(self,py_name,value);
var Base=declarative_base();
tojoin.append(element);
pool.close();
var __left0__=itertools.tee(nd);var a=__left0__[0];var b=__left0__[1];
PyObject*p(NULL);
print(tuple([py_name,value]));
root.setLevel(logging.DEBUG);
export var agen=function(){var __accu0__=[];for(var i of a)if(!__in__(i,set(b)))__accu0__.append(i);return py_iter(__accu0__)}();
print(stderr);
Math.pow(Math.pow(d,2).sum(__kwargtrans__({axis:0})),.5);
f.m;
var l=SparseList();
export var arcana=serializers.SerializerMethodField();
var labels=np.arange(10);

phonenumbers.format_number(parsed_number,phonenumbers.PhoneNumberFormat.E164);
self.end_headers();
var d=dict([[1,[2]]]);
var dec_idx=np.random.choice(Math.pow(2,m),N,__kwargtrans__({py_replace:false}));
var fig=plt.figure();
len(self.list1);
Template.render=instrumented_test_render;
write_to_lmdb(image_db,str(itr),image_datum.SerializeToString());
var end=time.time();
print(a1[n]+a2[n]);

L.append(4);
self.buttons.accepted.connect(self.accept);
print();
deactivate;
var Base=declarative_base();
x.__setitem__([1,0,0],value2);
Notes;
triplets.__setslice__(iT,iT,null,[triplets[iT-1][0],listB[iB+1]]);
self.broken=true;
bar.a;
var lines=np.random.random(tuple([numlines,numpoints,2]));
print(welcometext);
print(a);
var result=set1.union(set2);
proc.terminate();
print(sy.fu(c,__kwargtrans__({measure:function __lambda__(x){return-x.count_ops()}})));
export var data_fit=est_std*np.sin(t+est_phase)+est_mean;
var http=credentials.authorize(http);
var output=[];
var l=tf.unpack(state_placeholder,__kwargtrans__({axis:0}));
sys.exit();
var parser=argparse.ArgumentParser();
print(arr.sum());
var data=json.loads(chart_data);
self.mainWindow.settings.setValue(self.cookiesKey,cookiesArray);
fft_axes.set_autoscaley_on(false);
var x=numpy.random.normal(__kwargtrans__({size:tuple([size,n])}));
x.set_sensitive(false);
s.__getslice__(0,c,1);
range_template.py;
output;
quicksort(array,pivot+1,right);
total+=n;
os.dup2(devnull.fileno(),sys.stderr.fileno());
var __left0__=np.meshgrid(x,y);var X=__left0__[0];var Y=__left0__[1];
print(tuple([m.start()-len(s),m.end()-len(s)]));
s.poll();
socket.socket=socks.socksocket;
var l=function(){var __accu0__=[];for(var i of a)__accu0__.append(len(i));return __accu0__}();
var std=np.std([0,0,1]);

var s=StringIO.StringIO();
var l=len(s);
var result=dict({});
np.random.shuffle(yx);
is_sum_of_numbers(9,numbers);
export var reslen=np.max(accmap)+1;
var d=hashlib.md5();
export var tabrows=[];
group(function(){var __accu0__=[];for(var arg of it)__accu0__.append(callback.clone([arg]));return py_iter(__accu0__)}())();
models.py;
new_settings[6][termios.VTIME]=0;
main_loop.start();
py_next.click();
var diff=now-datetime.fromtimestamp(time);
export var decoder=json.JSONDecoder(__kwargtrans__({object_pairs_hook:collections.OrderedDict}));
df[i]=df[i-100].apply(function __lambda__(x){return x*i});
var mask=a.__getitem__([tuple([0,null,1]),1])==-1;
var model=sm.OLS();
export var alphabet=string.letters+string.digits;
self.__f(x-1);
base64.b64encode(zlib.compress(s));
any(map(function __lambda__(match){return __in__(match,temp)},lists));
export var argspec=inspect.getargspec(sum);
var dic=function(){var __accu0__=[];for(var x of lis)__accu0__.append([x,0]);return dict(__accu0__)}();
var c=function(){var __accu0__=[];for(var x of map(rect,a,b))__accu0__.append(x);return __accu0__}();
mapped.repeat();
mat_row.data-=numpy.repeat(vec_row.toarray()[0],numpy.diff(mat_row.indptr));
print(args);
p.map(partial(foo,__kwargtrans__({depth:depth-1})),list(range(x+1)));
sct.norm.cdf(__kwargtrans__({x:80,loc:60,scale:40}))-sct.norm.cdf(__kwargtrans__({x:60,loc:60,scale:40}));
ElementTree.XMLTreeBuilder=SimpleXMLTreeBuilder.TreeBuilder;
velcro.right(140);
[9,9,9];
var latest_file=max(files,__kwargtrans__({key:os.path.getctime}));
var cbar=plt.colorbar(__kwargtrans__({mappable:s,ax:ax}));
export var assigned_leads=lead.objects.filter(__kwargtrans__({assigned_to__in:usercompany})).distinct();
b.py;
itertools.zip_longest(...[py_iter(iterable)]*n,__kwargtrans__({fillvalue:fillvalue}));
export var FLANN_INDEX_KDTREE=1;
sf.where(sf.my_col>date_from&sf.my_col<date_to);
cls;
y.pack(__kwargtrans__({side:BOTTOM}));
group.py_setdefault(key,[]).append(item);
MyWidget();
print(rpn);
self.initial_parametername=self.parametername;
results.append(dict(zip(columns,row)));
export var eng=db.engine;
bn.partsort(a,a.size-10).__getslice__(-10,null,1);
export var imy=np.tile(np.arange(ylo,yhi,1),nx).reshape(tuple([nx,ny])).transpose();
cv.SetImageROI(newCanvas,tuple([0,yc,image.width,image.height]));
ax.scatter(xs,ys,zs);
sleep(5);
var form=MessageAdminForm;
plt.figure(__kwargtrans__({figsize:tuple([6*1.618,6])}));
var c=Counter(function(){var __accu0__=[];for(var [x,y]of ranks)__accu0__.append(x);return py_iter(__accu0__)}());
var resp=conn.getresponse();
var __left0__=zip(...points);export var x_coords=__left0__[0];var y_coords=__left0__[1];
var thumb=Image.open(new_file.img.path);
var data=cur.fetchall();
export var woman=WomenNativePassport.objects.py_get(__kwargtrans__({pk:pk}));
false;
index[axis]=indices[tuple(index)];
var C=B.reshape(tuple([20,20,2,2,18,5]));
tuple([datetime.date(2002,11,28),datetime.date(2002,12,25),datetime.date]);
v[i]+=1;
issubclass(WindowsError,OSError);
var session=requests.Session();
export var companytypeserializer=typebase_serializer_factory(CompanyType);
var img=Image.open(sys.argv[1]);
original.show();
var x=x+y;
var length=len(s);
sha1.py_update(data);
var tag=_lookup_string(child.tag,strmap);
ax.set_aspect(1);
print(mime_type);
pl.colorbar();
var token=response.read();
bar(dvals);
res.status_code==204;
var main=objectify.fromstring(xml);

var arg=sys.argv[1];
dis.dis(bar);
production.py;
pprint(A_inv);
var f=open(filename);
strio.seek(0);
print(function(){var __accu0__=[];for(var x of X)__accu0__.append(sph_kn(floor(v),x)[0][-1]);return __accu0__}());
var ax=plt.figure(fig);
self.data-other.data;
heapq.nlargest(2,el);
var d=function(){var __accu0__=[];for(var x of cols)__accu0__.append([x,df.columns[df.columns.str.contains(x)].tolist()]);return dict(__accu0__)}();
consumer.start();
MyObject().id;
print(repr(x));
hs.place(__kwargtrans__({x:5,y:5,width:150}));
var content=cleaner.clean_html(content);
export var html_theme_path=[customized_readable_theme.get_html_theme_path()];
curses.init_pair(i+1,i,-1);
var d=collections.defaultdict(list);
telnr;
py_next(end);
export var item_names=list(item_dict.py_keys());
plt.show();
print(x);
polygons.append(Polygon(square));
var existing_category=Category(__kwargtrans__({key_name:category_keyname}));
print(col.text);
my_func_called_inside_a_task();
cert.serial_number;
queue.put(tuple([tag,line.rstrip()]));
get_lerp_factor(0,9,16);

self.handleError(record);
tuple([0]);
self.assertFalse(w&&str(w[-1]));
ss.bind(tuple([host,int(port)]));
var __except0__=CustomException(42);__except0__.__cause__=null;throw __except0__;
export var top_left=true_points.min(__kwargtrans__({axis:0}));
hello.main();
orig_hasattr(o,a);
queryset;
var n=nx.shortest_path_length(G,1,4);
export var days_since_last_fail=arange(len(is_fail));
plt.subplot(1,1,1);
var sel=Selector(response);
export var base_cls_name=obj.__class__.__name__;
var start=time.time();
var s=base64.b64encode(t);
var fig=bp.figure();
bn.T.flags;
spl[-1]=int(spl[-1]);
var res=[];
cs+np.sum(a);
X_train_to_add;
export var first_row_min=df.loc.__getitem__([first[0],tuple([first[1],null,1])]).min();
c+=1;
self._min_y=min(self._min_y,y);

self._add(key.__getslice__(1,null,1),children[-1].children);
print(floor(d*m)/m);
var verts=[tuple([0,0]),tuple([1,0]),tuple([1,1]),tuple([0,0])];
self.f=f;
export var out_data=[];
export var outer_result=pool.apply_async(setouter,tuple([Q,G,n]));
export var widemapOP=dict(function(){var __accu0__=[];for(var x of zip(normal,wide))__accu0__.append(tuple([ord(x[0]),x[1]]));return py_iter(__accu0__)}());
f(__kwargtrans__({x:4}));
m.group();
var session=trans.open_session();
textwrap.indent(text,amount*ch);
var local_tz=get_localzone();
stream.read();
export var xstep=np.concatenate(tuple([xstep,-xstep]));
var app=Flask(__name__);
findex[0]=-1;
db_field.formfield(__kwargtrans__(kwargs));
var b=[];
s;
export var train_features=np.array(train_features);
cPickle.load(f);
df2;
a.py_sort();
var gray=cv2.cvtColor(image,cv2.CV_LOAD_IMAGE_GRAYSCALE);
it.send(StopIteration);

locator.sub(_doreplace,s);

1;
client.load_system_host_keys();
[1,1];
var result=celery.AsyncResult(tid);
commands[command]();
var w=MyWidget();
var result=[];
1;
tree(size-random.randint(10,20),myTurtle);
var answer=0;
var a=a.strip();
ucs4[n]=fill_char;
random_genes_dict[x]=genes_dict[x];
loop.run_forever();
find_intersection(m_list);
print(i);
var t=threading.Thread(__kwargtrans__({target:tornado.ioloop.IOLoop.instance().start}));
var content=thefile.read();
non_blank_count+=1;
var app=Flask(__name__);
os.rename(tempi,filepath);
var cos=np.cos;
export var Gcc=nx.connected_component_subgraphs(G)[0];
p+=1;
sum(function(){var __accu0__=[];for(var [i,w]of zip([1]+inputs,self.weights))__accu0__.append(i*w);return __accu0__}());
export var tmpfile_name=tempfile.mktemp();
rdd1.leftOuterJoin(rdd2);
export var result_names=np.unique(names);
i;
var __repr__=__str__;
var d=dict({});

var d=dict({});
export var declaration=doc.toxml();
self.enforce_required_fields(attrs);
print(function(){var __accu0__=[];for(var [k,v]of enumerate(linesB))if(!__in__(v,linesA))__accu0__.append(k);return __accu0__}());
new_name;
methodReference.methodReference.__self__.__class__;
mean.shape=tuple([mean.shape[0],1]);
fig.subplots_adjust(__kwargtrans__({top:.88}));
1;
print(df1);
print(i,time.time());
dic[k].append(v);
context.paint();
lst;
plt.xticks(list(range(len(corr.columns))),corr.columns);
a*np.sin(2*np.pi*f*t+p);
t.interval(.95,10,__kwargtrans__({loc:1,scale:2}));
w[1][0];
var heights=pd.Series(np.random.normal(__kwargtrans__({size:100})));
rooted_paths.append([root]+path);
getkey.get_key(D,5);
thrlist.append(t);
cross_val_score(LinearRegression(),X,y,__kwargtrans__({cv:threefold}));
ax.xaxis.set_minor_locator(ticker.LogLocator(__kwargtrans__({subs:subs})));
S.remove([]);
print(j);
xlApp.ActiveWorkbook.Close(__kwargtrans__({SaveChanges:0}));
self.buffer.append(line);
id(df2.columns);
test_suite.addTest(unittest.makeSuite(Invoice));
var i=0;
var y=rand(2,2);
export var consumer=oauth.Consumer(consumer_key,consumer_secret);
e.args[0].reason.errno;
var mysets=function(){var __accu0__=[];for(var x of MyList)__accu0__.append(set(x.py_items()));return py_iter(__accu0__)}();
np.set_printoptions(__kwargtrans__({precision:4}));
a.fromstring(s);
bow;
bestfit;
np.random.seed(0);
-1;
print(max(wn.lch_similarity(good,great),wn.lch_similarity(great,good)));
n*2;
lst.extend(words);
var stdout=StringIO.StringIO();
var value=getdict(value);
line[-1];
export var known=set(function(){var __accu0__=[];for(var [i,j]of mylist)if(!__in__(j,other))__accu0__.append(i);return py_iter(__accu0__)}());
self.Show();
a[0]-b[1];
dom.insertBefore(pi,root);
var i=0;
var start=np.random.randint(0,xmax-10,nsubarray);
var count=len(self.leftover);
false;
ar[0]=np.arctan2(vect[0],vect[2]);
var fig=matplotlib.pyplot.figure();
sys.stdin.py_name;
paths.append([]);
infinity;
(function(){var __accu0__=[];for(var c of word)__accu0__.append(my_alphabet.index(c));return __accu0__})();
self.delete(seq_num);
setattr(self,key,execdict[key]);
subplot(2,1,2);
np.trapz(arr);
self.obj_type=obj_type;
fp.close();
j==i+1;
f();
cols.append(x);
fcs.pszIconFile=iconpath;
var n=int(h.hexdigest(),__kwargtrans__({base:16}));
recvSock.setsockopt(socket.SOL_SOCKET,socket.SO_REUSEPORT,true);
var id=sa.Column(sa.Integer,__kwargtrans__({primary_key:true,autoincrement:true}));
work.append(tuple([nx,ny]));
data.py_update(function(){var __accu0__=[];for(var item of extra_items_in_deps)__accu0__.append([item,set()]);return dict(__accu0__)}());
min(best_results,__kwargtrans__({key:distance}));
export var zipstream=StringIO.StringIO();
d.day>=15?d:d+timedelta(__kwargtrans__({weeks:1}));
all_point_sets.append(curr_points);
OrderedDict(obj);
export var theta_mid=.5*(theta_edges.__getslice__(0,-1,1)+theta_edges.__getslice__(1,null,1));
export var select=np.in1d(list(range(data.shape[0])),sample_indexes);
_set_match(matches[-1]);
var __except0__=NotImplementedError;__except0__.__cause__=null;throw __except0__;
var a=Math.pow(sin(dlat/2),2)+cos(lat1)*cos(lat2)*Math.pow(sin(dlon/2),2);
export var newFile=self.window.new_file();
print(cell.value);
thread.start();
print(sum(lst));
n;
var x=x[x!=0];
(function(){var __accu0__=[];for(var h of hay)if(!(set(h)-needle))__accu0__.append(h);return __accu0__})();
var a=np.arange(100);
export var wordpx=[];
var palette=np.arange(8);
m_list.append(x);
var Y=poly.fit_transform(X);
var lens=[];
var a=A.py_values.reshape(-1,10);
ndb.delete_multi_async(Shard.query().fetch(__kwargtrans__({keys_only:true})));
var start=datetime(2012,1,1);
email.save();
mymodule.myfunc();
winsound.Beep(600,250);
py_true;
self.byName=collections.defaultdict(list);
group_consecutives(a);
var __left0__=tuple([b,a+b]);var a=__left0__[0];var b=__left0__[1];
tuple([tuple([8,[2,2,2]])]);
var r=bisect.bisect_left(indices,a);
var sock=urllib.request.urlopen(request);

print(elevation.shape);
PLT.draw();
self.draw_confints(ax,offpos,confint,errcolors,self.errwidth,self.capsize);
self._jrdd=rdd._jrdd;
self.partitioner=rdd.partitioner;
print(resp.headers);
priority_list[i[1]]=1;
var object_list=object_list.filter(__kwargtrans__({user:request.user}));
export var tloc=threading.local();
var d=dict({});
export var yflat=np.full_like(y,max(ax.get_ylim()));
var session=Session();
export var processes=function(){var __accu0__=[];for(var i=1;i<10;i++)__accu0__.append(Process(__kwargtrans__({target:print_head,args:tuple([i])})));return __accu0__}();
check(v1,v2);
plt.plot(x1,y1);
var args=parser.parse_args();
grouped.indices[group]=list(range(0,len(index)));
var cov=np.cov(a,b);
var A=function(){var __accu0__=[];for(var d of drg)__accu0__.append(d.date());return __accu0__}();
false;
var xx=np.array([[[1,2],[5,6]],[[7,8],[9,0]]]);
self.monochrome=self.cmap.monochrome;
var m=a.reshape(tuple([a.shape[0],-1]));
do_one();
sumBefore.append(sumBefore[-1]+x);
r.append(idx);
export var func_proto=ctypes.WINFUNCTYPE(HRESULT,HWND);
var b=a.copy();
date_dict[date_value.date()].append(date_value);
np.not_equal(c.__getslice__(1,null,1),c.__getslice__(0,-1,1),__kwargtrans__({out:flag.__getslice__(1,null,1)}));
export var clientId=serializers.Field();
boundmethod;
export var callerframerecord=inspect.stack()[1];
var sample=xy.take(np.random.choice(xy.shape[0],100,__kwargtrans__({py_replace:false})),__kwargtrans__({axis:0}));
app_name.context_processors.date_now;
var color=np.random.rand(N);
datastore.put(updates);
_PyUnicode_COMPACT_DATA(op);
pytest.fail(exc,__kwargtrans__({pytrace:true}));
0;
var dictionary=read_dictionary_from_file();
export var allbytes=function(){var __accu0__=[];for(var i=0;i<256;i++)__accu0__.append(chr(i));return __accu0__}();
self.SetCellValue(rowstart+y,colstart+x,c);
export var cnum=1;
print(tuple([args,leftovers]));
plt.grid();
self.arg1=arg1;
var parts=urlparse.urlsplit(url);
var digest=hashlib.sha1(hashcontents).digest();
functor.arity=arity;
var chrome_options=webdriver.ChromeOptions();
tracefunc;
var rows=cursor.fetchall().__getslice__(0,10,1);
print(args);
print(d);
timeit(function __lambda__(){return list(emptydict.py_keys())});
print(data);
print(df);
var colors=function(){var __accu0__=[];for(var i of np.linspace(0,1,number))__accu0__.append(cmap(i));return __accu0__}();
x.append(int(_x));
self.b=b;
df;
var foo=Foo();
link.allow_tags=true;
transitions[msg[0]]();
line[1]=line[1].__getslice__(0,5,1);
var a=np.random.randn(1E3);
var b=B(e);
py_iter(List);
var d=np.diag(C);
var description=db.TextProperty();
print(output);
self.client=webtest.TestApp(app);
NULL;
self.py_get(key);
y.pack(__kwargtrans__({side:BOTTOM}));
glClearColor(1,1,1,1);
cov.__setitem__([1,tuple([0,null,1])],1);
time.time()-start_time;
T(function(){var __accu0__=[];for(var [x,y]of zip(self,other))__accu0__.append(x+y);return py_iter(__accu0__)}());
var __left0__=y1<y2?tuple([y1,y2]):tuple([y2,y1]);var miny=__left0__[0];var maxy=__left0__[1];
var r=np.any(img,__kwargtrans__({axis:tuple([1,2])}));
print(myset);
hex(200-(1<<16));
export var new_element=lxml.etree.fromstring(lxml.etree.tostring(elem));
inner.click();
export var handlers=[];
count+=1;
obj+1;
var sample=random.sample(idx,p);
export var minimum=random.randrange(0,max_line,6);
i+=1;
cat(toJSON(response));
var b=int(sys.argv[2]);
reversed_words(s);
setattr(namespace,self.dest,attr);
post_syncdb.connect(add_view_permissions);
self.context=context;
parsed_args.func();
myFunction(x,y);
export var post_env=env.copy();
var data=function(){var __accu0__=[];for(var _=0;_<20;_++)__accu0__.append(random.randrange(100));return __accu0__}();
var lines=[];
new set([5,5]);
export var DEBUGGING=false;
condition?expression_if_true:expression_if_false;
var node=ET.Element(tag);
1;
results;
var user=request.user;
var data=[false,false,false];
json.dump(testarr,test_file);
var y=math.cos(x);
bind_layers(PPPoE_Tag,PPPoE_Tag);
self.c=c;
df[cols];
print(is_perfect_cube(-64));
var example=np.ones(tuple([4,2,100]));
var df=pd.read_csv(files[0]);
var key=f.read();
var ani=animation.FuncAnimation(fig,function __lambda__(){return py_next(game)});
indented[0]=lines[0];
var vals=[];
tuple([[self.x-1,self.y],[self.x+1,self.y]]);
export var result_feed=gd_client.ExecuteBatch(request_feed);
var positive=array+np.amin(array);
var stop_event=threading.Event();
var fs1=frozenset([42,666]);
var result=dialog.exec_();
conn.close();
var b=[1,0,1,1,0,1,1];
var value=map(function __lambda__(x){return power(r,x)},funcs);
select_rows(...py_items);
print(tuple([key.__name__,py_items]));
export var edgey1=region1^np.roll(nregion1,__kwargtrans__({shift:shift,axis:1}));
kth_order_statistic2(A,k);
print(stdout[-1]);

var __left0__=cv2.minMaxLoc(result);var min_x=__left0__[0];var max_y=__left0__[1];export var minloc=__left0__[2];export var maxloc=__left0__[3];
var __left0__=divide(22,7);var q=__left0__[0];var r=__left0__[1];
var X=function(){var __accu0__=[];for(var row of A)__accu0__.append(map(int,row.__getslice__(0,6,1)));return __accu0__}();
var dims=np.fromfile(f,dim_dtype,array_ndim);
var s=pd.Series(np.random.rand(100));
post_delete.connect(update_b_count,__kwargtrans__({sender:B}));
os.times();
obj.func1;
var d2=decimal.Decimal(2);
wait_for_finishing_subprocess();
arr.__getslice__(1,null,1).imag=arr[0].real;
var cax=fig.add_axes([.15,.15,.05,.4]);
var param=dist.fit(y);
__mod__(WSGIApplicationGroup,new set([GLOBAL]));
var start=argc.value-len(sys.argv);
var i=np.argmax(A!=0);
print(timeit.timeit(list_comprehension));
var a=copy(data);
export var pyo=ctypes.py_object(o);
s.__getslice__(0,last_index,1);
var draw=ImageDraw.Draw(im);
var site=sys.argv[1];
var current=match.group();
self.updateIcon();
var __except0__=ValueError;__except0__.__cause__=null;throw __except0__;
y.shape;
wrapper;
_defaultdict(CountTree);
var __left0__=os.path.py_split(latest_file);var _=__left0__[0];var filename=__left0__[1];
count+=bytechunk;

outer.inner()();
(function(){var __accu0__=[];for(var p of proc)__accu0__.append(p.join());return __accu0__})();
var data=iris.data;
var x=np.array([.5,2.2,-1.8,-.1]);
df1.plot(__kwargtrans__({ax:ax}));
var A2=np.hstack([A,A]);
var __left0__=stats.gamma.fit(data);export var fit_alpha=__left0__[0];export var fit_loc=__left0__[1];export var fit_beta=__left0__[2];
var dt=np.dtype(tuple([np.void,my_array.dtype.itemsize*my_array.shape[1]]));
real+=1;
fly.rect.x+=fly.hspeed;
var foo=Foo(settings);
tuple([ind1,ind2]);
connection.ops.value_to_db_datetime(value);
var base=argparse.ArgumentParser(__kwargtrans__({add_help:false}));
self._deletes.add(key);
(function(){var __accu0__=[];for(var i of item)__accu0__.append(map_level(f,i,level-1));return __accu0__})();
runUntil(start.Add(time.Millisecond*100));
var max_y=np.nanmax(rot_points.__getitem__([tuple([0,null,1]),1]),__kwargtrans__({axis:1}));
var connection=some_connection_pool.get_connection();
var index=np.arange(len(cols));
print(res.ready,res.value);
print(result);
directive+=signature;

var f=tempfile.NamedTemporaryFile(__kwargtrans__({delete:false}));
print(s.title());
0;
export var auth_uri=flow.step1_get_authorize_url();
os.chdir(PATH);
var line=line.strip();
sum;
var now=datetime.datetime.utcnow();
min(S);
var title=models.CharField(__kwargtrans__({max_length:100}));
shelf.close();
var rtn=true;
plt.vlines(x_intersect[negatives],-20,20);
init_from_map(self,locals());
tree.getPayload();
print(char,count);
var c=np.random.normal(__kwargtrans__({size:1E3}));
self.canvas=FigureCanvas(self,-1,self.figure);
argparse.ArgumentParser.set_default_subparser=set_default_subparser;
help(isinstance);
py_new.__class__=old.__class__;
(d-1)*d/2==len(condensed_matrix);
export var ex2=QtGui.QWidget();
export var opening=cv2.morphologyEx(img_thresholded,cv2.MORPH_OPEN,kernel);
new set([new set([balance.amount|abs])]);
print(minified);
var value=list1[0][i];
var bs=BeautifulSoup(t);
df[df.col1==tf.col1];
export var drops=df.index[df.index<df.index.max()-keep];
var a=[];
self.dict[key];
var seq=function(){var __accu0__=[];for(var x of seq_in)__accu0__.append(tuple([x,key(x)]));return __accu0__}();
res;
export var skin_ycrcb=cv2.inRange(im_ycrcb,skin_ycrcb_mint,skin_ycrcb_maxt);
tuple([s,self.get_environ(s)]);
var dx=x[1]-x[0];
var original=np.get_printoptions();
var i=0;
print(a.shape);
var w=Window();
s.asfreq(BDay());
export var myclient=Client(url,__kwargtrans__({transport:mytransport_instance}));
var group=models.ForeignKey(Group);
Tree.fromstring(s);
tfile.close();
var y=numpy.array([.5,.75,1,.5]);
var b=unhexlify(myhexstr);
var a=np.arange(20).reshape(tuple([5,4]));
len(res);
var counts=collections.Counter(a);
export var dRA=uniform(-1E-4,1E-4);
export var optimizer=tf.train.AdaGradOptimizer(.01);
var S=dok_matrix(tuple([1E4,1E4]),__kwargtrans__({dtype:bool}));
var ind=pd.Index(function(){var __accu0__=[];for(var e of mi.tolist())__accu0__.append(e[0]+e[1]);return __accu0__}());
var desired_value=__builtins__.py_next(value_iterator);
var b=map(tuple,list(d.py_values()));
var model1=models.ForeignKey(Model1);
print(serialize(data));
self.channel=self.connection.channel();
export var allix=set(range(len(elements)));
parameter1+parameter2;
var py_name=db.Column(db.String(50));

var list2=map(itemgetter(1),origlist);
list(zip(alist,blist));
print(a);
self.kill(signal.SIGKILL);
var managed=false;
min(lists,__kwargtrans__({key:len}));
int(x);
self.grid();
var labels=np.linspace(m0,m1,num_ticks);
plt.imshow(data);
export var set_ids=[];
dlg.Destroy();
self.factory.startedConnecting(self);
var pairs=zip(mylist.__getslice__(0,null,2),mylist.__getslice__(1,null,2));
export var entry_split=entry_regex.py_split(row,1);
export var previous_value=doing_fd.read();
var handler=logging.StreamHandler();
shelf.py_clear();
init_op.run();

Math.pow(np.array(l),np.arange(len(l)));
foo(node,p);
print(page);
var i1=Interval(10,15);
printItems(v,indent+1);
df1;
result;
np.log10(1+100*a,b);
print(my_string.zfill(2));
TerminateProcess(hProcess,1);
var p=np.asfarray(p);
pclt.set_transform(mtransforms.IdentityTransform());
var fd=sys.stdin.fileno();
var result=ssh.stdout.readlines();
export var is_duplicate=df.apply(pd.Series.duplicated,__kwargtrans__({axis:1}));
Math.pow(a,2);
Matrix(df.as_matrix());
f;
print(larray);
var minval=a[i];
chain+=[primes[secnum]];
var x=5;
py_typeof(Foo.bar);
export var usleep=function __lambda__(x){return time.sleep(x/1E6)};
var N=100;
multiply(S,P);
var lst2=[1,2];
self.value=value;
s.read(len(expected));
print(dict);
export var dt_delta=dt_delta.days*60*60*24+dt_delta.seconds;
self.array.append([item,priority]);
print(string.value);
logger.addHandler(console);
entries.add(key);
os.path.join===posixpath.join;
self;
var rand_num=np.random.choice(tuple([0,1]),__kwargtrans__({p:[1-p,p]}));
var comp=compiler.SQLCompiler(dialect,statement);
item.setCheckState(QtCore.Qt.Checked);

df2.columns;
export var nonmatching=object();
print(pat.findall(data));
scores[py_name]+=int(score);
canvas.print_png(response);
export var authentication_classes=tuple([TokenAuthentication]);
allocate(rowData(nC));
sys.exit(qApp.exec_());
var r=function __lambda__(x,y){return np.sqrt(max(0,1-Math.pow(x,2)-Math.pow(y,2)))};
var msg=handle_pyerror();
var x=list(enumerate(l));
var args=function(){var __accu0__=[];for(var i=0;i<10;i++)__accu0__.append(tuple([square,a[i],x[i]]));return __accu0__}();
self.sock=sock;
toss2[edges]=dsteps;
var res=opener.open(req);
Py_Initialize();
qbbbb;
bbbb;
qaaaa;
val;
var c=SimpleCV.Camera(1);
self.z=z;
map(tdgi,filter(tdin,theList));
var fields=function(){var __accu0__=[];for(var column of columns)__accu0__.append(line[column].strip());return __accu0__}();
foo(node,copy.deepcopy(p));
var EMAIL_PORT=25;
export var rhost=socket.gethostbyaddr(host);
sys.float_info.epsilon;
var something=tuple([protorpc.messages.StringField(1,__kwargtrans__({required:true}))]);
print(list(people.py_keys()));
create_frequency_list(df);
milepost+=Math.floor(len(data)/10);
var b=[4,5,6];
var results=[];
children;
w.writeheader();
result.append(tuple([ChartItem(rule[0][0],Ir),tuple([tuple([x+z,z]),tuple([Ih])])]));
var data=f.read().py_split();
ogl.CGLGetCurrentContext.argtypes=[];
sys.stdout=_stdout;
print(self.value);
export var expressions=[];
var L=list(range(100));
BOOST_PYTHON_MODULE(example);
var result=_SHGetFolderPath(0,CSIDL_APPDATA,0,0,path_buf);
var z=list(zip(t,t2));
xys_top.append(tuple([(x.max()-x.min())/2,zone]));
num+=s[0];
demo01();
layer.paste(mark,tuple([x,y]));
print(urlunparse(u));
export var what_i_want=function(){var __accu0__=[];for(var i of combinations(stuff,len(stuff)/2))__accu0__.append(i);return __accu0__}();
keylist.append(lkey_annotated);
var a=np.random.randn(10,10);
plt.gca().add_artist(self.line);
print(lst);
dists.shape;
var fig=plt.figure();
var out=np.ravel(np.zeros(__kwargtrans__({shape:tuple([n,n])})));
(function(){var __accu0__=[];for(var j=0;j<10;j++)__accu0__.append(tuple([j,is_odd(j)]));return __accu0__})();
export var fromstring_tree=etree.fromstring(xml_str).getroottree();
your_subprocess.py;
export var retries=0;
[];
link.allow_tags=true;
aaaaa;
[tox];
var tree=et.fromstring(xmltext);
export var sqrt_n=int(math.floor(math.sqrt(n)));
self.x=x;
feature_group.add_child(folium.Marker(__kwargtrans__({location:[lat,lon],popup:py_name})));
var L=ax.legend();
print(easygui.fileopenbox());
mmapped_file_as_string.close();
print(recursion(a));
print(i,j);
var divider=make_axes_locatable(ax);
var x=np.random.normal(1+i,.04,__kwargtrans__({size:len(y)}));
stdin.flush();
print(len(A));
self.value;
text.rfind(pattern,0,text.rfind(pattern));
var post_data=request.POST.dict();
log(p(a,b)/(p(a)*p(b)));
export var MANAGERS=ADMINS;
export var convert_list=label_list.__getslice__(0,-1,1);
result+=self.buf.read(size-len(result));
var t=Thread(__kwargtrans__({target:processData,args:tuple([some_data])}));
AppHelper.runEventLoop();
var loader=unittest.TestLoader();


export var unew=np.arange(0,1.01,.01);
f.py_name;
var doc=parseString(html_string);
r;
var result=list(product(...lists));
m?m:12;
var filepath=sys.argv[1];
var form=OrganismForm();
var queryset=self.model._default_manager.all();
MyClass.some_method(mock_object);
tuple([[4,8,12]]);
a_test.method_three();
var result=thirdparty.go();
export var lstnans=[np.nan]*(len(Weight)-len(Quota));
vals_array.__setitem__([lat_idx,lon_idx],vals);
sys.stdin=_stdin;
columns[k].append(v);
var cbar_ax=fig.add_axes(fig_coord);
s.startswith(tag);
var cr=csv.reader(response);
var parser=ArgumentParser();
lats.append(float(row[1]));
_foo();
print(json.dumps(x));
a.__setslice__(0,null,null,numpy.NAN);
var edges=function(){var __accu0__=[];for(var [i,j]of permutations(py_replace,2))if(i[1].has(j[0]))__accu0__.append(tuple([i,j]));return __accu0__}();
1;
platform.release();
py_typeof(Sub1);
var y=np.array(y);
json.dump(testarr,test_file);
print(sqlStr);
export var action=webdriver.common.action_chains.ActionChains(driver);
var i=(n+1)/2;
var d=datetime.datetime(...tup.__getslice__(0,6,1));
var x=np.linspace(0,2*np.pi);
var coords=np.array([yy,xx,np.zeros(im.shape.__getslice__(0,2,1))]);
sftp.py_get(filepath,localpath);
print(list_index);
export var repmask=np.logical_and(~flag[slcs2],flag[slcs1]);
var s=list(input_str);
print(df.index.hour);
params.append(escape(v,conversions));
fallback;
var root=Tk();
var data=self._get_numeric_data();
var tree=ahocorasick.KeywordTree();
filerecords.remove(selection);
var sent=self.sock.send(msg.__getslice__(totalsent,null,1));
MULT(table[i-1],a,table[i]);
var data=Counter(your_list_in_here);
f(...args,__kwargtrans__(kwargs));
var __left0__=cap1.read();var ret1=__left0__[0];var frame1=__left0__[1];
var s=requests.session();
len(self._d);
var z=np.any(img,__kwargtrans__({axis:tuple([0,1])}));
result+=num_subsequences(seq.__getslice__(1,null,1),sub.__getslice__(1,null,1));
len(self._dict);
export var magdir=np.rad2deg(np.arctan2(u,v));
test_case.assertEqual(len(expected),len(actual));
var M=[[0,1,2],[1,0,1],[2,1,0]];
b.wait();
messages.py_sort(__kwargtrans__({key:function __lambda__(m){return m.lineno}}));
print(integer,exponent);
var row=session.query(Table)[rand];
print(mystring.format(__kwargtrans__(locals())));
process.kill();
f.seek(f.tell()-overlap);
var color=models.CharField(__kwargtrans__({max_length:50}));
shutil.copytree(source,destination,__kwargtrans__({ignore:ignored_files}));
export var cmap4=CustomCmap([1,.42,.04],[.5,.5,.5]);
export var my_img=tf.image.decode_png(value);
cache.incr(self.COUNTER_CACHE_KEY);
list(iterate_strings(5));
edge_list.append(tuple([i,j]));
myNewMassage.extend(myMassage);
var a=np.zeros(1E5,int);
pprint.pprint(x);
var w=gtk.gdk.get_default_root_window();
xlim(0,1E3);
proxy.config.debug=1;
newfile.close();
lazy(help_SHOP_CHOICES,list)();
pylab.plot(x,y);
loop.call_later(5,stop);
app;
var __left0__=np.meshgrid(A.__getitem__([tuple([0,-1,1]),0]),B.__getitem__([tuple([0,-1,1]),0]));export var x11=__left0__[0];export var x21=__left0__[1];
var X=np.arange(N*N).reshape(N,N);
blank_image.save(out);
var ax=fig.add_subplot(111);
var lines=[line]+list(itertools.islice(f,6));
print(min(function(){var __accu0__=[];for(var shots of shot_sequences)__accu0__.append(tuple([cost(shots),shots]));return py_iter(__accu0__)}()));
var start=time.time();
self.buffer=[];
var string=string.rstrip().lstrip();
yaml.add_representer(literal_unicode,literal_unicode_representer);

var b=function(){var __accu0__=[];for(var [i,flag]of enumerate(flags))if(!flag)__accu0__.append(l[i]);return __accu0__}();
var points=np.empty([50,100]);
print(a);
export var AND_ANOTHER_CONSTANT=4;
var x=np.linspace(min(sample),max(sample));
time.sleep(.5);
var files=zip_file.namelist();
list(parse_to_argv_gen(instring));
var B=p2[0]-p1[0];
var text=tk.Text(root,__kwargtrans__({wrap:tk.WORD,height:5}));
self.set_data(x,y);
var master=Tk();
var __left0__=np.linalg.lstsq(M,np.log(ydata))[0];export var logA=__left0__[0];var alpha=__left0__[1];var B=__left0__[2];
xml;
print(a[j[k]]);
export var xlsx=pd.ExcelWriter(output_path);
__in__(item,self.__dict__);
export var x_std=(x-x.mean())/x.std();
var arr=np.array(function(){var __accu0__=[];for(var _=0;_<5;_++)__accu0__.append([1]*10);return __accu0__}());
self.file.seek(position);
var a=np.asarray(a);
var mail=line[1].strip();
eval(equation);
var z=x*np.exp(-Math.pow(x,2)-Math.pow(y,2));
var func=function __lambda__(){return requests.post(full_url,json.dumps(data))};
export var narr=np.asanyarray(source);
export var nom_plan_label=QtGui.QLabel();
var time=(end-start)/1E3;
var cursor=connection.cursor();
var race=models.ForeignKey(YourRaceModel,__kwargtrans__({index_db:true}));
var content_type=mimetypes.guess_type(py_name)[0];
var session=requests.session();
var __left0__=curve_fit(func,xdata,ydata,p0);var popt=__left0__[0];var pcov=__left0__[1];
export var newTuple=tuple(function(){var __accu0__=[];for(var x of range(0,len(oldTuple),4))__accu0__.append(oldTuple.__getslice__(x,x+4,1));return py_iter(__accu0__)}());
var mask1=np.hstack(tuple([false,arr.__getslice__(1,null,1)<arr.__getslice__(0,-1,1),false]));
parser.print_help();
var B=np.zeros_like(A);
print(x);
var current_dict=current_dict[letter];
var results=map(f,list(range(50)));
var form=UsersForms.UserImage();
fd.writelines(rows.__getslice__(n,null,1));
x+y;
out.__getslice__(0,null,-1);
cv2.destroyAllWindows();
person.put();
rt.clock_getres(CLOCK_REALTIME,byref(res));
pickle.dump(ibm,fout);
var result=[];
var v=defaultdict(list);
var __left0__=meshgrid(x,y);var X=__left0__[0];var Y=__left0__[1];
x;
var cols=function(){var __accu0__=[];for(var [i,a]of enumerate(data))__accu0__.append(np.ones_like(a)*i);return __accu0__}();

export var idxes=function(){var __accu0__=[];for(var [idx,val]of enumerate(s))if(__in__(val,letters))__accu0__.append(idx);return __accu0__}();
var x=random.gauss(-200,150);
var ax1=f1.add_subplot(111);
term_appearance.py_update(x);
stdscr.addstr(len(lines),0,s);
a.append(0);
var lg=lua.globals();
export var url_values=urllib.parse.urlencode(data);
var soup=BeautifulSoup(f);
deleteseq.__getslice__(pos,null,1);
self.doIt=myFunc;
self.length=n;
t[rows];
var running=true;
export var h5_store=h5open(file_input,fileop);
signal.signal(SIGHUP,SIG_DFL);
export var inbox=outlook.GetDefaultFolder(6);
var out=np.zeros(A.shape[0],np.bool);
f.truncate();
f.seek(999999999);
export var gridpoints=np.array([xx.ravel(),yy.ravel()]);

print(df);
var y=np.random.rand(20);
func(elem,level);
result.append(math.pow(y,2));
var utc_dt=utc.normalize(dt.astimezone(utc));
var ax=plt.gca();
var a=QApplication([]);
export var originalList=[0]*len(myList);
export var upper_bound=np.array([255,255,upper_val]);
wrapper;
answer.save();
var l2=l.__getslice__(py_split,null,1);
var __left0__=tuple([list(range(1E4)),list(range(1E4))]);var a=__left0__[0];var b=__left0__[1];
manager.resize(...manager.window.maxsize());
sys.exit();
var title=title.strip();
var buf=bytearray(bufsize);
export var word1_set=word1_synonyms[best_match[0]].lemma_names;
d[5]=1;
var sc=SparkContext(__kwargtrans__({conf:conf}));
p.close();
self._cond.acquire();
var t=Thread(__kwargtrans__({target:some_task}));
spark.range(10).rdd.map(map_sth).count();
export var cmpfunc=function __lambda__(a,b){return cmp(b,a)};
self.py_name=tempfile.mkdtemp();
json.dumps(dict_obj);
tuple([deg,mnt,sec]);
var choice=localrandom.randrange(num_choices);
var found=true;
len(self.buffer)>0;
self.first_name;
var x=x.flatten();
var cols=function(){var __accu0__=[];for(var i of y)__accu0__.append(mapping[i]);return __accu0__}();
var d=Dave();
tuple([origin[0],origin[1]-1]);
var __left0__=tuple([50,200]);export var min_d=__left0__[0];export var max_d=__left0__[1];

self.data;
x;
sys.stdout.flush();
deletex;
var root=Node(element);
var j=np.arange(N);
a.__setitem__([tuple([0,null,1]),1,tuple([0,null,1])],[[8,8,8],[8,8,8]]);
section.append(line);
bar.fizz();
task.add_done_callback(self.handle_go_result);
num.__setitem__([i,j],np.where(t[i]<=t[j],t[i],t[j]).sum());
hold(true);
var count=0;
export var lyrics=m.group(1);
x2_Kaxs_2[j]=function(){var __accu0__=[];for(var k=0;k<2;k++)__accu0__.append(random.randint(0,9));return __accu0__}();
var fn=fileinput.filename();
f2.write(b);
self.window_list=[];
delta+=1;
export var cn=Counter(l).most_common(2);
value.__index__();
print(parser.parse_args());
var env=os.environ.copy();
union.match(word);
tuple([count,sum]);
test1.put();
var count=0;
var result=[];
len(self.alist);
d_view.py_sort(__kwargtrans__({reverse:true}));
var c=calendar.Calendar(__kwargtrans__({firstweekday:calendar.SUNDAY}));
var s=f.read(bufsize);
export var someList=[];
print(curve_fit(f,xdata,ydata,__kwargtrans__({p0:tuple([.1,.5,.1,150])})));
py_next(function(){var __accu0__=[];for(var x of test)if(__mod__(x,5)==0)__accu0__.append(x);return __accu0__}());
a.insert_node(a.root,4);
t.start();
var f=Foo();
export var xlen=wlen;
var ranked=sorted(timings,__kwargtrans__({key:function __lambda__(t){return t[1]}}));
B.__setslice__(0,null,2,B.__getslice__(0,null,2)+.1);
var msg=EmailMessage(subject,html_content,from_email,[to]);
dumps(rv);
true;
var top=sorted(freq_dict,__kwargtrans__({key:freq_dict.py_get,reverse:true}));
var id=Column(Integer,__kwargtrans__({primary_key:true}));
im.__setitem__([tuple([ylo,yhi,1]),tuple([xlo,xhi,1])],im.__getitem__([tuple([ylo,yhi,1]),tuple([xlo,xhi,1])])+gauss2d(imx,imy,amp,x0,y0,sx,sy));
var z=x+y;
total+=int(col);
var f=interp1d(x,y);

self.end_states.append(py_name);
print(df);
sd.play(data,fs);
do_something_to_display_them();
var pvt=pvt[pvt.columns.__getslice__(1,null,1).tolist()+pvt.columns.__getslice__(0,1,1).tolist()];
export var GENERATE_LATEX=NO;
export var dl=Downloader();
y.visit(t);
var result=dict(zip(columns,result));
export var prime_divisors=function(){var __accu0__=[];for(var d of divisors)if(isprime(d))__accu0__.append(d);return __accu0__}();
var results=tuple([[],[]]);
var d=np.diff(b);
fig.draw(fig.canvas.get_renderer());
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
ret[line.strip()]=dict({});
var result=self.cursor.fetchall();
defaultdict(recursive_defaultdict);
var result=[];
threads[-1].start();
var idx=np.arange(iszero.shape[0]);
c();
_foobar(m,n,xpp,ypp);
print(list_A,list_B);
var s=b.session();
var d2=datetime.date(2008,9,15);
var data=np.reshape(np,random.randn(20),tuple([10,2]));
a.__getitem__([0,0,1])*b.__getitem__([0,1,2]);
var s=set(range(10));
export var netscape=true;
var mask=df.eq(df.max(__kwargtrans__({axis:1})),__kwargtrans__({axis:0}));
new_sequences.add(tuple([val+1,count+1]));
answer.append([i]);
var tasks=[blocking1(),blocking2()];
export var nrows=B.shape[0];
inner_fn();
arr[i]=-1*arr[i];
eventLoop.exit();
p_as_list.append(node);
var arr2=function(){var __accu0__=[];for(var j=0;j<5;j++)__accu0__.append(function(){var __accu1__=[];for(var i=0;i<5;i++)__accu1__.append(i+j);return __accu1__}());return __accu0__}();
var z=list(zip(t,t2));
var y=y.reshape(numRows,1);
var counts=function(){var __accu0__=[];for(var [k,v]of list(Counter(mylist).py_items()))if(v>1)__accu0__.append([k,v]);return dict(__accu0__)}();
var cursor=connection.cursor();
export var fullPath=os.path.join(dirpath,filename);
lmarshalledClosureValues.append([pickle.dumps(litem)]);
print(element);
self.connect();
export var c0=np.array([1,0,2]);
len(self.arr);
tuple([AC,150]);
var data=obj.__getattribute__(field);
var alphabet=string.ascii_letters+string.digits;
var od=OrderedDict();
export var non_blanks=function(){var __accu0__=[];for(var line of fin)if(line.strip())__accu0__.append(line);return py_iter(__accu0__)}();
the_table.py_update(giveHereYourDictionary);
self.create_receiver();
self.x=x;
B/=B.std();
inner();
export var start_index=np.argmin(np.abs(ts-start_point));
job.join();
var __left0__=tuple([a,b,c,d]);var d=__left0__[0];var c=__left0__[1];var b=__left0__[2];var a=__left0__[3];
amap.append([r(),r(),r(),r(),r(),r()]);
EnumProcesses.restype=ctypes.wintypes.BOOL;
dict([[9,9]]);
awscli;
print(result);
ax.clabel(cset,__kwargtrans__({inline:1,fontsize:10}));
configure(config);
list(indices(5,2));
var bucket=conn.get_bucket(BUCKET_NAME);
var s=set([4,5,6]);
user.is_staff=true;
vset(args);
c_array.__setslice__(0,null,null,points);
var x=datetime.now();
trimmed.append(line.__getslice__(indent,null,1).rstrip());
var img=cam.get_image();
var out=x[unq_idx[np.bincount(tag_idx)==1]];
data.extend(x);
print(new_list);
export var df_null=df.isnull().unstack();
var __left0__=ctx.font_extents();export var fascent=__left0__[0];export var fdescent=__left0__[1];export var fheight=__left0__[2];export var fxadvance=__left0__[3];export var fyadvance=__left0__[4];
export var clump_mask=label==biggest_label;
var rng=list(range(6,9));
export var finish_time=datetime.datetime.now()+datetime.timedelta(__kwargtrans__({hours:6}));
var columns=list(someitem.py_keys());
export var myvalue=eval(my_data[py_name]);
item;
simplejson.loads(s1);
var l=[0,1,2,4,5];
print(data);
true;
var id=Column(Integer,__kwargtrans__({primary_key:true}));
id(os1)!=id(os2);
print(b.weekday());
var first_ten=pd.DataFrame();
var a=copy.deepcopy(a);
print(x.py_pop(-1));
b[b==255]=1;
sys.stdout=self.sys_stdout;
var v=ctypes.c_int(1);
plt.subplots_adjust(__kwargtrans__({top:.85}));
after.py_replace(sub,wanted,1);
block_list;
export var delta_time=(time2-time1).total_seconds();
export var plotter2=Plotter(ui);
termios.tcsetattr(fd,termios.TCSAFLUSH,old_term);
var ecdf=sm.distributions.ECDF(sample);
var x=sin(i);
var res=[];
field.document_type(__kwargtrans__(value));
var file_writer=csv.writer(test_file);
G.add_edges_from(list(data.py_items()));
export var df_count=df_count.reset_index();
var b=np.eye(2);
1+self._foo;
app.exec_();
r.clipboard_clear();
var item=date_to_datetime(item);
var yi=np.linspace(min(y),max(y));
app.logger.info(region2.id);
print(len(img.py_split()));
[pypi];
dict.__init__(self,...kwargs);
var state=self.__dict__.copy();
datetime.timedelta(475);
var title=models.CharField(__kwargtrans__({max_length:255}));
var i=1;
[.80000001,.40000001];
TestApp().run();
var n=np.array([-t[1],t[0]]);
client_socket.send(k);
py_next(self.__iterPerson(__kwargtrans__(kwargs)));
var index=self.dictionary[key][0];
ax.scatter(x,y,z,__kwargtrans__({c:density}));
var ax1=plt.subplot(121);
export var num_consumers=mp.cpu_count()*2;
var config=config.reindex(new_index);
var data=s.recv(1024);
var driver=webdriver.Firefox();
fun(arg);
var x=y+x;
print(pretty.date(yesterday,__kwargtrans__({short:true})));
export var ConfusedRaster=arcpy.sa.Con(arcpy.sa.IsNull(ras1)==0,1,0);
print(list(cells).__getslice__(1,null,1));
self.__disconnect__();
tools.c.do_something();
plt.show();
message;
var tokens=re.py_split(pat,text);
var window=QtGui.QWidget();
var client=pm.SSHClient();
var soup=BeautifulSoup(value);
var output=df.communicate()[0];

p;
self._odict[key]=val;
var df=pd.DataFrame();
export var bytereader=function __lambda__(){return fobj.read(1)};
gc.collect();
f.write(content);
var pb=gtk.gdk.Pixbuf(gtk.gdk.COLORSPACE_RGB,true,8,w,h);
var funcs=funcs.__getslice__(0,null,1);
var foo=models.Foo();
py_typeof(a);
var prime=true;
a.d;
tup[0]=a;
export var listvals=[];
wrapper;
var v1=np.random.randn(100);
wrapped.__module__=tgt_func.__module__;
var x=np.append(np.nan,np.append(x,np.nan));
var output=dict({});
img.set_data(haha);
zip(...[py_iter(List)]*2);
p.join();
plt.tight_layout();

print(df);
var L=function(){var __accu0__=[];for(var x of list(tmp.py_items()))__accu0__.append(tuple([x[0],x[1]]));return __accu0__}();
var pos=pygame.mouse.get_pos();
var a=10;
export var fNewList=list(fL);
entries.append(attrib);
var lookup=collections.defaultdict(list);
var ax=f.add_subplot(111);
df;
var df=pd.DataFrame(dict(__kwargtrans__({observation:np.random.uniform(50,60,200)})),idx);
graph[-1].append(line);
convert_list(v);
elementwiseApply(mul,list1,list2);
var x=numpy.arange(10);
outputlist.append(y);
tuple([grp1.parent_id]);
a.__getitem__([b,tuple([0,null,1])]);
var ids=set(function(){var __accu0__=[];for(var [i,j]of mylist)__accu0__.append(i);return py_iter(__accu0__)}());
1;
var sat=np.cumsum(np.cumsum(sat,__kwargtrans__({axis:0})),__kwargtrans__({axis:1}));
export var item_set=set(function(){var __accu0__=[];for(var sublist of s)for(var item of sublist)__accu0__.append(item);return __accu0__}());
day+=DELTA/60/60/24;
print(a);
self.foo=foo;
x.start();
self.NEWATTRS.append(attrs);
self.cookies=[];
count_Trues(b_List);
s.discard(line.strip());
export var lookup_list=[];
result.append(set(sublst));
export var newY=y.__getslice__(0,null,1);
var py_values=numpy.random.randint(0,20,10);
var table=Gtk.Table(1,1,false);
baz.bar(1);
finder.run_script(source_name);
self.a;
self.count=start-1;
print(k);
frame.pack();
print(word);
s.__getslice__(0,-amount,1)+substring;
total;
total_length+=dereference(it).second.size();
var user=request.user;
msg_out[i+j]^=gf_exp[lcoef+lgen[j]];
false;
Py_DECREF(POP());
d.append(c);
var ch=logging.StreamHandler(sys.stdout);
var driver=webdriver.Chrome();
GC.SuppressFinalize(this);
sys.stdout=code_out;
new set([new set([x])])-new set([new set([y])]);
Union(self,other);
l2.remove(m);
out.write(u);
result.__setitem__([x,y],grid.cells.__getitem__([x,y]));
var c=np.concatenate(tuple([a,b]));
var response=requests.py_get(slug);
events+=function(){var __accu0__=[];for(var [t,value]of l)__accu0__.append(tuple([t,value,i]));return __accu0__}();
g.sum();
stream.attach(screen);
print(issubclass(Foo,Mixin));
fout.close();
r_.__getitem__([a2d(a0),a2d(a1)]);
export var beg_ts=time.time();
actions.perform();
self.data[key];
export var file_contents_values=list(file_contents.py_values());
export var mytimer=FakeTime();
sys.exit();
do_something_with(request);
self.ax=self.axes[0];
var p=select.poll();
e.tags=self.tags.all();
var title=title.strip();
var df=df.copy();
export var source_unique=function(){var __accu0__=[];for(var v1 of source_list)if(!__in__(v1,set(diff_list)))__accu0__.append(v1);return __accu0__}();
var crsr=cnxn.cursor();
export var new_hexbin=self.ax.hexbin(self.xData,self.yData);
var fig=plt.figure();
var now=datetime.now(tz);
print(number);
var G=nx.DiGraph();
interp(256,[1,512],[5,10]);
var df=pd.read_csv(content,__kwargtrans__({header:0}));
var root=Tk();
tuple([_new_foo,tuple([self.__class__,coltypes,rows])]);
a.insert(0,self.__adb_path);
self.sum+=item;
os.chdir(moveTo);
var serializer_class=UserSerializer;
export var f_ab=np.empty(tuple([len(a),len(b)]),__kwargtrans__({dtype:np.array(f(a[0],b[0])).dtype}));
np.allclose(loopy_cdist(seed,data),vectorized_indexing_maxat(seed,data));
export var MOUSE_LEFTDOWN=2;
var clf=XGBClassifier();
export var myUdf=udf(myFunc,StringType());
yaml.dump(test2);
export var df_from_each_file=function(){var __accu0__=[];for(var f of all_files)__accu0__.append(pd.read_csv(f));return py_iter(__accu0__)}();
print(x);
print(x);
var a=a+5;
_method(parameter,_user_data);
var d=defaultdict(list);
var opener=urllib.request.build_opener(proxy_support);
var reverse_d=collections.defaultdict(list);
imshow(blue);
export var mg=numpy.meshgrid(x,y);
self.GoaldID=-1;
print(a);
var a=A();
plt.scatter(list(range(len(results[0]))),results[0]);
self._real_executor.shutdown();
var stream_handler=logging.StreamHandler();
server.handle_request();
x.myAttr;
path;
len(l)?l[0]:[];
np.all(a==b);
var low=np.array([-10,-10]);
export var s0=s[0];
var packetcount=0;
math.sqrt(numpy.sum(Math.pow(circle1.pos-self.pos,2)));
magdir;
df;
print(strs);
var __left0__=orig_std;sys.stdout=__left0__[0];sys.stderr=__left0__[1];
self.value=value;
export var sprocket=PySprocket(widget);
print(text);
print(len(rgbData));
export var password_mgr=urllib.request.HTTPPasswordMgrWithDefaultRealm();
c.index(a[index]);
export var cords_set=set();
create_app().app_context().push();
ses.listen_on(6881,6891);
d_sum[topkey][key]=dic2[topkey][key];
PyObject*weakreflist;
var action=pipe.readline().__getslice__(0,-1,1);
response;
deletecities[key];
var rgb_values=[];
export var adjlist=function(){var __accu0__=[];for(var node=0;node<graph.vcount();node++)__accu0__.append(set(graph.neighbors(node)));return __accu0__}();
i-=1;
var root=Tk();
e.args[0].reason;
df;
var W=nmf_model.fit_transform(A);
self.connection.add_on_close_callback(self.on_closed);
inf.close();
self._value=value;
db.reset_queries();
makedirs(mypath);
Product.objects.py_get(__kwargtrans__({part_no:self.product.part_no}));
fib_lru(n-1)+fib_lru(n-2);
urls.append(self.view.substr(selection));
var s=str(n);
f(args);
export var list_container=function(){var __accu0__=[];for(var line of lists)__accu0__.append(ast.literal_eval(line.strip()));return __accu0__}();
var col=ax1.scatter(x,y,100*s,c,__kwargtrans__({picker:true}));
winreg.SetValueEx(INTERNET_SETTINGS,py_name,0,reg_type,value);
export var filters=[];
cv2.line(vis,tuple([x1-r,y1-r]),tuple([x1+r,y1+r]),col,thickness);
export var sorted_index=numpy.argsort(xs);
export var mat_f=np.column_stack(tuple([mat_xc,mat_yc]));
config.write(cf);
print(n);
self.temperature=1;
threading.Timer(next_call-time.time(),foo).start();
var event=Event();
parser.set_defaults(__kwargtrans__({method:a}));
print(res);
self._obj=obj;
var handler=urllib.request.HTTPBasicAuthHandler(manager);
self.move(self.old_pos);
var L=L.__getslice__(0,start,1)+L.__getslice__(end,null,1);
var x=sin(phi)+2*sin(2*phi);
print(np.sqrt(Math.pow(xa,2)+Math.pow(ya,2)));
f(__kwargtrans__(example));
var instance=self.get_object();
var tables=iengine.get_table_names();
export var rev=function(){var __accu0__=[];for(var [idx,item]of enumerate(py_reversed(d),1))if(item)__accu0__.append(len(d)-idx);return py_iter(__accu0__)}();
var tot=gllhs;
lst.py_clear();
convolution.real;
var extent=[yedges[0],yedges[-1],xedges[-1],xedges[0]];
py_next(b);
var contents=text_file.read().rstrip();
var ax1=plt.subplot2grid(tuple([m,n]),tuple([row_1,col_1]),__kwargtrans__({colspan:width}));
var end=time.time();
treeview.append_column(treeviewcolumn);
export var squared_list_iter=function(){var __accu0__=[];for(var value of my_array)__accu0__.append(Math.pow(value,2));return __accu0__}();
self.mps_in_process.append(id);
export var zip_code=models.ForeignKey(ZipCode);
var output=random.choice([sys.stdout,sys.stderr]);
d[key]=x;
page.close();
py_typeof(seq)([val]);
dict.__delitem__(self,k);
el.py_clear();
self._n_weights+=neuron.n_inputs+1;
self.factory.doStart();
var t=timespec();
export var nameserver=py_default.nameservers[0];
test1();

mutation.append(choice([0,1]));
export var sample_ix=np.random.randint(__kwargtrans__({low:0,high:500,size:100}));
rect(ax,x,y2,dx,y1-y2,color,__kwargtrans__(kwargs));
var arr=np.array([[255,255,255,255],[255,0,0,255],[255,255,255,255]]);
print(py_split[1]);
wxImage.SetData(frame.tostring());
foo.num+=1;
var y=ytrue+np.random.normal(__kwargtrans__({size:len(x)}));
text;
inf.seek(offset);
factor*f(...args,__kwargtrans__(kwargs));
true;
export var urls_d=Counter(list_of_urls);
[x[1],u(t)];
var end=start+timedelta(__kwargtrans__({days:6}));
QModelIndex();
export var last_stop=i>0?split_points[i-1][1]+1:0;
export var whiteness=w/(y+w);
out[k].append(item);
var s=stringio.read(1);
tuple([A,Y]);
var B=np.random.rand(N,N,N);
print(series_data);
_repr(o);
print(newString);
var yf=scipy.fftpack.fft(y);
Py_Initialize();
var length=len(text)-1;
print(texter.create_text());
var subset=function(){var __accu0__=[];for(var [ind,x]of enumerate(lists))if(ind!=1)__accu0__.append(x);return __accu0__}();
var b=-2*(zfront*zback)/(zfront-zback);
export var reporter=ExceptionReporter(request,...exc_info,__kwargtrans__({is_email:true}));
export var py_next=self.queue.dequeue();
deleteself.thisptr;
var L=list(range(10));
var hist=serie.hist();
export var word2_synonyms=wordnet.synsets(word2);
export var subset1=data[data.__getitem__([tuple([0,null,1]),0])==100002];
print(lst);
var I=speye(A.shape[0],A.shape[1],__kwargtrans__({dtype:A.dtype,format:A.format}));
var data=input();
ax2.set_ylim(scale*(miny+dy),scale*(maxy+dy));
export var rowsum=A.sum(__kwargtrans__({axis:1}));
write(n,pos+1,op+1,cl);
main.py;
self.sock.setsockopt(socket.IPPROTO_TCP,socket.TCP_NODELAY,1);
var messages=function(){var __accu0__=[];for(var mssg of messages)__accu0__.append(parser.Parser().parsestr(mssg));return __accu0__}();
var klass=getattr(module,c);
self.value=value;
A*Math.pow(x,alpha)*np.exp(B*x);
var newlist=[];
var root=Tk();
print(py_typeof(tf));
print(a);
var x=np.linspace(0,1,10);
self.causes=function(){var __accu0__=[];for(var n of self.fnames)__accu0__.append([n,[]]);return dict(__accu0__)}();
iv.append(tuple([left,right]));
queue.append(tuple([node,end,path]));
grouped.JobNos.sum();
py_typeof(converted.iloc[1]);
hi.bye=5;
tuple([b,c]);
export var Dup=dict({});
export var hosp_info=dict({});
var images=[];
len(self._data);
var b=[8,1,5,4];
var d=defaultdict(list);
df;
print(legend.get_window_extent().height);
var s=bitstring.pack(fmt,__kwargtrans__(d));
var count=Counter(word);
cv2.line(vis,tuple([x1-r,y1+r]),tuple([x1+r,y1-r]),col,thickness);
var __left0__=sys.exc_info();var t=__left0__[0];var v=__left0__[1];var tb=__left0__[2];
i+=1;
var ax=plt.gca();
var shifts=[1]*(len(pattern)+1);
len(buffer.getvalue());
var record=self.queue.py_get();
var value=request.POST[key];
print(mystring);
var result=[];
var __left0__=polygon[i];x[i]=__left0__[0];y[i]=__left0__[1];
export var pdraw=ImageDraw.Draw(poly);
export var vstart=vspell[1];
var inp=sys.stdin.read(1);
self.long_thread.thread_finished.connect(self.reply2_finished);
var xnew=np.linspace(x.min(),x.max(),__kwargtrans__({num:npts,endpoint:false}));
self.py_name=py_name;
var __left0__=table.wrap(width,height);var w=__left0__[0];var h=__left0__[1];
np.frombuffer(mp_arr.get_obj());
var p=Pool(5);
export var pg_n_genotypes=models.TextField();
var browser=QtWebKit.QWebView();
print(os.__file__);

mapping[u];
cv2.line(view,pt1,pt2,color);
var F=Math.pow(R[1],2)*R[2]*R.x-R[0]*R[1]*R.y+Math.pow(R[2],2)*R.z;
export var pmb=p-b;
var idx=a.__getitem__([R,C]).argsort().__getslice__(0,4,1);
x+10;
print(resp.status);
var y=np.sin(x);
win.refresh();
axmatrix.set_xticks([]);
print(a.x,a.y);
export var tkpi=ImageTk.PhotoImage(image1);
print(tuple([inst.x,inst.y,inst.z,x]));
X.append(x);
eval(str(a));
var text=StringField(__kwargtrans__({required:true}));
var app=Flask(__name__);
var api=Api(app);
var batch=tf.Variable(0);
grp.count();
var transform=function __lambda__(x){return x.id};
pyximport.install();
print(df);
export var fv=numpy.vectorize(F);
var result=function(){var __accu0__=[];for(var x of list)if(list)__accu0__.append(do_something(x));return __accu0__}();
var image=plt.imread(image);
less.append(x);
var __left0__=divmod(len(lst),n);var parts=__left0__[0];var rest=__left0__[1];
t.append(main_list[i]);
final.show();
var minm=np.insert(minm,0,i);
arr[arr<0]=0;
var draw=ImageDraw.Draw(img);
var ax=fig.add_subplot(1,2,1);
print(sorted(Counter(d).elements()));
my_func(1,2);
df.iloc.__setitem__([tuple([5,8,1]),2],np.nan);
a.__getitem__([tuple([0,null,1]),0])*c0+a.__getitem__([tuple([0,null,1]),1])*c1+a.__getitem__([tuple([0,null,1]),2])*c2;
export var vec_lda=lda[vec_bow];
export var bottom_right=true_points.max(__kwargtrans__({axis:0}));
df_test.groupby(group_hours).apply(insert_missing_hours).reset_index(__kwargtrans__({drop:1}));
[[]];
print(lines);
model.fit(Xtrain,Ytrain);
[]==false;
var numbers=function(){var __accu0__=[];for(var n of line.py_split())__accu0__.append(int(n));return __accu0__}();
var image_data=cPickle.loads(str(s));
zlib.decompress(base64.b64decode(_));
print(eq2.eq_run);
var opener=urllib.request.build_opener(proxy_support);
var id=Column(Integer(),__kwargtrans__({primary_key:true}));
export var q_in=multiprocessing.Queue(1);
export var markers=[];
deletedirs.__getslice__(0,null,1);
var d=fd.read();
xl.Visible=1;
var bins=NP.array([0,20,50,75]);
var colnames=function(){var __accu0__=[];for(var i of cursor.description)__accu0__.append(i[0]);return __accu0__}();
df;
export var rmtags=soup.findAll(tag);
print(i,first_month(i));
var state=models.CharField(__kwargtrans__({max_length:50,blank:true}));
self.frame.Iconize(false);
cls._metadata_value=get_class_metadata(cls);
f2(X);
export var area_hist=((bin_edges.__getslice__(1,null,1)-bin_edges.__getslice__(0,-1,1))*counts).sum();
sum+=float(e);
requests.old_post(url,data,json,kwargs);
var l=math.floor(math.log10(abs(x)));
indices[j]=indices[j-1]+1;
var out=np.zeros(mask.shape,__kwargtrans__({dtype:int}));
smtp_conn.set_debuglevel(true);
var pid=os.fork();
print(option_expiration(datetime.today()));
var ax=fig.add_subplot(111);
app.queue.put(request);
pylab.ion();
app.debug=true;
false;
export var gouda=Cheese();
export var regr=linear_model.LinearRegression();
export var input_header=py_next(reader);
self.canvas=Canvas(frame,__kwargtrans__({width:900,height:900}));
false;
var result=json.parse(data);
df.py_update(df_large);
b[0];
var player=operator.itemgetter(0);
win.show();
res(environ,start_response);
list(izip_short(b,a));
removed_indices.py_sort();
pyversion;
get_keys(v,target);
var d=datetime.datetime(2010,12,25,18,25);
dingo;
var df=dict({});
count(dict_test);
line[1]=line[1].__getslice__(0,6,1);
int(s);
var user=models.OneToOneField(User,__kwargtrans__({on_delete:models.CASCADE}));

divide(arr[i],depth+1,m);
asyncore.loop(__kwargtrans__({count:1}));
py_typeof(-maxint-1);
id(lst);
self.sck.connect(url);
some_other();
set(main_array)&set(second_array);
var x=x^y;
export var em_width=view.em_width();
var objects=MyModel.all().fetch(1E3);
export var binary_data=w.readframes(w.getnframes());
export var txtcurl=StringIO.StringIO();
var c=a+b;
index.append(bisect.bisect(b,item));
export var siz=(p2-1)/2;
var __left0__=tuple([1,1]);var a=__left0__[0];var b=__left0__[1];
print(perm_list);
var n=c_int(n);
var plot1=plt.subplot(111);
option.append(tuple([dept,number]));
self.dictionary=dict({});
net.addModule(bias);
150.17;
print(fib(1,0,10));

export var errfunc=function __lambda__(p,x,y){return y-fitfunc(p,x)};
print(df.describe());
view_func(request,...view_args,__kwargtrans__(view_kwargs));
var args=tuple([]);

var user=UniversityDetails.objects.py_get(__kwargtrans__({email:email}));
var ar=np.array([0,0,0]);
encoded_chars.append(encoded_c);
item.setFont(font);
var sum=0;
ax.axis(__kwargtrans__({ymin:-1,ymax:2}));
tripled+squared;
export var kernel_r=np.array([[0]+[1]*ksize],__kwargtrans__({dtype:np.int16}));
self.master.destroy();
sim2.run(configFactory.ConfigForSim2());
var X=df.py_values.__getitem__([tuple([0,null,1]),[0]]);
var client=paramiko.SSHClient();
admin.site.unregister(User);

export var sent_at=models.DateTimeField(__kwargtrans__({auto_now_add:true}));
numpy.__version__;
ws.isspace();
var a=np.arange(2,22).reshape(4,5);
print(word,item);
rows.__setitem__([tuple([10,40,1]),tuple([10,40,1])],[0,255,255,255]);
var __left0__=np.meshgrid(A.__getitem__([tuple([1,null,1]),0]),B.__getitem__([tuple([1,null,1]),0]));export var x12=__left0__[0];export var x22=__left0__[1];

var y=[];
diffs.append(nextone-current);
self.author_name==other.author_name&&self.title==other.title;
export var listing=os.listdir(path);
var dictionary=function(){var __accu0__=[];for(var [k,v]of list(obj.py_items()))__accu0__.append([k,as_row(v)]);return dict(__accu0__)}();
text;
var qs=User.objects.filter(__kwargtrans__({email:email}));
var counts=g.transform(function __lambda__(x){return len(x.unique())});
print(rng.random_long());
self.positions.insert(0,self.latest);
self.master.columnconfigure(c,__kwargtrans__({weight:1}));
cb.locator=tick_locator;
export var float_image=tf.image.per_image_withening(reshaped_image);
var r=np.roll(a,-i,__kwargtrans__({axis:1}));
var sort_idx=np.argsort(reference);
print(tn.read_eager());
export var outer_data=StringField();
self.f;

var before=prev_i!=-1?this_array[prev_i]:this_array[next_i];
prettify(main_dict);
trans.kill();
value.__getslice__(0,Math.floor((elen-tlen)/2),1)+elidetxt+value.__getslice__(Math.floor(-(elen-tlen)/2),null,1);
export var kernel_base=np.ones(__kwargtrans__({shape:5}));
rootLogger.addHandler(consoleHandler);
var file_path=os.path.join(path,filename);
int(hex(200-(1<<16)).__getslice__(-2,null,1),16);
teardown_func(...args,__kwargtrans__(kwargs));
df_ret;
var query=gdata.spreadsheet.service.CellQuery();
export var date_today=datetime.datetime.today();
var l=list(l);
print(u,v);
hash(self.data);
signal.signal(signal.SIGINT,signal.SIG_DFL);
self.file;
var workers=function(){var __accu0__=[];for(var _=0;_<MAX;_++)__accu0__.append(worker(queue));return __accu0__}();
(datetime.datetime.min+obj).time().isoformat();
getattr(conf,self.py_name);
print(np.transpose(np.matrix(data)).shape);
server.stop();
var __left0__=py_typeof(self)();var value=__left0__;self[key]=__left0__;
var tree=ET.parse(StringIO(DATA));
var a=np.array([-1,-1,1,1,1,1,1,-1,-1,-1,1,1,-1,-1,-1,-1]);
M[i]+=N[j];
Exception.__init__(self);
print(data);
var __left0__=line.py_split();var key=__left0__[0];var value=__left0__[1];
var __left0__=unpack_three(...user_record);var py_name=__left0__[0];var email=__left0__[1];var phone_numbers=__left0__[2];
processed_data;
var cs=pd.concat([cs,same_grp],__kwargtrans__({axis:1}));
var df=df.reset_index(__kwargtrans__({drop:true}));
boundaries[counts==9]=0;
print(args);
export var to_zone=tz.tzlocal();
var __left0__=plt.subplots(2,1,__kwargtrans__({figsize:[8,10]}));var f=__left0__[0];var a=__left0__[1];
parser.setContentHandler(handler);
result;
first_match(nouns,tables);
var elements=[];
var result=MagicMock.__call__(self,...args,__kwargtrans__(kwargs));
print(simplejson.dumps(songs_as_dict));
f.seek(0,os.SEEK_SET);
partition_binary(partition(X,rank),my_relation);
var req=urllib.request.Request(url,post,headers);

var match=matcher.find_longest_match(0,len(matcher.a),0,len(matcher.b));
client_socket.send(fname);
cmp(a.foo,b.foo)||cmp(b.bar,a.bar);
x();
f(i,20);
fizzbuzz1(20);
export var current_level=current_level[part];
(function(){var __accu0__=[];for(var line of lines)__accu0__.append(line_processor(line));return __accu0__})();
dis.dis(b[2]);
p[0].set_data(xn,yn);
var obj=self.wref();
self._data=data;
var d2=function(){var __accu0__=[];for(var key of d1)for(var value of d1[key])__accu0__.append([value,key]);return dict(__accu0__)}();
export var disk_basedir=os.path.dirname(os.path.dirname(pytz.__file__));
keyname;
funcs.append(function __lambda__(){return x});
aa.indices.__getslice__(aa.indptr[1],aa.indptr[2],1);
self.rules[0].link_extractor.allow_domains.remove(hostname);
export var avg_cor=rollingcor.dropna().to_frame().apply(tril_sum)/((Math.pow(n,2)-n)/2);
m[i][j]=m1[i][j]*m2[i][j];
var user=User.objects.py_get(__kwargtrans__({username__exact:self.username}));
export var rfc2109=false;
var py_name=models.CharField(__kwargtrans__({max_length:50}));
5>x&&x>1;
print(get_res(Fruits));
typed_text[-1].append(keyname(event.key));
images[idx];

np.percentile(S,100);
print(json.dumps(r.json(),__kwargtrans__({indent:1})));
var offset=[1,0,0];
true;
Variance(X+z);
var __left0__=tuple([set(),[]]);var seen=__left0__[0];var result=__left0__[1];
var records=Entrez.read(handle);
cv2.watershed(cv2.cvtColor(img,cv2.COLOR_GRAY2BGR),lbl);
var log=logging.getLogger();
pytz.utc.normalize(pdtnow2);
var app=Flask(__name__);
jsonpickle.decode(jsonpickle.encode(Goal()));
response;
print(element);
self.layout.addWidget(self.button);
export var okay=[0,1,1,0];
var wid=termf.winfo_id();
[root.val]+argmax(print_path(root.right),print_path(root.left));
export var myObj=dict({});
seq.append(py_name);
var numloss=0;
t.start();
PyObject*pyname;
var value=request.GET.py_get(key);
print(astr.translate(deleter).py_split());
b.T;
pyautogui.moveTo(100,150);
cbar.locator=MaxNLocator(__kwargtrans__({nbins:6}));
var d1=dt.now();
df;
row[0];
sorted_strings(L);
print(msg.Attachments.Item(item+1).Filename);
cpplib.call_callback(callback);
deletesys.path[0];
pC[1]=100;
seindex+=1;
var ax2=fig.add_subplot(gs.__getitem__([0,1]),__kwargtrans__({sharex:ax1,sharey:ax1}));
out[i]=function(){var __accu0__=[];for(var j=0;j<len(columns);j++)__accu0__.append(row[j]);return __accu0__}();

print(word);
sys.settrace(self);
var py_items=list(od.py_items());
count+=f(v,i+1,S-v[i]);
var f=function __lambda__(){var args=tuple([].slice.apply(arguments).slice(0));return self.fn(cls,...args,__kwargtrans__(kwds))};
var d2=D.mean(__kwargtrans__({axis:0}));
tmp+=nhat.__getitem__([i,k])*m.__getitem__([j,k]);
export var ret_val=np.zeros(tuple([arr.shape[0],maxlen]));
var cur=conn.cursor();
var u=random.uniform(x[0],x[-1]);
export var slab=parts[1];
tuple(function(){var __accu0__=[];for(var m of calendar.month_abbr.__getslice__(1,null,1))__accu0__.append(tuple([m,m]));return py_iter(__accu0__)}());
var file=BytesIO(data.read());
now();
var html=urlopen(url).read();
d[key]=tuple([x,newy,z]);
export var derivative=np.dot(2,np.dot(feature,errors));
var fig=plt.figure(j);
handler.setLevel(loglevel);
setupcon.setup_console();
var queryset=queryset.order_by(Lower(ordering.__getslice__(1,null,1))).reverse();
var line=p.stdout.readline();
seq_pow2(16);
f.a();
new_dict[key]=value[key];
0;
var rad=(atom_shape[0]-1)/2;
var lock=multiprocessing.Manager().Lock();
var user2=tokens[2];
self.arg1=arg1;
export var adjusted_dom=dom+first_day.weekday();
py_items[0];
var start_date=start_date.py_replace(__kwargtrans__({hour:0,minute:0,second:0,microsecond:0}));
export var NTP_DELTA=2208988800;
the_next_line_of_code();
var new_dict=dict({});
export var big_nda=numpy.arange(1E4).reshape(100,100)>5E3;
print(tag);
hash_string;
var m=matrix[0].copy();
var id=np.where(fdata[1]==fdata[1].max())[0][0];
var app=wx.App(true);
var offsets=np.cumsum(histogram.__getslice__(0,-1,1));
var output=function(){var __accu0__=[];for(var i of text.py_split())__accu0__.append(__in__(i,dct)?dct[i]:i);return __accu0__}();
self.text;
var comp=compiler.SQLCompiler(dialect,statement);
self.roots=function(){var __accu0__=[];for(var f of filenames)__accu0__.append(et.parse(f).getroot());return __accu0__}();
var the_page=response.read();
matches[0];
var end=datetime.now();
var results=dict.fromkeys(inputs);
export var ini_path=os.path.join(base_dir,some_subdir,some_file);
anyFunc(...args,__kwargtrans__(kwargs));
true;
r.insert(0,i);
var random_list=random.sample(list(genes_dict.py_items()),int(length));
self.assertEqual(widget_in.size,expected_tuple);
install(darwin);
false;
tuple([datetime.date(2008,11,27),datetime.date(2008,12,25),datetime.date]);
var result=[];
var RNA_integers=[];
keyword.kwlist;
Z.append([i,j,float(len(subtree[n])),len(z)]);
var list1=function(){var __accu0__=[];for(var i=0;i<len(list1);i++)__accu0__.append(list1[i]*list2[i]);return __accu0__}();
out.append(tuple([key,elems,word]));
var opener=urllib.request.build_opener(proxy_support,urllib.request.HTTPHandler(__kwargtrans__({debuglevel:1})));
var __left0__=rv2.dist._parse_args(...rv2.args,__kwargtrans__(rv2.kwds));export var shape2=__left0__[0];export var loc2=__left0__[1];export var scale2=__left0__[2];
var ax=plt.subplot(10,10,i);
self.serversocket.listen(5);
var x_coords=x.__getitem__([,np.newaxis])*size+base;
freq2char[freq].add(char);
var text=item.text;
var result=cur.fetchone();
var word_set=set(list_of_words);
Bar(income_df).show();
float.__add__(1.22,b);
p.wait();
print(model.summary());
inst.__init__(...coltypes);
axs.__getitem__([0,0]).imshow(im);
plt.plot(x-1,y);
crc1==crc2;
json.loads(...args,__kwargtrans__(kwargs));
neighbors.append(tuple([rr,cc]));
ctx.eval(js);
var root=Tree();
export var thickness=.5*np.abs(np.sin(x)*np.cos(x));
var inds=np.where(np.isnan(a));
var xi=np.linspace(min(x),max(x));
df;
false;
pp.imshow(detected_peaks);
export var heroes=set();
process(function(){var __accu0__=[];for(var line of tmp_lines)__accu0__.append(line);return __accu0__}());
foo(2);
print(Add.make_args(expr));
list_of_tuples.append(tuple([x,y]));
matrices.__setitem__([tuple([0,null,1]),1,1],c);
var end=numpy.array([2,10,9],numpy.int16);


dic1.py_keys()==dic2.py_keys();
event.canvas.draw();
export var PDF=PDFFileReader(source);
scipy.io.numpyio.fwrite(fd,data.size,data);
var position=position.__getslice__(0,-1,1);
var data=self.cleaned_data;
print(result.message);
var f=Foo(__kwargtrans__({m:5}));
tuple([])();
export var os_encoding=locale.getpreferredencoding();
var a=int(yourstring);
var rest=df.__getslice__(10,null,1);
asyncio.set_event_loop(self.loop);
self.prediction;
plt.plot(x_axis,y_axis);
(function(){var __accu0__=[];for(var x of a)__accu0__.append([x]);return __accu0__})();
export var tf_bias=tf.Variable(tf.zeros([B]));
export var Fc=40;
var p=itertools.combinations(data,i);
var df=pandas.DataFrame(formula);
self.ses=requests.session();
export var input_dim=X_train.shape[2];
x*x;
var df=pd.DataFrame(1,__kwargtrans__({index:[0],columns:mi}));
self.h;
var opener=urllib.request.build_opener(proxy_support);
var info=dict([[path,filename],[py_name,path.basename(filename)]]);
a.real*=factarr;
var html=_.read();
var b=a;
(function(){var __accu0__=[];for(var [sx,sy]of zip(dx,dy))__accu0__.append(tuple([x+sx,y+sy]));return __accu0__})();
var cur=conn.cur();
var a=np.array(x);
var dims=X.max(__kwargtrans__({axis:0}))+1;
var parser=argparse.ArgumentParser();
tuple([[-.66666667,-1,-1]]);
math.sqrt(sum(diff*diff));
self.wfile.write(self.t1.show());
var norm=A.shape[1]-1;
var groups=match.groups();
[0]*0;
plt.hist(mix,__kwargtrans__({bins:20}));
var credentials=storage.py_get();
plotgauss2(histdist[1]);
pprint.pprint(data1);
p.daemon=true;
print(list(bookmark_collection.py_keys()));
var root_path=os.path.abspath(os.path.py_split("./P2JSnippets.py")[0]);
a.__setslice__(0,k,null,np.random.randn(k));
py_next(self);
cnt[c]+=1;
c.some.method(__kwargtrans__({x:1,y:2}));
py_new.shape;
export var task_1=a_long_process.delay(x,y);
var __left0__=np.triu_indices_from(B.T);var r=__left0__[0];var c=__left0__[1];
saver.save(sess,checkpoint.model_checkpoint_path);
var beta=np.array([0,1],__kwargtrans__({dtype:np.float64}));
Image(__kwargtrans__({filename:fn}));
curses.echo();
axis.set_major_formatter(formatter);
var numbers=[];
var recall=np.linspace(0,1,__kwargtrans__({num:42}));
the_method_in_modeladmin.allow_tags=true;
cls.getMe();
export var tc=tender_data.py_values.__getitem__([tuple([0,null,1]),tuple([1,5,1])]);
var tree=random(n);
vals[i]+=abs(np.dot(u,v));
var data=urllib.request.urlopen(target_url);
hashlib.md5(stdout).hexdigest();
self.cleaned_data;
var __left0__=l;var a=__left0__[0];var b=__left0__[1];var c=__left0__[2];var d=__left0__[3];var e=__left0__[4];
export var new_nums=[];
export var block_end_byte=f.tell();
export var fromstring_element=etree.fromstring(xml_str);
plt.scatter(t.date.dt.to_pydatetime(),t.sample_data);
var FORMAT=pyaudio.paInt16;
tuple([iterator_mergesort(function(){var __accu0__=[];for(var _=0;_<size/2;_++)__accu0__.append(py_next(iterator));return py_iter(__accu0__)}(),size/2)]);
input_thread.start();
s.union([o]);
var d=d[p];
var args=parser().parse_args();
self.add(row,col,val);
loop.create_task(receive_log());
export var cet_eur=pacific.astimezone(cet);
true;
resp;
var g=function __lambda__(x){return 2*x};
var li=function(){var __accu0__=[];for(var i=0;i<len(s)-n+1;i++)__accu0__.append(s.__getslice__(i,i+n,1));return __accu0__}();
export var social_data=UserSocialAuth.get_social_auth_for_user(request.user);
var im=Image.open(infile);
export var x2sort=np.py_sort(x2).__getslice__(0,null,-1);
var __left0__=np.argwhere(Ax==Bxmin&Ay==Bymin)[0];var ix=__left0__[0];export var iy=__left0__[1];
var dt=date(2008,11,10);
var result=function(){var __accu0__=[];for(var x of result)if(!__in__(x,string.whitespace))__accu0__.append(x);return __accu0__}();
var dirname=os.path.normpath(dirname);
var __except0__=KeyError(key);__except0__.__cause__=null;throw __except0__;
print(s1.value_counts(__kwargtrans__({py_sort:false})));
net.layers;
export var Tops1=[1156,1250,1156,1187,1187,1187,1156,1156];
res;
cr.fill();
var application=linkedin.LinkedInApplication(authentication);
var p1=interpolate.PiecewisePolynomial(x1,y1.__getitem__([tuple([0,null,1]),np.newaxis]));
bool(0);
print(sample1.count(true));
mapper(Player,players_table);
i+=1;
a.flags.owndata;
var frame=Frame(root,__kwargtrans__({bd:2,relief:SUNKEN}));
prevnode.left==node.left;
print(e.pgerror);
print(plusOne(y.__getslice__(0,null,1)),y);
parts.reverse();
print(p);
export var norm_factor=np.linalg.det(norm_factor);
tb.deactivate();
var f=plt.figure();
endif;
imp.fit(train);
index+=1;
var list2=[1,0,0,0,0,0];
fuzzeBinSearch(L.__getslice__(0,mid,1),x);
self.x=x;
var events=[];
self.cache[key];
var result=self.queue.py_get();
var l=[];
pool.release(connection);
true;
cache.__setslice__(0,null,null,[v]);
var c=np.bitwise_xor(a,b);
var seen=set(y);
export var power=int(math.log(num,base)+.5);

var a=result;
x.__getitem__([]);
count+=1;
print(b);
var __left0__=tuple([min(x,lo),max(x,hi)]);export var lo=__left0__[0];export var hi=__left0__[1];
s.commit();
export var cots=aliased(TextString);
export var cits=aliased(TextString);
self.__dict__=db_to_frames_dict(engine);
var b=splinter.Browser();
self.ax.set_ylim(min(newy),max(newy));
var t=buf.read(1048576);
var coord=list(product(list(range(8)),list(range(8))));
var lst=list(t);
export var VENUS=Body(__kwargtrans__({mass:4.869E24,radius:6051800}));
var my_data=NP.random.random_integers(0,9,16).reshape(4,4);
var contents=f.read();
i+=1;
export var second_list=[];
var estimated_mu=np.log(scale);
unigrams[token]+=1;
var n=len(list);
request.GET.py_update(options);
export var redistributed_points=[];
var y=np.trunc(x);
var data=urllib.request.urlopen(url).read();
var w=excel.Workbooks.Open(f);
2<arr&arr<6;
var im1=cam1.getImage();
export var codeproc=subprocess.Popen(code,__kwargtrans__({stdout:subprocess.PIPE}));
var x=[1]+[1];
var foo=Foo();
sendcounter+=1;
ctxt.xpathFreeContext();
tf.getnames();
app.debug=true;
var ax=plt.subplot(1,1,1);
main();
data+=self.request.recv();
self.Fit();
f.truncate();
var cmd=nil;
raise_exception();
var py_name=models.CharField(__kwargtrans__({max_length:255}));
print(tuple([k,len(v)]));
data.shape;
var x=HtmlXPathSelector(response);
tuple([]);
self.treestore=gtk.TreeStore(str);
pprint(res);
export var files_in_dir=os.listdir(path_to_dir);
subprocess.check_output(arglist);
h.py_update(chunk);
ax.patches.py_pop(0);
var results=function(){var __accu0__=[];for(var r of results)__accu0__.append(r[1]);return __accu0__}();
stdscr.move(y,x);
i+=1;
var cursor=connection.cursor();
df1;
sys.path.append(os.path.abspath(dir_above_top_level));
export var da=dict(zip(listanum,lista));
var diff=np.sum(Math.pow(points-median,2),__kwargtrans__({axis:-1}));

var i=true;
var l=len(string);
_post_import_hooks[py_name].append(func);
tuple([row_id]);
var df=pandas.DataFrame(mydata);
var text=pystring.lower(pytext);
self.dependency=dependency;
sendSock.setsockopt(socket.SOL_SOCKET,socket.SO_REUSEPORT,true);
self._y;
self.y=y;
self.data.seek(offset);
plt.plot(x,f2(x));
ax2.bar(list(range(l)),One);
export var atom=tables.Atom.from_dtype(x.dtype);
var l2=[1,2];
var X=function(){var __accu0__=[];for(var _=0;_<Math.pow(10,7);_++)__accu0__.append(random.randint(0,10));return __accu0__}();
all(map(same_structure,a,b));
app.add_window(newWindow);
csv_file.seek(0);
d[sub[0]]=sub;
write_output([process.stdout,process.stderr],outmap);
today-DD;
export var new_bitmap=wx.EmptyBitmap(size,size);
f.seek(savepos);
var matches=function(){var __accu0__=[];for(var [key,val]of d.py_items())if(key.startswith(partial))__accu0__.append(val);return __accu0__}();
export var yrat=height/float(MAXSIZEY);
var loop=asyncio.get_event_loop();
counts[i]=len(function(){var __accu0__=[];for(var x of list(vals.py_values()))if(x==i)__accu0__.append(x);return __accu0__}());
var root=int(math.ceil(Math.pow(start,.5)));
var result=[[]];
var c=Field();
_GetShortPathNameW.restype=wintypes.DWORD;
false;
var r=random.random();
var df=pd.DataFrame(data);
var h=hmac.py_new(key,msg,hashlib.sha1).digest();
self.assertEqual(forty_two,42);
global_randstate.seed(42);
var mod=imp.new_module(py_name);
set(myprocess(pattern,text));
var axis=function(){var __accu0__=[];for(var i=0;i<ndarray.ndim;i++)__accu0__.append(i);return __accu0__}()[axis];
print(key,dict[key]);
print(column.py_name);
time.sleep(1);
self.arg1=arg1;
action(...actionargs);
var B=np.random.rand(N,D,R);
self.__name__=py_name;
r[r>0];
count+=1;
var domain=request.get_host();
var ax2=plt.subplot(122);
pl.show();
cov.erase();
[]>-1;
trans.commit();
var g=1/(1+exp(c*(b-t)));
print(par1);
self.sample.save(self.py_name,django_file,false);
cur_num+=1;
true;
print(self.server.arg2);
var res=holt_predict(Y_observed,epoch_in,fcast_days);
var hi=len(a);
self.d=dict({});
var data=Column(String);
print(intersection);
self.Inc();
tuple([first,itertools.chain([first],iterable)]);
df;
self.queue=set();
export var outertype=ctypes.ARRAY(ctypes.POINTER(ctypes.c_float),2);
export var nextmonthdate=x.py_replace(__kwargtrans__({year:x.year+1,month:1}));
false;
a.__setitem__(y,a[x][0]);
var __left0__=np.unravel_index(k,image_temp.shape);var j=__left0__[0];var i=__left0__[1];
plt.plot(series.index,series.py_values);
export var abbrev=abbrev.lower();
var x0=numpy.array([0,0]);
a[i]=i;
var x=np.linspace(0,1,100);
var mult=function __lambda__(x_y){return x_y[0]*x_y[1]};
self.request.user=Mock();
var __left0__=plt.subplots(2);var fig=__left0__[0];var axs=__left0__[1];
self.meth=meth;
var y=data.__getitem__([tuple([0,null,1]),1]);
export var lines_needed=zip(tri,tuple([tri[1],tri[2],tri[0]]));
print(x);
export var deci_x=Decimal(1);
var output=tf.gather(input,[0,2]);
Py_XDECREF(pValue);
var pathname=os.path.dirname(file);
export var style_context=window.get_style_context();
var __left0__=tuple([the_list[i],the_list[i+1]]);export var current_item=__left0__[0];export var next_item=__left0__[1];
print(b);
mat.numRows();
self.data=[];
var matches=input==indices.__getitem__([tuple([0,null,1]),np.newaxis]);
deleteArtofWarCounter[word];
var N=int(sys.argv[1]);
var i=numpy.arange(len(r)).repeat(r);
print(goodkeys);
var user=models.OneToOneField(settings.AUTH_USER_MODEL);
var username=User.objects.py_get(__kwargtrans__({email:username})).username;
var t=np.linspace(0,1,5);
var template=lookup.get_template(uri);
self.index=0;
console.log(JSON.stringify(chg));
ax[i].imshow(yourimage);
var prices=function(){var __accu0__=[];for(var match of rx.finditer(teststring))__accu0__.append(match.group(1));return __accu0__}();
self.buf.seek(current_read_fp);
var a=np.zeros(tuple([new_rows,new_cols]));
print(round(root,-int(math.log(eps,10))));
var d=Deleted();
var session=requests.Session();
self.layout.addWidget(self.btn_cancel);
known_good.add(tuple([predecessor,successor]));
var xs=[1,2,5,6];
Foo().__getslice__(42,81,7);
export var remote_ip=x_real_ip||self.request.remote_ip;
smbus_read_byte.restype=c_int;

var n=function(){var __accu0__=[];for(var i of n)__accu0__.append(bool(i));return __accu0__}();
var b=str(num);
tremove(L,M);
tries+=1;
print(raw_string_with_quotes);
var r=NP.random.randint(0,10,4);
var g=np.random.rand(m);
var soup=BeautifulSoup(source);
df.index.month;
var reordered=[];
var data=Column(String);
var idx=df_ctrl.index.intersection(df_test.index).sort_values(__kwargtrans__({ascending:false}));
tuple([subseq_id_to_intervals_dict]);
print(msg);
tmpdir;
var result=re.match(identifier,test);
self.a=A();
var metadata=MetaData();
var __left0__=np.linalg.eig(C);export var evals=__left0__[0];export var evecs=__left0__[1];
self.password=password;
var country=models.CharField(__kwargtrans__({max_length:128}));
var x=list(this_will_work());
var __left0__=tuple([cos(theta),sin(theta)]);export var cosang=__left0__[0];export var sinang=__left0__[1];
export var b_hidden=tf.Variable(tf.zeros([HIDDEN_NODES]));
a.py_pop(5);
menu.append(item_joke);
var signers=smime_object.get0_signers(X509.X509_Stack());
var grand=os.path.join(agrandie,infile);
val[0];
export var reshape=pd.concat(tmp,__kwargtrans__({axis:1}));
export var hyp=function(){var __accu0__=[];for(var h of hypfin)__accu0__.append(h.py_split());return py_iter(__accu0__)}();

func.code;
file.write(xm);
outputter.write(s,len(s));
var cropped=img.__getitem__([tuple([y1,y2,1]),tuple([x1,x2,1])]);
(function(){var __accu0__=[];for(var seq of seq_l)__accu0__.append(rep_len(seq));return __accu0__})();
var filename=filename.__getslice__(0,-1,1);
export var nsecs=dt.minute*60+dt.second+dt.microsecond*1E-6;
var PREPEND_WWW=false;
export var activity_date=db.DateProperty();
plt.boxplot(X);
base_pic.save(__kwargtrans__({file:stream_out}));
mmc.serial.baudrate=baudrate;
export var qPlg=QPolygonF();
print(data);
allocationList[numBytes]=allocationList.py_get(numBytes,0)+1;
export var newVec=CountVectorizer(__kwargtrans__({vocabulary:vec.vocabulary_}));
export var other_terms=find_terms(words.__getslice__(1,null,1),max_words_per_term);
f.write(chunk);
var cb=plt.colorbar(im,__kwargtrans__({cax:cax}));
var some_list=[true,false,true,false,false];
self._sessions=sessionmaker(__kwargtrans__({bind:self._conn}));
export var topkeys=set(sum(function(){var __accu0__=[];for(var dic of dicts)__accu0__.append(list(dic.py_keys()));return __accu0__}(),[]));
plt.figure();
var instance=MyClass();
print(a.__getitem__([tuple([0,2,1]),tuple([0,2,1])]));
var config=ConfigParser.ConfigParser();
var fig=plt.figure(__kwargtrans__({figsize:tuple([12,6])}));
a.py_get(0);
initial;
var __left0__=np.meshgrid(r,t);var r=__left0__[0];var t=__left0__[1];
net.addConnection(FullConnection(hidden1,output));
export var len_ab=len(a)+len(b);
X-a;
export var birthplace=models.ForeignKey(Birthplace);
self.a_fun=function __lambda__(){return 1};
a*Math.pow(x,2)+self.b;
var p=Point(__kwargtrans__({x:11,y:22}));
email.send();
compare(key1,key2);
export var randomRange=list(range(len(listOfItems)));
var result=self.process(path);
self.id==other.id;
a==0;
print(response_two.content);
0;
img.save(outfilename);
export var err2=r2-r4;
true;
var subset=data[col1==val1&col2==val2];
data;
file.seek(sequence_end,0);
var p=Person();
np.subtract.outer(x,x)[np.tril_indices(x.shape[0],__kwargtrans__({k:-1}))];
var cache=dict({});
s1.commit();
intersect_with_key(fs1,fs2,__kwargtrans__({key:str.lower}));

cxns.remove(node);
sock.bind(tuple([dev_id]));
data.astype(int16);
self.initUI();
var y=np.arange(100);
mx.mask=ma.nomask;
_pix_create.restype=c_void_p;
true;
var response=dict({});
self.func=func;
export var _R=np.random.uniform(-1,1,n*(n-1)/2);
Point.ORIGIN=Point();
os.system(osCommandString);
var data=np.random.normal(0,1,tuple([10,10]));
plt.spy(M);
m.py_sort();
export var fieldnames=function(){var __accu0__=[];for(var f of c.description)__accu0__.append(f[0]);return __accu0__}();
Function(function __lambda__(x){return self(x)/other(x)});
0;
Base.metadata.drop_all(engine);
var c=C();
var mask=binary_matrix.__getitem__([idx.__getitem__([tuple([0,null,1]),0]),idx.__getitem__([tuple([0,null,1]),1])])==1;
x+y;
var dt=naive_dt.py_replace(__kwargtrans__({tzinfo:FixedOffset(offset)}));
export var _chord=self.Chord;
Thread(__kwargtrans__({target:foo}));
hash(self.args);
var i=random.randint(1,5);
self.initial_value=1;
var L2=[1,2];
buttons.py_pop(2);
Done;
print(next_friday);
self.setLayout(layout);
f.close();
var result=[];
window.refresh();
barbarfoobarmoopmoop;
true;
var __left0__=im_th.shape.__getslice__(0,2,1);var h=__left0__[0];var w=__left0__[1];
response.url=req.url;
export var uniqList=list(function(){var __accu0__=[];for(var x of myList)__accu0__.append([x.tag,x]);return dict(__accu0__)}().py_values());
var __left0__=tuple([map.min(),map.max()]);export var mlo=__left0__[0];export var mhi=__left0__[1];
self.ctr+=1;
print(len(a)-index-1);
numpy.array(A)[2]=2;
print(key);
var a=math.radians(angle);
var py_name=Column(String(50));
application.pc.connect();
bool(set(fruit_dict1).intersection(fruits));
export var printable=set(string.printable);
self.wfile.write(result);
plt.show();
var value=event.widget.py_get();
value;
export var arr_x=arr.__getitem__([tuple([0,null,1]),tuple([0,null,1]),np.newaxis,np.newaxis,tuple([0,null,1])]);
var browser=webdriver.Firefox(__kwargtrans__({firefox_binary:binary,proxy:proxy}));
export var my_diff=np.diff(my_array)>1;
self._n=0;
self.buf.write(...args,__kwargtrans__(kwargs));
nextlevel.append(n.left);
0*F-10*C;
outdatav[i]=indatav[i]*2;
browser.close();
push(tuple([Math.pow(2,2),2,2]));
export var task_data=input_q.py_get();
fixed_comments.append(fixed_text);
cursor.execute(sql);
line.set_color(colorArray[i]);
sys.argv=sys._argv;
var mask=np.sign(X);
var prod=tree.productions();
self.stackVals.append(listTuple);
None.__cause__=null;throw None;
var result=_get_date(region);
print(is_new_style(int));
var model=Waypoint;
sys.getsizeof(foo1);
print(a);
var bts=l[x].__getslice__(0,1024,1);
print(list(find_with_dupe(l)));
print(py_name);
var dic=dict.fromkeys(lis,[]);
var width=horizontal[i+1][1]-h[1];
var api=twitter_api();
b.build_scripts;
output;
fmt.format(self);
saver.restore(sess,path.model_checkpoint_path);
self.foo=foo;
var lists=function(){var __accu0__=[];for(var tup of lists)__accu0__.append(function(){var __accu1__=[];for(var x of tup)__accu1__.append(x[0]);return __accu1__}());return __accu0__}();
var box=cv2.boundingRect(curve);
verify(good_cert,sig,content,digest);
export var newip=str(request.remote_addr);
export var subprocess_call=Popen([call],__kwargtrans__({shell:true,stdout:PIPE,stderr:PIPE}));
var c=numpy.random.random(tuple([1E3,1E3])).astype(numpy.float96);
print(product);
var author=models.ForeingKey(Author,__kwargtrans__({required:true}));
rng.freqstr;
ax.broken_barh([tuple([midpoint-.01,.02])],tuple([perc[5],perc[6]-perc[5]]));
object.__setattr__(self,_d,tuple([x,y]));
var x=y;
var obj=get_obj();
var y=y.flatten();
plt.grid(true);
self._foo;
print(z);
self.subdomains=domain_parts.__getslice__(0,-1,1);
_decorator;
self.file_size;
artists.append(ax.add_artist(ab));
var Session=scoped_session(sessionmaker());
t.join();
a.some.__self__;
-b.py;
export var _key=list(self.py_keys())[key];
dd2here.min();
self._ethernet=copy.deepcopy(pbuffer);
sums.append(a*b);
(function(){var __accu0__=[];for(var u of set([a,c,e]).intersection(set([b,d,f])))__accu0__.append(tuple([u.value,u.meta]));return __accu0__})();
var status=MPI.Status();
reactor.callLater(1,self.sendHello);
print(repr(L));
print(asking);
var temp=np.cumsum(np.random.random(num)-.5);
(ser>0).mean();
var s=a.shape;
rows.__getslice__(0,null,int(1/proportion));
export var my_classification=sess.run(tf.argmax(y,1),__kwargtrans__({feed_dict:dict([[x,[images[0]]]])}));
func(self,...args+parameters,__kwargtrans__(kw));
range_prod(lo,mid)*range_prod(mid+1,hi);
var t2=np.linspace(1E-10,1E-5,1E6);
C.__setitem__([tuple([0,null,2]),tuple([0,null,1])],A);
print(f.__class__);
var axes=np.arange(N);
t[0][0]=5;
sys.stdin=os.fdopen(fd);
var __left0__=tuple([py_keys[2],py_keys[1]]);py_keys[1]=__left0__[0];py_keys[2]=__left0__[1];
cppcode.init(address,port);
self._data=[];
var num=num/base;
copen.errcheck=errcheck;
p.close();
var t=ET.parse(sio(raw_text));
df;
x.__getitem__([,false]);
export var thresh=cv2.adaptiveThreshold(gray,255,1,1,11,2);
var code=marshal.load(file);
var match=true;
var filename=sys.argv[1];
self.wheel.delete();
tuple([df2]);
var passman=urllib.request.HTTPPasswordMgrWithDefaultRealm();
var dt_now=datetime.now();
recurse(a,b,rest);
d.foo;
self.canvas.SetMinSize(tuple([self.canvas.w,self.canvas.h]));
x+x;
var gray=cv.cvtColor(image,cv.COLOR_BGR2GRAY);
var start_time=time.time();
1;
export var label_set=set(function(){var __accu0__=[];for(var category of in_list)__accu0__.append(category[0]);return __accu0__}());
sys.getwindowsversion();
df;
py_next(it);
self.fingerprints.add(fp);
xes.append(x);
var labels=vectorizer.get_feature_names();
export var cess_sents=cess.tagged_sents();
export var small_range=list(range(Math.pow(10,5)));
var path=request.get_full_path();
print(firstMatch.start());
metadata.reflect(__kwargtrans__({bind:db}));
self._write(file,self._root,encoding,dict({}));
self._taskqueue=Queue.Queue();
print(list1,list2,p);
var __except0__=AppropriateError;__except0__.__cause__=null;throw __except0__;
var moo=np.zeros(tuple([size,size]),__kwargtrans__({dtype:np.float}));
cls;

export var local_port=serv.socket.getsockname()[1];
dumps(js);
var __left0__=splitext(basename(disassembled.path));var filename=__left0__[0];export var file_ext=__left0__[1];
var y=np.arange(10);
file.seek(0);
plt.show();
export var serialized_str=base64.b64encode(pickle.dumps(mydict));
r.__setslice__(4,null,2,[false]*len(r.__getslice__(4,null,2)));
st.__getslice__(ind,null,1)*int(st.__getslice__(0,ind,1));
export var icondata=base64.b64decode(icon);
export var __instance=[];
var age=StringField();
cv2.waitKey(0);
get_user_model().objects.filter(__kwargtrans__({id:user.id}));
print(df);
var phone=serializers.PrimaryKeyRelatedField(__kwargtrans__({many:true,read_only:true}));
var mask=cv2.morphologyEx(img_bw,cv2.MORPH_CLOSE,se1);
pencolor(colour);
print(df);
some_list[0]=false;
var ax1=subplot(211);
var list1=list1.__getslice__(0,max_size,1);
var cursor=dbapi_con.cursor();
d[col]=line[-1];
num2word.to_card(1555);
var x=function(){var __accu0__=[];for(var i=1;i<7;i++)__accu0__.append([i,set(range(1,7))]);return dict(__accu0__)}();
channel.shutdown_write();
make_plot();
self.myobj=origobj;
var driver=webdriver.Firefox(__kwargtrans__({capabilities:d}));
var DEBUG=false;
var r=s.post(url,__kwargtrans__({data:payload}));
crnt[k]=dict({});

export var classification=sess.run(tf.argmax(y,1),__kwargtrans__({feed_dict:dict([[x,[img]]])}));
jsonify(__kwargtrans__(course));
var id=Column(Integer,__kwargtrans__({primary_key:true}));
var a=RecursiveDict();
py_values.append(value);
dis.dis(g);
a[0]=1;
file.close();
print(line.project(p));
export var peer=serial.Serial();
dis.dis(myFunc);
accumulationList;
var it=py_iter(s);
self.py_clear();
var resp=opener.open(url);
var loop=asyncio.get_event_loop();
exit(2);
tuple([x,y,z]);
zf.close();
export var dict_x=collections.defaultdict(list);
var profile=request.user.get_profile();
export var new_data2=np.array(data);
dct[x];
work.append(nope);
var context=etree.iterparse(reader,__kwargtrans__({events:events}));
export var list_of_list=[];
export var someblock=d.popleft();
export var last_number=0;
var average=sum_of_grades/len(my_list);
self.cond.notify();
self.start=start;
var lines=fin.readlines();
export var SE_Lat=function(){var __accu0__=[];for(var [x,y]of enumerate(Lon))if(y==min(Lon))__accu0__.append(Lat[x]);return __accu0__}();
df;
allocationList[numBytes]=allocationList.py_get(numBytes,0)+1;
coords[2]+=1;
var ratio=2*(value-minimum)/(maximum-minimum);
t1.start();
var page=f.read();
export var iter_mystate=py_iter(getstate,object());
getattr(obj,proxy.value_attr);
0;
pprint.pprint(cluster_facts);
s.append(string.__getslice__(i,i+1,1));
var PREPEND_WWW=true;
self.queue=queue;
var dims=np.maximum(array_2d.max(0),row)+1;
mock_redis_set.side_effect=set;
export var sample2=[];
export var wk=dt.isocalendar()[1];
confint.append([np.nan,np.nan]);
var z=theano.tensor.zeros(tuple([idx.shape[0],n_val]));
d[tup[0]]+=tuple([tup[1]]);
export var sorted_idx=np.lexsort(Ar.T);
true;
print(cleaned_email_list);
median();
print(output);
var column=np.asarray(a.getcol(2).todense()).reshape(-1);
tree.py_pop(nodes[0]);
output_ws.write(rindex,cindex,input_cell.value,red_background);
py_next(b);
var x1=np.random.randn(100);
export var combobox=QtGui.QComboBox();
var py_name=py_name.lower();
var row=np.array([[.1,.2]]);
Serial.flush();
export var ManufacturerId=wo;
export var giter=groupby(sorted(L,__kwargtrans__({key:keyfunc})),keyfunc);
var ds=function(){var __accu0__=[];for(var [p1,p2]of it.combinations(s,__kwargtrans__({r:2})))__accu0__.append(vec_distance(p1,p2));return __accu0__}();
var list1=[1,0,1,0,0,0];
func();
self.cbar.set_clim(self.zmin,self.zmax);
df.new_group.iat[n]=df.new_group.iat[n-1]+1;
var result=eval(s);
var csvfile=StringIO.StringIO();
jsonify(dict(__kwargtrans__({data:[no1,no2]})));
var obj=getattr(module,py_name);
loads(j,__kwargtrans__({object_hook:as_python_object}));
request.url;
a[0];
var ax4=plt.axes([left,.1,width,.09],__kwargtrans__({sharex:ax2}));
var r=requests.post(url,__kwargtrans__({files:files}));
print(py_typeof(b));
var __left0__=scipy.histogram2d(xdat,ydat,__kwargtrans__({range:xyrange,bins:bins}));export var hh=__left0__[0];export var locx=__left0__[1];export var locy=__left0__[2];
export var ConvexHull=cv2.convexHull(c);
var data=np.random.randint(10,__kwargtrans__({size:tuple([5,10])}));
self.add(node1,node2);
export var inline=p.stdout.readline();
var df2=pd.DataFrame();
sns.set();
var __left0__=tuple([tmp.__getslice__(0,cut,1),tmp.__getslice__(cut,null,1)]);var newarr=__left0__[0];var revchoice=__left0__[1];
y.cumsum(__kwargtrans__({axis:0,out:y}));
self.level+=1;
lines.distance(point).min();
var pipe=Popen(path,__kwargtrans__({stdout:PIPE}));
print(row);
x<8&x>2;
var rest=list(set(a)-set(c));
old_window[0].focus(0);
var n=n-weight;
window.show();
var im=cv2.cvtColor(im2,cv2.COLOR_BGR2GRAY);
var full=str.maketrans(west,east);
title.translate(title_unicode_trans);
demo(root);
m.group(0).capitalize();
seen.add(f);
var msg=email.message_from_string(data[0][1]);
var data=zip_file.read(f);
export var point_tree=spatial.cKDTree(points);
b.append(x);
var form=BarForm;
total+=y;
var height=int(cap.py_get(cv2.CAP_PROP_FRAME_HEIGHT));
var x=np.hstack(tuple([np.ones(tuple([n,1])),np.matrix(x)]));
s.strip(string.punctuation);
s;
var new_list=[];
var indptr=np.concatenate(tuple([[0],np.cumsum(label_features)]));
processHeader(py_next(f));
pydoc.pager(text);
c+=D.min();
s.__getslice__(4,-4,1);
var y=func(x);
simplest_fraction_in_interval(x-e,x+e);
var V=np.random.rand(n,p);
print(result);
on_draw();
var args=[py_iter(iterable)]*n;
export var next10k=list(islice(f,1E4));
df[~df.eq(df.max(__kwargtrans__({axis:1})),__kwargtrans__({axis:0}))]=-1;
var program=sys.argv[1];
pylab.show();
var xs=np.random.randn(100,5);
var test_set=function(){var __accu0__=[];for(var image of test_images)__accu0__.append(flatten_image(matrix_image(image)));return __accu0__}();
print(df);
export var axcb=fig.colorbar(lc);
var colors=dict(function(){var __accu0__=[];for(var k of list(data.py_keys()))__accu0__.append(tuple([k,tuple([random(),random(),random()])]));return __accu0__}());
bind_layers(PPPoED,PPPoE_Tag,__kwargtrans__({py_metatype:1}));
var df1=df1.swaplevel(0,1,__kwargtrans__({axis:1})).sort_index(__kwargtrans__({axis:1}));

var x=a[1];
len(py_values);
kidshair[mypath];
df;
self.py_name=py_name;
var ax1=df.cumsum().plot();
var my_list=[];
var X=np.matrix([[0,1,4,0]]).T;
var b=random.random(tuple([5,10,2]));
export var cargs=function(){var __accu0__=[];for(var arg of args)__accu0__.append(deepcopy(arg));return __accu0__}();
array_of_strings.__getitem__([0,0]);
var groups=collections.defaultdict(list);
var pil_im=Image.open(img);
x+=1;
export var YSIZE=2;
var total_seconds=int(turnaround.total_seconds());
var cimg=np.zeros_like(img);
var b2=np.all(frame>PSigma2,__kwargtrans__({axis:-1}));
var out=groupCoords[(col0_mask&col1_mask).any(1)];
plt.scatter(X,Y,__kwargtrans__({s:data}));
var S=np.random.randn(N,N);
var a=np.zeroes(__kwargtrans__({shape:tuple([5,5]),dtype:float}));
var graph=dict(function(){var __accu0__=[];for(var v of list(vertices.py_keys()))__accu0__.append(tuple([v,list()]));return py_iter(__accu0__)}());
1==1;
count+=1;
var i=bisect.bisect_right(a,x);
plt.xticks(x,time);
interpreter.setOut(out);
cursor.execute(sql);
t.join();
pattern.search(s);
print(i);
logging.basicConfig(__kwargtrans__({level:logging.INFO}));
var p_values=1-scipy.special.ndtr(z_scores);
4294967295;
var points=[];
var it=re.finditer(regex,s);
time.sleep(.2);
json.dump(...args,__kwargtrans__(kwargs));
var fig=gcf();
PyErr_SetObject(PyExc_IndexError,indexerr);
export var ModelMemo=Column(Unicode(255),__kwargtrans__({nullable:true}));
pill2kill.set();
n.write(i);
var im=ax.matshow(C,__kwargtrans__({cmap:cm.gray_r,norm:LogNorm(__kwargtrans__({vmin:.01,vmax:1}))}));
export var cxml2=xml_string_io2.getvalue();
server_sock.listen(4);
zf.write(path);
self.__fn(...args,__kwargtrans__(kwargs));
var field=self.fields.py_get(field_name);
var f=pyplot.figure();
print(p.primes_dict[i]);
(function(){var __accu0__=[];for(var i=0;i<5;i++)__accu0__.append(Math.pow(i,2));return set(__accu0__)})();
var x=set(range(10));
var z=np.zeros_like(x);
a.py_pop();
var M=np.random.randint(2,__kwargtrans__({size:tuple([h*iters,n])}));
false;
axe_x.extend(time_list[np.arange(j+n,j+(time_interval-n))]);
self._float_eq(a,b);
curl.setopt(curl.WRITEFUNCTION,response_buffer.write);
export var prevnl=nextnl;
ax.set_xticklabels(xlabels);
tuple([[1,1,1,1,1,1]]);
ar[0]=np.arctan2(vect[1],vect[2]);
f;
export var y_formatter=matplotlib.ticker.ScalarFormatter(__kwargtrans__({useOffset:false}));
var c1=plt.contour(X,Y,abs(np.angle(Z)*180/np.pi),__kwargtrans__({levels:levels}));
var t=threading.Thread(__kwargtrans__({target:process,args:tuple([fname])}));
self;
print(post.user.email);
stack.append(c);
jv(n,z)+complex(0,1)*yv_imcut(n,z);
var data_stream=Popen(mycmd,__kwargtrans__({stdout:PIPE}));
export var smallerThan=function __lambda__(x,y){return function(){var __accu0__=[];for(var i of x)if(i<y)__accu0__.append(i);return __accu0__}()};
frame.append(162);
pip-sync;
cub_right.append(points[0]);
object.__new__(cls);
var df=DataFrame(__kwargtrans__({columns:list(range(10)),index:list(range(10))}));
export var best_without=best_score_for(py_items,segments.__getslice__(1,null,1),subtotal);
tuple([x-1,y-1]);
signal.signal(signal.SIGALRM,got_alarm);
print(r.reason);
slither/slither/impl.py;
var n=parser.parse_args(extra);
var x=copy.copy(y);
var request=mechanize.Request(loginURL);
var content=val.group(1).strip();
var args=parser.parse_args();
var indices=function(){var __accu0__=[];for(var i=0;i<n+1;i++)__accu0__.append(q*i+min(i,r));return __accu0__}();
self.meth=meth;
var __left0__=tuple([min(X),min(Y),max(X),max(Y)]);var x0=__left0__[0];var y0=__left0__[1];var x1=__left0__[2];var y1=__left0__[3];
export var max_chunk_size=1E6;
os.umask(2);
100;
export var candidates_indexes=function(){var __accu0__=[];for(var _ of bases)__accu0__.append(0);return __accu0__}();

mod;
self.after(100,function __lambda__(angle){if(typeof angle=="undefined"||angle!=null&&angle.hasOwnProperty("__kwargtrans__"))var angle=angle+10;return self.rotate(angle)});
app.processEvents();
export var deltaY=P2_y-P1_y;
df;
pl.figure(__kwargtrans__({figsize:tuple([10,5])}));
b1.append(lines[0]);
dis.dis(g);
self.oldtrace=sys.gettrace();
pop_conn.quit();
records[key]=0;
and_also_this();
self.input_queue=input_queue;
var data=np.ones(n_samples*n_features);
var s=a.argsort();
CyABase(PyObject*obj);
(function(){var __accu0__=[];for(var x of tup)if(x)__accu0__.append(x);return __accu0__})();
var df_Quota=df_Quota.append(FinalDataframe);
heapq._heapify_max(listForTree);
self.m=function(){var __accu0__=[];for(var row=0;row<4;row++)__accu0__.append(function(){var __accu1__=[];for(var col=0;col<4;col++)__accu1__.append(row+col/10);return __accu1__}());return __accu0__}();
out.append(tuple([key,elems,i]));
var host=MYSERVER;
len(self._result_cache);
plt.plot(X,Y);
len(self._s);
var F0=F(x0,a,b);
plt.plot(tiempo,senial);
var py_arguments=cgi.FieldStorage();
len(self.list);
var data=trends1[0];
var mask=np.all(np.abs(r)<1E-6,__kwargtrans__({axis:1}));
var data2=np.ma.zeros(tuple([num_rows,num_columns,num_datasets]));
export var column_indices=(X+indices.__getslice__(0,-1,1)).ravel();
var db=engine.connect();
var parser=etree.XMLParser(__kwargtrans__({remove_blank_text:true}));
bit.append(__mod__(x,2));
rectangle(res,box,color,5);
var ring=0;
var driver=webdriver.Chrome(__kwargtrans__({desired_capabilities:caps}));
var a=object();
var __left0__=image.T;var b=__left0__[0];var g=__left0__[1];var r=__left0__[2];var a=__left0__[3];
print(update_doc(a));
var serializer=TimelineSerializer(queryset,__kwargtrans__({many:true}));
df.py_replace(__kwargtrans__({to_replace:sorted(list(set(letter))),value:sorted(list(set(num)))}));
var page=document.get_page(i);
var input=input();
var a=os.urandom(64);
var data=self._get_bool_data();
var ax1=plt.axes([left,.5,width,.45]);
var settings=get_project_settings();
minutes+=1;
var C=np.dot(np.exp(A-max_A),np.exp(B-max_B));
self.sendata(d);
self.omega_m=omega_m;
self.id;
export var box2=[2,2];
var date=datetime.date(start.year,start.month+j,1);
mpl.xkcd();
export var inv_cov=np.linalg.inv(cov*Math.pow(scotts_factor,2));
false;
matches.append(pattern);
var app=App(root);
MyClass.x=x;
plt.savefig(plot_file_name);
self.connected=true;
var __left0__=plt.subplots(1,1);var f=__left0__[0];var ax=__left0__[1];
ctx.rotate(theta);
export var takefrom=allix.copy();
print(fp.read());
var data=np.random.random(tuple([N,4]));
var sigma=np.dot(inputs,inputs.T)/inputs.shape[1];
pd.__version__;
mail1.config();
a.__setslice__(20,null,null,function(){var __accu0__=[];for(var aa of a.__getslice__(20,null,1))__accu0__.append(0);return __accu0__}());
ws.fit_to_pages(pages_horz,pages_vert);
print(x);
list.__getitem__(self,__mod__(index,len(self)));
var foo=staticmethod(foo);
console_client.connect_to_console();
var about=About.objects.py_get(__kwargtrans__({id:1}));
p.feed(data);
var d=DictConditional(function __lambda__(x){return x!=0});
var l=[];
var b=collections.OrderedDict.fromkeys([6,20,1]);
var s=[];
parser.parse_args();
wait.until(ExpectedConditions.numberOfWindowsToBe(2));
df.Date=pd.to_datetime(df.Date);
random.choice(self.primes.__getslice__(ai,ai+bi,1));
export var startindex=0;
var c=sum(function(){var __accu0__=[];for(var [k,v]of lst)__accu0__.append(Counter(__kwargtrans__(dict([[k,v]]))));return py_iter(__accu0__)}(),Counter());
process_data(piece);
var loop=asyncio.get_event_loop();
func;
self.X.append(i);
export var relation=function __lambda__(x,y){return __mod__(x-y,4)==0};
var attachment=MIMEImage(fp.read(),__kwargtrans__({_subtype:subtype}));
var id=int(s[1]);
export var xygood=np.array(tuple([x[~a.mask],y[~a.mask]])).T;
var a=(ctypes.c_ulong*(len(ba)/8)).from_buffer(ba);
self._pixmap=QtGui.QPixmap(self.label.pixmap());
shortset.add(longstring.__getslice__(i,i+length_shortstring,1));
lst[-1];
1;
true;
export var mentions=api.mentions_timeline(__kwargtrans__({count:1}));
cb.update_ticks();
a[a[k]]=k;
list_;
self.another_field;
var dirname=os.path.dirname(py_name);
var bins=pd.cut(df.x,bin_edges,__kwargtrans__({right:false}));
var s=list(range(100));
export var x_field=forms.CharField();
var __except0__=self._exc_info[1].with_traceback(self._exc_info[2]);__except0__.__cause__=null;throw __except0__;
export var interior_id=canvas.create_window(0,0,__kwargtrans__({window:interior,anchor:NW}));
var x=np.random.normal(0,1,100).cumsum();
myTests.py;
Math.floor(p/math.factorial(k));
var query=dict(urlparse.parse_qsl(url_parts[4]));
var result=Result(5,6);
var rows=py_iter(table);
platform.processor();
export var poller=zmq.Poller();
dict({});
self.inverse=dict({});
var xmax=data.max();
var nb=np.where(y>200);
var seen=set();
export var outer=gridspec.GridSpec(2,1,__kwargtrans__({height_ratios:[1,6]}));
renderPDF.draw(d,p,1,1);
d[1][0]=d;
(function(){var __accu0__=[];for(var n of list_out)__accu0__.append(words[n]);return __accu0__})();
var __left0__=np.frexp(absx);var mantissas=__left0__[0];export var binaryExponents=__left0__[1];
(function(){var __accu0__=[];for(var py_values of zip(...py_items))__accu0__.append(sum(py_values));return __accu0__})();
traverse(bfs(g,start_node),process);
export var lengs=numpy.array([0]+function(){var __accu0__=[];for(var l of polys)__accu0__.append(len(l));return __accu0__}());
c.fetchall();
viewer.terminate();
var res=function(){var __accu0__=[];for(var f of os.listdir(path))if(!m.search(f))__accu0__.append(f);return __accu0__}();
increment();
var numbers=list(range(2,100));
print(line);
0;
work.append(nope);
var X=np.asanyarray(X);
var Y=np.zeros_like(Z);
df;
df;
var N=20;
print(to_case(input_str_lower,case_map));
print(len(list(combs(elts))));
export var Count_Col=df.shape[1];
export var nwords=len(wordslist);
p.start();
var args=docopt.docopt(__doc__);
var lis=[];
f.close();
PyEval_InitThreads();
self.cache=dict({});
tuple([a,b,c]);
export var items_list=list(Items.objects.all());
export var imputed=df[mask];
4.56006002426;
var prevnl=-1;
[easy_install];
pypreprocessor.parse();
self.arrays[j][i+shift]=v;
var session=Session();
self._paths.extend(function(){var __accu0__=[];for(var path of child.paths)__accu0__.append([child]+path);return py_iter(__accu0__)}());
var out=np.zeros(shape);
pd.Panel(d).to_frame().reset_index();
json.dump(db,fh);

var __left0__=os.path.splitext(filename);export var base_file=__left0__[0];var ext=__left0__[1];
ipdb.set_trace(__kwargtrans__({context:21}));
self.timer=threading.Timer(timeout,timer_callback);
var wb=Workbook();
bool(self.outbox);
A[n];
var max_idx=np.argmax(l);
var pid=os.fork();
self.key;
link.parent.insert(index+1,br);
var html_source=driver.page_source;
var response=urllib.request.urlopen(request,encoded_params);
o.setCallback(foo);
print(b);
print(msg);
export var SYSTEM_HZ=round(1/(res.tv_sec+res.tv_nsec/Math.pow(10,9)));
getcontext().prec=6;
var val=self._get_val_from_obj(obj);
new_a.append(sorted(group));
textwrap.indent;
var all_chars=function(){var __accu0__=[];for(var i=0;i<1114112;i++)__accu0__.append(chr(i));return py_iter(__accu0__)}();
[nosetests];
canvas.__setitem__([tuple([start_pt[1],end_pt[1]+1,1]),tuple([start_pt[0],end_pt[0]+1,1])],1);
var logger=logging.getLogger(__name__);
export var mu2=1;
cherrypy.server.socket_port=80;
export var kind1=params.py_get(cls._KIND1_PARAM);
export var melt_second_half=pd.melt(second_half);
var df1=df1.astype(bool);
(sortedLst[index]+sortedLst[index+1])/2;
var a=dict({});
export var other_weirder_list=function(){var __accu0__=[];for(var line of first_list)__accu0__.append(list(line));return __accu0__}();
export var calendar=defaultdict(list);
var y=numpy.outer(numpy.sin(u),numpy.sin(v));
false;
var conn=adodbapi.connect(connstring);
self.rules[1].link_extractor.allow_domains.remove(hostname);
var mx=ma.masked_array(a,__kwargtrans__({mask:a<-100|a>100}));
var fig=figure();
export var newmodule=__import__(key);
print(df.columns);
var d=defaultdict(int);
int.__get__;
py_split(bezier_points,len(bezier_points)/desired_multiplicity,__kwargtrans__({axis:0}));
array([22,106,100]);
var lens=function(){var __accu0__=[];for(var x of args)__accu0__.append(len(x));return __accu0__}();
tuple([deleterender_window,iren]);
print(elem.text);
export var tform=blended_transform_factory(ax.transData,ax.transAxes);
removed_KP.append(item);
gain/denominator;
link.next_sibling;
d.py_update(abc);
var distance=calculateDistance(2,4,6,8);
kernel.timer=QtCore.QTimer();
export var slice2=tuple(slice2);
- - -a/python/pyspark/daemon.py;
new set([new set([location])]);
reversel;
models.py;


var b=calc_b(a,d1);
self.a1a2_edit.setText(str(product));
export var hashes=function(){var __accu0__=[];for(var o of olist)__accu0__.append(hash(o));return __accu0__}();
var step=min(step,df.shape[1]);
var combs=5165700;
var x=np.bincount(a,__kwargtrans__({weights:b}));
print(inspect.stack()[0][0].f_code.co_name);
var photo=deferred(Column(Binary));
var sy=arr.shape[1];
self.parent=parent;
print(df);
var n=sum(divmod(n,10));
export var d_sum=dict({});
var USE_L10N=true;
export var trie=make_trie(list(dictionary.py_keys()));
invf._update(record[py_name][ftmp],val);
var endpos=0;
export var prevLine=line;
print(x);
self.traceback.append(self.col_seq[j-1]);
user_store.complete();
hello();
tuple([8,1,8,1]);
export var squareroot=math.sqrt(self.start);
tree;
self.search_box.send_keys(query);
export var perms=function(){var __accu0__=[];for(var i=4;i<len(given_word)+1;i++)__accu0__.append(permutations(given_word,i));return py_iter(__accu0__)}();
var utc_time=datetime.utcfromtimestamp(epoch_time);
(function(){var __accu0__=[];for(var row of array1.tolist())__accu0__.append(function(){var __accu1__=[];for(var _ of row)__accu1__.append(array2);return __accu1__}());return __accu0__})();
!(self==other);
plt.imshow(spectrum_matrix);
MyFancyNumber(5)+2;
transaction.savepoint(true);
flips+=1;
asyncore.loop();
Segments[2];
var first_name=models.CharField(__kwargtrans__({max_length:50}));
var __left0__=tuple([os.curdir]);export var PIPE=__left0__[0];var stdout=__left0__[1];subprocess.PIPE=__left0__[0];var stderr=__left0__[1];subprocess.PIPE=__left0__[0];var cwd=__left0__[1];
fast_real(56);

sys.stdout=MyClass();
export var classifications=[];
var mylist=cpickle.loads(string_from_file);
a[-mask];
tuple([8,8,1,8]);
os.linesep;
var ax=subplot(111);
print(tuple([tree,nodes[0]]));
do_stuff();
Py_INCREF(array_wrapper);
d[k]=d.py_get(k,0)+v;
xmlOutput+=self.dirToXML(os.path.join(directory,item));
var fh=logging.FileHandler(logf);
rank;
arr.nbytes;
export var dy_cell=max(abs(lattice_vectors[0][1]),abs(lattice_vectors[1][1]));
df;
var arg=sys.argv.py_pop(0);
var a=numpy.zeros(5);
print(tuple([unique_neighbors,neighbor_counts/neighbor_counts.sum()*100]));
var i=int(i);
zip(shapes,colors);
var the_page=response.read();
(function(){var __accu0__=[];for(var line of c)if(!line.isspace())__accu0__.append(line.rstrip());return __accu0__})();
export var it1=py_iter(lis);
var b=tf.shape(a);
var __left0__=np.where((df1>s).T);var r=__left0__[0];var c=__left0__[1];
numpy.iinfo(numpy.uint64).max;
h.close();
is_sub(B,A);
export var gg=g.groupby(0);
value;
myOutput.close();
var __left0__=np.triu_indices(arr.shape[0],1);var R=__left0__[0];var C=__left0__[1];
chosen_lists.append(stg);
a;
var fig=pl.figure(1);
f.write(mystruct);
var b=[5,6,7,8,9];
var columns=function(){var __accu0__=[];for(var c of class_mapper(model.__class__).columns)__accu0__.append(c.key);return __accu0__}();
var b=[4,5,6];
item.append(field);
var counts=np.bincount(pos);
var root=__import__(modulename);
var df=df.stack();
export var logOutput=QTextEdit(parent);
other_fd.write(read_slice);
!relative.startswith(os.pardir+os.sep);
export var time_shift=argmax(abs(c));
var group=parser.add_mutually_exclusive_group();
var app=Klein();
export var clean_array=function(){var __accu0__=[];for(var element of my_array)if(value_to_remove!=element)__accu0__.append(element);return __accu0__}();
ctx.select_font_face(face,cairo.FONT_SLANT_NORMAL,cairo.FONT_WEIGHT_NORMAL);
var d=c.CastToDerived(b);
print(result);
print(time.time()-t,end.shape);
self._x=value;
np.random.seed(1);
var x=np.arange(12,__kwargtrans__({dtype:float}));
var x=list(range(N));
print(get_ax_size(ax));
o.stop();
var a=Object();
print(globalVariable);
kernel.execute(command);
(function(){var __accu0__=[];for(var row of subtable)for(var v of[0,1])__accu0__.append(row+[v]);return py_iter(__accu0__)})();
lock.release();
py_metatype.__new__(cls,py_name,bases,dct);
export var middle_name=models.CharField(__kwargtrans__({max_length:80,blank:true,null:true}));
stdio.StandardIO(FileReader(filename));
deletedf[1];
var tag=etree.fromstring(XML,parser);
print(line);
Model.objects.count()==1;
deletechunk.__getslice__(0,null,1);
message.getHeader().getField(qfSendingTime);
simplify(abs(exp(I)).expand(__kwargtrans__({complex:true})));
null_ptr[5];
export var combinations=function(){var __accu0__=[];for(var c of itertools.combinations(axis_labels,i))__accu0__.append(c);return __accu0__}();
curl.setopt(pycurl.WRITEFUNCTION,output.write);
inspect.ismethod(Foo.baz);
title.getparent().remove(title);
var all=N.ma.zeros(tuple([maxLen])+dSets[0].shape.__getslice__(1,null,1)+tuple([len(dSets)]),__kwargtrans__({dtype:float}));
print(i);
export var monday_my_date=my_date-timedelta(__kwargtrans__({days:dow}));
self.z=z;
print(f(4));
var next_item=resultList[i+1][0];
var sock=socket.socket(socket.AF_INET,socket.SOCK_STREAM,0);
var start=a+1;
im/=len(files)*.25;
suds.client.SoapClient=TestClient;
var __left0__=q.py_get();var f=__left0__[0];var args=__left0__[1];
[buildout];
export var bp=plt.boxplot(data,__kwargtrans__({whis:[5,95],showfliers:false}));
ret==0;
var ury=np.flipud(ury);
self.buttonLogin.clicked.connect(self.handleLogin);
export var connectivity=4;
var params=urllib.parse.urlencode(parameters);
print(x);
sequence[9];
export var rendered_content=response.content;
summary_writer.add_summary(image_summary);
Child().parent_prop();
tuple([slope,intercept]);
ans;
print(a);
points.set_data(new_x,new_y);
result.fill(np.nan);
isinstance(false,int);
t[k]+=v;
json_block.append(line);
client.connect(ip,__kwargtrans__({username:un,password:pw}));
var D=csr_matrix(tuple([10,10]),__kwargtrans__({dtype:int}));
paths.insert(0,DIR_NAME);
var A=np.array(A);
functools.update_wrapper(d(fn),fn);
demo();
var __left0__=zip(...function(){var __accu0__=[];for(var [k,v]of list(counted_data.py_items()))__accu0__.append(tuple([k,v]));return __accu0__}());var val=__left0__[0];var weight=__left0__[1];
process(mv.__getslice__(i,j,1));
instance.__dict__[self.prop].__set__(instance,value);
var __left0__=parser.parse_args();var options=__left0__[0];var args=__left0__[1];
plt.pcolor(df);
html.tostring(t);
var __except0__=Http404;__except0__.__cause__=null;throw __except0__;
var i=py_iter(lst);
var ts=pd.DatetimeIndex([t]);
platform.machine();
print(df.shape);

var delta=bins[1]-bins[0];
export var maxlabel=np.max(A)+1;
var count=1;
export var trimmed=[lines[0].strip()];
a/2;
var idx=np.searchsorted(haystack,needle);
var stdscr=curses.initscr();
export var gbl=__all__;
ipaddress.ip_address(16909060).__str__();
setattr(self.instance,py_name,value);
Py_XDECREF(pModule);
list(missing);
var new_pdf=PdfFileReader(packet);
var n_to_N=spdiags([n*diag,-nrange.__getslice__(-1,0,-1)],[0,1],n-1,n-1);
var data=loader.get_single_data();
var group=parser.add_mutually_exclusive_group();
process(cache2.value);
var f=urllib.request.urlopen(url,data);
a.__getslice__(4,null,1);
export var formula=function __lambda__(b,m,p,q){return np.sum(Math.pow(b-m,2)*p)/q};
s.py_split();
decorator;
export var treeoid=bld.write();
var p=field.objects.create(__kwargtrans__(kwargs));
result[field]=value;
var label=label_names.index(label_name);
export var years_dict=dict();
var C=[0]*len(matrix);
self._convert*self._swapu;
chain.from_iterable(listOfLists);
var args=parser.parse_args();
var __except0__=wsgiserver.NoSSLError;__except0__.__cause__=null;throw __except0__;
var cal=calendar.Calendar(0);
print(sorted(tuple([minval,value,maxval]))[1]);
tmp.close();
log.write(warnings.formatwarning(message,category,filename,lineno,line));
tuple([1]);
b.__setitem__([1,0],100);
var x=function(){var __accu0__=[];for(var r=0;r<1E3;r++)__accu0__.append(random.random());return __accu0__}();
var __except0__=URLError(err);__except0__.__cause__=null;throw __except0__;
var gram_matrix=np.zeros(tuple([X1.shape[0],X2.shape[0]]));
py_iter(iterparse);
print(__mod__(pattern,tuple(function(){var __accu0__=[];for(var t of line)__accu0__.append(_u(t));return py_iter(__accu0__)}())));
export var allcols=list(range(0,len(l1)));
self.assertTrue(row[0]==counts[index_row][0]);
export var row_headers=list(df.index);
statvfs.f_frsize*statvfs.f_bavail;
export var groupdxs=function(){var __accu0__=[];for(var [i,group]of enumerate(groups))for(var j=0;j<len(group);j++)__accu0__.append(i);return __accu0__}();

export var jpgs=function(){var __accu0__=[];for(var s of files)if(jpgre.match(s))__accu0__.append(s);return __accu0__}();
var u=x*np.sin(5)+y*np.cos(5);
export var f_poly=np.poly1d(pfit);
t.start();
du.py;
var r2=Range(__kwargtrans__({start:date(2016,1,28),end:date(2016,2,28)}));
var height=100*np.random.random(numcurves);
export var consonantsremoved=noay.__getslice__(0,len(noay)-(len(firstconsonants)+1),1);
var top=1;
var parser=OptionParser();
var indices=[0,5,12,17];
tuple([[1,1,0,0,0,0]]);
var m=email.message_from_string(email_body);
export var cluster_0=np.where(clusters==0);
var list1=[2,4,6,8,10];
var b=np.sqrt(np.sum(np.square(xs),__kwargtrans__({axis:1})));
export var ftps=ftplib.FTP_TLS();
var dt_delta=py_values[1][1]-py_values[0][1];
var d=dict({});
var max_range=np.asarray(max_range,__kwargtrans__({dtype:int})).ravel();
var t=1-np.abs(np.linspace(-1,1,21));
var df=shuffle(df);
self._log_=[];
l.append(tuple([i[0].__getslice__(11,-1,1),i[1]]));
var df=df.applymap(int);
var __left0__=output[-1][1];var new_string=__left0__[0];var enc=__left0__[1];
self.x=x;
colorama.init();
before_task_publish.connect(self.task_add);
var __left0__=plt.subplots(1);var fig=__left0__[0];var ax=__left0__[1];
self._db._adapter.insert(self,self._listify(fields));
var a=np.ma.compress_cols(np.ma.masked_invalid(a));
var pb=pb.get_from_drawable(w,w.get_colormap(),0,0,0,0,sz[0],sz[1]);
perm_list.append(temp);
var t=np.linspace(-10,10,100);
final.append(b);
export var is_capital=models.BooleanField();
print(themessage);
np.insert(a,1,5);
count;
psutil.pid_exists(pid);
self.path=request.path;
var func=self.func_options[func_name];
result;
np.apply_along_axis(nGauss,-1,xx,mu,cov);
C1.__setitem__([tuple([0,null,1]),tuple([0,null,1]),i],np.dot(A.__getitem__([tuple([0,null,1]),tuple([0,null,1]),i]),B.__getitem__([tuple([0,null,1]),tuple([0,null,1]),i])));
methodReference.__self__.__class__;
list_of_lists.append(titles);
export var img_str=fd.read();
export var q2=session.query(TName.calc_column).order_by(TName.calc_column);
(d.A+d.B)/d.C;
var user=userform.save(__kwargtrans__({commit:false}));
var progname=sys.argv[0];
export var raw_email=data[0][1];
f.flush();
var __left0__=np.histogram2d(x_axis,y_axis,__kwargtrans__({bins:numbins}));var count=__left0__[0];var x=__left0__[1];var y=__left0__[2];
export var nplons=numpy.array(lons);
var form=DjForm();
var __left0__=benchmark_fuzzy_match(wordslist);export var ndict=__left0__[0];export var nsearch=__left0__[1];
var a_sorted=numpy.sorted(a);
false;
var nones=series.py_values==n;
event.widget.insert(10,old-1);
export var this_session=cherrypy.session[SESSION_KEY];
s.getvalue();
var __left0__=client.request(query);var headers=__left0__[0];var resp=__left0__[1];
print(QMouseEvent.pos());
var page=existing_pdf.getPage(0);
export var colMean=a.sum(0)/(a!=0).sum(0);
var c2=csv.reader(f2);
numpy.add.reduceat(a,[0,2]);
ax.right_ax(false);
export var colsmask=np.array([true,true,false]);
tf.mul(X,w);
s.shutdown(SHUT_RDWR);
var py_name=models.CharField(__kwargtrans__({max_length:200}));
df;
var x=Decimal(2);
print(getSubStrings(a,0));
var factor=A.__getitem__([j,i]);
var X=lab.__getitem__([tuple([0,null,1]),tuple([0,null,1]),tuple([0,1,1])]);
var loc=seq.index(item,start_at+1);
tuple([key,self[key]]);
i-=1;
var __left0__=np.indices(A.shape);var z=__left0__[0];var y=__left0__[1];var x=__left0__[2];
var count=0;
var summation=summation+int(i);
export var dayDelta=timedelta(__kwargtrans__({days:1}));
var ys=np.array([[0,1],[1,1]])*1;
numpy.nextafter(.1,1);
s;
var c=pycurl.Curl();
print(i);
col_names.append(group);

export var montreal_json=pd.DataFrame.from_dict(many_jsons[0]);
floor(2,1);
var grid=mlab.pipeline.scalar_field(data);
var tree=ast.parse(yoursource);
export var record_bytes=tf.decode_raw(value,tf.uint8);
var res=t[-1];
curr.children.append(node);
var iris=datasets.load_iris();
matcher(l2,l1);
cleaner.cleanFile(sys.argv[1]);
print(repr(y));
var result=s.execute();
print(typefunc[py_typeof(param)](param));
result.append(tuple([n,n]));
var sortedA=np.array(sorted_a);
var p=Pool(4);
s.logout();
var m=exp.findall(text);
var points=zip(X,Y);
visited.add(s);
df2;
var root=Tkinter.Tk();
export var mlcValue=-1.86;
self;
sys.exit(0);
var reverse_dict=dict({});
var b=datastream.read(1);
val-=timedelta(__kwargtrans__({days:diff}));

df;
export var data_chunk=data_chunk.__getslice__(-n_overlap,null,1);
loop.call_soon(user_func);
self.data=data;
tuple([x,y]);
var sess=tf.Session();
quadro.quadro();
print(a.queue);
var soup=bsoup(r.text);
export var time_struct=time.gmtime(time_epoch);
var index=random.randrange(len(sequence));
var x=asarray(x);
(function(){var __accu0__=[];for(var b of B)for(var [i,res]of t.py_iter(b))for(var s of res)__accu0__.append(tuple([s,b]));return __accu0__})();
tuple(function(){var __accu0__=[];for(var n=1995;n<datetime.now().year+1;n++)__accu0__.append(tuple([str(n),str(n)]));return py_iter(__accu0__)}());
os.close(2);
var request=urllib.request.Request(url,__kwargtrans__({headers:headers}));
export var expr_topl=ZeroOrMore(pths_or_str|anything_topl);
export var image_summary_t=tf.image_summary(images.py_name,images,__kwargtrans__({max_images:1}));
socket.setdefaulttimeout(2);
row.append(10);
export var trace=pm.sample(2E3,__kwargtrans__({n_init:1E5}));
dict(py_items);
stack[-1].append(current);
node.children.add(start_node);
var a=[1,2];
self[key]=NestedDict();
var s=sum(function(){var __accu0__=[];for(var [i,j]of zip(a.__getslice__(x,null,1),b.__getslice__(0,-x,1)))__accu0__.append(i==j);return py_iter(__accu0__)}());
var __left0__=tuple([np.random.normal(__kwargtrans__({size:N})),np.random.normal(1,.6,__kwargtrans__({size:N}))]);export var xdat=__left0__[0];export var ydat=__left0__[1];
marked_text;
df;
pd.isnull(x);
figure(1);
newArray[theArray==k]=v;
path;
self.awareness_status=tuple([self.max_val,-1]);
var line=remove_chars(line);
var node=queue.py_pop(0);
var f=Foo(1,2);
j+=1;
p.pprint(obj);

view.setModel(model);
var x=np.random.random(N);
print(dt);
dict(function(){var __accu0__=[];for(var [k,v]of enumerate(calendar.month_abbr))__accu0__.append(tuple([v,k]));return py_iter(__accu0__)}());
var action=QtGui.QAction(text,self);
x;
f.close();
invertedDict[value].append(key);
print(lines);
color.setNamedColor(string_with_color);
var path=os.path.join(dirpath,filename);
sp.diff(ntot,n[5]);
var s=requests.session();
export var some_words=OneOrMore(~JUMPS+Word(alphas));
var Base=declarative_base();
var y=np.random.rand(1E3);
struct.unpack(new_fmt,dat);
a.set(round(5.494949,2));
var args=parser.parse_args();

var phi=list(phi);
export var QuoteFormSet=modelformset_factory(Quote,__kwargtrans__({form:QuoteForm,extra:2}));
var current=sum(negatedEven.__getslice__(i,i+d,1));
export var array_=array_.reshape(-1);
print(temp);
f();
cPickle.dump(rf,f);
var example=Example();
pdb.gimp_item_get_children(c);
self.conn.commit();
export var taken_at=models.DateTimeField(__kwargtrans__({py_default:date,auto_now_add:true}));
print(py_name);
sleep(1);
var __left0__=t2;var val=__left0__[0][0];
x>-2&&x<2;
export var reshaped_data=data.reshape(tuple([4,-1]));
print(html);
create_all(app);
export var shift_idx2=np.append(0,np.where(np.diff(cols_idx1[sort_idx])>0)[0]+1);
var ss=str(request.form);
dic[k].extend([v]+dic[v]);
var y=np.empty_like(x);
self.domain=domain;
list.__init__(self);
var classification=np.zeros(len(data));
var out=np.empty(tuple([9,9]));
var x=[];
var W=np.cumsum(W)*np.sqrt(dt);
var X=np.outer(A.__getitem__([tuple([0,null,1]),n]),rowb);
print(L);
var g=a();
Requirements;
export var infoObject=pygame.display.Info();
export var add2=functools.partial(add,2);
var i2=Interval(0,oo);
result;
self.client=gconf.client_get_default();
print(decorated_argspec);
2*val;
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
export var temp_file=make_a_file_in_a_dir(temp_dir);
dlist.append(d);
total+=(math.log(scale)+x/scale)*count;
var a=gen();
var k=list(d1.py_keys());
export var login_view=KeyAuthLoginView.as_view();
query|=Q(__kwargtrans__({lft__lt:node.lft,rght__gt:node.rght,tree_id:node.tree_id}));
print(d);
var threads=[];
var data=re.sub(REGEX,escape,data);
print(determinant);
pipeline.get_state();
d.rotate();
export var arr_win=np.empty(tuple([rows,cols-n+1]),__kwargtrans__({dtype:np.intp}));
var foo=timeit(lexicon,__kwargtrans__({number:nloops}));
var foo=timeit(comprehension,__kwargtrans__({number:nloops}));
callback(size,file_size);
var line=result.stdout.readline();
var result_list=regex.findall(line);
var result=value_if_true;
export var num_str=str(n);

l.append(uimg[i]);
false;
export var transposed_l=zip(...l);
eval(method_name1);
var dx=np.linspace(0,1,20);
A.__getitem__([0,2,6,7,16,20]);
var forms=function(){var __accu0__=[];for(var i=0;i<x;i++)__accu0__.append(Foo(__kwargtrans__({prefix:i})));return __accu0__}();
len(self.d);
time.sleep(.4);
test_df[test_df<4]=np.nan;
self.buffer[n];
transaction.commit(sid);
var f=function __lambda__(a,b){return!__in__(b,a)?a.append(b)||a:a};
element.attrib[key];
export var file_parser=argparse.ArgumentParser();
self.val=val;

select.order_by(func.rand());
tuple([grid,np.linspace(xmin,xmax,nx),np.linspace(ymin,ymax,ny)]);
export var voltage=[1,-1,1.1,-.9,1,-1,.9,-1.2,.95,-1.1,1.11];
lamp_object.select=true;
[[a-z]- -[aeiou]];
export var laplacian2=nx.spectrum.laplacian_spectrum(graph2);
var app=App(root);
var connection=op.get_bind();
print(result);
py_next(b);
traceback.print_exc(__kwargtrans__({file:sys.stdout}));
pprint.pprint(dict(result));
var instances=[];
var data=mmap.mmap(f.fileno(),size,__kwargtrans__({access:mmap.ACCESS_READ}));
(d.days*24*60*60+d.seconds)*1E3+d.microseconds;
s.__getslice__(10,null,1);
var tokens=wordpunct_tokenize(text2);
self.py_update(json.load(fh));
istart.append(i);
time.sleep(.1);
multipass;
var c=camelcase();
var x=int(x);
files;
int(string);
f(5);
list_;
var data=np.empty(tuple([sizes[-1]]),__kwargtrans__({dtype:csc_mat.dtype}));
tty.setraw(sys.stdin.fileno());
var page=html.parse(url).getroot();
var result=dot(total,unit_normal(poly[0],poly[1],poly[2]));
arg.join(value);
c.connect();
py_typeof(m);
serializers.py_get(py_typeof(ob),repr)(ob);
authors.allow_tags=true;
(function(){var __accu0__=[];for(var o=0;o<max_len;o++)__accu0__.append(function(){var __accu1__=[];for(var i of a)if(len(i)>o)__accu1__.append(i[o]);return __accu1__}());return __accu0__})();
var engine=create_engine(dbname,__kwargtrans__({echo:false}));
Features;
file.write(insert);
var c=getch();
var counter=1;
export var myobjs=function(){var __accu0__=[];for(var _=0;_<1E6;_++)__accu0__.append(Foo());return __accu0__}();
gzip.wait();
print(note.id_item,note.py_name,note.value);
var img=Image(image_path);
print(sf.to_string());
var mask=mask.resize(image.size,Image.LANCZOS);
model.add(LSTM(4,__kwargtrans__({input_dim:input_dim,input_length:input_length})));
parameters.append(int(tokens.popleft()));
client_socket.send(strng);
ax.autoscale_view(true,false,false);
mydict;
var reader=csv.reader(input_file);
os.remove(self.filename);
logger.addHandler(fh);
self.y=y;
tuple([passing,failing]);
dict(zip(p.__getslice__(0,100,1),p.__getslice__(100,null,1)));
search_button.click();
var py_keys=list(d.py_keys());
export var target_date=base_datetime+delta;
self.nested_json;
cache[jid].add(resource);
print(t.sTitle);
1-.5*erfcc(x/Math.pow(2,.5));
STOCK_GO_BACK;
STOCK_GO_FORWARD;
STOCK_JUSTIFY_FILL;
STOCK_LEAVE_FULLSCREEN;
STOCK_ORIENTATION_LANDSCAPE;
STOCK_ORIENTATION_PORTRAIT;
STOCK_SPELL_CHECK;
STOCK_ZOOM_FIT;
var startTime=datetime.now();
var c=b.view();
s;
readline.read_history_file(histfile);
d[key]=value;
var api=tweepy.API(auth);
var summary=Column(String(2E3));
var s=x.argsort();
self.books[i];
q.put(test_w);
var s=requests.Session();
main();
p.y=y;
B();
[0,[0,[0,py_values,2],2],2];
export var csv_contents=[];
tuple([1,2,0]);
var slug=models.SlugField();
false;
deleteself.lines.__getslice__(0,null,1);
datetime.timedelta(__kwargtrans__({seconds:seconds,microseconds:microseconds}));
export var rm=np.hstack(function(){var __accu0__=[];for(var i of mylist)__accu0__.append(ind[i]);return __accu0__}());
Options+ExecCGI;
var columns=line.py_split(separator);
rdd.__class__=RDDWithSquares;
print(b);
dic[7];
a+b;
line.set_data([],[]);
export var int_n=int(abs(n));
var j=ttk.Treeview(self.parent);
var current=__mod__(current+incrementor,modulo);
a[indices]+=x;
export var filename_queue=tf.train.string_input_producer(filenames);
export var atom_shape=np.shape(atom_proj[py_values[1][0]]);
var s=set(l);
self.search_entry=gtk.Entry();
Series(mapped,__kwargtrans__({index:self.index,py_name:self.py_name}));
var window=collections.deque(sorted(window),__kwargtrans__({maxlen:window_size}));

c.py;
d[k]=f(v);
list(l);
[arg_line];
var lens=np.array(map(len,arr));
var __left0__=uniform_result(...do_something5());var a=__left0__[0];var b=__left0__[1];var c=__left0__[2];
print(i,da[i],db[i]);
traceback.print_exception(...exc_info);
sns.heatmap(__kwargtrans__({data:df1,annot:false}));
table.setCellWidget(0,0,combobox);
p.terminate();
export var href=href.strip();
BOOST_PYTHON_MODULE(hello);
self.verticalLayout.setSizeConstraint(QtGui.QLayout.SetFixedSize);
true;
print(b.y);
var step=len(array)-1;
var objects=SomeManagerSet.as_manager();
var current_time=datetime.now();
export var old_file_position=f.tell();
print(multi_dict.py_get(key));
var box=BoxLayout();
export var poss=lookup_mapping[text.__getslice__(0,2,1).lower().lstrip()];
var data=final_list;
var cols=np.any(img,__kwargtrans__({axis:0}));
SNIP;
export var lag_seq=np.int64(np.random.normal(lag_mean,lag_sd,n_iter));
var ser=pd.Series(__kwargtrans__({data:np.random.randn(len(idx)),index:idx}));
self.comboBox.currentIndexChanged.connect(self.on_comboBox_currentIndexChanged);
1;
var ipython=IPython.core.ipapi.py_get();
var Session=sessionmaker(__kwargtrans__({bind:engine}));
var liPos=[tuple([2,5]),tuple([8,9]),tuple([18,22])];
dis.dis(foo);
print(tuple([Session.is_active,Session.is_modified(mylst)]));
tuple([datetime.datetime.today().ctime()]);
feed.etag;
var __left0__=generatedata();var X=__left0__[0];var Y=__left0__[1];var Z=__left0__[2];
var browser=webdriver.PhantomJS();
f.read();
self.read(rc);
var utc=datetime.datetime.utcnow();
x+=1;
export var fills=np.zeros(nu);
export var new_remaining=[];
py_next(dtg0);
foundColors[color].add(key);

Base.metadata.create_all(e);
var cursor=conn.cursor();
export var dicto=defaultdict(list);
var b=py_iter(a);
var __left0__=zip(...verts[ring]);var lons=__left0__[0];var lats=__left0__[1];
var total=cursor.scalar();
[easy_install];
list(set(function(){var __accu0__=[];for(var _=0;_<n;_++)__accu0__.append(str(rng.randint(6E4,8E4)));return __accu0__}()));
var b=a.__getslice__(2,9,1);
frob();
export var bar_obj=Bar();
column[h].append(v);
export var available_tickets=[fulltime,parttime,daytime];
export var memv=memoryview(a);
reversed_edge_list.append(tuple([j,i]));
sys.stdout=mystdout;
self.sendLine(request);
var xmldoc=xml.dom.minidom.parse(file);
tuple([X,Y,Z]);
header.seek(0);
var data=str(data,coding).encode(new_coding);
label.show();
var __metaclass__=fancytype;
fib(400);
pool.map(func_star,zip(a_args,itertools.repeat(second_arg)));
response;
0;

str(50)===str(50);
var data=np.random.normal(0,1,tuple([10,100]));
var tic=time.clock();
var s=self.makeDefaultS();
transaction.commit_unless_managed(__kwargtrans__({using:self.db}));
var __left0__=v;var x=__left0__[0];var y=__left0__[1];var z=__left0__[2];
parser.clean();
self.file_pointer.read(self.record_size);
add(1);
self.count[0]+=1;
form.show();
export var sort_by=function __lambda__(x){return x[0].lower()};
pkg.mark_install();
var cols=set(chain(...list(d.py_values())));
q.set_array(np.random.rand(np.prod(x.shape)));
pylab.arrow(4,6,x,y,__kwargtrans__(__mergekwargtrans__({alpha:.8},opt)));
primefactors.append(p);
print(leastsq(optm,[.5,.5,.5],tuple([x])));
var X=np.concatenate(tuple([X,X]));
var x=np.linspace(100,100.1,100);
self.mapping[key]=value;
(lookuptable>>i&1)!=0;
print(Math.pow(x,5));
print(py_typeof(n));
logging_thread.join();
add(__kwargtrans__({x:x,y:y}));
var idx=np.abs(a-a0).argmin();
export var currentSongURI=self.GetSongURI();
var df2=pd.DataFrame(function(){var __accu0__=[];for(var [col,vals]of df.groupby(by))__accu0__.append([col,vals[column]]);return dict(__accu0__)}());
_pix_get_data.argtypes=[c_void_p];
idx[0];
var edges=np.zeros(tuple([len(hull_points)-1,2]));
export var playerList=[];
var b=a.__getitem__([tuple([0,null,1]),tuple([0,null,1]),newaxis]);
ie.Visible=0;
conman.found();
var cls=py_typeof(c_uint).__new__(metacls,py_name,bases,dict);
var l2=list(range(5));
print(a===b);
var id=serializers.Field();
var b=a;
var cur=db.cursor();
var browser=Browser();
c[0].append(c);
export var iterator=py_iter(iterable);
d[nkey]=newvals[nvalue];
self.buffer.py_pop(0);
true;
var session=DBSession();
export var totalscore=sum(t);

log_observer.start();
possible_shuffles(initial_state);
result;
export var text1=open(file1).read();
sleep(1);
resp(status,headers,...args);
var tb=sys.exc_info()[2];
var l2=f2.readline();
InterfaceClass(iface.__name__,iface.__bases__,fields);
var x=42;
var a=np.array([true,false,false,true,true,false,false,true,false]);
df.columns=columns;
cv.WaitKey(0);
var colormap=window.get_screen().get_rgb_colormap();
self.Layout();
(function(){var __accu0__=[];for(var x of results)__accu0__.append(model_solve(100));return __accu0__})();
export var mkdict=function __lambda__(row){return dict(function(){var __accu0__=[];for(var col of cols)__accu0__.append(tuple([col,row[col]]));return py_iter(__accu0__)}())};
self[key]=key;

var text=infile.read();
tuple([transpositions(splits)]);
tuple([replacements1(splits)]);
var s=-1/(2*sigma*sigma);
id(tup);
var r=csv.DictReader(i);
var __left0__=np.histogram2d(x,y,__kwargtrans__({weights:z,bins:bins,range:rng}));var H=__left0__[0];var xs=__left0__[1];var ys=__left0__[2];
export var related_obj=getattr(obj,py_name);
export var dense=np.asarray(a.todense());
export var sessionOptions=blpapi.SessionOptions();
self.members=[];
plot_durations(starts,stops,ax,__kwargtrans__({facecolor:color,alpha:.5}));
var rows=function(){var __accu0__=[];for(var x of cursor)__accu0__.append(x);return __accu0__}();
var cache=apt.cache.Cache();
event.widget.insert(10,old+1);
export var MAX_EMAILS_IN_PERIOD=1;
var __except0__=ReturnValue(value);__except0__.__cause__=null;throw __except0__;
var __left0__=0;export var Sx=__left0__;export var Sy=__left0__;var Sxx=__left0__;export var Syy=__left0__;var Sxy=__left0__;
x+=y;
print(number);
var root=Tkinter.Tk();
print(model.eval(dict([[select_test,true]])));
var window=gtk.Window(gtk.WINDOW_TOPLEVEL);
var qs=MyModel.objects.all();
export var new_state=self._as_dict();
var x=np.linspace(0,10,10);
2[5].__getitem__([1,1]);
var x=np.linspace(0,10,100);
export var y_onehot=[0]*len(y);
zip_longest(it1,it2);
export var ticklab=ax.xaxis.get_ticklabels()[0];
py_keys.append(k);
var X=X.__getitem__([indices,tuple([0,null,1])]);
var x=np.linspace(xmin,xmax,100);
var py_items=list(this_v.py_items());
export var directions=array([[1,1],[-1,1],[1,-1],[-1,-1]]);
var numbers=set(range(10));
axes_col.set_title(col.strip());
my_list;
images.append(image);
export var num_items=Math.floor((num_bits+BITS_PER_ITEM-1)/BITS_PER_ITEM);
self.domains[key].remove(color);
var sel=Selector(response);
var entnum=int(hex,16);
var mu=np.array([1,10,20]);
line.isspace();

var data=np.random.random(tuple([10,10]));
axes[0].plot(list(range(50)));
output.write(texts);
var manager=mp.Manager();
Pool(processes,initializer,initargs);
var dx=dALLdt(X[-1],i);
export var class_a_inst=get_my_inst(5);
updated_fixtures;
var file=sys.argv[1];
var something=tuple([protorpc.messages.IntegerField(1,__kwargtrans__({required:true}))]);
export var distance_km=haversine(points_1[0],points_1[1],points_2[0],points_2[1]);
w.wcs.crval=[crvalX,crvalY];
false;
var json_obj=requests.py_get(url).json();
x.turn();
main();
export var recv1=recv1.decode();
ax2.set_xticks(ax2Ticks);
new_dict;
var lats=[0,41,19,51];
var zipped=zip(x,y);
var py_name=Column(Unicode(256));
combination[r-1]=combination[r-2]+2;
HoughLines(dst,lines,1,CV_PI/180,100,0,0);
my_worksheet.protect=true;
_draw_point(i,j,MAX_OPAQUE-fade_amount_i);
var mask=cv2.bitwise_not(mask);
export var id_=build_id(pub_key);
solve(a,b);
print(df2);
os.makedirs(build_temp);
__debug__;
np.array_equal(accumulate_based(A2),cython_based(A2c));
var result=[];
pairs.__getitem__([J==1]);

x.append(pt[0]);
var content=myfile.read();

var __left0__=tee(gen2);export var gen2=__left0__[0];export var gen2_copy=__left0__[1];
var __left0__=request.FILES;var data=__left0__;request.DATA=__left0__[0];var files=__left0__[1];
var __except0__=Timeout();__except0__.__cause__=null;throw __except0__;
s.snoodidle();
head-1;
[0];
s.close();
print(proc.stdout);
var job=pool.apply_async(worker,tuple([i,q]));
var instances=function(){var __accu0__=[];for(var r of res)for(var i of r.instances)__accu0__.append(i);return __accu0__}();
py_typeof(D);
a(locals());
var doc=parseString(s);
plot(t,s);
congruent.stack(__kwargtrans__({dropna:false}))[same].dropna();
var pivots=zeros(n_eq,np.intc);
num_lines+=1;
list_of_dct;

temp[parts[-1]]=1;
var img=im_clear.__getitem__([tuple([0,null,1]),tuple([idx*split_point,(idx+1)*split_point,1])]);
indefinite_integral(end_time)-indefinite_integral(start_time);
var root=int(math.ceil(Math.pow(lo,.5)));
addToList(myList);
var w=Tk();
export var newbuf=file.read(bufsize);
export var _r=r.request.response;
b_padded.shape;
var f=sympy.Sum(x,tuple([n,0,10]));
export var resultqueue=Queue.Queue();
export var pathqueue=Queue.Queue();
is_type(df,np.integer);
(function(){var __accu0__=[];for(var [start,end]of zip(starts,ends))__accu0__.append(string.__getslice__(start,end,1));return __accu0__})();
mat_inv/=det.__getitem__([,np.newaxis,np.newaxis]);
x.y=1;
var length=len(elements);
var result=small_number*A;
lConnection.close();
print(observer.radec_of(az,el));
var result=np.array(nearest_neigbours,__kwargtrans__({dtype:np.uint8}));
data;
self.sources_list.append(source);
output.writerows(rows);
var i=0;
var paths=os.listdir(path);
var app=QtGui.QApplication(sys.argv);
func_wrapper;
plot(x);
vulture- -help;
var filename=os.path.join(root,basename);
var second_list=[2,5,7,9];
c[0][0];
export var Property1=1;
py_typeof(0)===int;
export var espec=urllib.parse.unquote(espec);
self.yaxis.set_zorder(2.5);
var py_values=tuple(function(){var __accu0__=[];for(var company of companies)__accu0__.append(tuple([company.id,company.max_price]));return py_iter(__accu0__)}());
p.start();
export var csvin=csv.reader(fin);
self.count+=1;
httplib.HTTPMessage(filehandle).getdate_tz(headername);
var y=cos(angle)*self.radius.imag+self.center.imag;
py_typeof(c);
deleteconnection;
tuple([py_typeof(size2_col),size2_col.index]);
export var ascend_list=[];
self.kill_now=true;
self._do_request(action);
np.allclose(original_app(x,idx),reshape_based(x,idx));
time.sleep(.1);
var ys=function(){var __accu0__=[];for(var i=0;i<10;i++)__accu0__.append(i+x+Math.pow(i*x,2));return __accu0__}();
plt.colorbar(im);
myfunc();
var all=set(range(1,101));
export var Y_int=np.round(Y*10).astype(int);
var l=[];
var indices=np.where(tmp)[0];
self.after(100*name_changes,finish_spinning);
B().f();
data[word.__getslice__(i,i+1,1)]=[word.__getslice__(i+1,null,1),dict({})];
var b2=[4,5,6,7,8];
var code=json.dumps(data);
var __left0__=norm.fit(data);var mu=__left0__[0];var std=__left0__[1];
var c=char[0];
number;
var ax=fig.add_subplot(111);
var __except0__=ArgumentError(action,__mod__(msg,tuple([py_name,arg_string])));__except0__.__cause__=null;throw __except0__;
clf.partial_fit(X,Y);
dis.dis(f2);
subclass1.bar();
dict([[0,1]]).py_get(0,getter());
print(j);
v.py_sort();
c.showPage();
var plot=plt.figure();
print(x,c);
var __left0__=np.mgrid.__getitem__([tuple([0,h,complex(0,500)]),tuple([0,w,complex(0,500)])]);var x=__left0__[0];var y=__left0__[1];
dll._sin.argtypes=[ctypes.c_double];
fd.write(string_conditioned(row));
var diam=np.empty(N);
export var n_estimators=10;
tuple([[],2]);
deletehand[key];
print(find_centroid(im,20));
my_plot_1(ax1);
sys.exit(1);
var initial=tf.truncated_normal(shape,__kwargtrans__({stddev:.1}));
ceil(datetime.datetime(2012,10,25,17,45,1));
self.zipinfo=zipinfo;
blah[i]+=merp;
var result=[];
var res=0;
print(total);
var vend=vspell[2];
print(csr_matrix(np.vstack(function(){var __accu0__=[];for(var line of dense)if(line[2]==0)__accu0__.append(line);return __accu0__}())));
export var pubsub=redis_instance.pubsub();
ax.set_ylim(height_of_im,0);
var px=ImageGrab.grab().load();
var i=seq.index(subseq[0],i+1,n-m+1);
dict_of_strings.close();
var code=x86_env.InstructionStream();
my_data[i]=line;
session.run(tf.assign(embedding,embeddings_that_you_want_to_use));
print(result);
var gen=myfunct();
callback(copied);
var x=[10.01,5.001,4.89,5.1,9.9,10.1,5.05,4.99];
Contacts.all_contacts.append(self);
test([1,0]);
thread.join();
math.floor(x);
self.seconds=__mod__(self.seconds,86400);
var parts=re.findall(pat,sentence);
var d=dict(function(){var __accu0__=[];for(var i=0;i<10;i++)__accu0__.append(tuple([i,i]));return py_iter(__accu0__)}());
f(__kwargtrans__({b:44,a:12}));
var data=self.request.recv(1024);
self.array.py_pop(0);
self.leftover=data.__getslice__(size,null,1);
self.my_member_fun(data);
var logger=logging.getLogger();
var __left0__=np.mgrid.__getitem__([tuple([0,size,1]),tuple([0,size,1])]);var x=__left0__[0];var y=__left0__[1];
self._sendRequest(queued_d,request);
export var stopindex=2;
export var r_ndegen=gen.randn(1E3).astype(np.float);
py_typeof(self)(self.x+other.x,self.y+other.y);
to_response(request,response,myobject);
w.writerows(r);
seen_titles.add(obj.title);
tuple([id(a),id(b)]);
alan2;
Gtk.main_quit();
var a=np.asanyarray(a);
var match=patt.match(line);
self.feature_indices_=indices;
__mod__(hash(new_key),8)<=__mod__(hash(old_key),8);
var browser=webdriver.Firefox();
export var pet=Dog();
app_log.addHandler(my_handler);
var j=jinja2.Jinja2(app);
1;
var __left0__=tuple([[],[]]);var w1=__left0__[0];export var w2=__left0__[1];
inspector;
export var topic_bundles=[];
var edges=set();
print(so.__getslice__(-4470,-4460,1));
var y=np.concatenate(tuple([y_a,y_b,y_c,y_d]));
w.write(code);
tty.tcsetattr(stdin_fileno,tty.TCSANOW,raw_ta);
dt;
df;
export var wholeList=list(range(0,10));
export var col_list=list(df);
sys.stdout=sys.__stdout__;
var row=cursor.fetchone();
var end_date=end_date.py_replace(__kwargtrans__({hour:0,minute:0,second:0,microsecond:0}));
dates.append(dates[i]+timedelta(0,delta));
myLib.RegisterNofityCallback(45454,0,func);
loop.run_until_complete(asyncio.wait(tasks));
statistics.median(map(float,py_items));
var b=a.T;
deleteself.inverse[self[key]];
export var image_profile=QtGui.QImage(image_path);
tree.write(s);
var u=uuid.uuid4();
self.curoffs+=len(data);
zip_ref.extractall(directory_to_extract_to);
var txt=txt.py_replace(sep,default_sep);
var p=bokeh.plotting.figure(__kwargtrans__({plot_width:400,plot_height:400}));
self;
print(tree);
_ProcQueue(q);
print(a.__getitem__([tuple([0,4,1]),tuple([1,6,1])]));
ipdb>new_post.py_update(request.GET);
var a=np.zeros(tuple([10,2]));
open(fname);
get_items(coo,2,5);
var __left0__=tuple([dict({}),5]);var a=__left0__[0];var b=__left0__[1];
window.set_titlebar(header_bar);
var df=pd.DataFrame(array);

app.run();
var b=numpy.empty(a.shape,__kwargtrans__({dtype:a.dtype.descr+descr}));
export var DOT11_CIPHER_ALGO_NONE=0;
var coord=np.array(atom[6]);
export var last_day_of_previous_month=first_day_of_current_month-timedelta(__kwargtrans__({days:1}));
print(f);
!isinstance(X,pd.DataFrame)?X:X.as_matrix();
var b=np.random.normal(__kwargtrans__({size:1E3}));
var __left0__=img.shape;var rows=__left0__[0];var cols=__left0__[1];
main();
d[a]=a;
var b=a+2;
i+=2;
print(newlist);
a.__setitem__([rows,cols],a.__getitem__([rows,cols])+np.ones(tuple([rows.size,cols.size])));
myfoo.d=myfoo.c+1;
var d=function(){var __accu0__=[];for(var k=0;k<n;k++)__accu0__.append([k,function __lambda__(k,s){return s*A[k]}.__get__(k)]);return dict(__accu0__)}();
var session=requests.Session();
var max_val=max(my_list);
var module=__import__(module_name);
var __left0__=np.histogram(x,__kwargtrans__({bins:xbins,weights:y*y}));export var sy2=__left0__[0];var _=__left0__[1];
var B=np.empty_like(A);
var f=function __lambda__(x,y){return x*x*x+y*y};
export var andalso=Infix(function __lambda__(x,y){return x.and_impl(y)});
var result=np.zeros(tuple([9,12]));
var xyi=np.column_stack([x.ravel(),y.ravel()]);
var fig=plt.figure();
dis.dis(foo);

method(self,...args,__kwargtrans__(kwargs));
print(tuple([first,second]));
self.disconnect_from_server();
var PROJECT_DIR=os.path.dirname("./P2JSnippets.py");
root.py_update();
var s=pd.DataFrame(data.__getslice__(1,null,1),__kwargtrans__({columns:data[0]}));
var logits=model.inference(batched_train_x);

relate(inp,cut);
print(LCM(99,12));
self._x;
sched.start();
print(f());
self.camera.child.join();
var x=pd.rolling_min(arr,window);
self.dummyy[i]=nm.py_NaN;
self.dummyz[i]=nm.py_NaN;
extension;
var fitfunc=function __lambda__(p,x){return p[0]+p[1]*x};
str(self.val);
var output=io.StringIO();
new set([new set([py_name])]);
var v=A.__getslice__(position,position+length,1);
dems<-readHTMLTable(demdir)[[1]];
var sc=scorm.objects.py_get(__kwargtrans__({pk:someid}));
self._locals=dict({});
result;
clf.train(samples,y_train);
__round__();
print(parser.feed(content));
__init__.py(blank);
var xvalues=line2d[0].get_xdata();
list;
d.__repr__();
export var rightmax=0;

var a=argparse.ArgumentParser();
f1.write(line);
sys.stdout=f;
parser.parse_args();
df.columns=ind;
writer.save();
var fd=StringIO();
var y=np.zeros(n);
var l=list(range(10));
var model=Post;
queue.join();
var base=sum(np.array(function(){var __accu0__=[];for(var m=0;m<M;m++)__accu0__.append(p[m]*A[m]);return __accu0__}()));
var fig=plt.figure();
export var todays_files=[];
tagged.py_sort(function __lambda__(x,y){return cmp(x[1],y[1])});
export var tally=Counter(chain(...map(set,data)));
(function(){var __accu0__=[];for(var u of set([b,d]).intersection(set([a,c,e])))__accu0__.append(tuple([u.value,u.meta]));return __accu0__})();
var end_date=dt.datetime.now().date();
print(e);
new_from_slices(a,slices);
count[i]+=1;
nltk.pos_tag(text);
var x=np.arange(10);
var x=np.linspace(0,1,10);
compressor.write(chunk);
sunaudiodev;
d[letter]+=1;
var vals=words.py_split();
var T=zlib.decompress(S);
var yet_to_run=0;
alpha.paste(circle.crop(tuple([0,rad,rad,rad*2])),tuple([0,h-rad]));
plt.colorbar();
export var x_values=data.columns.py_values;
.0010009999275207519;
export var dict_reader=csv.DictReader(fin);
var cur=l[i];
var df=pd.DataFrame(__kwargtrans__({data:d}));
np.nextafter(1,0);
self.dict[key]=value;
var http_server=tornado.httpserver.HTTPServer(Application());
xlApp.Quit();
self.upload_file(filename);
d[key];
var tokens=f.read().py_split();
files_py.append(fff);
res.append(S[pos]);
var data_y=[1.5,1,.7,2.5,1,1.5];
self;
export var a_ma=np.ma.masked_where(a>0,a);
var d=defaultdict(list);
GradeNum.B==Suit.spade;
var clock=pygame.time.Clock();
doSomethingElse();
var root=Tk();
axarr.__getitem__([0,0]).plot(x,y);
s.get_subnet(28,__kwargtrans__({count:10}));
c.remove(x);
df;
var res=np.flatnonzero(d_slice>=thresh_d);
self.constant=constant;
order.py_sort();
model._meta.app_label==self.app_label;
var weekday=current_date.weekday();
print(index,item);
print(driver.current_url);
export var istart=0;
process(dir);
result[0]=len(result)-1;
ax_img.set_axis_off();
var __left0__=read_my_file_format(input_queue.dequeue());var image=__left0__[0];var label=__left0__[1];
self._latency=latency;
print(i,m);
export var TASKS1=function(){var __accu0__=[];for(var i=0;i<20;i++)__accu0__.append(tuple([mul,tuple([i,7])]));return __accu0__}();
self.assertTrue(user.username==testuser.upper());
main.test;
setup_environ(settings);
self.accounts.signup(userName,password);
var x=time.time()-1E3;
var lons=np.linspace(-180,180,bm.shape[1])*np.pi/180;
export var pkcs11=PyKCS11Lib();
a(myfoo);
print(out);
var objects=PersonManager();
var a=np.array([np.nan],__kwargtrans__({dtype:object}));
obj.get_decoded();
gtk.main();
hex(s.start);
enable_numpy_scalar_converter();
self._may_close=false;
numpy.dot(numpy.array([-d[1],d[0]]),p-v1)<0;
do_something(blah);
var Nfeval=1;
self.workers.acquire();
print(text.translate(trans));
irb;
your_tableview.setModel(model);
export var imx=np.tile(np.arange(xlo,xhi,1),ny).reshape(tuple([ny,nx]));
update_list_energy(list_of_proteins,1);
var objs=[];
var rows=[];
var a=[];
row.__getslice__(0,4,1);
var im_array=np.array(im_grey);
var a=A();
(function(){var __accu0__=[];for(var a of A)for(var k of d[a])__accu0__.append(tuple([a,B[k]]));return __accu0__})();
p(sys.path);
self.connections.add(self);
var offset=4*(self.width*int(round(y))+int(round(x)));
visit.Launch();
self.start_urls=[url];
var contents=my_file.read();
l1.append(elem);
var d=defaultdict(list);
el.text;
var app=web.Application(__kwargtrans__({loop:loop}));
var d=dict(enumerate(function(){var __accu0__=[];for(var _=0;_<100;_++)__accu0__.append(str(random.randint(0,10)));return __accu0__}()));
var points=np.column_stack(tuple([x,y,z]));
export var templateString=ftemp.read();
export var sfile=ctx.open(suri,os.O_RDONLY);
output.__getslice__(0,-len(self.sentinel),1);
var out=np.array(function(){var __accu0__=[];for(var y of ys)__accu0__.append(function(){var __accu1__=[];for(var x of xs)__accu1__.append(np.dot(matrix,np.array([x,y,1])));return __accu1__}());return __accu0__}());
tuple([2,4,6]);
0;
Foo.arg0;
self.request=request;
var dif=set(bigd.py_items())-set(bigd2.py_items());
browser.switch_to.window(newWindow);
start+=step;
var data=py_next(line_iter);
var password=forms.CharField(__kwargtrans__({widget:PasswordInput()}));
var lens=len(s);
var l=[];
df;
export var dir_path=os.path.join(self.feed,self.address);
var c=ctypes.create_string_buffer(mlen.value+16);
var __left0__=tuple([sqc[j],sqc[i]]);sqc[i]=__left0__[0];sqc[j]=__left0__[1];
var count=0;
imputed_array[hole]=most_frequent;
print(example());
sess.run(init);
export var temperatureRaisedSignal=QtCore.pyqtSignal();
cmd.append(run_as_root_path);
print(text);
var cls_attr=class_.__dict__;
perms.append(result);
df2;
var user=auth_by_token(request,backend);
var instance=object.__new__(cls);
Q.appen(task);
export var ser_cdf=pd.Series(cum_dist,__kwargtrans__({index:ser}));
var p=Process(__kwargtrans__({target:self._crawl,args:[domain_pk]}));
handler.dispatch();
(function(){var __accu0__=[];for(var val of array)__accu0__.append(T(val,params));return __accu0__})();
var __left0__=tuple([0,len(x)-1]);var i=__left0__[0];var j=__left0__[1];
var data=data.__getslice__(4,null,1);
var data=f.read();
cat/tmp/kernel.json;
Model.aggregate(...pipeline);
var min_value=min(sentiment_dict.py_values());
var parser=argparse.ArgumentParser();
self._callback=callback;
data;
results.append(tuple([i,r]));
self.py_name;
s.sendmail(From,To,msg.as_string());
self.input.SetValue(value);
export var updating=true;

ret;
py_typeof(x);
var thresh=cv2.adaptiveThreshold(blur,255,1,1,11,2);
self.marked=dict({});
var formula=function(){var __accu0__=[];for(var x of s)if(__in__(x,string.digits+symbols))__accu0__.append(tuple([x,s.index(x)]));return __accu0__}();
export var rf=r[np.triu_indices(r.shape[0],1)];
train_as_dicts;
var height=im.size[1];
inGroup.append(n);
print(df);
cesttime.isoformat();
vocabs.append(dict(zip(vals,list(range(len(vals))))));
export var emitted=[];
n-Math.floor(x/2);
print(csr_matrix(np.vstack(function(){var __accu0__=[];for(var line of dense)if(line[2]==1)__accu0__.append(line);return __accu0__}())));
(function(){var __accu0__=[];for(var o of ords)for(var shift of shifts)__accu0__.append(o>>shift&1);return __accu0__})();
var result=pool.apply_async(f,[10]);
51251080;
export var x2to=x1to+x2fr-x1fr;
export var y2to=y1to+y2fr-y1fr;
print(table_name.parseString(test).dump());

var r=np.sqrt(Math.pow(x,2)+Math.pow(y,2));
print(x[0]);
print(py_typeof(a),len(a),a);
processes[i].join();
s==s[0]*len(s);
self.database[py_name]=value;
show();
print(a);
var index=function __lambda__(self){var args=tuple([].slice.apply(arguments).slice(1));return self._tuple.index(...args)};
var logger=logging.getLogger(py_name);
var __left0__=self.default_factory();self[key]=__left0__;var value=__left0__;
pygame.draw.rect(Surface,tuple([150,0,0]),particle.rectangle,0);
var count=0;
var primes=[2];
export var output_img=input_img.crop(box);
M.__getitem__([0,2]);
var data=data[order];
f_order.__getitem__([0,1,2]);
var end=datetime(end_year,end_month,1);
deleteddd[k];
session.delete(x);
var H=nmf_model.components_.T;
var http_server=tornado.httpserver.HTTPServer(Application());
z.__setitem__([x,y],np.dot(transformation_matrix,rgb_image.__getitem__([x,y,tuple([0,null,1])])));
df;
dict(zip(self.column_names,row));
print(jez(df));
export var blocks=np.array(blocks);
var dx=pxi-pos.__getitem__([j,0]);
sess.add(user);
var rank=function(){var __accu0__=[];for(var [i,v]of enumerate(sorted(a)))__accu0__.append([v,i]);return dict(__accu0__)}();
var x=np.linspace(0,N*T,N);
export var coeff_mat=hstack(tuple([vstack(tuple([n_to_M,n_to_N])),vstack(tuple([m_to_M,m_to_N]))]));
var jsonString=json.dumps(data);
var S=np.minimum(max_sum-P.sum(__kwargtrans__({axis:1})),max_range[0]);
quit();
x+y;
print(im.size);
export var insert_locations=sample(range(len(lst)+len(seq)),len(seq));
self._lookup=dict({});
channel.set_combine_stderr(true);
f.close();
var m=max(map(hello.count,hello));
var __left0__=d.py_popitem();var key=__left0__[0];var value=__left0__[1];
var menubar=tkinter.Menu(root);
var __left0__=spstereo(lons,lats);var x=__left0__[0];var y=__left0__[1];
df;
self.Blist=[B(true),B(false),B(true)];
disown;
L.__setslice__(start,end+1,null,sorted(L.__getslice__(start,end+1,1),__kwargtrans__({key:g})));
net.ipv6.conf.all.forwarding=1;
export var iph=IP(import_hexcap());
print(value);
wrapper;
var rows=cursor.fetchall();
export var f0=round(len(index)*RATE/(2*np.prod(len(signal))));
df1.join(broadcast(df2));
var p=np.stack([p,p]).flatten();
np.sum(Math.pow(A,2),__kwargtrans__({axis:1}));
c_list.append(c);
var color=max(py_iter(histogram.py_items()),__kwargtrans__({key:operator.itemgetter(1)}))[0];
foo(1,4);
aclass;
false;
var f=urllib.request.urlopen(req);
export var auc=np.trapz(y,x);
var final=[word_list[0].capitalize()];
print(field.py_name);
outfile.write(calculation_result);
var ts=datetime.datetime.fromtimestamp(time.mktime(nofrag_dt));
var a=x.y;
export var A2c2=A2.copy();
sizes.append(len(i[1]));
var cut_idx=np.append(0,map(len,I)).__getslice__(0,-1,1).cumsum();
var R=(T-y)*Dinvs;
export var keystate=pygame.key.get_pressed();

var l=string.py_split();
movement.normalize();
print(mystuff.average(a,b,c));
var P=mpp.Pool(mpp.cpu_count());
print(stripTags(match.body));
tuple(function(){var __accu0__=[];for(var i=0;i<n;i++)__accu0__.append(repeat());return py_iter(__accu0__)}());

var x=5;
main();
results;
var client=Client();
vals[half-i-1];
self.transport.setOutgoingInterface(src_ip);
var c=p.cumsum();
var reply=json.dumps(info);
export var the_choice=py_items[choice];
_cache[key]=f(...args,__kwargtrans__(kwargs));
dt1start<=dt2end&&dt1end>=dt2start;
dict(__kwargtrans__({form:form}));
export var new_loop=asyncio.new_event_loop();
var http=httplib2.Http();
dfy.plot();
var l=list(x);
export var numpy_default_rng=numpy.random.random.__self__;
var request=requests.py_get(url);
print(df);
var c=np.vectorize(d.py_get)(a);
var a=np.random.randint(10,__kwargtrans__({size:10}));
p.join();
pool.map(find_inter,product(ent.shape,collidable.shape));
print(i+-+i);
instance.__dict__[self.prop].__get__(instance,owner);
f.write(z.read(icon[1]));
var l1=f1.readline();
var a=[1,1,1,2,2];
self._stream=BytesIO(self._body);
var f2=pl.figure(2);
df[[0]];
export var descend_list=[];
self.current+=node.id;
result.add(path);
var next_item=self.queue.py_get(__kwargtrans__({timeout:15}));
export var symbolList=map(Dummy,range(numEquations));
var C=np.empty(A.shape[0]*2,__kwargtrans__({dtype:A.dtype}));
var groups=[];
pl.plot(xd,piecewise_linear(xd,...p));
print(A.dtype);
d4.py_setdefault(k,0);
doc.remove(e);
print(NewList[0]._data);
len(r);
var strip_list=map(str.strip,lines);
var encoded=json.dumps(obj);
log4j.logger.org.eclipse.jetty=WARN;
sck.send(py_next(locker));
true;
self.hide();
pairs+=recursion(value,new_base);
f.truncate();
var G=function(){var __accu0__=[];for(var [_,x]of groupby(L,function __lambda__(x,c){if(typeof c=="undefined"||c!=null&&c.hasOwnProperty("__kwargtrans__"))var c=count();return py_next(c)-x}))__accu0__.append(list(x));return py_iter(__accu0__)}();
app;
var c1=pycurl.Curl();
var total=0;
sm.ratio();
main();
result.add(k);

var X_=poly.fit_transform(X);
var c_float_p=ctypes.POINTER(ctypes.c_float);
var Y=np.array([2,0,1,1]);
var A=np.dot(X0.T,Y0);
main();
var x=np.random.randint(xmin,xmax,ndata);
var d=pickle.load(filehandler);
dictionary.py_setdefault(realName,dict({}))[falseName]=position;
var g=Graph.Lattice([10,10],__kwargtrans__({circular:false}));
bbbb;
export var hildonize_window=_null_hildonize_window;
player.play();
var e=Entry(root);
print(message);
var result=str(time.time());
loop.run_until_complete(my_app());
CustomerAddress.objects.filter(__kwargtrans__({customer_id:self.id}));
var array=[1,2,4,5,4,5,6,7,2,6,-9,6,4,2,7,8];
var s=f.read(100);
var bins=np.linspace(-2,2,101);
var block=f.read(4096);
var min_y=np.nanmin(rot_points.__getitem__([tuple([0,null,1]),1]),__kwargtrans__({axis:1}));

export var f_line=py_next(f);
var request=urllib.request.Request(url);
var two=models.CharField(__kwargtrans__({max_length:255}));
yaml.add_representer(OrderedDict,ordered_dict_presenter);
x+5;
self.correct_response=correct_response;
test(a);
var fp=open(filename);
self._listener.stopListening();
sys.exit(1);
var code_out=StringIO.StringIO();
signals.post_syncdb.connect(init_data);
tocrawl.add(link);
self.width=event.width;
code.interact(__kwargtrans__({local:locals()}));
print(A.index(l));
py_next(cr);
var out=np.empty(tuple([len(x_lattice),2]),__kwargtrans__({dtype:float}));
print(highscores);
attr;

var original_rows=np.asarray([[1,0,1],[0,0,0],[1,0,0]]);
self.write(value);
var ax=fig.add_subplot(111);
var img_hsv=color.rgb2hsv(img_color);
linecache.cache[L.__code__.co_filename];
reactor.listenTCP(PORT,factory);
export var SL=sorted(function(){var __accu0__=[];for(var [i,x]of enumerate(L))__accu0__.append(tuple([x,i]));return py_iter(__accu0__)}());
var ys=np.random.rand(20);
var tree=QtGui.QTreeView();
screen.blit(user_text,text_rect);
df1.shape;
var results=p.imap(f,jobs);
var label=tk.Label(window,__kwargtrans__({text:id}));
show(__kwargtrans__({block:false}));
var queryset=Subscription.objects.all();
var foo=_bar.__enter__();
var roots=set();
var __left0__=plt.subplots(__kwargtrans__({figsize:tuple([8,6])}));var f=__left0__[0];var ax=__left0__[1];
nb.index(nb.select());
export var dataDict=json.loads(data);
var py_values=json.load(jsonFile);
print(doc.xml.web.total.string);
np.array(list(fread(fname,cond)),__kwargtrans__({dtype:np.float64}));
var lst=function(){var __accu0__=[];for(var i of range(0,len(data),2))__accu0__.append(tuple([data[i],data[i+1]]));return __accu0__}();
py_default();
export var stefan=[];
self._data.py_pop(value);
warnings.showwarning=warn_with_traceback;
df;
var b_set=set(b);
passthrough;
print(car);
export var B_r=B.ravel();
self.uniqueProps(function __lambda__(song){return song.album});
var iterator=gen(10);
is_invertible(a);

print(rows[idx]);
export var oldfig=plt.figure;
var line=lines[i];
_vim(fname,__all__);
fout.close();
z[-1];
[8,1,5,9];
var ind=np.argmax(counts);
var j=np.arange(len(new_x));
var fig=pyplot.figure();
observer.start();
print(soup);

var n=len(pd.read_csv(filename))+1;
np.linalg.norm(xyz-roi,__kwargtrans__({axis:1}))<radius;
print(line);
export var z_scattered_smooth=fun_smooth(x_scattered,y_scattered);
export var RGB=[0,0,0];
var queryset=tuple([UserProfile.objects.all()]);
var P1Sum=P1Channels.sum(__kwargtrans__({axis:1}));
var c=CurrencyRates();
export var sorted_permissions=sorted(permissions,__kwargtrans__({key:permissions_key}));
ans.append(k);
var d=dict({});
store.close();
var Base=declarative_base();
x+y;
np.random.seed();
d[b]=a.__getitem__([tuple([0,null,1]),i]);
py_new.__dict__.py_update(old.__dict__);
var ser=serial.Serial(SERIAL_PORT,9600);
list.__init__(self,...args);
var d=keybased_defaultdict(function __lambda__(x){return len(x)});
area.show();
password.send_keys(Keys.RETURN);

var __left0__=wx.DisplaySize();export var dw=__left0__[0];var dh=__left0__[1];
var query=parse_qs(u.query);
export var prev_item=resultList[i-1][-1];
print(millis);
var newlist=list(filter(filtah,test_list));
self._cond.release();
f.close();
flipper.pack();
rdata.append(sock.recv(MAX_PACKET));
var char=ascii_lowercase[ascii_lowercase.index(char)+1];

image;
serve(request,path,settings.PRIVATE_MEDIA_ROOT);
var a=py_iter(iterable);
var py_name=models.CharField(__kwargtrans__({max_length:50}));
var A=np.random.randint(2,__kwargtrans__({size:tuple([n,n])})).astype(np.int8);
self.setTopLevelWindow();
var tot=str(int(pri)+int(sec));
p.start();
export var bucket_list=bucket.list();
readdir.argtypes=[c_dir_p];
self.count=0;
args.push_back(arg);

process(lines);
export var new_o=copy.deepcopy(o);
deleteL.__getslice__(write_i,null,1);
print();
threadA.join();
var neighbors=get_neighbors(x,y,img);

0;
var d=float(requests.py_get(realtime_url).text);
var g=Foo.Instance();
self.depth+=1;
var counter=0;
export var a_test=Test();
py_next(c);
plt.plot(dist_space,kde(dist_space));
num_converted[0]+=1;
tuple([tuple([])]);
export var amap=[];
var conv=locale.localeconv();
sd.SetSecurityDescriptorDacl(1,dacl,0);
var answer=set();
export var upper_red=np.array([180,255,255]);
request.user=user;
var con=psycopg2.connect(conn_string);
var a=SomeClass();
var offset=df1.py_values.__getitem__([tuple([0,null,1]),-1]);
var s=np.zeros(p.size,p.dtype);
var data=stream.read(CHUNK2);
os.close(fd);
var app=QApplication(sys.argv);
export var axF=plt.subplot(gs1.__getitem__([0,tuple([0,null,1])]));
sys.stdout.py_name;
imp.acquire_lock();
var i=i+1;
U.append(temp);
self.output_queue=output_queue;
var __left0__=tuple([np.mean(a),np.std(a)]);var mean=__left0__[0];var sigma=__left0__[1];
export var firstzero=(FS.__getitem__([tuple([0,null,1]),0])==0).sum();
lst.append(el);
df_bad_idea;
y>x?y-x:0;
x.shape=tuple([x.shape[0],-1]);
var __left0__=os.path.py_split(os.path.abspath("./P2JSnippets.py"));var d=__left0__[0];var f=__left0__[1];

var b=list(b);
c.append(i);
self.trd.start();
os.chdir(curpath);
line(5,10,20,__kwargtrans__({finish:true})).take(inf);
var count=count+1;
export var m4=deepcopy(mat);
test;
a(0,5)(0,1);
Math.pow(base,power)==num;
var root=tree.getroot();
true;
self.__ntrue+=1;
f.__getitem__([tuple([4,10,1]),tuple([0,null,-1])]);
export var serving_url=models.URLField();
tuple([new set([0])]);
export var iters=function(){var __accu0__=[];for(var i=0;i<4;i++)__accu0__.append(list(range(i,5)));return __accu0__}();
var v=Math.floor(self.value/2);
self.zip.close();
tornado.autoreload.start();
var word=word.Documents.Open(doc_path);
output_dict.py_setdefault(key,[]).append(value);
adate;
var app=Flask(__name__);
fields.GenericRelation(Faves);
print(cur.description);
index[s_word]=index.py_get(s_word,[])+[word];
print(test);
var result=[];
mats.append(mat);
var session=tf.InteractiveSession();
infile.seek(chunk_end);
export var m_text=ndb.TextProperty();
print(df);
print(result);
self.con.connect();
var endings=function(){var __accu0__=[];for(var v of hablar.py_values())__accu0__.append(v.__getslice__(len(root),null,1));return __accu0__}();
var it=py_iter(py_items);
DictAdditionalValueWrapper(d,self.specialKey,self.specialValue);
df.iloc.__setitem__([0,0],99);
array_crator(a,tuple([9,17]));
var py_values=function(){var __accu0__=[];for(var k of sum_value_keys)__accu0__.append([k,item[k]]);return dict(__accu0__)}();
response.set_data(minify(response.get_data(__kwargtrans__({as_text:true}))));
var cap=cv2.VideoCapture(input_rtsp);
pickle.dumps(d);
var columns=(a!=0).sum(0);
sorted(set(fill(m)));
var x=A(1);
emp.user_permissions.add(permission);
var p=c.getparent();
var t=t.__getslice__(0,null,-1);
clf.fit(data);
var arr=np.delete(arr,0,__kwargtrans__({axis:0}));
signals.post_save.connect(Revision().send_email,__kwargtrans__({sender:Revision}));
var x=np.linspace(0,4*np.pi,100);
var __except0__=DistributionNotFound(req);__except0__.__cause__=null;throw __except0__;
thread.put_message(message);
export var hcpv=np.array(function(){var __accu0__=[];for(var r of g_arr)__accu0__.append(function(){var __accu1__=[];for(var [p,s]of r)__accu1__.append(cpt_hcpv(p,s,poro,sw));return __accu1__}());return __accu0__}());
frame.pack();
bool(dict({}));
print(df_resampled);
var result=Markup(result);
export var X_centered=X-np.mean(X,__kwargtrans__({axis:0}));
print(words);
export var stringValue=lst[1];
th.start();
out.append(cust+sub[0]);
var p=set(function(){var __accu0__=[];for(var [x,y]of combinations_with_replacement(listgen(),2))__accu0__.append(x+y);return py_iter(__accu0__)}());
var indices=function(){var __accu0__=[];for(var c of list2b)__accu0__.append(list1.index(c));return __accu0__}();
export var offset_y=function __lambda__(xy){return tuple([xy[0],xy[1]-.5])};
tuple([sum(x)/l,sum(y)/l]);
surface.write_to_png(buffer);

export var run_thread=Thread(__kwargtrans__({target:run,args:tuple([args.arg1,args.arg2])}));
do_stuff(e);
os.execv(path_to_executable,args);
var out=[];
BadRows.add(rowID);
var __left0__=os.path.py_split(filename);var dirname=__left0__[0];var filename=__left0__[1];
export var dtype=data.dtype;
test_module_n.py;
excluded_numbers.add(a[j]);
var ts=time_uuid.TimeUUID(__kwargtrans__({bytes:my_uuid.bytes})).get_timestamp();
var __left0__=line.py_split();var k=__left0__[0];var v=__left0__[1];
logger.addHandler(handler);
self.listOfVideo=[];
var __left0__=Phi.shape;var p=__left0__[0];var k=__left0__[1];
sorted(data,__kwargtrans__({key:len,reverse:true}));
deleteSOME_VARIABLE.__getslice__(0,null,1);
np.array(function(){var __accu0__=[];for(var axs of x2_Kaxs_1.flat)__accu0__.append(ax2_cid[axs]);return __accu0__}(),__kwargtrans__({dtype:object})).shape;
alpha.paste(circle.crop(tuple([rad,0,rad*2,rad])),tuple([w-rad,0]));
final_str;
plt.axvline(mode);
print(df);


self.event.wait(1);
print(out);
dist.append(d);
socket.send(txt);
page_obj;
export var relationships=docx.relationshiplist();
var start_time=time.time();
var lens=np.array(function(){var __accu0__=[];for(var item of v)__accu0__.append(len(item));return __accu0__}());
var r=[false,true]*Math.floor(n/2)+[true];
var __left0__=expr.as_numer_denom();var n=__left0__[0];var d=__left0__[1];
locale.nl_langinfo(locale.DAY_1+x);
export var newfiles=check_for_new_files();
f.write(data);
print(i);
ch.setLevel(logging.ERROR);
sys.exit(1);
self.insert(len(self),value);
export var states=[0,2];
self[k]=data[k];

print(min(s),min(s,__kwargtrans__({key:str.lower})));
output;
bins.py_values.codes;
var reply=error.fp.read();
export var inactive_objects=models.Manager();
var elapsed_time=time.time()-start_time;
parser.parse(input,__kwargtrans__({tokenfunc:get_token,debug:0}));
results[-1]=tuple([letter,results[-1][1]+1]);
self.choice;
result;
export var main_group=parser.add_mutually_exclusive_group();
var ordered=function(){var __accu0__=[];for(var h of tails)if(!__in__(h,num_heads))__accu0__.append(h);return __accu0__}();
max(function(){var __accu0__=[];for(var t of sorted(hours))if(t<=now)__accu0__.append(t);return py_iter(__accu0__)}());
var a=Foo();
population.difference_update(some_list);
var module_ok=true;
downloaded+=q.py_get();
var idxs=(rising|falling).nonzero()[0];
print(df);
A+ones(tuple([4,1]));
print(res);
a.y=2;
var http=credentials.authorize(http);
var d=dict({});
export var nd=[0]+list(np.where(np.diff(numbers)>15)[0]+1)+[len(numbers)];
os.write(fd,someStuff);
p.join();
export var iargs=py_iter(args);
var proc=Process(__kwargtrans__({target:make_flaky_call,args:tuple([q])}));
var cursor=connection.cursor();
cls._osx_get_modes();
self.callback();
var c=np.array(tuple([-1,-1]));
var time=0;
export var logging_handler_err=logging.StreamHandler(sys.stderr);
var x2=max(x_normalised)+1;
sys.stdout.write(frm.tostring());
self.data=data===SENTINEL?self.default_data():data;
print(b);
false;
A[1]=previous_A[0];
rlappend(theDict[listItem]);
var a=0;
var diff=len(list1)-len(list2);
var row=[];
var arr2=array.__getitem__([tuple([split_idx,null,1]),tuple([0,null,1])]);
answer[pk][sk]=L[i][1];
cursor.execute(query);
self.trayIcon.show();
var csv_writer=csv.writer(output);
tuple([]);
var py_keys=random.sample(list(d),10);
var Y=np.array([2,0,1,1]);
self.verify();
var hist=pd.Series(y,x);
var results=dict({});
var email=db.Column(db.String(120),__kwargtrans__({unique:true}));
var vertices=numpy.empty(1E3,__kwargtrans__({dtype:vertex_dtype}));
var stdout=StdOut();
export var json_posts=json.dumps(list(posts));
var Z=X.copy();
export var last_line=get_last_lineprocessed();
var todayDate=datetime.date.today();
100*self.h;
tuple([item.pk,item.__unicode__()]);
var b=a.reshape(tuple([5,10]));
h;
var basename=os.path.basename(pathname);
threading.Thread(__kwargtrans__({target:input_func,args:tuple([p,lq])})).start();
numpy.lib.stride_tricks.as_strided(stacked,shape,strides);
var mat=ax.matshow(a,__kwargtrans__({cmap:cmap,vmin:-1,vmax:N-1}));
export var bot=ttk.Treeview(Tkinter.Tk());
export var points_left=np.copy(points_center);
self.assertEqual(mocked.yeah_im_not_going_to_run.call_count,1);
export var trglen=len(trgtext);
temp.append(tuple([v[2]]));
export var outproj=osr.SpatialReference();
random.shuffle(start);
url_dict;
self.x=x;
var last=item[1];
cache[hash]=object_to_cache;
var location=models.ForeignKey(Location);
index+=1;
strcpy(greeting,hello);
COMMENT;
var frame=previous_trace[0];
answer.add(r);
print(avgs);
i+=1;
var new_x=new_x.ravel();
r.__init__(cols);
var numbers=py_iter(list(range(10)));
id(true);
var counter=Counter(s);
var key=max(scores,__kwargtrans__({key:scores.py_get}));
var __left0__=os.path.splitext(f);var fn=__left0__[0];export var fext=__left0__[1];
var b=a[np.lexsort(a.T)];
var config=ConfigParser.ConfigParser();
var seconds=(now-midnight).seconds;
var ic=ic.filter(ImageFilter.BLUR);
export var zs=np.array(function(){var __accu0__=[];for(var [x,y]of zip(np.ravel(X),np.ravel(Y)))__accu0__.append(f(x,y));return __accu0__}());
start+=1;
conn.close();
print();

var results=Pool.map(do_work2,arglist);
var pos=np.where(np.diff(mask))[0]+1;
print(module_name);
var sp=nx.shortest_path(G,tuple([0,0]),tuple([9,9]));
method_to_be_executed_in_case_of_exception_or_pk_is_false();
var value=models.FloatField();
[];
ff.seek(-7,1);
a?b:c;
cls._threadmap[thread.get_ident()];
response;
var args=parser.parse_args();
var S=pd.to_datetime(df.dt);
var a=A();
export var r_avg=sum(r_vals)/len(r_vals);
namespace.py_clear();
self.data=data;
count+=1;
export var insert_ids=[];
print(tuple([test,lookup[test]]));
horse;
gopher;
np.__version__;
export var stdout_output=proc.communicate(script)[0];
original_save(self,...a,__kwargtrans__(kw));
var tmpdir=tempfile.mkdtemp();
shift+=len(result)-sigfig;
pl.figure(__kwargtrans__({figsize:tuple([7,7])}));
export var dicC=dicA.copy();
var obj=A.__new__(cls,data);
crypts.append(mask);
var __left0__=tuple([y,x+y]);var x=__left0__[0];var y=__left0__[1];
text2html(self.description);
var pid=os.fork();
var s=np.vstack([np.zeros(tuple([1,v.shape[1]])),v.cumsum(0)]);
sys.path=oldpath;
db.session.add(admin);
var header=my_dataframe[[i]].astype(str).columns.py_values;
var start=a.index(item,start+1);
py_next(line_iter);
min_dist[i]=np.min(function(){var __accu0__=[];for(var line of lines)__accu0__.append(point.distance(line));return __accu0__}());
var __left0__=s.find_longest_match(0,len(s1),0,len(s2));var pos_a=__left0__[0];var pos_b=__left0__[1];var size=__left0__[2];
1+2;
my_func();
var y=tf.nn.softmax(tf.matmul(x,W)+b);
var z=exp(x);
axs[1].plot(days,np.random.random(len(days)));
file2freq.__setitem__([c,d],file2freq.__getitem__([c,d])+1);
cout.__setitem__([tuple([0,null,1]),-1],0);
var out=numpy.empty(rows*cols,__kwargtrans__({dtype:broadcasted[0].dtype}));
var res=res.reset_index();
export var subtree=dict(function(){var __accu0__=[];for(var n of leaves)__accu0__.append(tuple([n,[n]]));return py_iter(__accu0__)}());
var files=os.listdir(dir);
print(list(literal_eval(line)));
gmm.delta+=1;
word.__getslice__(start,stop,step);
var buf=in_file.readlines();
rect(names,names,.9,.9,__kwargtrans__({color:some_colors,x_range:names,y_range:names}));
executor.submit(call,cmd,__kwargtrans__({stdout:outputfile,stderr:STDOUT}));
clf.tree_.children_right;
v.f2();
top.mainloop;
writer.newLine();
clf.tree_.children_left;
export var sorted_records_array=records_array[idx_sort];
var distance=[[[0]*n]*n]*n;
export var firefox=webdriver.Firefox();
init_logging();
var a=gen();
export var mov_avg=np.bincount(_,__kwargtrans__({weights:avg_val.ravel()}));
var __left0__=math.modf(item[2]);var seconds=__left0__[0];var minutes=__left0__[1];
var full_arr=full_arr[sort_idx];
var a=[1,9,12];
var lines=[];

_cache[key];
var buffer=StringIO.StringIO();
var app=Flask(__name__);
learner.train(features,labels);
out;
var item=L[i];
var fig=pylab.figure();
var fig=plt.figure();
var c=np.concatenate(tuple([a,b]));
y.byteswap();
var grp=(isone!=idx.to_series().diff().eq(1)).cumsum();
smudge_filter_openssl;
readline.read_history_file(historyPath);
net.reset();
os.read(self.STDIN_FILENO,4096);
print(inner);
rotatedRect.points(rect_points);
var ax1=fig.add_subplot(111);
var objects=SoftDeleteManager();
py_iter(self._s);
var results=[];
var __except0__=StopIteration;__except0__.__cause__=null;throw __except0__;
var my_dict=dict(zip(b,list(range(len(b)))));
value;
ipython;
yertle.goto(point);
print(time.ctime(future));
var count=count+1;
var bucket_list=bucket.list();
var digits=function(){var __accu0__=[];for(var i of str(input))__accu0__.append(int(i));return __accu0__}();
print(n);
var my_app=Flask(__name__);
value;
var last_name=CharField();
i+=1;
Depends(test,main);
print(s.recvfrom(65565));
synsets.append(wn.synsets(lemma,__kwargtrans__({pos:wn_tag}))[0]);
self.treeview=gtk.TreeView(self.tree_filter);
[0,1]<2;
var app=QApplication(sys.argv);
U[U<2]=np.nan;
export var url_rule=request_ctx.request.url_rule;
export var extra_compile_args=[];
var r=requests.py_get(source);
a_map[A_object.string]=A_object;
draw();
optionN;
print(clf.components_.__getitem__([1,tuple([0,null,1])]));
print(sheet_rect.height,sheet_rect.width);
abs(area/2);
var donecounter=0;
[];
var x=A.tocoo();
container[index];
export var dyncodes=query.fetch(1);
py_keys.extend(key_list);
[];
tar.add(full_dir);
export var SystemTime=SYSTEMTIME();
var profile=webdriver.FirefoxProfile();
show();
rows.loc[rows.time>first_purchase_time];
print(np.allclose(original(a),mean_around(a)));
r.__setslice__(4,null,2,[false]*((n+1)/2-2));
sleep(5);
export var lon2=loc2[0];
var v2=np.concatenate(tuple([v,v]));
var x=x-f(x)/fprime(x);
t.create();
var ans=network.receive();
var grouped=frame.groupby(frame.columns[0]);
var __repr__=function __lambda__(self){return self._tuple.__repr__()};
var __left0__=m(lons,lats);var x=__left0__[0];var y=__left0__[1];
export var long_path_name=buffer.value;
plt.gca().add_artist(self);
frame.pack();
var styles=getSampleStyleSheet();
array.__getitem__([np.arange(N),index]);
var d=d[col];
modules.append(imp.load_module(m,f,filename,desc));
setup.py;
export var content_json=json.loads(r.content);
var rows=csv.reader(infile);
get_user_model().objects.none();
export var idxInf=np.isnan(a[item]).nonzero();
out.release();
var Gvalue=someoperation(Gnodes);
exit(2);
var __left0__=np.meshgrid(x,y);var n=__left0__[0];var m=__left0__[1];
var tmp=tempfile.NamedTemporaryFile(__kwargtrans__({delete:false}));
len(solns7);
var reader=avro.datafile.DataFileReader(input,avro.io.DatumReader());
eval(expr);
var r2=list(range(0,end_day+1));
self.do_template_based_capitalization(mapping);
var __left0__=mpl.xticks(xt,vWidth,__kwargtrans__({fontsize:9}));export var locs=__left0__[0];var labels=__left0__[1];
g[a==0]=255;
p.map(walk,[0]*10);
var id=serializers.UUIDField();
histogram();
py_typeof(pdsDF);
export var pub_dict=dict({});
export var res_females=pool.map_async(fun_f,females);
export var creative_url=models.URLField(__kwargtrans__({max_length:200}));
l2.py_sort();
var obj=dict({});
m[np.isnan(m)]=m.T[np.isnan(m)];
np.r_.__getitem__([tuple([1,10,1]),15,17,tuple([50,100,1])]);
[tox];
var __left0__=wavf.read(in_wav);var fs=__left0__[0];export var in_data=__left0__[1];
decoded;
var f=open(filename);
var output=[];
self._lock.release();
var pix=QtGui.QPixmap.fromImage(img);
tuple([tuple([14,[2,7]])]);
var ws=wb.active;
export var https_request=http_request;
topic_bundles.append(bundle);
something_awesome();
tuple([q,r]);
plaintext;
var arr=img.load();

var ranked=[];
var py_keys=list(dict.py_keys());
var __left0__=process.communicate();var output=__left0__[0];var err=__left0__[1];
len(bytes);
var message=e.args[0];
map(accumulate,list(range(20)));
merged.append(x);
var d=collections.defaultdict(int);
file_list.append([i,time.ctime(a.st_atime),time.ctime(a.st_ctime)]);
+webapps;
_iterencode(o,0);
pager(ofh.read());
var fd=msvcrt.open_osfhandle(handle.value,0);
false;
Main();
var a=np.arange(100);
self.py_items.append(item);
self._val;
var __left0__=np.percentile(x,[75,25]);export var q75=__left0__[0];export var q25=__left0__[1];
export var qs_sorted=list();
var __left0__=plt.subplots();var fig=__left0__[0];var ax=__left0__[1];
myserializer;
var newdata=obfuscate(data).decode();
var root=Tk();
rf.fit(X,y);
print(d);
zipfile1.writestr(zipi,filedata);
var idx=b.index.union(a.index);
var g=gen();
var x=sum_list.__getslice__(0,i+1,1);
new_stepListA.append(pathList[n][0]);
var d=hashlib.md5();
export var img_thresholded=cv2.inRange(img,tuple([60,60,60]),tuple([140,140,140]));
sizer.Add(btn,0,wx.ALL|wx.CENTER,5);
bar();
export var typeB=acc.accounttypeB;
var client=MongoClient();
im;
getattr(self.original,py_name);
export var indc=np.where(np.all(arr==0,__kwargtrans__({axis:0})))[0];
asyncio.set_event_loop(loop);
json.JSONEncoder.py_default(self,obj);
print(output);
self.x_values=np.asarray(list(xdict.py_keys()));
var cols=list(df.columns);
self.my_enter();
var queryset=User.objects.all();
vscrollbar.config(__kwargtrans__({command:canvas.yview}));
plt.title(title);
print(list(split_text(c)));
args.py_sort();
OriginalShared(target,source,env);
var divider=make_axes_locatable(ax);
var x=NP.linspace(0,1,n);
var t2=function __lambda__(){return list(map(str.strip,hello))};
var __left0__=tuple([tuple([a]),tuple([a])]);var b=__left0__[0];var c=__left0__[1];
export var brown_count=len(set(list_of_brown_items).difference(list_of_all_items));
var i=py_next(matches,0);
var key=self._redis_key();
var lis=list(range(1,11));
a[ix]+=py_values[i];
k.tap_key(k.tab_key);
self.download_image(self.creative_url);

node.parents.add(prev_node);
dataset_array.append(item);
export var prevMatrix=matrixDict[thisC.index(max(thisC))];
var prevMatrix=matrixDict[thisR.index(max(thisR))];
self.queue=queue;
var results=list(pool.imap_unordered(foo_pool,list(range(10))));
2*x;
pygame.init();
export var my_class=example.MyClass();
export var narrow=wide;
var lists=[list_a,list_b,list_c,list_d,list_e];
var s=pd.Series(np.arange(len(df)),__kwargtrans__({index:df.time}));
export var __setattr__=dict.__setitem__;
export var analyzer=vect.build_analyzer();
var c=SomeClass(5);
var x=np.random.random(50);
var data=np.asarray(img.getdata()).reshape(img.size);
fp.close();
var attr=getattr(cls,py_name);
var ax=plt.gca();
var port=8080;
var B=2;
self.n=n;
var d=np.diag(a.A1);
var __left0__=cap.read();var ret=__left0__[0];var frame=__left0__[1];
export var Xtest=vect.transform(new_documents);
object.__le__(self,other);
Response(serializer.errors,__kwargtrans__({status:status.HTTP_400_BAD_REQUEST}));
bad.getparent().remove(bad);
set(string)>=set(substring);
var app=Flask(__name__);
print(data);
do_something(obj);
list(find_consecutive(my_list,1));
var handler=logging.StreamHandler(log);
var current=time.time();
var my_data=[];
show(pie_chart);
var args=self.__build_command__(cmd);
C.__setslice__(0,null,null,np.dot(A,B));
var data=yaml.safe_load(f);
fn();
df;
df[df.C>df.C.mean()];
result;
self.send_header(k,v);
var s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);
g.ax_marg_y.legend_.remove();
wx.EVT_BUTTON(self,b.GetId(),self.OnDaemonize);

circle(res,center,radius,color,5);
str(num)==str(num).__getslice__(0,null,-1);
new set([new set([usercontent.thing_b])]);
var output=[0]*len(x);
self.queue.put_nowait(result);
notifier.loop();
var letters=list(string.ascii_letters);
export var data_cluster=KMeans(__kwargtrans__({n_clusters:5}));
print(new_grammar.productions()[2091]);
on_done();
row[8]=row[8].__getslice__(0,-1,1);
var __left0__=np.meshgrid(xi,yi);var X=__left0__[0];var Y=__left0__[1];
print(i);
export var put=deepcopy(tup);
len(brown_tagged_sents);
dict.py_update(dict([[cut2,x]]));
print(len(path),len(path_ext));
clientSocket.noTcpDelay(py_true);
var data=urllib.parse.urlencode(py_values);
httpretty.enable();
len(self.getData());
i+=1;
var body=doc.xpath(path)[0];
clf.fit(yourdata);
cmath.sqrt(complex(0,0))==complex(0,0);
var length=len(sublist);
export var asciiz_start=struct.calcsize(format.__getslice__(0,pos,1));
self.keep_interrupt=true;
id|py_name;
var xy=50*np.random.random(tuple([num,2]));
var end=len(array)-1;
var n=n-1;
var r=s.send(p);
i+=1;
self.format(...other);
result_df;
export var PAGE_HEIGHT=defaultPageSize[1];
print(line);
export var rowconvol=a.__getitem__([tuple([1,-1,1]),tuple([0,null,1])])+a.__getitem__([tuple([0,-2,1]),tuple([0,null,1])])+a.__getitem__([tuple([2,null,1]),tuple([0,null,1])]);
var x=math.radians(i)*math.cos(math.radians(i));
export var page2=input2.getPage(0).rotateCounterClockwise(90);
np.prod(x.shape)*x.itemsize;
var result=set(elements);
var info=os.stat(filename);
var res=scipy.integrate.quad(integrand,0,math.pi,[w,p]);
printByLine(countsSortedAlphabetically(words,__kwargtrans__({reverse:true})));
tuple([HELP,DESK-IT-Support]);
var area=SelectField(__kwargtrans__({coerce:int}));
dict;
var csv_writer=csv.writer(testfile);
tuple([5,6,7]);
D.__getitem__([n,s,x]);
var p=abs(scipy.stats.norm.ppf((1-pred_error_level)/2));
var r=random.uniform(r1,r2);
var result=list(flatten(data));
var wr=w.rowsBetween(-sys.maxsize,-1);
expr.integrate(tuple([x,-s.pi,s.pi]),tuple([y,-s.pi,s.pi]));
var time=time.strftime(DATETIME_FORMAT);
export var mysocket=socket.socket(socket.AF_INET,socket.SOCK_DGRAM);
var base=get_datetime(base_date);
var answer=function(){var __accu0__=[];for(var sublist of L)__accu0__.append(function(){var __accu1__=[];for(var el of sublist)__accu1__.append(2*el);return __accu1__}());return __accu0__}();
export var ins=example.insert().py_values(__kwargtrans__({expire:tomorrow}));
len(self.m);
var t=time();
seen.add(t);
var py_reversed=line.__getslice__(0,null,-1);
export var widemap=dict(function(){var __accu0__=[];for(var x of zip(normal,wide))__accu0__.append(tuple([ord(x[0]),x[1]]));return py_iter(__accu0__)}());
var value=get_array(value);
print(dwarf);
var b=b[~np.isnan(a)].astype(int);
var obj=SomeClass();
f.__name__;
print(t);
BOOST_PYTHON_MODULE(hello);
var http=credentials.authorize(httplib2.Http());
var __left0__=tuple([[],[]]);var n=__left0__[0];var bins=__left0__[1];
write(n,pos+1,op,cl+1);
print(2,time.time());
_tester;
self._od=collections.OrderedDict().fromkeys(py_values);
var bp=plt.boxplot(data,__kwargtrans__({whis:[5,95],showfliers:true}));
export var avg_dists=numpy.average(dists);
sio.seek(0);
var height=t.winfo_height();
collatz(number);
var l=len(rearranged_data);
t/=np.linalg.norm(t);
print(config_root.server.port);
tuple([start_urls,extra_domains,regexes]);
exceptionArchive.write(newData);
print(config[0].expiration);
var aa=json.loads(j,__kwargtrans__({object_hook:Struct}));
set_success();
var a=b;
var B=np.random.randint(M,__kwargtrans__({size:N}));
print(item_due.item.ref_id);
export var some_node=tree.getroot().getchildren()[1];
dialog.destroy();
print(mytext.capitalize());
var __left0__=plt.subplots(len(areas),1,__kwargtrans__({figsize:tuple([5,45])}));var fig=__left0__[0];var axs=__left0__[1];
h.funcA();
library.remove(self);
var Session=sessionmaker(__kwargtrans__({bind:engine}));
self.active_writer_lock.release();
export var frameH=256;
combination.__setslice__(p,null,null,list(range(combination[p]+1,combination[p]+2*(r-p),2)));
var p=len(prefix);
d[1]=c;
var num=sorted(function(){var __accu0__=[];for(var i=0;i<n;i++)__accu0__.append(int(eval(input())));return __accu0__}());
var successed=0;
unique_.append(sub.tolist());
frames.append(data);

var y=scipy.real(scipy.ifft(Y));
var counter=collections.Counter();
traceLock.Unlock();
export var locest=optimize.fmin(pareto_ks,rvsmin*.7,tuple([rvs]));
print(id(item));
self.q.put(item,__kwargtrans__({block:true}));
var queryset=User.objects.all();
UserList.UserList.__getitem__(self,idx);
logging.setLoggerClass(MyLogger);
var connection=pool.get_connection(command_name,__kwargtrans__(options));
deletemyResult.__getslice__(0,null,1);
tuple([r,g,b]);
self.record=dict({});
var axis=[4,4,1];
self.database[py_name]=old_value;
var sentence=f.readline();
views.py;
self.p*=1-regularization;
var layout=bokeh.layouts.gridplot([[p],[color_select]]);
cur.close();
i+=4;
export var mod1=load_module(py_name,...foundmod);
dis.dis(Binary);
pygame.display.set_mode.__doc__;
var a=MyClass(7);
var reader=csv.reader(lines.splitlines());
main.object1[1];
Excel.Quit();
var p=psutil.Process(os.getpid());
counts[x]+=1;
takefrom.difference_update(s);
var item=yourList[i];
export var order_expressions=function(){var __accu0__=[];for(var i of company_ids)__accu0__.append((Company.id==i).desc());return __accu0__}();
var a_sum=np.sum(a,__kwargtrans__({axis:0}));
var C=C.reshape(-1,4);
process_request();
var order=np.abs(np.int(order));
args[key]=value;
print(row);
var py_name=py_name.strip();
form.process();
ukol1.SummaryFormula(someSummaryFormula);
var background_label=Label(top,__kwargtrans__({image:filename}));
var __left0__=np.random.random(tuple([2,1E3]));var x=__left0__[0];var y=__left0__[1];
print(module.__file__);
export var nonZeroRows=(ANOVAInputMatrixValuesArray!=0).sum(1);
token;
-sum(map(sum,self.a));
root.mainloop();
var size=struct.calcsize(fmt);
export var subjects=dict();
znylpx;
c.foo;
var bytes=map(ord,py_reversed(value));
var form=TeamForm(request.POST,__kwargtrans__({obj:team}));
ml.append(i);

var levels=np.array([p10,p50,p90]);
var n=10;
pickle.loads(pickled_value);
var py_keys=[];
LR.fit(X2.__getslice__(0,half,1),y2.__getslice__(0,half,1));
deleteself.obj_;
var __left0__=optimize.fsolve(pdiff,val,__kwargtrans__({full_output:true}));var root=__left0__[0];export var infodict=__left0__[1];export var ier=__left0__[2];export var mesg=__left0__[3];
var __left0__=parser.parse_args();var options=__left0__[0];var args=__left0__[1];
var line=process.stdout.readline();
resized_file.save(file_bytes,__kwargtrans__(save_opts));
tunnel._lport;
(function(){var __accu0__=[];for(var [a,_,_,d,_]of fiveTuples)__accu0__.append(a+d);return __accu0__})();
a*2;
dict([[k,function(){var __accu0__=[];for(var i of v)__accu0__.append(convert(i));return __accu0__}()]]);
Py_INCREF(pMyException);
tuple([i,i+len(small)-1]);
os.makedirs(dir);
out.close();
make_random(someArr);
multiply(a.ravel().__getitem__([tuple([0,null,1]),newaxis]),b.ravel().__getitem__([newaxis,tuple([0,null,1])]),out);
[head]+novowel(tail);
outputmapping;
export var d2_dict=defaultdict(dict);
var foo=pickle.load(f);
print(deriv_list);
print(un[cnt==cnt.max()]);
var r=[true]*n;
dirname(parse_object.path);
var myvalue=eval(py_name);
map(alpha_getter,image.getdata());
r;
tuple([value1,value2]);
print(len(G));
(self.end||datetime.now())-self.start;
export var confirmation_message=_(msg_template).format(order);
pool.close();
var m=re.match(p1,statement);
Wrapper();
my_list.py_sort();
temp.paste(image);
var result=[];
level+=1;
var l=[0]*4;
self.listWidget.addItem(item);
self._n_weights;
tuple([[5,6,7,8,9]]);
children.append(node.kwargs);
print(x/y);
var x=255;
pd.concat(retLst);
var form=ItemAddForm;
c.perform();
sys.argv.__setslice__(-1,null,null,glob.glob(sys.argv[-1]));
export var dfnum=df._get_numeric_data();

align_arrays(b);
parent.remove(child);
array(a,dtype,__kwargtrans__({copy:false,order:order}));
export var windows=[];
print(magicList);
var output=[];
var d=np.zeros(N);
var i=len(a)-2;
C()[1]=0;
self.reporter.on_close(self.stats,previous_stats);
sum(x,__kwargtrans__({dtype:float64}));
var path=path.py_replace(os.altsep,os.sep);
time.sleep(5);
atexit.register(self._exit);
input[mask];
dis.dis(a);
c.method_a();
f(...args,__kwargtrans__(kwargs));
export var appstats_LOCK_TIMEOUT=1;
var x=arange(0,2*pi,.01);
new set([new set([my_json])]);
print(py_name);
self.__dict__[decorator.py_name];
var drops=(N==np.diag(N)).sum(__kwargtrans__({axis:0}))>1;
print(canvas.max());
var columns=function(){var __accu0__=[];for(var column of cursor.description)__accu0__.append(column[0]);return __accu0__}();
df;
true;
fraction.setParseAction(function __lambda__(t){return t.numerator/t.denominator});
var reducedQs=self.get_query_set();
pickle.dumps(d,-1);
frm.Show();
names.append(row[0]);
var d=datetime.date.today();
len(results)==len(letter_pattern);
closedir.argtypes=[c_dir_p];
arr;
tuple([[-.5,0,.5,0]]);
var fig=plt.figure();
self._normalized;
var cols=[];
py_default();
var nd=numpy.array([-d[1],d[0]]);
hs.close();
self.combo();
wx.ListCtrl.__init__(self,parent,__kwargtrans__({style:wx.LC_REPORT}));
np.dot(inv_A,b);
var line=f.readline();
ax.plot(xvals,yvals);
print();
seconds+=1;
var n=int(round(error/.01));
plot(draw,img,xpxl1,ypxl1,rfpart(yend)*xgap,col,steep,dash_interval);
self.args=kwargs;
wrapped;
event.widget.config(__kwargtrans__({bg:color}));
export var immutable=frozenset(list(mutabledict.py_items()));
var counts=np.sin(np.linspace(0,np.pi,dates.size));
export var pdf_contents=get_pdf_contents();
false;
var browser=selenium.webdriver.Firefox(profile);
print(root.height());
print(foo.T);
var result_array=result[0];
export var date_tuple=email.utils.parsedate_tz(date_str);
var A=np.expand_dims(A,x);
temp_n+=1;
var description=db.StringProperty(__kwargtrans__({multiline:true}));
result.append(current.__getslice__(0,markerpos,1));
var img=ImageGrab.grab();
dir(builtins);
tuple([a.binaries]);
var attributes=function(){var __accu0__=[];for(var n of directory)if(!callable(getattr(cls,n)))__accu0__.append(n);return __accu0__}();
self.obj[frozenset(tuple([idx]))]=value;
export var y_data=x_data.dot(w).reshape(tuple([-1,1]));
text;
var m=np.exp(mu+Math.pow(sigma,2)/2);
add_job_callback();

py_items.append(item);
df1.columns=df1.columns.format();
var weekday=current_date.weekday();
var d=np.diff(a.flat[i]);
-1;
self.fileTextCtrl.SetInsertionPointEnd();
bin_+=1;
var a=set();
message.send();
searchB.py_update();
tuple([[4]]);
var t1=time.clock();
py_next(filter(my_criteria,e));
var result=expression.subs(symbols_vals);
var f=opener.open(req);
export var xybad=np.array(tuple([x[a.mask],y[a.mask]])).T;
mp.freeze_support();
time.sleep(5);
var __except0__=je;__except0__.__cause__=null;throw __except0__;
queue.put(result);
var client=Client(url);
print(path_list);
tuple([tuple([forms.BaseForm])]);
raw.append(str(mod.__dict__[key]));
mandel_surface.set_at(tuple([x,y]),color);
parentclass.__init__(self,...args,__kwargtrans__(kw));
var fig=plt.figure();
var temp=[];
var M=V.reshape(n,1,p)*V.reshape(1,n,p)*F.reshape(n,n,1);
var size=os.fstat(f.fileno()).st_size;
export var has_unknown_fields=set(attrs.py_keys())-set(self.fields.py_keys());
socket.setdefaulttimeout(5);
var profile=cProfile.Profile();
var __left0__=line.py_split();var word=__left0__[0];var count=__left0__[1];
print(data);
var r=f(i);
self.py_name=py_name;
export var wts=c_double*n(1,1,1);
item;
var reader=csv.reader(open(parameters_file),dialect);
var mean=cv2.mean(roi,__kwargtrans__({mask:mask}));
B.__setslice__(1,2,null,C);
output_list.append(list(record.py_values())[0]);
self.start();
null_ptr[0];
var self=cls();
tuple([0,subset1,subset2]);
var old_stdout=sys.stdout;
var n=0;
file_ptr.close();
print(testclass_instance.py_name);
export var character=myscene.GetCharacter(i);
var x=np.linspace(0,1E3,fs*1E3);
tuple([_NestedClassGetter(),tuple([ParentClass,self.__class__.__name__]),state]);
var x=np.ma.array(x,__kwargtrans__({mask:y==0}));
unittest.main();
export var course_id=forms.IntegerField();
patches[0];
export var spot_id=c.lastrowid;
print(self.size);
print(result);
print(self.obj.py_name);
var __left0__=tuple([slice(colidx,colidx+1),false]);export var colidx=__left0__[0];export var colslice=__left0__[1];
signed_url;
var __left0__=tuple([slice(rowidx,rowidx+1),false]);export var rowidx=__left0__[0];export var rowslice=__left0__[1];

5;
z.write(absfn,zfn);
a/b;
var menu=QtGui.QMenu(parent);
var foo=true;
sleep(1/25);
df;
var od=OrderedDict(py_items);
var py_reversed=line.__getslice__(0,null,-1);
application.manager.run();
5-+-+-+2;
var py_name=sa.Column(sa.String(50));
var __left0__=np.meshgrid(x,y);var xv=__left0__[0];var yv=__left0__[1];
var logger=logging.getLogger(__name__);
var __left0__=tuple([int(op1),int(op2)]);export var op1=__left0__[0];export var op2=__left0__[1];
testtest;
embedded_func();
var __except0__=StopIteration;__except0__.__cause__=null;throw __except0__;

UNION;
var form=ModelForm(request.POST,request.FILES);
var req=urllib.request.Request(url);
print(sys.maxsize);
dump_cell(sheet,rowx,colx);
var line_number=traceback.extract_tb(tb)[-1][1];
export var my_RDD_strings=sc.textFile(path_to_dir_with_JSON_files);
setattr(related_item,fk_field,obj);
redirect_to_login(path,login_url,redirect_field_name);
export var druhy=col[1].string.strip();
attrs;
self.rules=dict({});
axs.__getitem__([1,1]).imshow(im);
list(slot_combinations(A,B));

abe;
q.join();
method(self,...args,__kwargtrans__(kwargs));
ostream.write(...another_objects_list);
src.load();
exit(-1);

loop.run_until_complete(run());
Foo();
export var resultset=function(){var __accu0__=[];for(var row of res)__accu0__.append(dict(row));return __accu0__}();
var img=img_as_float(data.camera());
print(a);
sys.exit(1);
cython_module2.pyx;
var path=chg.path.slice();
var integer=int(totPrimes);
preverifyOK;
any(map(sb.__contains__,a));
tuple([service_id,monday,tuesday,wednesday,thursday,friday,saturday,sunday,start_date,end_date]);
var original=Image.open(original_path);
var curve=np.zeros(tuple([num,2]));
export var end_of_leader=s.index(leader)+len(leader);
hell;
loy;
ow;
owe;
ye;
var x=np.linspace(F_values_2[0],F_values_2[-1],100);
var n=len(L)-1;
var result=cursor.fetchone();
ast.literal_eval(s);
var start=pyqtSignal(str);
ctypes.memset(id(a)+offset,0,bufsize);
trace_call();
asyncio.run_until_complete(mock());
var i=5;
print(df1);
objworkbook.SaveAs(os.path.join(conv_scripts_dir,file_name));
var ax=plt.gca();
parent.__setslice__(0,null,null,sorted(parent,__kwargtrans__({key:function __lambda__(x){return x.tag}})));
self.mainLayout=QtGui.QVBoxLayout(self);
a.py;
var child=sp.Popen(openRTSP+opts.py_split(),__kwargtrans__({stdout:sp.PIPE}));
today-margin<=datetime.date(2011,1,15)&&datetime.date(2011,1,15)<=today+margin;
fr1.index=fr1.index.droplevel(0);
var __left0__=tee(iterable);var a=__left0__[0];var b=__left0__[1];
atexit.register(readline.write_history_file,histfile);
f(...args,__kwargtrans__(kw));
bar();
ax.add_line(line);
var __left0__=[1,2];var a=__left0__[0];var b=__left0__[1];
self.flush();
horizonPlot(xx,yy);
grid.Add(self.figure,__kwargtrans__({flag:wx.EXPAND}));
str.__init__(self,s);
var p=cs.collections[0].get_paths()[0];
repo.heads[branch].checkout();
row.delete();
export var n_b=a.shape[0]+len(index);
(function(){var __accu0__=[];for(var t of tokens)if(!__in__(t.lower(),stopwords))__accu0__.append(t);return __accu0__})();
print(lcl);
print(results);
main(sys.argv);
var pid=getmypid();
export var hrow=py_next(reader);
var a=wait.until(EC.text_to_be_present_in_element(By.YourBy));
plt.xlim(0,20);
a.py_keys()&b;

var the_data=request.get_json();
d[2]=c;
self.totalsize=os.path.getsize(filename);
tally[elem]+=1;
var size=self.GetSize();
export var fis=np.concatenate(tuple([np.linspace(-np.pi,np.pi,100),[np.nan]]));
var p=Process(__kwargtrans__({target:func,args:args,kwargs:kwargs}));
var times=arange(0,4,sample_rate);

var today=pd.datetime.today().date();
help(math.ceil);
a.method();
print(t._size());
p.setColor(w.backgroundRole(),Qt.red);
26;
export var g_filter=np.exp(-grid)/(2*np.pi*Math.pow(sigma,2));
export var OPTION_B=2;
self.assertTrue(isinstance(user.username,iunicode));
export var mykey=paramiko.RSAKey.from_private_key_file(privatekeyfile);
df>16;
cond_im.__setitem__([tuple([1,-1,1]),tuple([1,-1,1])],cond);
export var eq=Eq(Derivative(p(t),t),-a*p(t)+exp(-(a+b)*t));
var c=Cheese();
self.stdout=stdout;
true;
out.append(x);
exp(1E-5)-1;
var score=0;
print(max_times);
var r2=range(1,len(r)+1);
print(mult.multiply_(byref(a),byref(b)));
export var time_in_miliseconds=int(time_in_seconds*1E3);
QtGui.QDirModel.data(self,index,role);
var req=QtNetwork.QNetworkRequest();
result[I]=v1[I];
0;
A/=A.std();
(function(){var __accu0__=[];for(var x of string_list)__accu0__.append(time.ctime(float(x)));return __accu0__})();

var h=httplib.HTTPConnection(parsed.netloc);
consumed+=i;
max(py_new);
var f4=bytes_to_int(f4);
stuff();
var length=arr_view.shape[0];
var p=mp.Process(__kwargtrans__({target:count,kwargs:d}));
var a=5;
var c=np.any(img,__kwargtrans__({axis:tuple([0,2])}));
exit(0);
var i=random.choice(index);
L.append(L.popleft());
df;
var a=p.abspath(somepath);
var queryset=User.objects.all();
print(i);
set(nltk.wordpunct_tokenize(strin)).difference(sw);
r.text;
ax.stackplot(x,percent);
self._instance=instance;
var loop=asyncio.new_event_loop();
self.save();
results_q.put(ip);
var sidx=a.argsort();
columns_to_keep.append(i);
JM2.__setitem__([ii,ii,tuple([0,null,1])],0);
dstdraw.polygon(dst_tri,__kwargtrans__({fill:tuple([255,255,255])}));
var words=set(fp.read().py_split());
export var filler=len(string1)>len(string2)?string2[-1]:string1[-1];
instance.py_metatype=fkey;
print(cursor.description);
time.sleep(5);

var rows=[];
results.append(obj[0]);
c.append(f);
export var newEl=random.choice(l);
DELIMITER;
var groups=itertools.groupby(lst,function __lambda__(i){return i[0]});
var xx=np.hstack([-1*x.__getslice__(0,null,-1),x]);
result_s+=to_len;
var der=f.read();
set.union(...list(dd.py_values()));
result.__setitem__([i,j],data);
x[k]=multi_level_dict(...args.__getslice__(1,null,1));
self.weights=weights;
screenshot.show();
var line=pipe.readline();
foobar(p,x-y,baz());
x[nonzero]/=norms[nonzero];
dom.append(label);
var end_date=start_date+relativedelta(__kwargtrans__({days:1}));
timeout_handler();
var id_=sqlalchemy.Column(sqlalchemy.Integer,__kwargtrans__({primary_key:true}));
filenames.py_sort(__kwargtrans__({key:os.path.normcase}));
df.drop(list_of_values);
self.documents[i].setDocumentMargin(0);
var url=unquote(url);

var L=L.__getslice__(0,start,1)+L.__getslice__(end,null,1);
ar.append(value);
false;
x;
var a=Decimal(2);
A.method();
replacement.join(source.rsplit(target,replacements));
atexit.register(save_history);
t.trundle();
var lst=[A,B,C];
export var xchunk_gen=function(){var __accu0__=[];for(var i of range(0,len(x),chunk_size))__accu0__.append(x.__getslice__(i,i+chunk_size,1));return py_iter(__accu0__)}();
sgn*math.floor(abs(n)*factor)/factor;
var st=inspect.stack()[1];
solution_sets.append(set(new_solution));
birdsRemain-=1;
var serializer_class=SubscriptionSerializer;
export var xaxis=np.linspace(0,4,10);
var arr=np.array(img);
var line=fin.readline();
print(df2);
doSomething();
var image1=models.ImageField(__kwargtrans__({upload_to:images}));
export var dns_server=sys.argv[2];
i;
old_modules[py_name]=sys.modules.py_pop(py_name);

export var maskleft=np.where(np.isnan(a))[0];
var output=id_arr.cumsum();
decorator;
dictonary[k]=[i];
rows.append(row);
mommy+daddy;
var x=x.reshape(1,numCols);
var p1=perm1[loc];
sys.stdout=flushfile(sys.stdout);
pool.close();
out+=arr.__getitem__([tuple([1,-1,1]),tuple([2,null,1])]);
var b=random.randint(0,255);
var FACTORY_FOR=Post;
extractDefines(TEST1);
deleteself.thisptr;
export var conmut=tuple([tuple([a,b]),tuple([b,a])]);
var result=set();
minimum+(maximum-minimum)*random.random();
var data=np.hstack(tuple([xData,yData]));
y_test;
arr_win.__setitem__([tuple([0,null,1]),0],arr_cum.__getitem__([tuple([0,null,1]),n-1]));
index;
var train_op=control_flow_ops.with_dependencies([train_op],total_loss);
print(l);
(function(){var __accu0__=[];for(var item of l)if(!set(item).difference(s))__accu0__.append(item);return __accu0__})();
var application=webapp2.WSGIApplication(routes,__kwargtrans__({config:_config,debug:DEBUG}));
func;
